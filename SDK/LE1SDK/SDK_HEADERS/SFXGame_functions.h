/*
#############################################################################################
# Mass Effect 1 (Legendary Edition) (2.0.0.48602) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: SFXGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/


#pragma once
#include <Windows.h>
#include <cstdio>
#include "../SdkInitializer.h"



#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function SFXGame.BioDEBUGMarker.Clear
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioDEBUGMarker::eventClear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 52812 ];

	ABioDEBUGMarker_eventClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarker.AddMarker
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// int                            _size                          ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void ABioDEBUGMarker::eventAddMarker ( struct FVector _Start, int _size, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddMarker = NULL;

	if ( ! pFnAddMarker )
		pFnAddMarker = (UFunction*) UObject::GObjObjects()->Data[ 52806 ];

	ABioDEBUGMarker_eventAddMarker_Parms AddMarker_Parms;
	memcpy ( &AddMarker_Parms._Start, &_Start, 0xC );
	AddMarker_Parms._size = _size;
	AddMarker_Parms._R = _R;
	AddMarker_Parms._G = _G;
	AddMarker_Parms._B = _B;

	this->ProcessEvent ( pFnAddMarker, &AddMarker_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarker.AddLine
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// struct FVector                 _End                           ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void ABioDEBUGMarker::eventAddLine ( struct FVector _Start, struct FVector _End, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddLine = NULL;

	if ( ! pFnAddLine )
		pFnAddLine = (UFunction*) UObject::GObjObjects()->Data[ 52800 ];

	ABioDEBUGMarker_eventAddLine_Parms AddLine_Parms;
	memcpy ( &AddLine_Parms._Start, &_Start, 0xC );
	memcpy ( &AddLine_Parms._End, &_End, 0xC );
	AddLine_Parms._R = _R;
	AddLine_Parms._G = _G;
	AddLine_Parms._B = _B;

	this->ProcessEvent ( pFnAddLine, &AddLine_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarker.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioDEBUGMarker::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52798 ];

	ABioDEBUGMarker_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.ClearMarkers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClearMarkers ( )
{
	static UFunction* pFnClearMarkers = NULL;

	if ( ! pFnClearMarkers )
		pFnClearMarkers = (UFunction*) UObject::GObjObjects()->Data[ 52797 ];

	UBioDEBUGMarkerComponent_eventClearMarkers_Parms ClearMarkers_Parms;

	this->ProcessEvent ( pFnClearMarkers, &ClearMarkers_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.ClearCircles
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClearCircles ( )
{
	static UFunction* pFnClearCircles = NULL;

	if ( ! pFnClearCircles )
		pFnClearCircles = (UFunction*) UObject::GObjObjects()->Data[ 52796 ];

	UBioDEBUGMarkerComponent_eventClearCircles_Parms ClearCircles_Parms;

	this->ProcessEvent ( pFnClearCircles, &ClearCircles_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.ClearDiamonds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClearDiamonds ( )
{
	static UFunction* pFnClearDiamonds = NULL;

	if ( ! pFnClearDiamonds )
		pFnClearDiamonds = (UFunction*) UObject::GObjObjects()->Data[ 52795 ];

	UBioDEBUGMarkerComponent_eventClearDiamonds_Parms ClearDiamonds_Parms;

	this->ProcessEvent ( pFnClearDiamonds, &ClearDiamonds_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.ClearArrows
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClearArrows ( )
{
	static UFunction* pFnClearArrows = NULL;

	if ( ! pFnClearArrows )
		pFnClearArrows = (UFunction*) UObject::GObjObjects()->Data[ 52794 ];

	UBioDEBUGMarkerComponent_eventClearArrows_Parms ClearArrows_Parms;

	this->ProcessEvent ( pFnClearArrows, &ClearArrows_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.ClearLines
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClearLines ( )
{
	static UFunction* pFnClearLines = NULL;

	if ( ! pFnClearLines )
		pFnClearLines = (UFunction*) UObject::GObjObjects()->Data[ 52793 ];

	UBioDEBUGMarkerComponent_eventClearLines_Parms ClearLines_Parms;

	this->ProcessEvent ( pFnClearLines, &ClearLines_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.Clear
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioDEBUGMarkerComponent::eventClear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 52792 ];

	UBioDEBUGMarkerComponent_eventClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.AddCircles
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// int                            _size                          ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void UBioDEBUGMarkerComponent::eventAddCircles ( struct FVector _Start, int _size, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddCircles = NULL;

	if ( ! pFnAddCircles )
		pFnAddCircles = (UFunction*) UObject::GObjObjects()->Data[ 52785 ];

	UBioDEBUGMarkerComponent_eventAddCircles_Parms AddCircles_Parms;
	memcpy ( &AddCircles_Parms._Start, &_Start, 0xC );
	AddCircles_Parms._size = _size;
	AddCircles_Parms._R = _R;
	AddCircles_Parms._G = _G;
	AddCircles_Parms._B = _B;

	this->ProcessEvent ( pFnAddCircles, &AddCircles_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.AddDiamond
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// int                            _size                          ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void UBioDEBUGMarkerComponent::eventAddDiamond ( struct FVector _Start, int _size, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddDiamond = NULL;

	if ( ! pFnAddDiamond )
		pFnAddDiamond = (UFunction*) UObject::GObjObjects()->Data[ 52778 ];

	UBioDEBUGMarkerComponent_eventAddDiamond_Parms AddDiamond_Parms;
	memcpy ( &AddDiamond_Parms._Start, &_Start, 0xC );
	AddDiamond_Parms._size = _size;
	AddDiamond_Parms._R = _R;
	AddDiamond_Parms._G = _G;
	AddDiamond_Parms._B = _B;

	this->ProcessEvent ( pFnAddDiamond, &AddDiamond_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.AddMarker
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// int                            _size                          ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void UBioDEBUGMarkerComponent::eventAddMarker ( struct FVector _Start, int _size, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddMarker = NULL;

	if ( ! pFnAddMarker )
		pFnAddMarker = (UFunction*) UObject::GObjObjects()->Data[ 52771 ];

	UBioDEBUGMarkerComponent_eventAddMarker_Parms AddMarker_Parms;
	memcpy ( &AddMarker_Parms._Start, &_Start, 0xC );
	AddMarker_Parms._size = _size;
	AddMarker_Parms._R = _R;
	AddMarker_Parms._G = _G;
	AddMarker_Parms._B = _B;

	this->ProcessEvent ( pFnAddMarker, &AddMarker_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.AddArrows
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// struct FVector                 _End                           ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void UBioDEBUGMarkerComponent::eventAddArrows ( struct FVector _Start, struct FVector _End, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddArrows = NULL;

	if ( ! pFnAddArrows )
		pFnAddArrows = (UFunction*) UObject::GObjObjects()->Data[ 52764 ];

	UBioDEBUGMarkerComponent_eventAddArrows_Parms AddArrows_Parms;
	memcpy ( &AddArrows_Parms._Start, &_Start, 0xC );
	memcpy ( &AddArrows_Parms._End, &_End, 0xC );
	AddArrows_Parms._R = _R;
	AddArrows_Parms._G = _G;
	AddArrows_Parms._B = _B;

	this->ProcessEvent ( pFnAddArrows, &AddArrows_Parms, NULL );
};

// Function SFXGame.BioDEBUGMarkerComponent.AddLine
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 _Start                         ( CPF_Parm )
// struct FVector                 _End                           ( CPF_Parm )
// unsigned char                  _R                             ( CPF_Parm )
// unsigned char                  _G                             ( CPF_Parm )
// unsigned char                  _B                             ( CPF_Parm )

void UBioDEBUGMarkerComponent::eventAddLine ( struct FVector _Start, struct FVector _End, unsigned char _R, unsigned char _G, unsigned char _B )
{
	static UFunction* pFnAddLine = NULL;

	if ( ! pFnAddLine )
		pFnAddLine = (UFunction*) UObject::GObjObjects()->Data[ 52757 ];

	UBioDEBUGMarkerComponent_eventAddLine_Parms AddLine_Parms;
	memcpy ( &AddLine_Parms._Start, &_Start, 0xC );
	memcpy ( &AddLine_Parms._End, &_End, 0xC );
	AddLine_Parms._R = _R;
	AddLine_Parms._G = _G;
	AddLine_Parms._B = _B;

	this->ProcessEvent ( pFnAddLine, &AddLine_Parms, NULL );
};

// Function SFXGame.BioDamageType.SetDeathVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioDeathVFX*            pDeathVFX                      ( CPF_Parm )

void UBioDamageType::SetDeathVFX ( class UBioDeathVFX* pDeathVFX )
{
	static UFunction* pFnSetDeathVFX = NULL;

	if ( ! pFnSetDeathVFX )
		pFnSetDeathVFX = (UFunction*) UObject::GObjObjects()->Data[ 41361 ];

	UBioDamageType_execSetDeathVFX_Parms SetDeathVFX_Parms;
	SetDeathVFX_Parms.pDeathVFX = pDeathVFX;

	pFnSetDeathVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDeathVFX, &SetDeathVFX_Parms, NULL );

	pFnSetDeathVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioDamageType.GetDeathVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioDeathVFX*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioDeathVFX* UBioDamageType::GetDeathVFX ( )
{
	static UFunction* pFnGetDeathVFX = NULL;

	if ( ! pFnGetDeathVFX )
		pFnGetDeathVFX = (UFunction*) UObject::GObjObjects()->Data[ 40187 ];

	UBioDamageType_execGetDeathVFX_Parms GetDeathVFX_Parms;

	pFnGetDeathVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDeathVFX, &GetDeathVFX_Parms, NULL );

	pFnGetDeathVFX->FunctionFlags |= 0x400;

	return GetDeathVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDamageType.SetAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesDamage*    pAttributes                    ( CPF_Parm )

void UBioDamageType::SetAttributes ( class UBioAttributesDamage* pAttributes )
{
	static UFunction* pFnSetAttributes = NULL;

	if ( ! pFnSetAttributes )
		pFnSetAttributes = (UFunction*) UObject::GObjObjects()->Data[ 41359 ];

	UBioDamageType_execSetAttributes_Parms SetAttributes_Parms;
	SetAttributes_Parms.pAttributes = pAttributes;

	pFnSetAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAttributes, &SetAttributes_Parms, NULL );

	pFnSetAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioDamageType.GetAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesDamage*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioAttributesDamage* UBioDamageType::GetAttributes ( )
{
	static UFunction* pFnGetAttributes = NULL;

	if ( ! pFnGetAttributes )
		pFnGetAttributes = (UFunction*) UObject::GObjObjects()->Data[ 41357 ];

	UBioDamageType_execGetAttributes_Parms GetAttributes_Parms;

	pFnGetAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributes, &GetAttributes_Parms, NULL );

	pFnGetAttributes->FunctionFlags |= 0x400;

	return GetAttributes_Parms.ReturnValue;
};

// Function SFXGame.BioDamageType.InitializeDamageType
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesDamage*    pAttributes                    ( CPF_OptionalParm | CPF_Parm )
// class UBioDeathVFX*            pDeathVFX                      ( CPF_OptionalParm | CPF_Parm )

void UBioDamageType::InitializeDamageType ( class UBioAttributesDamage* pAttributes, class UBioDeathVFX* pDeathVFX )
{
	static UFunction* pFnInitializeDamageType = NULL;

	if ( ! pFnInitializeDamageType )
		pFnInitializeDamageType = (UFunction*) UObject::GObjObjects()->Data[ 41354 ];

	UBioDamageType_execInitializeDamageType_Parms InitializeDamageType_Parms;
	InitializeDamageType_Parms.pAttributes = pAttributes;
	InitializeDamageType_Parms.pDeathVFX = pDeathVFX;

	pFnInitializeDamageType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeDamageType, &InitializeDamageType_Parms, NULL );

	pFnInitializeDamageType->FunctionFlags |= 0x400;
};

// Function SFXGame.BioDestinationArrow.SetArrowColor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  clr                            ( CPF_Parm )

void ABioDestinationArrow::eventSetArrowColor ( unsigned char clr )
{
	static UFunction* pFnSetArrowColor = NULL;

	if ( ! pFnSetArrowColor )
		pFnSetArrowColor = (UFunction*) UObject::GObjObjects()->Data[ 52840 ];

	ABioDestinationArrow_eventSetArrowColor_Parms SetArrowColor_Parms;
	SetArrowColor_Parms.clr = clr;

	this->ProcessEvent ( pFnSetArrowColor, &SetArrowColor_Parms, NULL );
};

// Function SFXGame.BioEventDispatcher.Dispatch
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   oEventName                     ( CPF_Parm )

void UBioEventDispatcher::Dispatch ( struct FName oEventName )
{
	static UFunction* pFnDispatch = NULL;

	if ( ! pFnDispatch )
		pFnDispatch = (UFunction*) UObject::GObjObjects()->Data[ 45800 ];

	UBioEventDispatcher_execDispatch_Parms Dispatch_Parms;
	memcpy ( &Dispatch_Parms.oEventName, &oEventName, 0x8 );

	pFnDispatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDispatch, &Dispatch_Parms, NULL );

	pFnDispatch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventDispatcher.Unsubscribe
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   oEventName                     ( CPF_Parm )
// class UObject*                 oSubscriber                    ( CPF_Parm )

bool UBioEventDispatcher::Unsubscribe ( struct FName oEventName, class UObject* oSubscriber )
{
	static UFunction* pFnUnsubscribe = NULL;

	if ( ! pFnUnsubscribe )
		pFnUnsubscribe = (UFunction*) UObject::GObjObjects()->Data[ 45796 ];

	UBioEventDispatcher_execUnsubscribe_Parms Unsubscribe_Parms;
	memcpy ( &Unsubscribe_Parms.oEventName, &oEventName, 0x8 );
	Unsubscribe_Parms.oSubscriber = oSubscriber;

	pFnUnsubscribe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnsubscribe, &Unsubscribe_Parms, NULL );

	pFnUnsubscribe->FunctionFlags |= 0x400;

	return Unsubscribe_Parms.ReturnValue;
};

// Function SFXGame.BioEventDispatcher.Subscribe
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   oEventName                     ( CPF_Parm )
// class UObject*                 oSubscriber                    ( CPF_Parm )

bool UBioEventDispatcher::Subscribe ( struct FName oEventName, class UObject* oSubscriber )
{
	static UFunction* pFnSubscribe = NULL;

	if ( ! pFnSubscribe )
		pFnSubscribe = (UFunction*) UObject::GObjObjects()->Data[ 45792 ];

	UBioEventDispatcher_execSubscribe_Parms Subscribe_Parms;
	memcpy ( &Subscribe_Parms.oEventName, &oEventName, 0x8 );
	Subscribe_Parms.oSubscriber = oSubscriber;

	pFnSubscribe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSubscribe, &Subscribe_Parms, NULL );

	pFnSubscribe->FunctionFlags |= 0x400;

	return Subscribe_Parms.ReturnValue;
};

// Function SFXGame.BioGameReplicationInfo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ABioGameReplicationInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53956 ];

	ABioGameReplicationInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioGamerProfile.UpdateRichPresence
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::UpdateRichPresence ( )
{
	static UFunction* pFnUpdateRichPresence = NULL;

	if ( ! pFnUpdateRichPresence )
		pFnUpdateRichPresence = (UFunction*) UObject::GObjObjects()->Data[ 49047 ];

	UBioGamerProfile_execUpdateRichPresence_Parms UpdateRichPresence_Parms;

	pFnUpdateRichPresence->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateRichPresence, &UpdateRichPresence_Parms, NULL );

	pFnUpdateRichPresence->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.UpdateSoundOptions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::UpdateSoundOptions ( )
{
	static UFunction* pFnUpdateSoundOptions = NULL;

	if ( ! pFnUpdateSoundOptions )
		pFnUpdateSoundOptions = (UFunction*) UObject::GObjObjects()->Data[ 49046 ];

	UBioGamerProfile_execUpdateSoundOptions_Parms UpdateSoundOptions_Parms;

	pFnUpdateSoundOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSoundOptions, &UpdateSoundOptions_Parms, NULL );

	pFnUpdateSoundOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.ApplyGraphicsOptions
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            Options                        ( CPF_Parm )

void UBioGamerProfile::ApplyGraphicsOptions ( struct FGameOptions Options )
{
	static UFunction* pFnApplyGraphicsOptions = NULL;

	if ( ! pFnApplyGraphicsOptions )
		pFnApplyGraphicsOptions = (UFunction*) UObject::GObjObjects()->Data[ 49044 ];

	UBioGamerProfile_execApplyGraphicsOptions_Parms ApplyGraphicsOptions_Parms;
	memcpy ( &ApplyGraphicsOptions_Parms.Options, &Options, 0xB0 );

	pFnApplyGraphicsOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyGraphicsOptions, &ApplyGraphicsOptions_Parms, NULL );

	pFnApplyGraphicsOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.UpdateGraphicsOptions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::UpdateGraphicsOptions ( )
{
	static UFunction* pFnUpdateGraphicsOptions = NULL;

	if ( ! pFnUpdateGraphicsOptions )
		pFnUpdateGraphicsOptions = (UFunction*) UObject::GObjObjects()->Data[ 49043 ];

	UBioGamerProfile_execUpdateGraphicsOptions_Parms UpdateGraphicsOptions_Parms;

	pFnUpdateGraphicsOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGraphicsOptions, &UpdateGraphicsOptions_Parms, NULL );

	pFnUpdateGraphicsOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.UpdateAllOptions
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bUpdateRichPresence            ( CPF_OptionalParm | CPF_Parm )

void UBioGamerProfile::UpdateAllOptions ( unsigned long bUpdateRichPresence )
{
	static UFunction* pFnUpdateAllOptions = NULL;

	if ( ! pFnUpdateAllOptions )
		pFnUpdateAllOptions = (UFunction*) UObject::GObjObjects()->Data[ 49041 ];

	UBioGamerProfile_execUpdateAllOptions_Parms UpdateAllOptions_Parms;
	UpdateAllOptions_Parms.bUpdateRichPresence = bUpdateRichPresence;

	pFnUpdateAllOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAllOptions, &UpdateAllOptions_Parms, NULL );

	pFnUpdateAllOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.DuplicateGameOptions
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FGameOptions            destOptions                    ( CPF_Parm | CPF_OutParm )

void UBioGamerProfile::eventDuplicateGameOptions ( struct FGameOptions* destOptions )
{
	static UFunction* pFnDuplicateGameOptions = NULL;

	if ( ! pFnDuplicateGameOptions )
		pFnDuplicateGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 49039 ];

	UBioGamerProfile_eventDuplicateGameOptions_Parms DuplicateGameOptions_Parms;

	this->ProcessEvent ( pFnDuplicateGameOptions, &DuplicateGameOptions_Parms, NULL );

	if ( destOptions )
		memcpy ( destOptions, &DuplicateGameOptions_Parms.destOptions, 0xB0 );
};

// Function SFXGame.BioGamerProfile.OverwiteGameOptions
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FGameOptions            sourceOptions                  ( CPF_Parm )
// unsigned long                  bUpdateRichPresence            ( CPF_OptionalParm | CPF_Parm )

void UBioGamerProfile::eventOverwiteGameOptions ( struct FGameOptions sourceOptions, unsigned long bUpdateRichPresence )
{
	static UFunction* pFnOverwiteGameOptions = NULL;

	if ( ! pFnOverwiteGameOptions )
		pFnOverwiteGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 49036 ];

	UBioGamerProfile_eventOverwiteGameOptions_Parms OverwiteGameOptions_Parms;
	memcpy ( &OverwiteGameOptions_Parms.sourceOptions, &sourceOptions, 0xB0 );
	OverwiteGameOptions_Parms.bUpdateRichPresence = bUpdateRichPresence;

	this->ProcessEvent ( pFnOverwiteGameOptions, &OverwiteGameOptions_Parms, NULL );
};

// Function SFXGame.BioGamerProfile.GetTargetingAssistModifier
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioGamerProfile::GetTargetingAssistModifier ( )
{
	static UFunction* pFnGetTargetingAssistModifier = NULL;

	if ( ! pFnGetTargetingAssistModifier )
		pFnGetTargetingAssistModifier = (UFunction*) UObject::GObjObjects()->Data[ 49034 ];

	UBioGamerProfile_execGetTargetingAssistModifier_Parms GetTargetingAssistModifier_Parms;

	pFnGetTargetingAssistModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetingAssistModifier, &GetTargetingAssistModifier_Parms, NULL );

	pFnGetTargetingAssistModifier->FunctionFlags |= 0x400;

	return GetTargetingAssistModifier_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetOptionEx
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            io_oGameOptions                ( CPF_Parm )
// int                            i_nOptionType                  ( CPF_Parm )
// int                            i_nOptionValue                 ( CPF_Parm | CPF_OutParm )

void UBioGamerProfile::GetOptionEx ( struct FGameOptions io_oGameOptions, int i_nOptionType, int* i_nOptionValue )
{
	static UFunction* pFnGetOptionEx = NULL;

	if ( ! pFnGetOptionEx )
		pFnGetOptionEx = (UFunction*) UObject::GObjObjects()->Data[ 49030 ];

	UBioGamerProfile_execGetOptionEx_Parms GetOptionEx_Parms;
	memcpy ( &GetOptionEx_Parms.io_oGameOptions, &io_oGameOptions, 0xB0 );
	GetOptionEx_Parms.i_nOptionType = i_nOptionType;

	pFnGetOptionEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOptionEx, &GetOptionEx_Parms, NULL );

	pFnGetOptionEx->FunctionFlags |= 0x400;

	if ( i_nOptionValue )
		*i_nOptionValue = GetOptionEx_Parms.i_nOptionValue;
};

// Function SFXGame.BioGamerProfile.GetOption
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            i_nOptionType                  ( CPF_Parm )
// int                            i_nOptionValue                 ( CPF_Parm | CPF_OutParm )

void UBioGamerProfile::GetOption ( int i_nOptionType, int* i_nOptionValue )
{
	static UFunction* pFnGetOption = NULL;

	if ( ! pFnGetOption )
		pFnGetOption = (UFunction*) UObject::GObjObjects()->Data[ 49027 ];

	UBioGamerProfile_execGetOption_Parms GetOption_Parms;
	GetOption_Parms.i_nOptionType = i_nOptionType;

	pFnGetOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOption, &GetOption_Parms, NULL );

	pFnGetOption->FunctionFlags |= 0x400;

	if ( i_nOptionValue )
		*i_nOptionValue = GetOption_Parms.i_nOptionValue;
};

// Function SFXGame.BioGamerProfile.SetOptionEx
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            i_nOptionType                  ( CPF_Parm )
// int                            i_nOptionValue                 ( CPF_Parm )
// unsigned long                  i_bSuppressUpdate              ( CPF_Parm )
// struct FGameOptions            io_oGameOptions                ( CPF_Parm | CPF_OutParm )

void UBioGamerProfile::SetOptionEx ( int i_nOptionType, int i_nOptionValue, unsigned long i_bSuppressUpdate, struct FGameOptions* io_oGameOptions )
{
	static UFunction* pFnSetOptionEx = NULL;

	if ( ! pFnSetOptionEx )
		pFnSetOptionEx = (UFunction*) UObject::GObjObjects()->Data[ 49022 ];

	UBioGamerProfile_execSetOptionEx_Parms SetOptionEx_Parms;
	SetOptionEx_Parms.i_nOptionType = i_nOptionType;
	SetOptionEx_Parms.i_nOptionValue = i_nOptionValue;
	SetOptionEx_Parms.i_bSuppressUpdate = i_bSuppressUpdate;

	pFnSetOptionEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOptionEx, &SetOptionEx_Parms, NULL );

	pFnSetOptionEx->FunctionFlags |= 0x400;

	if ( io_oGameOptions )
		memcpy ( io_oGameOptions, &SetOptionEx_Parms.io_oGameOptions, 0xB0 );
};

// Function SFXGame.BioGamerProfile.SetOption
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nOptionType                  ( CPF_Parm )
// int                            i_nOptionValue                 ( CPF_Parm )
// unsigned long                  i_bSuppressUpdate              ( CPF_Parm )

void UBioGamerProfile::SetOption ( int i_nOptionType, int i_nOptionValue, unsigned long i_bSuppressUpdate )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = (UFunction*) UObject::GObjObjects()->Data[ 49018 ];

	UBioGamerProfile_execSetOption_Parms SetOption_Parms;
	SetOption_Parms.i_nOptionType = i_nOptionType;
	SetOption_Parms.i_nOptionValue = i_nOptionValue;
	SetOption_Parms.i_bSuppressUpdate = i_bSuppressUpdate;

	pFnSetOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );

	pFnSetOption->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetCombatDifficulty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetCombatDifficulty ( )
{
	static UFunction* pFnGetCombatDifficulty = NULL;

	if ( ! pFnGetCombatDifficulty )
		pFnGetCombatDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 49016 ];

	UBioGamerProfile_execGetCombatDifficulty_Parms GetCombatDifficulty_Parms;

	pFnGetCombatDifficulty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCombatDifficulty, &GetCombatDifficulty_Parms, NULL );

	pFnGetCombatDifficulty->FunctionFlags |= 0x400;

	return GetCombatDifficulty_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetCombatDifficulty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_Template                     ( CPF_Parm )

void UBioGamerProfile::SetCombatDifficulty ( int i_Template )
{
	static UFunction* pFnSetCombatDifficulty = NULL;

	if ( ! pFnSetCombatDifficulty )
		pFnSetCombatDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 49014 ];

	UBioGamerProfile_execSetCombatDifficulty_Parms SetCombatDifficulty_Parms;
	SetCombatDifficulty_Parms.i_Template = i_Template;

	pFnSetCombatDifficulty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCombatDifficulty, &SetCombatDifficulty_Parms, NULL );

	pFnSetCombatDifficulty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.DumpAchievementStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::DumpAchievementStats ( )
{
	static UFunction* pFnDumpAchievementStats = NULL;

	if ( ! pFnDumpAchievementStats )
		pFnDumpAchievementStats = (UFunction*) UObject::GObjObjects()->Data[ 49013 ];

	UBioGamerProfile_execDumpAchievementStats_Parms DumpAchievementStats_Parms;

	pFnDumpAchievementStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDumpAchievementStats, &DumpAchievementStats_Parms, NULL );

	pFnDumpAchievementStats->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetGammaPostProcessTemplate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetGammaPostProcessTemplate ( )
{
	static UFunction* pFnGetGammaPostProcessTemplate = NULL;

	if ( ! pFnGetGammaPostProcessTemplate )
		pFnGetGammaPostProcessTemplate = (UFunction*) UObject::GObjObjects()->Data[ 49011 ];

	UBioGamerProfile_execGetGammaPostProcessTemplate_Parms GetGammaPostProcessTemplate_Parms;

	pFnGetGammaPostProcessTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGammaPostProcessTemplate, &GetGammaPostProcessTemplate_Parms, NULL );

	pFnGetGammaPostProcessTemplate->FunctionFlags |= 0x400;

	return GetGammaPostProcessTemplate_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetGammaPostProcessTemplate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_Template                     ( CPF_Parm )

void UBioGamerProfile::SetGammaPostProcessTemplate ( int i_Template )
{
	static UFunction* pFnSetGammaPostProcessTemplate = NULL;

	if ( ! pFnSetGammaPostProcessTemplate )
		pFnSetGammaPostProcessTemplate = (UFunction*) UObject::GObjObjects()->Data[ 49009 ];

	UBioGamerProfile_execSetGammaPostProcessTemplate_Parms SetGammaPostProcessTemplate_Parms;
	SetGammaPostProcessTemplate_Parms.i_Template = i_Template;

	pFnSetGammaPostProcessTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGammaPostProcessTemplate, &SetGammaPostProcessTemplate_Parms, NULL );

	pFnSetGammaPostProcessTemplate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.SelectDefaultStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::SelectDefaultStorageDevice ( )
{
	static UFunction* pFnSelectDefaultStorageDevice = NULL;

	if ( ! pFnSelectDefaultStorageDevice )
		pFnSelectDefaultStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 49008 ];

	UBioGamerProfile_execSelectDefaultStorageDevice_Parms SelectDefaultStorageDevice_Parms;

	pFnSelectDefaultStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectDefaultStorageDevice, &SelectDefaultStorageDevice_Parms, NULL );

	pFnSelectDefaultStorageDevice->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetDefaultStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetDefaultStorageDevice ( )
{
	static UFunction* pFnGetDefaultStorageDevice = NULL;

	if ( ! pFnGetDefaultStorageDevice )
		pFnGetDefaultStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 49006 ];

	UBioGamerProfile_execGetDefaultStorageDevice_Parms GetDefaultStorageDevice_Parms;

	pFnGetDefaultStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultStorageDevice, &GetDefaultStorageDevice_Parms, NULL );

	pFnGetDefaultStorageDevice->FunctionFlags |= 0x400;

	return GetDefaultStorageDevice_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetDefaultStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_DeviceId                     ( CPF_Parm )

void UBioGamerProfile::SetDefaultStorageDevice ( int i_DeviceId )
{
	static UFunction* pFnSetDefaultStorageDevice = NULL;

	if ( ! pFnSetDefaultStorageDevice )
		pFnSetDefaultStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 49004 ];

	UBioGamerProfile_execSetDefaultStorageDevice_Parms SetDefaultStorageDevice_Parms;
	SetDefaultStorageDevice_Parms.i_DeviceId = i_DeviceId;

	pFnSetDefaultStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDefaultStorageDevice, &SetDefaultStorageDevice_Parms, NULL );

	pFnSetDefaultStorageDevice->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetBioProfileStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetBioProfileStorageDevice ( )
{
	static UFunction* pFnGetBioProfileStorageDevice = NULL;

	if ( ! pFnGetBioProfileStorageDevice )
		pFnGetBioProfileStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 49002 ];

	UBioGamerProfile_execGetBioProfileStorageDevice_Parms GetBioProfileStorageDevice_Parms;

	pFnGetBioProfileStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBioProfileStorageDevice, &GetBioProfileStorageDevice_Parms, NULL );

	pFnGetBioProfileStorageDevice->FunctionFlags |= 0x400;

	return GetBioProfileStorageDevice_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetBioProfileStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_DeviceId                     ( CPF_Parm )

void UBioGamerProfile::SetBioProfileStorageDevice ( int i_DeviceId )
{
	static UFunction* pFnSetBioProfileStorageDevice = NULL;

	if ( ! pFnSetBioProfileStorageDevice )
		pFnSetBioProfileStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 49000 ];

	UBioGamerProfile_execSetBioProfileStorageDevice_Parms SetBioProfileStorageDevice_Parms;
	SetBioProfileStorageDevice_Parms.i_DeviceId = i_DeviceId;

	pFnSetBioProfileStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBioProfileStorageDevice, &SetBioProfileStorageDevice_Parms, NULL );

	pFnSetBioProfileStorageDevice->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.SetYAxisInverted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bInverted                      ( CPF_Parm )

void UBioGamerProfile::SetYAxisInverted ( unsigned long bInverted )
{
	static UFunction* pFnSetYAxisInverted = NULL;

	if ( ! pFnSetYAxisInverted )
		pFnSetYAxisInverted = (UFunction*) UObject::GObjObjects()->Data[ 48998 ];

	UBioGamerProfile_execSetYAxisInverted_Parms SetYAxisInverted_Parms;
	SetYAxisInverted_Parms.bInverted = bInverted;

	pFnSetYAxisInverted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetYAxisInverted, &SetYAxisInverted_Parms, NULL );

	pFnSetYAxisInverted->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetYAxisInverted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioGamerProfile::GetYAxisInverted ( )
{
	static UFunction* pFnGetYAxisInverted = NULL;

	if ( ! pFnGetYAxisInverted )
		pFnGetYAxisInverted = (UFunction*) UObject::GObjObjects()->Data[ 48996 ];

	UBioGamerProfile_execGetYAxisInverted_Parms GetYAxisInverted_Parms;

	pFnGetYAxisInverted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetYAxisInverted, &GetYAxisInverted_Parms, NULL );

	pFnGetYAxisInverted->FunctionFlags |= 0x400;

	return GetYAxisInverted_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetAllUnlockedBonusTalentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmCharClass                    ( CPF_Parm )
// struct TArray<struct FUnlockedBonusTalentInfo> aUnlockedBonusTalentInfo       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioGamerProfile::GetAllUnlockedBonusTalentInfo ( struct FName nmCharClass, struct TArray<struct FUnlockedBonusTalentInfo>* aUnlockedBonusTalentInfo )
{
	static UFunction* pFnGetAllUnlockedBonusTalentInfo = NULL;

	if ( ! pFnGetAllUnlockedBonusTalentInfo )
		pFnGetAllUnlockedBonusTalentInfo = (UFunction*) UObject::GObjObjects()->Data[ 48992 ];

	UBioGamerProfile_execGetAllUnlockedBonusTalentInfo_Parms GetAllUnlockedBonusTalentInfo_Parms;
	memcpy ( &GetAllUnlockedBonusTalentInfo_Parms.nmCharClass, &nmCharClass, 0x8 );

	pFnGetAllUnlockedBonusTalentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllUnlockedBonusTalentInfo, &GetAllUnlockedBonusTalentInfo_Parms, NULL );

	pFnGetAllUnlockedBonusTalentInfo->FunctionFlags |= 0x400;

	if ( aUnlockedBonusTalentInfo )
		memcpy ( aUnlockedBonusTalentInfo, &GetAllUnlockedBonusTalentInfo_Parms.aUnlockedBonusTalentInfo, 0x10 );
};

// Function SFXGame.BioGamerProfile.AwardAllPassiveBonusTalents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamerProfile::AwardAllPassiveBonusTalents ( )
{
	static UFunction* pFnAwardAllPassiveBonusTalents = NULL;

	if ( ! pFnAwardAllPassiveBonusTalents )
		pFnAwardAllPassiveBonusTalents = (UFunction*) UObject::GObjObjects()->Data[ 48991 ];

	UBioGamerProfile_execAwardAllPassiveBonusTalents_Parms AwardAllPassiveBonusTalents_Parms;

	pFnAwardAllPassiveBonusTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardAllPassiveBonusTalents, &AwardAllPassiveBonusTalents_Parms, NULL );

	pFnAwardAllPassiveBonusTalents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.UpdateAchievementState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nAchievementID                 ( CPF_Parm )
// unsigned long                  bEarned                        ( CPF_Parm )
// unsigned long                  bUpdatePlotState               ( CPF_Parm )
// unsigned long                  bAwardBonusTalent              ( CPF_Parm )
// unsigned long                  bSaveProfile                   ( CPF_OptionalParm | CPF_Parm )

void UBioGamerProfile::UpdateAchievementState ( int nAchievementID, unsigned long bEarned, unsigned long bUpdatePlotState, unsigned long bAwardBonusTalent, unsigned long bSaveProfile )
{
	static UFunction* pFnUpdateAchievementState = NULL;

	if ( ! pFnUpdateAchievementState )
		pFnUpdateAchievementState = (UFunction*) UObject::GObjObjects()->Data[ 48985 ];

	UBioGamerProfile_execUpdateAchievementState_Parms UpdateAchievementState_Parms;
	UpdateAchievementState_Parms.nAchievementID = nAchievementID;
	UpdateAchievementState_Parms.bEarned = bEarned;
	UpdateAchievementState_Parms.bUpdatePlotState = bUpdatePlotState;
	UpdateAchievementState_Parms.bAwardBonusTalent = bAwardBonusTalent;
	UpdateAchievementState_Parms.bSaveProfile = bSaveProfile;

	pFnUpdateAchievementState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAchievementState, &UpdateAchievementState_Parms, NULL );

	pFnUpdateAchievementState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetDefaultValues
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            io_Options                     ( CPF_Parm | CPF_OutParm )

void UBioGamerProfile::GetDefaultValues ( struct FGameOptions* io_Options )
{
	static UFunction* pFnGetDefaultValues = NULL;

	if ( ! pFnGetDefaultValues )
		pFnGetDefaultValues = (UFunction*) UObject::GObjObjects()->Data[ 48983 ];

	UBioGamerProfile_execGetDefaultValues_Parms GetDefaultValues_Parms;

	pFnGetDefaultValues->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultValues, &GetDefaultValues_Parms, NULL );

	pFnGetDefaultValues->FunctionFlags |= 0x400;

	if ( io_Options )
		memcpy ( io_Options, &GetDefaultValues_Parms.io_Options, 0xB0 );
};

// Function SFXGame.BioGamerProfile.ResetToDefaults
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bUpdateRichPresence            ( CPF_OptionalParm | CPF_Parm )

void UBioGamerProfile::ResetToDefaults ( unsigned long bUpdateRichPresence )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 48981 ];

	UBioGamerProfile_execResetToDefaults_Parms ResetToDefaults_Parms;
	ResetToDefaults_Parms.bUpdateRichPresence = bUpdateRichPresence;

	pFnResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );

	pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.SortAchievementInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FAchievementInfo> aAchievementList               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioGamerProfile::SortAchievementInfo ( struct TArray<struct FAchievementInfo>* aAchievementList )
{
	static UFunction* pFnSortAchievementInfo = NULL;

	if ( ! pFnSortAchievementInfo )
		pFnSortAchievementInfo = (UFunction*) UObject::GObjObjects()->Data[ 48978 ];

	UBioGamerProfile_execSortAchievementInfo_Parms SortAchievementInfo_Parms;

	pFnSortAchievementInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSortAchievementInfo, &SortAchievementInfo_Parms, NULL );

	pFnSortAchievementInfo->FunctionFlags |= 0x400;

	if ( aAchievementList )
		memcpy ( aAchievementList, &SortAchievementInfo_Parms.aAchievementList, 0x10 );
};

// Function SFXGame.BioGamerProfile.GetAllAchievementInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FAchievementInfo> aAchievementList               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioGamerProfile::GetAllAchievementInfo ( struct TArray<struct FAchievementInfo>* aAchievementList )
{
	static UFunction* pFnGetAllAchievementInfo = NULL;

	if ( ! pFnGetAllAchievementInfo )
		pFnGetAllAchievementInfo = (UFunction*) UObject::GObjObjects()->Data[ 48975 ];

	UBioGamerProfile_execGetAllAchievementInfo_Parms GetAllAchievementInfo_Parms;

	pFnGetAllAchievementInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllAchievementInfo, &GetAllAchievementInfo_Parms, NULL );

	pFnGetAllAchievementInfo->FunctionFlags |= 0x400;

	if ( aAchievementList )
		memcpy ( aAchievementList, &GetAllAchievementInfo_Parms.aAchievementList, 0x10 );
};

// Function SFXGame.BioGamerProfile.GetAchievementID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int UBioGamerProfile::GetAchievementID ( int Index )
{
	static UFunction* pFnGetAchievementID = NULL;

	if ( ! pFnGetAchievementID )
		pFnGetAchievementID = (UFunction*) UObject::GObjObjects()->Data[ 48972 ];

	UBioGamerProfile_execGetAchievementID_Parms GetAchievementID_Parms;
	GetAchievementID_Parms.Index = Index;

	pFnGetAchievementID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAchievementID, &GetAchievementID_Parms, NULL );

	pFnGetAchievementID->FunctionFlags |= 0x400;

	return GetAchievementID_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetIsAchievementEarned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )

bool UBioGamerProfile::GetIsAchievementEarned ( int AchievementId )
{
	static UFunction* pFnGetIsAchievementEarned = NULL;

	if ( ! pFnGetIsAchievementEarned )
		pFnGetIsAchievementEarned = (UFunction*) UObject::GObjObjects()->Data[ 48969 ];

	UBioGamerProfile_execGetIsAchievementEarned_Parms GetIsAchievementEarned_Parms;
	GetIsAchievementEarned_Parms.AchievementId = AchievementId;

	pFnGetIsAchievementEarned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsAchievementEarned, &GetIsAchievementEarned_Parms, NULL );

	pFnGetIsAchievementEarned->FunctionFlags |= 0x400;

	return GetIsAchievementEarned_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.UpdateAchievements
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FAchievementDetails> Achievements                   ( CPF_Parm | CPF_NeedCtorLink )
// class ABioPlayerController*    PC                             ( CPF_Parm )

void UBioGamerProfile::UpdateAchievements ( struct TArray<struct FAchievementDetails> Achievements, class ABioPlayerController* PC )
{
	static UFunction* pFnUpdateAchievements = NULL;

	if ( ! pFnUpdateAchievements )
		pFnUpdateAchievements = (UFunction*) UObject::GObjObjects()->Data[ 48965 ];

	UBioGamerProfile_execUpdateAchievements_Parms UpdateAchievements_Parms;
	memcpy ( &UpdateAchievements_Parms.Achievements, &Achievements, 0x10 );
	UpdateAchievements_Parms.PC = PC;

	pFnUpdateAchievements->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAchievements, &UpdateAchievements_Parms, NULL );

	pFnUpdateAchievements->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.UpdateCharacterProfilePawnDataEx
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                i_playerPawn                   ( CPF_Parm )
// unsigned long                  i_bUpdateFirstName             ( CPF_Parm )
// int                            i_oHoursPlayed                 ( CPF_Parm )
// int                            i_oMinPlayed                   ( CPF_Parm )
// int                            i_oSecPlayed                   ( CPF_Parm )
// struct FCharacterProfile       sCharProfile                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioGamerProfile::UpdateCharacterProfilePawnDataEx ( class ABioPawn* i_playerPawn, unsigned long i_bUpdateFirstName, int i_oHoursPlayed, int i_oMinPlayed, int i_oSecPlayed, struct FCharacterProfile* sCharProfile )
{
	static UFunction* pFnUpdateCharacterProfilePawnDataEx = NULL;

	if ( ! pFnUpdateCharacterProfilePawnDataEx )
		pFnUpdateCharacterProfilePawnDataEx = (UFunction*) UObject::GObjObjects()->Data[ 48957 ];

	UBioGamerProfile_execUpdateCharacterProfilePawnDataEx_Parms UpdateCharacterProfilePawnDataEx_Parms;
	UpdateCharacterProfilePawnDataEx_Parms.i_playerPawn = i_playerPawn;
	UpdateCharacterProfilePawnDataEx_Parms.i_bUpdateFirstName = i_bUpdateFirstName;
	UpdateCharacterProfilePawnDataEx_Parms.i_oHoursPlayed = i_oHoursPlayed;
	UpdateCharacterProfilePawnDataEx_Parms.i_oMinPlayed = i_oMinPlayed;
	UpdateCharacterProfilePawnDataEx_Parms.i_oSecPlayed = i_oSecPlayed;

	pFnUpdateCharacterProfilePawnDataEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterProfilePawnDataEx, &UpdateCharacterProfilePawnDataEx_Parms, NULL );

	pFnUpdateCharacterProfilePawnDataEx->FunctionFlags |= 0x400;

	if ( sCharProfile )
		memcpy ( sCharProfile, &UpdateCharacterProfilePawnDataEx_Parms.sCharProfile, 0xBC );

	return UpdateCharacterProfilePawnDataEx_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.UpdateCharacterProfilePawnData
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacterID                   ( CPF_Parm | CPF_NeedCtorLink )
// class ABioPawn*                i_playerPawn                   ( CPF_Parm )
// int                            i_oHoursPlayed                 ( CPF_Parm )
// int                            i_oMinPlayed                   ( CPF_Parm )
// int                            i_oSecPlayed                   ( CPF_Parm )
// unsigned long                  i_bUpdateFirstName             ( CPF_OptionalParm | CPF_Parm )

bool UBioGamerProfile::UpdateCharacterProfilePawnData ( struct FString sCharacterID, class ABioPawn* i_playerPawn, int i_oHoursPlayed, int i_oMinPlayed, int i_oSecPlayed, unsigned long i_bUpdateFirstName )
{
	static UFunction* pFnUpdateCharacterProfilePawnData = NULL;

	if ( ! pFnUpdateCharacterProfilePawnData )
		pFnUpdateCharacterProfilePawnData = (UFunction*) UObject::GObjObjects()->Data[ 48949 ];

	UBioGamerProfile_execUpdateCharacterProfilePawnData_Parms UpdateCharacterProfilePawnData_Parms;
	memcpy ( &UpdateCharacterProfilePawnData_Parms.sCharacterID, &sCharacterID, 0x10 );
	UpdateCharacterProfilePawnData_Parms.i_playerPawn = i_playerPawn;
	UpdateCharacterProfilePawnData_Parms.i_oHoursPlayed = i_oHoursPlayed;
	UpdateCharacterProfilePawnData_Parms.i_oMinPlayed = i_oMinPlayed;
	UpdateCharacterProfilePawnData_Parms.i_oSecPlayed = i_oSecPlayed;
	UpdateCharacterProfilePawnData_Parms.i_bUpdateFirstName = i_bUpdateFirstName;

	pFnUpdateCharacterProfilePawnData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterProfilePawnData, &UpdateCharacterProfilePawnData_Parms, NULL );

	pFnUpdateCharacterProfilePawnData->FunctionFlags |= 0x400;

	return UpdateCharacterProfilePawnData_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.DeleteCharacterProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacterID                   ( CPF_Parm | CPF_NeedCtorLink )

bool UBioGamerProfile::DeleteCharacterProfile ( struct FString sCharacterID )
{
	static UFunction* pFnDeleteCharacterProfile = NULL;

	if ( ! pFnDeleteCharacterProfile )
		pFnDeleteCharacterProfile = (UFunction*) UObject::GObjObjects()->Data[ 48946 ];

	UBioGamerProfile_execDeleteCharacterProfile_Parms DeleteCharacterProfile_Parms;
	memcpy ( &DeleteCharacterProfile_Parms.sCharacterID, &sCharacterID, 0x10 );

	pFnDeleteCharacterProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteCharacterProfile, &DeleteCharacterProfile_Parms, NULL );

	pFnDeleteCharacterProfile->FunctionFlags |= 0x400;

	return DeleteCharacterProfile_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetCharacterProfileIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacterID                   ( CPF_Parm | CPF_NeedCtorLink )

int UBioGamerProfile::GetCharacterProfileIndex ( struct FString sCharacterID )
{
	static UFunction* pFnGetCharacterProfileIndex = NULL;

	if ( ! pFnGetCharacterProfileIndex )
		pFnGetCharacterProfileIndex = (UFunction*) UObject::GObjObjects()->Data[ 48943 ];

	UBioGamerProfile_execGetCharacterProfileIndex_Parms GetCharacterProfileIndex_Parms;
	memcpy ( &GetCharacterProfileIndex_Parms.sCharacterID, &sCharacterID, 0x10 );

	pFnGetCharacterProfileIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterProfileIndex, &GetCharacterProfileIndex_Parms, NULL );

	pFnGetCharacterProfileIndex->FunctionFlags |= 0x400;

	return GetCharacterProfileIndex_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetCharacterProfile
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCharacterID                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FCharacterProfile       i_CharProfile                  ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  i_bAddProfileIfNotExist        ( CPF_OptionalParm | CPF_Parm )

void UBioGamerProfile::SetCharacterProfile ( struct FString sCharacterID, struct FCharacterProfile i_CharProfile, unsigned long i_bAddProfileIfNotExist )
{
	static UFunction* pFnSetCharacterProfile = NULL;

	if ( ! pFnSetCharacterProfile )
		pFnSetCharacterProfile = (UFunction*) UObject::GObjObjects()->Data[ 48939 ];

	UBioGamerProfile_execSetCharacterProfile_Parms SetCharacterProfile_Parms;
	memcpy ( &SetCharacterProfile_Parms.sCharacterID, &sCharacterID, 0x10 );
	memcpy ( &SetCharacterProfile_Parms.i_CharProfile, &i_CharProfile, 0xBC );
	SetCharacterProfile_Parms.i_bAddProfileIfNotExist = i_bAddProfileIfNotExist;

	pFnSetCharacterProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCharacterProfile, &SetCharacterProfile_Parms, NULL );

	pFnSetCharacterProfile->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamerProfile.GetCharacterProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FCharacterProfile       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sCharacterID                   ( CPF_Parm | CPF_NeedCtorLink )

struct FCharacterProfile UBioGamerProfile::GetCharacterProfile ( struct FString sCharacterID )
{
	static UFunction* pFnGetCharacterProfile = NULL;

	if ( ! pFnGetCharacterProfile )
		pFnGetCharacterProfile = (UFunction*) UObject::GObjObjects()->Data[ 48936 ];

	UBioGamerProfile_execGetCharacterProfile_Parms GetCharacterProfile_Parms;
	memcpy ( &GetCharacterProfile_Parms.sCharacterID, &sCharacterID, 0x10 );

	pFnGetCharacterProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterProfile, &GetCharacterProfile_Parms, NULL );

	pFnGetCharacterProfile->FunctionFlags |= 0x400;

	return GetCharacterProfile_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetCharacterProfileLastPlayedSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacaterID                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            nLastPlayedSlot                ( CPF_Parm )

bool UBioGamerProfile::SetCharacterProfileLastPlayedSlot ( struct FString sCharacaterID, int nLastPlayedSlot )
{
	static UFunction* pFnSetCharacterProfileLastPlayedSlot = NULL;

	if ( ! pFnSetCharacterProfileLastPlayedSlot )
		pFnSetCharacterProfileLastPlayedSlot = (UFunction*) UObject::GObjObjects()->Data[ 48932 ];

	UBioGamerProfile_execSetCharacterProfileLastPlayedSlot_Parms SetCharacterProfileLastPlayedSlot_Parms;
	memcpy ( &SetCharacterProfileLastPlayedSlot_Parms.sCharacaterID, &sCharacaterID, 0x10 );
	SetCharacterProfileLastPlayedSlot_Parms.nLastPlayedSlot = nLastPlayedSlot;

	pFnSetCharacterProfileLastPlayedSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCharacterProfileLastPlayedSlot, &SetCharacterProfileLastPlayedSlot_Parms, NULL );

	pFnSetCharacterProfileLastPlayedSlot->FunctionFlags |= 0x400;

	return SetCharacterProfileLastPlayedSlot_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.ConvertToValidCharacterID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sCharacterName                 ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bConvertAccentCharacters       ( CPF_Parm )

struct FString UBioGamerProfile::ConvertToValidCharacterID ( struct FString sCharacterName, unsigned long bConvertAccentCharacters )
{
	static UFunction* pFnConvertToValidCharacterID = NULL;

	if ( ! pFnConvertToValidCharacterID )
		pFnConvertToValidCharacterID = (UFunction*) UObject::GObjObjects()->Data[ 48928 ];

	UBioGamerProfile_execConvertToValidCharacterID_Parms ConvertToValidCharacterID_Parms;
	memcpy ( &ConvertToValidCharacterID_Parms.sCharacterName, &sCharacterName, 0x10 );
	ConvertToValidCharacterID_Parms.bConvertAccentCharacters = bConvertAccentCharacters;

	pFnConvertToValidCharacterID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConvertToValidCharacterID, &ConvertToValidCharacterID_Parms, NULL );

	pFnConvertToValidCharacterID->FunctionFlags |= 0x400;

	return ConvertToValidCharacterID_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.CreateNewCharacterProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sCharacterName                 ( CPF_Parm | CPF_NeedCtorLink )

struct FString UBioGamerProfile::CreateNewCharacterProfile ( struct FString sCharacterName )
{
	static UFunction* pFnCreateNewCharacterProfile = NULL;

	if ( ! pFnCreateNewCharacterProfile )
		pFnCreateNewCharacterProfile = (UFunction*) UObject::GObjObjects()->Data[ 48925 ];

	UBioGamerProfile_execCreateNewCharacterProfile_Parms CreateNewCharacterProfile_Parms;
	memcpy ( &CreateNewCharacterProfile_Parms.sCharacterName, &sCharacterName, 0x10 );

	pFnCreateNewCharacterProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateNewCharacterProfile, &CreateNewCharacterProfile_Parms, NULL );

	pFnCreateNewCharacterProfile->FunctionFlags |= 0x400;

	return CreateNewCharacterProfile_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetFloatStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

bool UBioGamerProfile::SetFloatStatistic ( int nIndex, float fValue )
{
	static UFunction* pFnSetFloatStatistic = NULL;

	if ( ! pFnSetFloatStatistic )
		pFnSetFloatStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48921 ];

	UBioGamerProfile_execSetFloatStatistic_Parms SetFloatStatistic_Parms;
	SetFloatStatistic_Parms.nIndex = nIndex;
	SetFloatStatistic_Parms.fValue = fValue;

	pFnSetFloatStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatStatistic, &SetFloatStatistic_Parms, NULL );

	pFnSetFloatStatistic->FunctionFlags |= 0x400;

	return SetFloatStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.InrementFloatStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// float                          fAmount                        ( CPF_Parm )

float UBioGamerProfile::InrementFloatStatistic ( int nIndex, float fAmount )
{
	static UFunction* pFnInrementFloatStatistic = NULL;

	if ( ! pFnInrementFloatStatistic )
		pFnInrementFloatStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48917 ];

	UBioGamerProfile_execInrementFloatStatistic_Parms InrementFloatStatistic_Parms;
	InrementFloatStatistic_Parms.nIndex = nIndex;
	InrementFloatStatistic_Parms.fAmount = fAmount;

	pFnInrementFloatStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInrementFloatStatistic, &InrementFloatStatistic_Parms, NULL );

	pFnInrementFloatStatistic->FunctionFlags |= 0x400;

	return InrementFloatStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetFloatStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

float UBioGamerProfile::GetFloatStatistic ( int nIndex )
{
	static UFunction* pFnGetFloatStatistic = NULL;

	if ( ! pFnGetFloatStatistic )
		pFnGetFloatStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48914 ];

	UBioGamerProfile_execGetFloatStatistic_Parms GetFloatStatistic_Parms;
	GetFloatStatistic_Parms.nIndex = nIndex;

	pFnGetFloatStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloatStatistic, &GetFloatStatistic_Parms, NULL );

	pFnGetFloatStatistic->FunctionFlags |= 0x400;

	return GetFloatStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetIntStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

bool UBioGamerProfile::SetIntStatistic ( int nIndex, int nValue )
{
	static UFunction* pFnSetIntStatistic = NULL;

	if ( ! pFnSetIntStatistic )
		pFnSetIntStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48910 ];

	UBioGamerProfile_execSetIntStatistic_Parms SetIntStatistic_Parms;
	SetIntStatistic_Parms.nIndex = nIndex;
	SetIntStatistic_Parms.nValue = nValue;

	pFnSetIntStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIntStatistic, &SetIntStatistic_Parms, NULL );

	pFnSetIntStatistic->FunctionFlags |= 0x400;

	return SetIntStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.IncrementIntStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// int                            nAmount                        ( CPF_Parm )

int UBioGamerProfile::IncrementIntStatistic ( int nIndex, int nAmount )
{
	static UFunction* pFnIncrementIntStatistic = NULL;

	if ( ! pFnIncrementIntStatistic )
		pFnIncrementIntStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48906 ];

	UBioGamerProfile_execIncrementIntStatistic_Parms IncrementIntStatistic_Parms;
	IncrementIntStatistic_Parms.nIndex = nIndex;
	IncrementIntStatistic_Parms.nAmount = nAmount;

	pFnIncrementIntStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementIntStatistic, &IncrementIntStatistic_Parms, NULL );

	pFnIncrementIntStatistic->FunctionFlags |= 0x400;

	return IncrementIntStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetIntStatistic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

int UBioGamerProfile::GetIntStatistic ( int nIndex )
{
	static UFunction* pFnGetIntStatistic = NULL;

	if ( ! pFnGetIntStatistic )
		pFnGetIntStatistic = (UFunction*) UObject::GObjObjects()->Data[ 48903 ];

	UBioGamerProfile_execGetIntStatistic_Parms GetIntStatistic_Parms;
	GetIntStatistic_Parms.nIndex = nIndex;

	pFnGetIntStatistic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntStatistic, &GetIntStatistic_Parms, NULL );

	pFnGetIntStatistic->FunctionFlags |= 0x400;

	return GetIntStatistic_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetHighestDifficultyCompleted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetHighestDifficultyCompleted ( )
{
	static UFunction* pFnGetHighestDifficultyCompleted = NULL;

	if ( ! pFnGetHighestDifficultyCompleted )
		pFnGetHighestDifficultyCompleted = (UFunction*) UObject::GObjObjects()->Data[ 48901 ];

	UBioGamerProfile_execGetHighestDifficultyCompleted_Parms GetHighestDifficultyCompleted_Parms;

	pFnGetHighestDifficultyCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHighestDifficultyCompleted, &GetHighestDifficultyCompleted_Parms, NULL );

	pFnGetHighestDifficultyCompleted->FunctionFlags |= 0x400;

	return GetHighestDifficultyCompleted_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetPlaythroughCompleted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nDifficulty                    ( CPF_Parm )

bool UBioGamerProfile::GetPlaythroughCompleted ( int nDifficulty )
{
	static UFunction* pFnGetPlaythroughCompleted = NULL;

	if ( ! pFnGetPlaythroughCompleted )
		pFnGetPlaythroughCompleted = (UFunction*) UObject::GObjObjects()->Data[ 48898 ];

	UBioGamerProfile_execGetPlaythroughCompleted_Parms GetPlaythroughCompleted_Parms;
	GetPlaythroughCompleted_Parms.nDifficulty = nDifficulty;

	pFnGetPlaythroughCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlaythroughCompleted, &GetPlaythroughCompleted_Parms, NULL );

	pFnGetPlaythroughCompleted->FunctionFlags |= 0x400;

	return GetPlaythroughCompleted_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetNumberOfPlaythroughsCompleted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioGamerProfile::GetNumberOfPlaythroughsCompleted ( )
{
	static UFunction* pFnGetNumberOfPlaythroughsCompleted = NULL;

	if ( ! pFnGetNumberOfPlaythroughsCompleted )
		pFnGetNumberOfPlaythroughsCompleted = (UFunction*) UObject::GObjObjects()->Data[ 48896 ];

	UBioGamerProfile_execGetNumberOfPlaythroughsCompleted_Parms GetNumberOfPlaythroughsCompleted_Parms;

	pFnGetNumberOfPlaythroughsCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumberOfPlaythroughsCompleted, &GetNumberOfPlaythroughsCompleted_Parms, NULL );

	pFnGetNumberOfPlaythroughsCompleted->FunctionFlags |= 0x400;

	return GetNumberOfPlaythroughsCompleted_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.UpdateEndGameGamerProfileStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLogStats                      ( CPF_Parm )

bool UBioGamerProfile::UpdateEndGameGamerProfileStats ( unsigned long bLogStats )
{
	static UFunction* pFnUpdateEndGameGamerProfileStats = NULL;

	if ( ! pFnUpdateEndGameGamerProfileStats )
		pFnUpdateEndGameGamerProfileStats = (UFunction*) UObject::GObjObjects()->Data[ 48893 ];

	UBioGamerProfile_execUpdateEndGameGamerProfileStats_Parms UpdateEndGameGamerProfileStats_Parms;
	UpdateEndGameGamerProfileStats_Parms.bLogStats = bLogStats;

	pFnUpdateEndGameGamerProfileStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateEndGameGamerProfileStats, &UpdateEndGameGamerProfileStats_Parms, NULL );

	pFnUpdateEndGameGamerProfileStats->FunctionFlags |= 0x400;

	return UpdateEndGameGamerProfileStats_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetUnlockedTalentTrees
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<int>             aUnlockedTalentTrees           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioGamerProfile::GetUnlockedTalentTrees ( struct TArray<int>* aUnlockedTalentTrees )
{
	static UFunction* pFnGetUnlockedTalentTrees = NULL;

	if ( ! pFnGetUnlockedTalentTrees )
		pFnGetUnlockedTalentTrees = (UFunction*) UObject::GObjObjects()->Data[ 48890 ];

	UBioGamerProfile_execGetUnlockedTalentTrees_Parms GetUnlockedTalentTrees_Parms;

	pFnGetUnlockedTalentTrees->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUnlockedTalentTrees, &GetUnlockedTalentTrees_Parms, NULL );

	pFnGetUnlockedTalentTrees->FunctionFlags |= 0x400;

	if ( aUnlockedTalentTrees )
		memcpy ( aUnlockedTalentTrees, &GetUnlockedTalentTrees_Parms.aUnlockedTalentTrees, 0x10 );
};

// Function SFXGame.BioGamerProfile.GetRewardStatUnlockedAt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStatisticName                 ( CPF_Parm | CPF_NeedCtorLink )

int UBioGamerProfile::GetRewardStatUnlockedAt ( struct FString sStatisticName )
{
	static UFunction* pFnGetRewardStatUnlockedAt = NULL;

	if ( ! pFnGetRewardStatUnlockedAt )
		pFnGetRewardStatUnlockedAt = (UFunction*) UObject::GObjObjects()->Data[ 48887 ];

	UBioGamerProfile_execGetRewardStatUnlockedAt_Parms GetRewardStatUnlockedAt_Parms;
	memcpy ( &GetRewardStatUnlockedAt_Parms.sStatisticName, &sStatisticName, 0x10 );

	pFnGetRewardStatUnlockedAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRewardStatUnlockedAt, &GetRewardStatUnlockedAt_Parms, NULL );

	pFnGetRewardStatUnlockedAt->FunctionFlags |= 0x400;

	return GetRewardStatUnlockedAt_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetRewardStatName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            nAchievementID                 ( CPF_Parm )

struct FString UBioGamerProfile::GetRewardStatName ( int nAchievementID )
{
	static UFunction* pFnGetRewardStatName = NULL;

	if ( ! pFnGetRewardStatName )
		pFnGetRewardStatName = (UFunction*) UObject::GObjObjects()->Data[ 48884 ];

	UBioGamerProfile_execGetRewardStatName_Parms GetRewardStatName_Parms;
	GetRewardStatName_Parms.nAchievementID = nAchievementID;

	pFnGetRewardStatName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRewardStatName, &GetRewardStatName_Parms, NULL );

	pFnGetRewardStatName->FunctionFlags |= 0x400;

	return GetRewardStatName_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.GetIsRewardStatUnlocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStatisticName                 ( CPF_Parm | CPF_NeedCtorLink )

bool UBioGamerProfile::GetIsRewardStatUnlocked ( struct FString sStatisticName )
{
	static UFunction* pFnGetIsRewardStatUnlocked = NULL;

	if ( ! pFnGetIsRewardStatUnlocked )
		pFnGetIsRewardStatUnlocked = (UFunction*) UObject::GObjObjects()->Data[ 48881 ];

	UBioGamerProfile_execGetIsRewardStatUnlocked_Parms GetIsRewardStatUnlocked_Parms;
	memcpy ( &GetIsRewardStatUnlocked_Parms.sStatisticName, &sStatisticName, 0x10 );

	pFnGetIsRewardStatUnlocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsRewardStatUnlocked, &GetIsRewardStatUnlocked_Parms, NULL );

	pFnGetIsRewardStatUnlocked->FunctionFlags |= 0x400;

	return GetIsRewardStatUnlocked_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.IncrementRewardStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStatisticName                 ( CPF_Parm | CPF_NeedCtorLink )
// int                            nAmount                        ( CPF_Parm )

int UBioGamerProfile::IncrementRewardStat ( struct FString sStatisticName, int nAmount )
{
	static UFunction* pFnIncrementRewardStat = NULL;

	if ( ! pFnIncrementRewardStat )
		pFnIncrementRewardStat = (UFunction*) UObject::GObjObjects()->Data[ 45408 ];

	UBioGamerProfile_execIncrementRewardStat_Parms IncrementRewardStat_Parms;
	memcpy ( &IncrementRewardStat_Parms.sStatisticName, &sStatisticName, 0x10 );
	IncrementRewardStat_Parms.nAmount = nAmount;

	pFnIncrementRewardStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementRewardStat, &IncrementRewardStat_Parms, NULL );

	pFnIncrementRewardStat->FunctionFlags |= 0x400;

	return IncrementRewardStat_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetRewardStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStatisticName                 ( CPF_Parm | CPF_NeedCtorLink )
// int                            nValue                         ( CPF_Parm )

bool UBioGamerProfile::SetRewardStat ( struct FString sStatisticName, int nValue )
{
	static UFunction* pFnSetRewardStat = NULL;

	if ( ! pFnSetRewardStat )
		pFnSetRewardStat = (UFunction*) UObject::GObjObjects()->Data[ 45551 ];

	UBioGamerProfile_execSetRewardStat_Parms SetRewardStat_Parms;
	memcpy ( &SetRewardStat_Parms.sStatisticName, &sStatisticName, 0x10 );
	SetRewardStat_Parms.nValue = nValue;

	pFnSetRewardStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRewardStat, &SetRewardStat_Parms, NULL );

	pFnSetRewardStat->FunctionFlags |= 0x400;

	return SetRewardStat_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.RestoreGamerProfilePlotManagerVariables
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioGamerProfile::RestoreGamerProfilePlotManagerVariables ( )
{
	static UFunction* pFnRestoreGamerProfilePlotManagerVariables = NULL;

	if ( ! pFnRestoreGamerProfilePlotManagerVariables )
		pFnRestoreGamerProfilePlotManagerVariables = (UFunction*) UObject::GObjObjects()->Data[ 48875 ];

	UBioGamerProfile_execRestoreGamerProfilePlotManagerVariables_Parms RestoreGamerProfilePlotManagerVariables_Parms;

	pFnRestoreGamerProfilePlotManagerVariables->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreGamerProfilePlotManagerVariables, &RestoreGamerProfilePlotManagerVariables_Parms, NULL );

	pFnRestoreGamerProfilePlotManagerVariables->FunctionFlags |= 0x400;

	return RestoreGamerProfilePlotManagerVariables_Parms.ReturnValue;
};

// Function SFXGame.BioGamerProfile.SetGamerProfilePlotManagerVariables
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioGamerProfile::SetGamerProfilePlotManagerVariables ( )
{
	static UFunction* pFnSetGamerProfilePlotManagerVariables = NULL;

	if ( ! pFnSetGamerProfilePlotManagerVariables )
		pFnSetGamerProfilePlotManagerVariables = (UFunction*) UObject::GObjObjects()->Data[ 48873 ];

	UBioGamerProfile_execSetGamerProfilePlotManagerVariables_Parms SetGamerProfilePlotManagerVariables_Parms;

	pFnSetGamerProfilePlotManagerVariables->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGamerProfilePlotManagerVariables, &SetGamerProfilePlotManagerVariables_Parms, NULL );

	pFnSetGamerProfilePlotManagerVariables->FunctionFlags |= 0x400;

	return SetGamerProfilePlotManagerVariables_Parms.ReturnValue;
};

// Function SFXGame.BioObject.ValidateOwnershipSemantics
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 Target                         ( CPF_Parm )
// unsigned long                  isVerbose                      ( CPF_OptionalParm | CPF_Parm )
// int                            recurrence                     ( CPF_OptionalParm | CPF_Parm )

bool UBioObject::ValidateOwnershipSemantics ( class UObject* Target, unsigned long isVerbose, int recurrence )
{
	static UFunction* pFnValidateOwnershipSemantics = NULL;

	if ( ! pFnValidateOwnershipSemantics )
		pFnValidateOwnershipSemantics = (UFunction*) UObject::GObjObjects()->Data[ 51823 ];

	UBioObject_execValidateOwnershipSemantics_Parms ValidateOwnershipSemantics_Parms;
	ValidateOwnershipSemantics_Parms.Target = Target;
	ValidateOwnershipSemantics_Parms.isVerbose = isVerbose;
	ValidateOwnershipSemantics_Parms.recurrence = recurrence;

	pFnValidateOwnershipSemantics->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidateOwnershipSemantics, &ValidateOwnershipSemantics_Parms, NULL );

	pFnValidateOwnershipSemantics->FunctionFlags |= 0x400;

	return ValidateOwnershipSemantics_Parms.ReturnValue;
};

// Function SFXGame.BioObject.ParseIntoArray
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDelimitedStrings              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDelimiter                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCullEmptyStrings              ( CPF_Parm )
// struct TArray<struct FString>  aString                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioObject::ParseIntoArray ( struct FString sDelimitedStrings, struct FString sDelimiter, unsigned long bCullEmptyStrings, struct TArray<struct FString>* aString )
{
	static UFunction* pFnParseIntoArray = NULL;

	if ( ! pFnParseIntoArray )
		pFnParseIntoArray = (UFunction*) UObject::GObjObjects()->Data[ 55790 ];

	UBioObject_execParseIntoArray_Parms ParseIntoArray_Parms;
	memcpy ( &ParseIntoArray_Parms.sDelimitedStrings, &sDelimitedStrings, 0x10 );
	memcpy ( &ParseIntoArray_Parms.sDelimiter, &sDelimiter, 0x10 );
	ParseIntoArray_Parms.bCullEmptyStrings = bCullEmptyStrings;

	pFnParseIntoArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnParseIntoArray, &ParseIntoArray_Parms, NULL );

	pFnParseIntoArray->FunctionFlags |= 0x400;

	if ( aString )
		memcpy ( aString, &ParseIntoArray_Parms.aString, 0x10 );
};

// Function SFXGame.BioObject.ParseIntoArrayWS
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// struct FString                 whitespaceDelimitedStrings     ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<struct FString>  Strings                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioObject::ParseIntoArrayWS ( struct FString whitespaceDelimitedStrings, struct TArray<struct FString>* Strings )
{
	static UFunction* pFnParseIntoArrayWS = NULL;

	if ( ! pFnParseIntoArrayWS )
		pFnParseIntoArrayWS = (UFunction*) UObject::GObjObjects()->Data[ 55786 ];

	UBioObject_execParseIntoArrayWS_Parms ParseIntoArrayWS_Parms;
	memcpy ( &ParseIntoArrayWS_Parms.whitespaceDelimitedStrings, &whitespaceDelimitedStrings, 0x10 );

	pFnParseIntoArrayWS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnParseIntoArrayWS, &ParseIntoArrayWS_Parms, NULL );

	pFnParseIntoArrayWS->FunctionFlags |= 0x400;

	if ( Strings )
		memcpy ( Strings, &ParseIntoArrayWS_Parms.Strings, 0x10 );
};

// Function SFXGame.BioObject.GetEnumValue
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsEnumDefiner                 ( CPF_Parm )
// struct FName                   nmEnumField                    ( CPF_Parm )
// struct FName                   nmEnumValue                    ( CPF_Parm )
// unsigned char                  cEnumValue                     ( CPF_Parm | CPF_OutParm )

bool UBioObject::GetEnumValue ( class UClass* clsEnumDefiner, struct FName nmEnumField, struct FName nmEnumValue, unsigned char* cEnumValue )
{
	static UFunction* pFnGetEnumValue = NULL;

	if ( ! pFnGetEnumValue )
		pFnGetEnumValue = (UFunction*) UObject::GObjObjects()->Data[ 51746 ];

	UBioObject_execGetEnumValue_Parms GetEnumValue_Parms;
	GetEnumValue_Parms.clsEnumDefiner = clsEnumDefiner;
	memcpy ( &GetEnumValue_Parms.nmEnumField, &nmEnumField, 0x8 );
	memcpy ( &GetEnumValue_Parms.nmEnumValue, &nmEnumValue, 0x8 );

	pFnGetEnumValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEnumValue, &GetEnumValue_Parms, NULL );

	pFnGetEnumValue->FunctionFlags |= 0x400;

	if ( cEnumValue )
		*cEnumValue = GetEnumValue_Parms.cEnumValue;

	return GetEnumValue_Parms.ReturnValue;
};

// Function SFXGame.BioObject.FindClass
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmClass                        ( CPF_Parm )

class UClass* UBioObject::FindClass ( struct FName nmClass )
{
	static UFunction* pFnFindClass = NULL;

	if ( ! pFnFindClass )
		pFnFindClass = (UFunction*) UObject::GObjObjects()->Data[ 55779 ];

	UBioObject_execFindClass_Parms FindClass_Parms;
	memcpy ( &FindClass_Parms.nmClass, &nmClass, 0x8 );

	pFnFindClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindClass, &FindClass_Parms, NULL );

	pFnFindClass->FunctionFlags |= 0x400;

	return FindClass_Parms.ReturnValue;
};

// Function SFXGame.BioPhysicsSounds.RequestSound
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nPriority                      ( CPF_Parm )
// class UPrimitiveComponent*     oComp0                         ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     oComp1                         ( CPF_Parm | CPF_EditInline )
// struct TArray<struct FRigidBodyContactInfo> ContactInfos                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioPhysicsSounds::RequestSound ( int nPriority, class UPrimitiveComponent* oComp0, class UPrimitiveComponent* oComp1, struct TArray<struct FRigidBodyContactInfo>* ContactInfos )
{
	static UFunction* pFnRequestSound = NULL;

	if ( ! pFnRequestSound )
		pFnRequestSound = (UFunction*) UObject::GObjObjects()->Data[ 46343 ];

	UBioPhysicsSounds_execRequestSound_Parms RequestSound_Parms;
	RequestSound_Parms.nPriority = nPriority;
	RequestSound_Parms.oComp0 = oComp0;
	RequestSound_Parms.oComp1 = oComp1;

	pFnRequestSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestSound, &RequestSound_Parms, NULL );

	pFnRequestSound->FunctionFlags |= 0x400;

	if ( ContactInfos )
		memcpy ( ContactInfos, &RequestSound_Parms.ContactInfos, 0x10 );

	return RequestSound_Parms.ReturnValue;
};

// Function SFXGame.BioPhysicsSounds.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPhysicsSounds::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57019 ];

	UBioPhysicsSounds_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPowerScript.PlayForceFeedback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// class AActor*                  oImpacted                      ( CPF_Parm )

bool UBioPowerScript::PlayForceFeedback ( class AActor* oCaster, class AActor* oImpacted )
{
	static UFunction* pFnPlayForceFeedback = NULL;

	if ( ! pFnPlayForceFeedback )
		pFnPlayForceFeedback = (UFunction*) UObject::GObjObjects()->Data[ 57538 ];

	UBioPowerScript_execPlayForceFeedback_Parms PlayForceFeedback_Parms;
	PlayForceFeedback_Parms.oCaster = oCaster;
	PlayForceFeedback_Parms.oImpacted = oImpacted;

	pFnPlayForceFeedback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayForceFeedback, &PlayForceFeedback_Parms, NULL );

	pFnPlayForceFeedback->FunctionFlags |= 0x400;

	return PlayForceFeedback_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.PlayGuiSound
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmSound                        ( CPF_Parm )

bool UBioPowerScript::PlayGuiSound ( struct FName nmSound )
{
	static UFunction* pFnPlayGuiSound = NULL;

	if ( ! pFnPlayGuiSound )
		pFnPlayGuiSound = (UFunction*) UObject::GObjObjects()->Data[ 57535 ];

	UBioPowerScript_execPlayGuiSound_Parms PlayGuiSound_Parms;
	memcpy ( &PlayGuiSound_Parms.nmSound, &nmSound, 0x8 );

	pFnPlayGuiSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayGuiSound, &PlayGuiSound_Parms, NULL );

	pFnPlayGuiSound->FunctionFlags |= 0x400;

	return PlayGuiSound_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.GetFloorLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vStartLocation                 ( CPF_Parm )
// struct FVector                 vFloorLocation                 ( CPF_Parm | CPF_OutParm )

bool UBioPowerScript::GetFloorLocation ( struct FVector vStartLocation, struct FVector* vFloorLocation )
{
	static UFunction* pFnGetFloorLocation = NULL;

	if ( ! pFnGetFloorLocation )
		pFnGetFloorLocation = (UFunction*) UObject::GObjObjects()->Data[ 57531 ];

	UBioPowerScript_execGetFloorLocation_Parms GetFloorLocation_Parms;
	memcpy ( &GetFloorLocation_Parms.vStartLocation, &vStartLocation, 0xC );

	pFnGetFloorLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloorLocation, &GetFloorLocation_Parms, NULL );

	pFnGetFloorLocation->FunctionFlags |= 0x400;

	if ( vFloorLocation )
		memcpy ( vFloorLocation, &GetFloorLocation_Parms.vFloorLocation, 0xC );

	return GetFloorLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.AdjustCooldown
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fCoolDownTime                  ( CPF_Parm | CPF_OutParm )

bool UBioPowerScript::eventAdjustCooldown ( float* fCoolDownTime )
{
	static UFunction* pFnAdjustCooldown = NULL;

	if ( ! pFnAdjustCooldown )
		pFnAdjustCooldown = (UFunction*) UObject::GObjObjects()->Data[ 57528 ];

	UBioPowerScript_eventAdjustCooldown_Parms AdjustCooldown_Parms;

	this->ProcessEvent ( pFnAdjustCooldown, &AdjustCooldown_Parms, NULL );

	if ( fCoolDownTime )
		*fCoolDownTime = AdjustCooldown_Parms.fCoolDownTime;

	return AdjustCooldown_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.OnImpact
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// float                          fCasterStability               ( CPF_Parm )
// class AActor*                  oImpacted                      ( CPF_Parm )
// int                            nPreviouslyImpacted            ( CPF_Parm )

bool UBioPowerScript::eventOnImpact ( class AActor* oCaster, float fCasterStability, class AActor* oImpacted, int nPreviouslyImpacted )
{
	static UFunction* pFnOnImpact = NULL;

	if ( ! pFnOnImpact )
		pFnOnImpact = (UFunction*) UObject::GObjObjects()->Data[ 57522 ];

	UBioPowerScript_eventOnImpact_Parms OnImpact_Parms;
	OnImpact_Parms.oCaster = oCaster;
	OnImpact_Parms.fCasterStability = fCasterStability;
	OnImpact_Parms.oImpacted = oImpacted;
	OnImpact_Parms.nPreviouslyImpacted = nPreviouslyImpacted;

	this->ProcessEvent ( pFnOnImpact, &OnImpact_Parms, NULL );

	return OnImpact_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.EndPhase
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ePhase                         ( CPF_Parm )
// class AActor*                  oCaster                        ( CPF_Parm )

bool UBioPowerScript::eventEndPhase ( unsigned char ePhase, class AActor* oCaster )
{
	static UFunction* pFnEndPhase = NULL;

	if ( ! pFnEndPhase )
		pFnEndPhase = (UFunction*) UObject::GObjObjects()->Data[ 57518 ];

	UBioPowerScript_eventEndPhase_Parms EndPhase_Parms;
	EndPhase_Parms.ePhase = ePhase;
	EndPhase_Parms.oCaster = oCaster;

	this->ProcessEvent ( pFnEndPhase, &EndPhase_Parms, NULL );

	return EndPhase_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.StartPhase
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ePhase                         ( CPF_Parm )
// class AActor*                  oCaster                        ( CPF_Parm )
// float                          fDuration                      ( CPF_Parm )

bool UBioPowerScript::eventStartPhase ( unsigned char ePhase, class AActor* oCaster, float fDuration )
{
	static UFunction* pFnStartPhase = NULL;

	if ( ! pFnStartPhase )
		pFnStartPhase = (UFunction*) UObject::GObjObjects()->Data[ 57513 ];

	UBioPowerScript_eventStartPhase_Parms StartPhase_Parms;
	StartPhase_Parms.ePhase = ePhase;
	StartPhase_Parms.oCaster = oCaster;
	StartPhase_Parms.fDuration = fDuration;

	this->ProcessEvent ( pFnStartPhase, &StartPhase_Parms, NULL );

	return StartPhase_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.CanStartPower
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )

bool UBioPowerScript::eventCanStartPower ( class AActor* oCaster )
{
	static UFunction* pFnCanStartPower = NULL;

	if ( ! pFnCanStartPower )
		pFnCanStartPower = (UFunction*) UObject::GObjObjects()->Data[ 57510 ];

	UBioPowerScript_eventCanStartPower_Parms CanStartPower_Parms;
	CanStartPower_Parms.oCaster = oCaster;

	this->ProcessEvent ( pFnCanStartPower, &CanStartPower_Parms, NULL );

	return CanStartPower_Parms.ReturnValue;
};

// Function SFXGame.BioPowerScript.InitializePowerScript
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioPower*               pPower                         ( CPF_Parm )

void UBioPowerScript::eventInitializePowerScript ( class UBioPower* pPower )
{
	static UFunction* pFnInitializePowerScript = NULL;

	if ( ! pFnInitializePowerScript )
		pFnInitializePowerScript = (UFunction*) UObject::GObjObjects()->Data[ 57507 ];

	UBioPowerScript_eventInitializePowerScript_Parms InitializePowerScript_Parms;
	InitializePowerScript_Parms.pPower = pPower;

	this->ProcessEvent ( pFnInitializePowerScript, &InitializePowerScript_Parms, NULL );
};

// Function SFXGame.BioSeqAct_PopupLootGui.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_PopupLootGui::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60106 ];

	UBioSeqAct_PopupLootGui_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioTriggerStream.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioTriggerStream::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65096 ];

	ABioTriggerStream_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioTriggerStream.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioTriggerStream::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65090 ];

	ABioTriggerStream_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioTriggerStream.ForegroundStreamingDone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class USequence*> Sequences                      ( CPF_Parm | CPF_NeedCtorLink )
// class APawn*                   PlayerPawn                     ( CPF_Parm )

void ABioTriggerStream::ForegroundStreamingDone ( struct TArray<class USequence*> Sequences, class APawn* PlayerPawn )
{
	static UFunction* pFnForegroundStreamingDone = NULL;

	if ( ! pFnForegroundStreamingDone )
		pFnForegroundStreamingDone = (UFunction*) UObject::GObjObjects()->Data[ 65086 ];

	ABioTriggerStream_execForegroundStreamingDone_Parms ForegroundStreamingDone_Parms;
	memcpy ( &ForegroundStreamingDone_Parms.Sequences, &Sequences, 0x10 );
	ForegroundStreamingDone_Parms.PlayerPawn = PlayerPawn;

	pFnForegroundStreamingDone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForegroundStreamingDone, &ForegroundStreamingDone_Parms, NULL );

	pFnForegroundStreamingDone->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTriggerStream.BackgroundStreamingDone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class USequence*> Sequences                      ( CPF_Parm | CPF_NeedCtorLink )
// class APawn*                   PlayerPawn                     ( CPF_Parm )

void ABioTriggerStream::BackgroundStreamingDone ( struct TArray<class USequence*> Sequences, class APawn* PlayerPawn )
{
	static UFunction* pFnBackgroundStreamingDone = NULL;

	if ( ! pFnBackgroundStreamingDone )
		pFnBackgroundStreamingDone = (UFunction*) UObject::GObjObjects()->Data[ 65082 ];

	ABioTriggerStream_execBackgroundStreamingDone_Parms BackgroundStreamingDone_Parms;
	memcpy ( &BackgroundStreamingDone_Parms.Sequences, &Sequences, 0x10 );
	BackgroundStreamingDone_Parms.PlayerPawn = PlayerPawn;

	pFnBackgroundStreamingDone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBackgroundStreamingDone, &BackgroundStreamingDone_Parms, NULL );

	pFnBackgroundStreamingDone->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTriggerStream.Retouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioTriggerStream::Retouch ( )
{
	static UFunction* pFnRetouch = NULL;

	if ( ! pFnRetouch )
		pFnRetouch = (UFunction*) UObject::GObjObjects()->Data[ 65081 ];

	ABioTriggerStream_execRetouch_Parms Retouch_Parms;

	pFnRetouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRetouch, &Retouch_Parms, NULL );

	pFnRetouch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTriggerStream.DoStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Touched                        ( CPF_Parm )
// unsigned long                  bTouched                       ( CPF_Parm )

void ABioTriggerStream::DoStasis ( class AActor* Touched, unsigned long bTouched )
{
	static UFunction* pFnDoStasis = NULL;

	if ( ! pFnDoStasis )
		pFnDoStasis = (UFunction*) UObject::GObjObjects()->Data[ 65078 ];

	ABioTriggerStream_execDoStasis_Parms DoStasis_Parms;
	DoStasis_Parms.Touched = Touched;
	DoStasis_Parms.bTouched = bTouched;

	pFnDoStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoStasis, &DoStasis_Parms, NULL );

	pFnDoStasis->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTriggerStream.DoUntouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioTriggerStream::DoUntouch ( class AActor* Other )
{
	static UFunction* pFnDoUntouch = NULL;

	if ( ! pFnDoUntouch )
		pFnDoUntouch = (UFunction*) UObject::GObjObjects()->Data[ 65076 ];

	ABioTriggerStream_execDoUntouch_Parms DoUntouch_Parms;
	DoUntouch_Parms.Other = Other;

	pFnDoUntouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoUntouch, &DoUntouch_Parms, NULL );

	pFnDoUntouch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTriggerStream.DoTouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioTriggerStream::DoTouch ( )
{
	static UFunction* pFnDoTouch = NULL;

	if ( ! pFnDoTouch )
		pFnDoTouch = (UFunction*) UObject::GObjObjects()->Data[ 65075 ];

	ABioTriggerStream_execDoTouch_Parms DoTouch_Parms;

	pFnDoTouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoTouch, &DoTouch_Parms, NULL );

	pFnDoTouch->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXDifficultyHandler.Update
// [0x00020002] 
// Parameters infos:

void USFXDifficultyHandler::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 66932 ];

	USFXDifficultyHandler_execUpdate_Parms Update_Parms;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.SFXDifficultyHandler.GetFloatAtDifficulty
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   PropertyName                   ( CPF_Parm )
// struct FName                   DifficultyCategory             ( CPF_Parm )
// unsigned char                  Difficulty                     ( CPF_Parm )
// float                          Score                          ( CPF_Parm )

float USFXDifficultyHandler::GetFloatAtDifficulty ( struct FName PropertyName, struct FName DifficultyCategory, unsigned char Difficulty, float Score )
{
	static UFunction* pFnGetFloatAtDifficulty = NULL;

	if ( ! pFnGetFloatAtDifficulty )
		pFnGetFloatAtDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 66924 ];

	USFXDifficultyHandler_execGetFloatAtDifficulty_Parms GetFloatAtDifficulty_Parms;
	memcpy ( &GetFloatAtDifficulty_Parms.PropertyName, &PropertyName, 0x8 );
	memcpy ( &GetFloatAtDifficulty_Parms.DifficultyCategory, &DifficultyCategory, 0x8 );
	GetFloatAtDifficulty_Parms.Difficulty = Difficulty;
	GetFloatAtDifficulty_Parms.Score = Score;

	this->ProcessEvent ( pFnGetFloatAtDifficulty, &GetFloatAtDifficulty_Parms, NULL );

	return GetFloatAtDifficulty_Parms.ReturnValue;
};

// Function SFXGame.SFXDifficultyHandler.GetFloat
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   PropertyName                   ( CPF_Parm )
// struct FName                   DifficultyCategory             ( CPF_Parm )

float USFXDifficultyHandler::GetFloat ( struct FName PropertyName, struct FName DifficultyCategory )
{
	static UFunction* pFnGetFloat = NULL;

	if ( ! pFnGetFloat )
		pFnGetFloat = (UFunction*) UObject::GObjObjects()->Data[ 47794 ];

	USFXDifficultyHandler_execGetFloat_Parms GetFloat_Parms;
	memcpy ( &GetFloat_Parms.PropertyName, &PropertyName, 0x8 );
	memcpy ( &GetFloat_Parms.DifficultyCategory, &DifficultyCategory, 0x8 );

	this->ProcessEvent ( pFnGetFloat, &GetFloat_Parms, NULL );

	return GetFloat_Parms.ReturnValue;
};

// Function SFXGame.SFXDifficultyHandler.GetBool
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   PropertyName                   ( CPF_Parm )
// struct FName                   DifficultyCategory             ( CPF_Parm )

bool USFXDifficultyHandler::GetBool ( struct FName PropertyName, struct FName DifficultyCategory )
{
	static UFunction* pFnGetBool = NULL;

	if ( ! pFnGetBool )
		pFnGetBool = (UFunction*) UObject::GObjObjects()->Data[ 66913 ];

	USFXDifficultyHandler_execGetBool_Parms GetBool_Parms;
	memcpy ( &GetBool_Parms.PropertyName, &PropertyName, 0x8 );
	memcpy ( &GetBool_Parms.DifficultyCategory, &DifficultyCategory, 0x8 );

	this->ProcessEvent ( pFnGetBool, &GetBool_Parms, NULL );

	return GetBool_Parms.ReturnValue;
};

// Function SFXGame.SFXDifficultyHandler.GetDifficultyHandler
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// class USFXDifficultyHandler*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXDifficultyHandler* USFXDifficultyHandler::GetDifficultyHandler ( )
{
	static UFunction* pFnGetDifficultyHandler = NULL;

	if ( ! pFnGetDifficultyHandler )
		pFnGetDifficultyHandler = (UFunction*) UObject::GObjObjects()->Data[ 66908 ];

	USFXDifficultyHandler_execGetDifficultyHandler_Parms GetDifficultyHandler_Parms;

	this->ProcessEvent ( pFnGetDifficultyHandler, &GetDifficultyHandler_Parms, NULL );

	return GetDifficultyHandler_Parms.ReturnValue;
};

// Function SFXGame.SFXDynamicEdgeMarker.DebugDraw
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASFXDynamicEdgeMarker::DebugDraw ( )
{
	static UFunction* pFnDebugDraw = NULL;

	if ( ! pFnDebugDraw )
		pFnDebugDraw = (UFunction*) UObject::GObjObjects()->Data[ 66949 ];

	ASFXDynamicEdgeMarker_execDebugDraw_Parms DebugDraw_Parms;

	pFnDebugDraw->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDraw, &DebugDraw_Parms, NULL );

	pFnDebugDraw->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXDynamicEdgeMarker.UpdateLeanFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Action                         ( CPF_Parm )

void ASFXDynamicEdgeMarker::UpdateLeanFlags ( unsigned char Action )
{
	static UFunction* pFnUpdateLeanFlags = NULL;

	if ( ! pFnUpdateLeanFlags )
		pFnUpdateLeanFlags = (UFunction*) UObject::GObjObjects()->Data[ 66947 ];

	ASFXDynamicEdgeMarker_execUpdateLeanFlags_Parms UpdateLeanFlags_Parms;
	UpdateLeanFlags_Parms.Action = Action;

	pFnUpdateLeanFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLeanFlags, &UpdateLeanFlags_Parms, NULL );

	pFnUpdateLeanFlags->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXDynamicEdgeMarker.GetViewPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )
// unsigned char                  Action                         ( CPF_Parm )

struct FVector ASFXDynamicEdgeMarker::GetViewPoint ( unsigned char Type, unsigned char Action )
{
	static UFunction* pFnGetViewPoint = NULL;

	if ( ! pFnGetViewPoint )
		pFnGetViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 66943 ];

	ASFXDynamicEdgeMarker_execGetViewPoint_Parms GetViewPoint_Parms;
	GetViewPoint_Parms.Type = Type;
	GetViewPoint_Parms.Action = Action;

	pFnGetViewPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetViewPoint, &GetViewPoint_Parms, NULL );

	pFnGetViewPoint->FunctionFlags |= 0x400;

	return GetViewPoint_Parms.ReturnValue;
};

// Function SFXGame.SFXDynamicEdgeMarker.CanLean
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASFXDynamicEdgeMarker::eventCanLean ( )
{
	static UFunction* pFnCanLean = NULL;

	if ( ! pFnCanLean )
		pFnCanLean = (UFunction*) UObject::GObjObjects()->Data[ 66937 ];

	ASFXDynamicEdgeMarker_eventCanLean_Parms CanLean_Parms;

	this->ProcessEvent ( pFnCanLean, &CanLean_Parms, NULL );

	return CanLean_Parms.ReturnValue;
};

// Function SFXGame.SFXDynamicEdgeMarker.Initialize
// [0x00020002] 
// Parameters infos:

void ASFXDynamicEdgeMarker::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66935 ];

	ASFXDynamicEdgeMarker_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXDynamicEdgeMarker.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASFXDynamicEdgeMarker::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 66934 ];

	ASFXDynamicEdgeMarker_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.SFXGUIInteraction.NotifyGameSessionEnded
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXGUIInteraction::NotifyGameSessionEnded ( )
{
	static UFunction* pFnNotifyGameSessionEnded = NULL;

	if ( ! pFnNotifyGameSessionEnded )
		pFnNotifyGameSessionEnded = (UFunction*) UObject::GObjObjects()->Data[ 67518 ];

	USFXGUIInteraction_execNotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;

	pFnNotifyGameSessionEnded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms, NULL );

	pFnNotifyGameSessionEnded->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBasePlayerController.QuickLoad
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioBasePlayerController::QuickLoad ( )
{
	static UFunction* pFnQuickLoad = NULL;

	if ( ! pFnQuickLoad )
		pFnQuickLoad = (UFunction*) UObject::GObjObjects()->Data[ 50112 ];

	ABioBasePlayerController_execQuickLoad_Parms QuickLoad_Parms;

	this->ProcessEvent ( pFnQuickLoad, &QuickLoad_Parms, NULL );
};

// Function SFXGame.BioBasePlayerController.QuickSave
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioBasePlayerController::QuickSave ( )
{
	static UFunction* pFnQuickSave = NULL;

	if ( ! pFnQuickSave )
		pFnQuickSave = (UFunction*) UObject::GObjObjects()->Data[ 50105 ];

	ABioBasePlayerController_execQuickSave_Parms QuickSave_Parms;

	this->ProcessEvent ( pFnQuickSave, &QuickSave_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnToggleElevatorMode
// [0x00020002] 
// Parameters infos:
// class USFXSeqAct_ToggleElevatorMode* Action                         ( CPF_Parm )

void ABioPlayerController::OnToggleElevatorMode ( class USFXSeqAct_ToggleElevatorMode* Action )
{
	static UFunction* pFnOnToggleElevatorMode = NULL;

	if ( ! pFnOnToggleElevatorMode )
		pFnOnToggleElevatorMode = (UFunction*) UObject::GObjObjects()->Data[ 56297 ];

	ABioPlayerController_execOnToggleElevatorMode_Parms OnToggleElevatorMode_Parms;
	OnToggleElevatorMode_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggleElevatorMode, &OnToggleElevatorMode_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnSkipElevatorSequence
// [0x00020002] 
// Parameters infos:
// class UBioSeqAct_SkipElevatorSequence* Action                         ( CPF_Parm )

void ABioPlayerController::OnSkipElevatorSequence ( class UBioSeqAct_SkipElevatorSequence* Action )
{
	static UFunction* pFnOnSkipElevatorSequence = NULL;

	if ( ! pFnOnSkipElevatorSequence )
		pFnOnSkipElevatorSequence = (UFunction*) UObject::GObjObjects()->Data[ 56298 ];

	ABioPlayerController_execOnSkipElevatorSequence_Parms OnSkipElevatorSequence_Parms;
	OnSkipElevatorSequence_Parms.Action = Action;

	this->ProcessEvent ( pFnOnSkipElevatorSequence, &OnSkipElevatorSequence_Parms, NULL );
};

// Function SFXGame.BioPlayerController.UpdateTrilogyUniqueStatProgression
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )

void ABioPlayerController::eventUpdateTrilogyUniqueStatProgression ( int ProfileSettingId )
{
	static UFunction* pFnUpdateTrilogyUniqueStatProgression = NULL;

	if ( ! pFnUpdateTrilogyUniqueStatProgression )
		pFnUpdateTrilogyUniqueStatProgression = (UFunction*) UObject::GObjObjects()->Data[ 56301 ];

	ABioPlayerController_eventUpdateTrilogyUniqueStatProgression_Parms UpdateTrilogyUniqueStatProgression_Parms;
	UpdateTrilogyUniqueStatProgression_Parms.ProfileSettingId = ProfileSettingId;

	this->ProcessEvent ( pFnUpdateTrilogyUniqueStatProgression, &UpdateTrilogyUniqueStatProgression_Parms, NULL );
};

// Function SFXGame.BioPlayerController.UpdateTrilogyGrinderStatProgression
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )
// class ABioPawn*                oTarget                        ( CPF_OptionalParm | CPF_Parm )

void ABioPlayerController::eventUpdateTrilogyGrinderStatProgression ( int ProfileSettingId, int Amount, class ABioPawn* oTarget )
{
	static UFunction* pFnUpdateTrilogyGrinderStatProgression = NULL;

	if ( ! pFnUpdateTrilogyGrinderStatProgression )
		pFnUpdateTrilogyGrinderStatProgression = (UFunction*) UObject::GObjObjects()->Data[ 56304 ];

	ABioPlayerController_eventUpdateTrilogyGrinderStatProgression_Parms UpdateTrilogyGrinderStatProgression_Parms;
	UpdateTrilogyGrinderStatProgression_Parms.ProfileSettingId = ProfileSettingId;
	UpdateTrilogyGrinderStatProgression_Parms.Amount = Amount;
	UpdateTrilogyGrinderStatProgression_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnUpdateTrilogyGrinderStatProgression, &UpdateTrilogyGrinderStatProgression_Parms, NULL );
};

// Function SFXGame.BioPlayerController.SetRichPresence
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::SetRichPresence ( )
{
	static UFunction* pFnSetRichPresence = NULL;

	if ( ! pFnSetRichPresence )
		pFnSetRichPresence = (UFunction*) UObject::GObjObjects()->Data[ 56306 ];

	ABioPlayerController_execSetRichPresence_Parms SetRichPresence_Parms;

	this->ProcessEvent ( pFnSetRichPresence, &SetRichPresence_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ClientSetOnlineStatus
// [0x010201C2] 
// Parameters infos:

void ABioPlayerController::ClientSetOnlineStatus ( )
{
	static UFunction* pFnClientSetOnlineStatus = NULL;

	if ( ! pFnClientSetOnlineStatus )
		pFnClientSetOnlineStatus = (UFunction*) UObject::GObjObjects()->Data[ 56310 ];

	ABioPlayerController_execClientSetOnlineStatus_Parms ClientSetOnlineStatus_Parms;

	this->ProcessEvent ( pFnClientSetOnlineStatus, &ClientSetOnlineStatus_Parms, NULL );
};

// Function SFXGame.BioPlayerController.NotifyReadAchievementsComplete
// [0x00020002] 
// Parameters infos:
// int                            TitleId                        ( CPF_Parm )

void ABioPlayerController::NotifyReadAchievementsComplete ( int TitleId )
{
	static UFunction* pFnNotifyReadAchievementsComplete = NULL;

	if ( ! pFnNotifyReadAchievementsComplete )
		pFnNotifyReadAchievementsComplete = (UFunction*) UObject::GObjObjects()->Data[ 56317 ];

	ABioPlayerController_execNotifyReadAchievementsComplete_Parms NotifyReadAchievementsComplete_Parms;
	NotifyReadAchievementsComplete_Parms.TitleId = TitleId;

	this->ProcessEvent ( pFnNotifyReadAchievementsComplete, &NotifyReadAchievementsComplete_Parms, NULL );
};

// Function SFXGame.BioPlayerController.UpdateProfileData
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::UpdateProfileData ( )
{
	static UFunction* pFnUpdateProfileData = NULL;

	if ( ! pFnUpdateProfileData )
		pFnUpdateProfileData = (UFunction*) UObject::GObjObjects()->Data[ 56318 ];

	ABioPlayerController_execUpdateProfileData_Parms UpdateProfileData_Parms;

	this->ProcessEvent ( pFnUpdateProfileData, &UpdateProfileData_Parms, NULL );
};

// Function SFXGame.BioPlayerController.NotifyProfileLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventNotifyProfileLoaded ( )
{
	static UFunction* pFnNotifyProfileLoaded = NULL;

	if ( ! pFnNotifyProfileLoaded )
		pFnNotifyProfileLoaded = (UFunction*) UObject::GObjObjects()->Data[ 56324 ];

	ABioPlayerController_eventNotifyProfileLoaded_Parms NotifyProfileLoaded_Parms;

	this->ProcessEvent ( pFnNotifyProfileLoaded, &NotifyProfileLoaded_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ClearOnlineDelegates
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::ClearOnlineDelegates ( )
{
	static UFunction* pFnClearOnlineDelegates = NULL;

	if ( ! pFnClearOnlineDelegates )
		pFnClearOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 56329 ];

	ABioPlayerController_execClearOnlineDelegates_Parms ClearOnlineDelegates_Parms;

	this->ProcessEvent ( pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms, NULL );
};

// Function SFXGame.BioPlayerController.RegisterOnlineDelegates
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::RegisterOnlineDelegates ( )
{
	static UFunction* pFnRegisterOnlineDelegates = NULL;

	if ( ! pFnRegisterOnlineDelegates )
		pFnRegisterOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 56330 ];

	ABioPlayerController_execRegisterOnlineDelegates_Parms RegisterOnlineDelegates_Parms;

	this->ProcessEvent ( pFnRegisterOnlineDelegates, &RegisterOnlineDelegates_Parms, NULL );
};

// Function SFXGame.BioPlayerController.NotifyLoginChange
// [0x00020002] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )

void ABioPlayerController::NotifyLoginChange ( unsigned char LocalUserNum )
{
	static UFunction* pFnNotifyLoginChange = NULL;

	if ( ! pFnNotifyLoginChange )
		pFnNotifyLoginChange = (UFunction*) UObject::GObjObjects()->Data[ 56333 ];

	ABioPlayerController_execNotifyLoginChange_Parms NotifyLoginChange_Parms;
	NotifyLoginChange_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFnNotifyLoginChange, &NotifyLoginChange_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnExternalUIChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bIsOpening                     ( CPF_Parm )

void ABioPlayerController::OnExternalUIChanged ( unsigned long bIsOpening )
{
	static UFunction* pFnOnExternalUIChanged = NULL;

	if ( ! pFnOnExternalUIChanged )
		pFnOnExternalUIChanged = (UFunction*) UObject::GObjObjects()->Data[ 56336 ];

	ABioPlayerController_execOnExternalUIChanged_Parms OnExternalUIChanged_Parms;
	OnExternalUIChanged_Parms.bIsOpening = bIsOpening;

	this->ProcessEvent ( pFnOnExternalUIChanged, &OnExternalUIChanged_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ProxyOnExternalUIChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bIsOpening                     ( CPF_Parm )

void ABioPlayerController::eventProxyOnExternalUIChanged ( unsigned long bIsOpening )
{
	static UFunction* pFnProxyOnExternalUIChanged = NULL;

	if ( ! pFnProxyOnExternalUIChanged )
		pFnProxyOnExternalUIChanged = (UFunction*) UObject::GObjObjects()->Data[ 56342 ];

	ABioPlayerController_eventProxyOnExternalUIChanged_Parms ProxyOnExternalUIChanged_Parms;
	ProxyOnExternalUIChanged_Parms.bIsOpening = bIsOpening;

	this->ProcessEvent ( pFnProxyOnExternalUIChanged, &ProxyOnExternalUIChanged_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnControllerChanged
// [0x00020002] 
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void ABioPlayerController::OnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnOnControllerChanged = NULL;

	if ( ! pFnOnControllerChanged )
		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 56346 ];

	ABioPlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ProxyOnControllerChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void ABioPlayerController::eventProxyOnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnProxyOnControllerChanged = NULL;

	if ( ! pFnProxyOnControllerChanged )
		pFnProxyOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 56348 ];

	ABioPlayerController_eventProxyOnControllerChanged_Parms ProxyOnControllerChanged_Parms;
	ProxyOnControllerChanged_Parms.ControllerId = ControllerId;
	ProxyOnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnProxyOnControllerChanged, &ProxyOnControllerChanged_Parms, NULL );
};

// Function SFXGame.BioPlayerController.Initialize
// [0x00020000] 
// Parameters infos:

void ABioPlayerController::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 56366 ];

	ABioPlayerController_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioPlayerController::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 56369 ];

	ABioPlayerController_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnSquadSeen
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oSquad                         ( CPF_Parm )

void ABioPlayerController::eventOnSquadSeen ( class AActor* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 56370 ];

	ABioPlayerController_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnActionComplete_Movement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioPlayerController::eventOnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 56374 ];

	ABioPlayerController_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioPlayerController::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 56376 ];

	ABioPlayerController_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioPlayerController::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 56382 ];

	ABioPlayerController_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnCastAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioPlayerController::eventOnCastAt ( class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 56388 ];

	ABioPlayerController_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnAttacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioPlayerController::eventOnAttacked ( class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 56392 ];

	ABioPlayerController_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnAbilityDisabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioPlayerController::eventOnAbilityDisabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityDisabled = NULL;

	if ( ! pFnOnAbilityDisabled )
		pFnOnAbilityDisabled = (UFunction*) UObject::GObjObjects()->Data[ 56396 ];

	ABioPlayerController_eventOnAbilityDisabled_Parms OnAbilityDisabled_Parms;
	OnAbilityDisabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityDisabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityDisabled, &OnAbilityDisabled_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnAbilityEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioPlayerController::eventOnAbilityEnabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityEnabled = NULL;

	if ( ! pFnOnAbilityEnabled )
		pFnOnAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 56400 ];

	ABioPlayerController_eventOnAbilityEnabled_Parms OnAbilityEnabled_Parms;
	OnAbilityEnabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityEnabled, &OnAbilityEnabled_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnNoCombatAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventOnNoCombatAction ( )
{
	static UFunction* pFnOnNoCombatAction = NULL;

	if ( ! pFnOnNoCombatAction )
		pFnOnNoCombatAction = (UFunction*) UObject::GObjObjects()->Data[ 56404 ];

	ABioPlayerController_eventOnNoCombatAction_Parms OnNoCombatAction_Parms;

	this->ProcessEvent ( pFnOnNoCombatAction, &OnNoCombatAction_Parms, NULL );
};

// Function SFXGame.BioPlayerController.OnDeath
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oKiller                        ( CPF_Parm )

void ABioPlayerController::eventOnDeath ( class AController* oKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 56408 ];

	ABioPlayerController_eventOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioPlayerController.IsMoveInputIgnored
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsMoveInputIgnored ( )
{
	static UFunction* pFnIsMoveInputIgnored = NULL;

	if ( ! pFnIsMoveInputIgnored )
		pFnIsMoveInputIgnored = (UFunction*) UObject::GObjObjects()->Data[ 56410 ];

	ABioPlayerController_execIsMoveInputIgnored_Parms IsMoveInputIgnored_Parms;

	this->ProcessEvent ( pFnIsMoveInputIgnored, &IsMoveInputIgnored_Parms, NULL );

	return IsMoveInputIgnored_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.OnTeleportCameraSync
// [0x00020002] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void ABioPlayerController::OnTeleportCameraSync ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleportCameraSync = NULL;

	if ( ! pFnOnTeleportCameraSync )
		pFnOnTeleportCameraSync = (UFunction*) UObject::GObjObjects()->Data[ 56413 ];

	ABioPlayerController_execOnTeleportCameraSync_Parms OnTeleportCameraSync_Parms;
	OnTeleportCameraSync_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleportCameraSync, &OnTeleportCameraSync_Parms, NULL );
};

// Function SFXGame.BioPlayerController.UnlockGamerPicture
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            PictureId                      ( CPF_Parm )

void ABioPlayerController::eventUnlockGamerPicture ( int PictureId )
{
	static UFunction* pFnUnlockGamerPicture = NULL;

	if ( ! pFnUnlockGamerPicture )
		pFnUnlockGamerPicture = (UFunction*) UObject::GObjObjects()->Data[ 56415 ];

	ABioPlayerController_eventUnlockGamerPicture_Parms UnlockGamerPicture_Parms;
	UnlockGamerPicture_Parms.PictureId = PictureId;

	this->ProcessEvent ( pFnUnlockGamerPicture, &UnlockGamerPicture_Parms, NULL );
};

// Function SFXGame.BioPlayerController.GetIsAchievementEarned
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )

bool ABioPlayerController::GetIsAchievementEarned ( int AchievementId )
{
	static UFunction* pFnGetIsAchievementEarned = NULL;

	if ( ! pFnGetIsAchievementEarned )
		pFnGetIsAchievementEarned = (UFunction*) UObject::GObjObjects()->Data[ 55930 ];

	ABioPlayerController_execGetIsAchievementEarned_Parms GetIsAchievementEarned_Parms;
	GetIsAchievementEarned_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnGetIsAchievementEarned, &GetIsAchievementEarned_Parms, NULL );

	return GetIsAchievementEarned_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.UnlockAchievement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            AchievementId                  ( CPF_Parm )
// unsigned long                  bUpdatePlotState               ( CPF_Parm )

void ABioPlayerController::eventUnlockAchievement ( int AchievementId, unsigned long bUpdatePlotState )
{
	static UFunction* pFnUnlockAchievement = NULL;

	if ( ! pFnUnlockAchievement )
		pFnUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 56427 ];

	ABioPlayerController_eventUnlockAchievement_Parms UnlockAchievement_Parms;
	UnlockAchievement_Parms.AchievementId = AchievementId;
	UnlockAchievement_Parms.bUpdatePlotState = bUpdatePlotState;

	this->ProcessEvent ( pFnUnlockAchievement, &UnlockAchievement_Parms, NULL );
};

// Function SFXGame.BioPlayerController.RestoreMotionBlur
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::RestoreMotionBlur ( )
{
	static UFunction* pFnRestoreMotionBlur = NULL;

	if ( ! pFnRestoreMotionBlur )
		pFnRestoreMotionBlur = (UFunction*) UObject::GObjObjects()->Data[ 56430 ];

	ABioPlayerController_execRestoreMotionBlur_Parms RestoreMotionBlur_Parms;

	pFnRestoreMotionBlur->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreMotionBlur, &RestoreMotionBlur_Parms, NULL );

	pFnRestoreMotionBlur->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.DisableMotionBlur
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::DisableMotionBlur ( )
{
	static UFunction* pFnDisableMotionBlur = NULL;

	if ( ! pFnDisableMotionBlur )
		pFnDisableMotionBlur = (UFunction*) UObject::GObjObjects()->Data[ 56435 ];

	ABioPlayerController_execDisableMotionBlur_Parms DisableMotionBlur_Parms;

	pFnDisableMotionBlur->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisableMotionBlur, &DisableMotionBlur_Parms, NULL );

	pFnDisableMotionBlur->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.InitializeGammaCorrectionSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::InitializeGammaCorrectionSettings ( )
{
	static UFunction* pFnInitializeGammaCorrectionSettings = NULL;

	if ( ! pFnInitializeGammaCorrectionSettings )
		pFnInitializeGammaCorrectionSettings = (UFunction*) UObject::GObjObjects()->Data[ 56436 ];

	ABioPlayerController_execInitializeGammaCorrectionSettings_Parms InitializeGammaCorrectionSettings_Parms;

	pFnInitializeGammaCorrectionSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeGammaCorrectionSettings, &InitializeGammaCorrectionSettings_Parms, NULL );

	pFnInitializeGammaCorrectionSettings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SetPostProcessValuesEx
// [0x00020002] 
// Parameters infos:
// int                            i_GammaPreset                  ( CPF_Parm )

void ABioPlayerController::SetPostProcessValuesEx ( int i_GammaPreset )
{
	static UFunction* pFnSetPostProcessValuesEx = NULL;

	if ( ! pFnSetPostProcessValuesEx )
		pFnSetPostProcessValuesEx = (UFunction*) UObject::GObjObjects()->Data[ 56437 ];

	ABioPlayerController_execSetPostProcessValuesEx_Parms SetPostProcessValuesEx_Parms;
	SetPostProcessValuesEx_Parms.i_GammaPreset = i_GammaPreset;

	this->ProcessEvent ( pFnSetPostProcessValuesEx, &SetPostProcessValuesEx_Parms, NULL );
};

// Function SFXGame.BioPlayerController.SetPostProcessValues
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Preset                         ( CPF_Parm )

void ABioPlayerController::SetPostProcessValues ( unsigned char Preset )
{
	static UFunction* pFnSetPostProcessValues = NULL;

	if ( ! pFnSetPostProcessValues )
		pFnSetPostProcessValues = (UFunction*) UObject::GObjObjects()->Data[ 56438 ];

	ABioPlayerController_execSetPostProcessValues_Parms SetPostProcessValues_Parms;
	SetPostProcessValues_Parms.Preset = Preset;

	pFnSetPostProcessValues->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPostProcessValues, &SetPostProcessValues_Parms, NULL );

	pFnSetPostProcessValues->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.ProxyClientStopForceFeedbackWaveform
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UForceFeedbackWaveform*  pWaveform                      ( CPF_OptionalParm | CPF_Parm )

void ABioPlayerController::eventProxyClientStopForceFeedbackWaveform ( class UForceFeedbackWaveform* pWaveform )
{
	static UFunction* pFnProxyClientStopForceFeedbackWaveform = NULL;

	if ( ! pFnProxyClientStopForceFeedbackWaveform )
		pFnProxyClientStopForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 56440 ];

	ABioPlayerController_eventProxyClientStopForceFeedbackWaveform_Parms ProxyClientStopForceFeedbackWaveform_Parms;
	ProxyClientStopForceFeedbackWaveform_Parms.pWaveform = pWaveform;

	this->ProcessEvent ( pFnProxyClientStopForceFeedbackWaveform, &ProxyClientStopForceFeedbackWaveform_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ProxyClientPlayForceFeedbackWaveform
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UForceFeedbackWaveform*  pWaveform                      ( CPF_Parm )

void ABioPlayerController::eventProxyClientPlayForceFeedbackWaveform ( class UForceFeedbackWaveform* pWaveform )
{
	static UFunction* pFnProxyClientPlayForceFeedbackWaveform = NULL;

	if ( ! pFnProxyClientPlayForceFeedbackWaveform )
		pFnProxyClientPlayForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 56442 ];

	ABioPlayerController_eventProxyClientPlayForceFeedbackWaveform_Parms ProxyClientPlayForceFeedbackWaveform_Parms;
	ProxyClientPlayForceFeedbackWaveform_Parms.pWaveform = pWaveform;

	this->ProcessEvent ( pFnProxyClientPlayForceFeedbackWaveform, &ProxyClientPlayForceFeedbackWaveform_Parms, NULL );
};

// Function SFXGame.BioPlayerController.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioPlayerController::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 56444 ];

	ABioPlayerController_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.Possess
// [0x00020002] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ABioPlayerController::Possess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 56446 ];

	ABioPlayerController_execPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function SFXGame.BioPlayerController.LoadInputBindings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::LoadInputBindings ( )
{
	static UFunction* pFnLoadInputBindings = NULL;

	if ( ! pFnLoadInputBindings )
		pFnLoadInputBindings = (UFunction*) UObject::GObjObjects()->Data[ 56448 ];

	ABioPlayerController_execLoadInputBindings_Parms LoadInputBindings_Parms;

	pFnLoadInputBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadInputBindings, &LoadInputBindings_Parms, NULL );

	pFnLoadInputBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SaveInputBindings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::SaveInputBindings ( )
{
	static UFunction* pFnSaveInputBindings = NULL;

	if ( ! pFnSaveInputBindings )
		pFnSaveInputBindings = (UFunction*) UObject::GObjObjects()->Data[ 56452 ];

	ABioPlayerController_execSaveInputBindings_Parms SaveInputBindings_Parms;

	pFnSaveInputBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveInputBindings, &SaveInputBindings_Parms, NULL );

	pFnSaveInputBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.UpdateInputConfiguration
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventUpdateInputConfiguration ( )
{
	static UFunction* pFnUpdateInputConfiguration = NULL;

	if ( ! pFnUpdateInputConfiguration )
		pFnUpdateInputConfiguration = (UFunction*) UObject::GObjObjects()->Data[ 56453 ];

	ABioPlayerController_eventUpdateInputConfiguration_Parms UpdateInputConfiguration_Parms;

	this->ProcessEvent ( pFnUpdateInputConfiguration, &UpdateInputConfiguration_Parms, NULL );
};

// Function SFXGame.BioPlayerController.UnPauseController
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventUnPauseController ( )
{
	static UFunction* pFnUnPauseController = NULL;

	if ( ! pFnUnPauseController )
		pFnUnPauseController = (UFunction*) UObject::GObjObjects()->Data[ 56488 ];

	ABioPlayerController_eventUnPauseController_Parms UnPauseController_Parms;

	this->ProcessEvent ( pFnUnPauseController, &UnPauseController_Parms, NULL );
};

// Function SFXGame.BioPlayerController.PauseController
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventPauseController ( )
{
	static UFunction* pFnPauseController = NULL;

	if ( ! pFnPauseController )
		pFnPauseController = (UFunction*) UObject::GObjObjects()->Data[ 56489 ];

	ABioPlayerController_eventPauseController_Parms PauseController_Parms;

	this->ProcessEvent ( pFnPauseController, &PauseController_Parms, NULL );
};

// Function SFXGame.BioPlayerController.PushOffCover
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::PushOffCover ( )
{
	static UFunction* pFnPushOffCover = NULL;

	if ( ! pFnPushOffCover )
		pFnPushOffCover = (UFunction*) UObject::GObjObjects()->Data[ 56507 ];

	ABioPlayerController_execPushOffCover_Parms PushOffCover_Parms;

	this->ProcessEvent ( pFnPushOffCover, &PushOffCover_Parms, NULL );
};

// Function SFXGame.BioPlayerController.DetermineLeanDirection
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                ChkPawn                        ( CPF_Parm )
// unsigned char                  out_PawnCA                     ( CPF_Parm | CPF_OutParm )
// unsigned char                  out_PawnLeanBias               ( CPF_Parm | CPF_OutParm )
// unsigned char                  out_PawnSnapDirection          ( CPF_Parm | CPF_OutParm )

void ABioPlayerController::DetermineLeanDirection ( class ABioPawn* ChkPawn, unsigned char* out_PawnCA, unsigned char* out_PawnLeanBias, unsigned char* out_PawnSnapDirection )
{
	static UFunction* pFnDetermineLeanDirection = NULL;

	if ( ! pFnDetermineLeanDirection )
		pFnDetermineLeanDirection = (UFunction*) UObject::GObjObjects()->Data[ 56627 ];

	ABioPlayerController_execDetermineLeanDirection_Parms DetermineLeanDirection_Parms;
	DetermineLeanDirection_Parms.ChkPawn = ChkPawn;

	pFnDetermineLeanDirection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetermineLeanDirection, &DetermineLeanDirection_Parms, NULL );

	pFnDetermineLeanDirection->FunctionFlags |= 0x400;

	if ( out_PawnCA )
		*out_PawnCA = DetermineLeanDirection_Parms.out_PawnCA;

	if ( out_PawnLeanBias )
		*out_PawnLeanBias = DetermineLeanDirection_Parms.out_PawnLeanBias;

	if ( out_PawnSnapDirection )
		*out_PawnSnapDirection = DetermineLeanDirection_Parms.out_PawnSnapDirection;
};

// Function SFXGame.BioPlayerController.ResetCoverAction
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::ResetCoverAction ( )
{
	static UFunction* pFnResetCoverAction = NULL;

	if ( ! pFnResetCoverAction )
		pFnResetCoverAction = (UFunction*) UObject::GObjObjects()->Data[ 56628 ];

	ABioPlayerController_execResetCoverAction_Parms ResetCoverAction_Parms;

	this->ProcessEvent ( pFnResetCoverAction, &ResetCoverAction_Parms, NULL );
};

// Function SFXGame.BioPlayerController.IsCameraAlignedWithCoverSlot
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fThreshold                     ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::IsCameraAlignedWithCoverSlot ( float fThreshold )
{
	static UFunction* pFnIsCameraAlignedWithCoverSlot = NULL;

	if ( ! pFnIsCameraAlignedWithCoverSlot )
		pFnIsCameraAlignedWithCoverSlot = (UFunction*) UObject::GObjObjects()->Data[ 56633 ];

	ABioPlayerController_execIsCameraAlignedWithCoverSlot_Parms IsCameraAlignedWithCoverSlot_Parms;
	IsCameraAlignedWithCoverSlot_Parms.fThreshold = fThreshold;

	this->ProcessEvent ( pFnIsCameraAlignedWithCoverSlot, &IsCameraAlignedWithCoverSlot_Parms, NULL );

	return IsCameraAlignedWithCoverSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.IsInCoverState
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsInCoverState ( )
{
	static UFunction* pFnIsInCoverState = NULL;

	if ( ! pFnIsInCoverState )
		pFnIsInCoverState = (UFunction*) UObject::GObjObjects()->Data[ 56617 ];

	ABioPlayerController_execIsInCoverState_Parms IsInCoverState_Parms;

	this->ProcessEvent ( pFnIsInCoverState, &IsInCoverState_Parms, NULL );

	return IsInCoverState_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.ProcessViewRotation
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                DeltaRot                       ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )

void ABioPlayerController::ProcessViewRotation ( float DeltaTime, struct FRotator DeltaRot, struct FRotator* out_ViewRotation )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 56620 ];

	ABioPlayerController_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
	memcpy ( &ProcessViewRotation_Parms.DeltaRot, &DeltaRot, 0xC );

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );
};

// Function SFXGame.BioPlayerController.IsLookInputIgnored
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsLookInputIgnored ( )
{
	static UFunction* pFnIsLookInputIgnored = NULL;

	if ( ! pFnIsLookInputIgnored )
		pFnIsLookInputIgnored = (UFunction*) UObject::GObjObjects()->Data[ 56641 ];

	ABioPlayerController_execIsLookInputIgnored_Parms IsLookInputIgnored_Parms;

	this->ProcessEvent ( pFnIsLookInputIgnored, &IsLookInputIgnored_Parms, NULL );

	return IsLookInputIgnored_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.SpawnPlayerCamera
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::SpawnPlayerCamera ( )
{
	static UFunction* pFnSpawnPlayerCamera = NULL;

	if ( ! pFnSpawnPlayerCamera )
		pFnSpawnPlayerCamera = (UFunction*) UObject::GObjObjects()->Data[ 56649 ];

	ABioPlayerController_execSpawnPlayerCamera_Parms SpawnPlayerCamera_Parms;

	this->ProcessEvent ( pFnSpawnPlayerCamera, &SpawnPlayerCamera_Parms, NULL );
};

// Function SFXGame.BioPlayerController.DisablePhotoModeCameraCollision
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::DisablePhotoModeCameraCollision ( )
{
	static UFunction* pFnDisablePhotoModeCameraCollision = NULL;

	if ( ! pFnDisablePhotoModeCameraCollision )
		pFnDisablePhotoModeCameraCollision = (UFunction*) UObject::GObjObjects()->Data[ 56668 ];

	ABioPlayerController_execDisablePhotoModeCameraCollision_Parms DisablePhotoModeCameraCollision_Parms;

	this->ProcessEvent ( pFnDisablePhotoModeCameraCollision, &DisablePhotoModeCameraCollision_Parms, NULL );
};

// Function SFXGame.BioPlayerController.EnablePhotoModeCameraCollision
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::EnablePhotoModeCameraCollision ( )
{
	static UFunction* pFnEnablePhotoModeCameraCollision = NULL;

	if ( ! pFnEnablePhotoModeCameraCollision )
		pFnEnablePhotoModeCameraCollision = (UFunction*) UObject::GObjObjects()->Data[ 56690 ];

	ABioPlayerController_execEnablePhotoModeCameraCollision_Parms EnablePhotoModeCameraCollision_Parms;

	this->ProcessEvent ( pFnEnablePhotoModeCameraCollision, &EnablePhotoModeCameraCollision_Parms, NULL );
};

// Function SFXGame.BioPlayerController.EndConversationMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventEndConversationMode ( )
{
	static UFunction* pFnEndConversationMode = NULL;

	if ( ! pFnEndConversationMode )
		pFnEndConversationMode = (UFunction*) UObject::GObjObjects()->Data[ 56691 ];

	ABioPlayerController_eventEndConversationMode_Parms EndConversationMode_Parms;

	this->ProcessEvent ( pFnEndConversationMode, &EndConversationMode_Parms, NULL );
};

// Function SFXGame.BioPlayerController.StartConversationMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventStartConversationMode ( )
{
	static UFunction* pFnStartConversationMode = NULL;

	if ( ! pFnStartConversationMode )
		pFnStartConversationMode = (UFunction*) UObject::GObjObjects()->Data[ 56692 ];

	ABioPlayerController_eventStartConversationMode_Parms StartConversationMode_Parms;

	this->ProcessEvent ( pFnStartConversationMode, &StartConversationMode_Parms, NULL );
};

// Function SFXGame.BioPlayerController.SetCinematicMode
// [0x00020002] 
// Parameters infos:
// unsigned long                  bInCinematicMode               ( CPF_Parm )
// unsigned long                  bHidePlayer                    ( CPF_Parm )
// unsigned long                  bAffectsHUD                    ( CPF_Parm )
// unsigned long                  bAffectsMovement               ( CPF_Parm )
// unsigned long                  bAffectsTurning                ( CPF_Parm )
// unsigned long                  bAffectsButtons                ( CPF_Parm )

void ABioPlayerController::SetCinematicMode ( unsigned long bInCinematicMode, unsigned long bHidePlayer, unsigned long bAffectsHUD, unsigned long bAffectsMovement, unsigned long bAffectsTurning, unsigned long bAffectsButtons )
{
	static UFunction* pFnSetCinematicMode = NULL;

	if ( ! pFnSetCinematicMode )
		pFnSetCinematicMode = (UFunction*) UObject::GObjObjects()->Data[ 56693 ];

	ABioPlayerController_execSetCinematicMode_Parms SetCinematicMode_Parms;
	SetCinematicMode_Parms.bInCinematicMode = bInCinematicMode;
	SetCinematicMode_Parms.bHidePlayer = bHidePlayer;
	SetCinematicMode_Parms.bAffectsHUD = bAffectsHUD;
	SetCinematicMode_Parms.bAffectsMovement = bAffectsMovement;
	SetCinematicMode_Parms.bAffectsTurning = bAffectsTurning;
	SetCinematicMode_Parms.bAffectsButtons = bAffectsButtons;

	this->ProcessEvent ( pFnSetCinematicMode, &SetCinematicMode_Parms, NULL );
};

// Function SFXGame.BioPlayerController.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56694 ];

	ABioPlayerController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioPlayerController.StopForceFeedback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eFeedbackType                  ( CPF_Parm )
// unsigned char                  eWaveform                      ( CPF_Parm )

void ABioPlayerController::StopForceFeedback ( unsigned char eFeedbackType, unsigned char eWaveform )
{
	static UFunction* pFnStopForceFeedback = NULL;

	if ( ! pFnStopForceFeedback )
		pFnStopForceFeedback = (UFunction*) UObject::GObjObjects()->Data[ 56703 ];

	ABioPlayerController_execStopForceFeedback_Parms StopForceFeedback_Parms;
	StopForceFeedback_Parms.eFeedbackType = eFeedbackType;
	StopForceFeedback_Parms.eWaveform = eWaveform;

	pFnStopForceFeedback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopForceFeedback, &StopForceFeedback_Parms, NULL );

	pFnStopForceFeedback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.PlayForceFeedback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eFeedbackType                  ( CPF_Parm )
// unsigned char                  eWaveform                      ( CPF_Parm )

void ABioPlayerController::PlayForceFeedback ( unsigned char eFeedbackType, unsigned char eWaveform )
{
	static UFunction* pFnPlayForceFeedback = NULL;

	if ( ! pFnPlayForceFeedback )
		pFnPlayForceFeedback = (UFunction*) UObject::GObjObjects()->Data[ 56705 ];

	ABioPlayerController_execPlayForceFeedback_Parms PlayForceFeedback_Parms;
	PlayForceFeedback_Parms.eFeedbackType = eFeedbackType;
	PlayForceFeedback_Parms.eWaveform = eWaveform;

	pFnPlayForceFeedback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayForceFeedback, &PlayForceFeedback_Parms, NULL );

	pFnPlayForceFeedback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.EnablePauseGameOnControllerRemoval
// [0x00020000] 
// Parameters infos:

void ABioPlayerController::EnablePauseGameOnControllerRemoval ( )
{
	static UFunction* pFnEnablePauseGameOnControllerRemoval = NULL;

	if ( ! pFnEnablePauseGameOnControllerRemoval )
		pFnEnablePauseGameOnControllerRemoval = (UFunction*) UObject::GObjObjects()->Data[ 56708 ];

	ABioPlayerController_execEnablePauseGameOnControllerRemoval_Parms EnablePauseGameOnControllerRemoval_Parms;

	this->ProcessEvent ( pFnEnablePauseGameOnControllerRemoval, &EnablePauseGameOnControllerRemoval_Parms, NULL );
};

// Function SFXGame.BioPlayerController.DissablePauseGameOnControllerRemoval
// [0x00020000] 
// Parameters infos:

void ABioPlayerController::DissablePauseGameOnControllerRemoval ( )
{
	static UFunction* pFnDissablePauseGameOnControllerRemoval = NULL;

	if ( ! pFnDissablePauseGameOnControllerRemoval )
		pFnDissablePauseGameOnControllerRemoval = (UFunction*) UObject::GObjObjects()->Data[ 56711 ];

	ABioPlayerController_execDissablePauseGameOnControllerRemoval_Parms DissablePauseGameOnControllerRemoval_Parms;

	this->ProcessEvent ( pFnDissablePauseGameOnControllerRemoval, &DissablePauseGameOnControllerRemoval_Parms, NULL );
};

// Function SFXGame.BioPlayerController.GetSensitivityScaling
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPlayerController::GetSensitivityScaling ( )
{
	static UFunction* pFnGetSensitivityScaling = NULL;

	if ( ! pFnGetSensitivityScaling )
		pFnGetSensitivityScaling = (UFunction*) UObject::GObjObjects()->Data[ 56712 ];

	ABioPlayerController_execGetSensitivityScaling_Parms GetSensitivityScaling_Parms;

	this->ProcessEvent ( pFnGetSensitivityScaling, &GetSensitivityScaling_Parms, NULL );

	return GetSensitivityScaling_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.IsAbleToInstigate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsAbleToInstigate ( )
{
	static UFunction* pFnIsAbleToInstigate = NULL;

	if ( ! pFnIsAbleToInstigate )
		pFnIsAbleToInstigate = (UFunction*) UObject::GObjObjects()->Data[ 56713 ];

	ABioPlayerController_execIsAbleToInstigate_Parms IsAbleToInstigate_Parms;

	pFnIsAbleToInstigate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbleToInstigate, &IsAbleToInstigate_Parms, NULL );

	pFnIsAbleToInstigate->FunctionFlags |= 0x400;

	return IsAbleToInstigate_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.GetAdjustedAimFor
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ABioPlayerController::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 56716 ];

	ABioPlayerController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.GetZoomSnapTarget
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          MinDistance                    ( CPF_Parm )
// float                          MaxDistance                    ( CPF_Parm )
// struct FVector                 AimLocation                    ( CPF_Parm | CPF_OutParm )

class APawn* ABioPlayerController::GetZoomSnapTarget ( float MinDistance, float MaxDistance, struct FVector* AimLocation )
{
	static UFunction* pFnGetZoomSnapTarget = NULL;

	if ( ! pFnGetZoomSnapTarget )
		pFnGetZoomSnapTarget = (UFunction*) UObject::GObjObjects()->Data[ 56120 ];

	ABioPlayerController_execGetZoomSnapTarget_Parms GetZoomSnapTarget_Parms;
	GetZoomSnapTarget_Parms.MinDistance = MinDistance;
	GetZoomSnapTarget_Parms.MaxDistance = MaxDistance;

	pFnGetZoomSnapTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetZoomSnapTarget, &GetZoomSnapTarget_Parms, NULL );

	pFnGetZoomSnapTarget->FunctionFlags |= 0x400;

	if ( AimLocation )
		memcpy ( AimLocation, &GetZoomSnapTarget_Parms.AimLocation, 0xC );

	return GetZoomSnapTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.GetAimAssistTarget
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          MaxDistance                    ( CPF_Parm )
// struct FVector                 CamLoc                         ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FRotator                CamRot                         ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FVector                 TargetLoc                      ( CPF_Parm | CPF_OutParm )
// float                          Margin                         ( CPF_Parm | CPF_OutParm )

class APawn* ABioPlayerController::GetAimAssistTarget ( float MaxDistance, struct FVector* CamLoc, struct FRotator* CamRot, struct FVector* TargetLoc, float* Margin )
{
	static UFunction* pFnGetAimAssistTarget = NULL;

	if ( ! pFnGetAimAssistTarget )
		pFnGetAimAssistTarget = (UFunction*) UObject::GObjObjects()->Data[ 55983 ];

	ABioPlayerController_execGetAimAssistTarget_Parms GetAimAssistTarget_Parms;
	GetAimAssistTarget_Parms.MaxDistance = MaxDistance;

	pFnGetAimAssistTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAimAssistTarget, &GetAimAssistTarget_Parms, NULL );

	pFnGetAimAssistTarget->FunctionFlags |= 0x400;

	if ( CamLoc )
		memcpy ( CamLoc, &GetAimAssistTarget_Parms.CamLoc, 0xC );

	if ( CamRot )
		memcpy ( CamRot, &GetAimAssistTarget_Parms.CamRot, 0xC );

	if ( TargetLoc )
		memcpy ( TargetLoc, &GetAimAssistTarget_Parms.TargetLoc, 0xC );

	if ( Margin )
		*Margin = GetAimAssistTarget_Parms.Margin;

	return GetAimAssistTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.ScoreZoomSnapTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   TestPawn                       ( CPF_Parm )
// float                          MaxDistance                    ( CPF_Parm )
// struct FVector                 CamLoc                         ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FRotator                CamRot                         ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FVector                 AimLocation                    ( CPF_Parm | CPF_OutParm )

float ABioPlayerController::ScoreZoomSnapTarget ( class APawn* TestPawn, float MaxDistance, struct FVector* CamLoc, struct FRotator* CamRot, struct FVector* AimLocation )
{
	static UFunction* pFnScoreZoomSnapTarget = NULL;

	if ( ! pFnScoreZoomSnapTarget )
		pFnScoreZoomSnapTarget = (UFunction*) UObject::GObjObjects()->Data[ 56734 ];

	ABioPlayerController_execScoreZoomSnapTarget_Parms ScoreZoomSnapTarget_Parms;
	ScoreZoomSnapTarget_Parms.TestPawn = TestPawn;
	ScoreZoomSnapTarget_Parms.MaxDistance = MaxDistance;

	pFnScoreZoomSnapTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreZoomSnapTarget, &ScoreZoomSnapTarget_Parms, NULL );

	pFnScoreZoomSnapTarget->FunctionFlags |= 0x400;

	if ( CamLoc )
		memcpy ( CamLoc, &ScoreZoomSnapTarget_Parms.CamLoc, 0xC );

	if ( CamRot )
		memcpy ( CamRot, &ScoreZoomSnapTarget_Parms.CamRot, 0xC );

	if ( AimLocation )
		memcpy ( AimLocation, &ScoreZoomSnapTarget_Parms.AimLocation, 0xC );

	return ScoreZoomSnapTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.LerpMovementStickAngle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            RotDesired                     ( CPF_Parm )
// int                            RotBase                        ( CPF_Parm )
// float                          RotationSpeed                  ( CPF_Parm )
// float                          DeltaSeconds                   ( CPF_Parm )

int ABioPlayerController::LerpMovementStickAngle ( int RotDesired, int RotBase, float RotationSpeed, float DeltaSeconds )
{
	static UFunction* pFnLerpMovementStickAngle = NULL;

	if ( ! pFnLerpMovementStickAngle )
		pFnLerpMovementStickAngle = (UFunction*) UObject::GObjObjects()->Data[ 56536 ];

	ABioPlayerController_execLerpMovementStickAngle_Parms LerpMovementStickAngle_Parms;
	LerpMovementStickAngle_Parms.RotDesired = RotDesired;
	LerpMovementStickAngle_Parms.RotBase = RotBase;
	LerpMovementStickAngle_Parms.RotationSpeed = RotationSpeed;
	LerpMovementStickAngle_Parms.DeltaSeconds = DeltaSeconds;

	pFnLerpMovementStickAngle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLerpMovementStickAngle, &LerpMovementStickAngle_Parms, NULL );

	pFnLerpMovementStickAngle->FunctionFlags |= 0x400;

	return LerpMovementStickAngle_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.ComputeMovementStickAngle
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          Mag                            ( CPF_Parm | CPF_OutParm )
// float                          AngleStick                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                RotWorld                       ( CPF_Parm | CPF_OutParm )

void ABioPlayerController::ComputeMovementStickAngle ( float* Mag, float* AngleStick, struct FRotator* RotWorld )
{
	static UFunction* pFnComputeMovementStickAngle = NULL;

	if ( ! pFnComputeMovementStickAngle )
		pFnComputeMovementStickAngle = (UFunction*) UObject::GObjObjects()->Data[ 56542 ];

	ABioPlayerController_execComputeMovementStickAngle_Parms ComputeMovementStickAngle_Parms;

	pFnComputeMovementStickAngle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeMovementStickAngle, &ComputeMovementStickAngle_Parms, NULL );

	pFnComputeMovementStickAngle->FunctionFlags |= 0x400;

	if ( Mag )
		*Mag = ComputeMovementStickAngle_Parms.Mag;

	if ( AngleStick )
		*AngleStick = ComputeMovementStickAngle_Parms.AngleStick;

	if ( RotWorld )
		memcpy ( RotWorld, &ComputeMovementStickAngle_Parms.RotWorld, 0xC );
};

// Function SFXGame.BioPlayerController.CanPerceiveTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

bool ABioPlayerController::CanPerceiveTarget ( class AActor* oTarget )
{
	static UFunction* pFnCanPerceiveTarget = NULL;

	if ( ! pFnCanPerceiveTarget )
		pFnCanPerceiveTarget = (UFunction*) UObject::GObjObjects()->Data[ 56751 ];

	ABioPlayerController_execCanPerceiveTarget_Parms CanPerceiveTarget_Parms;
	CanPerceiveTarget_Parms.oTarget = oTarget;

	pFnCanPerceiveTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPerceiveTarget, &CanPerceiveTarget_Parms, NULL );

	pFnCanPerceiveTarget->FunctionFlags |= 0x400;

	return CanPerceiveTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.GetTargetRelativeRotation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vDirection                     ( CPF_Parm | CPF_OutParm )

bool ABioPlayerController::GetTargetRelativeRotation ( struct FVector* vDirection )
{
	static UFunction* pFnGetTargetRelativeRotation = NULL;

	if ( ! pFnGetTargetRelativeRotation )
		pFnGetTargetRelativeRotation = (UFunction*) UObject::GObjObjects()->Data[ 56755 ];

	ABioPlayerController_execGetTargetRelativeRotation_Parms GetTargetRelativeRotation_Parms;

	pFnGetTargetRelativeRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetRelativeRotation, &GetTargetRelativeRotation_Parms, NULL );

	pFnGetTargetRelativeRotation->FunctionFlags |= 0x400;

	if ( vDirection )
		memcpy ( vDirection, &GetTargetRelativeRotation_Parms.vDirection, 0xC );

	return GetTargetRelativeRotation_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.LogCinematicMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bIsStartingCinematic           ( CPF_Parm )

void ABioPlayerController::LogCinematicMode ( unsigned long bIsStartingCinematic )
{
	static UFunction* pFnLogCinematicMode = NULL;

	if ( ! pFnLogCinematicMode )
		pFnLogCinematicMode = (UFunction*) UObject::GObjObjects()->Data[ 56758 ];

	ABioPlayerController_execLogCinematicMode_Parms LogCinematicMode_Parms;
	LogCinematicMode_Parms.bIsStartingCinematic = bIsStartingCinematic;

	pFnLogCinematicMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogCinematicMode, &LogCinematicMode_Parms, NULL );

	pFnLogCinematicMode->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.BioOnPawnActionStateChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::BioOnPawnActionStateChanged ( )
{
	static UFunction* pFnBioOnPawnActionStateChanged = NULL;

	if ( ! pFnBioOnPawnActionStateChanged )
		pFnBioOnPawnActionStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 56761 ];

	ABioPlayerController_execBioOnPawnActionStateChanged_Parms BioOnPawnActionStateChanged_Parms;

	pFnBioOnPawnActionStateChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioOnPawnActionStateChanged, &BioOnPawnActionStateChanged_Parms, NULL );

	pFnBioOnPawnActionStateChanged->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.BioExitVehicle
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceExit                     ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::BioExitVehicle ( unsigned long bForceExit )
{
	static UFunction* pFnBioExitVehicle = NULL;

	if ( ! pFnBioExitVehicle )
		pFnBioExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 56763 ];

	ABioPlayerController_execBioExitVehicle_Parms BioExitVehicle_Parms;
	BioExitVehicle_Parms.bForceExit = bForceExit;

	pFnBioExitVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioExitVehicle, &BioExitVehicle_Parms, NULL );

	pFnBioExitVehicle->FunctionFlags |= 0x400;

	return BioExitVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.BioEnterVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioVehicleBase*         oVehicle                       ( CPF_Parm )

bool ABioPlayerController::BioEnterVehicle ( class ABioVehicleBase* oVehicle )
{
	static UFunction* pFnBioEnterVehicle = NULL;

	if ( ! pFnBioEnterVehicle )
		pFnBioEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 56764 ];

	ABioPlayerController_execBioEnterVehicle_Parms BioEnterVehicle_Parms;
	BioEnterVehicle_Parms.oVehicle = oVehicle;

	pFnBioEnterVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioEnterVehicle, &BioEnterVehicle_Parms, NULL );

	pFnBioEnterVehicle->FunctionFlags |= 0x400;

	return BioEnterVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.InitializeCommandTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPlayerController::InitializeCommandTarget ( )
{
	static UFunction* pFnInitializeCommandTarget = NULL;

	if ( ! pFnInitializeCommandTarget )
		pFnInitializeCommandTarget = (UFunction*) UObject::GObjObjects()->Data[ 56767 ];

	ABioPlayerController_execInitializeCommandTarget_Parms InitializeCommandTarget_Parms;

	pFnInitializeCommandTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeCommandTarget, &InitializeCommandTarget_Parms, NULL );

	pFnInitializeCommandTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.ReApplyTacticalOrders
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )
// float                          fDelay                         ( CPF_Parm )

void ABioPlayerController::ReApplyTacticalOrders ( class APawn* pPawn, float fDelay )
{
	static UFunction* pFnReApplyTacticalOrders = NULL;

	if ( ! pFnReApplyTacticalOrders )
		pFnReApplyTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 56770 ];

	ABioPlayerController_execReApplyTacticalOrders_Parms ReApplyTacticalOrders_Parms;
	ReApplyTacticalOrders_Parms.pPawn = pPawn;
	ReApplyTacticalOrders_Parms.fDelay = fDelay;

	pFnReApplyTacticalOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReApplyTacticalOrders, &ReApplyTacticalOrders_Parms, NULL );

	pFnReApplyTacticalOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.ApplyMovementOrders
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPlayerController::ApplyMovementOrders ( )
{
	static UFunction* pFnApplyMovementOrders = NULL;

	if ( ! pFnApplyMovementOrders )
		pFnApplyMovementOrders = (UFunction*) UObject::GObjObjects()->Data[ 56771 ];

	ABioPlayerController_execApplyMovementOrders_Parms ApplyMovementOrders_Parms;

	pFnApplyMovementOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyMovementOrders, &ApplyMovementOrders_Parms, NULL );

	pFnApplyMovementOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.ApplyTacticalOrders
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPlayerController::ApplyTacticalOrders ( )
{
	static UFunction* pFnApplyTacticalOrders = NULL;

	if ( ! pFnApplyTacticalOrders )
		pFnApplyTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 52061 ];

	ABioPlayerController_execApplyTacticalOrders_Parms ApplyTacticalOrders_Parms;

	pFnApplyTacticalOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyTacticalOrders, &ApplyTacticalOrders_Parms, NULL );

	pFnApplyTacticalOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SquadOrderUseGrenade
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )

void ABioPlayerController::SquadOrderUseGrenade ( class APawn* pPawn )
{
	static UFunction* pFnSquadOrderUseGrenade = NULL;

	if ( ! pFnSquadOrderUseGrenade )
		pFnSquadOrderUseGrenade = (UFunction*) UObject::GObjObjects()->Data[ 56774 ];

	ABioPlayerController_execSquadOrderUseGrenade_Parms SquadOrderUseGrenade_Parms;
	SquadOrderUseGrenade_Parms.pPawn = pPawn;

	pFnSquadOrderUseGrenade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadOrderUseGrenade, &SquadOrderUseGrenade_Parms, NULL );

	pFnSquadOrderUseGrenade->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SquadOrderEquipWeapon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  nWeapon                        ( CPF_Parm )
// class APawn*                   pPawn                          ( CPF_Parm )

void ABioPlayerController::SquadOrderEquipWeapon ( unsigned char nWeapon, class APawn* pPawn )
{
	static UFunction* pFnSquadOrderEquipWeapon = NULL;

	if ( ! pFnSquadOrderEquipWeapon )
		pFnSquadOrderEquipWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52223 ];

	ABioPlayerController_execSquadOrderEquipWeapon_Parms SquadOrderEquipWeapon_Parms;
	SquadOrderEquipWeapon_Parms.nWeapon = nWeapon;
	SquadOrderEquipWeapon_Parms.pPawn = pPawn;

	pFnSquadOrderEquipWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadOrderEquipWeapon, &SquadOrderEquipWeapon_Parms, NULL );

	pFnSquadOrderEquipWeapon->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SquadOrderUsePower
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   nmPower                        ( CPF_Parm )
// class APawn*                   pPawn                          ( CPF_Parm )

void ABioPlayerController::SquadOrderUsePower ( struct FName nmPower, class APawn* pPawn )
{
	static UFunction* pFnSquadOrderUsePower = NULL;

	if ( ! pFnSquadOrderUsePower )
		pFnSquadOrderUsePower = (UFunction*) UObject::GObjObjects()->Data[ 52060 ];

	ABioPlayerController_execSquadOrderUsePower_Parms SquadOrderUsePower_Parms;
	memcpy ( &SquadOrderUsePower_Parms.nmPower, &nmPower, 0x8 );
	SquadOrderUsePower_Parms.pPawn = pPawn;

	pFnSquadOrderUsePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadOrderUsePower, &SquadOrderUsePower_Parms, NULL );

	pFnSquadOrderUsePower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.SquadOrderShootTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )

void ABioPlayerController::SquadOrderShootTarget ( class APawn* pPawn, class AActor* Target )
{
	static UFunction* pFnSquadOrderShootTarget = NULL;

	if ( ! pFnSquadOrderShootTarget )
		pFnSquadOrderShootTarget = (UFunction*) UObject::GObjObjects()->Data[ 56778 ];

	ABioPlayerController_execSquadOrderShootTarget_Parms SquadOrderShootTarget_Parms;
	SquadOrderShootTarget_Parms.pPawn = pPawn;
	SquadOrderShootTarget_Parms.Target = Target;

	pFnSquadOrderShootTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadOrderShootTarget, &SquadOrderShootTarget_Parms, NULL );

	pFnSquadOrderShootTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.ShouldLockOnTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )

bool ABioPlayerController::ShouldLockOnTarget ( class AActor* pTarget )
{
	static UFunction* pFnShouldLockOnTarget = NULL;

	if ( ! pFnShouldLockOnTarget )
		pFnShouldLockOnTarget = (UFunction*) UObject::GObjObjects()->Data[ 56781 ];

	ABioPlayerController_execShouldLockOnTarget_Parms ShouldLockOnTarget_Parms;
	ShouldLockOnTarget_Parms.pTarget = pTarget;

	pFnShouldLockOnTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldLockOnTarget, &ShouldLockOnTarget_Parms, NULL );

	pFnShouldLockOnTarget->FunctionFlags |= 0x400;

	return ShouldLockOnTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.QuickCommandUseMappedAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSlot                          ( CPF_Parm )

bool ABioPlayerController::QuickCommandUseMappedAction ( unsigned char nSlot )
{
	static UFunction* pFnQuickCommandUseMappedAction = NULL;

	if ( ! pFnQuickCommandUseMappedAction )
		pFnQuickCommandUseMappedAction = (UFunction*) UObject::GObjObjects()->Data[ 56784 ];

	ABioPlayerController_execQuickCommandUseMappedAction_Parms QuickCommandUseMappedAction_Parms;
	QuickCommandUseMappedAction_Parms.nSlot = nSlot;

	pFnQuickCommandUseMappedAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQuickCommandUseMappedAction, &QuickCommandUseMappedAction_Parms, NULL );

	pFnQuickCommandUseMappedAction->FunctionFlags |= 0x400;

	return QuickCommandUseMappedAction_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.QuickCommandMoveTo
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSquadMember                   ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::QuickCommandMoveTo ( int iSquadMember )
{
	static UFunction* pFnQuickCommandMoveTo = NULL;

	if ( ! pFnQuickCommandMoveTo )
		pFnQuickCommandMoveTo = (UFunction*) UObject::GObjObjects()->Data[ 56787 ];

	ABioPlayerController_execQuickCommandMoveTo_Parms QuickCommandMoveTo_Parms;
	QuickCommandMoveTo_Parms.iSquadMember = iSquadMember;

	pFnQuickCommandMoveTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQuickCommandMoveTo, &QuickCommandMoveTo_Parms, NULL );

	pFnQuickCommandMoveTo->FunctionFlags |= 0x400;

	return QuickCommandMoveTo_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.QuickCommandAttackTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSquadMember                   ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )

bool ABioPlayerController::QuickCommandAttackTarget ( int iSquadMember, class AActor* pTarget )
{
	static UFunction* pFnQuickCommandAttackTarget = NULL;

	if ( ! pFnQuickCommandAttackTarget )
		pFnQuickCommandAttackTarget = (UFunction*) UObject::GObjObjects()->Data[ 56791 ];

	ABioPlayerController_execQuickCommandAttackTarget_Parms QuickCommandAttackTarget_Parms;
	QuickCommandAttackTarget_Parms.iSquadMember = iSquadMember;
	QuickCommandAttackTarget_Parms.pTarget = pTarget;

	pFnQuickCommandAttackTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQuickCommandAttackTarget, &QuickCommandAttackTarget_Parms, NULL );

	pFnQuickCommandAttackTarget->FunctionFlags |= 0x400;

	return QuickCommandAttackTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.QuickCommandFollowPlayer
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSquadMember                   ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::QuickCommandFollowPlayer ( int iSquadMember )
{
	static UFunction* pFnQuickCommandFollowPlayer = NULL;

	if ( ! pFnQuickCommandFollowPlayer )
		pFnQuickCommandFollowPlayer = (UFunction*) UObject::GObjObjects()->Data[ 56794 ];

	ABioPlayerController_execQuickCommandFollowPlayer_Parms QuickCommandFollowPlayer_Parms;
	QuickCommandFollowPlayer_Parms.iSquadMember = iSquadMember;

	pFnQuickCommandFollowPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQuickCommandFollowPlayer, &QuickCommandFollowPlayer_Parms, NULL );

	pFnQuickCommandFollowPlayer->FunctionFlags |= 0x400;

	return QuickCommandFollowPlayer_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.PlayerSquadSetActionState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eState                         ( CPF_Parm )

void ABioPlayerController::PlayerSquadSetActionState ( unsigned char eState )
{
	static UFunction* pFnPlayerSquadSetActionState = NULL;

	if ( ! pFnPlayerSquadSetActionState )
		pFnPlayerSquadSetActionState = (UFunction*) UObject::GObjObjects()->Data[ 56798 ];

	ABioPlayerController_execPlayerSquadSetActionState_Parms PlayerSquadSetActionState_Parms;
	PlayerSquadSetActionState_Parms.eState = eState;

	pFnPlayerSquadSetActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerSquadSetActionState, &PlayerSquadSetActionState_Parms, NULL );

	pFnPlayerSquadSetActionState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.GetHenchmanMappedPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oHenchman                      ( CPF_Parm )

struct FName ABioPlayerController::GetHenchmanMappedPower ( class APawn* oHenchman )
{
	static UFunction* pFnGetHenchmanMappedPower = NULL;

	if ( ! pFnGetHenchmanMappedPower )
		pFnGetHenchmanMappedPower = (UFunction*) UObject::GObjObjects()->Data[ 56801 ];

	ABioPlayerController_execGetHenchmanMappedPower_Parms GetHenchmanMappedPower_Parms;
	GetHenchmanMappedPower_Parms.oHenchman = oHenchman;

	pFnGetHenchmanMappedPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHenchmanMappedPower, &GetHenchmanMappedPower_Parms, NULL );

	pFnGetHenchmanMappedPower->FunctionFlags |= 0x400;

	return GetHenchmanMappedPower_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.SetHenchmanMappedPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oHenchman                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

bool ABioPlayerController::SetHenchmanMappedPower ( class APawn* oHenchman, struct FName nmPower )
{
	static UFunction* pFnSetHenchmanMappedPower = NULL;

	if ( ! pFnSetHenchmanMappedPower )
		pFnSetHenchmanMappedPower = (UFunction*) UObject::GObjObjects()->Data[ 56803 ];

	ABioPlayerController_execSetHenchmanMappedPower_Parms SetHenchmanMappedPower_Parms;
	SetHenchmanMappedPower_Parms.oHenchman = oHenchman;
	memcpy ( &SetHenchmanMappedPower_Parms.nmPower, &nmPower, 0x8 );

	pFnSetHenchmanMappedPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHenchmanMappedPower, &SetHenchmanMappedPower_Parms, NULL );

	pFnSetHenchmanMappedPower->FunctionFlags |= 0x400;

	return SetHenchmanMappedPower_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.IsActionMappedToPlayerSlot
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eType                          ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::IsActionMappedToPlayerSlot ( unsigned char eType, struct FName nmPower )
{
	static UFunction* pFnIsActionMappedToPlayerSlot = NULL;

	if ( ! pFnIsActionMappedToPlayerSlot )
		pFnIsActionMappedToPlayerSlot = (UFunction*) UObject::GObjObjects()->Data[ 56806 ];

	ABioPlayerController_execIsActionMappedToPlayerSlot_Parms IsActionMappedToPlayerSlot_Parms;
	IsActionMappedToPlayerSlot_Parms.eType = eType;
	memcpy ( &IsActionMappedToPlayerSlot_Parms.nmPower, &nmPower, 0x8 );

	pFnIsActionMappedToPlayerSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActionMappedToPlayerSlot, &IsActionMappedToPlayerSlot_Parms, NULL );

	pFnIsActionMappedToPlayerSlot->FunctionFlags |= 0x400;

	return IsActionMappedToPlayerSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.ClearMapByIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSlot                          ( CPF_Parm )

bool ABioPlayerController::ClearMapByIndex ( unsigned char nSlot )
{
	static UFunction* pFnClearMapByIndex = NULL;

	if ( ! pFnClearMapByIndex )
		pFnClearMapByIndex = (UFunction*) UObject::GObjObjects()->Data[ 56810 ];

	ABioPlayerController_execClearMapByIndex_Parms ClearMapByIndex_Parms;
	ClearMapByIndex_Parms.nSlot = nSlot;

	pFnClearMapByIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearMapByIndex, &ClearMapByIndex_Parms, NULL );

	pFnClearMapByIndex->FunctionFlags |= 0x400;

	return ClearMapByIndex_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.GetMappingByIndex
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSlot                          ( CPF_Parm )
// struct FBioActionMapping       stMapData                      ( CPF_Parm | CPF_OutParm )

bool ABioPlayerController::GetMappingByIndex ( unsigned char nSlot, struct FBioActionMapping* stMapData )
{
	static UFunction* pFnGetMappingByIndex = NULL;

	if ( ! pFnGetMappingByIndex )
		pFnGetMappingByIndex = (UFunction*) UObject::GObjObjects()->Data[ 56814 ];

	ABioPlayerController_execGetMappingByIndex_Parms GetMappingByIndex_Parms;
	GetMappingByIndex_Parms.nSlot = nSlot;

	pFnGetMappingByIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMappingByIndex, &GetMappingByIndex_Parms, NULL );

	pFnGetMappingByIndex->FunctionFlags |= 0x400;

	if ( stMapData )
		memcpy ( stMapData, &GetMappingByIndex_Parms.stMapData, 0x14 );

	return GetMappingByIndex_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.MapActionToAvailablePlayerSlot
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eType                          ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::MapActionToAvailablePlayerSlot ( unsigned char eType, struct FName nmPower )
{
	static UFunction* pFnMapActionToAvailablePlayerSlot = NULL;

	if ( ! pFnMapActionToAvailablePlayerSlot )
		pFnMapActionToAvailablePlayerSlot = (UFunction*) UObject::GObjObjects()->Data[ 56817 ];

	ABioPlayerController_execMapActionToAvailablePlayerSlot_Parms MapActionToAvailablePlayerSlot_Parms;
	MapActionToAvailablePlayerSlot_Parms.eType = eType;
	memcpy ( &MapActionToAvailablePlayerSlot_Parms.nmPower, &nmPower, 0x8 );

	pFnMapActionToAvailablePlayerSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMapActionToAvailablePlayerSlot, &MapActionToAvailablePlayerSlot_Parms, NULL );

	pFnMapActionToAvailablePlayerSlot->FunctionFlags |= 0x400;

	return MapActionToAvailablePlayerSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.MapAction
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSlot                          ( CPF_Parm )
// unsigned char                  nType                          ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_OptionalParm | CPF_Parm )
// class APawn*                   oPawn                          ( CPF_OptionalParm | CPF_Parm )

bool ABioPlayerController::MapAction ( unsigned char nSlot, unsigned char nType, struct FName nmPower, class APawn* oPawn )
{
	static UFunction* pFnMapAction = NULL;

	if ( ! pFnMapAction )
		pFnMapAction = (UFunction*) UObject::GObjObjects()->Data[ 56821 ];

	ABioPlayerController_execMapAction_Parms MapAction_Parms;
	MapAction_Parms.nSlot = nSlot;
	MapAction_Parms.nType = nType;
	memcpy ( &MapAction_Parms.nmPower, &nmPower, 0x8 );
	MapAction_Parms.oPawn = oPawn;

	pFnMapAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMapAction, &MapAction_Parms, NULL );

	pFnMapAction->FunctionFlags |= 0x400;

	return MapAction_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.InitializeDefaultMapping
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::InitializeDefaultMapping ( )
{
	static UFunction* pFnInitializeDefaultMapping = NULL;

	if ( ! pFnInitializeDefaultMapping )
		pFnInitializeDefaultMapping = (UFunction*) UObject::GObjObjects()->Data[ 56825 ];

	ABioPlayerController_execInitializeDefaultMapping_Parms InitializeDefaultMapping_Parms;

	pFnInitializeDefaultMapping->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeDefaultMapping, &InitializeDefaultMapping_Parms, NULL );

	pFnInitializeDefaultMapping->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.OnNewPlayerSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Selection                      ( CPF_Parm )

bool ABioPlayerController::OnNewPlayerSelection ( class AActor* Selection )
{
	static UFunction* pFnOnNewPlayerSelection = NULL;

	if ( ! pFnOnNewPlayerSelection )
		pFnOnNewPlayerSelection = (UFunction*) UObject::GObjObjects()->Data[ 56831 ];

	ABioPlayerController_execOnNewPlayerSelection_Parms OnNewPlayerSelection_Parms;
	OnNewPlayerSelection_Parms.Selection = Selection;

	pFnOnNewPlayerSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnNewPlayerSelection, &OnNewPlayerSelection_Parms, NULL );

	pFnOnNewPlayerSelection->FunctionFlags |= 0x400;

	return OnNewPlayerSelection_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.OnEnteredCover
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::OnEnteredCover ( )
{
	static UFunction* pFnOnEnteredCover = NULL;

	if ( ! pFnOnEnteredCover )
		pFnOnEnteredCover = (UFunction*) UObject::GObjObjects()->Data[ 56832 ];

	ABioPlayerController_execOnEnteredCover_Parms OnEnteredCover_Parms;

	this->ProcessEvent ( pFnOnEnteredCover, &OnEnteredCover_Parms, NULL );
};

// Function SFXGame.BioPlayerController.DisableDOF
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::DisableDOF ( )
{
	static UFunction* pFnDisableDOF = NULL;

	if ( ! pFnDisableDOF )
		pFnDisableDOF = (UFunction*) UObject::GObjObjects()->Data[ 56835 ];

	ABioPlayerController_execDisableDOF_Parms DisableDOF_Parms;

	pFnDisableDOF->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisableDOF, &DisableDOF_Parms, NULL );

	pFnDisableDOF->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.OutputConsoleText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void ABioPlayerController::OutputConsoleText ( struct FString Text )
{
	static UFunction* pFnOutputConsoleText = NULL;

	if ( ! pFnOutputConsoleText )
		pFnOutputConsoleText = (UFunction*) UObject::GObjObjects()->Data[ 56836 ];

	ABioPlayerController_execOutputConsoleText_Parms OutputConsoleText_Parms;
	memcpy ( &OutputConsoleText_Parms.Text, &Text, 0x10 );

	pFnOutputConsoleText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOutputConsoleText, &OutputConsoleText_Parms, NULL );

	pFnOutputConsoleText->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.RecoverForPlayerPawnActionState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::RecoverForPlayerPawnActionState ( )
{
	static UFunction* pFnRecoverForPlayerPawnActionState = NULL;

	if ( ! pFnRecoverForPlayerPawnActionState )
		pFnRecoverForPlayerPawnActionState = (UFunction*) UObject::GObjObjects()->Data[ 56837 ];

	ABioPlayerController_execRecoverForPlayerPawnActionState_Parms RecoverForPlayerPawnActionState_Parms;

	pFnRecoverForPlayerPawnActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecoverForPlayerPawnActionState, &RecoverForPlayerPawnActionState_Parms, NULL );

	pFnRecoverForPlayerPawnActionState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.RecoverSelectionForPawnActionState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::RecoverSelectionForPawnActionState ( )
{
	static UFunction* pFnRecoverSelectionForPawnActionState = NULL;

	if ( ! pFnRecoverSelectionForPawnActionState )
		pFnRecoverSelectionForPawnActionState = (UFunction*) UObject::GObjObjects()->Data[ 56839 ];

	ABioPlayerController_execRecoverSelectionForPawnActionState_Parms RecoverSelectionForPawnActionState_Parms;

	pFnRecoverSelectionForPawnActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecoverSelectionForPawnActionState, &RecoverSelectionForPawnActionState_Parms, NULL );

	pFnRecoverSelectionForPawnActionState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.RecoverCameraForPawnActionState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::RecoverCameraForPawnActionState ( )
{
	static UFunction* pFnRecoverCameraForPawnActionState = NULL;

	if ( ! pFnRecoverCameraForPawnActionState )
		pFnRecoverCameraForPawnActionState = (UFunction*) UObject::GObjObjects()->Data[ 56840 ];

	ABioPlayerController_execRecoverCameraForPawnActionState_Parms RecoverCameraForPawnActionState_Parms;

	pFnRecoverCameraForPawnActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecoverCameraForPawnActionState, &RecoverCameraForPawnActionState_Parms, NULL );

	pFnRecoverCameraForPawnActionState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.RecoverCameraPostCinematic
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerController::RecoverCameraPostCinematic ( )
{
	static UFunction* pFnRecoverCameraPostCinematic = NULL;

	if ( ! pFnRecoverCameraPostCinematic )
		pFnRecoverCameraPostCinematic = (UFunction*) UObject::GObjObjects()->Data[ 56841 ];

	ABioPlayerController_execRecoverCameraPostCinematic_Parms RecoverCameraPostCinematic_Parms;

	pFnRecoverCameraPostCinematic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecoverCameraPostCinematic, &RecoverCameraPostCinematic_Parms, NULL );

	pFnRecoverCameraPostCinematic->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.DrawSelectionReticule
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioPlayerController::DrawSelectionReticule ( struct FVector vLocation )
{
	static UFunction* pFnDrawSelectionReticule = NULL;

	if ( ! pFnDrawSelectionReticule )
		pFnDrawSelectionReticule = (UFunction*) UObject::GObjObjects()->Data[ 56842 ];

	ABioPlayerController_execDrawSelectionReticule_Parms DrawSelectionReticule_Parms;
	memcpy ( &DrawSelectionReticule_Parms.vLocation, &vLocation, 0xC );

	pFnDrawSelectionReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawSelectionReticule, &DrawSelectionReticule_Parms, NULL );

	pFnDrawSelectionReticule->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.DrawCircle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FVector                 vNormal                        ( CPF_Parm )
// float                          fRadius                        ( CPF_Parm )
// struct FColor                  CircleColor                    ( CPF_Parm )

void ABioPlayerController::DrawCircle ( struct FVector vLocation, struct FVector vNormal, float fRadius, struct FColor CircleColor )
{
	static UFunction* pFnDrawCircle = NULL;

	if ( ! pFnDrawCircle )
		pFnDrawCircle = (UFunction*) UObject::GObjObjects()->Data[ 56843 ];

	ABioPlayerController_execDrawCircle_Parms DrawCircle_Parms;
	memcpy ( &DrawCircle_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &DrawCircle_Parms.vNormal, &vNormal, 0xC );
	DrawCircle_Parms.fRadius = fRadius;
	memcpy ( &DrawCircle_Parms.CircleColor, &CircleColor, 0x4 );

	pFnDrawCircle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawCircle, &DrawCircle_Parms, NULL );

	pFnDrawCircle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerController.HandleWalking
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::HandleWalking ( )
{
	static UFunction* pFnHandleWalking = NULL;

	if ( ! pFnHandleWalking )
		pFnHandleWalking = (UFunction*) UObject::GObjObjects()->Data[ 56845 ];

	ABioPlayerController_execHandleWalking_Parms HandleWalking_Parms;

	this->ProcessEvent ( pFnHandleWalking, &HandleWalking_Parms, NULL );
};

// Function SFXGame.BioPlayerController.IsScoped
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsScoped ( )
{
	static UFunction* pFnIsScoped = NULL;

	if ( ! pFnIsScoped )
		pFnIsScoped = (UFunction*) UObject::GObjObjects()->Data[ 56610 ];

	ABioPlayerController_execIsScoped_Parms IsScoped_Parms;

	pFnIsScoped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsScoped, &IsScoped_Parms, NULL );

	pFnIsScoped->FunctionFlags |= 0x400;

	return IsScoped_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.IsZoomed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerController::IsZoomed ( )
{
	static UFunction* pFnIsZoomed = NULL;

	if ( ! pFnIsZoomed )
		pFnIsZoomed = (UFunction*) UObject::GObjObjects()->Data[ 46239 ];

	ABioPlayerController_execIsZoomed_Parms IsZoomed_Parms;

	pFnIsZoomed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsZoomed, &IsZoomed_Parms, NULL );

	pFnIsZoomed->FunctionFlags |= 0x400;

	return IsZoomed_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.SetZoomed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bZoomState                     ( CPF_Parm )

void ABioPlayerController::eventSetZoomed ( unsigned long bZoomState )
{
	static UFunction* pFnSetZoomed = NULL;

	if ( ! pFnSetZoomed )
		pFnSetZoomed = (UFunction*) UObject::GObjObjects()->Data[ 56851 ];

	ABioPlayerController_eventSetZoomed_Parms SetZoomed_Parms;
	SetZoomed_Parms.bZoomState = bZoomState;

	this->ProcessEvent ( pFnSetZoomed, &SetZoomed_Parms, NULL );
};

// Function SFXGame.BioPlayerController.ResetStormCooldown
// [0x00020002] 
// Parameters infos:

void ABioPlayerController::ResetStormCooldown ( )
{
	static UFunction* pFnResetStormCooldown = NULL;

	if ( ! pFnResetStormCooldown )
		pFnResetStormCooldown = (UFunction*) UObject::GObjObjects()->Data[ 56852 ];

	ABioPlayerController_execResetStormCooldown_Parms ResetStormCooldown_Parms;

	this->ProcessEvent ( pFnResetStormCooldown, &ResetStormCooldown_Parms, NULL );
};

// Function SFXGame.BioPlayerController.GetGameModeDefault
// [0x00020002] 
// Parameters infos:
// class USFXGameModeDefault*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXGameModeDefault* ABioPlayerController::GetGameModeDefault ( )
{
	static UFunction* pFnGetGameModeDefault = NULL;

	if ( ! pFnGetGameModeDefault )
		pFnGetGameModeDefault = (UFunction*) UObject::GObjObjects()->Data[ 56856 ];

	ABioPlayerController_execGetGameModeDefault_Parms GetGameModeDefault_Parms;

	this->ProcessEvent ( pFnGetGameModeDefault, &GetGameModeDefault_Parms, NULL );

	return GetGameModeDefault_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerController.SaveProfile
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerController::eventSaveProfile ( )
{
	static UFunction* pFnSaveProfile = NULL;

	if ( ! pFnSaveProfile )
		pFnSaveProfile = (UFunction*) UObject::GObjObjects()->Data[ 56857 ];

	ABioPlayerController_eventSaveProfile_Parms SaveProfile_Parms;

	this->ProcessEvent ( pFnSaveProfile, &SaveProfile_Parms, NULL );
};

// Function SFXGame.BioPlayerController.RegisterCustomPlayerDataStores
// [0x00080102] 
// Parameters infos:

void ABioPlayerController::RegisterCustomPlayerDataStores ( )
{
	static UFunction* pFnRegisterCustomPlayerDataStores = NULL;

	if ( ! pFnRegisterCustomPlayerDataStores )
		pFnRegisterCustomPlayerDataStores = (UFunction*) UObject::GObjObjects()->Data[ 56861 ];

	ABioPlayerController_execRegisterCustomPlayerDataStores_Parms RegisterCustomPlayerDataStores_Parms;

	this->ProcessEvent ( pFnRegisterCustomPlayerDataStores, &RegisterCustomPlayerDataStores_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.GuiKey
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )

void USFXGameModeBase::GuiKey ( unsigned char Event )
{
	static UFunction* pFnGuiKey = NULL;

	if ( ! pFnGuiKey )
		pFnGuiKey = (UFunction*) UObject::GObjObjects()->Data[ 67025 ];

	USFXGameModeBase_execGuiKey_Parms GuiKey_Parms;
	GuiKey_Parms.Event = Event;

	this->ProcessEvent ( pFnGuiKey, &GuiKey_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.SquadCommand_Move2
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::SquadCommand_Move2 ( )
{
	static UFunction* pFnSquadCommand_Move2 = NULL;

	if ( ! pFnSquadCommand_Move2 )
		pFnSquadCommand_Move2 = (UFunction*) UObject::GObjObjects()->Data[ 67024 ];

	USFXGameModeBase_execSquadCommand_Move2_Parms SquadCommand_Move2_Parms;

	this->ProcessEvent ( pFnSquadCommand_Move2, &SquadCommand_Move2_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.SquadCommand_Move1
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::SquadCommand_Move1 ( )
{
	static UFunction* pFnSquadCommand_Move1 = NULL;

	if ( ! pFnSquadCommand_Move1 )
		pFnSquadCommand_Move1 = (UFunction*) UObject::GObjObjects()->Data[ 67023 ];

	USFXGameModeBase_execSquadCommand_Move1_Parms SquadCommand_Move1_Parms;

	this->ProcessEvent ( pFnSquadCommand_Move1, &SquadCommand_Move1_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.SquadCommand_Follow
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::SquadCommand_Follow ( )
{
	static UFunction* pFnSquadCommand_Follow = NULL;

	if ( ! pFnSquadCommand_Follow )
		pFnSquadCommand_Follow = (UFunction*) UObject::GObjObjects()->Data[ 67022 ];

	USFXGameModeBase_execSquadCommand_Follow_Parms SquadCommand_Follow_Parms;

	this->ProcessEvent ( pFnSquadCommand_Follow, &SquadCommand_Follow_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.SquadCommand_Attack
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::SquadCommand_Attack ( )
{
	static UFunction* pFnSquadCommand_Attack = NULL;

	if ( ! pFnSquadCommand_Attack )
		pFnSquadCommand_Attack = (UFunction*) UObject::GObjObjects()->Data[ 67021 ];

	USFXGameModeBase_execSquadCommand_Attack_Parms SquadCommand_Attack_Parms;

	this->ProcessEvent ( pFnSquadCommand_Attack, &SquadCommand_Attack_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ToggleKeyMap
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::ToggleKeyMap ( )
{
	static UFunction* pFnToggleKeyMap = NULL;

	if ( ! pFnToggleKeyMap )
		pFnToggleKeyMap = (UFunction*) UObject::GObjObjects()->Data[ 67020 ];

	USFXGameModeBase_execToggleKeyMap_Parms ToggleKeyMap_Parms;

	this->ProcessEvent ( pFnToggleKeyMap, &ToggleKeyMap_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowEquipmentGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void USFXGameModeBase::ShowEquipmentGui ( unsigned long bShow )
{
	static UFunction* pFnShowEquipmentGui = NULL;

	if ( ! pFnShowEquipmentGui )
		pFnShowEquipmentGui = (UFunction*) UObject::GObjObjects()->Data[ 67017 ];

	USFXGameModeBase_execShowEquipmentGui_Parms ShowEquipmentGui_Parms;
	ShowEquipmentGui_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowEquipmentGui, &ShowEquipmentGui_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowSquadGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void USFXGameModeBase::ShowSquadGui ( unsigned long bShow )
{
	static UFunction* pFnShowSquadGui = NULL;

	if ( ! pFnShowSquadGui )
		pFnShowSquadGui = (UFunction*) UObject::GObjObjects()->Data[ 67014 ];

	USFXGameModeBase_execShowSquadGui_Parms ShowSquadGui_Parms;
	ShowSquadGui_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowSquadGui, &ShowSquadGui_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowCodexGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void USFXGameModeBase::ShowCodexGui ( unsigned long bShow )
{
	static UFunction* pFnShowCodexGui = NULL;

	if ( ! pFnShowCodexGui )
		pFnShowCodexGui = (UFunction*) UObject::GObjObjects()->Data[ 67011 ];

	USFXGameModeBase_execShowCodexGui_Parms ShowCodexGui_Parms;
	ShowCodexGui_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowCodexGui, &ShowCodexGui_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowJournalGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void USFXGameModeBase::ShowJournalGui ( unsigned long bShow )
{
	static UFunction* pFnShowJournalGui = NULL;

	if ( ! pFnShowJournalGui )
		pFnShowJournalGui = (UFunction*) UObject::GObjObjects()->Data[ 67008 ];

	USFXGameModeBase_execShowJournalGui_Parms ShowJournalGui_Parms;
	ShowJournalGui_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowJournalGui, &ShowJournalGui_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowMapGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void USFXGameModeBase::ShowMapGui ( unsigned long bShow )
{
	static UFunction* pFnShowMapGui = NULL;

	if ( ! pFnShowMapGui )
		pFnShowMapGui = (UFunction*) UObject::GObjObjects()->Data[ 67005 ];

	USFXGameModeBase_execShowMapGui_Parms ShowMapGui_Parms;
	ShowMapGui_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowMapGui, &ShowMapGui_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.TurnOffStormForPause
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeBase::TurnOffStormForPause ( )
{
	static UFunction* pFnTurnOffStormForPause = NULL;

	if ( ! pFnTurnOffStormForPause )
		pFnTurnOffStormForPause = (UFunction*) UObject::GObjObjects()->Data[ 63113 ];

	USFXGameModeBase_execTurnOffStormForPause_Parms TurnOffStormForPause_Parms;

	this->ProcessEvent ( pFnTurnOffStormForPause, &TurnOffStormForPause_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeBase::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67003 ];

	USFXGameModeBase_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeBase.CanPause
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeBase::CanPause ( )
{
	static UFunction* pFnCanPause = NULL;

	if ( ! pFnCanPause )
		pFnCanPause = (UFunction*) UObject::GObjObjects()->Data[ 63110 ];

	USFXGameModeBase_execCanPause_Parms CanPause_Parms;

	this->ProcessEvent ( pFnCanPause, &CanPause_Parms, NULL );

	return CanPause_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeBase.StopFiringWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::StopFiringWeapon ( )
{
	static UFunction* pFnStopFiringWeapon = NULL;

	if ( ! pFnStopFiringWeapon )
		pFnStopFiringWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67000 ];

	USFXGameModeBase_execStopFiringWeapon_Parms StopFiringWeapon_Parms;

	this->ProcessEvent ( pFnStopFiringWeapon, &StopFiringWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.FireWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeBase::FireWeapon ( )
{
	static UFunction* pFnFireWeapon = NULL;

	if ( ! pFnFireWeapon )
		pFnFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 66998 ];

	USFXGameModeBase_execFireWeapon_Parms FireWeapon_Parms;

	this->ProcessEvent ( pFnFireWeapon, &FireWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.SetSystemFilmgrainEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModeBase::SetSystemFilmgrainEnabled ( unsigned long bValue )
{
	static UFunction* pFnSetSystemFilmgrainEnabled = NULL;

	if ( ! pFnSetSystemFilmgrainEnabled )
		pFnSetSystemFilmgrainEnabled = (UFunction*) UObject::GObjObjects()->Data[ 66996 ];

	USFXGameModeBase_execSetSystemFilmgrainEnabled_Parms SetSystemFilmgrainEnabled_Parms;
	SetSystemFilmgrainEnabled_Parms.bValue = bValue;

	pFnSetSystemFilmgrainEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSystemFilmgrainEnabled, &SetSystemFilmgrainEnabled_Parms, NULL );

	pFnSetSystemFilmgrainEnabled->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeBase.IsSystemFilmgrainEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeBase::IsSystemFilmgrainEnabled ( )
{
	static UFunction* pFnIsSystemFilmgrainEnabled = NULL;

	if ( ! pFnIsSystemFilmgrainEnabled )
		pFnIsSystemFilmgrainEnabled = (UFunction*) UObject::GObjObjects()->Data[ 66994 ];

	USFXGameModeBase_execIsSystemFilmgrainEnabled_Parms IsSystemFilmgrainEnabled_Parms;

	pFnIsSystemFilmgrainEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSystemFilmgrainEnabled, &IsSystemFilmgrainEnabled_Parms, NULL );

	pFnIsSystemFilmgrainEnabled->FunctionFlags |= 0x400;

	return IsSystemFilmgrainEnabled_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeBase.CollectBindings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXGameModeBase::CollectBindings ( )
{
	static UFunction* pFnCollectBindings = NULL;

	if ( ! pFnCollectBindings )
		pFnCollectBindings = (UFunction*) UObject::GObjObjects()->Data[ 66993 ];

	USFXGameModeBase_execCollectBindings_Parms CollectBindings_Parms;

	pFnCollectBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCollectBindings, &CollectBindings_Parms, NULL );

	pFnCollectBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeBase.Initialize
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USFXGameModeBase::eventInitialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66992 ];

	USFXGameModeBase_eventInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.DeactivateSpecifier
// [0x00020000] 
// Parameters infos:
// struct FName                   ModeSpecifier                  ( CPF_Parm )

void USFXGameModeBase::DeactivateSpecifier ( struct FName ModeSpecifier )
{
	static UFunction* pFnDeactivateSpecifier = NULL;

	if ( ! pFnDeactivateSpecifier )
		pFnDeactivateSpecifier = (UFunction*) UObject::GObjObjects()->Data[ 66990 ];

	USFXGameModeBase_execDeactivateSpecifier_Parms DeactivateSpecifier_Parms;
	memcpy ( &DeactivateSpecifier_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnDeactivateSpecifier, &DeactivateSpecifier_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ActivateSpecifier
// [0x00020000] 
// Parameters infos:
// struct FName                   ModeSpecifier                  ( CPF_Parm )

void USFXGameModeBase::ActivateSpecifier ( struct FName ModeSpecifier )
{
	static UFunction* pFnActivateSpecifier = NULL;

	if ( ! pFnActivateSpecifier )
		pFnActivateSpecifier = (UFunction*) UObject::GObjObjects()->Data[ 66988 ];

	USFXGameModeBase_execActivateSpecifier_Parms ActivateSpecifier_Parms;
	memcpy ( &ActivateSpecifier_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnActivateSpecifier, &ActivateSpecifier_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeBase::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 66987 ];

	USFXGameModeBase_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModeBase::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 66984 ];

	USFXGameModeBase_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.ClearTimer
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void USFXGameModeBase::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 66981 ];

	USFXGameModeBase_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.IsTimerActive
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool USFXGameModeBase::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = (UFunction*) UObject::GObjObjects()->Data[ 66977 ];

	USFXGameModeBase_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeBase.SetTimer
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void USFXGameModeBase::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 66972 ];

	USFXGameModeBase_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function SFXGame.SFXGameModeBase.HACK_GetCameraMode
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXCameraMode* USFXGameModeBase::eventHACK_GetCameraMode ( )
{
	static UFunction* pFnHACK_GetCameraMode = NULL;

	if ( ! pFnHACK_GetCameraMode )
		pFnHACK_GetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 66970 ];

	USFXGameModeBase_eventHACK_GetCameraMode_Parms HACK_GetCameraMode_Parms;

	this->ProcessEvent ( pFnHACK_GetCameraMode, &HACK_GetCameraMode_Parms, NULL );

	return HACK_GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeBase.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeBase::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 63121 ];

	USFXGameModeBase_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.GetLocalizedNameForKey
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FName                   Key                            ( CPF_Parm )
// unsigned long                  Control                        ( CPF_Parm )
// unsigned long                  Shift                          ( CPF_Parm )
// unsigned long                  Alt                            ( CPF_Parm )

struct FString USFXGameModeManager::GetLocalizedNameForKey ( struct FName Key, unsigned long Control, unsigned long Shift, unsigned long Alt )
{
	static UFunction* pFnGetLocalizedNameForKey = NULL;

	if ( ! pFnGetLocalizedNameForKey )
		pFnGetLocalizedNameForKey = (UFunction*) UObject::GObjObjects()->Data[ 63200 ];

	USFXGameModeManager_execGetLocalizedNameForKey_Parms GetLocalizedNameForKey_Parms;
	memcpy ( &GetLocalizedNameForKey_Parms.Key, &Key, 0x8 );
	GetLocalizedNameForKey_Parms.Control = Control;
	GetLocalizedNameForKey_Parms.Shift = Shift;
	GetLocalizedNameForKey_Parms.Alt = Alt;

	pFnGetLocalizedNameForKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalizedNameForKey, &GetLocalizedNameForKey_Parms, NULL );

	pFnGetLocalizedNameForKey->FunctionFlags |= 0x400;

	return GetLocalizedNameForKey_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.UpdateAllBindMappingCollections
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXGameModeManager::UpdateAllBindMappingCollections ( )
{
	static UFunction* pFnUpdateAllBindMappingCollections = NULL;

	if ( ! pFnUpdateAllBindMappingCollections )
		pFnUpdateAllBindMappingCollections = (UFunction*) UObject::GObjObjects()->Data[ 56467 ];

	USFXGameModeManager_execUpdateAllBindMappingCollections_Parms UpdateAllBindMappingCollections_Parms;

	pFnUpdateAllBindMappingCollections->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAllBindMappingCollections, &UpdateAllBindMappingCollections_Parms, NULL );

	pFnUpdateAllBindMappingCollections->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.ResetKeyPresses
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXGameModeManager::ResetKeyPresses ( )
{
	static UFunction* pFnResetKeyPresses = NULL;

	if ( ! pFnResetKeyPresses )
		pFnResetKeyPresses = (UFunction*) UObject::GObjObjects()->Data[ 63103 ];

	USFXGameModeManager_execResetKeyPresses_Parms ResetKeyPresses_Parms;

	pFnResetKeyPresses->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetKeyPresses, &ResetKeyPresses_Parms, NULL );

	pFnResetKeyPresses->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.ParseStringForPCCommands
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

struct FString USFXGameModeManager::ParseStringForPCCommands ( struct FString sMessage )
{
	static UFunction* pFnParseStringForPCCommands = NULL;

	if ( ! pFnParseStringForPCCommands )
		pFnParseStringForPCCommands = (UFunction*) UObject::GObjObjects()->Data[ 63197 ];

	USFXGameModeManager_execParseStringForPCCommands_Parms ParseStringForPCCommands_Parms;
	memcpy ( &ParseStringForPCCommands_Parms.sMessage, &sMessage, 0x10 );

	pFnParseStringForPCCommands->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnParseStringForPCCommands, &ParseStringForPCCommands_Parms, NULL );

	pFnParseStringForPCCommands->FunctionFlags |= 0x400;

	return ParseStringForPCCommands_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ResetBindings
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXGameModeManager::ResetBindings ( )
{
	static UFunction* pFnResetBindings = NULL;

	if ( ! pFnResetBindings )
		pFnResetBindings = (UFunction*) UObject::GObjObjects()->Data[ 63146 ];

	USFXGameModeManager_execResetBindings_Parms ResetBindings_Parms;

	pFnResetBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetBindings, &ResetBindings_Parms, NULL );

	pFnResetBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.ShouldPlayVocalizations
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldPlayVocalizations ( )
{
	static UFunction* pFnShouldPlayVocalizations = NULL;

	if ( ! pFnShouldPlayVocalizations )
		pFnShouldPlayVocalizations = (UFunction*) UObject::GObjObjects()->Data[ 63195 ];

	USFXGameModeManager_execShouldPlayVocalizations_Parms ShouldPlayVocalizations_Parms;

	pFnShouldPlayVocalizations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldPlayVocalizations, &ShouldPlayVocalizations_Parms, NULL );

	pFnShouldPlayVocalizations->FunctionFlags |= 0x400;

	return ShouldPlayVocalizations_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ShouldShowReticles
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldShowReticles ( )
{
	static UFunction* pFnShouldShowReticles = NULL;

	if ( ! pFnShouldShowReticles )
		pFnShouldShowReticles = (UFunction*) UObject::GObjObjects()->Data[ 63193 ];

	USFXGameModeManager_execShouldShowReticles_Parms ShouldShowReticles_Parms;

	pFnShouldShowReticles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldShowReticles, &ShouldShowReticles_Parms, NULL );

	pFnShouldShowReticles->FunctionFlags |= 0x400;

	return ShouldShowReticles_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.GetMouseVisible
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::GetMouseVisible ( )
{
	static UFunction* pFnGetMouseVisible = NULL;

	if ( ! pFnGetMouseVisible )
		pFnGetMouseVisible = (UFunction*) UObject::GObjObjects()->Data[ 63191 ];

	USFXGameModeManager_execGetMouseVisible_Parms GetMouseVisible_Parms;

	pFnGetMouseVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMouseVisible, &GetMouseVisible_Parms, NULL );

	pFnGetMouseVisible->FunctionFlags |= 0x400;

	return GetMouseVisible_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.HasMouseAuthority
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::HasMouseAuthority ( )
{
	static UFunction* pFnHasMouseAuthority = NULL;

	if ( ! pFnHasMouseAuthority )
		pFnHasMouseAuthority = (UFunction*) UObject::GObjObjects()->Data[ 63189 ];

	USFXGameModeManager_execHasMouseAuthority_Parms HasMouseAuthority_Parms;

	pFnHasMouseAuthority->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasMouseAuthority, &HasMouseAuthority_Parms, NULL );

	pFnHasMouseAuthority->FunctionFlags |= 0x400;

	return HasMouseAuthority_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsLookAt
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsLookAt ( )
{
	static UFunction* pFnAllowsLookAt = NULL;

	if ( ! pFnAllowsLookAt )
		pFnAllowsLookAt = (UFunction*) UObject::GObjObjects()->Data[ 63187 ];

	USFXGameModeManager_execAllowsLookAt_Parms AllowsLookAt_Parms;

	pFnAllowsLookAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsLookAt, &AllowsLookAt_Parms, NULL );

	pFnAllowsLookAt->FunctionFlags |= 0x400;

	return AllowsLookAt_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsSaving
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsSaving ( )
{
	static UFunction* pFnAllowsSaving = NULL;

	if ( ! pFnAllowsSaving )
		pFnAllowsSaving = (UFunction*) UObject::GObjObjects()->Data[ 63185 ];

	USFXGameModeManager_execAllowsSaving_Parms AllowsSaving_Parms;

	pFnAllowsSaving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsSaving, &AllowsSaving_Parms, NULL );

	pFnAllowsSaving->FunctionFlags |= 0x400;

	return AllowsSaving_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsCameraMods
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsCameraMods ( )
{
	static UFunction* pFnAllowsCameraMods = NULL;

	if ( ! pFnAllowsCameraMods )
		pFnAllowsCameraMods = (UFunction*) UObject::GObjObjects()->Data[ 56643 ];

	USFXGameModeManager_execAllowsCameraMods_Parms AllowsCameraMods_Parms;

	pFnAllowsCameraMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsCameraMods, &AllowsCameraMods_Parms, NULL );

	pFnAllowsCameraMods->FunctionFlags |= 0x400;

	return AllowsCameraMods_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsHenchmenMovement
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsHenchmenMovement ( )
{
	static UFunction* pFnAllowsHenchmenMovement = NULL;

	if ( ! pFnAllowsHenchmenMovement )
		pFnAllowsHenchmenMovement = (UFunction*) UObject::GObjObjects()->Data[ 47619 ];

	USFXGameModeManager_execAllowsHenchmenMovement_Parms AllowsHenchmenMovement_Parms;

	pFnAllowsHenchmenMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsHenchmenMovement, &AllowsHenchmenMovement_Parms, NULL );

	pFnAllowsHenchmenMovement->FunctionFlags |= 0x400;

	return AllowsHenchmenMovement_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsAIMovement
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsAIMovement ( )
{
	static UFunction* pFnAllowsAIMovement = NULL;

	if ( ! pFnAllowsAIMovement )
		pFnAllowsAIMovement = (UFunction*) UObject::GObjObjects()->Data[ 44405 ];

	USFXGameModeManager_execAllowsAIMovement_Parms AllowsAIMovement_Parms;

	pFnAllowsAIMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsAIMovement, &AllowsAIMovement_Parms, NULL );

	pFnAllowsAIMovement->FunctionFlags |= 0x400;

	return AllowsAIMovement_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.AllowsPlayerRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::AllowsPlayerRotation ( )
{
	static UFunction* pFnAllowsPlayerRotation = NULL;

	if ( ! pFnAllowsPlayerRotation )
		pFnAllowsPlayerRotation = (UFunction*) UObject::GObjObjects()->Data[ 63183 ];

	USFXGameModeManager_execAllowsPlayerRotation_Parms AllowsPlayerRotation_Parms;

	pFnAllowsPlayerRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowsPlayerRotation, &AllowsPlayerRotation_Parms, NULL );

	pFnAllowsPlayerRotation->FunctionFlags |= 0x400;

	return AllowsPlayerRotation_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ShouldShowRadar
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldShowRadar ( )
{
	static UFunction* pFnShouldShowRadar = NULL;

	if ( ! pFnShouldShowRadar )
		pFnShouldShowRadar = (UFunction*) UObject::GObjObjects()->Data[ 63181 ];

	USFXGameModeManager_execShouldShowRadar_Parms ShouldShowRadar_Parms;

	pFnShouldShowRadar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldShowRadar, &ShouldShowRadar_Parms, NULL );

	pFnShouldShowRadar->FunctionFlags |= 0x400;

	return ShouldShowRadar_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ShouldShowDamageIndicators
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldShowDamageIndicators ( )
{
	static UFunction* pFnShouldShowDamageIndicators = NULL;

	if ( ! pFnShouldShowDamageIndicators )
		pFnShouldShowDamageIndicators = (UFunction*) UObject::GObjObjects()->Data[ 63179 ];

	USFXGameModeManager_execShouldShowDamageIndicators_Parms ShouldShowDamageIndicators_Parms;

	pFnShouldShowDamageIndicators->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldShowDamageIndicators, &ShouldShowDamageIndicators_Parms, NULL );

	pFnShouldShowDamageIndicators->FunctionFlags |= 0x400;

	return ShouldShowDamageIndicators_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ShouldShowSelection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldShowSelection ( )
{
	static UFunction* pFnShouldShowSelection = NULL;

	if ( ! pFnShouldShowSelection )
		pFnShouldShowSelection = (UFunction*) UObject::GObjObjects()->Data[ 63177 ];

	USFXGameModeManager_execShouldShowSelection_Parms ShouldShowSelection_Parms;

	pFnShouldShowSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldShowSelection, &ShouldShowSelection_Parms, NULL );

	pFnShouldShowSelection->FunctionFlags |= 0x400;

	return ShouldShowSelection_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.ShouldShowHUD
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::ShouldShowHUD ( )
{
	static UFunction* pFnShouldShowHUD = NULL;

	if ( ! pFnShouldShowHUD )
		pFnShouldShowHUD = (UFunction*) UObject::GObjObjects()->Data[ 54478 ];

	USFXGameModeManager_execShouldShowHUD_Parms ShouldShowHUD_Parms;

	pFnShouldShowHUD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldShowHUD, &ShouldShowHUD_Parms, NULL );

	pFnShouldShowHUD->FunctionFlags |= 0x400;

	return ShouldShowHUD_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.IsActive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Mode                           ( CPF_Parm )

bool USFXGameModeManager::IsActive ( unsigned char Mode )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 41606 ];

	USFXGameModeManager_execIsActive_Parms IsActive_Parms;
	IsActive_Parms.Mode = Mode;

	pFnIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	pFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.UpdateCurrentMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXGameModeManager::UpdateCurrentMode ( )
{
	static UFunction* pFnUpdateCurrentMode = NULL;

	if ( ! pFnUpdateCurrentMode )
		pFnUpdateCurrentMode = (UFunction*) UObject::GObjObjects()->Data[ 63175 ];

	USFXGameModeManager_execUpdateCurrentMode_Parms UpdateCurrentMode_Parms;

	pFnUpdateCurrentMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentMode, &UpdateCurrentMode_Parms, NULL );

	pFnUpdateCurrentMode->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.Initialize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXGameModeManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 56704 ];

	USFXGameModeManager_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.GetPhotoMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class USFXGameModePhoto*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXGameModePhoto* USFXGameModeManager::GetPhotoMode ( )
{
	static UFunction* pFnGetPhotoMode = NULL;

	if ( ! pFnGetPhotoMode )
		pFnGetPhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 63172 ];

	USFXGameModeManager_execGetPhotoMode_Parms GetPhotoMode_Parms;

	this->ProcessEvent ( pFnGetPhotoMode, &GetPhotoMode_Parms, NULL );

	return GetPhotoMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.HACK_GetDefaultMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class USFXGameModeDefault*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXGameModeDefault* USFXGameModeManager::HACK_GetDefaultMode ( )
{
	static UFunction* pFnHACK_GetDefaultMode = NULL;

	if ( ! pFnHACK_GetDefaultMode )
		pFnHACK_GetDefaultMode = (UFunction*) UObject::GObjObjects()->Data[ 63170 ];

	USFXGameModeManager_execHACK_GetDefaultMode_Parms HACK_GetDefaultMode_Parms;

	this->ProcessEvent ( pFnHACK_GetDefaultMode, &HACK_GetDefaultMode_Parms, NULL );

	return HACK_GetDefaultMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.HACK_GetCameraMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  GalaxyOrConversationMode       ( CPF_Parm )

class USFXCameraMode* USFXGameModeManager::HACK_GetCameraMode ( unsigned char GalaxyOrConversationMode )
{
	static UFunction* pFnHACK_GetCameraMode = NULL;

	if ( ! pFnHACK_GetCameraMode )
		pFnHACK_GetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 63167 ];

	USFXGameModeManager_execHACK_GetCameraMode_Parms HACK_GetCameraMode_Parms;
	HACK_GetCameraMode_Parms.GalaxyOrConversationMode = GalaxyOrConversationMode;

	pFnHACK_GetCameraMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHACK_GetCameraMode, &HACK_GetCameraMode_Parms, NULL );

	pFnHACK_GetCameraMode->FunctionFlags |= 0x400;

	return HACK_GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.UpdateControllerButtonBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bSwapCrossCircle               ( CPF_Parm )

void USFXGameModeManager::UpdateControllerButtonBindings ( unsigned long bSwapCrossCircle )
{
	static UFunction* pFnUpdateControllerButtonBindings = NULL;

	if ( ! pFnUpdateControllerButtonBindings )
		pFnUpdateControllerButtonBindings = (UFunction*) UObject::GObjObjects()->Data[ 56462 ];

	USFXGameModeManager_execUpdateControllerButtonBindings_Parms UpdateControllerButtonBindings_Parms;
	UpdateControllerButtonBindings_Parms.bSwapCrossCircle = bSwapCrossCircle;

	this->ProcessEvent ( pFnUpdateControllerButtonBindings, &UpdateControllerButtonBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.UpdateControllerTriggerBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ConfigOption                   ( CPF_Parm )

void USFXGameModeManager::UpdateControllerTriggerBindings ( unsigned char ConfigOption )
{
	static UFunction* pFnUpdateControllerTriggerBindings = NULL;

	if ( ! pFnUpdateControllerTriggerBindings )
		pFnUpdateControllerTriggerBindings = (UFunction*) UObject::GObjObjects()->Data[ 56461 ];

	USFXGameModeManager_execUpdateControllerTriggerBindings_Parms UpdateControllerTriggerBindings_Parms;
	UpdateControllerTriggerBindings_Parms.ConfigOption = ConfigOption;

	this->ProcessEvent ( pFnUpdateControllerTriggerBindings, &UpdateControllerTriggerBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.UpdateControllerStickBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ConfigOption                   ( CPF_Parm )

void USFXGameModeManager::UpdateControllerStickBindings ( unsigned char ConfigOption )
{
	static UFunction* pFnUpdateControllerStickBindings = NULL;

	if ( ! pFnUpdateControllerStickBindings )
		pFnUpdateControllerStickBindings = (UFunction*) UObject::GObjObjects()->Data[ 56459 ];

	USFXGameModeManager_execUpdateControllerStickBindings_Parms UpdateControllerStickBindings_Parms;
	UpdateControllerStickBindings_Parms.ConfigOption = ConfigOption;

	this->ProcessEvent ( pFnUpdateControllerStickBindings, &UpdateControllerStickBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_ResetStaticPCBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeManager::Helper_ResetStaticPCBindings ( )
{
	static UFunction* pFnHelper_ResetStaticPCBindings = NULL;

	if ( ! pFnHelper_ResetStaticPCBindings )
		pFnHelper_ResetStaticPCBindings = (UFunction*) UObject::GObjObjects()->Data[ 63153 ];

	USFXGameModeManager_execHelper_ResetStaticPCBindings_Parms Helper_ResetStaticPCBindings_Parms;

	this->ProcessEvent ( pFnHelper_ResetStaticPCBindings, &Helper_ResetStaticPCBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_SetStaticPCBinding
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   Key                            ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void USFXGameModeManager::Helper_SetStaticPCBinding ( struct FName Key, struct FString Command )
{
	static UFunction* pFnHelper_SetStaticPCBinding = NULL;

	if ( ! pFnHelper_SetStaticPCBinding )
		pFnHelper_SetStaticPCBinding = (UFunction*) UObject::GObjObjects()->Data[ 63147 ];

	USFXGameModeManager_execHelper_SetStaticPCBinding_Parms Helper_SetStaticPCBinding_Parms;
	memcpy ( &Helper_SetStaticPCBinding_Parms.Key, &Key, 0x8 );
	memcpy ( &Helper_SetStaticPCBinding_Parms.Command, &Command, 0x10 );

	this->ProcessEvent ( pFnHelper_SetStaticPCBinding, &Helper_SetStaticPCBinding_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.ResetControllerBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeManager::ResetControllerBindings ( )
{
	static UFunction* pFnResetControllerBindings = NULL;

	if ( ! pFnResetControllerBindings )
		pFnResetControllerBindings = (UFunction*) UObject::GObjObjects()->Data[ 56457 ];

	USFXGameModeManager_execResetControllerBindings_Parms ResetControllerBindings_Parms;

	this->ProcessEvent ( pFnResetControllerBindings, &ResetControllerBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_ResetStaticConsoleBindings
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeManager::Helper_ResetStaticConsoleBindings ( )
{
	static UFunction* pFnHelper_ResetStaticConsoleBindings = NULL;

	if ( ! pFnHelper_ResetStaticConsoleBindings )
		pFnHelper_ResetStaticConsoleBindings = (UFunction*) UObject::GObjObjects()->Data[ 63144 ];

	USFXGameModeManager_execHelper_ResetStaticConsoleBindings_Parms Helper_ResetStaticConsoleBindings_Parms;

	this->ProcessEvent ( pFnHelper_ResetStaticConsoleBindings, &Helper_ResetStaticConsoleBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_SetStaticConsoleBinding
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   Key                            ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void USFXGameModeManager::Helper_SetStaticConsoleBinding ( struct FName Key, struct FString Command )
{
	static UFunction* pFnHelper_SetStaticConsoleBinding = NULL;

	if ( ! pFnHelper_SetStaticConsoleBinding )
		pFnHelper_SetStaticConsoleBinding = (UFunction*) UObject::GObjObjects()->Data[ 63137 ];

	USFXGameModeManager_execHelper_SetStaticConsoleBinding_Parms Helper_SetStaticConsoleBinding_Parms;
	memcpy ( &Helper_SetStaticConsoleBinding_Parms.Key, &Key, 0x8 );
	memcpy ( &Helper_SetStaticConsoleBinding_Parms.Command, &Command, 0x10 );

	this->ProcessEvent ( pFnHelper_SetStaticConsoleBinding, &Helper_SetStaticConsoleBinding_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_SwapStaticConsoleSticks
// [0x00020002] 
// Parameters infos:

void USFXGameModeManager::Helper_SwapStaticConsoleSticks ( )
{
	static UFunction* pFnHelper_SwapStaticConsoleSticks = NULL;

	if ( ! pFnHelper_SwapStaticConsoleSticks )
		pFnHelper_SwapStaticConsoleSticks = (UFunction*) UObject::GObjObjects()->Data[ 63138 ];

	USFXGameModeManager_execHelper_SwapStaticConsoleSticks_Parms Helper_SwapStaticConsoleSticks_Parms;

	this->ProcessEvent ( pFnHelper_SwapStaticConsoleSticks, &Helper_SwapStaticConsoleSticks_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_SwapStaticConsoleBindings
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FName                   SourceKey                      ( CPF_Parm )
// struct FName                   TargetKey                      ( CPF_Parm )

void USFXGameModeManager::Helper_SwapStaticConsoleBindings ( struct FName SourceKey, struct FName TargetKey )
{
	static UFunction* pFnHelper_SwapStaticConsoleBindings = NULL;

	if ( ! pFnHelper_SwapStaticConsoleBindings )
		pFnHelper_SwapStaticConsoleBindings = (UFunction*) UObject::GObjObjects()->Data[ 63131 ];

	USFXGameModeManager_execHelper_SwapStaticConsoleBindings_Parms Helper_SwapStaticConsoleBindings_Parms;
	memcpy ( &Helper_SwapStaticConsoleBindings_Parms.SourceKey, &SourceKey, 0x8 );
	memcpy ( &Helper_SwapStaticConsoleBindings_Parms.TargetKey, &TargetKey, 0x8 );

	this->ProcessEvent ( pFnHelper_SwapStaticConsoleBindings, &Helper_SwapStaticConsoleBindings_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.Helper_SwapBindings
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USFXGameModeBase*        TargetMode                     ( CPF_Parm )
// struct FName                   SourceKey                      ( CPF_Parm )
// struct FName                   TargetKey                      ( CPF_Parm )
// unsigned long                  bSwapBindings                  ( CPF_Parm )
// struct FString                 OverrideSourceCommand          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 OverrideTargetCommand          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseDefaultBindings            ( CPF_OptionalParm | CPF_Parm )

void USFXGameModeManager::Helper_SwapBindings ( class USFXGameModeBase* TargetMode, struct FName SourceKey, struct FName TargetKey, unsigned long bSwapBindings, struct FString OverrideSourceCommand, struct FString OverrideTargetCommand, unsigned long bUseDefaultBindings )
{
	static UFunction* pFnHelper_SwapBindings = NULL;

	if ( ! pFnHelper_SwapBindings )
		pFnHelper_SwapBindings = (UFunction*) UObject::GObjObjects()->Data[ 63123 ];

	USFXGameModeManager_execHelper_SwapBindings_Parms Helper_SwapBindings_Parms;
	Helper_SwapBindings_Parms.TargetMode = TargetMode;
	memcpy ( &Helper_SwapBindings_Parms.SourceKey, &SourceKey, 0x8 );
	memcpy ( &Helper_SwapBindings_Parms.TargetKey, &TargetKey, 0x8 );
	Helper_SwapBindings_Parms.bSwapBindings = bSwapBindings;
	memcpy ( &Helper_SwapBindings_Parms.OverrideSourceCommand, &OverrideSourceCommand, 0x10 );
	memcpy ( &Helper_SwapBindings_Parms.OverrideTargetCommand, &OverrideTargetCommand, 0x10 );
	Helper_SwapBindings_Parms.bUseDefaultBindings = bUseDefaultBindings;

	pFnHelper_SwapBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHelper_SwapBindings, &Helper_SwapBindings_Parms, NULL );

	pFnHelper_SwapBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXGameModeManager.GetCameraMode
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeManager::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 63114 ];

	USFXGameModeManager_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.TurnOffStormForPause
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeManager::TurnOffStormForPause ( )
{
	static UFunction* pFnTurnOffStormForPause = NULL;

	if ( ! pFnTurnOffStormForPause )
		pFnTurnOffStormForPause = (UFunction*) UObject::GObjObjects()->Data[ 63112 ];

	USFXGameModeManager_execTurnOffStormForPause_Parms TurnOffStormForPause_Parms;

	this->ProcessEvent ( pFnTurnOffStormForPause, &TurnOffStormForPause_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.CanPause
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeManager::CanPause ( )
{
	static UFunction* pFnCanPause = NULL;

	if ( ! pFnCanPause )
		pFnCanPause = (UFunction*) UObject::GObjObjects()->Data[ 63108 ];

	USFXGameModeManager_execCanPause_Parms CanPause_Parms;

	this->ProcessEvent ( pFnCanPause, &CanPause_Parms, NULL );

	return CanPause_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeManager.DisableMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Mode                           ( CPF_Parm )
// struct FName                   ModeSpecifier                  ( CPF_OptionalParm | CPF_Parm )

void USFXGameModeManager::eventDisableMode ( unsigned char Mode, struct FName ModeSpecifier )
{
	static UFunction* pFnDisableMode = NULL;

	if ( ! pFnDisableMode )
		pFnDisableMode = (UFunction*) UObject::GObjObjects()->Data[ 63104 ];

	USFXGameModeManager_eventDisableMode_Parms DisableMode_Parms;
	DisableMode_Parms.Mode = Mode;
	memcpy ( &DisableMode_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnDisableMode, &DisableMode_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.EnableMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Mode                           ( CPF_Parm )
// struct FName                   ModeSpecifier                  ( CPF_OptionalParm | CPF_Parm )

void USFXGameModeManager::eventEnableMode ( unsigned char Mode, struct FName ModeSpecifier )
{
	static UFunction* pFnEnableMode = NULL;

	if ( ! pFnEnableMode )
		pFnEnableMode = (UFunction*) UObject::GObjObjects()->Data[ 63097 ];

	USFXGameModeManager_eventEnableMode_Parms EnableMode_Parms;
	EnableMode_Parms.Mode = Mode;
	memcpy ( &EnableMode_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnEnableMode, &EnableMode_Parms, NULL );
};

// Function SFXGame.SFXGameModeManager.IsPlayMode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Mode                           ( CPF_Parm )

bool USFXGameModeManager::IsPlayMode ( unsigned char Mode )
{
	static UFunction* pFnIsPlayMode = NULL;

	if ( ! pFnIsPlayMode )
		pFnIsPlayMode = (UFunction*) UObject::GObjObjects()->Data[ 63094 ];

	USFXGameModeManager_execIsPlayMode_Parms IsPlayMode_Parms;
	IsPlayMode_Parms.Mode = Mode;

	this->ProcessEvent ( pFnIsPlayMode, &IsPlayMode_Parms, NULL );

	return IsPlayMode_Parms.ReturnValue;
};

// Function SFXGame.SFXInventoryManager.DebugDraw_Accuracy
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )

void ASFXInventoryManager::DebugDraw_Accuracy ( class ABioHUD* HUD )
{
	static UFunction* pFnDebugDraw_Accuracy = NULL;

	if ( ! pFnDebugDraw_Accuracy )
		pFnDebugDraw_Accuracy = (UFunction*) UObject::GObjObjects()->Data[ 67531 ];

	ASFXInventoryManager_execDebugDraw_Accuracy_Parms DebugDraw_Accuracy_Parms;
	DebugDraw_Accuracy_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDraw_Accuracy, &DebugDraw_Accuracy_Parms, NULL );
};

// Function SFXGame.SFXInventoryManager.ResetAccuracy
// [0x00020002] 
// Parameters infos:

void ASFXInventoryManager::ResetAccuracy ( )
{
	static UFunction* pFnResetAccuracy = NULL;

	if ( ! pFnResetAccuracy )
		pFnResetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 67530 ];

	ASFXInventoryManager_execResetAccuracy_Parms ResetAccuracy_Parms;

	this->ProcessEvent ( pFnResetAccuracy, &ResetAccuracy_Parms, NULL );
};

// Function SFXGame.SFXInventoryManager.UpdateKickbackFade
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ASFXInventoryManager::UpdateKickbackFade ( float DeltaTime, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnUpdateKickbackFade = NULL;

	if ( ! pFnUpdateKickbackFade )
		pFnUpdateKickbackFade = (UFunction*) UObject::GObjObjects()->Data[ 67527 ];

	ASFXInventoryManager_execUpdateKickbackFade_Parms UpdateKickbackFade_Parms;
	UpdateKickbackFade_Parms.DeltaTime = DeltaTime;

	pFnUpdateKickbackFade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateKickbackFade, &UpdateKickbackFade_Parms, NULL );

	pFnUpdateKickbackFade->FunctionFlags |= 0x400;

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &UpdateKickbackFade_Parms.out_DeltaRot, 0xC );
};

// Function SFXGame.SFXInventoryManager.UpdateKickback
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ASFXInventoryManager::UpdateKickback ( float DeltaTime, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnUpdateKickback = NULL;

	if ( ! pFnUpdateKickback )
		pFnUpdateKickback = (UFunction*) UObject::GObjObjects()->Data[ 67524 ];

	ASFXInventoryManager_execUpdateKickback_Parms UpdateKickback_Parms;
	UpdateKickback_Parms.DeltaTime = DeltaTime;

	pFnUpdateKickback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateKickback, &UpdateKickback_Parms, NULL );

	pFnUpdateKickback->FunctionFlags |= 0x400;

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &UpdateKickback_Parms.out_DeltaRot, 0xC );
};

// Function SFXGame.SFXInventoryManager.SetWeaponRecoil
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          PitchRecoil                    ( CPF_Parm )

void ASFXInventoryManager::SetWeaponRecoil ( float PitchRecoil )
{
	static UFunction* pFnSetWeaponRecoil = NULL;

	if ( ! pFnSetWeaponRecoil )
		pFnSetWeaponRecoil = (UFunction*) UObject::GObjObjects()->Data[ 67522 ];

	ASFXInventoryManager_execSetWeaponRecoil_Parms SetWeaponRecoil_Parms;
	SetWeaponRecoil_Parms.PitchRecoil = PitchRecoil;

	pFnSetWeaponRecoil->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWeaponRecoil, &SetWeaponRecoil_Parms, NULL );

	pFnSetWeaponRecoil->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXLoadMovieManager.IsLoadingMoviePlaying
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXLoadMovieManager::IsLoadingMoviePlaying ( )
{
	static UFunction* pFnIsLoadingMoviePlaying = NULL;

	if ( ! pFnIsLoadingMoviePlaying )
		pFnIsLoadingMoviePlaying = (UFunction*) UObject::GObjObjects()->Data[ 67572 ];

	USFXLoadMovieManager_execIsLoadingMoviePlaying_Parms IsLoadingMoviePlaying_Parms;

	pFnIsLoadingMoviePlaying->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLoadingMoviePlaying, &IsLoadingMoviePlaying_Parms, NULL );

	pFnIsLoadingMoviePlaying->FunctionFlags |= 0x400;

	return IsLoadingMoviePlaying_Parms.ReturnValue;
};

// Function SFXGame.SFXLoadMovieManager.StopLoadingMovie
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bDelayStopUntilGameHasRendered ( CPF_OptionalParm | CPF_Parm )

bool USFXLoadMovieManager::StopLoadingMovie ( unsigned long bDelayStopUntilGameHasRendered )
{
	static UFunction* pFnStopLoadingMovie = NULL;

	if ( ! pFnStopLoadingMovie )
		pFnStopLoadingMovie = (UFunction*) UObject::GObjObjects()->Data[ 67569 ];

	USFXLoadMovieManager_execStopLoadingMovie_Parms StopLoadingMovie_Parms;
	StopLoadingMovie_Parms.bDelayStopUntilGameHasRendered = bDelayStopUntilGameHasRendered;

	pFnStopLoadingMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopLoadingMovie, &StopLoadingMovie_Parms, NULL );

	pFnStopLoadingMovie->FunctionFlags |= 0x400;

	return StopLoadingMovie_Parms.ReturnValue;
};

// Function SFXGame.SFXLoadMovieManager.PlayLoadingMovie
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 LevelName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USFXLoadMovieManager::PlayLoadingMovie ( struct FString LevelName )
{
	static UFunction* pFnPlayLoadingMovie = NULL;

	if ( ! pFnPlayLoadingMovie )
		pFnPlayLoadingMovie = (UFunction*) UObject::GObjObjects()->Data[ 67566 ];

	USFXLoadMovieManager_execPlayLoadingMovie_Parms PlayLoadingMovie_Parms;
	memcpy ( &PlayLoadingMovie_Parms.LevelName, &LevelName, 0x10 );

	pFnPlayLoadingMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayLoadingMovie, &PlayLoadingMovie_Parms, NULL );

	pFnPlayLoadingMovie->FunctionFlags |= 0x400;

	return PlayLoadingMovie_Parms.ReturnValue;
};

// Function SFXGame.SFXLoadMovieManager.InitLoadScreenTip
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXLoadMovieManager::InitLoadScreenTip ( )
{
	static UFunction* pFnInitLoadScreenTip = NULL;

	if ( ! pFnInitLoadScreenTip )
		pFnInitLoadScreenTip = (UFunction*) UObject::GObjObjects()->Data[ 67565 ];

	USFXLoadMovieManager_execInitLoadScreenTip_Parms InitLoadScreenTip_Parms;

	pFnInitLoadScreenTip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitLoadScreenTip, &InitLoadScreenTip_Parms, NULL );

	pFnInitLoadScreenTip->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXLoadMovieManager.SetupLoadingMovie
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioLoadingMovie*        Movie                          ( CPF_Parm )
// unsigned long                  RequiresExplicitStop           ( CPF_Parm )
// unsigned long                  PlayToCompletion               ( CPF_Parm )
// unsigned long                  StreamFromDisc                 ( CPF_Parm )

void USFXLoadMovieManager::SetupLoadingMovie ( class UBioLoadingMovie* Movie, unsigned long RequiresExplicitStop, unsigned long PlayToCompletion, unsigned long StreamFromDisc )
{
	static UFunction* pFnSetupLoadingMovie = NULL;

	if ( ! pFnSetupLoadingMovie )
		pFnSetupLoadingMovie = (UFunction*) UObject::GObjObjects()->Data[ 67560 ];

	USFXLoadMovieManager_execSetupLoadingMovie_Parms SetupLoadingMovie_Parms;
	SetupLoadingMovie_Parms.Movie = Movie;
	SetupLoadingMovie_Parms.RequiresExplicitStop = RequiresExplicitStop;
	SetupLoadingMovie_Parms.PlayToCompletion = PlayToCompletion;
	SetupLoadingMovie_Parms.StreamFromDisc = StreamFromDisc;

	pFnSetupLoadingMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupLoadingMovie, &SetupLoadingMovie_Parms, NULL );

	pFnSetupLoadingMovie->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXLoadMovieManager.ResetToDefaultLoadMovie
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXLoadMovieManager::ResetToDefaultLoadMovie ( )
{
	static UFunction* pFnResetToDefaultLoadMovie = NULL;

	if ( ! pFnResetToDefaultLoadMovie )
		pFnResetToDefaultLoadMovie = (UFunction*) UObject::GObjObjects()->Data[ 67559 ];

	USFXLoadMovieManager_execResetToDefaultLoadMovie_Parms ResetToDefaultLoadMovie_Parms;

	pFnResetToDefaultLoadMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaultLoadMovie, &ResetToDefaultLoadMovie_Parms, NULL );

	pFnResetToDefaultLoadMovie->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXModule_AimAssistTarget.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void USFXModule_AimAssistTarget::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 45854 ];

	USFXModule_AimAssistTarget_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.SFXModule_Cover.PlayerFinishedCoverAlign
// [0x00020002] 
// Parameters infos:

void USFXModule_Cover::PlayerFinishedCoverAlign ( )
{
	static UFunction* pFnPlayerFinishedCoverAlign = NULL;

	if ( ! pFnPlayerFinishedCoverAlign )
		pFnPlayerFinishedCoverAlign = (UFunction*) UObject::GObjObjects()->Data[ 67621 ];

	USFXModule_Cover_execPlayerFinishedCoverAlign_Parms PlayerFinishedCoverAlign_Parms;

	this->ProcessEvent ( pFnPlayerFinishedCoverAlign, &PlayerFinishedCoverAlign_Parms, NULL );
};

// Function SFXGame.SFXModule_Cover.PlayerLeftCover
// [0x00020002] 
// Parameters infos:

void USFXModule_Cover::PlayerLeftCover ( )
{
	static UFunction* pFnPlayerLeftCover = NULL;

	if ( ! pFnPlayerLeftCover )
		pFnPlayerLeftCover = (UFunction*) UObject::GObjObjects()->Data[ 67618 ];

	USFXModule_Cover_execPlayerLeftCover_Parms PlayerLeftCover_Parms;

	this->ProcessEvent ( pFnPlayerLeftCover, &PlayerLeftCover_Parms, NULL );
};

// Function SFXGame.SFXModule_Cover.PlayerEnteredCover
// [0x00020002] 
// Parameters infos:

void USFXModule_Cover::PlayerEnteredCover ( )
{
	static UFunction* pFnPlayerEnteredCover = NULL;

	if ( ! pFnPlayerEnteredCover )
		pFnPlayerEnteredCover = (UFunction*) UObject::GObjObjects()->Data[ 67615 ];

	USFXModule_Cover_execPlayerEnteredCover_Parms PlayerEnteredCover_Parms;

	this->ProcessEvent ( pFnPlayerEnteredCover, &PlayerEnteredCover_Parms, NULL );
};

// Function SFXGame.SFXModule_Cover.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void USFXModule_Cover::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 67608 ];

	USFXModule_Cover_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.SFXModule_Cover.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXModule_Cover::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 67606 ];

	USFXModule_Cover_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTrilogyProfileSettings.IsComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    PC                             ( CPF_Parm )
// int                            AchievementId                  ( CPF_Parm )

bool USFXTrilogyProfileSettings::IsComplete ( class ABioPlayerController* PC, int AchievementId )
{
	static UFunction* pFnIsComplete = NULL;

	if ( ! pFnIsComplete )
		pFnIsComplete = (UFunction*) UObject::GObjObjects()->Data[ 55912 ];

	USFXTrilogyProfileSettings_execIsComplete_Parms IsComplete_Parms;
	IsComplete_Parms.PC = PC;
	IsComplete_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnIsComplete, &IsComplete_Parms, NULL );

	return IsComplete_Parms.ReturnValue;
};

// Function SFXGame.SFXTrilogyProfileSettings.UnlockAchievement
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// int                            AchievementId                  ( CPF_Parm )

void USFXTrilogyProfileSettings::UnlockAchievement ( class ABioPlayerController* PC, int AchievementId )
{
	static UFunction* pFnUnlockAchievement = NULL;

	if ( ! pFnUnlockAchievement )
		pFnUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 55913 ];

	USFXTrilogyProfileSettings_execUnlockAchievement_Parms UnlockAchievement_Parms;
	UnlockAchievement_Parms.PC = PC;
	UnlockAchievement_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnUnlockAchievement, &UnlockAchievement_Parms, NULL );
};

// Function SFXGame.SFXTrilogyProfileSettings.ResetTrilogyData
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )

void USFXTrilogyProfileSettings::ResetTrilogyData ( class ABioPlayerController* PC )
{
	static UFunction* pFnResetTrilogyData = NULL;

	if ( ! pFnResetTrilogyData )
		pFnResetTrilogyData = (UFunction*) UObject::GObjObjects()->Data[ 55922 ];

	USFXTrilogyProfileSettings_execResetTrilogyData_Parms ResetTrilogyData_Parms;
	ResetTrilogyData_Parms.PC = PC;

	this->ProcessEvent ( pFnResetTrilogyData, &ResetTrilogyData_Parms, NULL );
};

// Function SFXGame.SFXTrilogyProfileSettings.GrinderStatReset
// [0x00020002] 
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )
// class ABioPlayerController*    PC                             ( CPF_Parm )

void USFXTrilogyProfileSettings::GrinderStatReset ( int ProfileSettingId, class ABioPlayerController* PC )
{
	static UFunction* pFnGrinderStatReset = NULL;

	if ( ! pFnGrinderStatReset )
		pFnGrinderStatReset = (UFunction*) UObject::GObjObjects()->Data[ 55919 ];

	USFXTrilogyProfileSettings_execGrinderStatReset_Parms GrinderStatReset_Parms;
	GrinderStatReset_Parms.ProfileSettingId = ProfileSettingId;
	GrinderStatReset_Parms.PC = PC;

	this->ProcessEvent ( pFnGrinderStatReset, &GrinderStatReset_Parms, NULL );
};

// Function SFXGame.SFXTrilogyProfileSettings.UniqueStatIncrement
// [0x00020002] 
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )
// class ABioPlayerController*    PC                             ( CPF_Parm )

void USFXTrilogyProfileSettings::UniqueStatIncrement ( int ProfileSettingId, class ABioPlayerController* PC )
{
	static UFunction* pFnUniqueStatIncrement = NULL;

	if ( ! pFnUniqueStatIncrement )
		pFnUniqueStatIncrement = (UFunction*) UObject::GObjObjects()->Data[ 55914 ];

	USFXTrilogyProfileSettings_execUniqueStatIncrement_Parms UniqueStatIncrement_Parms;
	UniqueStatIncrement_Parms.ProfileSettingId = ProfileSettingId;
	UniqueStatIncrement_Parms.PC = PC;

	this->ProcessEvent ( pFnUniqueStatIncrement, &UniqueStatIncrement_Parms, NULL );
};

// Function SFXGame.SFXTrilogyProfileSettings.GrinderStatIncrement
// [0x00020002] 
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )
// int                            Amount                         ( CPF_Parm )
// class ABioPlayerController*    PC                             ( CPF_Parm )

void USFXTrilogyProfileSettings::GrinderStatIncrement ( int ProfileSettingId, int Amount, class ABioPlayerController* PC )
{
	static UFunction* pFnGrinderStatIncrement = NULL;

	if ( ! pFnGrinderStatIncrement )
		pFnGrinderStatIncrement = (UFunction*) UObject::GObjObjects()->Data[ 55905 ];

	USFXTrilogyProfileSettings_execGrinderStatIncrement_Parms GrinderStatIncrement_Parms;
	GrinderStatIncrement_Parms.ProfileSettingId = ProfileSettingId;
	GrinderStatIncrement_Parms.Amount = Amount;
	GrinderStatIncrement_Parms.PC = PC;

	this->ProcessEvent ( pFnGrinderStatIncrement, &GrinderStatIncrement_Parms, NULL );
};

// Function SFXGame.BioWeapon.InitializeWeapon
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioWeapon::eventInitializeWeapon ( )
{
	static UFunction* pFnInitializeWeapon = NULL;

	if ( ! pFnInitializeWeapon )
		pFnInitializeWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50738 ];

	ABioWeapon_eventInitializeWeapon_Parms InitializeWeapon_Parms;

	this->ProcessEvent ( pFnInitializeWeapon, &InitializeWeapon_Parms, NULL );
};

// Function SFXGame.BioWeapon.DeactivateWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPawn* ABioWeapon::DeactivateWeapon ( )
{
	static UFunction* pFnDeactivateWeapon = NULL;

	if ( ! pFnDeactivateWeapon )
		pFnDeactivateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50736 ];

	ABioWeapon_execDeactivateWeapon_Parms DeactivateWeapon_Parms;

	pFnDeactivateWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateWeapon, &DeactivateWeapon_Parms, NULL );

	pFnDeactivateWeapon->FunctionFlags |= 0x400;

	return DeactivateWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.ActivateWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPawn* ABioWeapon::ActivateWeapon ( )
{
	static UFunction* pFnActivateWeapon = NULL;

	if ( ! pFnActivateWeapon )
		pFnActivateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50734 ];

	ABioWeapon_execActivateWeapon_Parms ActivateWeapon_Parms;

	pFnActivateWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateWeapon, &ActivateWeapon_Parms, NULL );

	pFnActivateWeapon->FunctionFlags |= 0x400;

	return ActivateWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.GetFractionOfEffectsMaterialEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeapon::GetFractionOfEffectsMaterialEnabled ( )
{
	static UFunction* pFnGetFractionOfEffectsMaterialEnabled = NULL;

	if ( ! pFnGetFractionOfEffectsMaterialEnabled )
		pFnGetFractionOfEffectsMaterialEnabled = (UFunction*) UObject::GObjObjects()->Data[ 50732 ];

	ABioWeapon_execGetFractionOfEffectsMaterialEnabled_Parms GetFractionOfEffectsMaterialEnabled_Parms;

	pFnGetFractionOfEffectsMaterialEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFractionOfEffectsMaterialEnabled, &GetFractionOfEffectsMaterialEnabled_Parms, NULL );

	pFnGetFractionOfEffectsMaterialEnabled->FunctionFlags |= 0x400;

	return GetFractionOfEffectsMaterialEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.SetFractionOfEffectsMaterialEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          FractionEnabled                ( CPF_Parm )

void ABioWeapon::SetFractionOfEffectsMaterialEnabled ( float FractionEnabled )
{
	static UFunction* pFnSetFractionOfEffectsMaterialEnabled = NULL;

	if ( ! pFnSetFractionOfEffectsMaterialEnabled )
		pFnSetFractionOfEffectsMaterialEnabled = (UFunction*) UObject::GObjObjects()->Data[ 50730 ];

	ABioWeapon_execSetFractionOfEffectsMaterialEnabled_Parms SetFractionOfEffectsMaterialEnabled_Parms;
	SetFractionOfEffectsMaterialEnabled_Parms.FractionEnabled = FractionEnabled;

	pFnSetFractionOfEffectsMaterialEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFractionOfEffectsMaterialEnabled, &SetFractionOfEffectsMaterialEnabled_Parms, NULL );

	pFnSetFractionOfEffectsMaterialEnabled->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeapon.GetEffectsMaterialType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioWeapon::GetEffectsMaterialType ( )
{
	static UFunction* pFnGetEffectsMaterialType = NULL;

	if ( ! pFnGetEffectsMaterialType )
		pFnGetEffectsMaterialType = (UFunction*) UObject::GObjObjects()->Data[ 50728 ];

	ABioWeapon_execGetEffectsMaterialType_Parms GetEffectsMaterialType_Parms;

	pFnGetEffectsMaterialType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEffectsMaterialType, &GetEffectsMaterialType_Parms, NULL );

	pFnGetEffectsMaterialType->FunctionFlags |= 0x400;

	return GetEffectsMaterialType_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.SetEffectsMaterialType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  EffectsMaterialType            ( CPF_Parm )

void ABioWeapon::SetEffectsMaterialType ( unsigned char EffectsMaterialType )
{
	static UFunction* pFnSetEffectsMaterialType = NULL;

	if ( ! pFnSetEffectsMaterialType )
		pFnSetEffectsMaterialType = (UFunction*) UObject::GObjObjects()->Data[ 50726 ];

	ABioWeapon_execSetEffectsMaterialType_Parms SetEffectsMaterialType_Parms;
	SetEffectsMaterialType_Parms.EffectsMaterialType = EffectsMaterialType;

	pFnSetEffectsMaterialType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEffectsMaterialType, &SetEffectsMaterialType_Parms, NULL );

	pFnSetEffectsMaterialType->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeapon.UpdateAppearance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWeapon::UpdateAppearance ( )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 50725 ];

	ABioWeapon_execUpdateAppearance_Parms UpdateAppearance_Parms;

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeapon.DetachFromPawn
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bCinematicsMode                ( CPF_OptionalParm | CPF_Parm )

class APawn* ABioWeapon::DetachFromPawn ( unsigned long bCinematicsMode )
{
	static UFunction* pFnDetachFromPawn = NULL;

	if ( ! pFnDetachFromPawn )
		pFnDetachFromPawn = (UFunction*) UObject::GObjObjects()->Data[ 45612 ];

	ABioWeapon_execDetachFromPawn_Parms DetachFromPawn_Parms;
	DetachFromPawn_Parms.bCinematicsMode = bCinematicsMode;

	pFnDetachFromPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetachFromPawn, &DetachFromPawn_Parms, NULL );

	pFnDetachFromPawn->FunctionFlags |= 0x400;

	return DetachFromPawn_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.ClearItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemWeapon*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioItemWeapon* ABioWeapon::ClearItem ( )
{
	static UFunction* pFnClearItem = NULL;

	if ( ! pFnClearItem )
		pFnClearItem = (UFunction*) UObject::GObjObjects()->Data[ 50722 ];

	ABioWeapon_execClearItem_Parms ClearItem_Parms;

	pFnClearItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearItem, &ClearItem_Parms, NULL );

	pFnClearItem->FunctionFlags |= 0x400;

	return ClearItem_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.SetItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemWeapon*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeapon*          oItem                          ( CPF_Parm )

class UBioItemWeapon* ABioWeapon::SetItem ( class UBioItemWeapon* oItem )
{
	static UFunction* pFnSetItem = NULL;

	if ( ! pFnSetItem )
		pFnSetItem = (UFunction*) UObject::GObjObjects()->Data[ 50719 ];

	ABioWeapon_execSetItem_Parms SetItem_Parms;
	SetItem_Parms.oItem = oItem;

	pFnSetItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetItem, &SetItem_Parms, NULL );

	pFnSetItem->FunctionFlags |= 0x400;

	return SetItem_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.GetTraceOwner
// [0x00020102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ABioWeapon::GetTraceOwner ( )
{
	static UFunction* pFnGetTraceOwner = NULL;

	if ( ! pFnGetTraceOwner )
		pFnGetTraceOwner = (UFunction*) UObject::GObjObjects()->Data[ 46171 ];

	ABioWeapon_execGetTraceOwner_Parms GetTraceOwner_Parms;

	this->ProcessEvent ( pFnGetTraceOwner, &GetTraceOwner_Parms, NULL );

	return GetTraceOwner_Parms.ReturnValue;
};

// Function SFXGame.BioWeapon.OnEffectsMaterial
// [0x00020002] 
// Parameters infos:
// class UBioSeqAct_EffectsMaterial* Action                         ( CPF_Parm )

void ABioWeapon::OnEffectsMaterial ( class UBioSeqAct_EffectsMaterial* Action )
{
	static UFunction* pFnOnEffectsMaterial = NULL;

	if ( ! pFnOnEffectsMaterial )
		pFnOnEffectsMaterial = (UFunction*) UObject::GObjObjects()->Data[ 50717 ];

	ABioWeapon_execOnEffectsMaterial_Parms OnEffectsMaterial_Parms;
	OnEffectsMaterial_Parms.Action = Action;

	this->ProcessEvent ( pFnOnEffectsMaterial, &OnEffectsMaterial_Parms, NULL );
};

// Function SFXGame.BioWeapon.ProxyPlaySound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               SoundCue                       ( CPF_Parm )

void ABioWeapon::eventProxyPlaySound ( class USoundCue* SoundCue )
{
	static UFunction* pFnProxyPlaySound = NULL;

	if ( ! pFnProxyPlaySound )
		pFnProxyPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 50715 ];

	ABioWeapon_eventProxyPlaySound_Parms ProxyPlaySound_Parms;
	ProxyPlaySound_Parms.SoundCue = SoundCue;

	this->ProcessEvent ( pFnProxyPlaySound, &ProxyPlaySound_Parms, NULL );
};

// Function SFXGame.BioWeapon.AttachToMesh
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  MeshComponent                  ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCinematicsMode                ( CPF_OptionalParm | CPF_Parm )

bool ABioWeapon::eventAttachToMesh ( class USkeletalMeshComponent* MeshComponent, struct FName SocketName, unsigned long bCinematicsMode )
{
	static UFunction* pFnAttachToMesh = NULL;

	if ( ! pFnAttachToMesh )
		pFnAttachToMesh = (UFunction*) UObject::GObjObjects()->Data[ 45614 ];

	ABioWeapon_eventAttachToMesh_Parms AttachToMesh_Parms;
	AttachToMesh_Parms.MeshComponent = MeshComponent;
	memcpy ( &AttachToMesh_Parms.SocketName, &SocketName, 0x8 );
	AttachToMesh_Parms.bCinematicsMode = bCinematicsMode;

	pFnAttachToMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachToMesh, &AttachToMesh_Parms, NULL );

	pFnAttachToMesh->FunctionFlags |= 0x400;

	return AttachToMesh_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.CanStartFiring
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWeaponRanged::CanStartFiring ( )
{
	static UFunction* pFnCanStartFiring = NULL;

	if ( ! pFnCanStartFiring )
		pFnCanStartFiring = (UFunction*) UObject::GObjObjects()->Data[ 50899 ];

	ABioWeaponRanged_execCanStartFiring_Parms CanStartFiring_Parms;

	pFnCanStartFiring->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanStartFiring, &CanStartFiring_Parms, NULL );

	pFnCanStartFiring->FunctionFlags |= 0x400;

	return CanStartFiring_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetPlayerAimError
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Accuracy                       ( CPF_Parm )

float ABioWeaponRanged::GetPlayerAimError ( float Accuracy )
{
	static UFunction* pFnGetPlayerAimError = NULL;

	if ( ! pFnGetPlayerAimError )
		pFnGetPlayerAimError = (UFunction*) UObject::GObjObjects()->Data[ 50896 ];

	ABioWeaponRanged_execGetPlayerAimError_Parms GetPlayerAimError_Parms;
	GetPlayerAimError_Parms.Accuracy = Accuracy;

	pFnGetPlayerAimError->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerAimError, &GetPlayerAimError_Parms, NULL );

	pFnGetPlayerAimError->FunctionFlags |= 0x400;

	return GetPlayerAimError_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetRecoil
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetRecoil ( )
{
	static UFunction* pFnGetRecoil = NULL;

	if ( ! pFnGetRecoil )
		pFnGetRecoil = (UFunction*) UObject::GObjObjects()->Data[ 50894 ];

	ABioWeaponRanged_execGetRecoil_Parms GetRecoil_Parms;

	pFnGetRecoil->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRecoil, &GetRecoil_Parms, NULL );

	pFnGetRecoil->FunctionFlags |= 0x400;

	return GetRecoil_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetRateOfFire
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetRateOfFire ( )
{
	static UFunction* pFnGetRateOfFire = NULL;

	if ( ! pFnGetRateOfFire )
		pFnGetRateOfFire = (UFunction*) UObject::GObjObjects()->Data[ 48214 ];

	ABioWeaponRanged_execGetRateOfFire_Parms GetRateOfFire_Parms;

	pFnGetRateOfFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRateOfFire, &GetRateOfFire_Parms, NULL );

	pFnGetRateOfFire->FunctionFlags |= 0x400;

	return GetRateOfFire_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetRangedWeaponType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioWeaponRanged::GetRangedWeaponType ( )
{
	static UFunction* pFnGetRangedWeaponType = NULL;

	if ( ! pFnGetRangedWeaponType )
		pFnGetRangedWeaponType = (UFunction*) UObject::GObjObjects()->Data[ 50892 ];

	ABioWeaponRanged_execGetRangedWeaponType_Parms GetRangedWeaponType_Parms;

	pFnGetRangedWeaponType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRangedWeaponType, &GetRangedWeaponType_Parms, NULL );

	pFnGetRangedWeaponType->FunctionFlags |= 0x400;

	return GetRangedWeaponType_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetMuzzleLoc
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioWeaponRanged::GetMuzzleLoc ( )
{
	static UFunction* pFnGetMuzzleLoc = NULL;

	if ( ! pFnGetMuzzleLoc )
		pFnGetMuzzleLoc = (UFunction*) UObject::GObjObjects()->Data[ 46169 ];

	ABioWeaponRanged_execGetMuzzleLoc_Parms GetMuzzleLoc_Parms;

	pFnGetMuzzleLoc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMuzzleLoc, &GetMuzzleLoc_Parms, NULL );

	pFnGetMuzzleLoc->FunctionFlags |= 0x400;

	return GetMuzzleLoc_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.PlayWeaponSound
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmSound                        ( CPF_Parm )

void ABioWeaponRanged::PlayWeaponSound ( struct FName nmSound )
{
	static UFunction* pFnPlayWeaponSound = NULL;

	if ( ! pFnPlayWeaponSound )
		pFnPlayWeaponSound = (UFunction*) UObject::GObjObjects()->Data[ 50890 ];

	ABioWeaponRanged_execPlayWeaponSound_Parms PlayWeaponSound_Parms;
	memcpy ( &PlayWeaponSound_Parms.nmSound, &nmSound, 0x8 );

	pFnPlayWeaponSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayWeaponSound, &PlayWeaponSound_Parms, NULL );

	pFnPlayWeaponSound->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.PlayShootingWhileOverheatedSound
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWeaponRanged::PlayShootingWhileOverheatedSound ( )
{
	static UFunction* pFnPlayShootingWhileOverheatedSound = NULL;

	if ( ! pFnPlayShootingWhileOverheatedSound )
		pFnPlayShootingWhileOverheatedSound = (UFunction*) UObject::GObjObjects()->Data[ 50889 ];

	ABioWeaponRanged_execPlayShootingWhileOverheatedSound_Parms PlayShootingWhileOverheatedSound_Parms;

	pFnPlayShootingWhileOverheatedSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayShootingWhileOverheatedSound, &PlayShootingWhileOverheatedSound_Parms, NULL );

	pFnPlayShootingWhileOverheatedSound->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.PlayOverheatSound
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWeaponRanged::PlayOverheatSound ( )
{
	static UFunction* pFnPlayOverheatSound = NULL;

	if ( ! pFnPlayOverheatSound )
		pFnPlayOverheatSound = (UFunction*) UObject::GObjObjects()->Data[ 50888 ];

	ABioWeaponRanged_execPlayOverheatSound_Parms PlayOverheatSound_Parms;

	pFnPlayOverheatSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayOverheatSound, &PlayOverheatSound_Parms, NULL );

	pFnPlayOverheatSound->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.OnHide
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void ABioWeaponRanged::OnHide ( unsigned long bHide )
{
	static UFunction* pFnOnHide = NULL;

	if ( ! pFnOnHide )
		pFnOnHide = (UFunction*) UObject::GObjObjects()->Data[ 50784 ];

	ABioWeaponRanged_execOnHide_Parms OnHide_Parms;
	OnHide_Parms.bHide = bHide;

	pFnOnHide->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnHide, &OnHide_Parms, NULL );

	pFnOnHide->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.TickHeat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ABioWeaponRanged::TickHeat ( float fDeltaTime )
{
	static UFunction* pFnTickHeat = NULL;

	if ( ! pFnTickHeat )
		pFnTickHeat = (UFunction*) UObject::GObjObjects()->Data[ 50885 ];

	ABioWeaponRanged_execTickHeat_Parms TickHeat_Parms;
	TickHeat_Parms.fDeltaTime = fDeltaTime;

	pFnTickHeat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickHeat, &TickHeat_Parms, NULL );

	pFnTickHeat->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.GetVisualExplosionSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVISGrenade*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioVISGrenade* ABioWeaponRanged::GetVisualExplosionSet ( )
{
	static UFunction* pFnGetVisualExplosionSet = NULL;

	if ( ! pFnGetVisualExplosionSet )
		pFnGetVisualExplosionSet = (UFunction*) UObject::GObjObjects()->Data[ 50883 ];

	ABioWeaponRanged_execGetVisualExplosionSet_Parms GetVisualExplosionSet_Parms;

	pFnGetVisualExplosionSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualExplosionSet, &GetVisualExplosionSet_Parms, NULL );

	pFnGetVisualExplosionSet->FunctionFlags |= 0x400;

	return GetVisualExplosionSet_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetVisualImpactSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVISWeapon*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioVISWeapon* ABioWeaponRanged::GetVisualImpactSet ( )
{
	static UFunction* pFnGetVisualImpactSet = NULL;

	if ( ! pFnGetVisualImpactSet )
		pFnGetVisualImpactSet = (UFunction*) UObject::GObjObjects()->Data[ 50881 ];

	ABioWeaponRanged_execGetVisualImpactSet_Parms GetVisualImpactSet_Parms;

	pFnGetVisualImpactSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualImpactSet, &GetVisualImpactSet_Parms, NULL );

	pFnGetVisualImpactSet->FunctionFlags |= 0x400;

	return GetVisualImpactSet_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.ReleaseVisualEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Effect                         ( CPF_Parm )

void ABioWeaponRanged::ReleaseVisualEffect ( unsigned char Effect )
{
	static UFunction* pFnReleaseVisualEffect = NULL;

	if ( ! pFnReleaseVisualEffect )
		pFnReleaseVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 50879 ];

	ABioWeaponRanged_execReleaseVisualEffect_Parms ReleaseVisualEffect_Parms;
	ReleaseVisualEffect_Parms.Effect = Effect;

	pFnReleaseVisualEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseVisualEffect, &ReleaseVisualEffect_Parms, NULL );

	pFnReleaseVisualEffect->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.GetVisualEffect
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Effect                         ( CPF_Parm )
// unsigned long                  bCacheEffect                   ( CPF_OptionalParm | CPF_Parm )

class ABioVisualEffect* ABioWeaponRanged::GetVisualEffect ( unsigned char Effect, unsigned long bCacheEffect )
{
	static UFunction* pFnGetVisualEffect = NULL;

	if ( ! pFnGetVisualEffect )
		pFnGetVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 50875 ];

	ABioWeaponRanged_execGetVisualEffect_Parms GetVisualEffect_Parms;
	GetVisualEffect_Parms.Effect = Effect;
	GetVisualEffect_Parms.bCacheEffect = bCacheEffect;

	pFnGetVisualEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualEffect, &GetVisualEffect_Parms, NULL );

	pFnGetVisualEffect->FunctionFlags |= 0x400;

	return GetVisualEffect_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.TickFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void ABioWeaponRanged::TickFire ( float TimeDelta )
{
	static UFunction* pFnTickFire = NULL;

	if ( ! pFnTickFire )
		pFnTickFire = (UFunction*) UObject::GObjObjects()->Data[ 50873 ];

	ABioWeaponRanged_execTickFire_Parms TickFire_Parms;
	TickFire_Parms.TimeDelta = TimeDelta;

	pFnTickFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickFire, &TickFire_Parms, NULL );

	pFnTickFire->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.WeaponRanges
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          MinRange                       ( CPF_Parm | CPF_OutParm )
// float                          BestRange                      ( CPF_Parm | CPF_OutParm )
// float                          MaxRange                       ( CPF_Parm | CPF_OutParm )

void ABioWeaponRanged::WeaponRanges ( float* MinRange, float* BestRange, float* MaxRange )
{
	static UFunction* pFnWeaponRanges = NULL;

	if ( ! pFnWeaponRanges )
		pFnWeaponRanges = (UFunction*) UObject::GObjObjects()->Data[ 50869 ];

	ABioWeaponRanged_execWeaponRanges_Parms WeaponRanges_Parms;

	pFnWeaponRanges->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWeaponRanges, &WeaponRanges_Parms, NULL );

	pFnWeaponRanges->FunctionFlags |= 0x400;

	if ( MinRange )
		*MinRange = WeaponRanges_Parms.MinRange;

	if ( BestRange )
		*BestRange = WeaponRanges_Parms.BestRange;

	if ( MaxRange )
		*MaxRange = WeaponRanges_Parms.MaxRange;
};

// Function SFXGame.BioWeaponRanged.GetAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesItemWeaponRanged* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioAttributesItemWeaponRanged* ABioWeaponRanged::GetAttributes ( )
{
	static UFunction* pFnGetAttributes = NULL;

	if ( ! pFnGetAttributes )
		pFnGetAttributes = (UFunction*) UObject::GObjObjects()->Data[ 50867 ];

	ABioWeaponRanged_execGetAttributes_Parms GetAttributes_Parms;

	pFnGetAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributes, &GetAttributes_Parms, NULL );

	pFnGetAttributes->FunctionFlags |= 0x400;

	return GetAttributes_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.IsPenetratedByInstantFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oHitActor                      ( CPF_Parm )

bool ABioWeaponRanged::IsPenetratedByInstantFire ( class AActor* oHitActor )
{
	static UFunction* pFnIsPenetratedByInstantFire = NULL;

	if ( ! pFnIsPenetratedByInstantFire )
		pFnIsPenetratedByInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 50864 ];

	ABioWeaponRanged_execIsPenetratedByInstantFire_Parms IsPenetratedByInstantFire_Parms;
	IsPenetratedByInstantFire_Parms.oHitActor = oHitActor;

	pFnIsPenetratedByInstantFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPenetratedByInstantFire, &IsPenetratedByInstantFire_Parms, NULL );

	pFnIsPenetratedByInstantFire->FunctionFlags |= 0x400;

	return IsPenetratedByInstantFire_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.DoCoolDownEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWeaponRanged::eventDoCoolDownEffect ( )
{
	static UFunction* pFnDoCoolDownEffect = NULL;

	if ( ! pFnDoCoolDownEffect )
		pFnDoCoolDownEffect = (UFunction*) UObject::GObjObjects()->Data[ 50860 ];

	ABioWeaponRanged_eventDoCoolDownEffect_Parms DoCoolDownEffect_Parms;

	this->ProcessEvent ( pFnDoCoolDownEffect, &DoCoolDownEffect_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.DoBulletTraceEffect
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vHitPoint                      ( CPF_Const | CPF_Parm | CPF_OutParm )

void ABioWeaponRanged::DoBulletTraceEffect ( struct FVector* vHitPoint )
{
	static UFunction* pFnDoBulletTraceEffect = NULL;

	if ( ! pFnDoBulletTraceEffect )
		pFnDoBulletTraceEffect = (UFunction*) UObject::GObjObjects()->Data[ 50858 ];

	ABioWeaponRanged_execDoBulletTraceEffect_Parms DoBulletTraceEffect_Parms;

	pFnDoBulletTraceEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoBulletTraceEffect, &DoBulletTraceEffect_Parms, NULL );

	pFnDoBulletTraceEffect->FunctionFlags |= 0x400;

	if ( vHitPoint )
		memcpy ( vHitPoint, &DoBulletTraceEffect_Parms.vHitPoint, 0xC );
};

// Function SFXGame.BioWeaponRanged.GetZoomFOV
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetZoomFOV ( )
{
	static UFunction* pFnGetZoomFOV = NULL;

	if ( ! pFnGetZoomFOV )
		pFnGetZoomFOV = (UFunction*) UObject::GObjObjects()->Data[ 50855 ];

	ABioWeaponRanged_execGetZoomFOV_Parms GetZoomFOV_Parms;

	this->ProcessEvent ( pFnGetZoomFOV, &GetZoomFOV_Parms, NULL );

	return GetZoomFOV_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.IsScoped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWeaponRanged::IsScoped ( )
{
	static UFunction* pFnIsScoped = NULL;

	if ( ! pFnIsScoped )
		pFnIsScoped = (UFunction*) UObject::GObjObjects()->Data[ 50853 ];

	ABioWeaponRanged_execIsScoped_Parms IsScoped_Parms;

	this->ProcessEvent ( pFnIsScoped, &IsScoped_Parms, NULL );

	return IsScoped_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetAdhesionMultiplier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetAdhesionMultiplier ( )
{
	static UFunction* pFnGetAdhesionMultiplier = NULL;

	if ( ! pFnGetAdhesionMultiplier )
		pFnGetAdhesionMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 50850 ];

	ABioWeaponRanged_execGetAdhesionMultiplier_Parms GetAdhesionMultiplier_Parms;

	this->ProcessEvent ( pFnGetAdhesionMultiplier, &GetAdhesionMultiplier_Parms, NULL );

	return GetAdhesionMultiplier_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetFrictionMultiplier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetFrictionMultiplier ( )
{
	static UFunction* pFnGetFrictionMultiplier = NULL;

	if ( ! pFnGetFrictionMultiplier )
		pFnGetFrictionMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 50847 ];

	ABioWeaponRanged_execGetFrictionMultiplier_Parms GetFrictionMultiplier_Parms;

	this->ProcessEvent ( pFnGetFrictionMultiplier, &GetFrictionMultiplier_Parms, NULL );

	return GetFrictionMultiplier_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetCameraSensitivityMultiplier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioWeaponRanged::GetCameraSensitivityMultiplier ( )
{
	static UFunction* pFnGetCameraSensitivityMultiplier = NULL;

	if ( ! pFnGetCameraSensitivityMultiplier )
		pFnGetCameraSensitivityMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 50844 ];

	ABioWeaponRanged_execGetCameraSensitivityMultiplier_Parms GetCameraSensitivityMultiplier_Parms;

	this->ProcessEvent ( pFnGetCameraSensitivityMultiplier, &GetCameraSensitivityMultiplier_Parms, NULL );

	return GetCameraSensitivityMultiplier_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.ResetFiringState
// [0x00020002] 
// Parameters infos:

void ABioWeaponRanged::ResetFiringState ( )
{
	static UFunction* pFnResetFiringState = NULL;

	if ( ! pFnResetFiringState )
		pFnResetFiringState = (UFunction*) UObject::GObjObjects()->Data[ 50841 ];

	ABioWeaponRanged_execResetFiringState_Parms ResetFiringState_Parms;

	this->ProcessEvent ( pFnResetFiringState, &ResetFiringState_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.HasLoopingFire
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWeaponRanged::eventHasLoopingFire ( )
{
	static UFunction* pFnHasLoopingFire = NULL;

	if ( ! pFnHasLoopingFire )
		pFnHasLoopingFire = (UFunction*) UObject::GObjObjects()->Data[ 50839 ];

	ABioWeaponRanged_eventHasLoopingFire_Parms HasLoopingFire_Parms;

	this->ProcessEvent ( pFnHasLoopingFire, &HasLoopingFire_Parms, NULL );

	return HasLoopingFire_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.FireOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWeaponRanged::eventFireOff ( )
{
	static UFunction* pFnFireOff = NULL;

	if ( ! pFnFireOff )
		pFnFireOff = (UFunction*) UObject::GObjObjects()->Data[ 50838 ];

	ABioWeaponRanged_eventFireOff_Parms FireOff_Parms;

	this->ProcessEvent ( pFnFireOff, &FireOff_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.FireOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWeaponRanged::eventFireOn ( )
{
	static UFunction* pFnFireOn = NULL;

	if ( ! pFnFireOn )
		pFnFireOn = (UFunction*) UObject::GObjObjects()->Data[ 50826 ];

	ABioWeaponRanged_eventFireOn_Parms FireOn_Parms;

	this->ProcessEvent ( pFnFireOn, &FireOn_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.InitializeWeapon
// [0x00020002] 
// Parameters infos:

void ABioWeaponRanged::InitializeWeapon ( )
{
	static UFunction* pFnInitializeWeapon = NULL;

	if ( ! pFnInitializeWeapon )
		pFnInitializeWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50816 ];

	ABioWeaponRanged_execInitializeWeapon_Parms InitializeWeapon_Parms;

	this->ProcessEvent ( pFnInitializeWeapon, &InitializeWeapon_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.GetWeaponDesc
// [0x00422002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ManufacturerID                 ( CPF_Parm )
// unsigned char                  Slot                           ( CPF_Parm )
// int                            Description                    ( CPF_Parm | CPF_OutParm )

bool ABioWeaponRanged::GetWeaponDesc ( int ManufacturerID, unsigned char Slot, int* Description )
{
	static UFunction* pFnGetWeaponDesc = NULL;

	if ( ! pFnGetWeaponDesc )
		pFnGetWeaponDesc = (UFunction*) UObject::GObjObjects()->Data[ 50804 ];

	ABioWeaponRanged_execGetWeaponDesc_Parms GetWeaponDesc_Parms;
	GetWeaponDesc_Parms.ManufacturerID = ManufacturerID;
	GetWeaponDesc_Parms.Slot = Slot;

	this->ProcessEvent ( pFnGetWeaponDesc, &GetWeaponDesc_Parms, NULL );

	if ( Description )
		*Description = GetWeaponDesc_Parms.Description;

	return GetWeaponDesc_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetStatsBinding
// [0x00422002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ManufacturerID                 ( CPF_Parm )
// unsigned char                  weaponType                     ( CPF_Parm )
// struct FStatsClassBinding      OutBinding                     ( CPF_Parm | CPF_OutParm )

bool ABioWeaponRanged::GetStatsBinding ( int ManufacturerID, unsigned char weaponType, struct FStatsClassBinding* OutBinding )
{
	static UFunction* pFnGetStatsBinding = NULL;

	if ( ! pFnGetStatsBinding )
		pFnGetStatsBinding = (UFunction*) UObject::GObjObjects()->Data[ 50794 ];

	ABioWeaponRanged_execGetStatsBinding_Parms GetStatsBinding_Parms;
	GetStatsBinding_Parms.ManufacturerID = ManufacturerID;
	GetStatsBinding_Parms.weaponType = weaponType;

	this->ProcessEvent ( pFnGetStatsBinding, &GetStatsBinding_Parms, NULL );

	if ( OutBinding )
		memcpy ( OutBinding, &GetStatsBinding_Parms.OutBinding, 0xC );

	return GetStatsBinding_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.GetAdjustedAim
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ABioWeaponRanged::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 50786 ];

	ABioWeaponRanged_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.CycleMagnification
// [0x00020102] 
// Parameters infos:

void ABioWeaponRanged::CycleMagnification ( )
{
	static UFunction* pFnCycleMagnification = NULL;

	if ( ! pFnCycleMagnification )
		pFnCycleMagnification = (UFunction*) UObject::GObjObjects()->Data[ 50785 ];

	ABioWeaponRanged_execCycleMagnification_Parms CycleMagnification_Parms;

	this->ProcessEvent ( pFnCycleMagnification, &CycleMagnification_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.SetZoomed
// [0x00020102] 
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )

void ABioWeaponRanged::SetZoomed ( unsigned long bState )
{
	static UFunction* pFnSetZoomed = NULL;

	if ( ! pFnSetZoomed )
		pFnSetZoomed = (UFunction*) UObject::GObjObjects()->Data[ 50777 ];

	ABioWeaponRanged_execSetZoomed_Parms SetZoomed_Parms;
	SetZoomed_Parms.bState = bState;

	this->ProcessEvent ( pFnSetZoomed, &SetZoomed_Parms, NULL );
};

// Function SFXGame.BioWeaponRanged.SetMuzzleFlashState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )

void ABioWeaponRanged::SetMuzzleFlashState ( unsigned long bState )
{
	static UFunction* pFnSetMuzzleFlashState = NULL;

	if ( ! pFnSetMuzzleFlashState )
		pFnSetMuzzleFlashState = (UFunction*) UObject::GObjObjects()->Data[ 50775 ];

	ABioWeaponRanged_execSetMuzzleFlashState_Parms SetMuzzleFlashState_Parms;
	SetMuzzleFlashState_Parms.bState = bState;

	pFnSetMuzzleFlashState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMuzzleFlashState, &SetMuzzleFlashState_Parms, NULL );

	pFnSetMuzzleFlashState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWeaponRanged.DeactivateWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPawn* ABioWeaponRanged::DeactivateWeapon ( )
{
	static UFunction* pFnDeactivateWeapon = NULL;

	if ( ! pFnDeactivateWeapon )
		pFnDeactivateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50773 ];

	ABioWeaponRanged_execDeactivateWeapon_Parms DeactivateWeapon_Parms;

	pFnDeactivateWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateWeapon, &DeactivateWeapon_Parms, NULL );

	pFnDeactivateWeapon->FunctionFlags |= 0x400;

	return DeactivateWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.AttachToMesh
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  MeshComponent                  ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCinematicsMode                ( CPF_OptionalParm | CPF_Parm )

bool ABioWeaponRanged::eventAttachToMesh ( class USkeletalMeshComponent* MeshComponent, struct FName SocketName, unsigned long bCinematicsMode )
{
	static UFunction* pFnAttachToMesh = NULL;

	if ( ! pFnAttachToMesh )
		pFnAttachToMesh = (UFunction*) UObject::GObjObjects()->Data[ 50768 ];

	ABioWeaponRanged_eventAttachToMesh_Parms AttachToMesh_Parms;
	AttachToMesh_Parms.MeshComponent = MeshComponent;
	memcpy ( &AttachToMesh_Parms.SocketName, &SocketName, 0x8 );
	AttachToMesh_Parms.bCinematicsMode = bCinematicsMode;

	pFnAttachToMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachToMesh, &AttachToMesh_Parms, NULL );

	pFnAttachToMesh->FunctionFlags |= 0x400;

	return AttachToMesh_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.SetItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemWeapon*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeapon*          oItem                          ( CPF_Parm )

class UBioItemWeapon* ABioWeaponRanged::SetItem ( class UBioItemWeapon* oItem )
{
	static UFunction* pFnSetItem = NULL;

	if ( ! pFnSetItem )
		pFnSetItem = (UFunction*) UObject::GObjObjects()->Data[ 50765 ];

	ABioWeaponRanged_execSetItem_Parms SetItem_Parms;
	SetItem_Parms.oItem = oItem;

	pFnSetItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetItem, &SetItem_Parms, NULL );

	pFnSetItem->FunctionFlags |= 0x400;

	return SetItem_Parms.ReturnValue;
};

// Function SFXGame.BioWeaponRanged.OnTargetHit
// [0x00120000] 
// Parameters infos:
// unsigned long                  bIsHeadShot                    ( CPF_Parm )

void ABioWeaponRanged::OnTargetHit ( unsigned long bIsHeadShot )
{
	static UFunction* pFnOnTargetHit = NULL;

	if ( ! pFnOnTargetHit )
		pFnOnTargetHit = (UFunction*) UObject::GObjObjects()->Data[ 50763 ];

	ABioWeaponRanged_execOnTargetHit_Parms OnTargetHit_Parms;
	OnTargetHit_Parms.bIsHeadShot = bIsHeadShot;

	this->ProcessEvent ( pFnOnTargetHit, &OnTargetHit_Parms, NULL );
};

// Function SFXGame.SFXWeaponStatsBase.GetDamageFromItem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeaponRanged*    Item                           ( CPF_Parm )

float USFXWeaponStatsBase::GetDamageFromItem ( class UBioItemWeaponRanged* Item )
{
	static UFunction* pFnGetDamageFromItem = NULL;

	if ( ! pFnGetDamageFromItem )
		pFnGetDamageFromItem = (UFunction*) UObject::GObjObjects()->Data[ 68117 ];

	USFXWeaponStatsBase_execGetDamageFromItem_Parms GetDamageFromItem_Parms;
	GetDamageFromItem_Parms.Item = Item;

	pFnGetDamageFromItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDamageFromItem, &GetDamageFromItem_Parms, NULL );

	pFnGetDamageFromItem->FunctionFlags |= 0x400;

	return GetDamageFromItem_Parms.ReturnValue;
};

// Function SFXGame.SFXWeaponStatsBase.GetHeatPerShotFromItem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeaponRanged*    Item                           ( CPF_Parm )

float USFXWeaponStatsBase::GetHeatPerShotFromItem ( class UBioItemWeaponRanged* Item )
{
	static UFunction* pFnGetHeatPerShotFromItem = NULL;

	if ( ! pFnGetHeatPerShotFromItem )
		pFnGetHeatPerShotFromItem = (UFunction*) UObject::GObjObjects()->Data[ 68109 ];

	USFXWeaponStatsBase_execGetHeatPerShotFromItem_Parms GetHeatPerShotFromItem_Parms;
	GetHeatPerShotFromItem_Parms.Item = Item;

	pFnGetHeatPerShotFromItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHeatPerShotFromItem, &GetHeatPerShotFromItem_Parms, NULL );

	pFnGetHeatPerShotFromItem->FunctionFlags |= 0x400;

	return GetHeatPerShotFromItem_Parms.ReturnValue;
};

// Function SFXGame.SFXWeaponStatsBase.GetRateOfFireFromItem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeaponRanged*    Item                           ( CPF_Parm )

float USFXWeaponStatsBase::GetRateOfFireFromItem ( class UBioItemWeaponRanged* Item )
{
	static UFunction* pFnGetRateOfFireFromItem = NULL;

	if ( ! pFnGetRateOfFireFromItem )
		pFnGetRateOfFireFromItem = (UFunction*) UObject::GObjObjects()->Data[ 68108 ];

	USFXWeaponStatsBase_execGetRateOfFireFromItem_Parms GetRateOfFireFromItem_Parms;
	GetRateOfFireFromItem_Parms.Item = Item;

	pFnGetRateOfFireFromItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRateOfFireFromItem, &GetRateOfFireFromItem_Parms, NULL );

	pFnGetRateOfFireFromItem->FunctionFlags |= 0x400;

	return GetRateOfFireFromItem_Parms.ReturnValue;
};

// Function SFXGame.SFXWeaponStatsBase.Initialize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            sophistication                 ( CPF_Parm )
// int                            ManufacturerID                 ( CPF_Parm )

void USFXWeaponStatsBase::Initialize ( int sophistication, int ManufacturerID )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 50822 ];

	USFXWeaponStatsBase_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.sophistication = sophistication;
	Initialize_Parms.ManufacturerID = ManufacturerID;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXWeaponStatsBase.GetDamagePerSecondValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeaponRanged*    Item                           ( CPF_Parm )

float USFXWeaponStatsBase::GetDamagePerSecondValue ( class UBioItemWeaponRanged* Item )
{
	static UFunction* pFnGetDamagePerSecondValue = NULL;

	if ( ! pFnGetDamagePerSecondValue )
		pFnGetDamagePerSecondValue = (UFunction*) UObject::GObjObjects()->Data[ 51176 ];

	USFXWeaponStatsBase_execGetDamagePerSecondValue_Parms GetDamagePerSecondValue_Parms;
	GetDamagePerSecondValue_Parms.Item = Item;

	this->ProcessEvent ( pFnGetDamagePerSecondValue, &GetDamagePerSecondValue_Parms, NULL );

	return GetDamagePerSecondValue_Parms.ReturnValue;
};

// Function SFXGame.SFXWeaponStatsBase.GetHeatsinkEfficiencyValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeaponRanged*    Item                           ( CPF_Parm )

float USFXWeaponStatsBase::GetHeatsinkEfficiencyValue ( class UBioItemWeaponRanged* Item )
{
	static UFunction* pFnGetHeatsinkEfficiencyValue = NULL;

	if ( ! pFnGetHeatsinkEfficiencyValue )
		pFnGetHeatsinkEfficiencyValue = (UFunction*) UObject::GObjObjects()->Data[ 51181 ];

	USFXWeaponStatsBase_execGetHeatsinkEfficiencyValue_Parms GetHeatsinkEfficiencyValue_Parms;
	GetHeatsinkEfficiencyValue_Parms.Item = Item;

	this->ProcessEvent ( pFnGetHeatsinkEfficiencyValue, &GetHeatsinkEfficiencyValue_Parms, NULL );

	return GetHeatsinkEfficiencyValue_Parms.ReturnValue;
};

// Function SFXGame.BioActive.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActive::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 40902 ];

	UBioActive_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActive.GetEventTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioActive::eventGetEventTypeName ( )
{
	static UFunction* pFnGetEventTypeName = NULL;

	if ( ! pFnGetEventTypeName )
		pFnGetEventTypeName = (UFunction*) UObject::GObjObjects()->Data[ 40900 ];

	UBioActive_eventGetEventTypeName_Parms GetEventTypeName_Parms;

	this->ProcessEvent ( pFnGetEventTypeName, &GetEventTypeName_Parms, NULL );

	return GetEventTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioActive.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oOwner                         ( CPF_Parm )

void UBioActive::Initialize ( class AActor* oOwner )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 40898 ];

	UBioActive_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.oOwner = oOwner;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActive.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActive::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 40897 ];

	UBioActive_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveFall.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveFall::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 40909 ];

	UBioActiveFall_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveFall.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveFall::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 40908 ];

	UBioActiveFall_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveGrenade.GUIState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioActiveGrenade::GUIState ( )
{
	static UFunction* pFnGUIState = NULL;

	if ( ! pFnGUIState )
		pFnGUIState = (UFunction*) UObject::GObjObjects()->Data[ 46663 ];

	UBioActiveGrenade_execGUIState_Parms GUIState_Parms;

	pFnGUIState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGUIState, &GUIState_Parms, NULL );

	pFnGUIState->FunctionFlags |= 0x400;

	return GUIState_Parms.ReturnValue;
};

// Function SFXGame.BioActiveGrenade.GetEventTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioActiveGrenade::eventGetEventTypeName ( )
{
	static UFunction* pFnGetEventTypeName = NULL;

	if ( ! pFnGetEventTypeName )
		pFnGetEventTypeName = (UFunction*) UObject::GObjObjects()->Data[ 46661 ];

	UBioActiveGrenade_eventGetEventTypeName_Parms GetEventTypeName_Parms;

	this->ProcessEvent ( pFnGetEventTypeName, &GetEventTypeName_Parms, NULL );

	return GetEventTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioActiveGrenade.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveGrenade::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 46658 ];

	UBioActiveGrenade_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveGrenade.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveGrenade::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 46657 ];

	UBioActiveGrenade_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveMount.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveMount::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 46691 ];

	UBioActiveMount_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveMount.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveMount::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 46690 ];

	UBioActiveMount_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.RecordDebugAimingInfo
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vStartLocation1                ( CPF_Parm )
// struct FVector                 vEndLocation1                  ( CPF_Parm )
// struct FVector                 vStartLocation2                ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vEndLocation2                  ( CPF_OptionalParm | CPF_Parm )

void UBioActivePower::RecordDebugAimingInfo ( struct FVector vStartLocation1, struct FVector vEndLocation1, struct FVector vStartLocation2, struct FVector vEndLocation2 )
{
	static UFunction* pFnRecordDebugAimingInfo = NULL;

	if ( ! pFnRecordDebugAimingInfo )
		pFnRecordDebugAimingInfo = (UFunction*) UObject::GObjObjects()->Data[ 46996 ];

	UBioActivePower_execRecordDebugAimingInfo_Parms RecordDebugAimingInfo_Parms;
	memcpy ( &RecordDebugAimingInfo_Parms.vStartLocation1, &vStartLocation1, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vEndLocation1, &vEndLocation1, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vStartLocation2, &vStartLocation2, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vEndLocation2, &vEndLocation2, 0xC );

	pFnRecordDebugAimingInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordDebugAimingInfo, &RecordDebugAimingInfo_Parms, NULL );

	pFnRecordDebugAimingInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.RecordDebugInfo
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActivePower::RecordDebugInfo ( )
{
	static UFunction* pFnRecordDebugInfo = NULL;

	if ( ! pFnRecordDebugInfo )
		pFnRecordDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 46995 ];

	UBioActivePower_execRecordDebugInfo_Parms RecordDebugInfo_Parms;

	pFnRecordDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordDebugInfo, &RecordDebugInfo_Parms, NULL );

	pFnRecordDebugInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.GetImpactLocation
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )
// struct FName                   nmBoneName                     ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetImpactLocation ( class AActor* oActor, struct FVector* vLocation, struct FVector* vNormal, struct FName* nmBoneName )
{
	static UFunction* pFnGetImpactLocation = NULL;

	if ( ! pFnGetImpactLocation )
		pFnGetImpactLocation = (UFunction*) UObject::GObjObjects()->Data[ 46990 ];

	UBioActivePower_execGetImpactLocation_Parms GetImpactLocation_Parms;
	GetImpactLocation_Parms.oActor = oActor;

	pFnGetImpactLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetImpactLocation, &GetImpactLocation_Parms, NULL );

	pFnGetImpactLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetImpactLocation_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetImpactLocation_Parms.vNormal, 0xC );

	if ( nmBoneName )
		memcpy ( nmBoneName, &GetImpactLocation_Parms.nmBoneName, 0x8 );
};

// Function SFXGame.BioActivePower.GetConeLocationForAI
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FRotator                rRotation                      ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetConeLocationForAI ( struct FVector* vLocation, struct FRotator* rRotation )
{
	static UFunction* pFnGetConeLocationForAI = NULL;

	if ( ! pFnGetConeLocationForAI )
		pFnGetConeLocationForAI = (UFunction*) UObject::GObjObjects()->Data[ 46987 ];

	UBioActivePower_execGetConeLocationForAI_Parms GetConeLocationForAI_Parms;

	pFnGetConeLocationForAI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConeLocationForAI, &GetConeLocationForAI_Parms, NULL );

	pFnGetConeLocationForAI->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetConeLocationForAI_Parms.vLocation, 0xC );

	if ( rRotation )
		memcpy ( rRotation, &GetConeLocationForAI_Parms.rRotation, 0xC );
};

// Function SFXGame.BioActivePower.GetConeLocationForPlayer
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FRotator                rRotation                      ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetConeLocationForPlayer ( struct FVector* vLocation, struct FRotator* rRotation )
{
	static UFunction* pFnGetConeLocationForPlayer = NULL;

	if ( ! pFnGetConeLocationForPlayer )
		pFnGetConeLocationForPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46984 ];

	UBioActivePower_execGetConeLocationForPlayer_Parms GetConeLocationForPlayer_Parms;

	pFnGetConeLocationForPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConeLocationForPlayer, &GetConeLocationForPlayer_Parms, NULL );

	pFnGetConeLocationForPlayer->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetConeLocationForPlayer_Parms.vLocation, 0xC );

	if ( rRotation )
		memcpy ( rRotation, &GetConeLocationForPlayer_Parms.rRotation, 0xC );
};

// Function SFXGame.BioActivePower.GetConeLocation
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FRotator                rRotation                      ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetConeLocation ( struct FVector* vLocation, struct FRotator* rRotation )
{
	static UFunction* pFnGetConeLocation = NULL;

	if ( ! pFnGetConeLocation )
		pFnGetConeLocation = (UFunction*) UObject::GObjObjects()->Data[ 46981 ];

	UBioActivePower_execGetConeLocation_Parms GetConeLocation_Parms;

	pFnGetConeLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConeLocation, &GetConeLocation_Parms, NULL );

	pFnGetConeLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetConeLocation_Parms.vLocation, 0xC );

	if ( rRotation )
		memcpy ( rRotation, &GetConeLocation_Parms.rRotation, 0xC );
};

// Function SFXGame.BioActivePower.GetReleaseLocationForAI
// [0x00444401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bUseBeamSpecialHandling        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )
// class AActor*                  oActorAtReleaseLocation        ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetReleaseLocationForAI ( unsigned long bUseBeamSpecialHandling, struct FVector* vLocation, struct FVector* vNormal, class AActor** oActorAtReleaseLocation )
{
	static UFunction* pFnGetReleaseLocationForAI = NULL;

	if ( ! pFnGetReleaseLocationForAI )
		pFnGetReleaseLocationForAI = (UFunction*) UObject::GObjObjects()->Data[ 46976 ];

	UBioActivePower_execGetReleaseLocationForAI_Parms GetReleaseLocationForAI_Parms;
	GetReleaseLocationForAI_Parms.bUseBeamSpecialHandling = bUseBeamSpecialHandling;

	pFnGetReleaseLocationForAI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReleaseLocationForAI, &GetReleaseLocationForAI_Parms, NULL );

	pFnGetReleaseLocationForAI->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetReleaseLocationForAI_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetReleaseLocationForAI_Parms.vNormal, 0xC );

	if ( oActorAtReleaseLocation )
		*oActorAtReleaseLocation = GetReleaseLocationForAI_Parms.oActorAtReleaseLocation;
};

// Function SFXGame.BioActivePower.GetReleaseLocationForPlayer
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )
// class AActor*                  oActorAtReleaseLocation        ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetReleaseLocationForPlayer ( struct FVector* vLocation, struct FVector* vNormal, class AActor** oActorAtReleaseLocation )
{
	static UFunction* pFnGetReleaseLocationForPlayer = NULL;

	if ( ! pFnGetReleaseLocationForPlayer )
		pFnGetReleaseLocationForPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46972 ];

	UBioActivePower_execGetReleaseLocationForPlayer_Parms GetReleaseLocationForPlayer_Parms;

	pFnGetReleaseLocationForPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReleaseLocationForPlayer, &GetReleaseLocationForPlayer_Parms, NULL );

	pFnGetReleaseLocationForPlayer->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetReleaseLocationForPlayer_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetReleaseLocationForPlayer_Parms.vNormal, 0xC );

	if ( oActorAtReleaseLocation )
		*oActorAtReleaseLocation = GetReleaseLocationForPlayer_Parms.oActorAtReleaseLocation;
};

// Function SFXGame.BioActivePower.GetReleaseLocation
// [0x00444401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bUseBeamSpecialHandling        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )
// class AActor*                  oActorAtReleaseLocation        ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetReleaseLocation ( unsigned long bUseBeamSpecialHandling, struct FVector* vLocation, struct FVector* vNormal, class AActor** oActorAtReleaseLocation )
{
	static UFunction* pFnGetReleaseLocation = NULL;

	if ( ! pFnGetReleaseLocation )
		pFnGetReleaseLocation = (UFunction*) UObject::GObjObjects()->Data[ 46967 ];

	UBioActivePower_execGetReleaseLocation_Parms GetReleaseLocation_Parms;
	GetReleaseLocation_Parms.bUseBeamSpecialHandling = bUseBeamSpecialHandling;

	pFnGetReleaseLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReleaseLocation, &GetReleaseLocation_Parms, NULL );

	pFnGetReleaseLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetReleaseLocation_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetReleaseLocation_Parms.vNormal, 0xC );

	if ( oActorAtReleaseLocation )
		*oActorAtReleaseLocation = GetReleaseLocation_Parms.oActorAtReleaseLocation;
};

// Function SFXGame.BioActivePower.GetProjectileLocation
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vTargetLocation                ( CPF_Parm | CPF_OutParm )

void UBioActivePower::GetProjectileLocation ( struct FVector* vLocation, struct FVector* vTargetLocation )
{
	static UFunction* pFnGetProjectileLocation = NULL;

	if ( ! pFnGetProjectileLocation )
		pFnGetProjectileLocation = (UFunction*) UObject::GObjObjects()->Data[ 46964 ];

	UBioActivePower_execGetProjectileLocation_Parms GetProjectileLocation_Parms;

	pFnGetProjectileLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetProjectileLocation, &GetProjectileLocation_Parms, NULL );

	pFnGetProjectileLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetProjectileLocation_Parms.vLocation, 0xC );

	if ( vTargetLocation )
		memcpy ( vTargetLocation, &GetProjectileLocation_Parms.vTargetLocation, 0xC );
};

// Function SFXGame.BioActivePower.CreatePowerScript
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::CreatePowerScript ( )
{
	static UFunction* pFnCreatePowerScript = NULL;

	if ( ! pFnCreatePowerScript )
		pFnCreatePowerScript = (UFunction*) UObject::GObjObjects()->Data[ 46962 ];

	UBioActivePower_execCreatePowerScript_Parms CreatePowerScript_Parms;

	pFnCreatePowerScript->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreatePowerScript, &CreatePowerScript_Parms, NULL );

	pFnCreatePowerScript->FunctionFlags |= 0x400;

	return CreatePowerScript_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.UpdateBeamVFX
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )
// float                          fDeltaTime                     ( CPF_Parm )

void UBioActivePower::UpdateBeamVFX ( unsigned char eResource, float fDeltaTime )
{
	static UFunction* pFnUpdateBeamVFX = NULL;

	if ( ! pFnUpdateBeamVFX )
		pFnUpdateBeamVFX = (UFunction*) UObject::GObjObjects()->Data[ 46959 ];

	UBioActivePower_execUpdateBeamVFX_Parms UpdateBeamVFX_Parms;
	UpdateBeamVFX_Parms.eResource = eResource;
	UpdateBeamVFX_Parms.fDeltaTime = fDeltaTime;

	pFnUpdateBeamVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateBeamVFX, &UpdateBeamVFX_Parms, NULL );

	pFnUpdateBeamVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.DisplayBeamVFX
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )
// struct FVector                 vStartLocation                 ( CPF_Parm )
// struct FVector                 vDestination                   ( CPF_Parm )

void UBioActivePower::DisplayBeamVFX ( unsigned char eResource, struct FVector vStartLocation, struct FVector vDestination )
{
	static UFunction* pFnDisplayBeamVFX = NULL;

	if ( ! pFnDisplayBeamVFX )
		pFnDisplayBeamVFX = (UFunction*) UObject::GObjObjects()->Data[ 46955 ];

	UBioActivePower_execDisplayBeamVFX_Parms DisplayBeamVFX_Parms;
	DisplayBeamVFX_Parms.eResource = eResource;
	memcpy ( &DisplayBeamVFX_Parms.vStartLocation, &vStartLocation, 0xC );
	memcpy ( &DisplayBeamVFX_Parms.vDestination, &vDestination, 0xC );

	pFnDisplayBeamVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayBeamVFX, &DisplayBeamVFX_Parms, NULL );

	pFnDisplayBeamVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.StopPowerVFX
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )
// unsigned long                  bAllowVFXToFinish              ( CPF_OptionalParm | CPF_Parm )

void UBioActivePower::StopPowerVFX ( unsigned char eResource, unsigned long bAllowVFXToFinish )
{
	static UFunction* pFnStopPowerVFX = NULL;

	if ( ! pFnStopPowerVFX )
		pFnStopPowerVFX = (UFunction*) UObject::GObjObjects()->Data[ 46952 ];

	UBioActivePower_execStopPowerVFX_Parms StopPowerVFX_Parms;
	StopPowerVFX_Parms.eResource = eResource;
	StopPowerVFX_Parms.bAllowVFXToFinish = bAllowVFXToFinish;

	pFnStopPowerVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopPowerVFX, &StopPowerVFX_Parms, NULL );

	pFnStopPowerVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.DisplayPowerVFX
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )

void UBioActivePower::DisplayPowerVFX ( unsigned char eResource )
{
	static UFunction* pFnDisplayPowerVFX = NULL;

	if ( ! pFnDisplayPowerVFX )
		pFnDisplayPowerVFX = (UFunction*) UObject::GObjObjects()->Data[ 46950 ];

	UBioActivePower_execDisplayPowerVFX_Parms DisplayPowerVFX_Parms;
	DisplayPowerVFX_Parms.eResource = eResource;

	pFnDisplayPowerVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayPowerVFX, &DisplayPowerVFX_Parms, NULL );

	pFnDisplayPowerVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.GetAnimationAvailability
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActivePower::GetAnimationAvailability ( )
{
	static UFunction* pFnGetAnimationAvailability = NULL;

	if ( ! pFnGetAnimationAvailability )
		pFnGetAnimationAvailability = (UFunction*) UObject::GObjObjects()->Data[ 46949 ];

	UBioActivePower_execGetAnimationAvailability_Parms GetAnimationAvailability_Parms;

	pFnGetAnimationAvailability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationAvailability, &GetAnimationAvailability_Parms, NULL );

	pFnGetAnimationAvailability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.UnloadAnimSet
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActivePower::UnloadAnimSet ( )
{
	static UFunction* pFnUnloadAnimSet = NULL;

	if ( ! pFnUnloadAnimSet )
		pFnUnloadAnimSet = (UFunction*) UObject::GObjObjects()->Data[ 46948 ];

	UBioActivePower_execUnloadAnimSet_Parms UnloadAnimSet_Parms;

	pFnUnloadAnimSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnloadAnimSet, &UnloadAnimSet_Parms, NULL );

	pFnUnloadAnimSet->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.LoadAnimSet
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::LoadAnimSet ( )
{
	static UFunction* pFnLoadAnimSet = NULL;

	if ( ! pFnLoadAnimSet )
		pFnLoadAnimSet = (UFunction*) UObject::GObjObjects()->Data[ 46946 ];

	UBioActivePower_execLoadAnimSet_Parms LoadAnimSet_Parms;

	pFnLoadAnimSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAnimSet, &LoadAnimSet_Parms, NULL );

	pFnLoadAnimSet->FunctionFlags |= 0x400;

	return LoadAnimSet_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.DoImpact
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )
// int                            nImpactedCount                 ( CPF_Parm | CPF_OutParm )

bool UBioActivePower::DoImpact ( class AActor* oActor, int* nImpactedCount )
{
	static UFunction* pFnDoImpact = NULL;

	if ( ! pFnDoImpact )
		pFnDoImpact = (UFunction*) UObject::GObjObjects()->Data[ 46942 ];

	UBioActivePower_execDoImpact_Parms DoImpact_Parms;
	DoImpact_Parms.oActor = oActor;

	pFnDoImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoImpact, &DoImpact_Parms, NULL );

	pFnDoImpact->FunctionFlags |= 0x400;

	if ( nImpactedCount )
		*nImpactedCount = DoImpact_Parms.nImpactedCount;

	return DoImpact_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseDualPower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::ReleaseDualPower ( )
{
	static UFunction* pFnReleaseDualPower = NULL;

	if ( ! pFnReleaseDualPower )
		pFnReleaseDualPower = (UFunction*) UObject::GObjObjects()->Data[ 46940 ];

	UBioActivePower_execReleaseDualPower_Parms ReleaseDualPower_Parms;

	pFnReleaseDualPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseDualPower, &ReleaseDualPower_Parms, NULL );

	pFnReleaseDualPower->FunctionFlags |= 0x400;

	return ReleaseDualPower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseVerticalCylinderPower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FVector                 vNormal                        ( CPF_Parm )

bool UBioActivePower::ReleaseVerticalCylinderPower ( struct FVector vLocation, struct FVector vNormal )
{
	static UFunction* pFnReleaseVerticalCylinderPower = NULL;

	if ( ! pFnReleaseVerticalCylinderPower )
		pFnReleaseVerticalCylinderPower = (UFunction*) UObject::GObjObjects()->Data[ 46936 ];

	UBioActivePower_execReleaseVerticalCylinderPower_Parms ReleaseVerticalCylinderPower_Parms;
	memcpy ( &ReleaseVerticalCylinderPower_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &ReleaseVerticalCylinderPower_Parms.vNormal, &vNormal, 0xC );

	pFnReleaseVerticalCylinderPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseVerticalCylinderPower, &ReleaseVerticalCylinderPower_Parms, NULL );

	pFnReleaseVerticalCylinderPower->FunctionFlags |= 0x400;

	return ReleaseVerticalCylinderPower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseConePower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )

bool UBioActivePower::ReleaseConePower ( struct FVector vLocation, struct FRotator rRotation )
{
	static UFunction* pFnReleaseConePower = NULL;

	if ( ! pFnReleaseConePower )
		pFnReleaseConePower = (UFunction*) UObject::GObjObjects()->Data[ 46932 ];

	UBioActivePower_execReleaseConePower_Parms ReleaseConePower_Parms;
	memcpy ( &ReleaseConePower_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &ReleaseConePower_Parms.rRotation, &rRotation, 0xC );

	pFnReleaseConePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseConePower, &ReleaseConePower_Parms, NULL );

	pFnReleaseConePower->FunctionFlags |= 0x400;

	return ReleaseConePower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseImpactVolumePower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::ReleaseImpactVolumePower ( )
{
	static UFunction* pFnReleaseImpactVolumePower = NULL;

	if ( ! pFnReleaseImpactVolumePower )
		pFnReleaseImpactVolumePower = (UFunction*) UObject::GObjObjects()->Data[ 46930 ];

	UBioActivePower_execReleaseImpactVolumePower_Parms ReleaseImpactVolumePower_Parms;

	pFnReleaseImpactVolumePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseImpactVolumePower, &ReleaseImpactVolumePower_Parms, NULL );

	pFnReleaseImpactVolumePower->FunctionFlags |= 0x400;

	return ReleaseImpactVolumePower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseRadiusPower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FVector                 vNormal                        ( CPF_Parm )
// class AActor*                  oActorAtReleaseLocation        ( CPF_Parm )
// unsigned long                  bIncludeCaster                 ( CPF_Parm )

bool UBioActivePower::ReleaseRadiusPower ( struct FVector vLocation, struct FVector vNormal, class AActor* oActorAtReleaseLocation, unsigned long bIncludeCaster )
{
	static UFunction* pFnReleaseRadiusPower = NULL;

	if ( ! pFnReleaseRadiusPower )
		pFnReleaseRadiusPower = (UFunction*) UObject::GObjObjects()->Data[ 46924 ];

	UBioActivePower_execReleaseRadiusPower_Parms ReleaseRadiusPower_Parms;
	memcpy ( &ReleaseRadiusPower_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &ReleaseRadiusPower_Parms.vNormal, &vNormal, 0xC );
	ReleaseRadiusPower_Parms.oActorAtReleaseLocation = oActorAtReleaseLocation;
	ReleaseRadiusPower_Parms.bIncludeCaster = bIncludeCaster;

	pFnReleaseRadiusPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseRadiusPower, &ReleaseRadiusPower_Parms, NULL );

	pFnReleaseRadiusPower->FunctionFlags |= 0x400;

	return ReleaseRadiusPower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.ReleaseProjectilePower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::ReleaseProjectilePower ( )
{
	static UFunction* pFnReleaseProjectilePower = NULL;

	if ( ! pFnReleaseProjectilePower )
		pFnReleaseProjectilePower = (UFunction*) UObject::GObjObjects()->Data[ 46922 ];

	UBioActivePower_execReleaseProjectilePower_Parms ReleaseProjectilePower_Parms;

	pFnReleaseProjectilePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseProjectilePower, &ReleaseProjectilePower_Parms, NULL );

	pFnReleaseProjectilePower->FunctionFlags |= 0x400;

	return ReleaseProjectilePower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.EndUsingPhase
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::EndUsingPhase ( )
{
	static UFunction* pFnEndUsingPhase = NULL;

	if ( ! pFnEndUsingPhase )
		pFnEndUsingPhase = (UFunction*) UObject::GObjObjects()->Data[ 46920 ];

	UBioActivePower_execEndUsingPhase_Parms EndUsingPhase_Parms;

	pFnEndUsingPhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndUsingPhase, &EndUsingPhase_Parms, NULL );

	pFnEndUsingPhase->FunctionFlags |= 0x400;

	return EndUsingPhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.StartUsingPhase
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::StartUsingPhase ( )
{
	static UFunction* pFnStartUsingPhase = NULL;

	if ( ! pFnStartUsingPhase )
		pFnStartUsingPhase = (UFunction*) UObject::GObjObjects()->Data[ 46918 ];

	UBioActivePower_execStartUsingPhase_Parms StartUsingPhase_Parms;

	pFnStartUsingPhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartUsingPhase, &StartUsingPhase_Parms, NULL );

	pFnStartUsingPhase->FunctionFlags |= 0x400;

	return StartUsingPhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.EndReleasePhase
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::EndReleasePhase ( )
{
	static UFunction* pFnEndReleasePhase = NULL;

	if ( ! pFnEndReleasePhase )
		pFnEndReleasePhase = (UFunction*) UObject::GObjObjects()->Data[ 46916 ];

	UBioActivePower_execEndReleasePhase_Parms EndReleasePhase_Parms;

	pFnEndReleasePhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndReleasePhase, &EndReleasePhase_Parms, NULL );

	pFnEndReleasePhase->FunctionFlags |= 0x400;

	return EndReleasePhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.StartReleasePhase
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::StartReleasePhase ( )
{
	static UFunction* pFnStartReleasePhase = NULL;

	if ( ! pFnStartReleasePhase )
		pFnStartReleasePhase = (UFunction*) UObject::GObjObjects()->Data[ 46914 ];

	UBioActivePower_execStartReleasePhase_Parms StartReleasePhase_Parms;

	pFnStartReleasePhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartReleasePhase, &StartReleasePhase_Parms, NULL );

	pFnStartReleasePhase->FunctionFlags |= 0x400;

	return StartReleasePhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.EndCastingPhase
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bAllowVFXToFinish              ( CPF_OptionalParm | CPF_Parm )

bool UBioActivePower::EndCastingPhase ( unsigned long bAllowVFXToFinish )
{
	static UFunction* pFnEndCastingPhase = NULL;

	if ( ! pFnEndCastingPhase )
		pFnEndCastingPhase = (UFunction*) UObject::GObjObjects()->Data[ 46911 ];

	UBioActivePower_execEndCastingPhase_Parms EndCastingPhase_Parms;
	EndCastingPhase_Parms.bAllowVFXToFinish = bAllowVFXToFinish;

	pFnEndCastingPhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndCastingPhase, &EndCastingPhase_Parms, NULL );

	pFnEndCastingPhase->FunctionFlags |= 0x400;

	return EndCastingPhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.StartCastingPhase
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActivePower::StartCastingPhase ( )
{
	static UFunction* pFnStartCastingPhase = NULL;

	if ( ! pFnStartCastingPhase )
		pFnStartCastingPhase = (UFunction*) UObject::GObjObjects()->Data[ 46909 ];

	UBioActivePower_execStartCastingPhase_Parms StartCastingPhase_Parms;

	pFnStartCastingPhase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartCastingPhase, &StartCastingPhase_Parms, NULL );

	pFnStartCastingPhase->FunctionFlags |= 0x400;

	return StartCastingPhase_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActivePower::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 46908 ];

	UBioActivePower_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.SetTargetLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm )

void UBioActivePower::SetTargetLocation ( struct FVector vLocation )
{
	static UFunction* pFnSetTargetLocation = NULL;

	if ( ! pFnSetTargetLocation )
		pFnSetTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 46906 ];

	UBioActivePower_execSetTargetLocation_Parms SetTargetLocation_Parms;
	memcpy ( &SetTargetLocation_Parms.vLocation, &vLocation, 0xC );

	pFnSetTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetLocation, &SetTargetLocation_Parms, NULL );

	pFnSetTargetLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.SetTargetActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )

void UBioActivePower::SetTargetActor ( class AActor* oTarget )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 46904 ];

	UBioActivePower_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.oTarget = oTarget;

	pFnSetTargetActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );

	pFnSetTargetActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActivePower.CancelPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bOnlyCancelIfCasting           ( CPF_Parm )

bool UBioActivePower::CancelPower ( unsigned long bOnlyCancelIfCasting )
{
	static UFunction* pFnCancelPower = NULL;

	if ( ! pFnCancelPower )
		pFnCancelPower = (UFunction*) UObject::GObjObjects()->Data[ 46901 ];

	UBioActivePower_execCancelPower_Parms CancelPower_Parms;
	CancelPower_Parms.bOnlyCancelIfCasting = bOnlyCancelIfCasting;

	pFnCancelPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelPower, &CancelPower_Parms, NULL );

	pFnCancelPower->FunctionFlags |= 0x400;

	return CancelPower_Parms.ReturnValue;
};

// Function SFXGame.BioActivePower.AnimationReadyForPowerRelease
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActivePower::AnimationReadyForPowerRelease ( )
{
	static UFunction* pFnAnimationReadyForPowerRelease = NULL;

	if ( ! pFnAnimationReadyForPowerRelease )
		pFnAnimationReadyForPowerRelease = (UFunction*) UObject::GObjObjects()->Data[ 46900 ];

	UBioActivePower_execAnimationReadyForPowerRelease_Parms AnimationReadyForPowerRelease_Parms;

	pFnAnimationReadyForPowerRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimationReadyForPowerRelease, &AnimationReadyForPowerRelease_Parms, NULL );

	pFnAnimationReadyForPowerRelease->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.StartActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActiveSelectWeapon::StartActive ( )
{
	static UFunction* pFnStartActive = NULL;

	if ( ! pFnStartActive )
		pFnStartActive = (UFunction*) UObject::GObjObjects()->Data[ 47062 ];

	UBioActiveSelectWeapon_execStartActive_Parms StartActive_Parms;

	pFnStartActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartActive, &StartActive_Parms, NULL );

	pFnStartActive->FunctionFlags |= 0x400;

	return StartActive_Parms.ReturnValue;
};

// Function SFXGame.BioActiveSelectWeapon.FinishDrawAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::FinishDrawAnim ( )
{
	static UFunction* pFnFinishDrawAnim = NULL;

	if ( ! pFnFinishDrawAnim )
		pFnFinishDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 47061 ];

	UBioActiveSelectWeapon_execFinishDrawAnim_Parms FinishDrawAnim_Parms;

	pFnFinishDrawAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFinishDrawAnim, &FinishDrawAnim_Parms, NULL );

	pFnFinishDrawAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.FadeOutDrawAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::FadeOutDrawAnim ( )
{
	static UFunction* pFnFadeOutDrawAnim = NULL;

	if ( ! pFnFadeOutDrawAnim )
		pFnFadeOutDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 47060 ];

	UBioActiveSelectWeapon_execFadeOutDrawAnim_Parms FadeOutDrawAnim_Parms;

	pFnFadeOutDrawAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFadeOutDrawAnim, &FadeOutDrawAnim_Parms, NULL );

	pFnFadeOutDrawAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.SwapDrawAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::SwapDrawAnim ( )
{
	static UFunction* pFnSwapDrawAnim = NULL;

	if ( ! pFnSwapDrawAnim )
		pFnSwapDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 47059 ];

	UBioActiveSelectWeapon_execSwapDrawAnim_Parms SwapDrawAnim_Parms;

	pFnSwapDrawAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapDrawAnim, &SwapDrawAnim_Parms, NULL );

	pFnSwapDrawAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.FinishHolsterAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::FinishHolsterAnim ( )
{
	static UFunction* pFnFinishHolsterAnim = NULL;

	if ( ! pFnFinishHolsterAnim )
		pFnFinishHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 47058 ];

	UBioActiveSelectWeapon_execFinishHolsterAnim_Parms FinishHolsterAnim_Parms;

	pFnFinishHolsterAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFinishHolsterAnim, &FinishHolsterAnim_Parms, NULL );

	pFnFinishHolsterAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.FadeOutHolsterAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::FadeOutHolsterAnim ( )
{
	static UFunction* pFnFadeOutHolsterAnim = NULL;

	if ( ! pFnFadeOutHolsterAnim )
		pFnFadeOutHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 47057 ];

	UBioActiveSelectWeapon_execFadeOutHolsterAnim_Parms FadeOutHolsterAnim_Parms;

	pFnFadeOutHolsterAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFadeOutHolsterAnim, &FadeOutHolsterAnim_Parms, NULL );

	pFnFadeOutHolsterAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.SwapHolsterAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActiveSelectWeapon::SwapHolsterAnim ( )
{
	static UFunction* pFnSwapHolsterAnim = NULL;

	if ( ! pFnSwapHolsterAnim )
		pFnSwapHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 47056 ];

	UBioActiveSelectWeapon_execSwapHolsterAnim_Parms SwapHolsterAnim_Parms;

	pFnSwapHolsterAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapHolsterAnim, &SwapHolsterAnim_Parms, NULL );

	pFnSwapHolsterAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveSelectWeapon.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveSelectWeapon::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 47053 ];

	UBioActiveSelectWeapon_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveShoot.GetEventTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioActiveShoot::eventGetEventTypeName ( )
{
	static UFunction* pFnGetEventTypeName = NULL;

	if ( ! pFnGetEventTypeName )
		pFnGetEventTypeName = (UFunction*) UObject::GObjObjects()->Data[ 47087 ];

	UBioActiveShoot_eventGetEventTypeName_Parms GetEventTypeName_Parms;

	this->ProcessEvent ( pFnGetEventTypeName, &GetEventTypeName_Parms, NULL );

	return GetEventTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioActiveShoot.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveShoot::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 47084 ];

	UBioActiveShoot_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveShoot.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveShoot::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 47083 ];

	UBioActiveShoot_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveShootVehicle.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveShootVehicle::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 47102 ];

	UBioActiveShootVehicle_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveShootVehicleCannon.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveShootVehicleCannon::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 47104 ];

	UBioActiveShootVehicleCannon_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveShootVehicleMachineGun.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveShootVehicleMachineGun::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 47105 ];

	UBioActiveShootVehicleMachineGun_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActiveUseArtPlaceable.DisplayProgress
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActiveUseArtPlaceable::DisplayProgress ( )
{
	static UFunction* pFnDisplayProgress = NULL;

	if ( ! pFnDisplayProgress )
		pFnDisplayProgress = (UFunction*) UObject::GObjObjects()->Data[ 47112 ];

	UBioActiveUseArtPlaceable_execDisplayProgress_Parms DisplayProgress_Parms;

	pFnDisplayProgress->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayProgress, &DisplayProgress_Parms, NULL );

	pFnDisplayProgress->FunctionFlags |= 0x400;

	return DisplayProgress_Parms.ReturnValue;
};

// Function SFXGame.BioActiveUseArtPlaceable.GetProgress
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioActiveUseArtPlaceable::GetProgress ( )
{
	static UFunction* pFnGetProgress = NULL;

	if ( ! pFnGetProgress )
		pFnGetProgress = (UFunction*) UObject::GObjObjects()->Data[ 47110 ];

	UBioActiveUseArtPlaceable_execGetProgress_Parms GetProgress_Parms;

	pFnGetProgress->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetProgress, &GetProgress_Parms, NULL );

	pFnGetProgress->FunctionFlags |= 0x400;

	return GetProgress_Parms.ReturnValue;
};

// Function SFXGame.BioActiveUseArtPlaceable.ValidSuperMode
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eMode                          ( CPF_Parm )

bool UBioActiveUseArtPlaceable::eventValidSuperMode ( unsigned char eMode )
{
	static UFunction* pFnValidSuperMode = NULL;

	if ( ! pFnValidSuperMode )
		pFnValidSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 47107 ];

	UBioActiveUseArtPlaceable_eventValidSuperMode_Parms ValidSuperMode_Parms;
	ValidSuperMode_Parms.eMode = eMode;

	this->ProcessEvent ( pFnValidSuperMode, &ValidSuperMode_Parms, NULL );

	return ValidSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActiveUseArtPlaceable.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActiveUseArtPlaceable::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 47106 ];

	UBioActiveUseArtPlaceable_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioReactive.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oOwner                         ( CPF_Parm )
// class AActor*                  oInstigator                    ( CPF_Parm )

void UBioReactive::Initialize ( class AActor* oOwner, class AActor* oInstigator )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57693 ];

	UBioReactive_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.oOwner = oOwner;
	Initialize_Parms.oInstigator = oInstigator;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioReactive.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioReactive::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 57692 ];

	UBioReactive_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioReactiveUseArtPlaceable.InitializeInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioReactiveUseArtPlaceable::InitializeInternal ( )
{
	static UFunction* pFnInitializeInternal = NULL;

	if ( ! pFnInitializeInternal )
		pFnInitializeInternal = (UFunction*) UObject::GObjObjects()->Data[ 57698 ];

	UBioReactiveUseArtPlaceable_execInitializeInternal_Parms InitializeInternal_Parms;

	pFnInitializeInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeInternal, &InitializeInternal_Parms, NULL );

	pFnInitializeInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSuperMode.ResetReticule
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSuperMode::ResetReticule ( )
{
	static UFunction* pFnResetReticule = NULL;

	if ( ! pFnResetReticule )
		pFnResetReticule = (UFunction*) UObject::GObjObjects()->Data[ 40881 ];

	UBioSuperMode_execResetReticule_Parms ResetReticule_Parms;

	pFnResetReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetReticule, &ResetReticule_Parms, NULL );

	pFnResetReticule->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorType.IsDisintegrationSuppressed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorType::IsDisintegrationSuppressed ( )
{
	static UFunction* pFnIsDisintegrationSuppressed = NULL;

	if ( ! pFnIsDisintegrationSuppressed )
		pFnIsDisintegrationSuppressed = (UFunction*) UObject::GObjObjects()->Data[ 44630 ];

	UBioActorType_execIsDisintegrationSuppressed_Parms IsDisintegrationSuppressed_Parms;

	pFnIsDisintegrationSuppressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDisintegrationSuppressed, &IsDisintegrationSuppressed_Parms, NULL );

	pFnIsDisintegrationSuppressed->FunctionFlags |= 0x400;

	return IsDisintegrationSuppressed_Parms.ReturnValue;
};

// Function SFXGame.BioActorType.IsPlotProtected
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorType::IsPlotProtected ( )
{
	static UFunction* pFnIsPlotProtected = NULL;

	if ( ! pFnIsPlotProtected )
		pFnIsPlotProtected = (UFunction*) UObject::GObjObjects()->Data[ 44628 ];

	UBioActorType_execIsPlotProtected_Parms IsPlotProtected_Parms;

	pFnIsPlotProtected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPlotProtected, &IsPlotProtected_Parms, NULL );

	pFnIsPlotProtected->FunctionFlags |= 0x400;

	return IsPlotProtected_Parms.ReturnValue;
};

// Function SFXGame.BioActorType.GetSquadName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioActorType::GetSquadName ( )
{
	static UFunction* pFnGetSquadName = NULL;

	if ( ! pFnGetSquadName )
		pFnGetSquadName = (UFunction*) UObject::GObjObjects()->Data[ 44626 ];

	UBioActorType_execGetSquadName_Parms GetSquadName_Parms;

	pFnGetSquadName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadName, &GetSquadName_Parms, NULL );

	pFnGetSquadName->FunctionFlags |= 0x400;

	return GetSquadName_Parms.ReturnValue;
};

// Function SFXGame.BioActorType.GetSquadIcon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsDead                        ( CPF_Parm )

int UBioActorType::GetSquadIcon ( unsigned long bIsDead )
{
	static UFunction* pFnGetSquadIcon = NULL;

	if ( ! pFnGetSquadIcon )
		pFnGetSquadIcon = (UFunction*) UObject::GObjObjects()->Data[ 44623 ];

	UBioActorType_execGetSquadIcon_Parms GetSquadIcon_Parms;
	GetSquadIcon_Parms.bIsDead = bIsDead;

	pFnGetSquadIcon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadIcon, &GetSquadIcon_Parms, NULL );

	pFnGetSquadIcon->FunctionFlags |= 0x400;

	return GetSquadIcon_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableType.ApplyRoleToBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioArtPlaceableBehavior* oBehave                        ( CPF_Parm )

void UBioArtPlaceableType::ApplyRoleToBehavior ( class UBioArtPlaceableBehavior* oBehave )
{
	static UFunction* pFnApplyRoleToBehavior = NULL;

	if ( ! pFnApplyRoleToBehavior )
		pFnApplyRoleToBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49223 ];

	UBioArtPlaceableType_execApplyRoleToBehavior_Parms ApplyRoleToBehavior_Parms;
	ApplyRoleToBehavior_Parms.oBehave = oBehave;

	pFnApplyRoleToBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyRoleToBehavior, &ApplyRoleToBehavior_Parms, NULL );

	pFnApplyRoleToBehavior->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableType.AllowRoleCustomization
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bYes                           ( CPF_Parm )

void UBioArtPlaceableType::AllowRoleCustomization ( unsigned long bYes )
{
	static UFunction* pFnAllowRoleCustomization = NULL;

	if ( ! pFnAllowRoleCustomization )
		pFnAllowRoleCustomization = (UFunction*) UObject::GObjObjects()->Data[ 49221 ];

	UBioArtPlaceableType_execAllowRoleCustomization_Parms AllowRoleCustomization_Parms;
	AllowRoleCustomization_Parms.bYes = bYes;

	pFnAllowRoleCustomization->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowRoleCustomization, &AllowRoleCustomization_Parms, NULL );

	pFnAllowRoleCustomization->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableType.ApplyRole
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nNewRole                       ( CPF_Parm )
// class UBioArtPlaceableBehavior* oBehave                        ( CPF_OptionalParm | CPF_Parm )

void UBioArtPlaceableType::ApplyRole ( int nNewRole, class UBioArtPlaceableBehavior* oBehave )
{
	static UFunction* pFnApplyRole = NULL;

	if ( ! pFnApplyRole )
		pFnApplyRole = (UFunction*) UObject::GObjObjects()->Data[ 49218 ];

	UBioArtPlaceableType_execApplyRole_Parms ApplyRole_Parms;
	ApplyRole_Parms.nNewRole = nNewRole;
	ApplyRole_Parms.oBehave = oBehave;

	pFnApplyRole->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyRole, &ApplyRole_Parms, NULL );

	pFnApplyRole->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnChallengeScaledType.GetBioPawnChallengeRank
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnChallengeScaledType::GetBioPawnChallengeRank ( )
{
	static UFunction* pFnGetBioPawnChallengeRank = NULL;

	if ( ! pFnGetBioPawnChallengeRank )
		pFnGetBioPawnChallengeRank = (UFunction*) UObject::GObjObjects()->Data[ 45494 ];

	UBioPawnChallengeScaledType_execGetBioPawnChallengeRank_Parms GetBioPawnChallengeRank_Parms;

	this->ProcessEvent ( pFnGetBioPawnChallengeRank, &GetBioPawnChallengeRank_Parms, NULL );

	return GetBioPawnChallengeRank_Parms.ReturnValue;
};

// Function SFXGame.BioPawnChallengeScaledType.ComputeRankedChallengeLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            effectiveChallengeLevel        ( CPF_Parm )

int UBioPawnChallengeScaledType::ComputeRankedChallengeLevel ( int effectiveChallengeLevel )
{
	static UFunction* pFnComputeRankedChallengeLevel = NULL;

	if ( ! pFnComputeRankedChallengeLevel )
		pFnComputeRankedChallengeLevel = (UFunction*) UObject::GObjObjects()->Data[ 47153 ];

	UBioPawnChallengeScaledType_execComputeRankedChallengeLevel_Parms ComputeRankedChallengeLevel_Parms;
	ComputeRankedChallengeLevel_Parms.effectiveChallengeLevel = effectiveChallengeLevel;

	pFnComputeRankedChallengeLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeRankedChallengeLevel, &ComputeRankedChallengeLevel_Parms, NULL );

	pFnComputeRankedChallengeLevel->FunctionFlags |= 0x400;

	return ComputeRankedChallengeLevel_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.IsTargetInFiringArc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )

bool ABioAiController::IsTargetInFiringArc ( class AActor* pTarget )
{
	static UFunction* pFnIsTargetInFiringArc = NULL;

	if ( ! pFnIsTargetInFiringArc )
		pFnIsTargetInFiringArc = (UFunction*) UObject::GObjObjects()->Data[ 44411 ];

	ABioAiController_execIsTargetInFiringArc_Parms IsTargetInFiringArc_Parms;
	IsTargetInFiringArc_Parms.pTarget = pTarget;

	pFnIsTargetInFiringArc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTargetInFiringArc, &IsTargetInFiringArc_Parms, NULL );

	pFnIsTargetInFiringArc->FunctionFlags |= 0x400;

	return IsTargetInFiringArc_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.HasLOSToTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )
// float                          fTimeOfHit                     ( CPF_Parm | CPF_OutParm )

bool ABioAiController::HasLOSToTarget ( class AActor* pTarget, float* fTimeOfHit )
{
	static UFunction* pFnHasLOSToTarget = NULL;

	if ( ! pFnHasLOSToTarget )
		pFnHasLOSToTarget = (UFunction*) UObject::GObjObjects()->Data[ 44407 ];

	ABioAiController_execHasLOSToTarget_Parms HasLOSToTarget_Parms;
	HasLOSToTarget_Parms.pTarget = pTarget;

	pFnHasLOSToTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasLOSToTarget, &HasLOSToTarget_Parms, NULL );

	pFnHasLOSToTarget->FunctionFlags |= 0x400;

	if ( fTimeOfHit )
		*fTimeOfHit = HasLOSToTarget_Parms.fTimeOfHit;

	return HasLOSToTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DoesGameModeAllowMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::DoesGameModeAllowMovement ( )
{
	static UFunction* pFnDoesGameModeAllowMovement = NULL;

	if ( ! pFnDoesGameModeAllowMovement )
		pFnDoesGameModeAllowMovement = (UFunction*) UObject::GObjObjects()->Data[ 44401 ];

	ABioAiController_execDoesGameModeAllowMovement_Parms DoesGameModeAllowMovement_Parms;

	this->ProcessEvent ( pFnDoesGameModeAllowMovement, &DoesGameModeAllowMovement_Parms, NULL );

	return DoesGameModeAllowMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ShouldCancelMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::ShouldCancelMove ( )
{
	static UFunction* pFnShouldCancelMove = NULL;

	if ( ! pFnShouldCancelMove )
		pFnShouldCancelMove = (UFunction*) UObject::GObjObjects()->Data[ 44399 ];

	ABioAiController_execShouldCancelMove_Parms ShouldCancelMove_Parms;

	this->ProcessEvent ( pFnShouldCancelMove, &ShouldCancelMove_Parms, NULL );

	return ShouldCancelMove_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 out_Location                   ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_Rotation                   ( CPF_Parm | CPF_OutParm )

void ABioAiController::eventGetPlayerViewPoint ( struct FVector* out_Location, struct FRotator* out_Rotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 44394 ];

	ABioAiController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( out_Location )
		memcpy ( out_Location, &GetPlayerViewPoint_Parms.out_Location, 0xC );

	if ( out_Rotation )
		memcpy ( out_Rotation, &GetPlayerViewPoint_Parms.out_Rotation, 0xC );
};

// Function SFXGame.BioAiController.GetAdjustedAimFor
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ABioAiController::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 44382 ];

	ABioAiController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetAimLocation
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimLocation                    ( CPF_Parm | CPF_OutParm )

bool ABioAiController::GetAimLocation ( struct FVector* AimLocation )
{
	static UFunction* pFnGetAimLocation = NULL;

	if ( ! pFnGetAimLocation )
		pFnGetAimLocation = (UFunction*) UObject::GObjObjects()->Data[ 44372 ];

	ABioAiController_execGetAimLocation_Parms GetAimLocation_Parms;

	this->ProcessEvent ( pFnGetAimLocation, &GetAimLocation_Parms, NULL );

	if ( AimLocation )
		memcpy ( AimLocation, &GetAimLocation_Parms.AimLocation, 0xC );

	return GetAimLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.UnPossess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventUnPossess ( )
{
	static UFunction* pFnUnPossess = NULL;

	if ( ! pFnUnPossess )
		pFnUnPossess = (UFunction*) UObject::GObjObjects()->Data[ 44371 ];

	ABioAiController_eventUnPossess_Parms UnPossess_Parms;

	this->ProcessEvent ( pFnUnPossess, &UnPossess_Parms, NULL );
};

// Function SFXGame.BioAiController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ABioAiController::eventPossess ( class APawn* NewPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 44367 ];

	ABioAiController_eventPossess_Parms Possess_Parms;
	Possess_Parms.NewPawn = NewPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function SFXGame.BioAiController.AILog_Internal
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 LogText                        ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// struct FName                   LogCategory                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::eventAILog_Internal ( struct FString LogText, struct FName LogCategory, unsigned long bForce )
{
	static UFunction* pFnAILog_Internal = NULL;

	if ( ! pFnAILog_Internal )
		pFnAILog_Internal = (UFunction*) UObject::GObjObjects()->Data[ 42892 ];

	ABioAiController_eventAILog_Internal_Parms AILog_Internal_Parms;
	memcpy ( &AILog_Internal_Parms.LogText, &LogText, 0x10 );
	memcpy ( &AILog_Internal_Parms.LogCategory, &LogCategory, 0x8 );
	AILog_Internal_Parms.bForce = bForce;

	this->ProcessEvent ( pFnAILog_Internal, &AILog_Internal_Parms, NULL );
};

// Function SFXGame.BioAiController.Initialize
// [0x00020000] 
// Parameters infos:

void ABioAiController::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 44360 ];

	ABioAiController_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAiController.OnHacked
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventOnHacked ( )
{
	static UFunction* pFnOnHacked = NULL;

	if ( ! pFnOnHacked )
		pFnOnHacked = (UFunction*) UObject::GObjObjects()->Data[ 44359 ];

	ABioAiController_eventOnHacked_Parms OnHacked_Parms;

	this->ProcessEvent ( pFnOnHacked, &OnHacked_Parms, NULL );
};

// Function SFXGame.BioAiController.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioAiController::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 44355 ];

	ABioAiController_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioAiController.OnSquadSeen
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oSquad                         ( CPF_Parm )

void ABioAiController::eventOnSquadSeen ( class AActor* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 44353 ];

	ABioAiController_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioAiController.OnActionComplete_Movement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioAiController::eventOnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 44347 ];

	ABioAiController_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioAiController.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioAiController::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 44341 ];

	ABioAiController_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioAiController.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAiController::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 44337 ];

	ABioAiController_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAiController.OnCastAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioAiController::eventOnCastAt ( class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 44333 ];

	ABioAiController_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioAiController.OnAttacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioAiController::eventOnAttacked ( class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 44329 ];

	ABioAiController_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioAiController.OnAbilityDisabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAiController::eventOnAbilityDisabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityDisabled = NULL;

	if ( ! pFnOnAbilityDisabled )
		pFnOnAbilityDisabled = (UFunction*) UObject::GObjObjects()->Data[ 44325 ];

	ABioAiController_eventOnAbilityDisabled_Parms OnAbilityDisabled_Parms;
	OnAbilityDisabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityDisabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityDisabled, &OnAbilityDisabled_Parms, NULL );
};

// Function SFXGame.BioAiController.OnAbilityEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAiController::eventOnAbilityEnabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityEnabled = NULL;

	if ( ! pFnOnAbilityEnabled )
		pFnOnAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 44321 ];

	ABioAiController_eventOnAbilityEnabled_Parms OnAbilityEnabled_Parms;
	OnAbilityEnabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityEnabled, &OnAbilityEnabled_Parms, NULL );
};

// Function SFXGame.BioAiController.OnNoCombatAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventOnNoCombatAction ( )
{
	static UFunction* pFnOnNoCombatAction = NULL;

	if ( ! pFnOnNoCombatAction )
		pFnOnNoCombatAction = (UFunction*) UObject::GObjObjects()->Data[ 44319 ];

	ABioAiController_eventOnNoCombatAction_Parms OnNoCombatAction_Parms;

	this->ProcessEvent ( pFnOnNoCombatAction, &OnNoCombatAction_Parms, NULL );
};

// Function SFXGame.BioAiController.OnDeath
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oKiller                        ( CPF_Parm )

void ABioAiController::eventOnDeath ( class AController* oKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 44316 ];

	ABioAiController_eventOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioAiController.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioAiController::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 44313 ];

	ABioAiController_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUseSteeringMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUseSteeringMovement ( )
{
	static UFunction* pFnCanUseSteeringMovement = NULL;

	if ( ! pFnCanUseSteeringMovement )
		pFnCanUseSteeringMovement = (UFunction*) UObject::GObjObjects()->Data[ 44307 ];

	ABioAiController_execCanUseSteeringMovement_Parms CanUseSteeringMovement_Parms;

	this->ProcessEvent ( pFnCanUseSteeringMovement, &CanUseSteeringMovement_Parms, NULL );

	return CanUseSteeringMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PostPollMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventPostPollMove ( )
{
	static UFunction* pFnPostPollMove = NULL;

	if ( ! pFnPostPollMove )
		pFnPostPollMove = (UFunction*) UObject::GObjObjects()->Data[ 44305 ];

	ABioAiController_eventPostPollMove_Parms PostPollMove_Parms;

	this->ProcessEvent ( pFnPostPollMove, &PostPollMove_Parms, NULL );
};

// Function SFXGame.BioAiController.CanMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::eventCanMount ( )
{
	static UFunction* pFnCanMount = NULL;

	if ( ! pFnCanMount )
		pFnCanMount = (UFunction*) UObject::GObjObjects()->Data[ 44302 ];

	ABioAiController_eventCanMount_Parms CanMount_Parms;

	this->ProcessEvent ( pFnCanMount, &CanMount_Parms, NULL );

	return CanMount_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DoneWeaponSelection
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Weapon                         ( CPF_Parm )

void ABioAiController::eventDoneWeaponSelection ( unsigned char Weapon )
{
	static UFunction* pFnDoneWeaponSelection = NULL;

	if ( ! pFnDoneWeaponSelection )
		pFnDoneWeaponSelection = (UFunction*) UObject::GObjObjects()->Data[ 44300 ];

	ABioAiController_eventDoneWeaponSelection_Parms DoneWeaponSelection_Parms;
	DoneWeaponSelection_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnDoneWeaponSelection, &DoneWeaponSelection_Parms, NULL );
};

// Function SFXGame.BioAiController.DoneGrenadeThrow
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventDoneGrenadeThrow ( )
{
	static UFunction* pFnDoneGrenadeThrow = NULL;

	if ( ! pFnDoneGrenadeThrow )
		pFnDoneGrenadeThrow = (UFunction*) UObject::GObjObjects()->Data[ 44299 ];

	ABioAiController_eventDoneGrenadeThrow_Parms DoneGrenadeThrow_Parms;

	this->ProcessEvent ( pFnDoneGrenadeThrow, &DoneGrenadeThrow_Parms, NULL );
};

// Function SFXGame.BioAiController.CanPullTrigger
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vTargetLocation                ( CPF_Parm )

bool ABioAiController::eventCanPullTrigger ( float fDeltaT, class AActor* oTarget, struct FVector vTargetLocation )
{
	static UFunction* pFnCanPullTrigger = NULL;

	if ( ! pFnCanPullTrigger )
		pFnCanPullTrigger = (UFunction*) UObject::GObjObjects()->Data[ 44294 ];

	ABioAiController_eventCanPullTrigger_Parms CanPullTrigger_Parms;
	CanPullTrigger_Parms.fDeltaT = fDeltaT;
	CanPullTrigger_Parms.oTarget = oTarget;
	memcpy ( &CanPullTrigger_Parms.vTargetLocation, &vTargetLocation, 0xC );

	this->ProcessEvent ( pFnCanPullTrigger, &CanPullTrigger_Parms, NULL );

	return CanPullTrigger_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.FiringPullTrigger
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventFiringPullTrigger ( )
{
	static UFunction* pFnFiringPullTrigger = NULL;

	if ( ! pFnFiringPullTrigger )
		pFnFiringPullTrigger = (UFunction*) UObject::GObjObjects()->Data[ 44293 ];

	ABioAiController_eventFiringPullTrigger_Parms FiringPullTrigger_Parms;

	this->ProcessEvent ( pFnFiringPullTrigger, &FiringPullTrigger_Parms, NULL );
};

// Function SFXGame.BioAiController.ActionComplete_None
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   Action                         ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )

void ABioAiController::eventActionComplete_None ( struct FName Action, int nReason )
{
	static UFunction* pFnActionComplete_None = NULL;

	if ( ! pFnActionComplete_None )
		pFnActionComplete_None = (UFunction*) UObject::GObjObjects()->Data[ 44290 ];

	ABioAiController_eventActionComplete_None_Parms ActionComplete_None_Parms;
	memcpy ( &ActionComplete_None_Parms.Action, &Action, 0x8 );
	ActionComplete_None_Parms.nReason = nReason;

	this->ProcessEvent ( pFnActionComplete_None, &ActionComplete_None_Parms, NULL );
};

// Function SFXGame.BioAiController.HearNoise
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 44285 ];

	ABioAiController_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioAiController.NotifyCoverDisabled
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Link                           ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )
// unsigned long                  bAdjacentIdx                   ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::eventNotifyCoverDisabled ( class AActor* Link, int SlotIdx, unsigned long bAdjacentIdx )
{
	static UFunction* pFnNotifyCoverDisabled = NULL;

	if ( ! pFnNotifyCoverDisabled )
		pFnNotifyCoverDisabled = (UFunction*) UObject::GObjObjects()->Data[ 44187 ];

	ABioAiController_eventNotifyCoverDisabled_Parms NotifyCoverDisabled_Parms;
	NotifyCoverDisabled_Parms.Link = Link;
	NotifyCoverDisabled_Parms.SlotIdx = SlotIdx;
	NotifyCoverDisabled_Parms.bAdjacentIdx = bAdjacentIdx;

	this->ProcessEvent ( pFnNotifyCoverDisabled, &NotifyCoverDisabled_Parms, NULL );
};

// Function SFXGame.BioAiController.CancelCover
// [0x00024002] 
// Parameters infos:
// int                            nReason                        ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::CancelCover ( int nReason )
{
	static UFunction* pFnCancelCover = NULL;

	if ( ! pFnCancelCover )
		pFnCancelCover = (UFunction*) UObject::GObjObjects()->Data[ 44183 ];

	ABioAiController_execCancelCover_Parms CancelCover_Parms;
	CancelCover_Parms.nReason = nReason;

	this->ProcessEvent ( pFnCancelCover, &CancelCover_Parms, NULL );
};

// Function SFXGame.BioAiController.IsEngagedWithCover
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::eventIsEngagedWithCover ( )
{
	static UFunction* pFnIsEngagedWithCover = NULL;

	if ( ! pFnIsEngagedWithCover )
		pFnIsEngagedWithCover = (UFunction*) UObject::GObjObjects()->Data[ 44179 ];

	ABioAiController_eventIsEngagedWithCover_Parms IsEngagedWithCover_Parms;

	this->ProcessEvent ( pFnIsEngagedWithCover, &IsEngagedWithCover_Parms, NULL );

	return IsEngagedWithCover_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.IsTakingCover
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::IsTakingCover ( )
{
	static UFunction* pFnIsTakingCover = NULL;

	if ( ! pFnIsTakingCover )
		pFnIsTakingCover = (UFunction*) UObject::GObjObjects()->Data[ 44176 ];

	ABioAiController_execIsTakingCover_Parms IsTakingCover_Parms;

	this->ProcessEvent ( pFnIsTakingCover, &IsTakingCover_Parms, NULL );

	return IsTakingCover_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.OnDisengageWithCover
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oCoverObj                      ( CPF_Parm )

void ABioAiController::eventOnDisengageWithCover ( class AActor* oCoverObj )
{
	static UFunction* pFnOnDisengageWithCover = NULL;

	if ( ! pFnOnDisengageWithCover )
		pFnOnDisengageWithCover = (UFunction*) UObject::GObjObjects()->Data[ 44174 ];

	ABioAiController_eventOnDisengageWithCover_Parms OnDisengageWithCover_Parms;
	OnDisengageWithCover_Parms.oCoverObj = oCoverObj;

	this->ProcessEvent ( pFnOnDisengageWithCover, &OnDisengageWithCover_Parms, NULL );
};

// Function SFXGame.BioAiController.OnEngagedWithCover
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oCoverObj                      ( CPF_Parm )

void ABioAiController::eventOnEngagedWithCover ( class AActor* oCoverObj )
{
	static UFunction* pFnOnEngagedWithCover = NULL;

	if ( ! pFnOnEngagedWithCover )
		pFnOnEngagedWithCover = (UFunction*) UObject::GObjObjects()->Data[ 44172 ];

	ABioAiController_eventOnEngagedWithCover_Parms OnEngagedWithCover_Parms;
	OnEngagedWithCover_Parms.oCoverObj = oCoverObj;

	this->ProcessEvent ( pFnOnEngagedWithCover, &OnEngagedWithCover_Parms, NULL );
};

// Function SFXGame.BioAiController.FindNearestOpenLocation
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vStartLocation                 ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vFoundLocation                 ( CPF_Parm | CPF_OutParm )

bool ABioAiController::FindNearestOpenLocation ( struct FVector vStartLocation, class APawn* oTarget, struct FVector* vFoundLocation )
{
	static UFunction* pFnFindNearestOpenLocation = NULL;

	if ( ! pFnFindNearestOpenLocation )
		pFnFindNearestOpenLocation = (UFunction*) UObject::GObjObjects()->Data[ 44130 ];

	ABioAiController_execFindNearestOpenLocation_Parms FindNearestOpenLocation_Parms;
	memcpy ( &FindNearestOpenLocation_Parms.vStartLocation, &vStartLocation, 0xC );
	FindNearestOpenLocation_Parms.oTarget = oTarget;

	pFnFindNearestOpenLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindNearestOpenLocation, &FindNearestOpenLocation_Parms, NULL );

	pFnFindNearestOpenLocation->FunctionFlags |= 0x400;

	if ( vFoundLocation )
		memcpy ( vFoundLocation, &FindNearestOpenLocation_Parms.vFoundLocation, 0xC );

	return FindNearestOpenLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.LeaderCanITeleport
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vOldLocation                   ( CPF_Parm )
// struct FVector                 vNewLocation                   ( CPF_Parm )

bool ABioAiController::LeaderCanITeleport ( struct FVector vOldLocation, struct FVector vNewLocation )
{
	static UFunction* pFnLeaderCanITeleport = NULL;

	if ( ! pFnLeaderCanITeleport )
		pFnLeaderCanITeleport = (UFunction*) UObject::GObjObjects()->Data[ 44125 ];

	ABioAiController_execLeaderCanITeleport_Parms LeaderCanITeleport_Parms;
	memcpy ( &LeaderCanITeleport_Parms.vOldLocation, &vOldLocation, 0xC );
	memcpy ( &LeaderCanITeleport_Parms.vNewLocation, &vNewLocation, 0xC );

	this->ProcessEvent ( pFnLeaderCanITeleport, &LeaderCanITeleport_Parms, NULL );

	return LeaderCanITeleport_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.HandleTeleport
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )
// unsigned long                  bFindNearestOpenLocation       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForceTeleport                 ( CPF_OptionalParm | CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::HandleTeleport ( struct FVector vLoc, unsigned long bFindNearestOpenLocation, unsigned long bForceTeleport, class APawn* oTarget )
{
	static UFunction* pFnHandleTeleport = NULL;

	if ( ! pFnHandleTeleport )
		pFnHandleTeleport = (UFunction*) UObject::GObjObjects()->Data[ 44110 ];

	ABioAiController_execHandleTeleport_Parms HandleTeleport_Parms;
	memcpy ( &HandleTeleport_Parms.vLoc, &vLoc, 0xC );
	HandleTeleport_Parms.bFindNearestOpenLocation = bFindNearestOpenLocation;
	HandleTeleport_Parms.bForceTeleport = bForceTeleport;
	HandleTeleport_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnHandleTeleport, &HandleTeleport_Parms, NULL );

	return HandleTeleport_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.TeleportToLeader
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DistanceBack                   ( CPF_Parm )

bool ABioAiController::TeleportToLeader ( float DistanceBack )
{
	static UFunction* pFnTeleportToLeader = NULL;

	if ( ! pFnTeleportToLeader )
		pFnTeleportToLeader = (UFunction*) UObject::GObjObjects()->Data[ 44101 ];

	ABioAiController_execTeleportToLeader_Parms TeleportToLeader_Parms;
	TeleportToLeader_Parms.DistanceBack = DistanceBack;

	this->ProcessEvent ( pFnTeleportToLeader, &TeleportToLeader_Parms, NULL );

	return TeleportToLeader_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.EndRestFormation
// [0x00020000] 
// Parameters infos:

void ABioAiController::EndRestFormation ( )
{
	static UFunction* pFnEndRestFormation = NULL;

	if ( ! pFnEndRestFormation )
		pFnEndRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 44100 ];

	ABioAiController_execEndRestFormation_Parms EndRestFormation_Parms;

	this->ProcessEvent ( pFnEndRestFormation, &EndRestFormation_Parms, NULL );
};

// Function SFXGame.BioAiController.BeginRestFormation
// [0x00020000] 
// Parameters infos:

void ABioAiController::BeginRestFormation ( )
{
	static UFunction* pFnBeginRestFormation = NULL;

	if ( ! pFnBeginRestFormation )
		pFnBeginRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 44099 ];

	ABioAiController_execBeginRestFormation_Parms BeginRestFormation_Parms;

	this->ProcessEvent ( pFnBeginRestFormation, &BeginRestFormation_Parms, NULL );
};

// Function SFXGame.BioAiController.GetLastObjectInRouteCache
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oMoveTarget                    ( CPF_Parm )

class AActor* ABioAiController::GetLastObjectInRouteCache ( class AActor* oMoveTarget )
{
	static UFunction* pFnGetLastObjectInRouteCache = NULL;

	if ( ! pFnGetLastObjectInRouteCache )
		pFnGetLastObjectInRouteCache = (UFunction*) UObject::GObjObjects()->Data[ 43951 ];

	ABioAiController_execGetLastObjectInRouteCache_Parms GetLastObjectInRouteCache_Parms;
	GetLastObjectInRouteCache_Parms.oMoveTarget = oMoveTarget;

	this->ProcessEvent ( pFnGetLastObjectInRouteCache, &GetLastObjectInRouteCache_Parms, NULL );

	return GetLastObjectInRouteCache_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetNextPathNode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ABioAiController::GetNextPathNode ( )
{
	static UFunction* pFnGetNextPathNode = NULL;

	if ( ! pFnGetNextPathNode )
		pFnGetNextPathNode = (UFunction*) UObject::GObjObjects()->Data[ 43912 ];

	ABioAiController_execGetNextPathNode_Parms GetNextPathNode_Parms;

	this->ProcessEvent ( pFnGetNextPathNode, &GetNextPathNode_Parms, NULL );

	return GetNextPathNode_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ClearRouteCache
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioAiController::ClearRouteCache ( )
{
	static UFunction* pFnClearRouteCache = NULL;

	if ( ! pFnClearRouteCache )
		pFnClearRouteCache = (UFunction*) UObject::GObjObjects()->Data[ 43875 ];

	ABioAiController_execClearRouteCache_Parms ClearRouteCache_Parms;

	this->ProcessEvent ( pFnClearRouteCache, &ClearRouteCache_Parms, NULL );
};

// Function SFXGame.BioAiController.DropRouteCache
// [0x00020002] 
// Parameters infos:

void ABioAiController::DropRouteCache ( )
{
	static UFunction* pFnDropRouteCache = NULL;

	if ( ! pFnDropRouteCache )
		pFnDropRouteCache = (UFunction*) UObject::GObjObjects()->Data[ 44082 ];

	ABioAiController_execDropRouteCache_Parms DropRouteCache_Parms;

	this->ProcessEvent ( pFnDropRouteCache, &DropRouteCache_Parms, NULL );
};

// Function SFXGame.BioAiController.UpdateFollowerMarkerPosition
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            SquadId                        ( CPF_Parm )

void ABioAiController::eventUpdateFollowerMarkerPosition ( int SquadId )
{
	static UFunction* pFnUpdateFollowerMarkerPosition = NULL;

	if ( ! pFnUpdateFollowerMarkerPosition )
		pFnUpdateFollowerMarkerPosition = (UFunction*) UObject::GObjObjects()->Data[ 44080 ];

	ABioAiController_eventUpdateFollowerMarkerPosition_Parms UpdateFollowerMarkerPosition_Parms;
	UpdateFollowerMarkerPosition_Parms.SquadId = SquadId;

	this->ProcessEvent ( pFnUpdateFollowerMarkerPosition, &UpdateFollowerMarkerPosition_Parms, NULL );
};

// Function SFXGame.BioAiController.IsAttackTargetValid
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oAttackTarget                  ( CPF_Parm )
// unsigned long                  bTestShooting                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTestExposed                   ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::IsAttackTargetValid ( class APawn* oAttackTarget, unsigned long bTestShooting, unsigned long bTestExposed )
{
	static UFunction* pFnIsAttackTargetValid = NULL;

	if ( ! pFnIsAttackTargetValid )
		pFnIsAttackTargetValid = (UFunction*) UObject::GObjObjects()->Data[ 42912 ];

	ABioAiController_execIsAttackTargetValid_Parms IsAttackTargetValid_Parms;
	IsAttackTargetValid_Parms.oAttackTarget = oAttackTarget;
	IsAttackTargetValid_Parms.bTestShooting = bTestShooting;
	IsAttackTargetValid_Parms.bTestExposed = bTestExposed;

	this->ProcessEvent ( pFnIsAttackTargetValid, &IsAttackTargetValid_Parms, NULL );

	return IsAttackTargetValid_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.HandleSteeringMovementFailed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::HandleSteeringMovementFailed ( )
{
	static UFunction* pFnHandleSteeringMovementFailed = NULL;

	if ( ! pFnHandleSteeringMovementFailed )
		pFnHandleSteeringMovementFailed = (UFunction*) UObject::GObjObjects()->Data[ 44075 ];

	ABioAiController_execHandleSteeringMovementFailed_Parms HandleSteeringMovementFailed_Parms;

	this->ProcessEvent ( pFnHandleSteeringMovementFailed, &HandleSteeringMovementFailed_Parms, NULL );

	return HandleSteeringMovementFailed_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetMoveOffset
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioAiController::GetMoveOffset ( )
{
	static UFunction* pFnGetMoveOffset = NULL;

	if ( ! pFnGetMoveOffset )
		pFnGetMoveOffset = (UFunction*) UObject::GObjObjects()->Data[ 44072 ];

	ABioAiController_execGetMoveOffset_Parms GetMoveOffset_Parms;

	this->ProcessEvent ( pFnGetMoveOffset, &GetMoveOffset_Parms, NULL );

	return GetMoveOffset_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetFollowTargets
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oFollow                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 vMoveTo                        ( CPF_Parm | CPF_OutParm )

void ABioAiController::eventGetFollowTargets ( class APawn** oFollow, struct FVector* vMoveTo )
{
	static UFunction* pFnGetFollowTargets = NULL;

	if ( ! pFnGetFollowTargets )
		pFnGetFollowTargets = (UFunction*) UObject::GObjObjects()->Data[ 44069 ];

	ABioAiController_eventGetFollowTargets_Parms GetFollowTargets_Parms;

	this->ProcessEvent ( pFnGetFollowTargets, &GetFollowTargets_Parms, NULL );

	if ( oFollow )
		*oFollow = GetFollowTargets_Parms.oFollow;

	if ( vMoveTo )
		memcpy ( vMoveTo, &GetFollowTargets_Parms.vMoveTo, 0xC );
};

// Function SFXGame.BioAiController.LeaderChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   OldLeader                      ( CPF_Parm )
// class APawn*                   NewLeader                      ( CPF_Parm )

void ABioAiController::eventLeaderChanged ( class APawn* OldLeader, class APawn* NewLeader )
{
	static UFunction* pFnLeaderChanged = NULL;

	if ( ! pFnLeaderChanged )
		pFnLeaderChanged = (UFunction*) UObject::GObjObjects()->Data[ 44066 ];

	ABioAiController_eventLeaderChanged_Parms LeaderChanged_Parms;
	LeaderChanged_Parms.OldLeader = OldLeader;
	LeaderChanged_Parms.NewLeader = NewLeader;

	this->ProcessEvent ( pFnLeaderChanged, &LeaderChanged_Parms, NULL );
};

// Function SFXGame.BioAiController.ComputeGroundLevel
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  drawFail                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  drawSussess                    ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vPoint                         ( CPF_Parm | CPF_OutParm )

bool ABioAiController::ComputeGroundLevel ( unsigned long drawFail, unsigned long drawSussess, struct FVector* vPoint )
{
	static UFunction* pFnComputeGroundLevel = NULL;

	if ( ! pFnComputeGroundLevel )
		pFnComputeGroundLevel = (UFunction*) UObject::GObjObjects()->Data[ 44056 ];

	ABioAiController_execComputeGroundLevel_Parms ComputeGroundLevel_Parms;
	ComputeGroundLevel_Parms.drawFail = drawFail;
	ComputeGroundLevel_Parms.drawSussess = drawSussess;

	this->ProcessEvent ( pFnComputeGroundLevel, &ComputeGroundLevel_Parms, NULL );

	if ( vPoint )
		memcpy ( vPoint, &ComputeGroundLevel_Parms.vPoint, 0xC );

	return ComputeGroundLevel_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DebugGroundHeight
// [0x00020002] 
// Parameters infos:
// struct FVector                 vLoc                           ( CPF_Parm )

void ABioAiController::DebugGroundHeight ( struct FVector vLoc )
{
	static UFunction* pFnDebugGroundHeight = NULL;

	if ( ! pFnDebugGroundHeight )
		pFnDebugGroundHeight = (UFunction*) UObject::GObjObjects()->Data[ 43914 ];

	ABioAiController_execDebugGroundHeight_Parms DebugGroundHeight_Parms;
	memcpy ( &DebugGroundHeight_Parms.vLoc, &vLoc, 0xC );

	this->ProcessEvent ( pFnDebugGroundHeight, &DebugGroundHeight_Parms, NULL );
};

// Function SFXGame.BioAiController.IsControllerPaused
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::eventIsControllerPaused ( )
{
	static UFunction* pFnIsControllerPaused = NULL;

	if ( ! pFnIsControllerPaused )
		pFnIsControllerPaused = (UFunction*) UObject::GObjObjects()->Data[ 43878 ];

	ABioAiController_eventIsControllerPaused_Parms IsControllerPaused_Parms;

	this->ProcessEvent ( pFnIsControllerPaused, &IsControllerPaused_Parms, NULL );

	return IsControllerPaused_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.UnPauseController
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventUnPauseController ( )
{
	static UFunction* pFnUnPauseController = NULL;

	if ( ! pFnUnPauseController )
		pFnUnPauseController = (UFunction*) UObject::GObjObjects()->Data[ 43877 ];

	ABioAiController_eventUnPauseController_Parms UnPauseController_Parms;

	this->ProcessEvent ( pFnUnPauseController, &UnPauseController_Parms, NULL );
};

// Function SFXGame.BioAiController.PauseController
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventPauseController ( )
{
	static UFunction* pFnPauseController = NULL;

	if ( ! pFnPauseController )
		pFnPauseController = (UFunction*) UObject::GObjObjects()->Data[ 43873 ];

	ABioAiController_eventPauseController_Parms PauseController_Parms;

	this->ProcessEvent ( pFnPauseController, &PauseController_Parms, NULL );
};

// Function SFXGame.BioAiController.ClearSomeActions_Queue
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sClearLabel                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ABioAiController::eventClearSomeActions_Queue ( struct FString sClearLabel )
{
	static UFunction* pFnClearSomeActions_Queue = NULL;

	if ( ! pFnClearSomeActions_Queue )
		pFnClearSomeActions_Queue = (UFunction*) UObject::GObjObjects()->Data[ 43855 ];

	ABioAiController_eventClearSomeActions_Queue_Parms ClearSomeActions_Queue_Parms;
	memcpy ( &ClearSomeActions_Queue_Parms.sClearLabel, &sClearLabel, 0x10 );

	this->ProcessEvent ( pFnClearSomeActions_Queue, &ClearSomeActions_Queue_Parms, NULL );
};

// Function SFXGame.BioAiController.ClearSomeActions_State
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sClearLabel                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ABioAiController::eventClearSomeActions_State ( struct FString sClearLabel )
{
	static UFunction* pFnClearSomeActions_State = NULL;

	if ( ! pFnClearSomeActions_State )
		pFnClearSomeActions_State = (UFunction*) UObject::GObjObjects()->Data[ 43852 ];

	ABioAiController_eventClearSomeActions_State_Parms ClearSomeActions_State_Parms;
	memcpy ( &ClearSomeActions_State_Parms.sClearLabel, &sClearLabel, 0x10 );

	this->ProcessEvent ( pFnClearSomeActions_State, &ClearSomeActions_State_Parms, NULL );
};

// Function SFXGame.BioAiController.ClearAllActions
// [0x00024002] 
// Parameters infos:
// struct FString                 sClearLabel                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ABioAiController::ClearAllActions ( struct FString sClearLabel )
{
	static UFunction* pFnClearAllActions = NULL;

	if ( ! pFnClearAllActions )
		pFnClearAllActions = (UFunction*) UObject::GObjObjects()->Data[ 43850 ];

	ABioAiController_execClearAllActions_Parms ClearAllActions_Parms;
	memcpy ( &ClearAllActions_Parms.sClearLabel, &sClearLabel, 0x10 );

	this->ProcessEvent ( pFnClearAllActions, &ClearAllActions_Parms, NULL );
};

// Function SFXGame.BioAiController.AdjustFocus
// [0x00020000] 
// Parameters infos:

void ABioAiController::AdjustFocus ( )
{
	static UFunction* pFnAdjustFocus = NULL;

	if ( ! pFnAdjustFocus )
		pFnAdjustFocus = (UFunction*) UObject::GObjObjects()->Data[ 43849 ];

	ABioAiController_execAdjustFocus_Parms AdjustFocus_Parms;

	this->ProcessEvent ( pFnAdjustFocus, &AdjustFocus_Parms, NULL );
};

// Function SFXGame.BioAiController.AdjustGroundSpeed
// [0x00020002] 
// Parameters infos:

void ABioAiController::AdjustGroundSpeed ( )
{
	static UFunction* pFnAdjustGroundSpeed = NULL;

	if ( ! pFnAdjustGroundSpeed )
		pFnAdjustGroundSpeed = (UFunction*) UObject::GObjObjects()->Data[ 43847 ];

	ABioAiController_execAdjustGroundSpeed_Parms AdjustGroundSpeed_Parms;

	this->ProcessEvent ( pFnAdjustGroundSpeed, &AdjustGroundSpeed_Parms, NULL );
};

// Function SFXGame.BioAiController.OnCancelAction
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventOnCancelAction ( )
{
	static UFunction* pFnOnCancelAction = NULL;

	if ( ! pFnOnCancelAction )
		pFnOnCancelAction = (UFunction*) UObject::GObjObjects()->Data[ 43846 ];

	ABioAiController_eventOnCancelAction_Parms OnCancelAction_Parms;

	this->ProcessEvent ( pFnOnCancelAction, &OnCancelAction_Parms, NULL );
};

// Function SFXGame.BioAiController.RestoreAI
// [0x00020002] 
// Parameters infos:

void ABioAiController::RestoreAI ( )
{
	static UFunction* pFnRestoreAI = NULL;

	if ( ! pFnRestoreAI )
		pFnRestoreAI = (UFunction*) UObject::GObjObjects()->Data[ 43844 ];

	ABioAiController_execRestoreAI_Parms RestoreAI_Parms;

	this->ProcessEvent ( pFnRestoreAI, &RestoreAI_Parms, NULL );
};

// Function SFXGame.BioAiController.ChangeAI
// [0x00024002] 
// Parameters infos:
// class UClass*                  NewAIClass                     ( CPF_Parm )
// unsigned long                  bCacheOldController            ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::ChangeAI ( class UClass* NewAIClass, unsigned long bCacheOldController )
{
	static UFunction* pFnChangeAI = NULL;

	if ( ! pFnChangeAI )
		pFnChangeAI = (UFunction*) UObject::GObjObjects()->Data[ 43837 ];

	ABioAiController_execChangeAI_Parms ChangeAI_Parms;
	ChangeAI_Parms.NewAIClass = NewAIClass;
	ChangeAI_Parms.bCacheOldController = bCacheOldController;

	this->ProcessEvent ( pFnChangeAI, &ChangeAI_Parms, NULL );
};

// Function SFXGame.BioAiController.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 43836 ];

	ABioAiController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioAiController.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioAiController::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 43831 ];

	ABioAiController_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioAiController.PlayerActivate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target_                        ( CPF_Parm )

bool ABioAiController::eventPlayerActivate ( class AActor* Target_ )
{
	static UFunction* pFnPlayerActivate = NULL;

	if ( ! pFnPlayerActivate )
		pFnPlayerActivate = (UFunction*) UObject::GObjObjects()->Data[ 43824 ];

	ABioAiController_eventPlayerActivate_Parms PlayerActivate_Parms;
	PlayerActivate_Parms.Target_ = Target_;

	this->ProcessEvent ( pFnPlayerActivate, &PlayerActivate_Parms, NULL );

	return PlayerActivate_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddMoveToTag
// [0x00024002] 
// Parameters infos:
// struct FName                   MoveToTag                      ( CPF_Parm )
// float                          PointTolerance                 ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bHead                          ( CPF_OptionalParm | CPF_Parm )

void ABioAiController::AddMoveToTag ( struct FName MoveToTag, float PointTolerance, unsigned long bWalking, unsigned long bHead )
{
	static UFunction* pFnAddMoveToTag = NULL;

	if ( ! pFnAddMoveToTag )
		pFnAddMoveToTag = (UFunction*) UObject::GObjObjects()->Data[ 43818 ];

	ABioAiController_execAddMoveToTag_Parms AddMoveToTag_Parms;
	memcpy ( &AddMoveToTag_Parms.MoveToTag, &MoveToTag, 0x8 );
	AddMoveToTag_Parms.PointTolerance = PointTolerance;
	AddMoveToTag_Parms.bWalking = bWalking;
	AddMoveToTag_Parms.bHead = bHead;

	this->ProcessEvent ( pFnAddMoveToTag, &AddMoveToTag_Parms, NULL );
};

// Function SFXGame.BioAiController.IsMetaActionInProgress
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::IsMetaActionInProgress ( )
{
	static UFunction* pFnIsMetaActionInProgress = NULL;

	if ( ! pFnIsMetaActionInProgress )
		pFnIsMetaActionInProgress = (UFunction*) UObject::GObjObjects()->Data[ 43816 ];

	ABioAiController_execIsMetaActionInProgress_Parms IsMetaActionInProgress_Parms;

	this->ProcessEvent ( pFnIsMetaActionInProgress, &IsMetaActionInProgress_Parms, NULL );

	return IsMetaActionInProgress_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.NotifyBump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ABioAiController::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 43812 ];

	ABioAiController_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetNextPredictedMoveLocation
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 out_vLoc                       ( CPF_Parm | CPF_OutParm )

bool ABioAiController::eventGetNextPredictedMoveLocation ( struct FVector* out_vLoc )
{
	static UFunction* pFnGetNextPredictedMoveLocation = NULL;

	if ( ! pFnGetNextPredictedMoveLocation )
		pFnGetNextPredictedMoveLocation = (UFunction*) UObject::GObjObjects()->Data[ 43809 ];

	ABioAiController_eventGetNextPredictedMoveLocation_Parms GetNextPredictedMoveLocation_Parms;

	this->ProcessEvent ( pFnGetNextPredictedMoveLocation, &GetNextPredictedMoveLocation_Parms, NULL );

	if ( out_vLoc )
		memcpy ( out_vLoc, &GetNextPredictedMoveLocation_Parms.out_vLoc, 0xC );

	return GetNextPredictedMoveLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.LookAtPawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oLookTarget                    ( CPF_Parm )
// int                            nRank                          ( CPF_Parm )

void ABioAiController::eventLookAtPawn ( class ABioPawn* oLookTarget, int nRank )
{
	static UFunction* pFnLookAtPawn = NULL;

	if ( ! pFnLookAtPawn )
		pFnLookAtPawn = (UFunction*) UObject::GObjObjects()->Data[ 43805 ];

	ABioAiController_eventLookAtPawn_Parms LookAtPawn_Parms;
	LookAtPawn_Parms.oLookTarget = oLookTarget;
	LookAtPawn_Parms.nRank = nRank;

	this->ProcessEvent ( pFnLookAtPawn, &LookAtPawn_Parms, NULL );
};

// Function SFXGame.BioAiController.OnLeftPlaypen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm )

void ABioAiController::eventOnLeftPlaypen ( class ANavigationPoint* oNavPoint )
{
	static UFunction* pFnOnLeftPlaypen = NULL;

	if ( ! pFnOnLeftPlaypen )
		pFnOnLeftPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 43801 ];

	ABioAiController_eventOnLeftPlaypen_Parms OnLeftPlaypen_Parms;
	OnLeftPlaypen_Parms.oNavPoint = oNavPoint;

	this->ProcessEvent ( pFnOnLeftPlaypen, &OnLeftPlaypen_Parms, NULL );
};

// Function SFXGame.BioAiController.onStopFollowerHoldPosition
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventonStopFollowerHoldPosition ( )
{
	static UFunction* pFnonStopFollowerHoldPosition = NULL;

	if ( ! pFnonStopFollowerHoldPosition )
		pFnonStopFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 43800 ];

	ABioAiController_eventonStopFollowerHoldPosition_Parms onStopFollowerHoldPosition_Parms;

	this->ProcessEvent ( pFnonStopFollowerHoldPosition, &onStopFollowerHoldPosition_Parms, NULL );
};

// Function SFXGame.BioAiController.onStartFollowerHoldPosition
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioSquadHoldMarker*     oHoldMarker                    ( CPF_Parm )

void ABioAiController::eventonStartFollowerHoldPosition ( class ABioSquadHoldMarker* oHoldMarker )
{
	static UFunction* pFnonStartFollowerHoldPosition = NULL;

	if ( ! pFnonStartFollowerHoldPosition )
		pFnonStartFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 43798 ];

	ABioAiController_eventonStartFollowerHoldPosition_Parms onStartFollowerHoldPosition_Parms;
	onStartFollowerHoldPosition_Parms.oHoldMarker = oHoldMarker;

	this->ProcessEvent ( pFnonStartFollowerHoldPosition, &onStartFollowerHoldPosition_Parms, NULL );
};

// Function SFXGame.BioAiController.OnLeavingStasis
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventOnLeavingStasis ( )
{
	static UFunction* pFnOnLeavingStasis = NULL;

	if ( ! pFnOnLeavingStasis )
		pFnOnLeavingStasis = (UFunction*) UObject::GObjObjects()->Data[ 43797 ];

	ABioAiController_eventOnLeavingStasis_Parms OnLeavingStasis_Parms;

	this->ProcessEvent ( pFnOnLeavingStasis, &OnLeavingStasis_Parms, NULL );
};

// Function SFXGame.BioAiController.OnEnteringStasis
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAiController::eventOnEnteringStasis ( )
{
	static UFunction* pFnOnEnteringStasis = NULL;

	if ( ! pFnOnEnteringStasis )
		pFnOnEnteringStasis = (UFunction*) UObject::GObjObjects()->Data[ 43781 ];

	ABioAiController_eventOnEnteringStasis_Parms OnEnteringStasis_Parms;

	this->ProcessEvent ( pFnOnEnteringStasis, &OnEnteringStasis_Parms, NULL );
};

// Function SFXGame.BioAiController.ExtendFiringTimeOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTime                          ( CPF_Parm )

void ABioAiController::ExtendFiringTimeOut ( float fTime )
{
	static UFunction* pFnExtendFiringTimeOut = NULL;

	if ( ! pFnExtendFiringTimeOut )
		pFnExtendFiringTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 43779 ];

	ABioAiController_execExtendFiringTimeOut_Parms ExtendFiringTimeOut_Parms;
	ExtendFiringTimeOut_Parms.fTime = fTime;

	pFnExtendFiringTimeOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtendFiringTimeOut, &ExtendFiringTimeOut_Parms, NULL );

	pFnExtendFiringTimeOut->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.OnStreamingLevelLeavingStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAiController::OnStreamingLevelLeavingStasis ( )
{
	static UFunction* pFnOnStreamingLevelLeavingStasis = NULL;

	if ( ! pFnOnStreamingLevelLeavingStasis )
		pFnOnStreamingLevelLeavingStasis = (UFunction*) UObject::GObjObjects()->Data[ 43778 ];

	ABioAiController_execOnStreamingLevelLeavingStasis_Parms OnStreamingLevelLeavingStasis_Parms;

	pFnOnStreamingLevelLeavingStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStreamingLevelLeavingStasis, &OnStreamingLevelLeavingStasis_Parms, NULL );

	pFnOnStreamingLevelLeavingStasis->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.OnStreamingLevelEnteringStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAiController::OnStreamingLevelEnteringStasis ( )
{
	static UFunction* pFnOnStreamingLevelEnteringStasis = NULL;

	if ( ! pFnOnStreamingLevelEnteringStasis )
		pFnOnStreamingLevelEnteringStasis = (UFunction*) UObject::GObjObjects()->Data[ 43777 ];

	ABioAiController_execOnStreamingLevelEnteringStasis_Parms OnStreamingLevelEnteringStasis_Parms;

	pFnOnStreamingLevelEnteringStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStreamingLevelEnteringStasis, &OnStreamingLevelEnteringStasis_Parms, NULL );

	pFnOnStreamingLevelEnteringStasis->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.UpdateGenericTacticalMovement
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bMoving                        ( CPF_Parm )

void ABioAiController::UpdateGenericTacticalMovement ( unsigned long bMoving )
{
	static UFunction* pFnUpdateGenericTacticalMovement = NULL;

	if ( ! pFnUpdateGenericTacticalMovement )
		pFnUpdateGenericTacticalMovement = (UFunction*) UObject::GObjObjects()->Data[ 43775 ];

	ABioAiController_execUpdateGenericTacticalMovement_Parms UpdateGenericTacticalMovement_Parms;
	UpdateGenericTacticalMovement_Parms.bMoving = bMoving;

	pFnUpdateGenericTacticalMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGenericTacticalMovement, &UpdateGenericTacticalMovement_Parms, NULL );

	pFnUpdateGenericTacticalMovement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.GetPawnBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEpicPawnBehavior*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oPawn                          ( CPF_Parm )

class UBioEpicPawnBehavior* ABioAiController::GetPawnBehavior ( class APawn* oPawn )
{
	static UFunction* pFnGetPawnBehavior = NULL;

	if ( ! pFnGetPawnBehavior )
		pFnGetPawnBehavior = (UFunction*) UObject::GObjObjects()->Data[ 43772 ];

	ABioAiController_execGetPawnBehavior_Parms GetPawnBehavior_Parms;
	GetPawnBehavior_Parms.oPawn = oPawn;

	pFnGetPawnBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawnBehavior, &GetPawnBehavior_Parms, NULL );

	pFnGetPawnBehavior->FunctionFlags |= 0x400;

	return GetPawnBehavior_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.BioSetAdjustLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vAdjustLoc                     ( CPF_Parm )

void ABioAiController::BioSetAdjustLocation ( struct FVector vAdjustLoc )
{
	static UFunction* pFnBioSetAdjustLocation = NULL;

	if ( ! pFnBioSetAdjustLocation )
		pFnBioSetAdjustLocation = (UFunction*) UObject::GObjObjects()->Data[ 43770 ];

	ABioAiController_execBioSetAdjustLocation_Parms BioSetAdjustLocation_Parms;
	memcpy ( &BioSetAdjustLocation_Parms.vAdjustLoc, &vAdjustLoc, 0xC );

	pFnBioSetAdjustLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioSetAdjustLocation, &BioSetAdjustLocation_Parms, NULL );

	pFnBioSetAdjustLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.CancelCapability
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioCapability*          oCapability                    ( CPF_Parm )

void ABioAiController::CancelCapability ( class UBioCapability* oCapability )
{
	static UFunction* pFnCancelCapability = NULL;

	if ( ! pFnCancelCapability )
		pFnCancelCapability = (UFunction*) UObject::GObjObjects()->Data[ 43768 ];

	ABioAiController_execCancelCapability_Parms CancelCapability_Parms;
	CancelCapability_Parms.oCapability = oCapability;

	pFnCancelCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelCapability, &CancelCapability_Parms, NULL );

	pFnCancelCapability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.GetCapabilityPowerBuildUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioAiController::GetCapabilityPowerBuildUp ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityPowerBuildUp = NULL;

	if ( ! pFnGetCapabilityPowerBuildUp )
		pFnGetCapabilityPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 43765 ];

	ABioAiController_execGetCapabilityPowerBuildUp_Parms GetCapabilityPowerBuildUp_Parms;
	GetCapabilityPowerBuildUp_Parms.oCapability = oCapability;

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityPowerBuildUp, &GetCapabilityPowerBuildUp_Parms, NULL );

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= 0x400;

	return GetCapabilityPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetCapabilityImpactRadius
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioAiController::GetCapabilityImpactRadius ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityImpactRadius = NULL;

	if ( ! pFnGetCapabilityImpactRadius )
		pFnGetCapabilityImpactRadius = (UFunction*) UObject::GObjObjects()->Data[ 43762 ];

	ABioAiController_execGetCapabilityImpactRadius_Parms GetCapabilityImpactRadius_Parms;
	GetCapabilityImpactRadius_Parms.oCapability = oCapability;

	pFnGetCapabilityImpactRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityImpactRadius, &GetCapabilityImpactRadius_Parms, NULL );

	pFnGetCapabilityImpactRadius->FunctionFlags |= 0x400;

	return GetCapabilityImpactRadius_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetCapabilityIsEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

bool ABioAiController::GetCapabilityIsEnabled ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityIsEnabled = NULL;

	if ( ! pFnGetCapabilityIsEnabled )
		pFnGetCapabilityIsEnabled = (UFunction*) UObject::GObjObjects()->Data[ 43759 ];

	ABioAiController_execGetCapabilityIsEnabled_Parms GetCapabilityIsEnabled_Parms;
	GetCapabilityIsEnabled_Parms.oCapability = oCapability;

	pFnGetCapabilityIsEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityIsEnabled, &GetCapabilityIsEnabled_Parms, NULL );

	pFnGetCapabilityIsEnabled->FunctionFlags |= 0x400;

	return GetCapabilityIsEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetCapabilityCoolDownTimeRemaining
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioAiController::GetCapabilityCoolDownTimeRemaining ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityCoolDownTimeRemaining = NULL;

	if ( ! pFnGetCapabilityCoolDownTimeRemaining )
		pFnGetCapabilityCoolDownTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 43756 ];

	ABioAiController_execGetCapabilityCoolDownTimeRemaining_Parms GetCapabilityCoolDownTimeRemaining_Parms;
	GetCapabilityCoolDownTimeRemaining_Parms.oCapability = oCapability;

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityCoolDownTimeRemaining, &GetCapabilityCoolDownTimeRemaining_Parms, NULL );

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= 0x400;

	return GetCapabilityCoolDownTimeRemaining_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::AddCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnAddCapability = NULL;

	if ( ! pFnAddCapability )
		pFnAddCapability = (UFunction*) UObject::GObjObjects()->Data[ 43189 ];

	ABioAiController_execAddCapability_Parms AddCapability_Parms;
	AddCapability_Parms.oCapability = oCapability;
	AddCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	AddCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	AddCapability_Parms.fTimeOut = fTimeOut;
	AddCapability_Parms.oTarget = oTarget;
	memcpy ( &AddCapability_Parms.vTarget, &vTarget, 0xC );

	pFnAddCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCapability, &AddCapability_Parms, NULL );

	pFnAddCapability->FunctionFlags |= 0x400;

	return AddCapability_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DoCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::DoCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnDoCapability = NULL;

	if ( ! pFnDoCapability )
		pFnDoCapability = (UFunction*) UObject::GObjObjects()->Data[ 43742 ];

	ABioAiController_execDoCapability_Parms DoCapability_Parms;
	DoCapability_Parms.oCapability = oCapability;
	DoCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	DoCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	DoCapability_Parms.fTimeOut = fTimeOut;
	DoCapability_Parms.oTarget = oTarget;
	memcpy ( &DoCapability_Parms.vTarget, &vTarget, 0xC );

	pFnDoCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCapability, &DoCapability_Parms, NULL );

	pFnDoCapability->FunctionFlags |= 0x400;

	return DoCapability_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.MobTarget
// [0x00020409] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// float                          fMoveTolerance                 ( CPF_Parm )

void ABioAiController::MobTarget ( class AActor* oTarget, float fMoveTolerance )
{
	static UFunction* pFnMobTarget = NULL;

	if ( ! pFnMobTarget )
		pFnMobTarget = (UFunction*) UObject::GObjObjects()->Data[ 43739 ];

	ABioAiController_execMobTarget_Parms MobTarget_Parms;
	MobTarget_Parms.oTarget = oTarget;
	MobTarget_Parms.fMoveTolerance = fMoveTolerance;

	pFnMobTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMobTarget, &MobTarget_Parms, NULL );

	pFnMobTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.AdjustSteeringMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm )

bool ABioAiController::AdjustSteeringMoveSpeed ( struct FVector vSteering )
{
	static UFunction* pFnAdjustSteeringMoveSpeed = NULL;

	if ( ! pFnAdjustSteeringMoveSpeed )
		pFnAdjustSteeringMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 43736 ];

	ABioAiController_execAdjustSteeringMoveSpeed_Parms AdjustSteeringMoveSpeed_Parms;
	memcpy ( &AdjustSteeringMoveSpeed_Parms.vSteering, &vSteering, 0xC );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSteeringMoveSpeed, &AdjustSteeringMoveSpeed_Parms, NULL );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= 0x400;

	return AdjustSteeringMoveSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAiController::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 43733 ];

	ABioAiController_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.SteeringMovement
// [0x00020409] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioAiController::SteeringMovement ( )
{
	static UFunction* pFnSteeringMovement = NULL;

	if ( ! pFnSteeringMovement )
		pFnSteeringMovement = (UFunction*) UObject::GObjObjects()->Data[ 43732 ];

	ABioAiController_execSteeringMovement_Parms SteeringMovement_Parms;

	pFnSteeringMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSteeringMovement, &SteeringMovement_Parms, NULL );

	pFnSteeringMovement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.GetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ABioAiController::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 42919 ];

	ABioAiController_execGetTarget_Parms GetTarget_Parms;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ExploreMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDelaySeconds                  ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::ExploreMode ( float fDelaySeconds )
{
	static UFunction* pFnExploreMode = NULL;

	if ( ! pFnExploreMode )
		pFnExploreMode = (UFunction*) UObject::GObjObjects()->Data[ 43729 ];

	ABioAiController_execExploreMode_Parms ExploreMode_Parms;
	ExploreMode_Parms.fDelaySeconds = fDelaySeconds;

	pFnExploreMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExploreMode, &ExploreMode_Parms, NULL );

	pFnExploreMode->FunctionFlags |= 0x400;

	return ExploreMode_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ReadyMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDelaySeconds                  ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::ReadyMode ( float fDelaySeconds )
{
	static UFunction* pFnReadyMode = NULL;

	if ( ! pFnReadyMode )
		pFnReadyMode = (UFunction*) UObject::GObjObjects()->Data[ 43726 ];

	ABioAiController_execReadyMode_Parms ReadyMode_Parms;
	ReadyMode_Parms.fDelaySeconds = fDelaySeconds;

	pFnReadyMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadyMode, &ReadyMode_Parms, NULL );

	pFnReadyMode->FunctionFlags |= 0x400;

	return ReadyMode_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.UnlockTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSwitchActionState             ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::UnlockTarget ( unsigned long bSwitchActionState )
{
	static UFunction* pFnUnlockTarget = NULL;

	if ( ! pFnUnlockTarget )
		pFnUnlockTarget = (UFunction*) UObject::GObjObjects()->Data[ 43723 ];

	ABioAiController_execUnlockTarget_Parms UnlockTarget_Parms;
	UnlockTarget_Parms.bSwitchActionState = bSwitchActionState;

	pFnUnlockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnlockTarget, &UnlockTarget_Parms, NULL );

	pFnUnlockTarget->FunctionFlags |= 0x400;

	return UnlockTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.LockTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

bool ABioAiController::LockTarget ( class AActor* oTarget )
{
	static UFunction* pFnLockTarget = NULL;

	if ( ! pFnLockTarget )
		pFnLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 43184 ];

	ABioAiController_execLockTarget_Parms LockTarget_Parms;
	LockTarget_Parms.oTarget = oTarget;

	pFnLockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLockTarget, &LockTarget_Parms, NULL );

	pFnLockTarget->FunctionFlags |= 0x400;

	return LockTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddTempLookAt
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vPoint                         ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vRelitivePoint                 ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::AddTempLookAt ( class AActor* oTarget, struct FVector vPoint, struct FVector vRelitivePoint )
{
	static UFunction* pFnAddTempLookAt = NULL;

	if ( ! pFnAddTempLookAt )
		pFnAddTempLookAt = (UFunction*) UObject::GObjObjects()->Data[ 43717 ];

	ABioAiController_execAddTempLookAt_Parms AddTempLookAt_Parms;
	AddTempLookAt_Parms.oTarget = oTarget;
	memcpy ( &AddTempLookAt_Parms.vPoint, &vPoint, 0xC );
	memcpy ( &AddTempLookAt_Parms.vRelitivePoint, &vRelitivePoint, 0xC );

	pFnAddTempLookAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddTempLookAt, &AddTempLookAt_Parms, NULL );

	pFnAddTempLookAt->FunctionFlags |= 0x400;

	return AddTempLookAt_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddUseArtPlaceable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioArtPlaceable*        oAP                            ( CPF_Parm )

class UBioSeqData* ABioAiController::AddUseArtPlaceable ( class ABioArtPlaceable* oAP )
{
	static UFunction* pFnAddUseArtPlaceable = NULL;

	if ( ! pFnAddUseArtPlaceable )
		pFnAddUseArtPlaceable = (UFunction*) UObject::GObjObjects()->Data[ 43714 ];

	ABioAiController_execAddUseArtPlaceable_Parms AddUseArtPlaceable_Parms;
	AddUseArtPlaceable_Parms.oAP = oAP;

	pFnAddUseArtPlaceable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddUseArtPlaceable, &AddUseArtPlaceable_Parms, NULL );

	pFnAddUseArtPlaceable->FunctionFlags |= 0x400;

	return AddUseArtPlaceable_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddUsePower
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPower                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bOrderedByPlayer               ( CPF_Parm )
// float                          fTimeOut                       ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::AddUsePower ( struct FName nmPower, class AActor* oTarget, unsigned long bOrderedByPlayer, float fTimeOut, struct FVector vTarget )
{
	static UFunction* pFnAddUsePower = NULL;

	if ( ! pFnAddUsePower )
		pFnAddUsePower = (UFunction*) UObject::GObjObjects()->Data[ 43707 ];

	ABioAiController_execAddUsePower_Parms AddUsePower_Parms;
	memcpy ( &AddUsePower_Parms.nmPower, &nmPower, 0x8 );
	AddUsePower_Parms.oTarget = oTarget;
	AddUsePower_Parms.bOrderedByPlayer = bOrderedByPlayer;
	AddUsePower_Parms.fTimeOut = fTimeOut;
	memcpy ( &AddUsePower_Parms.vTarget, &vTarget, 0xC );

	pFnAddUsePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddUsePower, &AddUsePower_Parms, NULL );

	pFnAddUsePower->FunctionFlags |= 0x400;

	return AddUsePower_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.SwitchWeaponTypeToRangedItemType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSwitchType                    ( CPF_Parm )

unsigned char ABioAiController::SwitchWeaponTypeToRangedItemType ( unsigned char nSwitchType )
{
	static UFunction* pFnSwitchWeaponTypeToRangedItemType = NULL;

	if ( ! pFnSwitchWeaponTypeToRangedItemType )
		pFnSwitchWeaponTypeToRangedItemType = (UFunction*) UObject::GObjObjects()->Data[ 43704 ];

	ABioAiController_execSwitchWeaponTypeToRangedItemType_Parms SwitchWeaponTypeToRangedItemType_Parms;
	SwitchWeaponTypeToRangedItemType_Parms.nSwitchType = nSwitchType;

	pFnSwitchWeaponTypeToRangedItemType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwitchWeaponTypeToRangedItemType, &SwitchWeaponTypeToRangedItemType_Parms, NULL );

	pFnSwitchWeaponTypeToRangedItemType->FunctionFlags |= 0x400;

	return SwitchWeaponTypeToRangedItemType_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.RangedItemTypeToSwitchWeaponType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nWeaponType                    ( CPF_Parm )

unsigned char ABioAiController::RangedItemTypeToSwitchWeaponType ( unsigned char nWeaponType )
{
	static UFunction* pFnRangedItemTypeToSwitchWeaponType = NULL;

	if ( ! pFnRangedItemTypeToSwitchWeaponType )
		pFnRangedItemTypeToSwitchWeaponType = (UFunction*) UObject::GObjObjects()->Data[ 43701 ];

	ABioAiController_execRangedItemTypeToSwitchWeaponType_Parms RangedItemTypeToSwitchWeaponType_Parms;
	RangedItemTypeToSwitchWeaponType_Parms.nWeaponType = nWeaponType;

	pFnRangedItemTypeToSwitchWeaponType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRangedItemTypeToSwitchWeaponType, &RangedItemTypeToSwitchWeaponType_Parms, NULL );

	pFnRangedItemTypeToSwitchWeaponType->FunctionFlags |= 0x400;

	return RangedItemTypeToSwitchWeaponType_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetSelectedWeaponSwitchType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioAiController::GetSelectedWeaponSwitchType ( )
{
	static UFunction* pFnGetSelectedWeaponSwitchType = NULL;

	if ( ! pFnGetSelectedWeaponSwitchType )
		pFnGetSelectedWeaponSwitchType = (UFunction*) UObject::GObjObjects()->Data[ 43699 ];

	ABioAiController_execGetSelectedWeaponSwitchType_Parms GetSelectedWeaponSwitchType_Parms;

	pFnGetSelectedWeaponSwitchType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectedWeaponSwitchType, &GetSelectedWeaponSwitchType_Parms, NULL );

	pFnGetSelectedWeaponSwitchType->FunctionFlags |= 0x400;

	return GetSelectedWeaponSwitchType_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.GetSelectedWeapon
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  out_Type                       ( CPF_Parm | CPF_OutParm )

bool ABioAiController::GetSelectedWeapon ( unsigned char* out_Type )
{
	static UFunction* pFnGetSelectedWeapon = NULL;

	if ( ! pFnGetSelectedWeapon )
		pFnGetSelectedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 43696 ];

	ABioAiController_execGetSelectedWeapon_Parms GetSelectedWeapon_Parms;

	pFnGetSelectedWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectedWeapon, &GetSelectedWeapon_Parms, NULL );

	pFnGetSelectedWeapon->FunctionFlags |= 0x400;

	if ( out_Type )
		*out_Type = GetSelectedWeapon_Parms.out_Type;

	return GetSelectedWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddSelectWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  NewWeapon                      ( CPF_Parm )

class UBioSeqData* ABioAiController::AddSelectWeapon ( unsigned char NewWeapon )
{
	static UFunction* pFnAddSelectWeapon = NULL;

	if ( ! pFnAddSelectWeapon )
		pFnAddSelectWeapon = (UFunction*) UObject::GObjObjects()->Data[ 43693 ];

	ABioAiController_execAddSelectWeapon_Parms AddSelectWeapon_Parms;
	AddSelectWeapon_Parms.NewWeapon = NewWeapon;

	pFnAddSelectWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddSelectWeapon, &AddSelectWeapon_Parms, NULL );

	pFnAddSelectWeapon->FunctionFlags |= 0x400;

	return AddSelectWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddThrowGrenade
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )
// int                            nGrenadeType                   ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::AddThrowGrenade ( class APawn* pTarget, struct FVector vTarget, int nGrenadeType )
{
	static UFunction* pFnAddThrowGrenade = NULL;

	if ( ! pFnAddThrowGrenade )
		pFnAddThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 43688 ];

	ABioAiController_execAddThrowGrenade_Parms AddThrowGrenade_Parms;
	AddThrowGrenade_Parms.pTarget = pTarget;
	memcpy ( &AddThrowGrenade_Parms.vTarget, &vTarget, 0xC );
	AddThrowGrenade_Parms.nGrenadeType = nGrenadeType;

	pFnAddThrowGrenade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddThrowGrenade, &AddThrowGrenade_Parms, NULL );

	pFnAddThrowGrenade->FunctionFlags |= 0x400;

	return AddThrowGrenade_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddStopFiring
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSeqData* ABioAiController::AddStopFiring ( )
{
	static UFunction* pFnAddStopFiring = NULL;

	if ( ! pFnAddStopFiring )
		pFnAddStopFiring = (UFunction*) UObject::GObjObjects()->Data[ 43686 ];

	ABioAiController_execAddStopFiring_Parms AddStopFiring_Parms;

	pFnAddStopFiring->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddStopFiring, &AddStopFiring_Parms, NULL );

	pFnAddStopFiring->FunctionFlags |= 0x400;

	return AddStopFiring_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddStartFiring
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_OptionalParm | CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_OptionalParm | CPF_Parm )
// float                          fTimeOut                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreLOS                     ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::AddStartFiring ( class AActor* pTarget, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, unsigned long bIgnoreLOS )
{
	static UFunction* pFnAddStartFiring = NULL;

	if ( ! pFnAddStartFiring )
		pFnAddStartFiring = (UFunction*) UObject::GObjObjects()->Data[ 43679 ];

	ABioAiController_execAddStartFiring_Parms AddStartFiring_Parms;
	AddStartFiring_Parms.pTarget = pTarget;
	AddStartFiring_Parms.fReqStabilityRatio = fReqStabilityRatio;
	AddStartFiring_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	AddStartFiring_Parms.fTimeOut = fTimeOut;
	AddStartFiring_Parms.bIgnoreLOS = bIgnoreLOS;

	pFnAddStartFiring->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddStartFiring, &AddStartFiring_Parms, NULL );

	pFnAddStartFiring->FunctionFlags |= 0x400;

	return AddStartFiring_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushUseCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FCoverRecord            oCoverInfo                     ( CPF_Parm )

class UBioSeqData* ABioAiController::PushUseCover ( struct FCoverRecord oCoverInfo )
{
	static UFunction* pFnPushUseCover = NULL;

	if ( ! pFnPushUseCover )
		pFnPushUseCover = (UFunction*) UObject::GObjObjects()->Data[ 43676 ];

	ABioAiController_execPushUseCover_Parms PushUseCover_Parms;
	memcpy ( &PushUseCover_Parms.oCoverInfo, &oCoverInfo, 0x14 );

	pFnPushUseCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushUseCover, &PushUseCover_Parms, NULL );

	pFnPushUseCover->FunctionFlags |= 0x400;

	return PushUseCover_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushDoWorldInteraction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWp_ActionStation*    ActionStation                  ( CPF_Parm )
// struct TArray<class UBioActivityTiming*> Timings_                       ( CPF_Parm | CPF_NeedCtorLink )

class UBioSeqData* ABioAiController::PushDoWorldInteraction ( class ABioWp_ActionStation* ActionStation, struct TArray<class UBioActivityTiming*> Timings_ )
{
	static UFunction* pFnPushDoWorldInteraction = NULL;

	if ( ! pFnPushDoWorldInteraction )
		pFnPushDoWorldInteraction = (UFunction*) UObject::GObjObjects()->Data[ 43671 ];

	ABioAiController_execPushDoWorldInteraction_Parms PushDoWorldInteraction_Parms;
	PushDoWorldInteraction_Parms.ActionStation = ActionStation;
	memcpy ( &PushDoWorldInteraction_Parms.Timings_, &Timings_, 0x10 );

	pFnPushDoWorldInteraction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushDoWorldInteraction, &PushDoWorldInteraction_Parms, NULL );

	pFnPushDoWorldInteraction->FunctionFlags |= 0x400;

	return PushDoWorldInteraction_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushPlayAnimation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<class UAnimSet*> AnimationSets                  ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<struct FName>    AnimName                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Looping                        ( CPF_Parm )
// unsigned long                  Random                         ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::PushPlayAnimation ( struct TArray<class UAnimSet*> AnimationSets, struct TArray<struct FName> AnimName, unsigned long Looping, unsigned long Random )
{
	static UFunction* pFnPushPlayAnimation = NULL;

	if ( ! pFnPushPlayAnimation )
		pFnPushPlayAnimation = (UFunction*) UObject::GObjObjects()->Data[ 43663 ];

	ABioAiController_execPushPlayAnimation_Parms PushPlayAnimation_Parms;
	memcpy ( &PushPlayAnimation_Parms.AnimationSets, &AnimationSets, 0x10 );
	memcpy ( &PushPlayAnimation_Parms.AnimName, &AnimName, 0x10 );
	PushPlayAnimation_Parms.Looping = Looping;
	PushPlayAnimation_Parms.Random = Random;

	pFnPushPlayAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushPlayAnimation, &PushPlayAnimation_Parms, NULL );

	pFnPushPlayAnimation->FunctionFlags |= 0x400;

	return PushPlayAnimation_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushMobTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MoveToObject                   ( CPF_Parm )
// float                          PointTolerance                 ( CPF_Parm )

class UBioSeqData* ABioAiController::PushMobTarget ( class AActor* MoveToObject, float PointTolerance )
{
	static UFunction* pFnPushMobTarget = NULL;

	if ( ! pFnPushMobTarget )
		pFnPushMobTarget = (UFunction*) UObject::GObjObjects()->Data[ 43659 ];

	ABioAiController_execPushMobTarget_Parms PushMobTarget_Parms;
	PushMobTarget_Parms.MoveToObject = MoveToObject;
	PushMobTarget_Parms.PointTolerance = PointTolerance;

	pFnPushMobTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushMobTarget, &PushMobTarget_Parms, NULL );

	pFnPushMobTarget->FunctionFlags |= 0x400;

	return PushMobTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushMoveAndAttack
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MoveToObject                   ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_Parm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStab                       ( CPF_Parm )
// float                          fAbortStab                     ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class AActor*                  oAttackTarget                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUseMobMovement                ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::PushMoveAndAttack ( class AActor* MoveToObject, unsigned long bWalking, class UBioCapability* oCapability, float fReqStab, float fAbortStab, float fTimeOut, class AActor* oAttackTarget, unsigned long bUseMobMovement )
{
	static UFunction* pFnPushMoveAndAttack = NULL;

	if ( ! pFnPushMoveAndAttack )
		pFnPushMoveAndAttack = (UFunction*) UObject::GObjObjects()->Data[ 43649 ];

	ABioAiController_execPushMoveAndAttack_Parms PushMoveAndAttack_Parms;
	PushMoveAndAttack_Parms.MoveToObject = MoveToObject;
	PushMoveAndAttack_Parms.bWalking = bWalking;
	PushMoveAndAttack_Parms.oCapability = oCapability;
	PushMoveAndAttack_Parms.fReqStab = fReqStab;
	PushMoveAndAttack_Parms.fAbortStab = fAbortStab;
	PushMoveAndAttack_Parms.fTimeOut = fTimeOut;
	PushMoveAndAttack_Parms.oAttackTarget = oAttackTarget;
	PushMoveAndAttack_Parms.bUseMobMovement = bUseMobMovement;

	pFnPushMoveAndAttack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushMoveAndAttack, &PushMoveAndAttack_Parms, NULL );

	pFnPushMoveAndAttack->FunctionFlags |= 0x400;

	return PushMoveAndAttack_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushRandomWalk
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MaxWalkDist_                   ( CPF_Parm )
// float                          DelayAfterWalk_                ( CPF_Parm )

class UBioSeqData* ABioAiController::PushRandomWalk ( int MaxWalkDist_, float DelayAfterWalk_ )
{
	static UFunction* pFnPushRandomWalk = NULL;

	if ( ! pFnPushRandomWalk )
		pFnPushRandomWalk = (UFunction*) UObject::GObjObjects()->Data[ 43645 ];

	ABioAiController_execPushRandomWalk_Parms PushRandomWalk_Parms;
	PushRandomWalk_Parms.MaxWalkDist_ = MaxWalkDist_;
	PushRandomWalk_Parms.DelayAfterWalk_ = DelayAfterWalk_;

	pFnPushRandomWalk->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushRandomWalk, &PushRandomWalk_Parms, NULL );

	pFnPushRandomWalk->FunctionFlags |= 0x400;

	return PushRandomWalk_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushFollowSquadLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSeqData* ABioAiController::PushFollowSquadLeader ( )
{
	static UFunction* pFnPushFollowSquadLeader = NULL;

	if ( ! pFnPushFollowSquadLeader )
		pFnPushFollowSquadLeader = (UFunction*) UObject::GObjObjects()->Data[ 43643 ];

	ABioAiController_execPushFollowSquadLeader_Parms PushFollowSquadLeader_Parms;

	pFnPushFollowSquadLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushFollowSquadLeader, &PushFollowSquadLeader_Parms, NULL );

	pFnPushFollowSquadLeader->FunctionFlags |= 0x400;

	return PushFollowSquadLeader_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushMoveToPointList
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fTolerance                     ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// struct TArray<struct FVector>  aMoveToLocations               ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class UBioSeqData* ABioAiController::PushMoveToPointList ( float fTolerance, unsigned long bWalking, struct TArray<struct FVector>* aMoveToLocations )
{
	static UFunction* pFnPushMoveToPointList = NULL;

	if ( ! pFnPushMoveToPointList )
		pFnPushMoveToPointList = (UFunction*) UObject::GObjObjects()->Data[ 43637 ];

	ABioAiController_execPushMoveToPointList_Parms PushMoveToPointList_Parms;
	PushMoveToPointList_Parms.fTolerance = fTolerance;
	PushMoveToPointList_Parms.bWalking = bWalking;

	pFnPushMoveToPointList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushMoveToPointList, &PushMoveToPointList_Parms, NULL );

	pFnPushMoveToPointList->FunctionFlags |= 0x400;

	if ( aMoveToLocations )
		memcpy ( aMoveToLocations, &PushMoveToPointList_Parms.aMoveToLocations, 0x10 );

	return PushMoveToPointList_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushMoveToPoint
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )
// float                          PointTolerance                 ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRequiresPrecisionMovement     ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::PushMoveToPoint ( struct FVector vLoc, float PointTolerance, unsigned long bWalking, unsigned long bRequiresPrecisionMovement )
{
	static UFunction* pFnPushMoveToPoint = NULL;

	if ( ! pFnPushMoveToPoint )
		pFnPushMoveToPoint = (UFunction*) UObject::GObjObjects()->Data[ 43631 ];

	ABioAiController_execPushMoveToPoint_Parms PushMoveToPoint_Parms;
	memcpy ( &PushMoveToPoint_Parms.vLoc, &vLoc, 0xC );
	PushMoveToPoint_Parms.PointTolerance = PointTolerance;
	PushMoveToPoint_Parms.bWalking = bWalking;
	PushMoveToPoint_Parms.bRequiresPrecisionMovement = bRequiresPrecisionMovement;

	pFnPushMoveToPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushMoveToPoint, &PushMoveToPoint_Parms, NULL );

	pFnPushMoveToPoint->FunctionFlags |= 0x400;

	return PushMoveToPoint_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushMoveToObject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MoveToObject                   ( CPF_Parm )
// float                          PointTolerance                 ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRequiresPrecisionMovement     ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::PushMoveToObject ( class AActor* MoveToObject, float PointTolerance, unsigned long bWalking, unsigned long bRequiresPrecisionMovement )
{
	static UFunction* pFnPushMoveToObject = NULL;

	if ( ! pFnPushMoveToObject )
		pFnPushMoveToObject = (UFunction*) UObject::GObjObjects()->Data[ 43625 ];

	ABioAiController_execPushMoveToObject_Parms PushMoveToObject_Parms;
	PushMoveToObject_Parms.MoveToObject = MoveToObject;
	PushMoveToObject_Parms.PointTolerance = PointTolerance;
	PushMoveToObject_Parms.bWalking = bWalking;
	PushMoveToObject_Parms.bRequiresPrecisionMovement = bRequiresPrecisionMovement;

	pFnPushMoveToObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushMoveToObject, &PushMoveToObject_Parms, NULL );

	pFnPushMoveToObject->FunctionFlags |= 0x400;

	return PushMoveToObject_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ResumeWalking
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAiController::ResumeWalking ( )
{
	static UFunction* pFnResumeWalking = NULL;

	if ( ! pFnResumeWalking )
		pFnResumeWalking = (UFunction*) UObject::GObjObjects()->Data[ 43624 ];

	ABioAiController_execResumeWalking_Parms ResumeWalking_Parms;

	pFnResumeWalking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResumeWalking, &ResumeWalking_Parms, NULL );

	pFnResumeWalking->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.PushWalkWaypointSet
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWaypointSet*         oWaypointSet                   ( CPF_Parm )
// unsigned char                  eWalkType                      ( CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// float                          fMoveTolerance                 ( CPF_OptionalParm | CPF_Parm )
// int                            nNextWaypoint                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCounting_Up                   ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioAiController::PushWalkWaypointSet ( class ABioWaypointSet* oWaypointSet, unsigned char eWalkType, unsigned long bWalking, float fMoveTolerance, int nNextWaypoint, unsigned long bCounting_Up )
{
	static UFunction* pFnPushWalkWaypointSet = NULL;

	if ( ! pFnPushWalkWaypointSet )
		pFnPushWalkWaypointSet = (UFunction*) UObject::GObjObjects()->Data[ 43616 ];

	ABioAiController_execPushWalkWaypointSet_Parms PushWalkWaypointSet_Parms;
	PushWalkWaypointSet_Parms.oWaypointSet = oWaypointSet;
	PushWalkWaypointSet_Parms.eWalkType = eWalkType;
	PushWalkWaypointSet_Parms.bWalking = bWalking;
	PushWalkWaypointSet_Parms.fMoveTolerance = fMoveTolerance;
	PushWalkWaypointSet_Parms.nNextWaypoint = nNextWaypoint;
	PushWalkWaypointSet_Parms.bCounting_Up = bCounting_Up;

	pFnPushWalkWaypointSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushWalkWaypointSet, &PushWalkWaypointSet_Parms, NULL );

	pFnPushWalkWaypointSet->FunctionFlags |= 0x400;

	return PushWalkWaypointSet_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.AddDelay
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DelayTime                      ( CPF_Parm )

class UBioSeqData* ABioAiController::AddDelay ( float DelayTime )
{
	static UFunction* pFnAddDelay = NULL;

	if ( ! pFnAddDelay )
		pFnAddDelay = (UFunction*) UObject::GObjObjects()->Data[ 43613 ];

	ABioAiController_execAddDelay_Parms AddDelay_Parms;
	AddDelay_Parms.DelayTime = DelayTime;

	pFnAddDelay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddDelay, &AddDelay_Parms, NULL );

	pFnAddDelay->FunctionFlags |= 0x400;

	return AddDelay_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PushDelay
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DelayTime                      ( CPF_Parm )

class UBioSeqData* ABioAiController::PushDelay ( float DelayTime )
{
	static UFunction* pFnPushDelay = NULL;

	if ( ! pFnPushDelay )
		pFnPushDelay = (UFunction*) UObject::GObjObjects()->Data[ 43610 ];

	ABioAiController_execPushDelay_Parms PushDelay_Parms;
	PushDelay_Parms.DelayTime = DelayTime;

	pFnPushDelay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushDelay, &PushDelay_Parms, NULL );

	pFnPushDelay->FunctionFlags |= 0x400;

	return PushDelay_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.IsOnPathNetwork
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )

bool ABioAiController::IsOnPathNetwork ( class APawn* oTarget )
{
	static UFunction* pFnIsOnPathNetwork = NULL;

	if ( ! pFnIsOnPathNetwork )
		pFnIsOnPathNetwork = (UFunction*) UObject::GObjObjects()->Data[ 43607 ];

	ABioAiController_execIsOnPathNetwork_Parms IsOnPathNetwork_Parms;
	IsOnPathNetwork_Parms.oTarget = oTarget;

	pFnIsOnPathNetwork->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsOnPathNetwork, &IsOnPathNetwork_Parms, NULL );

	pFnIsOnPathNetwork->FunctionFlags |= 0x400;

	return IsOnPathNetwork_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DirectWalkCheck
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )
// struct FVector                 vTarget                        ( CPF_Const | CPF_Parm | CPF_OutParm )

bool ABioAiController::DirectWalkCheck ( class AActor* pTarget, struct FVector* vTarget )
{
	static UFunction* pFnDirectWalkCheck = NULL;

	if ( ! pFnDirectWalkCheck )
		pFnDirectWalkCheck = (UFunction*) UObject::GObjObjects()->Data[ 43603 ];

	ABioAiController_execDirectWalkCheck_Parms DirectWalkCheck_Parms;
	DirectWalkCheck_Parms.pTarget = pTarget;

	pFnDirectWalkCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDirectWalkCheck, &DirectWalkCheck_Parms, NULL );

	pFnDirectWalkCheck->FunctionFlags |= 0x400;

	if ( vTarget )
		memcpy ( vTarget, &DirectWalkCheck_Parms.vTarget, 0xC );

	return DirectWalkCheck_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.PrecisionMoveTo
// [0x00020409] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vLoc                           ( CPF_Parm )
// struct FRotator                rRot                           ( CPF_Parm )

void ABioAiController::PrecisionMoveTo ( struct FVector vLoc, struct FRotator rRot )
{
	static UFunction* pFnPrecisionMoveTo = NULL;

	if ( ! pFnPrecisionMoveTo )
		pFnPrecisionMoveTo = (UFunction*) UObject::GObjObjects()->Data[ 43600 ];

	ABioAiController_execPrecisionMoveTo_Parms PrecisionMoveTo_Parms;
	memcpy ( &PrecisionMoveTo_Parms.vLoc, &vLoc, 0xC );
	memcpy ( &PrecisionMoveTo_Parms.rRot, &rRot, 0xC );

	pFnPrecisionMoveTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrecisionMoveTo, &PrecisionMoveTo_Parms, NULL );

	pFnPrecisionMoveTo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.WaitForActionToComplete
// [0x00020409] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioSeqData*             oSeqData                       ( CPF_Parm )

bool ABioAiController::WaitForActionToComplete ( class UBioSeqData* oSeqData )
{
	static UFunction* pFnWaitForActionToComplete = NULL;

	if ( ! pFnWaitForActionToComplete )
		pFnWaitForActionToComplete = (UFunction*) UObject::GObjObjects()->Data[ 43597 ];

	ABioAiController_execWaitForActionToComplete_Parms WaitForActionToComplete_Parms;
	WaitForActionToComplete_Parms.oSeqData = oSeqData;

	pFnWaitForActionToComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWaitForActionToComplete, &WaitForActionToComplete_Parms, NULL );

	pFnWaitForActionToComplete->FunctionFlags |= 0x400;

	return WaitForActionToComplete_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ClearFriendActionResource
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAiController::ClearFriendActionResource ( )
{
	static UFunction* pFnClearFriendActionResource = NULL;

	if ( ! pFnClearFriendActionResource )
		pFnClearFriendActionResource = (UFunction*) UObject::GObjObjects()->Data[ 43596 ];

	ABioAiController_execClearFriendActionResource_Parms ClearFriendActionResource_Parms;

	pFnClearFriendActionResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearFriendActionResource, &ClearFriendActionResource_Parms, NULL );

	pFnClearFriendActionResource->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.SetFriendActionResource
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nResource                      ( CPF_Parm )

void ABioAiController::SetFriendActionResource ( int nResource )
{
	static UFunction* pFnSetFriendActionResource = NULL;

	if ( ! pFnSetFriendActionResource )
		pFnSetFriendActionResource = (UFunction*) UObject::GObjObjects()->Data[ 43594 ];

	ABioAiController_execSetFriendActionResource_Parms SetFriendActionResource_Parms;
	SetFriendActionResource_Parms.nResource = nResource;

	pFnSetFriendActionResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFriendActionResource, &SetFriendActionResource_Parms, NULL );

	pFnSetFriendActionResource->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.ClearActionResource
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ActionTYP                      ( CPF_Parm )

bool ABioAiController::ClearActionResource ( unsigned char ActionTYP )
{
	static UFunction* pFnClearActionResource = NULL;

	if ( ! pFnClearActionResource )
		pFnClearActionResource = (UFunction*) UObject::GObjObjects()->Data[ 43591 ];

	ABioAiController_execClearActionResource_Parms ClearActionResource_Parms;
	ClearActionResource_Parms.ActionTYP = ActionTYP;

	pFnClearActionResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearActionResource, &ClearActionResource_Parms, NULL );

	pFnClearActionResource->FunctionFlags |= 0x400;

	return ClearActionResource_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.ReserveActionResource
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ActionTYP                      ( CPF_Parm )
// int                            nResource                      ( CPF_Parm )

bool ABioAiController::ReserveActionResource ( unsigned char ActionTYP, int nResource )
{
	static UFunction* pFnReserveActionResource = NULL;

	if ( ! pFnReserveActionResource )
		pFnReserveActionResource = (UFunction*) UObject::GObjObjects()->Data[ 43587 ];

	ABioAiController_execReserveActionResource_Parms ReserveActionResource_Parms;
	ReserveActionResource_Parms.ActionTYP = ActionTYP;
	ReserveActionResource_Parms.nResource = nResource;

	pFnReserveActionResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReserveActionResource, &ReserveActionResource_Parms, NULL );

	pFnReserveActionResource->FunctionFlags |= 0x400;

	return ReserveActionResource_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CheckActionResource
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nResource                      ( CPF_Parm )

bool ABioAiController::CheckActionResource ( int nResource )
{
	static UFunction* pFnCheckActionResource = NULL;

	if ( ! pFnCheckActionResource )
		pFnCheckActionResource = (UFunction*) UObject::GObjObjects()->Data[ 43584 ];

	ABioAiController_execCheckActionResource_Parms CheckActionResource_Parms;
	CheckActionResource_Parms.nResource = nResource;

	pFnCheckActionResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckActionResource, &CheckActionResource_Parms, NULL );

	pFnCheckActionResource->FunctionFlags |= 0x400;

	return CheckActionResource_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.DoingCombatTransition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::DoingCombatTransition ( )
{
	static UFunction* pFnDoingCombatTransition = NULL;

	if ( ! pFnDoingCombatTransition )
		pFnDoingCombatTransition = (UFunction*) UObject::GObjObjects()->Data[ 43582 ];

	ABioAiController_execDoingCombatTransition_Parms DoingCombatTransition_Parms;

	pFnDoingCombatTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoingCombatTransition, &DoingCombatTransition_Parms, NULL );

	pFnDoingCombatTransition->FunctionFlags |= 0x400;

	return DoingCombatTransition_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUsePowers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUsePowers ( )
{
	static UFunction* pFnCanUsePowers = NULL;

	if ( ! pFnCanUsePowers )
		pFnCanUsePowers = (UFunction*) UObject::GObjObjects()->Data[ 43580 ];

	ABioAiController_execCanUsePowers_Parms CanUsePowers_Parms;

	pFnCanUsePowers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUsePowers, &CanUsePowers_Parms, NULL );

	pFnCanUsePowers->FunctionFlags |= 0x400;

	return CanUsePowers_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUseGrenades
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUseGrenades ( )
{
	static UFunction* pFnCanUseGrenades = NULL;

	if ( ! pFnCanUseGrenades )
		pFnCanUseGrenades = (UFunction*) UObject::GObjObjects()->Data[ 43578 ];

	ABioAiController_execCanUseGrenades_Parms CanUseGrenades_Parms;

	pFnCanUseGrenades->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseGrenades, &CanUseGrenades_Parms, NULL );

	pFnCanUseGrenades->FunctionFlags |= 0x400;

	return CanUseGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUseWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUseWeapons ( )
{
	static UFunction* pFnCanUseWeapons = NULL;

	if ( ! pFnCanUseWeapons )
		pFnCanUseWeapons = (UFunction*) UObject::GObjObjects()->Data[ 43576 ];

	ABioAiController_execCanUseWeapons_Parms CanUseWeapons_Parms;

	pFnCanUseWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseWeapons, &CanUseWeapons_Parms, NULL );

	pFnCanUseWeapons->FunctionFlags |= 0x400;

	return CanUseWeapons_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUseStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUseStack ( )
{
	static UFunction* pFnCanUseStack = NULL;

	if ( ! pFnCanUseStack )
		pFnCanUseStack = (UFunction*) UObject::GObjObjects()->Data[ 43574 ];

	ABioAiController_execCanUseStack_Parms CanUseStack_Parms;

	pFnCanUseStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseStack, &CanUseStack_Parms, NULL );

	pFnCanUseStack->FunctionFlags |= 0x400;

	return CanUseStack_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.CanUseQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::CanUseQueue ( )
{
	static UFunction* pFnCanUseQueue = NULL;

	if ( ! pFnCanUseQueue )
		pFnCanUseQueue = (UFunction*) UObject::GObjObjects()->Data[ 43572 ];

	ABioAiController_execCanUseQueue_Parms CanUseQueue_Parms;

	pFnCanUseQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseQueue, &CanUseQueue_Parms, NULL );

	pFnCanUseQueue->FunctionFlags |= 0x400;

	return CanUseQueue_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.QueueCompletionEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             oCompletedAction               ( CPF_Parm )

void ABioAiController::QueueCompletionEvent ( class UBioSeqData* oCompletedAction )
{
	static UFunction* pFnQueueCompletionEvent = NULL;

	if ( ! pFnQueueCompletionEvent )
		pFnQueueCompletionEvent = (UFunction*) UObject::GObjObjects()->Data[ 43570 ];

	ABioAiController_execQueueCompletionEvent_Parms QueueCompletionEvent_Parms;
	QueueCompletionEvent_Parms.oCompletedAction = oCompletedAction;

	pFnQueueCompletionEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueueCompletionEvent, &QueueCompletionEvent_Parms, NULL );

	pFnQueueCompletionEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.HandleCompletionEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             oCompletedAction               ( CPF_Parm )

void ABioAiController::HandleCompletionEvent ( class UBioSeqData* oCompletedAction )
{
	static UFunction* pFnHandleCompletionEvent = NULL;

	if ( ! pFnHandleCompletionEvent )
		pFnHandleCompletionEvent = (UFunction*) UObject::GObjObjects()->Data[ 43568 ];

	ABioAiController_execHandleCompletionEvent_Parms HandleCompletionEvent_Parms;
	HandleCompletionEvent_Parms.oCompletedAction = oCompletedAction;

	pFnHandleCompletionEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleCompletionEvent, &HandleCompletionEvent_Parms, NULL );

	pFnHandleCompletionEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.ActionStarving
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UClass*                  cSeqClass                      ( CPF_Parm )

void ABioAiController::eventActionStarving ( class UClass* cSeqClass )
{
	static UFunction* pFnActionStarving = NULL;

	if ( ! pFnActionStarving )
		pFnActionStarving = (UFunction*) UObject::GObjObjects()->Data[ 43566 ];

	ABioAiController_eventActionStarving_Parms ActionStarving_Parms;
	ActionStarving_Parms.cSeqClass = cSeqClass;

	this->ProcessEvent ( pFnActionStarving, &ActionStarving_Parms, NULL );
};

// Function SFXGame.BioAiController.ClearActionQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::ClearActionQueue ( )
{
	static UFunction* pFnClearActionQueue = NULL;

	if ( ! pFnClearActionQueue )
		pFnClearActionQueue = (UFunction*) UObject::GObjObjects()->Data[ 43564 ];

	ABioAiController_execClearActionQueue_Parms ClearActionQueue_Parms;

	pFnClearActionQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearActionQueue, &ClearActionQueue_Parms, NULL );

	pFnClearActionQueue->FunctionFlags |= 0x400;

	return ClearActionQueue_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.HasActions
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAiController::HasActions ( )
{
	static UFunction* pFnHasActions = NULL;

	if ( ! pFnHasActions )
		pFnHasActions = (UFunction*) UObject::GObjObjects()->Data[ 43562 ];

	ABioAiController_execHasActions_Parms HasActions_Parms;

	pFnHasActions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasActions, &HasActions_Parms, NULL );

	pFnHasActions->FunctionFlags |= 0x400;

	return HasActions_Parms.ReturnValue;
};

// Function SFXGame.BioAiController.BioVINCE_MapName_Hench_Teleport
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )

void ABioAiController::BioVINCE_MapName_Hench_Teleport ( float X, float Y )
{
	static UFunction* pFnBioVINCE_MapName_Hench_Teleport = NULL;

	if ( ! pFnBioVINCE_MapName_Hench_Teleport )
		pFnBioVINCE_MapName_Hench_Teleport = (UFunction*) UObject::GObjObjects()->Data[ 43559 ];

	ABioAiController_execBioVINCE_MapName_Hench_Teleport_Parms BioVINCE_MapName_Hench_Teleport_Parms;
	BioVINCE_MapName_Hench_Teleport_Parms.X = X;
	BioVINCE_MapName_Hench_Teleport_Parms.Y = Y;

	pFnBioVINCE_MapName_Hench_Teleport->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_Hench_Teleport, &BioVINCE_MapName_Hench_Teleport_Parms, NULL );

	pFnBioVINCE_MapName_Hench_Teleport->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.BioVINCE_MapName_Hench_FailToPath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )

void ABioAiController::BioVINCE_MapName_Hench_FailToPath ( float X, float Y )
{
	static UFunction* pFnBioVINCE_MapName_Hench_FailToPath = NULL;

	if ( ! pFnBioVINCE_MapName_Hench_FailToPath )
		pFnBioVINCE_MapName_Hench_FailToPath = (UFunction*) UObject::GObjObjects()->Data[ 43556 ];

	ABioAiController_execBioVINCE_MapName_Hench_FailToPath_Parms BioVINCE_MapName_Hench_FailToPath_Parms;
	BioVINCE_MapName_Hench_FailToPath_Parms.X = X;
	BioVINCE_MapName_Hench_FailToPath_Parms.Y = Y;

	pFnBioVINCE_MapName_Hench_FailToPath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_Hench_FailToPath, &BioVINCE_MapName_Hench_FailToPath_Parms, NULL );

	pFnBioVINCE_MapName_Hench_FailToPath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAiController.BioOnPawnActionStateChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAiController::BioOnPawnActionStateChanged ( )
{
	static UFunction* pFnBioOnPawnActionStateChanged = NULL;

	if ( ! pFnBioOnPawnActionStateChanged )
		pFnBioOnPawnActionStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 43554 ];

	ABioAiController_execBioOnPawnActionStateChanged_Parms BioOnPawnActionStateChanged_Parms;

	pFnBioOnPawnActionStateChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioOnPawnActionStateChanged, &BioOnPawnActionStateChanged_Parms, NULL );

	pFnBioOnPawnActionStateChanged->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAI_Ambient.DoesGameModeAllowMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Ambient::DoesGameModeAllowMovement ( )
{
	static UFunction* pFnDoesGameModeAllowMovement = NULL;

	if ( ! pFnDoesGameModeAllowMovement )
		pFnDoesGameModeAllowMovement = (UFunction*) UObject::GObjObjects()->Data[ 47146 ];

	ABioAI_Ambient_execDoesGameModeAllowMovement_Parms DoesGameModeAllowMovement_Parms;

	this->ProcessEvent ( pFnDoesGameModeAllowMovement, &DoesGameModeAllowMovement_Parms, NULL );

	return DoesGameModeAllowMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Ambient.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioAI_Ambient::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47143 ];

	ABioAI_Ambient_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioAI_Ambient.HearNoise
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioAI_Ambient::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 47137 ];

	ABioAI_Ambient_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioAI_Ambient.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_Ambient::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47136 ];

	ABioAI_Ambient_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Ambient.AdjustSteeringMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm )

bool ABioAI_Ambient::AdjustSteeringMoveSpeed ( struct FVector vSteering )
{
	static UFunction* pFnAdjustSteeringMoveSpeed = NULL;

	if ( ! pFnAdjustSteeringMoveSpeed )
		pFnAdjustSteeringMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 47133 ];

	ABioAI_Ambient_execAdjustSteeringMoveSpeed_Parms AdjustSteeringMoveSpeed_Parms;
	memcpy ( &AdjustSteeringMoveSpeed_Parms.vSteering, &vSteering, 0xC );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSteeringMoveSpeed, &AdjustSteeringMoveSpeed_Parms, NULL );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= 0x400;

	return AdjustSteeringMoveSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Ambient.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_Ambient::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47130 ];

	ABioAI_Ambient_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Sneaky.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_Sneaky::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 48065 ];

	ABioAI_Sneaky_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.RespondToBump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ABioAI_Core::RespondToBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnRespondToBump = NULL;

	if ( ! pFnRespondToBump )
		pFnRespondToBump = (UFunction*) UObject::GObjObjects()->Data[ 47361 ];

	ABioAI_Core_execRespondToBump_Parms RespondToBump_Parms;
	RespondToBump_Parms.Other = Other;
	memcpy ( &RespondToBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnRespondToBump, &RespondToBump_Parms, NULL );

	return RespondToBump_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.WantsToRun
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDistance                      ( CPF_Parm )

bool ABioAI_Core::WantsToRun ( float fDistance )
{
	static UFunction* pFnWantsToRun = NULL;

	if ( ! pFnWantsToRun )
		pFnWantsToRun = (UFunction*) UObject::GObjObjects()->Data[ 47357 ];

	ABioAI_Core_execWantsToRun_Parms WantsToRun_Parms;
	WantsToRun_Parms.fDistance = fDistance;

	this->ProcessEvent ( pFnWantsToRun, &WantsToRun_Parms, NULL );

	return WantsToRun_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.SetMovementSpeed
// [0x00020002] 
// Parameters infos:

void ABioAI_Core::SetMovementSpeed ( )
{
	static UFunction* pFnSetMovementSpeed = NULL;

	if ( ! pFnSetMovementSpeed )
		pFnSetMovementSpeed = (UFunction*) UObject::GObjObjects()->Data[ 47354 ];

	ABioAI_Core_execSetMovementSpeed_Parms SetMovementSpeed_Parms;

	this->ProcessEvent ( pFnSetMovementSpeed, &SetMovementSpeed_Parms, NULL );
};

// Function SFXGame.BioAI_Core.SetMoveTimer
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vMove                          ( CPF_Parm | CPF_OutParm )

void ABioAI_Core::SetMoveTimer ( struct FVector* vMove )
{
	static UFunction* pFnSetMoveTimer = NULL;

	if ( ! pFnSetMoveTimer )
		pFnSetMoveTimer = (UFunction*) UObject::GObjObjects()->Data[ 47352 ];

	ABioAI_Core_execSetMoveTimer_Parms SetMoveTimer_Parms;

	pFnSetMoveTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMoveTimer, &SetMoveTimer_Parms, NULL );

	pFnSetMoveTimer->FunctionFlags |= 0x400;

	if ( vMove )
		memcpy ( vMove, &SetMoveTimer_Parms.vMove, 0xC );
};

// Function SFXGame.BioAI_Core.MoveTowardLocation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vLocation                      ( CPF_Parm )
// float                          fOffset                        ( CPF_OptionalParm | CPF_Parm )

void ABioAI_Core::MoveTowardLocation ( struct FVector vLocation, float fOffset )
{
	static UFunction* pFnMoveTowardLocation = NULL;

	if ( ! pFnMoveTowardLocation )
		pFnMoveTowardLocation = (UFunction*) UObject::GObjObjects()->Data[ 47349 ];

	ABioAI_Core_execMoveTowardLocation_Parms MoveTowardLocation_Parms;
	memcpy ( &MoveTowardLocation_Parms.vLocation, &vLocation, 0xC );
	MoveTowardLocation_Parms.fOffset = fOffset;

	pFnMoveTowardLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMoveTowardLocation, &MoveTowardLocation_Parms, NULL );

	pFnMoveTowardLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAI_Core.ReturnToPlaypen
// [0x00020002] 
// Parameters infos:

void ABioAI_Core::ReturnToPlaypen ( )
{
	static UFunction* pFnReturnToPlaypen = NULL;

	if ( ! pFnReturnToPlaypen )
		pFnReturnToPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 47347 ];

	ABioAI_Core_execReturnToPlaypen_Parms ReturnToPlaypen_Parms;

	this->ProcessEvent ( pFnReturnToPlaypen, &ReturnToPlaypen_Parms, NULL );
};

// Function SFXGame.BioAI_Core.GetTargetDifficulty
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

unsigned char ABioAI_Core::GetTargetDifficulty ( class AActor* oTarget )
{
	static UFunction* pFnGetTargetDifficulty = NULL;

	if ( ! pFnGetTargetDifficulty )
		pFnGetTargetDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 47342 ];

	ABioAI_Core_execGetTargetDifficulty_Parms GetTargetDifficulty_Parms;
	GetTargetDifficulty_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnGetTargetDifficulty, &GetTargetDifficulty_Parms, NULL );

	return GetTargetDifficulty_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.IsAttackTargetValid
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oAttackTarget                  ( CPF_Parm )
// unsigned long                  bTestShooting                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTestExposed                   ( CPF_OptionalParm | CPF_Parm )

bool ABioAI_Core::IsAttackTargetValid ( class APawn* oAttackTarget, unsigned long bTestShooting, unsigned long bTestExposed )
{
	static UFunction* pFnIsAttackTargetValid = NULL;

	if ( ! pFnIsAttackTargetValid )
		pFnIsAttackTargetValid = (UFunction*) UObject::GObjObjects()->Data[ 47334 ];

	ABioAI_Core_execIsAttackTargetValid_Parms IsAttackTargetValid_Parms;
	IsAttackTargetValid_Parms.oAttackTarget = oAttackTarget;
	IsAttackTargetValid_Parms.bTestShooting = bTestShooting;
	IsAttackTargetValid_Parms.bTestExposed = bTestExposed;

	this->ProcessEvent ( pFnIsAttackTargetValid, &IsAttackTargetValid_Parms, NULL );

	return IsAttackTargetValid_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetHealthPercentage
// [0x00024002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTestPawn                      ( CPF_OptionalParm | CPF_Parm )

float ABioAI_Core::GetHealthPercentage ( class APawn* oTestPawn )
{
	static UFunction* pFnGetHealthPercentage = NULL;

	if ( ! pFnGetHealthPercentage )
		pFnGetHealthPercentage = (UFunction*) UObject::GObjObjects()->Data[ 47328 ];

	ABioAI_Core_execGetHealthPercentage_Parms GetHealthPercentage_Parms;
	GetHealthPercentage_Parms.oTestPawn = oTestPawn;

	this->ProcessEvent ( pFnGetHealthPercentage, &GetHealthPercentage_Parms, NULL );

	return GetHealthPercentage_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetFollowTargets
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oFollow                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 vMoveTo                        ( CPF_Parm | CPF_OutParm )

void ABioAI_Core::eventGetFollowTargets ( class APawn** oFollow, struct FVector* vMoveTo )
{
	static UFunction* pFnGetFollowTargets = NULL;

	if ( ! pFnGetFollowTargets )
		pFnGetFollowTargets = (UFunction*) UObject::GObjObjects()->Data[ 47322 ];

	ABioAI_Core_eventGetFollowTargets_Parms GetFollowTargets_Parms;

	this->ProcessEvent ( pFnGetFollowTargets, &GetFollowTargets_Parms, NULL );

	if ( oFollow )
		*oFollow = GetFollowTargets_Parms.oFollow;

	if ( vMoveTo )
		memcpy ( vMoveTo, &GetFollowTargets_Parms.vMoveTo, 0xC );
};

// Function SFXGame.BioAI_Core.GetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ABioAI_Core::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 47319 ];

	ABioAI_Core_execGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.SetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )

void ABioAI_Core::SetTarget ( class AActor* oTarget )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 47316 ];

	ABioAI_Core_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );
};

// Function SFXGame.BioAI_Core.IsCoverPositionValid
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )
// int                            nRank                          ( CPF_Parm | CPF_OutParm )

bool ABioAI_Core::eventIsCoverPositionValid ( struct FVector vLocation, struct FRotator rRotation, int* nRank )
{
	static UFunction* pFnIsCoverPositionValid = NULL;

	if ( ! pFnIsCoverPositionValid )
		pFnIsCoverPositionValid = (UFunction*) UObject::GObjObjects()->Data[ 47303 ];

	ABioAI_Core_eventIsCoverPositionValid_Parms IsCoverPositionValid_Parms;
	memcpy ( &IsCoverPositionValid_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &IsCoverPositionValid_Parms.rRotation, &rRotation, 0xC );

	this->ProcessEvent ( pFnIsCoverPositionValid, &IsCoverPositionValid_Parms, NULL );

	if ( nRank )
		*nRank = IsCoverPositionValid_Parms.nRank;

	return IsCoverPositionValid_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.onStopFollowerHoldPosition
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_Core::eventonStopFollowerHoldPosition ( )
{
	static UFunction* pFnonStopFollowerHoldPosition = NULL;

	if ( ! pFnonStopFollowerHoldPosition )
		pFnonStopFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 47300 ];

	ABioAI_Core_eventonStopFollowerHoldPosition_Parms onStopFollowerHoldPosition_Parms;

	this->ProcessEvent ( pFnonStopFollowerHoldPosition, &onStopFollowerHoldPosition_Parms, NULL );
};

// Function SFXGame.BioAI_Core.onStartFollowerHoldPosition
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioSquadHoldMarker*     oHoldMarker                    ( CPF_Parm )

void ABioAI_Core::eventonStartFollowerHoldPosition ( class ABioSquadHoldMarker* oHoldMarker )
{
	static UFunction* pFnonStartFollowerHoldPosition = NULL;

	if ( ! pFnonStartFollowerHoldPosition )
		pFnonStartFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 47296 ];

	ABioAI_Core_eventonStartFollowerHoldPosition_Parms onStartFollowerHoldPosition_Parms;
	onStartFollowerHoldPosition_Parms.oHoldMarker = oHoldMarker;

	this->ProcessEvent ( pFnonStartFollowerHoldPosition, &onStartFollowerHoldPosition_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnLeftPlaypen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm )

void ABioAI_Core::eventOnLeftPlaypen ( class ANavigationPoint* oNavPoint )
{
	static UFunction* pFnOnLeftPlaypen = NULL;

	if ( ! pFnOnLeftPlaypen )
		pFnOnLeftPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 47294 ];

	ABioAI_Core_eventOnLeftPlaypen_Parms OnLeftPlaypen_Parms;
	OnLeftPlaypen_Parms.oNavPoint = oNavPoint;

	this->ProcessEvent ( pFnOnLeftPlaypen, &OnLeftPlaypen_Parms, NULL );
};

// Function SFXGame.BioAI_Core.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_Core::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47292 ];

	ABioAI_Core_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnLastManStanding
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioAI_Core::eventOnLastManStanding ( )
{
	static UFunction* pFnOnLastManStanding = NULL;

	if ( ! pFnOnLastManStanding )
		pFnOnLastManStanding = (UFunction*) UObject::GObjObjects()->Data[ 47291 ];

	ABioAI_Core_eventOnLastManStanding_Parms OnLastManStanding_Parms;

	this->ProcessEvent ( pFnOnLastManStanding, &OnLastManStanding_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioAI_Core::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 47288 ];

	ABioAI_Core_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnSquadSeen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oSquad                         ( CPF_Parm )

void ABioAI_Core::eventOnSquadSeen ( class AActor* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 47286 ];

	ABioAI_Core_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnActionComplete_Movement
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioAI_Core::eventOnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 47281 ];

	ABioAI_Core_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioAI_Core::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 47276 ];

	ABioAI_Core_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Core::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47272 ];

	ABioAI_Core_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Core.onDamagedInCover
// [0x00020002] 
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Core::onDamagedInCover ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnonDamagedInCover = NULL;

	if ( ! pFnonDamagedInCover )
		pFnonDamagedInCover = (UFunction*) UObject::GObjObjects()->Data[ 47269 ];

	ABioAI_Core_execonDamagedInCover_Parms onDamagedInCover_Parms;
	onDamagedInCover_Parms.oInstigator = oInstigator;
	onDamagedInCover_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnonDamagedInCover, &onDamagedInCover_Parms, NULL );
};

// Function SFXGame.BioAI_Core.HearNoise
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioAI_Core::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 47262 ];

	ABioAI_Core_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnCastAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioAI_Core::eventOnCastAt ( class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 47259 ];

	ABioAI_Core_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnAttacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioAI_Core::eventOnAttacked ( class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 47256 ];

	ABioAI_Core_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnAbilityDisabled
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAI_Core::eventOnAbilityDisabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityDisabled = NULL;

	if ( ! pFnOnAbilityDisabled )
		pFnOnAbilityDisabled = (UFunction*) UObject::GObjObjects()->Data[ 47253 ];

	ABioAI_Core_eventOnAbilityDisabled_Parms OnAbilityDisabled_Parms;
	OnAbilityDisabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityDisabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityDisabled, &OnAbilityDisabled_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnAbilityEnabled
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAI_Core::eventOnAbilityEnabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityEnabled = NULL;

	if ( ! pFnOnAbilityEnabled )
		pFnOnAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 47250 ];

	ABioAI_Core_eventOnAbilityEnabled_Parms OnAbilityEnabled_Parms;
	OnAbilityEnabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityEnabled, &OnAbilityEnabled_Parms, NULL );
};

// Function SFXGame.BioAI_Core.OnNoCombatAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_Core::eventOnNoCombatAction ( )
{
	static UFunction* pFnOnNoCombatAction = NULL;

	if ( ! pFnOnNoCombatAction )
		pFnOnNoCombatAction = (UFunction*) UObject::GObjObjects()->Data[ 47249 ];

	ABioAI_Core_eventOnNoCombatAction_Parms OnNoCombatAction_Parms;

	this->ProcessEvent ( pFnOnNoCombatAction, &OnNoCombatAction_Parms, NULL );
};

// Function SFXGame.BioAI_Core.ReactToAction
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oInstigator                    ( CPF_Parm )
// struct FName                   nmAction                       ( CPF_Parm )

bool ABioAI_Core::ReactToAction ( class APawn* oInstigator, struct FName nmAction )
{
	static UFunction* pFnReactToAction = NULL;

	if ( ! pFnReactToAction )
		pFnReactToAction = (UFunction*) UObject::GObjObjects()->Data[ 47245 ];

	ABioAI_Core_execReactToAction_Parms ReactToAction_Parms;
	ReactToAction_Parms.oInstigator = oInstigator;
	memcpy ( &ReactToAction_Parms.nmAction, &nmAction, 0x8 );

	this->ProcessEvent ( pFnReactToAction, &ReactToAction_Parms, NULL );

	return ReactToAction_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Core::EvaluateCapabilities ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateCapabilities = NULL;

	if ( ! pFnEvaluateCapabilities )
		pFnEvaluateCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47241 ];

	ABioAI_Core_execEvaluateCapabilities_Parms EvaluateCapabilities_Parms;
	EvaluateCapabilities_Parms.oTarget = oTarget;
	EvaluateCapabilities_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateCapabilities, &EvaluateCapabilities_Parms, NULL );

	return EvaluateCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateAttackCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )

bool ABioAI_Core::EvaluateAttackCapabilities ( class APawn* oTarget )
{
	static UFunction* pFnEvaluateAttackCapabilities = NULL;

	if ( ! pFnEvaluateAttackCapabilities )
		pFnEvaluateAttackCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47232 ];

	ABioAI_Core_execEvaluateAttackCapabilities_Parms EvaluateAttackCapabilities_Parms;
	EvaluateAttackCapabilities_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnEvaluateAttackCapabilities, &EvaluateAttackCapabilities_Parms, NULL );

	return EvaluateAttackCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateDefensiveCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Core::EvaluateDefensiveCapabilities ( )
{
	static UFunction* pFnEvaluateDefensiveCapabilities = NULL;

	if ( ! pFnEvaluateDefensiveCapabilities )
		pFnEvaluateDefensiveCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47225 ];

	ABioAI_Core_execEvaluateDefensiveCapabilities_Parms EvaluateDefensiveCapabilities_Parms;

	this->ProcessEvent ( pFnEvaluateDefensiveCapabilities, &EvaluateDefensiveCapabilities_Parms, NULL );

	return EvaluateDefensiveCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.PickNewTarget
// [0x00024002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLOSRequired                   ( CPF_OptionalParm | CPF_Parm )

class APawn* ABioAI_Core::PickNewTarget ( unsigned long bLOSRequired )
{
	static UFunction* pFnPickNewTarget = NULL;

	if ( ! pFnPickNewTarget )
		pFnPickNewTarget = (UFunction*) UObject::GObjObjects()->Data[ 47221 ];

	ABioAI_Core_execPickNewTarget_Parms PickNewTarget_Parms;
	PickNewTarget_Parms.bLOSRequired = bLOSRequired;

	this->ProcessEvent ( pFnPickNewTarget, &PickNewTarget_Parms, NULL );

	return PickNewTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateTargets
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Core::EvaluateTargets ( )
{
	static UFunction* pFnEvaluateTargets = NULL;

	if ( ! pFnEvaluateTargets )
		pFnEvaluateTargets = (UFunction*) UObject::GObjObjects()->Data[ 47216 ];

	ABioAI_Core_execEvaluateTargets_Parms EvaluateTargets_Parms;

	this->ProcessEvent ( pFnEvaluateTargets, &EvaluateTargets_Parms, NULL );

	return EvaluateTargets_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateCover
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLOS                           ( CPF_OptionalParm | CPF_Parm )

bool ABioAI_Core::EvaluateCover ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateCover = NULL;

	if ( ! pFnEvaluateCover )
		pFnEvaluateCover = (UFunction*) UObject::GObjObjects()->Data[ 47207 ];

	ABioAI_Core_execEvaluateCover_Parms EvaluateCover_Parms;
	EvaluateCover_Parms.oTarget = oTarget;
	EvaluateCover_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateCover, &EvaluateCover_Parms, NULL );

	return EvaluateCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetCoverLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioAI_Core::GetCoverLocation ( )
{
	static UFunction* pFnGetCoverLocation = NULL;

	if ( ! pFnGetCoverLocation )
		pFnGetCoverLocation = (UFunction*) UObject::GObjObjects()->Data[ 47205 ];

	ABioAI_Core_execGetCoverLocation_Parms GetCoverLocation_Parms;

	this->ProcessEvent ( pFnGetCoverLocation, &GetCoverLocation_Parms, NULL );

	return GetCoverLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetCoverBiasPoint
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioAI_Core::eventGetCoverBiasPoint ( )
{
	static UFunction* pFnGetCoverBiasPoint = NULL;

	if ( ! pFnGetCoverBiasPoint )
		pFnGetCoverBiasPoint = (UFunction*) UObject::GObjObjects()->Data[ 47202 ];

	ABioAI_Core_eventGetCoverBiasPoint_Parms GetCoverBiasPoint_Parms;

	this->ProcessEvent ( pFnGetCoverBiasPoint, &GetCoverBiasPoint_Parms, NULL );

	return GetCoverBiasPoint_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.ShouldUseCover
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Core::ShouldUseCover ( )
{
	static UFunction* pFnShouldUseCover = NULL;

	if ( ! pFnShouldUseCover )
		pFnShouldUseCover = (UFunction*) UObject::GObjObjects()->Data[ 47200 ];

	ABioAI_Core_execShouldUseCover_Parms ShouldUseCover_Parms;

	this->ProcessEvent ( pFnShouldUseCover, &ShouldUseCover_Parms, NULL );

	return ShouldUseCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateSteeringMovement
// [0x00020002] 
// Parameters infos:

void ABioAI_Core::EvaluateSteeringMovement ( )
{
	static UFunction* pFnEvaluateSteeringMovement = NULL;

	if ( ! pFnEvaluateSteeringMovement )
		pFnEvaluateSteeringMovement = (UFunction*) UObject::GObjObjects()->Data[ 47197 ];

	ABioAI_Core_execEvaluateSteeringMovement_Parms EvaluateSteeringMovement_Parms;

	this->ProcessEvent ( pFnEvaluateSteeringMovement, &EvaluateSteeringMovement_Parms, NULL );
};

// Function SFXGame.BioAI_Core.EvaluateMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Core::EvaluateMovement ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateMovement = NULL;

	if ( ! pFnEvaluateMovement )
		pFnEvaluateMovement = (UFunction*) UObject::GObjObjects()->Data[ 47192 ];

	ABioAI_Core_execEvaluateMovement_Parms EvaluateMovement_Parms;
	EvaluateMovement_Parms.oTarget = oTarget;
	EvaluateMovement_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateMovement, &EvaluateMovement_Parms, NULL );

	return EvaluateMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.EvaluateCombatActions
// [0x00020002] 
// Parameters infos:

void ABioAI_Core::EvaluateCombatActions ( )
{
	static UFunction* pFnEvaluateCombatActions = NULL;

	if ( ! pFnEvaluateCombatActions )
		pFnEvaluateCombatActions = (UFunction*) UObject::GObjObjects()->Data[ 47188 ];

	ABioAI_Core_execEvaluateCombatActions_Parms EvaluateCombatActions_Parms;

	this->ProcessEvent ( pFnEvaluateCombatActions, &EvaluateCombatActions_Parms, NULL );
};

// Function SFXGame.BioAI_Core.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioAI_Core::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47184 ];

	ABioAI_Core_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioAI_Core.AdjustSteeringMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm )

bool ABioAI_Core::AdjustSteeringMoveSpeed ( struct FVector vSteering )
{
	static UFunction* pFnAdjustSteeringMoveSpeed = NULL;

	if ( ! pFnAdjustSteeringMoveSpeed )
		pFnAdjustSteeringMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 47181 ];

	ABioAI_Core_execAdjustSteeringMoveSpeed_Parms AdjustSteeringMoveSpeed_Parms;
	memcpy ( &AdjustSteeringMoveSpeed_Parms.vSteering, &vSteering, 0xC );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSteeringMoveSpeed, &AdjustSteeringMoveSpeed_Parms, NULL );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= 0x400;

	return AdjustSteeringMoveSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_Core::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47178 ];

	ABioAI_Core_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.GetTargetPosition
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )

struct FVector ABioAI_Core::GetTargetPosition ( class APawn* oTarget )
{
	static UFunction* pFnGetTargetPosition = NULL;

	if ( ! pFnGetTargetPosition )
		pFnGetTargetPosition = (UFunction*) UObject::GObjObjects()->Data[ 47175 ];

	ABioAI_Core_execGetTargetPosition_Parms GetTargetPosition_Parms;
	GetTargetPosition_Parms.oTarget = oTarget;

	pFnGetTargetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetPosition, &GetTargetPosition_Parms, NULL );

	pFnGetTargetPosition->FunctionFlags |= 0x400;

	return GetTargetPosition_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.CheckReEvaluateCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Core::CheckReEvaluateCover ( unsigned long bLOS )
{
	static UFunction* pFnCheckReEvaluateCover = NULL;

	if ( ! pFnCheckReEvaluateCover )
		pFnCheckReEvaluateCover = (UFunction*) UObject::GObjObjects()->Data[ 47172 ];

	ABioAI_Core_execCheckReEvaluateCover_Parms CheckReEvaluateCover_Parms;
	CheckReEvaluateCover_Parms.bLOS = bLOS;

	pFnCheckReEvaluateCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckReEvaluateCover, &CheckReEvaluateCover_Parms, NULL );

	pFnCheckReEvaluateCover->FunctionFlags |= 0x400;

	return CheckReEvaluateCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Core.FindBestCover
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FCoverRecord            out_CoverRecord                ( CPF_Parm | CPF_OutParm )

bool ABioAI_Core::FindBestCover ( struct FVector vLocation, struct FCoverRecord* out_CoverRecord )
{
	static UFunction* pFnFindBestCover = NULL;

	if ( ! pFnFindBestCover )
		pFnFindBestCover = (UFunction*) UObject::GObjObjects()->Data[ 47168 ];

	ABioAI_Core_execFindBestCover_Parms FindBestCover_Parms;
	memcpy ( &FindBestCover_Parms.vLocation, &vLocation, 0xC );

	pFnFindBestCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindBestCover, &FindBestCover_Parms, NULL );

	pFnFindBestCover->FunctionFlags |= 0x400;

	if ( out_CoverRecord )
		memcpy ( out_CoverRecord, &FindBestCover_Parms.out_CoverRecord, 0x14 );

	return FindBestCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Drone.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_Drone::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47424 ];

	ABioAI_Drone_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyer.OnLeftPlaypen
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm )

void ABioAI_SarenFlyer::eventOnLeftPlaypen ( class ANavigationPoint* oNavPoint )
{
	static UFunction* pFnOnLeftPlaypen = NULL;

	if ( ! pFnOnLeftPlaypen )
		pFnOnLeftPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 47786 ];

	ABioAI_SarenFlyer_eventOnLeftPlaypen_Parms OnLeftPlaypen_Parms;
	OnLeftPlaypen_Parms.oNavPoint = oNavPoint;

	this->ProcessEvent ( pFnOnLeftPlaypen, &OnLeftPlaypen_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyer.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_SarenFlyer::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47783 ];

	ABioAI_SarenFlyer_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.DoesGameModeAllowMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::DoesGameModeAllowMovement ( )
{
	static UFunction* pFnDoesGameModeAllowMovement = NULL;

	if ( ! pFnDoesGameModeAllowMovement )
		pFnDoesGameModeAllowMovement = (UFunction*) UObject::GObjObjects()->Data[ 47615 ];

	ABioAI_Henchman_execDoesGameModeAllowMovement_Parms DoesGameModeAllowMovement_Parms;

	this->ProcessEvent ( pFnDoesGameModeAllowMovement, &DoesGameModeAllowMovement_Parms, NULL );

	return DoesGameModeAllowMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.CanUseSteeringMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::CanUseSteeringMovement ( )
{
	static UFunction* pFnCanUseSteeringMovement = NULL;

	if ( ! pFnCanUseSteeringMovement )
		pFnCanUseSteeringMovement = (UFunction*) UObject::GObjObjects()->Data[ 47607 ];

	ABioAI_Henchman_execCanUseSteeringMovement_Parms CanUseSteeringMovement_Parms;

	this->ProcessEvent ( pFnCanUseSteeringMovement, &CanUseSteeringMovement_Parms, NULL );

	return CanUseSteeringMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.CanUseStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::CanUseStack ( )
{
	static UFunction* pFnCanUseStack = NULL;

	if ( ! pFnCanUseStack )
		pFnCanUseStack = (UFunction*) UObject::GObjObjects()->Data[ 47605 ];

	ABioAI_Henchman_execCanUseStack_Parms CanUseStack_Parms;

	pFnCanUseStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseStack, &CanUseStack_Parms, NULL );

	pFnCanUseStack->FunctionFlags |= 0x400;

	return CanUseStack_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.CanUseQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::CanUseQueue ( )
{
	static UFunction* pFnCanUseQueue = NULL;

	if ( ! pFnCanUseQueue )
		pFnCanUseQueue = (UFunction*) UObject::GObjObjects()->Data[ 47603 ];

	ABioAI_Henchman_execCanUseQueue_Parms CanUseQueue_Parms;

	pFnCanUseQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseQueue, &CanUseQueue_Parms, NULL );

	pFnCanUseQueue->FunctionFlags |= 0x400;

	return CanUseQueue_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.CancelHoldPosition
// [0x00020002] 
// Parameters infos:

void ABioAI_Henchman::CancelHoldPosition ( )
{
	static UFunction* pFnCancelHoldPosition = NULL;

	if ( ! pFnCancelHoldPosition )
		pFnCancelHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 47582 ];

	ABioAI_Henchman_execCancelHoldPosition_Parms CancelHoldPosition_Parms;

	this->ProcessEvent ( pFnCancelHoldPosition, &CancelHoldPosition_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.RespondToBump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ABioAI_Henchman::RespondToBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnRespondToBump = NULL;

	if ( ! pFnRespondToBump )
		pFnRespondToBump = (UFunction*) UObject::GObjObjects()->Data[ 47577 ];

	ABioAI_Henchman_execRespondToBump_Parms RespondToBump_Parms;
	RespondToBump_Parms.Other = Other;
	memcpy ( &RespondToBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnRespondToBump, &RespondToBump_Parms, NULL );

	return RespondToBump_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.NotifyBump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ABioAI_Henchman::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 47573 ];

	ABioAI_Henchman_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.WantsToRun
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDistance                      ( CPF_Parm )

bool ABioAI_Henchman::WantsToRun ( float fDistance )
{
	static UFunction* pFnWantsToRun = NULL;

	if ( ! pFnWantsToRun )
		pFnWantsToRun = (UFunction*) UObject::GObjObjects()->Data[ 47570 ];

	ABioAI_Henchman_execWantsToRun_Parms WantsToRun_Parms;
	WantsToRun_Parms.fDistance = fDistance;

	this->ProcessEvent ( pFnWantsToRun, &WantsToRun_Parms, NULL );

	return WantsToRun_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioAI_Henchman::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 47564 ];

	ABioAI_Henchman_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Henchman::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47561 ];

	ABioAI_Henchman_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.HandleSteeringMovementFailed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::HandleSteeringMovementFailed ( )
{
	static UFunction* pFnHandleSteeringMovementFailed = NULL;

	if ( ! pFnHandleSteeringMovementFailed )
		pFnHandleSteeringMovementFailed = (UFunction*) UObject::GObjObjects()->Data[ 47554 ];

	ABioAI_Henchman_execHandleSteeringMovementFailed_Parms HandleSteeringMovementFailed_Parms;

	this->ProcessEvent ( pFnHandleSteeringMovementFailed, &HandleSteeringMovementFailed_Parms, NULL );

	return HandleSteeringMovementFailed_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetMoveOffset
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioAI_Henchman::GetMoveOffset ( )
{
	static UFunction* pFnGetMoveOffset = NULL;

	if ( ! pFnGetMoveOffset )
		pFnGetMoveOffset = (UFunction*) UObject::GObjObjects()->Data[ 47549 ];

	ABioAI_Henchman_execGetMoveOffset_Parms GetMoveOffset_Parms;

	this->ProcessEvent ( pFnGetMoveOffset, &GetMoveOffset_Parms, NULL );

	return GetMoveOffset_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetFollowTargets
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oFollow                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 vMoveTo                        ( CPF_Parm | CPF_OutParm )

void ABioAI_Henchman::eventGetFollowTargets ( class APawn** oFollow, struct FVector* vMoveTo )
{
	static UFunction* pFnGetFollowTargets = NULL;

	if ( ! pFnGetFollowTargets )
		pFnGetFollowTargets = (UFunction*) UObject::GObjObjects()->Data[ 47543 ];

	ABioAI_Henchman_eventGetFollowTargets_Parms GetFollowTargets_Parms;

	this->ProcessEvent ( pFnGetFollowTargets, &GetFollowTargets_Parms, NULL );

	if ( oFollow )
		*oFollow = GetFollowTargets_Parms.oFollow;

	if ( vMoveTo )
		memcpy ( vMoveTo, &GetFollowTargets_Parms.vMoveTo, 0xC );
};

// Function SFXGame.BioAI_Henchman.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioAI_Henchman::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 47539 ];

	ABioAI_Henchman_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_Henchman::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47538 ];

	ABioAI_Henchman_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioAI_Henchman::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47532 ];

	ABioAI_Henchman_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.GetPlayerProfile
// [0x00020002] 
// Parameters infos:
// class UBioGamerProfile*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioGamerProfile* ABioAI_Henchman::GetPlayerProfile ( )
{
	static UFunction* pFnGetPlayerProfile = NULL;

	if ( ! pFnGetPlayerProfile )
		pFnGetPlayerProfile = (UFunction*) UObject::GObjObjects()->Data[ 47527 ];

	ABioAI_Henchman_execGetPlayerProfile_Parms GetPlayerProfile_Parms;

	this->ProcessEvent ( pFnGetPlayerProfile, &GetPlayerProfile_Parms, NULL );

	return GetPlayerProfile_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetPlayerSquad
// [0x00020002] 
// Parameters infos:
// class ABioPlayerSquad*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPlayerSquad* ABioAI_Henchman::GetPlayerSquad ( )
{
	static UFunction* pFnGetPlayerSquad = NULL;

	if ( ! pFnGetPlayerSquad )
		pFnGetPlayerSquad = (UFunction*) UObject::GObjObjects()->Data[ 47525 ];

	ABioAI_Henchman_execGetPlayerSquad_Parms GetPlayerSquad_Parms;

	this->ProcessEvent ( pFnGetPlayerSquad, &GetPlayerSquad_Parms, NULL );

	return GetPlayerSquad_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.ReactToAction
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oInstigator                    ( CPF_Parm )
// struct FName                   nmAction                       ( CPF_Parm )

bool ABioAI_Henchman::ReactToAction ( class APawn* oInstigator, struct FName nmAction )
{
	static UFunction* pFnReactToAction = NULL;

	if ( ! pFnReactToAction )
		pFnReactToAction = (UFunction*) UObject::GObjObjects()->Data[ 47521 ];

	ABioAI_Henchman_execReactToAction_Parms ReactToAction_Parms;
	ReactToAction_Parms.oInstigator = oInstigator;
	memcpy ( &ReactToAction_Parms.nmAction, &nmAction, 0x8 );

	this->ProcessEvent ( pFnReactToAction, &ReactToAction_Parms, NULL );

	return ReactToAction_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetOutOfCombatCoverRank
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPos                           ( CPF_Parm )

int ABioAI_Henchman::GetOutOfCombatCoverRank ( struct FVector vPos )
{
	static UFunction* pFnGetOutOfCombatCoverRank = NULL;

	if ( ! pFnGetOutOfCombatCoverRank )
		pFnGetOutOfCombatCoverRank = (UFunction*) UObject::GObjObjects()->Data[ 47516 ];

	ABioAI_Henchman_execGetOutOfCombatCoverRank_Parms GetOutOfCombatCoverRank_Parms;
	memcpy ( &GetOutOfCombatCoverRank_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnGetOutOfCombatCoverRank, &GetOutOfCombatCoverRank_Parms, NULL );

	return GetOutOfCombatCoverRank_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.IsCoverPositionValid
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )
// int                            nRank                          ( CPF_Parm | CPF_OutParm )

bool ABioAI_Henchman::eventIsCoverPositionValid ( struct FVector vLocation, struct FRotator rRotation, int* nRank )
{
	static UFunction* pFnIsCoverPositionValid = NULL;

	if ( ! pFnIsCoverPositionValid )
		pFnIsCoverPositionValid = (UFunction*) UObject::GObjObjects()->Data[ 47510 ];

	ABioAI_Henchman_eventIsCoverPositionValid_Parms IsCoverPositionValid_Parms;
	memcpy ( &IsCoverPositionValid_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &IsCoverPositionValid_Parms.rRotation, &rRotation, 0xC );

	this->ProcessEvent ( pFnIsCoverPositionValid, &IsCoverPositionValid_Parms, NULL );

	if ( nRank )
		*nRank = IsCoverPositionValid_Parms.nRank;

	return IsCoverPositionValid_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetCoverLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioAI_Henchman::GetCoverLocation ( )
{
	static UFunction* pFnGetCoverLocation = NULL;

	if ( ! pFnGetCoverLocation )
		pFnGetCoverLocation = (UFunction*) UObject::GObjObjects()->Data[ 47506 ];

	ABioAI_Henchman_execGetCoverLocation_Parms GetCoverLocation_Parms;

	this->ProcessEvent ( pFnGetCoverLocation, &GetCoverLocation_Parms, NULL );

	return GetCoverLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.ShouldUseCover
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::ShouldUseCover ( )
{
	static UFunction* pFnShouldUseCover = NULL;

	if ( ! pFnShouldUseCover )
		pFnShouldUseCover = (UFunction*) UObject::GObjObjects()->Data[ 47501 ];

	ABioAI_Henchman_execShouldUseCover_Parms ShouldUseCover_Parms;

	this->ProcessEvent ( pFnShouldUseCover, &ShouldUseCover_Parms, NULL );

	return ShouldUseCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.IsWithinTetherRange
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::IsWithinTetherRange ( )
{
	static UFunction* pFnIsWithinTetherRange = NULL;

	if ( ! pFnIsWithinTetherRange )
		pFnIsWithinTetherRange = (UFunction*) UObject::GObjObjects()->Data[ 47494 ];

	ABioAI_Henchman_execIsWithinTetherRange_Parms IsWithinTetherRange_Parms;

	this->ProcessEvent ( pFnIsWithinTetherRange, &IsWithinTetherRange_Parms, NULL );

	return IsWithinTetherRange_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.EvaluateTargets
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::EvaluateTargets ( )
{
	static UFunction* pFnEvaluateTargets = NULL;

	if ( ! pFnEvaluateTargets )
		pFnEvaluateTargets = (UFunction*) UObject::GObjObjects()->Data[ 47488 ];

	ABioAI_Henchman_execEvaluateTargets_Parms EvaluateTargets_Parms;

	this->ProcessEvent ( pFnEvaluateTargets, &EvaluateTargets_Parms, NULL );

	return EvaluateTargets_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.EvaluateAttackCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )

bool ABioAI_Henchman::EvaluateAttackCapabilities ( class APawn* oTarget )
{
	static UFunction* pFnEvaluateAttackCapabilities = NULL;

	if ( ! pFnEvaluateAttackCapabilities )
		pFnEvaluateAttackCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47478 ];

	ABioAI_Henchman_execEvaluateAttackCapabilities_Parms EvaluateAttackCapabilities_Parms;
	EvaluateAttackCapabilities_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnEvaluateAttackCapabilities, &EvaluateAttackCapabilities_Parms, NULL );

	return EvaluateAttackCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.EvaluateDefensiveCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Henchman::EvaluateDefensiveCapabilities ( )
{
	static UFunction* pFnEvaluateDefensiveCapabilities = NULL;

	if ( ! pFnEvaluateDefensiveCapabilities )
		pFnEvaluateDefensiveCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47467 ];

	ABioAI_Henchman_execEvaluateDefensiveCapabilities_Parms EvaluateDefensiveCapabilities_Parms;

	this->ProcessEvent ( pFnEvaluateDefensiveCapabilities, &EvaluateDefensiveCapabilities_Parms, NULL );

	return EvaluateDefensiveCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.EvaluateCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Henchman::EvaluateCapabilities ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateCapabilities = NULL;

	if ( ! pFnEvaluateCapabilities )
		pFnEvaluateCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47462 ];

	ABioAI_Henchman_execEvaluateCapabilities_Parms EvaluateCapabilities_Parms;
	EvaluateCapabilities_Parms.oTarget = oTarget;
	EvaluateCapabilities_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateCapabilities, &EvaluateCapabilities_Parms, NULL );

	return EvaluateCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.EvaluateCombatActions
// [0x00020002] 
// Parameters infos:

void ABioAI_Henchman::EvaluateCombatActions ( )
{
	static UFunction* pFnEvaluateCombatActions = NULL;

	if ( ! pFnEvaluateCombatActions )
		pFnEvaluateCombatActions = (UFunction*) UObject::GObjObjects()->Data[ 47459 ];

	ABioAI_Henchman_execEvaluateCombatActions_Parms EvaluateCombatActions_Parms;

	this->ProcessEvent ( pFnEvaluateCombatActions, &EvaluateCombatActions_Parms, NULL );
};

// Function SFXGame.BioAI_Henchman.IsCoverPositionValid_Native
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )
// int                            nRank                          ( CPF_Parm | CPF_OutParm )

bool ABioAI_Henchman::IsCoverPositionValid_Native ( struct FVector vLocation, struct FRotator rRotation, int* nRank )
{
	static UFunction* pFnIsCoverPositionValid_Native = NULL;

	if ( ! pFnIsCoverPositionValid_Native )
		pFnIsCoverPositionValid_Native = (UFunction*) UObject::GObjObjects()->Data[ 47454 ];

	ABioAI_Henchman_execIsCoverPositionValid_Native_Parms IsCoverPositionValid_Native_Parms;
	memcpy ( &IsCoverPositionValid_Native_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &IsCoverPositionValid_Native_Parms.rRotation, &rRotation, 0xC );

	pFnIsCoverPositionValid_Native->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCoverPositionValid_Native, &IsCoverPositionValid_Native_Parms, NULL );

	pFnIsCoverPositionValid_Native->FunctionFlags |= 0x400;

	if ( nRank )
		*nRank = IsCoverPositionValid_Native_Parms.nRank;

	return IsCoverPositionValid_Native_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.AdjustSteeringMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm )

bool ABioAI_Henchman::AdjustSteeringMoveSpeed ( struct FVector vSteering )
{
	static UFunction* pFnAdjustSteeringMoveSpeed = NULL;

	if ( ! pFnAdjustSteeringMoveSpeed )
		pFnAdjustSteeringMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 47451 ];

	ABioAI_Henchman_execAdjustSteeringMoveSpeed_Parms AdjustSteeringMoveSpeed_Parms;
	memcpy ( &AdjustSteeringMoveSpeed_Parms.vSteering, &vSteering, 0xC );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSteeringMoveSpeed, &AdjustSteeringMoveSpeed_Parms, NULL );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= 0x400;

	return AdjustSteeringMoveSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Henchman.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_Henchman::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47448 ];

	ABioAI_Henchman_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Hopper.HearNoise
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioAI_Hopper::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 47658 ];

	ABioAI_Hopper_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioAI_Hopper.OnSquadSeen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oSquad                         ( CPF_Parm )

void ABioAI_Hopper::eventOnSquadSeen ( class AActor* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 47656 ];

	ABioAI_Hopper_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioAI_Hopper.OnActionComplete_Movement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioAI_Hopper::eventOnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 47651 ];

	ABioAI_Hopper_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioAI_Hopper.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioAI_Hopper::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 47646 ];

	ABioAI_Hopper_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioAI_Hopper.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Hopper::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47643 ];

	ABioAI_Hopper_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Hopper.EvaluateMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Hopper::EvaluateMovement ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateMovement = NULL;

	if ( ! pFnEvaluateMovement )
		pFnEvaluateMovement = (UFunction*) UObject::GObjObjects()->Data[ 47639 ];

	ABioAI_Hopper_execEvaluateMovement_Parms EvaluateMovement_Parms;
	EvaluateMovement_Parms.oTarget = oTarget;
	EvaluateMovement_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateMovement, &EvaluateMovement_Parms, NULL );

	return EvaluateMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Hopper.EvaluateCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Hopper::EvaluateCapabilities ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateCapabilities = NULL;

	if ( ! pFnEvaluateCapabilities )
		pFnEvaluateCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47634 ];

	ABioAI_Hopper_execEvaluateCapabilities_Parms EvaluateCapabilities_Parms;
	EvaluateCapabilities_Parms.oTarget = oTarget;
	EvaluateCapabilities_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateCapabilities, &EvaluateCapabilities_Parms, NULL );

	return EvaluateCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Hopper.Hop
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// float                          fMoveDelay                     ( CPF_OptionalParm | CPF_Parm )

bool ABioAI_Hopper::Hop ( class APawn* oTarget, float fMoveDelay )
{
	static UFunction* pFnHop = NULL;

	if ( ! pFnHop )
		pFnHop = (UFunction*) UObject::GObjObjects()->Data[ 47627 ];

	ABioAI_Hopper_execHop_Parms Hop_Parms;
	Hop_Parms.oTarget = oTarget;
	Hop_Parms.fMoveDelay = fMoveDelay;

	this->ProcessEvent ( pFnHop, &Hop_Parms, NULL );

	return Hop_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Hopper.FindHopperNode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioWP_Hopper*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pSource                        ( CPF_Parm )
// class APawn*                   pTarget                        ( CPF_Parm )

class ABioWP_Hopper* ABioAI_Hopper::FindHopperNode ( class APawn* pSource, class APawn* pTarget )
{
	static UFunction* pFnFindHopperNode = NULL;

	if ( ! pFnFindHopperNode )
		pFnFindHopperNode = (UFunction*) UObject::GObjObjects()->Data[ 47623 ];

	ABioAI_Hopper_execFindHopperNode_Parms FindHopperNode_Parms;
	FindHopperNode_Parms.pSource = pSource;
	FindHopperNode_Parms.pTarget = pTarget;

	pFnFindHopperNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindHopperNode, &FindHopperNode_Parms, NULL );

	pFnFindHopperNode->FunctionFlags |= 0x400;

	return FindHopperNode_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenBase.DebugDraw_Saren
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )

void ABioAI_SarenBase::DebugDraw_Saren ( class ABioHUD* HUD )
{
	static UFunction* pFnDebugDraw_Saren = NULL;

	if ( ! pFnDebugDraw_Saren )
		pFnDebugDraw_Saren = (UFunction*) UObject::GObjObjects()->Data[ 47773 ];

	ABioAI_SarenBase_execDebugDraw_Saren_Parms DebugDraw_Saren_Parms;
	DebugDraw_Saren_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDraw_Saren, &DebugDraw_Saren_Parms, NULL );
};

// Function SFXGame.BioAI_SarenBase.RefreshDebugWeights
// [0x00020000] 
// Parameters infos:
// unsigned long                  bEvalRocketPoints              ( CPF_Parm )

void ABioAI_SarenBase::RefreshDebugWeights ( unsigned long bEvalRocketPoints )
{
	static UFunction* pFnRefreshDebugWeights = NULL;

	if ( ! pFnRefreshDebugWeights )
		pFnRefreshDebugWeights = (UFunction*) UObject::GObjObjects()->Data[ 47771 ];

	ABioAI_SarenBase_execRefreshDebugWeights_Parms RefreshDebugWeights_Parms;
	RefreshDebugWeights_Parms.bEvalRocketPoints = bEvalRocketPoints;

	this->ProcessEvent ( pFnRefreshDebugWeights, &RefreshDebugWeights_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.UpdateBarrageLOS
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAI_SarenFlyerEND::UpdateBarrageLOS ( )
{
	static UFunction* pFnUpdateBarrageLOS = NULL;

	if ( ! pFnUpdateBarrageLOS )
		pFnUpdateBarrageLOS = (UFunction*) UObject::GObjObjects()->Data[ 47893 ];

	ABioAI_SarenFlyerEND_execUpdateBarrageLOS_Parms UpdateBarrageLOS_Parms;

	pFnUpdateBarrageLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateBarrageLOS, &UpdateBarrageLOS_Parms, NULL );

	pFnUpdateBarrageLOS->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAI_SarenFlyerEND.AdjustSteeringMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm )

bool ABioAI_SarenFlyerEND::AdjustSteeringMoveSpeed ( struct FVector vSteering )
{
	static UFunction* pFnAdjustSteeringMoveSpeed = NULL;

	if ( ! pFnAdjustSteeringMoveSpeed )
		pFnAdjustSteeringMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 47890 ];

	ABioAI_SarenFlyerEND_execAdjustSteeringMoveSpeed_Parms AdjustSteeringMoveSpeed_Parms;
	memcpy ( &AdjustSteeringMoveSpeed_Parms.vSteering, &vSteering, 0xC );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSteeringMoveSpeed, &AdjustSteeringMoveSpeed_Parms, NULL );

	pFnAdjustSteeringMoveSpeed->FunctionFlags |= 0x400;

	return AdjustSteeringMoveSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.GetSteeringVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSteering                      ( CPF_Parm | CPF_OutParm )

bool ABioAI_SarenFlyerEND::GetSteeringVector ( struct FVector* vSteering )
{
	static UFunction* pFnGetSteeringVector = NULL;

	if ( ! pFnGetSteeringVector )
		pFnGetSteeringVector = (UFunction*) UObject::GObjObjects()->Data[ 47887 ];

	ABioAI_SarenFlyerEND_execGetSteeringVector_Parms GetSteeringVector_Parms;

	pFnGetSteeringVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteeringVector, &GetSteeringVector_Parms, NULL );

	pFnGetSteeringVector->FunctionFlags |= 0x400;

	if ( vSteering )
		memcpy ( vSteering, &GetSteeringVector_Parms.vSteering, 0xC );

	return GetSteeringVector_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.EvaluateCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PawnTarget                     ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_SarenFlyerEND::EvaluateCapabilities ( class APawn* PawnTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateCapabilities = NULL;

	if ( ! pFnEvaluateCapabilities )
		pFnEvaluateCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 47879 ];

	ABioAI_SarenFlyerEND_execEvaluateCapabilities_Parms EvaluateCapabilities_Parms;
	EvaluateCapabilities_Parms.PawnTarget = PawnTarget;
	EvaluateCapabilities_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateCapabilities, &EvaluateCapabilities_Parms, NULL );

	return EvaluateCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.OnDamaged
// [0x00020002] 
// Parameters infos:
// class AController*             DamageInstigator               ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

void ABioAI_SarenFlyerEND::OnDamaged ( class AController* DamageInstigator, float Damage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47872 ];

	ABioAI_SarenFlyerEND_execOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.DamageInstigator = DamageInstigator;
	OnDamaged_Parms.Damage = Damage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.PeriodicMoveCheck
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenFlyerEND::PeriodicMoveCheck ( )
{
	static UFunction* pFnPeriodicMoveCheck = NULL;

	if ( ! pFnPeriodicMoveCheck )
		pFnPeriodicMoveCheck = (UFunction*) UObject::GObjObjects()->Data[ 47868 ];

	ABioAI_SarenFlyerEND_execPeriodicMoveCheck_Parms PeriodicMoveCheck_Parms;

	this->ProcessEvent ( pFnPeriodicMoveCheck, &PeriodicMoveCheck_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.RefreshDebugWeights
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEvalRocketPoints              ( CPF_Parm )

void ABioAI_SarenFlyerEND::RefreshDebugWeights ( unsigned long bEvalRocketPoints )
{
	static UFunction* pFnRefreshDebugWeights = NULL;

	if ( ! pFnRefreshDebugWeights )
		pFnRefreshDebugWeights = (UFunction*) UObject::GObjObjects()->Data[ 47858 ];

	ABioAI_SarenFlyerEND_execRefreshDebugWeights_Parms RefreshDebugWeights_Parms;
	RefreshDebugWeights_Parms.bEvalRocketPoints = bEvalRocketPoints;

	this->ProcessEvent ( pFnRefreshDebugWeights, &RefreshDebugWeights_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.DebugDraw_Saren
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )

void ABioAI_SarenFlyerEND::DebugDraw_Saren ( class ABioHUD* HUD )
{
	static UFunction* pFnDebugDraw_Saren = NULL;

	if ( ! pFnDebugDraw_Saren )
		pFnDebugDraw_Saren = (UFunction*) UObject::GObjObjects()->Data[ 47852 ];

	ABioAI_SarenFlyerEND_execDebugDraw_Saren_Parms DebugDraw_Saren_Parms;
	DebugDraw_Saren_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDraw_Saren, &DebugDraw_Saren_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.SelectMoveTarget
// [0x00424002] 
// Parameters infos:
// class ABioWP_AirPoint*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEvalRocketPoints              ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ABioWP_AirPoint*> Nodes                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class ABioWP_AirPoint* ABioAI_SarenFlyerEND::SelectMoveTarget ( unsigned long bEvalRocketPoints, struct TArray<class ABioWP_AirPoint*>* Nodes )
{
	static UFunction* pFnSelectMoveTarget = NULL;

	if ( ! pFnSelectMoveTarget )
		pFnSelectMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 47834 ];

	ABioAI_SarenFlyerEND_execSelectMoveTarget_Parms SelectMoveTarget_Parms;
	SelectMoveTarget_Parms.bEvalRocketPoints = bEvalRocketPoints;

	this->ProcessEvent ( pFnSelectMoveTarget, &SelectMoveTarget_Parms, NULL );

	if ( Nodes )
		memcpy ( Nodes, &SelectMoveTarget_Parms.Nodes, 0x10 );

	return SelectMoveTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.WeightByTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        N                              ( CPF_Parm )

float ABioAI_SarenFlyerEND::WeightByTime ( class ANavigationPoint* N )
{
	static UFunction* pFnWeightByTime = NULL;

	if ( ! pFnWeightByTime )
		pFnWeightByTime = (UFunction*) UObject::GObjObjects()->Data[ 47827 ];

	ABioAI_SarenFlyerEND_execWeightByTime_Parms WeightByTime_Parms;
	WeightByTime_Parms.N = N;

	this->ProcessEvent ( pFnWeightByTime, &WeightByTime_Parms, NULL );

	return WeightByTime_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.WeightByPlayerFacing
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )
// class ANavigationPoint*        N                              ( CPF_Parm )

float ABioAI_SarenFlyerEND::WeightByPlayerFacing ( class AActor* Player, class ANavigationPoint* N )
{
	static UFunction* pFnWeightByPlayerFacing = NULL;

	if ( ! pFnWeightByPlayerFacing )
		pFnWeightByPlayerFacing = (UFunction*) UObject::GObjObjects()->Data[ 47821 ];

	ABioAI_SarenFlyerEND_execWeightByPlayerFacing_Parms WeightByPlayerFacing_Parms;
	WeightByPlayerFacing_Parms.Player = Player;
	WeightByPlayerFacing_Parms.N = N;

	this->ProcessEvent ( pFnWeightByPlayerFacing, &WeightByPlayerFacing_Parms, NULL );

	return WeightByPlayerFacing_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.WeightByProximity
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

float ABioAI_SarenFlyerEND::WeightByProximity ( float Distance )
{
	static UFunction* pFnWeightByProximity = NULL;

	if ( ! pFnWeightByProximity )
		pFnWeightByProximity = (UFunction*) UObject::GObjObjects()->Data[ 47816 ];

	ABioAI_SarenFlyerEND_execWeightByProximity_Parms WeightByProximity_Parms;
	WeightByProximity_Parms.Distance = Distance;

	this->ProcessEvent ( pFnWeightByProximity, &WeightByProximity_Parms, NULL );

	return WeightByProximity_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.WeightByDistance
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

float ABioAI_SarenFlyerEND::WeightByDistance ( float Distance )
{
	static UFunction* pFnWeightByDistance = NULL;

	if ( ! pFnWeightByDistance )
		pFnWeightByDistance = (UFunction*) UObject::GObjObjects()->Data[ 47812 ];

	ABioAI_SarenFlyerEND_execWeightByDistance_Parms WeightByDistance_Parms;
	WeightByDistance_Parms.Distance = Distance;

	this->ProcessEvent ( pFnWeightByDistance, &WeightByDistance_Parms, NULL );

	return WeightByDistance_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerEND.SelectNewMoveGoal
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenFlyerEND::SelectNewMoveGoal ( )
{
	static UFunction* pFnSelectNewMoveGoal = NULL;

	if ( ! pFnSelectNewMoveGoal )
		pFnSelectNewMoveGoal = (UFunction*) UObject::GObjObjects()->Data[ 47811 ];

	ABioAI_SarenFlyerEND_execSelectNewMoveGoal_Parms SelectNewMoveGoal_Parms;

	this->ProcessEvent ( pFnSelectNewMoveGoal, &SelectNewMoveGoal_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.CollectNodes
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenFlyerEND::CollectNodes ( )
{
	static UFunction* pFnCollectNodes = NULL;

	if ( ! pFnCollectNodes )
		pFnCollectNodes = (UFunction*) UObject::GObjObjects()->Data[ 47806 ];

	ABioAI_SarenFlyerEND_execCollectNodes_Parms CollectNodes_Parms;

	this->ProcessEvent ( pFnCollectNodes, &CollectNodes_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.PawnDied
// [0x00020002] 
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )

void ABioAI_SarenFlyerEND::PawnDied ( class APawn* inPawn )
{
	static UFunction* pFnPawnDied = NULL;

	if ( ! pFnPawnDied )
		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 47803 ];

	ABioAI_SarenFlyerEND_execPawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.inPawn = inPawn;

	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
};

// Function SFXGame.BioAI_SarenFlyerEND.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenFlyerEND::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47791 ];

	ABioAI_SarenFlyerEND_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.UpdateBarrageLOS
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioAI_SarenHopperEND::UpdateBarrageLOS ( )
{
	static UFunction* pFnUpdateBarrageLOS = NULL;

	if ( ! pFnUpdateBarrageLOS )
		pFnUpdateBarrageLOS = (UFunction*) UObject::GObjObjects()->Data[ 48062 ];

	ABioAI_SarenHopperEND_execUpdateBarrageLOS_Parms UpdateBarrageLOS_Parms;

	pFnUpdateBarrageLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateBarrageLOS, &UpdateBarrageLOS_Parms, NULL );

	pFnUpdateBarrageLOS->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAI_SarenHopperEND.PeriodicMoveCheck
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenHopperEND::PeriodicMoveCheck ( )
{
	static UFunction* pFnPeriodicMoveCheck = NULL;

	if ( ! pFnPeriodicMoveCheck )
		pFnPeriodicMoveCheck = (UFunction*) UObject::GObjObjects()->Data[ 48028 ];

	ABioAI_SarenHopperEND_execPeriodicMoveCheck_Parms PeriodicMoveCheck_Parms;

	this->ProcessEvent ( pFnPeriodicMoveCheck, &PeriodicMoveCheck_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.OnActionComplete_Movement
// [0x00020002] 
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioAI_SarenHopperEND::OnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 48022 ];

	ABioAI_SarenHopperEND_execOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.OnDamaged
// [0x00020002] 
// Parameters infos:
// class AController*             DamageInstigator               ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

void ABioAI_SarenHopperEND::OnDamaged ( class AController* DamageInstigator, float Damage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 48017 ];

	ABioAI_SarenHopperEND_execOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.DamageInstigator = DamageInstigator;
	OnDamaged_Parms.Damage = Damage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.EvaluateCombatActions
// [0x00020000] 
// Parameters infos:

void ABioAI_SarenHopperEND::EvaluateCombatActions ( )
{
	static UFunction* pFnEvaluateCombatActions = NULL;

	if ( ! pFnEvaluateCombatActions )
		pFnEvaluateCombatActions = (UFunction*) UObject::GObjObjects()->Data[ 48016 ];

	ABioAI_SarenHopperEND_execEvaluateCombatActions_Parms EvaluateCombatActions_Parms;

	this->ProcessEvent ( pFnEvaluateCombatActions, &EvaluateCombatActions_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.RefreshDebugWeights
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEvalRocketPoints              ( CPF_Parm )

void ABioAI_SarenHopperEND::RefreshDebugWeights ( unsigned long bEvalRocketPoints )
{
	static UFunction* pFnRefreshDebugWeights = NULL;

	if ( ! pFnRefreshDebugWeights )
		pFnRefreshDebugWeights = (UFunction*) UObject::GObjObjects()->Data[ 48005 ];

	ABioAI_SarenHopperEND_execRefreshDebugWeights_Parms RefreshDebugWeights_Parms;
	RefreshDebugWeights_Parms.bEvalRocketPoints = bEvalRocketPoints;

	this->ProcessEvent ( pFnRefreshDebugWeights, &RefreshDebugWeights_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.SelectMoveTarget
// [0x00424002] 
// Parameters infos:
// class ABioWP_Hopper*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FScriptDelegate         ExcludeFunc                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEvalRocketPoints              ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ABioWP_Hopper*> Nodes                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class ABioWP_Hopper* ABioAI_SarenHopperEND::SelectMoveTarget ( struct FScriptDelegate ExcludeFunc, unsigned long bEvalRocketPoints, struct TArray<class ABioWP_Hopper*>* Nodes )
{
	static UFunction* pFnSelectMoveTarget = NULL;

	if ( ! pFnSelectMoveTarget )
		pFnSelectMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 47985 ];

	ABioAI_SarenHopperEND_execSelectMoveTarget_Parms SelectMoveTarget_Parms;
	memcpy ( &SelectMoveTarget_Parms.ExcludeFunc, &ExcludeFunc, 0x10 );
	SelectMoveTarget_Parms.bEvalRocketPoints = bEvalRocketPoints;

	this->ProcessEvent ( pFnSelectMoveTarget, &SelectMoveTarget_Parms, NULL );

	if ( Nodes )
		memcpy ( Nodes, &SelectMoveTarget_Parms.Nodes, 0x10 );

	return SelectMoveTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.ExcludeNonFloorNodes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        NavPoint                       ( CPF_Parm )

bool ABioAI_SarenHopperEND::ExcludeNonFloorNodes ( class ANavigationPoint* NavPoint )
{
	static UFunction* pFnExcludeNonFloorNodes = NULL;

	if ( ! pFnExcludeNonFloorNodes )
		pFnExcludeNonFloorNodes = (UFunction*) UObject::GObjObjects()->Data[ 47982 ];

	ABioAI_SarenHopperEND_execExcludeNonFloorNodes_Parms ExcludeNonFloorNodes_Parms;
	ExcludeNonFloorNodes_Parms.NavPoint = NavPoint;

	this->ProcessEvent ( pFnExcludeNonFloorNodes, &ExcludeNonFloorNodes_Parms, NULL );

	return ExcludeNonFloorNodes_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.ExcludeFloorNodes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        NavPoint                       ( CPF_Parm )

bool ABioAI_SarenHopperEND::ExcludeFloorNodes ( class ANavigationPoint* NavPoint )
{
	static UFunction* pFnExcludeFloorNodes = NULL;

	if ( ! pFnExcludeFloorNodes )
		pFnExcludeFloorNodes = (UFunction*) UObject::GObjObjects()->Data[ 47979 ];

	ABioAI_SarenHopperEND_execExcludeFloorNodes_Parms ExcludeFloorNodes_Parms;
	ExcludeFloorNodes_Parms.NavPoint = NavPoint;

	this->ProcessEvent ( pFnExcludeFloorNodes, &ExcludeFloorNodes_Parms, NULL );

	return ExcludeFloorNodes_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.WeightByTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        N                              ( CPF_Parm )

float ABioAI_SarenHopperEND::WeightByTime ( class ANavigationPoint* N )
{
	static UFunction* pFnWeightByTime = NULL;

	if ( ! pFnWeightByTime )
		pFnWeightByTime = (UFunction*) UObject::GObjObjects()->Data[ 47972 ];

	ABioAI_SarenHopperEND_execWeightByTime_Parms WeightByTime_Parms;
	WeightByTime_Parms.N = N;

	this->ProcessEvent ( pFnWeightByTime, &WeightByTime_Parms, NULL );

	return WeightByTime_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.WeightByPlayerFacing
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )
// class ANavigationPoint*        N                              ( CPF_Parm )

float ABioAI_SarenHopperEND::WeightByPlayerFacing ( class AActor* Player, class ANavigationPoint* N )
{
	static UFunction* pFnWeightByPlayerFacing = NULL;

	if ( ! pFnWeightByPlayerFacing )
		pFnWeightByPlayerFacing = (UFunction*) UObject::GObjObjects()->Data[ 47966 ];

	ABioAI_SarenHopperEND_execWeightByPlayerFacing_Parms WeightByPlayerFacing_Parms;
	WeightByPlayerFacing_Parms.Player = Player;
	WeightByPlayerFacing_Parms.N = N;

	this->ProcessEvent ( pFnWeightByPlayerFacing, &WeightByPlayerFacing_Parms, NULL );

	return WeightByPlayerFacing_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.WeightByProximity
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

float ABioAI_SarenHopperEND::WeightByProximity ( float Distance )
{
	static UFunction* pFnWeightByProximity = NULL;

	if ( ! pFnWeightByProximity )
		pFnWeightByProximity = (UFunction*) UObject::GObjObjects()->Data[ 47961 ];

	ABioAI_SarenHopperEND_execWeightByProximity_Parms WeightByProximity_Parms;
	WeightByProximity_Parms.Distance = Distance;

	this->ProcessEvent ( pFnWeightByProximity, &WeightByProximity_Parms, NULL );

	return WeightByProximity_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.WeightByDistance
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

float ABioAI_SarenHopperEND::WeightByDistance ( float Distance )
{
	static UFunction* pFnWeightByDistance = NULL;

	if ( ! pFnWeightByDistance )
		pFnWeightByDistance = (UFunction*) UObject::GObjObjects()->Data[ 47956 ];

	ABioAI_SarenHopperEND_execWeightByDistance_Parms WeightByDistance_Parms;
	WeightByDistance_Parms.Distance = Distance;

	this->ProcessEvent ( pFnWeightByDistance, &WeightByDistance_Parms, NULL );

	return WeightByDistance_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenHopperEND.CollectNodes
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenHopperEND::CollectNodes ( )
{
	static UFunction* pFnCollectNodes = NULL;

	if ( ! pFnCollectNodes )
		pFnCollectNodes = (UFunction*) UObject::GObjObjects()->Data[ 47951 ];

	ABioAI_SarenHopperEND_execCollectNodes_Parms CollectNodes_Parms;

	this->ProcessEvent ( pFnCollectNodes, &CollectNodes_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.PawnDied
// [0x00020002] 
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )

void ABioAI_SarenHopperEND::PawnDied ( class APawn* inPawn )
{
	static UFunction* pFnPawnDied = NULL;

	if ( ! pFnPawnDied )
		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 47949 ];

	ABioAI_SarenHopperEND_execPawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.inPawn = inPawn;

	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenHopperEND::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47939 ];

	ABioAI_SarenHopperEND_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_SarenHopperEND.ExcludeFilter
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        NavPoint                       ( CPF_Parm )

bool ABioAI_SarenHopperEND::ExcludeFilter ( class ANavigationPoint* NavPoint )
{
	static UFunction* pFnExcludeFilter = NULL;

	if ( ! pFnExcludeFilter )
		pFnExcludeFilter = (UFunction*) UObject::GObjObjects()->Data[ 47936 ];

	ABioAI_SarenHopperEND_execExcludeFilter_Parms ExcludeFilter_Parms;
	ExcludeFilter_Parms.NavPoint = NavPoint;

	this->ProcessEvent ( pFnExcludeFilter, &ExcludeFilter_Parms, NULL );

	return ExcludeFilter_Parms.ReturnValue;
};

// Function SFXGame.BioAnimNodeBlendBase.SetChildAnimTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UAnimNode*               oChild                         ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )

void UBioAnimNodeBlendBase::SetChildAnimTime ( class UAnimNode* oChild, float fTime )
{
	static UFunction* pFnSetChildAnimTime = NULL;

	if ( ! pFnSetChildAnimTime )
		pFnSetChildAnimTime = (UFunction*) UObject::GObjObjects()->Data[ 46127 ];

	UBioAnimNodeBlendBase_execSetChildAnimTime_Parms SetChildAnimTime_Parms;
	SetChildAnimTime_Parms.oChild = oChild;
	SetChildAnimTime_Parms.fTime = fTime;

	pFnSetChildAnimTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetChildAnimTime, &SetChildAnimTime_Parms, NULL );

	pFnSetChildAnimTime->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAnimNodeBlendAdditivePower.GetActivePower
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActivePower*         oActivePower                   ( CPF_Parm | CPF_OutParm )

bool UBioAnimNodeBlendAdditivePower::GetActivePower ( class UBioActivePower** oActivePower )
{
	static UFunction* pFnGetActivePower = NULL;

	if ( ! pFnGetActivePower )
		pFnGetActivePower = (UFunction*) UObject::GObjObjects()->Data[ 48118 ];

	UBioAnimNodeBlendAdditivePower_execGetActivePower_Parms GetActivePower_Parms;

	pFnGetActivePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActivePower, &GetActivePower_Parms, NULL );

	pFnGetActivePower->FunctionFlags |= 0x400;

	if ( oActivePower )
		*oActivePower = GetActivePower_Parms.oActivePower;

	return GetActivePower_Parms.ReturnValue;
};

// Function SFXGame.BioAnimNodeBlendByFireSequence.GetPlayRate
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UAnimNodeSequence*       Seq                            ( CPF_Parm )
// int                            ShotsPerCycle                  ( CPF_Parm )

float UBioAnimNodeBlendByFireSequence::eventGetPlayRate ( class UAnimNodeSequence* Seq, int ShotsPerCycle )
{
	static UFunction* pFnGetPlayRate = NULL;

	if ( ! pFnGetPlayRate )
		pFnGetPlayRate = (UFunction*) UObject::GObjObjects()->Data[ 48203 ];

	UBioAnimNodeBlendByFireSequence_eventGetPlayRate_Parms GetPlayRate_Parms;
	GetPlayRate_Parms.Seq = Seq;
	GetPlayRate_Parms.ShotsPerCycle = ShotsPerCycle;

	this->ProcessEvent ( pFnGetPlayRate, &GetPlayRate_Parms, NULL );

	return GetPlayRate_Parms.ReturnValue;
};

// Function SFXGame.BioAnimNodeBlendByPower.GetActivePower
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActivePower*         oActivePower                   ( CPF_Parm | CPF_OutParm )

bool UBioAnimNodeBlendByPower::GetActivePower ( class UBioActivePower** oActivePower )
{
	static UFunction* pFnGetActivePower = NULL;

	if ( ! pFnGetActivePower )
		pFnGetActivePower = (UFunction*) UObject::GObjObjects()->Data[ 48243 ];

	UBioAnimNodeBlendByPower_execGetActivePower_Parms GetActivePower_Parms;

	pFnGetActivePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActivePower, &GetActivePower_Parms, NULL );

	pFnGetActivePower->FunctionFlags |= 0x400;

	if ( oActivePower )
		*oActivePower = GetActivePower_Parms.oActivePower;

	return GetActivePower_Parms.ReturnValue;
};

// Function SFXGame.BioAnimNodeBlendByPower.Reset
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioAnimNodeBlendByPower::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 48242 ];

	UBioAnimNodeBlendByPower_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAnimNodeBlendByWeaponAction.PlayCurrentChildAnimation
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioAnimNodeBlendByWeaponAction::PlayCurrentChildAnimation ( )
{
	static UFunction* pFnPlayCurrentChildAnimation = NULL;

	if ( ! pFnPlayCurrentChildAnimation )
		pFnPlayCurrentChildAnimation = (UFunction*) UObject::GObjObjects()->Data[ 48252 ];

	UBioAnimNodeBlendByWeaponAction_execPlayCurrentChildAnimation_Parms PlayCurrentChildAnimation_Parms;

	pFnPlayCurrentChildAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayCurrentChildAnimation, &PlayCurrentChildAnimation_Parms, NULL );

	pFnPlayCurrentChildAnimation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAnimNodeCover2Transition.IgnorePlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// unsigned long                  bIgnore                        ( CPF_Parm )

void UBioAnimNodeCover2Transition::eventIgnorePlayerInput ( class ABioPawn* pPawn, unsigned long bIgnore )
{
	static UFunction* pFnIgnorePlayerInput = NULL;

	if ( ! pFnIgnorePlayerInput )
		pFnIgnorePlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 48490 ];

	UBioAnimNodeCover2Transition_eventIgnorePlayerInput_Parms IgnorePlayerInput_Parms;
	IgnorePlayerInput_Parms.pPawn = pPawn;
	IgnorePlayerInput_Parms.bIgnore = bIgnore;

	this->ProcessEvent ( pFnIgnorePlayerInput, &IgnorePlayerInput_Parms, NULL );
};

// Function SFXGame.BioAnimNodeFrame.CaptureAnimFrame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioAnimNodeFrame::CaptureAnimFrame ( )
{
	static UFunction* pFnCaptureAnimFrame = NULL;

	if ( ! pFnCaptureAnimFrame )
		pFnCaptureAnimFrame = (UFunction*) UObject::GObjObjects()->Data[ 48516 ];

	UBioAnimNodeFrame_execCaptureAnimFrame_Parms CaptureAnimFrame_Parms;

	pFnCaptureAnimFrame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCaptureAnimFrame, &CaptureAnimFrame_Parms, NULL );

	pFnCaptureAnimFrame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBlendByTransition.GotoToState
// [0x00020002] 
// Parameters infos:
// struct FName                   LoopAnim                       ( CPF_Parm )

void UBioArtPlaceableBlendByTransition::GotoToState ( struct FName LoopAnim )
{
	static UFunction* pFnGotoToState = NULL;

	if ( ! pFnGotoToState )
		pFnGotoToState = (UFunction*) UObject::GObjObjects()->Data[ 49721 ];

	UBioArtPlaceableBlendByTransition_execGotoToState_Parms GotoToState_Parms;
	memcpy ( &GotoToState_Parms.LoopAnim, &LoopAnim, 0x8 );

	this->ProcessEvent ( pFnGotoToState, &GotoToState_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBlendByTransition.TransitionToState
// [0x00020002] 
// Parameters infos:
// struct FName                   TransAnim                      ( CPF_Parm )
// struct FName                   LoopAnim                       ( CPF_Parm )

void UBioArtPlaceableBlendByTransition::TransitionToState ( struct FName TransAnim, struct FName LoopAnim )
{
	static UFunction* pFnTransitionToState = NULL;

	if ( ! pFnTransitionToState )
		pFnTransitionToState = (UFunction*) UObject::GObjObjects()->Data[ 49715 ];

	UBioArtPlaceableBlendByTransition_execTransitionToState_Parms TransitionToState_Parms;
	memcpy ( &TransitionToState_Parms.TransAnim, &TransAnim, 0x8 );
	memcpy ( &TransitionToState_Parms.LoopAnim, &LoopAnim, 0x8 );

	this->ProcessEvent ( pFnTransitionToState, &TransitionToState_Parms, NULL );
};

// Function SFXGame.SFXAnimNodeSequenceEyeFixup.SetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          NewTime                        ( CPF_Parm )
// unsigned long                  bFireNotifies                  ( CPF_Parm )

void USFXAnimNodeSequenceEyeFixup::SetPosition ( float NewTime, unsigned long bFireNotifies )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 66423 ];

	USFXAnimNodeSequenceEyeFixup_execSetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.NewTime = NewTime;
	SetPosition_Parms.bFireNotifies = bFireNotifies;

	pFnSetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );

	pFnSetPosition->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXAnimNodeSequenceEyeFixup.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXAnimNodeSequenceEyeFixup::StopAnim ( )
{
	static UFunction* pFnStopAnim = NULL;

	if ( ! pFnStopAnim )
		pFnStopAnim = (UFunction*) UObject::GObjObjects()->Data[ 66422 ];

	USFXAnimNodeSequenceEyeFixup_execStopAnim_Parms StopAnim_Parms;

	pFnStopAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopAnim, &StopAnim_Parms, NULL );

	pFnStopAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXAnimNodeSequenceEyeFixup.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// float                          InRate                         ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

void USFXAnimNodeSequenceEyeFixup::PlayAnim ( unsigned long bLoop, float InRate, float StartTime )
{
	static UFunction* pFnPlayAnim = NULL;

	if ( ! pFnPlayAnim )
		pFnPlayAnim = (UFunction*) UObject::GObjObjects()->Data[ 66418 ];

	USFXAnimNodeSequenceEyeFixup_execPlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.InRate = InRate;
	PlayAnim_Parms.StartTime = StartTime;

	pFnPlayAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAnim, &PlayAnim_Parms, NULL );

	pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXAnimNodeSequenceEyeFixup.SetAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Sequence                       ( CPF_Parm )

void USFXAnimNodeSequenceEyeFixup::SetAnim ( struct FName Sequence )
{
	static UFunction* pFnSetAnim = NULL;

	if ( ! pFnSetAnim )
		pFnSetAnim = (UFunction*) UObject::GObjObjects()->Data[ 66416 ];

	USFXAnimNodeSequenceEyeFixup_execSetAnim_Parms SetAnim_Parms;
	memcpy ( &SetAnim_Parms.Sequence, &Sequence, 0x8 );

	pFnSetAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAnim, &SetAnim_Parms, NULL );

	pFnSetAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseAppearance.GetModelByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

class USkeletalMesh* UBioBaseAppearance::GetModelByName ( struct FString S )
{
	static UFunction* pFnGetModelByName = NULL;

	if ( ! pFnGetModelByName )
		pFnGetModelByName = (UFunction*) UObject::GObjObjects()->Data[ 40233 ];

	UBioBaseAppearance_execGetModelByName_Parms GetModelByName_Parms;
	memcpy ( &GetModelByName_Parms.S, &S, 0x10 );

	pFnGetModelByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModelByName, &GetModelByName_Parms, NULL );

	pFnGetModelByName->FunctionFlags |= 0x400;

	return GetModelByName_Parms.ReturnValue;
};

// Function SFXGame.BioBaseAppearance.GetTargetZoneName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FName                   nmZoneName                     ( CPF_Parm | CPF_OutParm )

bool UBioBaseAppearance::GetTargetZoneName ( int nIndex, struct FName* nmZoneName )
{
	static UFunction* pFnGetTargetZoneName = NULL;

	if ( ! pFnGetTargetZoneName )
		pFnGetTargetZoneName = (UFunction*) UObject::GObjObjects()->Data[ 40229 ];

	UBioBaseAppearance_execGetTargetZoneName_Parms GetTargetZoneName_Parms;
	GetTargetZoneName_Parms.nIndex = nIndex;

	pFnGetTargetZoneName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneName, &GetTargetZoneName_Parms, NULL );

	pFnGetTargetZoneName->FunctionFlags |= 0x400;

	if ( nmZoneName )
		memcpy ( nmZoneName, &GetTargetZoneName_Parms.nmZoneName, 0x8 );

	return GetTargetZoneName_Parms.ReturnValue;
};

// Function SFXGame.BioBaseAppearance.GetTargetZoneLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// class USkeletalMeshComponent*  oMeshComponent                 ( CPF_Parm | CPF_EditInline )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )

bool UBioBaseAppearance::GetTargetZoneLocation ( int nIndex, class USkeletalMeshComponent* oMeshComponent, struct FVector* vLocation )
{
	static UFunction* pFnGetTargetZoneLocation = NULL;

	if ( ! pFnGetTargetZoneLocation )
		pFnGetTargetZoneLocation = (UFunction*) UObject::GObjObjects()->Data[ 40224 ];

	UBioBaseAppearance_execGetTargetZoneLocation_Parms GetTargetZoneLocation_Parms;
	GetTargetZoneLocation_Parms.nIndex = nIndex;
	GetTargetZoneLocation_Parms.oMeshComponent = oMeshComponent;

	pFnGetTargetZoneLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocation, &GetTargetZoneLocation_Parms, NULL );

	pFnGetTargetZoneLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetTargetZoneLocation_Parms.vLocation, 0xC );

	return GetTargetZoneLocation_Parms.ReturnValue;
};

// Function SFXGame.BioAppearanceItemSophisticated.GetPhysicsAsset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPhysicsAsset*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Variant                        ( CPF_Parm )

class UPhysicsAsset* UBioAppearanceItemSophisticated::GetPhysicsAsset ( int Variant )
{
	static UFunction* pFnGetPhysicsAsset = NULL;

	if ( ! pFnGetPhysicsAsset )
		pFnGetPhysicsAsset = (UFunction*) UObject::GObjObjects()->Data[ 48577 ];

	UBioAppearanceItemSophisticated_execGetPhysicsAsset_Parms GetPhysicsAsset_Parms;
	GetPhysicsAsset_Parms.Variant = Variant;

	pFnGetPhysicsAsset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPhysicsAsset, &GetPhysicsAsset_Parms, NULL );

	pFnGetPhysicsAsset->FunctionFlags |= 0x400;

	return GetPhysicsAsset_Parms.ReturnValue;
};

// Function SFXGame.BioAppearanceItemSophisticated.GetAnimationTree
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAnimTree*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Variant                        ( CPF_Parm )

class UAnimTree* UBioAppearanceItemSophisticated::GetAnimationTree ( int Variant )
{
	static UFunction* pFnGetAnimationTree = NULL;

	if ( ! pFnGetAnimationTree )
		pFnGetAnimationTree = (UFunction*) UObject::GObjObjects()->Data[ 48574 ];

	UBioAppearanceItemSophisticated_execGetAnimationTree_Parms GetAnimationTree_Parms;
	GetAnimationTree_Parms.Variant = Variant;

	pFnGetAnimationTree->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationTree, &GetAnimationTree_Parms, NULL );

	pFnGetAnimationTree->FunctionFlags |= 0x400;

	return GetAnimationTree_Parms.ReturnValue;
};

// Function SFXGame.BioAppearanceItemSophisticated.GetAnimationSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAnimSet*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Variant                        ( CPF_Parm )

class UAnimSet* UBioAppearanceItemSophisticated::GetAnimationSet ( int Variant )
{
	static UFunction* pFnGetAnimationSet = NULL;

	if ( ! pFnGetAnimationSet )
		pFnGetAnimationSet = (UFunction*) UObject::GObjObjects()->Data[ 48571 ];

	UBioAppearanceItemSophisticated_execGetAnimationSet_Parms GetAnimationSet_Parms;
	GetAnimationSet_Parms.Variant = Variant;

	pFnGetAnimationSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationSet, &GetAnimationSet_Parms, NULL );

	pFnGetAnimationSet->FunctionFlags |= 0x400;

	return GetAnimationSet_Parms.ReturnValue;
};

// Function SFXGame.BioAppearanceItemSophisticated.ApplyMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Variant                        ( CPF_Parm )
// class USkeletalMeshComponent*  SkeletalMeshComponent          ( CPF_Parm | CPF_EditInline )

void UBioAppearanceItemSophisticated::ApplyMaterials ( int Variant, class USkeletalMeshComponent* SkeletalMeshComponent )
{
	static UFunction* pFnApplyMaterials = NULL;

	if ( ! pFnApplyMaterials )
		pFnApplyMaterials = (UFunction*) UObject::GObjObjects()->Data[ 48568 ];

	UBioAppearanceItemSophisticated_execApplyMaterials_Parms ApplyMaterials_Parms;
	ApplyMaterials_Parms.Variant = Variant;
	ApplyMaterials_Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	pFnApplyMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyMaterials, &ApplyMaterials_Parms, NULL );

	pFnApplyMaterials->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAppearanceItemSophisticated.GetSkeletalMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Variant                        ( CPF_Parm )

class USkeletalMesh* UBioAppearanceItemSophisticated::GetSkeletalMesh ( int Variant )
{
	static UFunction* pFnGetSkeletalMesh = NULL;

	if ( ! pFnGetSkeletalMesh )
		pFnGetSkeletalMesh = (UFunction*) UObject::GObjObjects()->Data[ 48565 ];

	UBioAppearanceItemSophisticated_execGetSkeletalMesh_Parms GetSkeletalMesh_Parms;
	GetSkeletalMesh_Parms.Variant = Variant;

	pFnGetSkeletalMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkeletalMesh, &GetSkeletalMesh_Parms, NULL );

	pFnGetSkeletalMesh->FunctionFlags |= 0x400;

	return GetSkeletalMesh_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Body.GetMaterial
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ArmorType                      ( CPF_Parm )
// int                            ModelVar                       ( CPF_Parm )
// int                            MaterialVar                    ( CPF_Parm )
// struct TArray<class UMaterialInterface*> Materials                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBio_Appr_Character_Body::GetMaterial ( int ArmorType, int ModelVar, int MaterialVar, struct TArray<class UMaterialInterface*>* Materials )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 40568 ];

	UBio_Appr_Character_Body_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.ArmorType = ArmorType;
	GetMaterial_Parms.ModelVar = ModelVar;
	GetMaterial_Parms.MaterialVar = MaterialVar;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	if ( Materials )
		memcpy ( Materials, &GetMaterial_Parms.Materials, 0x10 );

	return GetMaterial_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Body.IsValidVariation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ArmorType                      ( CPF_Parm )
// int                            ModelVar                       ( CPF_Parm )
// int                            MaterialVar                    ( CPF_Parm )

bool UBio_Appr_Character_Body::IsValidVariation ( int ArmorType, int ModelVar, int MaterialVar )
{
	static UFunction* pFnIsValidVariation = NULL;

	if ( ! pFnIsValidVariation )
		pFnIsValidVariation = (UFunction*) UObject::GObjObjects()->Data[ 40563 ];

	UBio_Appr_Character_Body_execIsValidVariation_Parms IsValidVariation_Parms;
	IsValidVariation_Parms.ArmorType = ArmorType;
	IsValidVariation_Parms.ModelVar = ModelVar;
	IsValidVariation_Parms.MaterialVar = MaterialVar;

	pFnIsValidVariation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidVariation, &IsValidVariation_Parms, NULL );

	pFnIsValidVariation->FunctionFlags |= 0x400;

	return IsValidVariation_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Body.GetPhysics
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPhysicsAsset*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ArmorType                      ( CPF_Parm )
// int                            ModelVar                       ( CPF_Parm )

class UPhysicsAsset* UBio_Appr_Character_Body::GetPhysics ( int ArmorType, int ModelVar )
{
	static UFunction* pFnGetPhysics = NULL;

	if ( ! pFnGetPhysics )
		pFnGetPhysics = (UFunction*) UObject::GObjObjects()->Data[ 40559 ];

	UBio_Appr_Character_Body_execGetPhysics_Parms GetPhysics_Parms;
	GetPhysics_Parms.ArmorType = ArmorType;
	GetPhysics_Parms.ModelVar = ModelVar;

	pFnGetPhysics->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPhysics, &GetPhysics_Parms, NULL );

	pFnGetPhysics->FunctionFlags |= 0x400;

	return GetPhysics_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Body.GetPhysics_Name
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            ArmorType                      ( CPF_Parm )
// int                            ModelVar                       ( CPF_Parm )

struct FString UBio_Appr_Character_Body::GetPhysics_Name ( int ArmorType, int ModelVar )
{
	static UFunction* pFnGetPhysics_Name = NULL;

	if ( ! pFnGetPhysics_Name )
		pFnGetPhysics_Name = (UFunction*) UObject::GObjObjects()->Data[ 40555 ];

	UBio_Appr_Character_Body_execGetPhysics_Name_Parms GetPhysics_Name_Parms;
	GetPhysics_Name_Parms.ArmorType = ArmorType;
	GetPhysics_Name_Parms.ModelVar = ModelVar;

	pFnGetPhysics_Name->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPhysics_Name, &GetPhysics_Name_Parms, NULL );

	pFnGetPhysics_Name->FunctionFlags |= 0x400;

	return GetPhysics_Name_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Body.GetModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ArmorType                      ( CPF_Parm )
// int                            ModelVar                       ( CPF_Parm )

class USkeletalMesh* UBio_Appr_Character_Body::GetModel ( int ArmorType, int ModelVar )
{
	static UFunction* pFnGetModel = NULL;

	if ( ! pFnGetModel )
		pFnGetModel = (UFunction*) UObject::GObjObjects()->Data[ 40551 ];

	UBio_Appr_Character_Body_execGetModel_Parms GetModel_Parms;
	GetModel_Parms.ArmorType = ArmorType;
	GetModel_Parms.ModelVar = ModelVar;

	pFnGetModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModel, &GetModel_Parms, NULL );

	pFnGetModel->FunctionFlags |= 0x400;

	return GetModel_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Hair.GetModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* UBio_Appr_Character_Hair::GetModel ( )
{
	static UFunction* pFnGetModel = NULL;

	if ( ! pFnGetModel )
		pFnGetModel = (UFunction*) UObject::GObjObjects()->Data[ 40651 ];

	UBio_Appr_Character_Hair_execGetModel_Parms GetModel_Parms;

	pFnGetModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModel, &GetModel_Parms, NULL );

	pFnGetModel->FunctionFlags |= 0x400;

	return GetModel_Parms.ReturnValue;
};

// Function SFXGame.Bio_Appr_Character_Head.GetModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* UBio_Appr_Character_Head::GetModel ( )
{
	static UFunction* pFnGetModel = NULL;

	if ( ! pFnGetModel )
		pFnGetModel = (UFunction*) UObject::GObjObjects()->Data[ 40671 ];

	UBio_Appr_Character_Head_execGetModel_Parms GetModel_Parms;

	pFnGetModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModel, &GetModel_Parms, NULL );

	pFnGetModel->FunctionFlags |= 0x400;

	return GetModel_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioInterface_Appearance::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 45052 ];

	UBioInterface_Appearance_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance.ResetToDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInterface_Appearance::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 45051 ];

	UBioInterface_Appearance_execResetToDefaults_Parms ResetToDefaults_Parms;

	pFnResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );

	pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInterface_Appearance.UpdateAppearance
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceUpdate                   ( CPF_OptionalParm | CPF_Parm )

bool UBioInterface_Appearance::UpdateAppearance ( unsigned long bForceUpdate )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 45048 ];

	UBioInterface_Appearance_execUpdateAppearance_Parms UpdateAppearance_Parms;
	UpdateAppearance_Parms.bForceUpdate = bForceUpdate;

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;

	return UpdateAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioInterfaceAppearanceVehicle.ResetToDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInterfaceAppearanceVehicle::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 54765 ];

	UBioInterfaceAppearanceVehicle_execResetToDefaults_Parms ResetToDefaults_Parms;

	pFnResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );

	pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInterfaceAppearanceVehicle.UpdateAppearance
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceUpdate                   ( CPF_OptionalParm | CPF_Parm )

bool UBioInterfaceAppearanceVehicle::UpdateAppearance ( unsigned long bForceUpdate )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 54762 ];

	UBioInterfaceAppearanceVehicle_execUpdateAppearance_Parms UpdateAppearance_Parms;
	UpdateAppearance_Parms.bForceUpdate = bForceUpdate;

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;

	return UpdateAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_ArtPlaceable.UpdateAppearance
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceUpdate                   ( CPF_OptionalParm | CPF_Parm )

bool UBioInterface_Appearance_ArtPlaceable::UpdateAppearance ( unsigned long bForceUpdate )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 49258 ];

	UBioInterface_Appearance_ArtPlaceable_execUpdateAppearance_Parms UpdateAppearance_Parms;
	UpdateAppearance_Parms.bForceUpdate = bForceUpdate;

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;

	return UpdateAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.GetDefaultCollisionReadyHeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInterface_Appearance_Pawn::GetDefaultCollisionReadyHeight ( )
{
	static UFunction* pFnGetDefaultCollisionReadyHeight = NULL;

	if ( ! pFnGetDefaultCollisionReadyHeight )
		pFnGetDefaultCollisionReadyHeight = (UFunction*) UObject::GObjObjects()->Data[ 45122 ];

	UBioInterface_Appearance_Pawn_execGetDefaultCollisionReadyHeight_Parms GetDefaultCollisionReadyHeight_Parms;

	pFnGetDefaultCollisionReadyHeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultCollisionReadyHeight, &GetDefaultCollisionReadyHeight_Parms, NULL );

	pFnGetDefaultCollisionReadyHeight->FunctionFlags |= 0x400;

	return GetDefaultCollisionReadyHeight_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.GetDefaultCollisionCrouchHeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInterface_Appearance_Pawn::GetDefaultCollisionCrouchHeight ( )
{
	static UFunction* pFnGetDefaultCollisionCrouchHeight = NULL;

	if ( ! pFnGetDefaultCollisionCrouchHeight )
		pFnGetDefaultCollisionCrouchHeight = (UFunction*) UObject::GObjObjects()->Data[ 45120 ];

	UBioInterface_Appearance_Pawn_execGetDefaultCollisionCrouchHeight_Parms GetDefaultCollisionCrouchHeight_Parms;

	pFnGetDefaultCollisionCrouchHeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultCollisionCrouchHeight, &GetDefaultCollisionCrouchHeight_Parms, NULL );

	pFnGetDefaultCollisionCrouchHeight->FunctionFlags |= 0x400;

	return GetDefaultCollisionCrouchHeight_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.GetDefaultCollisionRadius
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInterface_Appearance_Pawn::GetDefaultCollisionRadius ( )
{
	static UFunction* pFnGetDefaultCollisionRadius = NULL;

	if ( ! pFnGetDefaultCollisionRadius )
		pFnGetDefaultCollisionRadius = (UFunction*) UObject::GObjObjects()->Data[ 45118 ];

	UBioInterface_Appearance_Pawn_execGetDefaultCollisionRadius_Parms GetDefaultCollisionRadius_Parms;

	pFnGetDefaultCollisionRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultCollisionRadius, &GetDefaultCollisionRadius_Parms, NULL );

	pFnGetDefaultCollisionRadius->FunctionFlags |= 0x400;

	return GetDefaultCollisionRadius_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.GetDefaultCollisionHeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInterface_Appearance_Pawn::GetDefaultCollisionHeight ( )
{
	static UFunction* pFnGetDefaultCollisionHeight = NULL;

	if ( ! pFnGetDefaultCollisionHeight )
		pFnGetDefaultCollisionHeight = (UFunction*) UObject::GObjObjects()->Data[ 45116 ];

	UBioInterface_Appearance_Pawn_execGetDefaultCollisionHeight_Parms GetDefaultCollisionHeight_Parms;

	pFnGetDefaultCollisionHeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultCollisionHeight, &GetDefaultCollisionHeight_Parms, NULL );

	pFnGetDefaultCollisionHeight->FunctionFlags |= 0x400;

	return GetDefaultCollisionHeight_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.SetCreatureSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   NewSpeedOverride               ( CPF_Parm )

void UBioInterface_Appearance_Pawn::SetCreatureSpeed ( struct FName NewSpeedOverride )
{
	static UFunction* pFnSetCreatureSpeed = NULL;

	if ( ! pFnSetCreatureSpeed )
		pFnSetCreatureSpeed = (UFunction*) UObject::GObjObjects()->Data[ 45114 ];

	UBioInterface_Appearance_Pawn_execSetCreatureSpeed_Parms SetCreatureSpeed_Parms;
	memcpy ( &SetCreatureSpeed_Parms.NewSpeedOverride, &NewSpeedOverride, 0x8 );

	pFnSetCreatureSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCreatureSpeed, &SetCreatureSpeed_Parms, NULL );

	pFnSetCreatureSpeed->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInterface_Appearance_Pawn.GetCreatureSpeeds
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FCreatureSpeeds         SpeedsRecord                   ( CPF_Parm | CPF_OutParm )

void UBioInterface_Appearance_Pawn::GetCreatureSpeeds ( struct FCreatureSpeeds* SpeedsRecord )
{
	static UFunction* pFnGetCreatureSpeeds = NULL;

	if ( ! pFnGetCreatureSpeeds )
		pFnGetCreatureSpeeds = (UFunction*) UObject::GObjObjects()->Data[ 45112 ];

	UBioInterface_Appearance_Pawn_execGetCreatureSpeeds_Parms GetCreatureSpeeds_Parms;

	pFnGetCreatureSpeeds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCreatureSpeeds, &GetCreatureSpeeds_Parms, NULL );

	pFnGetCreatureSpeeds->FunctionFlags |= 0x400;

	if ( SpeedsRecord )
		memcpy ( SpeedsRecord, &GetCreatureSpeeds_Parms.SpeedsRecord, 0x60 );
};

// Function SFXGame.BioInterface_Appearance_Pawn.UpdateAppearance
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceUpdate                   ( CPF_OptionalParm | CPF_Parm )

bool UBioInterface_Appearance_Pawn::UpdateAppearance ( unsigned long bForceUpdate )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 45109 ];

	UBioInterface_Appearance_Pawn_execUpdateAppearance_Parms UpdateAppearance_Parms;
	UpdateAppearance_Parms.bForceUpdate = bForceUpdate;

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;

	return UpdateAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioInterface_Appearance_Pawn.ExtractResources
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                Pawn                           ( CPF_Parm )
// class UBio_Appr_Character*     Appearance                     ( CPF_Parm )

void UBioInterface_Appearance_Pawn::ExtractResources ( class ABioPawn* Pawn, class UBio_Appr_Character* Appearance )
{
	static UFunction* pFnExtractResources = NULL;

	if ( ! pFnExtractResources )
		pFnExtractResources = (UFunction*) UObject::GObjObjects()->Data[ 45106 ];

	UBioInterface_Appearance_Pawn_execExtractResources_Parms ExtractResources_Parms;
	ExtractResources_Parms.Pawn = Pawn;
	ExtractResources_Parms.Appearance = Appearance;

	pFnExtractResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractResources, &ExtractResources_Parms, NULL );

	pFnExtractResources->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.DestroyedCleanupTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioArtPlaceable::eventDestroyedCleanupTimer ( )
{
	static UFunction* pFnDestroyedCleanupTimer = NULL;

	if ( ! pFnDestroyedCleanupTimer )
		pFnDestroyedCleanupTimer = (UFunction*) UObject::GObjObjects()->Data[ 49649 ];

	ABioArtPlaceable_eventDestroyedCleanupTimer_Parms DestroyedCleanupTimer_Parms;

	this->ProcessEvent ( pFnDestroyedCleanupTimer, &DestroyedCleanupTimer_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UInterpGroup*            InInterpGroup                  ( CPF_Parm )

void ABioArtPlaceable::eventFinishAnimControl ( class UInterpGroup* InInterpGroup )
{
	static UFunction* pFnFinishAnimControl = NULL;

	if ( ! pFnFinishAnimControl )
		pFnFinishAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 49647 ];

	ABioArtPlaceable_eventFinishAnimControl_Parms FinishAnimControl_Parms;
	FinishAnimControl_Parms.InInterpGroup = InInterpGroup;

	this->ProcessEvent ( pFnFinishAnimControl, &FinishAnimControl_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.SetAnimWeights
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct TArray<struct FAnimSlotInfo> SlotInfos                      ( CPF_Parm | CPF_NeedCtorLink )

void ABioArtPlaceable::eventSetAnimWeights ( struct TArray<struct FAnimSlotInfo> SlotInfos )
{
	static UFunction* pFnSetAnimWeights = NULL;

	if ( ! pFnSetAnimWeights )
		pFnSetAnimWeights = (UFunction*) UObject::GObjObjects()->Data[ 49644 ];

	ABioArtPlaceable_eventSetAnimWeights_Parms SetAnimWeights_Parms;
	memcpy ( &SetAnimWeights_Parms.SlotInfos, &SlotInfos, 0x10 );

	this->ProcessEvent ( pFnSetAnimWeights, &SetAnimWeights_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   SlotName                       ( CPF_Parm )
// int                            ChannelIndex                   ( CPF_Parm )
// struct FName                   InAnimSeqName                  ( CPF_Parm )
// float                          InPosition                     ( CPF_Parm )
// unsigned long                  bFireNotifies                  ( CPF_Parm )
// unsigned long                  bLooping                       ( CPF_Parm )

void ABioArtPlaceable::eventSetAnimPosition ( struct FName SlotName, int ChannelIndex, struct FName InAnimSeqName, float InPosition, unsigned long bFireNotifies, unsigned long bLooping )
{
	static UFunction* pFnSetAnimPosition = NULL;

	if ( ! pFnSetAnimPosition )
		pFnSetAnimPosition = (UFunction*) UObject::GObjObjects()->Data[ 49637 ];

	ABioArtPlaceable_eventSetAnimPosition_Parms SetAnimPosition_Parms;
	memcpy ( &SetAnimPosition_Parms.SlotName, &SlotName, 0x8 );
	SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy ( &SetAnimPosition_Parms.InAnimSeqName, &InAnimSeqName, 0x8 );
	SetAnimPosition_Parms.InPosition = InPosition;
	SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	SetAnimPosition_Parms.bLooping = bLooping;

	this->ProcessEvent ( pFnSetAnimPosition, &SetAnimPosition_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.BeginAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UInterpGroup*            InInterpGroup                  ( CPF_Parm )

void ABioArtPlaceable::eventBeginAnimControl ( class UInterpGroup* InInterpGroup )
{
	static UFunction* pFnBeginAnimControl = NULL;

	if ( ! pFnBeginAnimControl )
		pFnBeginAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 49633 ];

	ABioArtPlaceable_eventBeginAnimControl_Parms BeginAnimControl_Parms;
	BeginAnimControl_Parms.InInterpGroup = InInterpGroup;

	this->ProcessEvent ( pFnBeginAnimControl, &BeginAnimControl_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioArtPlaceable::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 49631 ];

	ABioArtPlaceable_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.OnSkillGameCanceled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )

void ABioArtPlaceable::eventOnSkillGameCanceled ( class ABioPawn* oUsingPawn )
{
	static UFunction* pFnOnSkillGameCanceled = NULL;

	if ( ! pFnOnSkillGameCanceled )
		pFnOnSkillGameCanceled = (UFunction*) UObject::GObjObjects()->Data[ 49628 ];

	ABioArtPlaceable_eventOnSkillGameCanceled_Parms OnSkillGameCanceled_Parms;
	OnSkillGameCanceled_Parms.oUsingPawn = oUsingPawn;

	this->ProcessEvent ( pFnOnSkillGameCanceled, &OnSkillGameCanceled_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.OnSkillGameSucceeded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )

void ABioArtPlaceable::eventOnSkillGameSucceeded ( class ABioPawn* oUsingPawn )
{
	static UFunction* pFnOnSkillGameSucceeded = NULL;

	if ( ! pFnOnSkillGameSucceeded )
		pFnOnSkillGameSucceeded = (UFunction*) UObject::GObjObjects()->Data[ 49625 ];

	ABioArtPlaceable_eventOnSkillGameSucceeded_Parms OnSkillGameSucceeded_Parms;
	OnSkillGameSucceeded_Parms.oUsingPawn = oUsingPawn;

	this->ProcessEvent ( pFnOnSkillGameSucceeded, &OnSkillGameSucceeded_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.OnSkillGameFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )

void ABioArtPlaceable::eventOnSkillGameFailed ( class ABioPawn* oUsingPawn )
{
	static UFunction* pFnOnSkillGameFailed = NULL;

	if ( ! pFnOnSkillGameFailed )
		pFnOnSkillGameFailed = (UFunction*) UObject::GObjObjects()->Data[ 49622 ];

	ABioArtPlaceable_eventOnSkillGameFailed_Parms OnSkillGameFailed_Parms;
	OnSkillGameFailed_Parms.oUsingPawn = oUsingPawn;

	this->ProcessEvent ( pFnOnSkillGameFailed, &OnSkillGameFailed_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.AbortReactive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmToState                      ( CPF_Parm )

void ABioArtPlaceable::eventAbortReactive ( struct FName nmToState )
{
	static UFunction* pFnAbortReactive = NULL;

	if ( ! pFnAbortReactive )
		pFnAbortReactive = (UFunction*) UObject::GObjObjects()->Data[ 49616 ];

	ABioArtPlaceable_eventAbortReactive_Parms AbortReactive_Parms;
	memcpy ( &AbortReactive_Parms.nmToState, &nmToState, 0x8 );

	this->ProcessEvent ( pFnAbortReactive, &AbortReactive_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.RigidBodyCollision
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioArtPlaceable::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 49611 ];

	ABioArtPlaceable_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x28 );
};

// Function SFXGame.BioArtPlaceable.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioArtPlaceable::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 49609 ];

	ABioArtPlaceable_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.RanInto
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioArtPlaceable::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 49603 ];

	ABioArtPlaceable_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.BioBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioArtPlaceable::BioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49601 ];

	ABioArtPlaceable_execBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioArtPlaceable.IsDynamicCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioArtPlaceable::IsDynamicCover ( )
{
	static UFunction* pFnIsDynamicCover = NULL;

	if ( ! pFnIsDynamicCover )
		pFnIsDynamicCover = (UFunction*) UObject::GObjObjects()->Data[ 49599 ];

	ABioArtPlaceable_execIsDynamicCover_Parms IsDynamicCover_Parms;

	pFnIsDynamicCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDynamicCover, &IsDynamicCover_Parms, NULL );

	pFnIsDynamicCover->FunctionFlags |= 0x400;

	return IsDynamicCover_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.InitializeForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::InitializeForPlay ( )
{
	static UFunction* pFnInitializeForPlay = NULL;

	if ( ! pFnInitializeForPlay )
		pFnInitializeForPlay = (UFunction*) UObject::GObjObjects()->Data[ 49598 ];

	ABioArtPlaceable_execInitializeForPlay_Parms InitializeForPlay_Parms;

	pFnInitializeForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForPlay, &InitializeForPlay_Parms, NULL );

	pFnInitializeForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.MAT_FinishAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::MAT_FinishAnimControl ( )
{
	static UFunction* pFnMAT_FinishAnimControl = NULL;

	if ( ! pFnMAT_FinishAnimControl )
		pFnMAT_FinishAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 49597 ];

	ABioArtPlaceable_execMAT_FinishAnimControl_Parms MAT_FinishAnimControl_Parms;

	pFnMAT_FinishAnimControl->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMAT_FinishAnimControl, &MAT_FinishAnimControl_Parms, NULL );

	pFnMAT_FinishAnimControl->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.MAT_SetAnimWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FAnimSlotInfo> SlotInfos                      ( CPF_Parm | CPF_NeedCtorLink )

void ABioArtPlaceable::MAT_SetAnimWeights ( struct TArray<struct FAnimSlotInfo> SlotInfos )
{
	static UFunction* pFnMAT_SetAnimWeights = NULL;

	if ( ! pFnMAT_SetAnimWeights )
		pFnMAT_SetAnimWeights = (UFunction*) UObject::GObjObjects()->Data[ 49594 ];

	ABioArtPlaceable_execMAT_SetAnimWeights_Parms MAT_SetAnimWeights_Parms;
	memcpy ( &MAT_SetAnimWeights_Parms.SlotInfos, &SlotInfos, 0x10 );

	pFnMAT_SetAnimWeights->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMAT_SetAnimWeights, &MAT_SetAnimWeights_Parms, NULL );

	pFnMAT_SetAnimWeights->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.MAT_SetAnimPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SlotName                       ( CPF_Parm )
// int                            ChannelIndex                   ( CPF_Parm )
// struct FName                   InAnimSeqName                  ( CPF_Parm )
// float                          InPosition                     ( CPF_Parm )
// unsigned long                  bFireNotifies                  ( CPF_Parm )
// unsigned long                  bLooping                       ( CPF_Parm )

void ABioArtPlaceable::MAT_SetAnimPosition ( struct FName SlotName, int ChannelIndex, struct FName InAnimSeqName, float InPosition, unsigned long bFireNotifies, unsigned long bLooping )
{
	static UFunction* pFnMAT_SetAnimPosition = NULL;

	if ( ! pFnMAT_SetAnimPosition )
		pFnMAT_SetAnimPosition = (UFunction*) UObject::GObjObjects()->Data[ 49587 ];

	ABioArtPlaceable_execMAT_SetAnimPosition_Parms MAT_SetAnimPosition_Parms;
	memcpy ( &MAT_SetAnimPosition_Parms.SlotName, &SlotName, 0x8 );
	MAT_SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy ( &MAT_SetAnimPosition_Parms.InAnimSeqName, &InAnimSeqName, 0x8 );
	MAT_SetAnimPosition_Parms.InPosition = InPosition;
	MAT_SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	MAT_SetAnimPosition_Parms.bLooping = bLooping;

	pFnMAT_SetAnimPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMAT_SetAnimPosition, &MAT_SetAnimPosition_Parms, NULL );

	pFnMAT_SetAnimPosition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.MAT_BeginAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class UAnimSet*> InAnimSets                     ( CPF_Parm | CPF_NeedCtorLink )

void ABioArtPlaceable::MAT_BeginAnimControl ( struct TArray<class UAnimSet*> InAnimSets )
{
	static UFunction* pFnMAT_BeginAnimControl = NULL;

	if ( ! pFnMAT_BeginAnimControl )
		pFnMAT_BeginAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 49584 ];

	ABioArtPlaceable_execMAT_BeginAnimControl_Parms MAT_BeginAnimControl_Parms;
	memcpy ( &MAT_BeginAnimControl_Parms.InAnimSets, &InAnimSets, 0x10 );

	pFnMAT_BeginAnimControl->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMAT_BeginAnimControl, &MAT_BeginAnimControl_Parms, NULL );

	pFnMAT_BeginAnimControl->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.EjectUsersOfAPCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::EjectUsersOfAPCover ( )
{
	static UFunction* pFnEjectUsersOfAPCover = NULL;

	if ( ! pFnEjectUsersOfAPCover )
		pFnEjectUsersOfAPCover = (UFunction*) UObject::GObjObjects()->Data[ 49583 ];

	ABioArtPlaceable_execEjectUsersOfAPCover_Parms EjectUsersOfAPCover_Parms;

	pFnEjectUsersOfAPCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEjectUsersOfAPCover, &EjectUsersOfAPCover_Parms, NULL );

	pFnEjectUsersOfAPCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.RemoveFromSquadCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::RemoveFromSquadCover ( )
{
	static UFunction* pFnRemoveFromSquadCover = NULL;

	if ( ! pFnRemoveFromSquadCover )
		pFnRemoveFromSquadCover = (UFunction*) UObject::GObjObjects()->Data[ 49582 ];

	ABioArtPlaceable_execRemoveFromSquadCover_Parms RemoveFromSquadCover_Parms;

	pFnRemoveFromSquadCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFromSquadCover, &RemoveFromSquadCover_Parms, NULL );

	pFnRemoveFromSquadCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.AddToSquadCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           oSquad                         ( CPF_Parm )

void ABioArtPlaceable::AddToSquadCover ( class ABioBaseSquad* oSquad )
{
	static UFunction* pFnAddToSquadCover = NULL;

	if ( ! pFnAddToSquadCover )
		pFnAddToSquadCover = (UFunction*) UObject::GObjObjects()->Data[ 49580 ];

	ABioArtPlaceable_execAddToSquadCover_Parms AddToSquadCover_Parms;
	AddToSquadCover_Parms.oSquad = oSquad;

	pFnAddToSquadCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddToSquadCover, &AddToSquadCover_Parms, NULL );

	pFnAddToSquadCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.BioDoProximityCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioArtPlaceable::BioDoProximityCheck ( )
{
	static UFunction* pFnBioDoProximityCheck = NULL;

	if ( ! pFnBioDoProximityCheck )
		pFnBioDoProximityCheck = (UFunction*) UObject::GObjObjects()->Data[ 49578 ];

	ABioArtPlaceable_execBioDoProximityCheck_Parms BioDoProximityCheck_Parms;

	pFnBioDoProximityCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioDoProximityCheck, &BioDoProximityCheck_Parms, NULL );

	pFnBioDoProximityCheck->FunctionFlags |= 0x400;

	return BioDoProximityCheck_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.DoTreasureTransfer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pOther                         ( CPF_Parm )

void ABioArtPlaceable::DoTreasureTransfer ( class ABioPawn* pOther )
{
	static UFunction* pFnDoTreasureTransfer = NULL;

	if ( ! pFnDoTreasureTransfer )
		pFnDoTreasureTransfer = (UFunction*) UObject::GObjObjects()->Data[ 49576 ];

	ABioArtPlaceable_execDoTreasureTransfer_Parms DoTreasureTransfer_Parms;
	DoTreasureTransfer_Parms.pOther = pOther;

	pFnDoTreasureTransfer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoTreasureTransfer, &DoTreasureTransfer_Parms, NULL );

	pFnDoTreasureTransfer->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.TermRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::TermRagdoll ( )
{
	static UFunction* pFnTermRagdoll = NULL;

	if ( ! pFnTermRagdoll )
		pFnTermRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 49575 ];

	ABioArtPlaceable_execTermRagdoll_Parms TermRagdoll_Parms;

	pFnTermRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTermRagdoll, &TermRagdoll_Parms, NULL );

	pFnTermRagdoll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.InitRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::InitRagdoll ( )
{
	static UFunction* pFnInitRagdoll = NULL;

	if ( ! pFnInitRagdoll )
		pFnInitRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 49574 ];

	ABioArtPlaceable_execInitRagdoll_Parms InitRagdoll_Parms;

	pFnInitRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRagdoll, &InitRagdoll_Parms, NULL );

	pFnInitRagdoll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.GetSlotRotation
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

struct FRotator ABioArtPlaceable::GetSlotRotation ( int SlotIdx )
{
	static UFunction* pFnGetSlotRotation = NULL;

	if ( ! pFnGetSlotRotation )
		pFnGetSlotRotation = (UFunction*) UObject::GObjObjects()->Data[ 49571 ];

	ABioArtPlaceable_execGetSlotRotation_Parms GetSlotRotation_Parms;
	GetSlotRotation_Parms.SlotIdx = SlotIdx;

	pFnGetSlotRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotRotation, &GetSlotRotation_Parms, NULL );

	pFnGetSlotRotation->FunctionFlags |= 0x400;

	return GetSlotRotation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetSlotLocation
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

struct FVector ABioArtPlaceable::GetSlotLocation ( int SlotIdx )
{
	static UFunction* pFnGetSlotLocation = NULL;

	if ( ! pFnGetSlotLocation )
		pFnGetSlotLocation = (UFunction*) UObject::GObjObjects()->Data[ 49568 ];

	ABioArtPlaceable_execGetSlotLocation_Parms GetSlotLocation_Parms;
	GetSlotLocation_Parms.SlotIdx = SlotIdx;

	pFnGetSlotLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotLocation, &GetSlotLocation_Parms, NULL );

	pFnGetSlotLocation->FunctionFlags |= 0x400;

	return GetSlotLocation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.DecBlocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int ABioArtPlaceable::DecBlocked ( int SlotIdx )
{
	static UFunction* pFnDecBlocked = NULL;

	if ( ! pFnDecBlocked )
		pFnDecBlocked = (UFunction*) UObject::GObjObjects()->Data[ 49565 ];

	ABioArtPlaceable_execDecBlocked_Parms DecBlocked_Parms;
	DecBlocked_Parms.SlotIdx = SlotIdx;

	pFnDecBlocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecBlocked, &DecBlocked_Parms, NULL );

	pFnDecBlocked->FunctionFlags |= 0x400;

	return DecBlocked_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.IncBlocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int ABioArtPlaceable::IncBlocked ( int SlotIdx )
{
	static UFunction* pFnIncBlocked = NULL;

	if ( ! pFnIncBlocked )
		pFnIncBlocked = (UFunction*) UObject::GObjObjects()->Data[ 49562 ];

	ABioArtPlaceable_execIncBlocked_Parms IncBlocked_Parms;
	IncBlocked_Parms.SlotIdx = SlotIdx;

	pFnIncBlocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncBlocked, &IncBlocked_Parms, NULL );

	pFnIncBlocked->FunctionFlags |= 0x400;

	return IncBlocked_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetAiCoverSpots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioArtPlaceable::GetAiCoverSpots ( )
{
	static UFunction* pFnGetAiCoverSpots = NULL;

	if ( ! pFnGetAiCoverSpots )
		pFnGetAiCoverSpots = (UFunction*) UObject::GObjObjects()->Data[ 49560 ];

	ABioArtPlaceable_execGetAiCoverSpots_Parms GetAiCoverSpots_Parms;

	pFnGetAiCoverSpots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiCoverSpots, &GetAiCoverSpots_Parms, NULL );

	pFnGetAiCoverSpots->FunctionFlags |= 0x400;

	return GetAiCoverSpots_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetSlotClaimedBy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

class AController* ABioArtPlaceable::GetSlotClaimedBy ( int SlotIdx )
{
	static UFunction* pFnGetSlotClaimedBy = NULL;

	if ( ! pFnGetSlotClaimedBy )
		pFnGetSlotClaimedBy = (UFunction*) UObject::GObjObjects()->Data[ 49557 ];

	ABioArtPlaceable_execGetSlotClaimedBy_Parms GetSlotClaimedBy_Parms;
	GetSlotClaimedBy_Parms.SlotIdx = SlotIdx;

	pFnGetSlotClaimedBy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotClaimedBy, &GetSlotClaimedBy_Parms, NULL );

	pFnGetSlotClaimedBy->FunctionFlags |= 0x400;

	return GetSlotClaimedBy_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetSlotClaimed
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )

bool ABioArtPlaceable::GetSlotClaimed ( int SlotIdx, class AController* oCtrl )
{
	static UFunction* pFnGetSlotClaimed = NULL;

	if ( ! pFnGetSlotClaimed )
		pFnGetSlotClaimed = (UFunction*) UObject::GObjObjects()->Data[ 49553 ];

	ABioArtPlaceable_execGetSlotClaimed_Parms GetSlotClaimed_Parms;
	GetSlotClaimed_Parms.SlotIdx = SlotIdx;
	GetSlotClaimed_Parms.oCtrl = oCtrl;

	pFnGetSlotClaimed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotClaimed, &GetSlotClaimed_Parms, NULL );

	pFnGetSlotClaimed->FunctionFlags |= 0x400;

	return GetSlotClaimed_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetSlotEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

bool ABioArtPlaceable::GetSlotEnabled ( int SlotIdx )
{
	static UFunction* pFnGetSlotEnabled = NULL;

	if ( ! pFnGetSlotEnabled )
		pFnGetSlotEnabled = (UFunction*) UObject::GObjObjects()->Data[ 49550 ];

	ABioArtPlaceable_execGetSlotEnabled_Parms GetSlotEnabled_Parms;
	GetSlotEnabled_Parms.SlotIdx = SlotIdx;

	pFnGetSlotEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotEnabled, &GetSlotEnabled_Parms, NULL );

	pFnGetSlotEnabled->FunctionFlags |= 0x400;

	return GetSlotEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetSlotType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

unsigned char ABioArtPlaceable::GetSlotType ( int SlotIdx )
{
	static UFunction* pFnGetSlotType = NULL;

	if ( ! pFnGetSlotType )
		pFnGetSlotType = (UFunction*) UObject::GObjObjects()->Data[ 49547 ];

	ABioArtPlaceable_execGetSlotType_Parms GetSlotType_Parms;
	GetSlotType_Parms.SlotIdx = SlotIdx;

	pFnGetSlotType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotType, &GetSlotType_Parms, NULL );

	pFnGetSlotType->FunctionFlags |= 0x400;

	return GetSlotType_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.UnClaim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             OldClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )
// unsigned long                  bUnclaimAll                    ( CPF_Parm )

void ABioArtPlaceable::UnClaim ( class AController* OldClaim, int SlotIdx, unsigned long bUnclaimAll )
{
	static UFunction* pFnUnClaim = NULL;

	if ( ! pFnUnClaim )
		pFnUnClaim = (UFunction*) UObject::GObjObjects()->Data[ 49543 ];

	ABioArtPlaceable_execUnClaim_Parms UnClaim_Parms;
	UnClaim_Parms.OldClaim = OldClaim;
	UnClaim_Parms.SlotIdx = SlotIdx;
	UnClaim_Parms.bUnclaimAll = bUnclaimAll;

	pFnUnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnClaim, &UnClaim_Parms, NULL );

	pFnUnClaim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.Claim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

bool ABioArtPlaceable::Claim ( class AController* NewClaim, int SlotIdx )
{
	static UFunction* pFnClaim = NULL;

	if ( ! pFnClaim )
		pFnClaim = (UFunction*) UObject::GObjObjects()->Data[ 49539 ];

	ABioArtPlaceable_execClaim_Parms Claim_Parms;
	Claim_Parms.NewClaim = NewClaim;
	Claim_Parms.SlotIdx = SlotIdx;

	pFnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaim, &Claim_Parms, NULL );

	pFnClaim->FunctionFlags |= 0x400;

	return Claim_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetStepFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int ABioArtPlaceable::GetStepFlags ( int SlotIdx )
{
	static UFunction* pFnGetStepFlags = NULL;

	if ( ! pFnGetStepFlags )
		pFnGetStepFlags = (UFunction*) UObject::GObjObjects()->Data[ 49536 ];

	ABioArtPlaceable_execGetStepFlags_Parms GetStepFlags_Parms;
	GetStepFlags_Parms.SlotIdx = SlotIdx;

	pFnGetStepFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStepFlags, &GetStepFlags_Parms, NULL );

	pFnGetStepFlags->FunctionFlags |= 0x400;

	return GetStepFlags_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.GetCoverSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FCoverSlot              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            nIdx                           ( CPF_Parm )

struct FCoverSlot ABioArtPlaceable::eventGetCoverSlot ( int nIdx )
{
	static UFunction* pFnGetCoverSlot = NULL;

	if ( ! pFnGetCoverSlot )
		pFnGetCoverSlot = (UFunction*) UObject::GObjObjects()->Data[ 49533 ];

	ABioArtPlaceable_eventGetCoverSlot_Parms GetCoverSlot_Parms;
	GetCoverSlot_Parms.nIdx = nIdx;

	this->ProcessEvent ( pFnGetCoverSlot, &GetCoverSlot_Parms, NULL );

	return GetCoverSlot_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceable.UpdateWpPointPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioArtPlaceable::UpdateWpPointPosition ( )
{
	static UFunction* pFnUpdateWpPointPosition = NULL;

	if ( ! pFnUpdateWpPointPosition )
		pFnUpdateWpPointPosition = (UFunction*) UObject::GObjObjects()->Data[ 49532 ];

	ABioArtPlaceable_execUpdateWpPointPosition_Parms UpdateWpPointPosition_Parms;

	pFnUpdateWpPointPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateWpPointPosition, &UpdateWpPointPosition_Parms, NULL );

	pFnUpdateWpPointPosition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceable.SetActionStationWP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        oWP                            ( CPF_Parm )
// struct FName                   nmSocket                       ( CPF_Parm )

void ABioArtPlaceable::SetActionStationWP ( class ANavigationPoint* oWP, struct FName nmSocket )
{
	static UFunction* pFnSetActionStationWP = NULL;

	if ( ! pFnSetActionStationWP )
		pFnSetActionStationWP = (UFunction*) UObject::GObjObjects()->Data[ 49529 ];

	ABioArtPlaceable_execSetActionStationWP_Parms SetActionStationWP_Parms;
	SetActionStationWP_Parms.oWP = oWP;
	memcpy ( &SetActionStationWP_Parms.nmSocket, &nmSocket, 0x8 );

	pFnSetActionStationWP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActionStationWP, &SetActionStationWP_Parms, NULL );

	pFnSetActionStationWP->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableShield.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fTimeDelta                     ( CPF_Parm )

void ABioArtPlaceableShield::eventTick ( float fTimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49812 ];

	ABioArtPlaceableShield_eventTick_Parms Tick_Parms;
	Tick_Parms.fTimeDelta = fTimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioDoor.CalcDistanceFromDoorPlane
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vWorldLocation                 ( CPF_Const | CPF_Parm | CPF_OutParm )

float ABioDoor::CalcDistanceFromDoorPlane ( struct FVector* vWorldLocation )
{
	static UFunction* pFnCalcDistanceFromDoorPlane = NULL;

	if ( ! pFnCalcDistanceFromDoorPlane )
		pFnCalcDistanceFromDoorPlane = (UFunction*) UObject::GObjObjects()->Data[ 52849 ];

	ABioDoor_execCalcDistanceFromDoorPlane_Parms CalcDistanceFromDoorPlane_Parms;

	pFnCalcDistanceFromDoorPlane->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDistanceFromDoorPlane, &CalcDistanceFromDoorPlane_Parms, NULL );

	pFnCalcDistanceFromDoorPlane->FunctionFlags |= 0x400;

	if ( vWorldLocation )
		memcpy ( vWorldLocation, &CalcDistanceFromDoorPlane_Parms.vWorldLocation, 0xC );

	return CalcDistanceFromDoorPlane_Parms.ReturnValue;
};

// Function SFXGame.BioDoor.BioDoProximityCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioDoor::BioDoProximityCheck ( )
{
	static UFunction* pFnBioDoProximityCheck = NULL;

	if ( ! pFnBioDoProximityCheck )
		pFnBioDoProximityCheck = (UFunction*) UObject::GObjObjects()->Data[ 52847 ];

	ABioDoor_execBioDoProximityCheck_Parms BioDoProximityCheck_Parms;

	pFnBioDoProximityCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioDoProximityCheck, &BioDoProximityCheck_Parms, NULL );

	pFnBioDoProximityCheck->FunctionFlags |= 0x400;

	return BioDoProximityCheck_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlot
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )
// struct FCoverSlot              Slot                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioArtPlaceableCoverInterface::GetSlot ( int SlotIdx, struct FCoverSlot* Slot )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = (UFunction*) UObject::GObjObjects()->Data[ 49773 ];

	UBioArtPlaceableCoverInterface_execGetSlot_Parms GetSlot_Parms;
	GetSlot_Parms.SlotIdx = SlotIdx;

	pFnGetSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	pFnGetSlot->FunctionFlags |= 0x400;

	if ( Slot )
		memcpy ( Slot, &GetSlot_Parms.Slot, 0xF4 );

	return GetSlot_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.DecBlocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int UBioArtPlaceableCoverInterface::DecBlocked ( int SlotIdx )
{
	static UFunction* pFnDecBlocked = NULL;

	if ( ! pFnDecBlocked )
		pFnDecBlocked = (UFunction*) UObject::GObjObjects()->Data[ 49770 ];

	UBioArtPlaceableCoverInterface_execDecBlocked_Parms DecBlocked_Parms;
	DecBlocked_Parms.SlotIdx = SlotIdx;

	pFnDecBlocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecBlocked, &DecBlocked_Parms, NULL );

	pFnDecBlocked->FunctionFlags |= 0x400;

	return DecBlocked_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.IncBlocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int UBioArtPlaceableCoverInterface::IncBlocked ( int SlotIdx )
{
	static UFunction* pFnIncBlocked = NULL;

	if ( ! pFnIncBlocked )
		pFnIncBlocked = (UFunction*) UObject::GObjObjects()->Data[ 49767 ];

	UBioArtPlaceableCoverInterface_execIncBlocked_Parms IncBlocked_Parms;
	IncBlocked_Parms.SlotIdx = SlotIdx;

	pFnIncBlocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncBlocked, &IncBlocked_Parms, NULL );

	pFnIncBlocked->FunctionFlags |= 0x400;

	return IncBlocked_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotClaimedBy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

class AController* UBioArtPlaceableCoverInterface::GetSlotClaimedBy ( int SlotIdx )
{
	static UFunction* pFnGetSlotClaimedBy = NULL;

	if ( ! pFnGetSlotClaimedBy )
		pFnGetSlotClaimedBy = (UFunction*) UObject::GObjObjects()->Data[ 49764 ];

	UBioArtPlaceableCoverInterface_execGetSlotClaimedBy_Parms GetSlotClaimedBy_Parms;
	GetSlotClaimedBy_Parms.SlotIdx = SlotIdx;

	pFnGetSlotClaimedBy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotClaimedBy, &GetSlotClaimedBy_Parms, NULL );

	pFnGetSlotClaimedBy->FunctionFlags |= 0x400;

	return GetSlotClaimedBy_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotClaimed
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )

bool UBioArtPlaceableCoverInterface::GetSlotClaimed ( int SlotIdx, class AController* oCtrl )
{
	static UFunction* pFnGetSlotClaimed = NULL;

	if ( ! pFnGetSlotClaimed )
		pFnGetSlotClaimed = (UFunction*) UObject::GObjObjects()->Data[ 49760 ];

	UBioArtPlaceableCoverInterface_execGetSlotClaimed_Parms GetSlotClaimed_Parms;
	GetSlotClaimed_Parms.SlotIdx = SlotIdx;
	GetSlotClaimed_Parms.oCtrl = oCtrl;

	pFnGetSlotClaimed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotClaimed, &GetSlotClaimed_Parms, NULL );

	pFnGetSlotClaimed->FunctionFlags |= 0x400;

	return GetSlotClaimed_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

bool UBioArtPlaceableCoverInterface::GetSlotEnabled ( int SlotIdx )
{
	static UFunction* pFnGetSlotEnabled = NULL;

	if ( ! pFnGetSlotEnabled )
		pFnGetSlotEnabled = (UFunction*) UObject::GObjObjects()->Data[ 49757 ];

	UBioArtPlaceableCoverInterface_execGetSlotEnabled_Parms GetSlotEnabled_Parms;
	GetSlotEnabled_Parms.SlotIdx = SlotIdx;

	pFnGetSlotEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotEnabled, &GetSlotEnabled_Parms, NULL );

	pFnGetSlotEnabled->FunctionFlags |= 0x400;

	return GetSlotEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

unsigned char UBioArtPlaceableCoverInterface::GetSlotType ( int SlotIdx )
{
	static UFunction* pFnGetSlotType = NULL;

	if ( ! pFnGetSlotType )
		pFnGetSlotType = (UFunction*) UObject::GObjObjects()->Data[ 49754 ];

	UBioArtPlaceableCoverInterface_execGetSlotType_Parms GetSlotType_Parms;
	GetSlotType_Parms.SlotIdx = SlotIdx;

	pFnGetSlotType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotType, &GetSlotType_Parms, NULL );

	pFnGetSlotType->FunctionFlags |= 0x400;

	return GetSlotType_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetStepFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

int UBioArtPlaceableCoverInterface::GetStepFlags ( int SlotIdx )
{
	static UFunction* pFnGetStepFlags = NULL;

	if ( ! pFnGetStepFlags )
		pFnGetStepFlags = (UFunction*) UObject::GObjObjects()->Data[ 49751 ];

	UBioArtPlaceableCoverInterface_execGetStepFlags_Parms GetStepFlags_Parms;
	GetStepFlags_Parms.SlotIdx = SlotIdx;

	pFnGetStepFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStepFlags, &GetStepFlags_Parms, NULL );

	pFnGetStepFlags->FunctionFlags |= 0x400;

	return GetStepFlags_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.UnClaim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             OldClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )
// unsigned long                  bUnclaimAll                    ( CPF_Parm )

void UBioArtPlaceableCoverInterface::UnClaim ( class AController* OldClaim, int SlotIdx, unsigned long bUnclaimAll )
{
	static UFunction* pFnUnClaim = NULL;

	if ( ! pFnUnClaim )
		pFnUnClaim = (UFunction*) UObject::GObjObjects()->Data[ 49747 ];

	UBioArtPlaceableCoverInterface_execUnClaim_Parms UnClaim_Parms;
	UnClaim_Parms.OldClaim = OldClaim;
	UnClaim_Parms.SlotIdx = SlotIdx;
	UnClaim_Parms.bUnclaimAll = bUnclaimAll;

	pFnUnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnClaim, &UnClaim_Parms, NULL );

	pFnUnClaim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableCoverInterface.Claim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

bool UBioArtPlaceableCoverInterface::Claim ( class AController* NewClaim, int SlotIdx )
{
	static UFunction* pFnClaim = NULL;

	if ( ! pFnClaim )
		pFnClaim = (UFunction*) UObject::GObjObjects()->Data[ 49743 ];

	UBioArtPlaceableCoverInterface_execClaim_Parms Claim_Parms;
	Claim_Parms.NewClaim = NewClaim;
	Claim_Parms.SlotIdx = SlotIdx;

	pFnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaim, &Claim_Parms, NULL );

	pFnClaim->FunctionFlags |= 0x400;

	return Claim_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioArtPlaceableCoverInterface::GetSlotCount ( )
{
	static UFunction* pFnGetSlotCount = NULL;

	if ( ! pFnGetSlotCount )
		pFnGetSlotCount = (UFunction*) UObject::GObjObjects()->Data[ 49741 ];

	UBioArtPlaceableCoverInterface_execGetSlotCount_Parms GetSlotCount_Parms;

	pFnGetSlotCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotCount, &GetSlotCount_Parms, NULL );

	pFnGetSlotCount->FunctionFlags |= 0x400;

	return GetSlotCount_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSlotID                        ( CPF_Parm )

struct FRotator UBioArtPlaceableCoverInterface::GetSlotRotation ( int nSlotID )
{
	static UFunction* pFnGetSlotRotation = NULL;

	if ( ! pFnGetSlotRotation )
		pFnGetSlotRotation = (UFunction*) UObject::GObjObjects()->Data[ 49738 ];

	UBioArtPlaceableCoverInterface_execGetSlotRotation_Parms GetSlotRotation_Parms;
	GetSlotRotation_Parms.nSlotID = nSlotID;

	pFnGetSlotRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotRotation, &GetSlotRotation_Parms, NULL );

	pFnGetSlotRotation->FunctionFlags |= 0x400;

	return GetSlotRotation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetSlotLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSlotID                        ( CPF_Parm )

struct FVector UBioArtPlaceableCoverInterface::GetSlotLocation ( int nSlotID )
{
	static UFunction* pFnGetSlotLocation = NULL;

	if ( ! pFnGetSlotLocation )
		pFnGetSlotLocation = (UFunction*) UObject::GObjObjects()->Data[ 49735 ];

	UBioArtPlaceableCoverInterface_execGetSlotLocation_Parms GetSlotLocation_Parms;
	GetSlotLocation_Parms.nSlotID = nSlotID;

	pFnGetSlotLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotLocation, &GetSlotLocation_Parms, NULL );

	pFnGetSlotLocation->FunctionFlags |= 0x400;

	return GetSlotLocation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.GetCoverObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UBioArtPlaceableCoverInterface::GetCoverObject ( )
{
	static UFunction* pFnGetCoverObject = NULL;

	if ( ! pFnGetCoverObject )
		pFnGetCoverObject = (UFunction*) UObject::GObjObjects()->Data[ 49733 ];

	UBioArtPlaceableCoverInterface_execGetCoverObject_Parms GetCoverObject_Parms;

	pFnGetCoverObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCoverObject, &GetCoverObject_Parms, NULL );

	pFnGetCoverObject->FunctionFlags |= 0x400;

	return GetCoverObject_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableCoverInterface.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioArtPlaceableCoverInterface::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 49732 ];

	UBioArtPlaceableCoverInterface_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableCoverInterface.InitFromActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oAct                           ( CPF_Parm )

void UBioArtPlaceableCoverInterface::InitFromActor ( class AActor* oAct )
{
	static UFunction* pFnInitFromActor = NULL;

	if ( ! pFnInitFromActor )
		pFnInitFromActor = (UFunction*) UObject::GObjObjects()->Data[ 49730 ];

	UBioArtPlaceableCoverInterface_execInitFromActor_Parms InitFromActor_Parms;
	InitFromActor_Parms.oAct = oAct;

	pFnInitFromActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitFromActor, &InitFromActor_Parms, NULL );

	pFnInitFromActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableCoverInterface.IsValid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableCoverInterface::IsValid ( )
{
	static UFunction* pFnIsValid = NULL;

	if ( ! pFnIsValid )
		pFnIsValid = (UFunction*) UObject::GObjObjects()->Data[ 49728 ];

	UBioArtPlaceableCoverInterface_execIsValid_Parms IsValid_Parms;

	pFnIsValid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValid, &IsValid_Parms, NULL );

	pFnIsValid->FunctionFlags |= 0x400;

	return IsValid_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.IntToString
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FBioComplexIntStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FString UBioAttributes::IntToString ( struct FBioComplexIntStructAttribute* attribute )
{
	static UFunction* pFnIntToString = NULL;

	if ( ! pFnIntToString )
		pFnIntToString = (UFunction*) UObject::GObjObjects()->Data[ 40418 ];

	UBioAttributes_execIntToString_Parms IntToString_Parms;

	pFnIntToString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIntToString, &IntToString_Parms, NULL );

	pFnIntToString->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &IntToString_Parms.attribute, 0x88 );

	return IntToString_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.GetBaseIntValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioComplexIntStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int UBioAttributes::GetBaseIntValue ( struct FBioComplexIntStructAttribute* attribute )
{
	static UFunction* pFnGetBaseIntValue = NULL;

	if ( ! pFnGetBaseIntValue )
		pFnGetBaseIntValue = (UFunction*) UObject::GObjObjects()->Data[ 40415 ];

	UBioAttributes_execGetBaseIntValue_Parms GetBaseIntValue_Parms;

	pFnGetBaseIntValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBaseIntValue, &GetBaseIntValue_Parms, NULL );

	pFnGetBaseIntValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &GetBaseIntValue_Parms.attribute, 0x88 );

	return GetBaseIntValue_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.SetBaseIntValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            baseValue                      ( CPF_Parm )
// struct FBioComplexIntStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioAttributes::SetBaseIntValue ( int baseValue, struct FBioComplexIntStructAttribute* attribute )
{
	static UFunction* pFnSetBaseIntValue = NULL;

	if ( ! pFnSetBaseIntValue )
		pFnSetBaseIntValue = (UFunction*) UObject::GObjObjects()->Data[ 40412 ];

	UBioAttributes_execSetBaseIntValue_Parms SetBaseIntValue_Parms;
	SetBaseIntValue_Parms.baseValue = baseValue;

	pFnSetBaseIntValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBaseIntValue, &SetBaseIntValue_Parms, NULL );

	pFnSetBaseIntValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &SetBaseIntValue_Parms.attribute, 0x88 );
};

// Function SFXGame.BioAttributes.GetCurrentIntValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioComplexIntStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int UBioAttributes::GetCurrentIntValue ( struct FBioComplexIntStructAttribute* attribute )
{
	static UFunction* pFnGetCurrentIntValue = NULL;

	if ( ! pFnGetCurrentIntValue )
		pFnGetCurrentIntValue = (UFunction*) UObject::GObjObjects()->Data[ 40409 ];

	UBioAttributes_execGetCurrentIntValue_Parms GetCurrentIntValue_Parms;

	pFnGetCurrentIntValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentIntValue, &GetCurrentIntValue_Parms, NULL );

	pFnGetCurrentIntValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &GetCurrentIntValue_Parms.attribute, 0x88 );

	return GetCurrentIntValue_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.FloatToString
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FBioComplexFloatStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FString UBioAttributes::FloatToString ( struct FBioComplexFloatStructAttribute* attribute )
{
	static UFunction* pFnFloatToString = NULL;

	if ( ! pFnFloatToString )
		pFnFloatToString = (UFunction*) UObject::GObjObjects()->Data[ 40406 ];

	UBioAttributes_execFloatToString_Parms FloatToString_Parms;

	pFnFloatToString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFloatToString, &FloatToString_Parms, NULL );

	pFnFloatToString->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &FloatToString_Parms.attribute, 0x68 );

	return FloatToString_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.GetBaseFloatValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioComplexFloatStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

float UBioAttributes::GetBaseFloatValue ( struct FBioComplexFloatStructAttribute* attribute )
{
	static UFunction* pFnGetBaseFloatValue = NULL;

	if ( ! pFnGetBaseFloatValue )
		pFnGetBaseFloatValue = (UFunction*) UObject::GObjObjects()->Data[ 40403 ];

	UBioAttributes_execGetBaseFloatValue_Parms GetBaseFloatValue_Parms;

	pFnGetBaseFloatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBaseFloatValue, &GetBaseFloatValue_Parms, NULL );

	pFnGetBaseFloatValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &GetBaseFloatValue_Parms.attribute, 0x68 );

	return GetBaseFloatValue_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.SetBaseFloatValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          baseValue                      ( CPF_Parm )
// struct FBioComplexFloatStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioAttributes::SetBaseFloatValue ( float baseValue, struct FBioComplexFloatStructAttribute* attribute )
{
	static UFunction* pFnSetBaseFloatValue = NULL;

	if ( ! pFnSetBaseFloatValue )
		pFnSetBaseFloatValue = (UFunction*) UObject::GObjObjects()->Data[ 40400 ];

	UBioAttributes_execSetBaseFloatValue_Parms SetBaseFloatValue_Parms;
	SetBaseFloatValue_Parms.baseValue = baseValue;

	pFnSetBaseFloatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBaseFloatValue, &SetBaseFloatValue_Parms, NULL );

	pFnSetBaseFloatValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &SetBaseFloatValue_Parms.attribute, 0x68 );
};

// Function SFXGame.BioAttributes.GetCurrentFloatValue
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioComplexFloatStructAttribute attribute                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

float UBioAttributes::GetCurrentFloatValue ( struct FBioComplexFloatStructAttribute* attribute )
{
	static UFunction* pFnGetCurrentFloatValue = NULL;

	if ( ! pFnGetCurrentFloatValue )
		pFnGetCurrentFloatValue = (UFunction*) UObject::GObjObjects()->Data[ 40397 ];

	UBioAttributes_execGetCurrentFloatValue_Parms GetCurrentFloatValue_Parms;

	pFnGetCurrentFloatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentFloatValue, &GetCurrentFloatValue_Parms, NULL );

	pFnGetCurrentFloatValue->FunctionFlags |= 0x400;

	if ( attribute )
		memcpy ( attribute, &GetCurrentFloatValue_Parms.attribute, 0x68 );

	return GetCurrentFloatValue_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.ClearStringAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmAttribute                    ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::ClearStringAttribute ( struct FName nmAttribute, int nIndexOfAttributeInArray )
{
	static UFunction* pFnClearStringAttribute = NULL;

	if ( ! pFnClearStringAttribute )
		pFnClearStringAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40394 ];

	UBioAttributes_execClearStringAttribute_Parms ClearStringAttribute_Parms;
	memcpy ( &ClearStringAttribute_Parms.nmAttribute, &nmAttribute, 0x8 );
	ClearStringAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnClearStringAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearStringAttribute, &ClearStringAttribute_Parms, NULL );

	pFnClearStringAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.RemoveFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nIndexOfOverride               ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::RemoveFloatAttributeBaseOverrideModifier ( struct FName attribute, int nIndexOfOverride, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnRemoveFloatAttributeBaseOverrideModifier )
		pFnRemoveFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 40390 ];

	UBioAttributes_execRemoveFloatAttributeBaseOverrideModifier_Parms RemoveFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &RemoveFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfOverride = nIndexOfOverride;
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeBaseOverrideModifier, &RemoveFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.RemoveIntAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nIndexOfOverride               ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::RemoveIntAttributeBaseOverrideModifier ( struct FName attribute, int nIndexOfOverride, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveIntAttributeBaseOverrideModifier = NULL;

	if ( ! pFnRemoveIntAttributeBaseOverrideModifier )
		pFnRemoveIntAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 40386 ];

	UBioAttributes_execRemoveIntAttributeBaseOverrideModifier_Parms RemoveIntAttributeBaseOverrideModifier_Parms;
	memcpy ( &RemoveIntAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	RemoveIntAttributeBaseOverrideModifier_Parms.nIndexOfOverride = nIndexOfOverride;
	RemoveIntAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveIntAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveIntAttributeBaseOverrideModifier, &RemoveIntAttributeBaseOverrideModifier_Parms, NULL );

	pFnRemoveIntAttributeBaseOverrideModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.RemoveFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::RemoveFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeModifier = NULL;

	if ( ! pFnRemoveFloatAttributeModifier )
		pFnRemoveFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 40381 ];

	UBioAttributes_execRemoveFloatAttributeModifier_Parms RemoveFloatAttributeModifier_Parms;
	memcpy ( &RemoveFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeModifier_Parms.modType = modType;
	RemoveFloatAttributeModifier_Parms.fValue = fValue;
	RemoveFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeModifier, &RemoveFloatAttributeModifier_Parms, NULL );

	pFnRemoveFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.RemoveIntAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::RemoveIntAttributeModifier ( struct FName attribute, unsigned char modType, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveIntAttributeModifier = NULL;

	if ( ! pFnRemoveIntAttributeModifier )
		pFnRemoveIntAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 40376 ];

	UBioAttributes_execRemoveIntAttributeModifier_Parms RemoveIntAttributeModifier_Parms;
	memcpy ( &RemoveIntAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveIntAttributeModifier_Parms.modType = modType;
	RemoveIntAttributeModifier_Parms.nValue = nValue;
	RemoveIntAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveIntAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveIntAttributeModifier, &RemoveIntAttributeModifier_Parms, NULL );

	pFnRemoveIntAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.AddFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   attribute                      ( CPF_Parm )
// float                          Value                          ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

int UBioAttributes::AddFloatAttributeBaseOverrideModifier ( struct FName attribute, float Value, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnAddFloatAttributeBaseOverrideModifier )
		pFnAddFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 40371 ];

	UBioAttributes_execAddFloatAttributeBaseOverrideModifier_Parms AddFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &AddFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeBaseOverrideModifier_Parms.Value = Value;
	AddFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeBaseOverrideModifier, &AddFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;

	return AddFloatAttributeBaseOverrideModifier_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.AddIntAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   attribute                      ( CPF_Parm )
// int                            Value                          ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

int UBioAttributes::AddIntAttributeBaseOverrideModifier ( struct FName attribute, int Value, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddIntAttributeBaseOverrideModifier = NULL;

	if ( ! pFnAddIntAttributeBaseOverrideModifier )
		pFnAddIntAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 40366 ];

	UBioAttributes_execAddIntAttributeBaseOverrideModifier_Parms AddIntAttributeBaseOverrideModifier_Parms;
	memcpy ( &AddIntAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	AddIntAttributeBaseOverrideModifier_Parms.Value = Value;
	AddIntAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddIntAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddIntAttributeBaseOverrideModifier, &AddIntAttributeBaseOverrideModifier_Parms, NULL );

	pFnAddIntAttributeBaseOverrideModifier->FunctionFlags |= 0x400;

	return AddIntAttributeBaseOverrideModifier_Parms.ReturnValue;
};

// Function SFXGame.BioAttributes.AddFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::AddFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeModifier = NULL;

	if ( ! pFnAddFloatAttributeModifier )
		pFnAddFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 40361 ];

	UBioAttributes_execAddFloatAttributeModifier_Parms AddFloatAttributeModifier_Parms;
	memcpy ( &AddFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeModifier_Parms.modType = modType;
	AddFloatAttributeModifier_Parms.fValue = fValue;
	AddFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeModifier, &AddFloatAttributeModifier_Parms, NULL );

	pFnAddFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.AddIntAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::AddIntAttributeModifier ( struct FName attribute, unsigned char modType, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddIntAttributeModifier = NULL;

	if ( ! pFnAddIntAttributeModifier )
		pFnAddIntAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 40356 ];

	UBioAttributes_execAddIntAttributeModifier_Parms AddIntAttributeModifier_Parms;
	memcpy ( &AddIntAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddIntAttributeModifier_Parms.modType = modType;
	AddIntAttributeModifier_Parms.nValue = nValue;
	AddIntAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddIntAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddIntAttributeModifier, &AddIntAttributeModifier_Parms, NULL );

	pFnAddIntAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetNameAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// struct FName                   nmValue                        ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetNameAttribute ( struct FName attribute, struct FName nmValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetNameAttribute = NULL;

	if ( ! pFnSetNameAttribute )
		pFnSetNameAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40352 ];

	UBioAttributes_execSetNameAttribute_Parms SetNameAttribute_Parms;
	memcpy ( &SetNameAttribute_Parms.attribute, &attribute, 0x8 );
	memcpy ( &SetNameAttribute_Parms.nmValue, &nmValue, 0x8 );
	SetNameAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetNameAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNameAttribute, &SetNameAttribute_Parms, NULL );

	pFnSetNameAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetBoolAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned long                  bValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetBoolAttribute ( struct FName attribute, unsigned long bValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetBoolAttribute = NULL;

	if ( ! pFnSetBoolAttribute )
		pFnSetBoolAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40348 ];

	UBioAttributes_execSetBoolAttribute_Parms SetBoolAttribute_Parms;
	memcpy ( &SetBoolAttribute_Parms.attribute, &attribute, 0x8 );
	SetBoolAttribute_Parms.bValue = bValue;
	SetBoolAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetBoolAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBoolAttribute, &SetBoolAttribute_Parms, NULL );

	pFnSetBoolAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetEnumAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmAttributeName                ( CPF_Parm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetEnumAttribute ( struct FName nmAttributeName, struct FString sValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetEnumAttribute = NULL;

	if ( ! pFnSetEnumAttribute )
		pFnSetEnumAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40344 ];

	UBioAttributes_execSetEnumAttribute_Parms SetEnumAttribute_Parms;
	memcpy ( &SetEnumAttribute_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	memcpy ( &SetEnumAttribute_Parms.sValue, &sValue, 0x10 );
	SetEnumAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetEnumAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEnumAttribute, &SetEnumAttribute_Parms, NULL );

	pFnSetEnumAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetStringAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetStringAttribute ( struct FName attribute, struct FString sValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetStringAttribute = NULL;

	if ( ! pFnSetStringAttribute )
		pFnSetStringAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40340 ];

	UBioAttributes_execSetStringAttribute_Parms SetStringAttribute_Parms;
	memcpy ( &SetStringAttribute_Parms.attribute, &attribute, 0x8 );
	memcpy ( &SetStringAttribute_Parms.sValue, &sValue, 0x10 );
	SetStringAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetStringAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetStringAttribute, &SetStringAttribute_Parms, NULL );

	pFnSetStringAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetByteAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  cValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetByteAttribute ( struct FName attribute, unsigned char cValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetByteAttribute = NULL;

	if ( ! pFnSetByteAttribute )
		pFnSetByteAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40336 ];

	UBioAttributes_execSetByteAttribute_Parms SetByteAttribute_Parms;
	memcpy ( &SetByteAttribute_Parms.attribute, &attribute, 0x8 );
	SetByteAttribute_Parms.cValue = cValue;
	SetByteAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetByteAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetByteAttribute, &SetByteAttribute_Parms, NULL );

	pFnSetByteAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetFloatAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetFloatAttribute ( struct FName attribute, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetFloatAttribute = NULL;

	if ( ! pFnSetFloatAttribute )
		pFnSetFloatAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40332 ];

	UBioAttributes_execSetFloatAttribute_Parms SetFloatAttribute_Parms;
	memcpy ( &SetFloatAttribute_Parms.attribute, &attribute, 0x8 );
	SetFloatAttribute_Parms.fValue = fValue;
	SetFloatAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetFloatAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatAttribute, &SetFloatAttribute_Parms, NULL );

	pFnSetFloatAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.SetIntAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributes::SetIntAttribute ( struct FName attribute, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetIntAttribute = NULL;

	if ( ! pFnSetIntAttribute )
		pFnSetIntAttribute = (UFunction*) UObject::GObjObjects()->Data[ 40328 ];

	UBioAttributes_execSetIntAttribute_Parms SetIntAttribute_Parms;
	memcpy ( &SetIntAttribute_Parms.attribute, &attribute, 0x8 );
	SetIntAttribute_Parms.nValue = nValue;
	SetIntAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetIntAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIntAttribute, &SetIntAttribute_Parms, NULL );

	pFnSetIntAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributes.EnsureInitialized
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioAttributes::EnsureInitialized ( )
{
	static UFunction* pFnEnsureInitialized = NULL;

	if ( ! pFnEnsureInitialized )
		pFnEnsureInitialized = (UFunction*) UObject::GObjObjects()->Data[ 40327 ];

	UBioAttributes_execEnsureInitialized_Parms EnsureInitialized_Parms;

	pFnEnsureInitialized->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnsureInitialized, &EnsureInitialized_Parms, NULL );

	pFnEnsureInitialized->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesDamage.SetWeaponDamageType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nWeaponType                    ( CPF_Parm )

void UBioAttributesDamage::SetWeaponDamageType ( unsigned char nWeaponType )
{
	static UFunction* pFnSetWeaponDamageType = NULL;

	if ( ! pFnSetWeaponDamageType )
		pFnSetWeaponDamageType = (UFunction*) UObject::GObjObjects()->Data[ 41021 ];

	UBioAttributesDamage_execSetWeaponDamageType_Parms SetWeaponDamageType_Parms;
	SetWeaponDamageType_Parms.nWeaponType = nWeaponType;

	pFnSetWeaponDamageType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWeaponDamageType, &SetWeaponDamageType_Parms, NULL );

	pFnSetWeaponDamageType->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesEpicPawn.GetName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioAttributesEpicPawn::GetName ( )
{
	static UFunction* pFnGetName = NULL;

	if ( ! pFnGetName )
		pFnGetName = (UFunction*) UObject::GObjObjects()->Data[ 44478 ];

	UBioAttributesEpicPawn_execGetName_Parms GetName_Parms;

	this->ProcessEvent ( pFnGetName, &GetName_Parms, NULL );

	return GetName_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesEpicPawn.GetDesignedName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioAttributesEpicPawn::GetDesignedName ( )
{
	static UFunction* pFnGetDesignedName = NULL;

	if ( ! pFnGetDesignedName )
		pFnGetDesignedName = (UFunction*) UObject::GObjObjects()->Data[ 44476 ];

	UBioAttributesEpicPawn_execGetDesignedName_Parms GetDesignedName_Parms;

	pFnGetDesignedName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDesignedName, &GetDesignedName_Parms, NULL );

	pFnGetDesignedName->FunctionFlags |= 0x400;

	return GetDesignedName_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesEpicPawn.RemoveFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nIndexOfOverride               ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesEpicPawn::RemoveFloatAttributeBaseOverrideModifier ( struct FName attribute, int nIndexOfOverride, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnRemoveFloatAttributeBaseOverrideModifier )
		pFnRemoveFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 44472 ];

	UBioAttributesEpicPawn_execRemoveFloatAttributeBaseOverrideModifier_Parms RemoveFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &RemoveFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfOverride = nIndexOfOverride;
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeBaseOverrideModifier, &RemoveFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesEpicPawn.AddFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   attribute                      ( CPF_Parm )
// float                          Value                          ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

int UBioAttributesEpicPawn::AddFloatAttributeBaseOverrideModifier ( struct FName attribute, float Value, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnAddFloatAttributeBaseOverrideModifier )
		pFnAddFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 44467 ];

	UBioAttributesEpicPawn_execAddFloatAttributeBaseOverrideModifier_Parms AddFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &AddFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeBaseOverrideModifier_Parms.Value = Value;
	AddFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeBaseOverrideModifier, &AddFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;

	return AddFloatAttributeBaseOverrideModifier_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesEpicPawn.RemoveFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesEpicPawn::RemoveFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeModifier = NULL;

	if ( ! pFnRemoveFloatAttributeModifier )
		pFnRemoveFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44462 ];

	UBioAttributesEpicPawn_execRemoveFloatAttributeModifier_Parms RemoveFloatAttributeModifier_Parms;
	memcpy ( &RemoveFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeModifier_Parms.modType = modType;
	RemoveFloatAttributeModifier_Parms.fValue = fValue;
	RemoveFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeModifier, &RemoveFloatAttributeModifier_Parms, NULL );

	pFnRemoveFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesEpicPawn.AddFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesEpicPawn::AddFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeModifier = NULL;

	if ( ! pFnAddFloatAttributeModifier )
		pFnAddFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44457 ];

	UBioAttributesEpicPawn_execAddFloatAttributeModifier_Parms AddFloatAttributeModifier_Parms;
	memcpy ( &AddFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeModifier_Parms.modType = modType;
	AddFloatAttributeModifier_Parms.fValue = fValue;
	AddFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeModifier, &AddFloatAttributeModifier_Parms, NULL );

	pFnAddFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesEpicPawn.SetFloatAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesEpicPawn::SetFloatAttribute ( struct FName attribute, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetFloatAttribute = NULL;

	if ( ! pFnSetFloatAttribute )
		pFnSetFloatAttribute = (UFunction*) UObject::GObjObjects()->Data[ 44453 ];

	UBioAttributesEpicPawn_execSetFloatAttribute_Parms SetFloatAttribute_Parms;
	memcpy ( &SetFloatAttribute_Parms.attribute, &attribute, 0x8 );
	SetFloatAttribute_Parms.fValue = fValue;
	SetFloatAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetFloatAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatAttribute, &SetFloatAttribute_Parms, NULL );

	pFnSetFloatAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.RemoveFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::RemoveFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeModifier = NULL;

	if ( ! pFnRemoveFloatAttributeModifier )
		pFnRemoveFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44519 ];

	UBioAttributesPawn_execRemoveFloatAttributeModifier_Parms RemoveFloatAttributeModifier_Parms;
	memcpy ( &RemoveFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeModifier_Parms.modType = modType;
	RemoveFloatAttributeModifier_Parms.fValue = fValue;
	RemoveFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeModifier, &RemoveFloatAttributeModifier_Parms, NULL );

	pFnRemoveFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.RemoveIntAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::RemoveIntAttributeModifier ( struct FName attribute, unsigned char modType, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveIntAttributeModifier = NULL;

	if ( ! pFnRemoveIntAttributeModifier )
		pFnRemoveIntAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44514 ];

	UBioAttributesPawn_execRemoveIntAttributeModifier_Parms RemoveIntAttributeModifier_Parms;
	memcpy ( &RemoveIntAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveIntAttributeModifier_Parms.modType = modType;
	RemoveIntAttributeModifier_Parms.nValue = nValue;
	RemoveIntAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveIntAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveIntAttributeModifier, &RemoveIntAttributeModifier_Parms, NULL );

	pFnRemoveIntAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.AddFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::AddFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeModifier = NULL;

	if ( ! pFnAddFloatAttributeModifier )
		pFnAddFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44509 ];

	UBioAttributesPawn_execAddFloatAttributeModifier_Parms AddFloatAttributeModifier_Parms;
	memcpy ( &AddFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeModifier_Parms.modType = modType;
	AddFloatAttributeModifier_Parms.fValue = fValue;
	AddFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeModifier, &AddFloatAttributeModifier_Parms, NULL );

	pFnAddFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.AddIntAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::AddIntAttributeModifier ( struct FName attribute, unsigned char modType, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddIntAttributeModifier = NULL;

	if ( ! pFnAddIntAttributeModifier )
		pFnAddIntAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 44504 ];

	UBioAttributesPawn_execAddIntAttributeModifier_Parms AddIntAttributeModifier_Parms;
	memcpy ( &AddIntAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddIntAttributeModifier_Parms.modType = modType;
	AddIntAttributeModifier_Parms.nValue = nValue;
	AddIntAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddIntAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddIntAttributeModifier, &AddIntAttributeModifier_Parms, NULL );

	pFnAddIntAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.SetFloatAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::SetFloatAttribute ( struct FName attribute, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetFloatAttribute = NULL;

	if ( ! pFnSetFloatAttribute )
		pFnSetFloatAttribute = (UFunction*) UObject::GObjObjects()->Data[ 44500 ];

	UBioAttributesPawn_execSetFloatAttribute_Parms SetFloatAttribute_Parms;
	memcpy ( &SetFloatAttribute_Parms.attribute, &attribute, 0x8 );
	SetFloatAttribute_Parms.fValue = fValue;
	SetFloatAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetFloatAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatAttribute, &SetFloatAttribute_Parms, NULL );

	pFnSetFloatAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawn.SetIntAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesPawn::SetIntAttribute ( struct FName attribute, int nValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetIntAttribute = NULL;

	if ( ! pFnSetIntAttribute )
		pFnSetIntAttribute = (UFunction*) UObject::GObjObjects()->Data[ 44496 ];

	UBioAttributesPawn_execSetIntAttribute_Parms SetIntAttribute_Parms;
	memcpy ( &SetIntAttribute_Parms.attribute, &attribute, 0x8 );
	SetIntAttribute_Parms.nValue = nValue;
	SetIntAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetIntAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIntAttribute, &SetIntAttribute_Parms, NULL );

	pFnSetIntAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesPawnParty.GetParagon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioAttributesPawnParty::GetParagon ( )
{
	static UFunction* pFnGetParagon = NULL;

	if ( ! pFnGetParagon )
		pFnGetParagon = (UFunction*) UObject::GObjObjects()->Data[ 44591 ];

	UBioAttributesPawnParty_execGetParagon_Parms GetParagon_Parms;

	pFnGetParagon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParagon, &GetParagon_Parms, NULL );

	pFnGetParagon->FunctionFlags |= 0x400;

	return GetParagon_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesPawnParty.GetRenegade
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioAttributesPawnParty::GetRenegade ( )
{
	static UFunction* pFnGetRenegade = NULL;

	if ( ! pFnGetRenegade )
		pFnGetRenegade = (UFunction*) UObject::GObjObjects()->Data[ 44589 ];

	UBioAttributesPawnParty_execGetRenegade_Parms GetRenegade_Parms;

	pFnGetRenegade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRenegade, &GetRenegade_Parms, NULL );

	pFnGetRenegade->FunctionFlags |= 0x400;

	return GetRenegade_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesPawnParty.SetMainAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            primary                        ( CPF_Parm )
// int                            secondary                      ( CPF_Parm )
// int                            tertiary                       ( CPF_Parm )

bool UBioAttributesPawnParty::SetMainAttributes ( int primary, int secondary, int tertiary )
{
	static UFunction* pFnSetMainAttributes = NULL;

	if ( ! pFnSetMainAttributes )
		pFnSetMainAttributes = (UFunction*) UObject::GObjObjects()->Data[ 44584 ];

	UBioAttributesPawnParty_execSetMainAttributes_Parms SetMainAttributes_Parms;
	SetMainAttributes_Parms.primary = primary;
	SetMainAttributes_Parms.secondary = secondary;
	SetMainAttributes_Parms.tertiary = tertiary;

	pFnSetMainAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMainAttributes, &SetMainAttributes_Parms, NULL );

	pFnSetMainAttributes->FunctionFlags |= 0x400;

	return SetMainAttributes_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesItem.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItem::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 40422 ];

	UBioAttributesItem_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemSophisticated.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemSophisticated::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49823 ];

	UBioAttributesItemSophisticated_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemEquippable.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemEquippable::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49826 ];

	UBioAttributesItemEquippable_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemArmor.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemArmor::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49827 ];

	UBioAttributesItemArmor_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemGrenade.ClearStringAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmAttribute                    ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesItemGrenade::ClearStringAttribute ( struct FName nmAttribute, int nIndexOfAttributeInArray )
{
	static UFunction* pFnClearStringAttribute = NULL;

	if ( ! pFnClearStringAttribute )
		pFnClearStringAttribute = (UFunction*) UObject::GObjObjects()->Data[ 49853 ];

	UBioAttributesItemGrenade_execClearStringAttribute_Parms ClearStringAttribute_Parms;
	memcpy ( &ClearStringAttribute_Parms.nmAttribute, &nmAttribute, 0x8 );
	ClearStringAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnClearStringAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearStringAttribute, &ClearStringAttribute_Parms, NULL );

	pFnClearStringAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesItemGrenade.SetStringAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesItemGrenade::SetStringAttribute ( struct FName attribute, struct FString sValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetStringAttribute = NULL;

	if ( ! pFnSetStringAttribute )
		pFnSetStringAttribute = (UFunction*) UObject::GObjObjects()->Data[ 49849 ];

	UBioAttributesItemGrenade_execSetStringAttribute_Parms SetStringAttribute_Parms;
	memcpy ( &SetStringAttribute_Parms.attribute, &attribute, 0x8 );
	memcpy ( &SetStringAttribute_Parms.sValue, &sValue, 0x10 );
	SetStringAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetStringAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetStringAttribute, &SetStringAttribute_Parms, NULL );

	pFnSetStringAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesItemWeapon.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemWeapon::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49920 ];

	UBioAttributesItemWeapon_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemWeaponMelee.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemWeaponMelee::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49931 ];

	UBioAttributesItemWeaponMelee_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemWeaponRanged.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemWeaponRanged::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49933 ];

	UBioAttributesItemWeaponRanged_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesItemXMod.DescribeAttributes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioAttributesItemXMod::eventDescribeAttributes ( )
{
	static UFunction* pFnDescribeAttributes = NULL;

	if ( ! pFnDescribeAttributes )
		pFnDescribeAttributes = (UFunction*) UObject::GObjObjects()->Data[ 49998 ];

	UBioAttributesItemXMod_eventDescribeAttributes_Parms DescribeAttributes_Parms;

	this->ProcessEvent ( pFnDescribeAttributes, &DescribeAttributes_Parms, NULL );
};

// Function SFXGame.BioAttributesShield.RemoveFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// int                            nIndexOfOverride               ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesShield::RemoveFloatAttributeBaseOverrideModifier ( struct FName attribute, int nIndexOfOverride, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnRemoveFloatAttributeBaseOverrideModifier )
		pFnRemoveFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 50034 ];

	UBioAttributesShield_execRemoveFloatAttributeBaseOverrideModifier_Parms RemoveFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &RemoveFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfOverride = nIndexOfOverride;
	RemoveFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeBaseOverrideModifier, &RemoveFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnRemoveFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesShield.AddFloatAttributeBaseOverrideModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   attribute                      ( CPF_Parm )
// float                          Value                          ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

int UBioAttributesShield::AddFloatAttributeBaseOverrideModifier ( struct FName attribute, float Value, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeBaseOverrideModifier = NULL;

	if ( ! pFnAddFloatAttributeBaseOverrideModifier )
		pFnAddFloatAttributeBaseOverrideModifier = (UFunction*) UObject::GObjObjects()->Data[ 50029 ];

	UBioAttributesShield_execAddFloatAttributeBaseOverrideModifier_Parms AddFloatAttributeBaseOverrideModifier_Parms;
	memcpy ( &AddFloatAttributeBaseOverrideModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeBaseOverrideModifier_Parms.Value = Value;
	AddFloatAttributeBaseOverrideModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeBaseOverrideModifier, &AddFloatAttributeBaseOverrideModifier_Parms, NULL );

	pFnAddFloatAttributeBaseOverrideModifier->FunctionFlags |= 0x400;

	return AddFloatAttributeBaseOverrideModifier_Parms.ReturnValue;
};

// Function SFXGame.BioAttributesShield.RemoveFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesShield::RemoveFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeModifier = NULL;

	if ( ! pFnRemoveFloatAttributeModifier )
		pFnRemoveFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 50024 ];

	UBioAttributesShield_execRemoveFloatAttributeModifier_Parms RemoveFloatAttributeModifier_Parms;
	memcpy ( &RemoveFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeModifier_Parms.modType = modType;
	RemoveFloatAttributeModifier_Parms.fValue = fValue;
	RemoveFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeModifier, &RemoveFloatAttributeModifier_Parms, NULL );

	pFnRemoveFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesShield.AddFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesShield::AddFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeModifier = NULL;

	if ( ! pFnAddFloatAttributeModifier )
		pFnAddFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 50019 ];

	UBioAttributesShield_execAddFloatAttributeModifier_Parms AddFloatAttributeModifier_Parms;
	memcpy ( &AddFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeModifier_Parms.modType = modType;
	AddFloatAttributeModifier_Parms.fValue = fValue;
	AddFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeModifier, &AddFloatAttributeModifier_Parms, NULL );

	pFnAddFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAttributesShield.SetFloatAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioAttributesShield::SetFloatAttribute ( struct FName attribute, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetFloatAttribute = NULL;

	if ( ! pFnSetFloatAttribute )
		pFnSetFloatAttribute = (UFunction*) UObject::GObjObjects()->Data[ 50015 ];

	UBioAttributesShield_execSetFloatAttribute_Parms SetFloatAttribute_Parms;
	memcpy ( &SetFloatAttribute_Parms.attribute, &attribute, 0x8 );
	SetFloatAttribute_Parms.fValue = fValue;
	SetFloatAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetFloatAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatAttribute, &SetFloatAttribute_Parms, NULL );

	pFnSetFloatAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.AddParameter
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmParameter                    ( CPF_Parm )

void UBioPower::eventAddParameter ( struct FName nmParameter )
{
	static UFunction* pFnAddParameter = NULL;

	if ( ! pFnAddParameter )
		pFnAddParameter = (UFunction*) UObject::GObjObjects()->Data[ 46857 ];

	UBioPower_eventAddParameter_Parms AddParameter_Parms;
	memcpy ( &AddParameter_Parms.nmParameter, &nmParameter, 0x8 );

	this->ProcessEvent ( pFnAddParameter, &AddParameter_Parms, NULL );
};

// Function SFXGame.BioPower.LoadPlayerLinkedPower
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadPlayerLinkedPower ( )
{
	static UFunction* pFnLoadPlayerLinkedPower = NULL;

	if ( ! pFnLoadPlayerLinkedPower )
		pFnLoadPlayerLinkedPower = (UFunction*) UObject::GObjObjects()->Data[ 46855 ];

	UBioPower_execLoadPlayerLinkedPower_Parms LoadPlayerLinkedPower_Parms;

	pFnLoadPlayerLinkedPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPlayerLinkedPower, &LoadPlayerLinkedPower_Parms, NULL );

	pFnLoadPlayerLinkedPower->FunctionFlags |= 0x400;

	return LoadPlayerLinkedPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadHUDType
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadHUDType ( )
{
	static UFunction* pFnLoadHUDType = NULL;

	if ( ! pFnLoadHUDType )
		pFnLoadHUDType = (UFunction*) UObject::GObjObjects()->Data[ 46853 ];

	UBioPower_execLoadHUDType_Parms LoadHUDType_Parms;

	pFnLoadHUDType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadHUDType, &LoadHUDType_Parms, NULL );

	pFnLoadHUDType->FunctionFlags |= 0x400;

	return LoadHUDType_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadDiscipline
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadDiscipline ( )
{
	static UFunction* pFnLoadDiscipline = NULL;

	if ( ! pFnLoadDiscipline )
		pFnLoadDiscipline = (UFunction*) UObject::GObjObjects()->Data[ 46851 ];

	UBioPower_execLoadDiscipline_Parms LoadDiscipline_Parms;

	pFnLoadDiscipline->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadDiscipline, &LoadDiscipline_Parms, NULL );

	pFnLoadDiscipline->FunctionFlags |= 0x400;

	return LoadDiscipline_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadRequiredResourceType
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadRequiredResourceType ( )
{
	static UFunction* pFnLoadRequiredResourceType = NULL;

	if ( ! pFnLoadRequiredResourceType )
		pFnLoadRequiredResourceType = (UFunction*) UObject::GObjObjects()->Data[ 46849 ];

	UBioPower_execLoadRequiredResourceType_Parms LoadRequiredResourceType_Parms;

	pFnLoadRequiredResourceType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadRequiredResourceType, &LoadRequiredResourceType_Parms, NULL );

	pFnLoadRequiredResourceType->FunctionFlags |= 0x400;

	return LoadRequiredResourceType_Parms.ReturnValue;
};

// Function SFXGame.BioPower.CancelDualPowerInternal
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPower::CancelDualPowerInternal ( )
{
	static UFunction* pFnCancelDualPowerInternal = NULL;

	if ( ! pFnCancelDualPowerInternal )
		pFnCancelDualPowerInternal = (UFunction*) UObject::GObjObjects()->Data[ 46848 ];

	UBioPower_execCancelDualPowerInternal_Parms CancelDualPowerInternal_Parms;

	pFnCancelDualPowerInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelDualPowerInternal, &CancelDualPowerInternal_Parms, NULL );

	pFnCancelDualPowerInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.LoadAimType
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadAimType ( )
{
	static UFunction* pFnLoadAimType = NULL;

	if ( ! pFnLoadAimType )
		pFnLoadAimType = (UFunction*) UObject::GObjObjects()->Data[ 46846 ];

	UBioPower_execLoadAimType_Parms LoadAimType_Parms;

	pFnLoadAimType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAimType, &LoadAimType_Parms, NULL );

	pFnLoadAimType->FunctionFlags |= 0x400;

	return LoadAimType_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadDualPowerInfo
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadDualPowerInfo ( )
{
	static UFunction* pFnLoadDualPowerInfo = NULL;

	if ( ! pFnLoadDualPowerInfo )
		pFnLoadDualPowerInfo = (UFunction*) UObject::GObjObjects()->Data[ 46844 ];

	UBioPower_execLoadDualPowerInfo_Parms LoadDualPowerInfo_Parms;

	pFnLoadDualPowerInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadDualPowerInfo, &LoadDualPowerInfo_Parms, NULL );

	pFnLoadDualPowerInfo->FunctionFlags |= 0x400;

	return LoadDualPowerInfo_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadRequiredWeaponType
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadRequiredWeaponType ( )
{
	static UFunction* pFnLoadRequiredWeaponType = NULL;

	if ( ! pFnLoadRequiredWeaponType )
		pFnLoadRequiredWeaponType = (UFunction*) UObject::GObjObjects()->Data[ 46842 ];

	UBioPower_execLoadRequiredWeaponType_Parms LoadRequiredWeaponType_Parms;

	pFnLoadRequiredWeaponType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadRequiredWeaponType, &LoadRequiredWeaponType_Parms, NULL );

	pFnLoadRequiredWeaponType->FunctionFlags |= 0x400;

	return LoadRequiredWeaponType_Parms.ReturnValue;
};

// Function SFXGame.BioPower.RemoveParameter
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   nmParameter                    ( CPF_Parm )

void UBioPower::RemoveParameter ( struct FName nmParameter )
{
	static UFunction* pFnRemoveParameter = NULL;

	if ( ! pFnRemoveParameter )
		pFnRemoveParameter = (UFunction*) UObject::GObjObjects()->Data[ 46840 ];

	UBioPower_execRemoveParameter_Parms RemoveParameter_Parms;
	memcpy ( &RemoveParameter_Parms.nmParameter, &nmParameter, 0x8 );

	pFnRemoveParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveParameter, &RemoveParameter_Parms, NULL );

	pFnRemoveParameter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.LoadAdditionalParams
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadAdditionalParams ( )
{
	static UFunction* pFnLoadAdditionalParams = NULL;

	if ( ! pFnLoadAdditionalParams )
		pFnLoadAdditionalParams = (UFunction*) UObject::GObjObjects()->Data[ 46838 ];

	UBioPower_execLoadAdditionalParams_Parms LoadAdditionalParams_Parms;

	pFnLoadAdditionalParams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAdditionalParams, &LoadAdditionalParams_Parms, NULL );

	pFnLoadAdditionalParams->FunctionFlags |= 0x400;

	return LoadAdditionalParams_Parms.ReturnValue;
};

// Function SFXGame.BioPower.AutoMapPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::AutoMapPower ( )
{
	static UFunction* pFnAutoMapPower = NULL;

	if ( ! pFnAutoMapPower )
		pFnAutoMapPower = (UFunction*) UObject::GObjObjects()->Data[ 46836 ];

	UBioPower_execAutoMapPower_Parms AutoMapPower_Parms;

	pFnAutoMapPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoMapPower, &AutoMapPower_Parms, NULL );

	pFnAutoMapPower->FunctionFlags |= 0x400;

	return AutoMapPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsRequiredResourceAvailable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsRequiredResourceAvailable ( )
{
	static UFunction* pFnIsRequiredResourceAvailable = NULL;

	if ( ! pFnIsRequiredResourceAvailable )
		pFnIsRequiredResourceAvailable = (UFunction*) UObject::GObjObjects()->Data[ 46834 ];

	UBioPower_execIsRequiredResourceAvailable_Parms IsRequiredResourceAvailable_Parms;

	pFnIsRequiredResourceAvailable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRequiredResourceAvailable, &IsRequiredResourceAvailable_Parms, NULL );

	pFnIsRequiredResourceAvailable->FunctionFlags |= 0x400;

	return IsRequiredResourceAvailable_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsRequiredWeaponEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsRequiredWeaponEquipped ( )
{
	static UFunction* pFnIsRequiredWeaponEquipped = NULL;

	if ( ! pFnIsRequiredWeaponEquipped )
		pFnIsRequiredWeaponEquipped = (UFunction*) UObject::GObjObjects()->Data[ 42979 ];

	UBioPower_execIsRequiredWeaponEquipped_Parms IsRequiredWeaponEquipped_Parms;

	pFnIsRequiredWeaponEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRequiredWeaponEquipped, &IsRequiredWeaponEquipped_Parms, NULL );

	pFnIsRequiredWeaponEquipped->FunctionFlags |= 0x400;

	return IsRequiredWeaponEquipped_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetDescription
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sDescription                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioPower::GetDescription ( struct FString* sDescription )
{
	static UFunction* pFnGetDescription = NULL;

	if ( ! pFnGetDescription )
		pFnGetDescription = (UFunction*) UObject::GObjObjects()->Data[ 46831 ];

	UBioPower_execGetDescription_Parms GetDescription_Parms;

	pFnGetDescription->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDescription, &GetDescription_Parms, NULL );

	pFnGetDescription->FunctionFlags |= 0x400;

	if ( sDescription )
		memcpy ( sDescription, &GetDescription_Parms.sDescription, 0x10 );

	return GetDescription_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetImpactText
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            srImpactText                   ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetImpactText ( int* srImpactText )
{
	static UFunction* pFnGetImpactText = NULL;

	if ( ! pFnGetImpactText )
		pFnGetImpactText = (UFunction*) UObject::GObjObjects()->Data[ 46828 ];

	UBioPower_execGetImpactText_Parms GetImpactText_Parms;

	pFnGetImpactText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetImpactText, &GetImpactText_Parms, NULL );

	pFnGetImpactText->FunctionFlags |= 0x400;

	if ( srImpactText )
		*srImpactText = GetImpactText_Parms.srImpactText;

	return GetImpactText_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetDisplayName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioPower::GetDisplayName ( struct FString* sDisplayName )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 46825 ];

	UBioPower_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	if ( sDisplayName )
		memcpy ( sDisplayName, &GetDisplayName_Parms.sDisplayName, 0x10 );

	return GetDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetPowerIcon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPower::GetPowerIcon ( )
{
	static UFunction* pFnGetPowerIcon = NULL;

	if ( ! pFnGetPowerIcon )
		pFnGetPowerIcon = (UFunction*) UObject::GObjObjects()->Data[ 46823 ];

	UBioPower_execGetPowerIcon_Parms GetPowerIcon_Parms;

	pFnGetPowerIcon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerIcon, &GetPowerIcon_Parms, NULL );

	pFnGetPowerIcon->FunctionFlags |= 0x400;

	return GetPowerIcon_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetImpactNoise
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPower::GetImpactNoise ( )
{
	static UFunction* pFnGetImpactNoise = NULL;

	if ( ! pFnGetImpactNoise )
		pFnGetImpactNoise = (UFunction*) UObject::GObjObjects()->Data[ 46821 ];

	UBioPower_execGetImpactNoise_Parms GetImpactNoise_Parms;

	pFnGetImpactNoise->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetImpactNoise, &GetImpactNoise_Parms, NULL );

	pFnGetImpactNoise->FunctionFlags |= 0x400;

	return GetImpactNoise_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetReleaseNoise
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPower::GetReleaseNoise ( )
{
	static UFunction* pFnGetReleaseNoise = NULL;

	if ( ! pFnGetReleaseNoise )
		pFnGetReleaseNoise = (UFunction*) UObject::GObjObjects()->Data[ 46819 ];

	UBioPower_execGetReleaseNoise_Parms GetReleaseNoise_Parms;

	pFnGetReleaseNoise->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReleaseNoise, &GetReleaseNoise_Parms, NULL );

	pFnGetReleaseNoise->FunctionFlags |= 0x400;

	return GetReleaseNoise_Parms.ReturnValue;
};

// Function SFXGame.BioPower.CancelDualPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPower::CancelDualPower ( )
{
	static UFunction* pFnCancelDualPower = NULL;

	if ( ! pFnCancelDualPower )
		pFnCancelDualPower = (UFunction*) UObject::GObjObjects()->Data[ 46818 ];

	UBioPower_execCancelDualPower_Parms CancelDualPower_Parms;

	pFnCancelDualPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelDualPower, &CancelDualPower_Parms, NULL );

	pFnCancelDualPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.GetLinkedPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPower*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioPower* UBioPower::GetLinkedPower ( )
{
	static UFunction* pFnGetLinkedPower = NULL;

	if ( ! pFnGetLinkedPower )
		pFnGetLinkedPower = (UFunction*) UObject::GObjObjects()->Data[ 46816 ];

	UBioPower_execGetLinkedPower_Parms GetLinkedPower_Parms;

	pFnGetLinkedPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinkedPower, &GetLinkedPower_Parms, NULL );

	pFnGetLinkedPower->FunctionFlags |= 0x400;

	return GetLinkedPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsDualPowerActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsDualPowerActive ( )
{
	static UFunction* pFnIsDualPowerActive = NULL;

	if ( ! pFnIsDualPowerActive )
		pFnIsDualPowerActive = (UFunction*) UObject::GObjObjects()->Data[ 46814 ];

	UBioPower_execIsDualPowerActive_Parms IsDualPowerActive_Parms;

	pFnIsDualPowerActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDualPowerActive, &IsDualPowerActive_Parms, NULL );

	pFnIsDualPowerActive->FunctionFlags |= 0x400;

	return IsDualPowerActive_Parms.ReturnValue;
};

// Function SFXGame.BioPower.CancelPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::CancelPower ( )
{
	static UFunction* pFnCancelPower = NULL;

	if ( ! pFnCancelPower )
		pFnCancelPower = (UFunction*) UObject::GObjObjects()->Data[ 46812 ];

	UBioPower_execCancelPower_Parms CancelPower_Parms;

	pFnCancelPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelPower, &CancelPower_Parms, NULL );

	pFnCancelPower->FunctionFlags |= 0x400;

	return CancelPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsActive ( )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 46810 ];

	UBioPower_execIsActive_Parms IsActive_Parms;

	pFnIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	pFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Parms.ReturnValue;
};

// Function SFXGame.BioPower.CanCasterMoveDuringPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::CanCasterMoveDuringPower ( )
{
	static UFunction* pFnCanCasterMoveDuringPower = NULL;

	if ( ! pFnCanCasterMoveDuringPower )
		pFnCanCasterMoveDuringPower = (UFunction*) UObject::GObjObjects()->Data[ 46808 ];

	UBioPower_execCanCasterMoveDuringPower_Parms CanCasterMoveDuringPower_Parms;

	pFnCanCasterMoveDuringPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanCasterMoveDuringPower, &CanCasterMoveDuringPower_Parms, NULL );

	pFnCanCasterMoveDuringPower->FunctionFlags |= 0x400;

	return CanCasterMoveDuringPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioPower::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46806 ];

	UBioPower_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.SetTotalCooldownTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTotalCooldown                 ( CPF_Parm )

void UBioPower::SetTotalCooldownTime ( float fTotalCooldown )
{
	static UFunction* pFnSetTotalCooldownTime = NULL;

	if ( ! pFnSetTotalCooldownTime )
		pFnSetTotalCooldownTime = (UFunction*) UObject::GObjObjects()->Data[ 46804 ];

	UBioPower_execSetTotalCooldownTime_Parms SetTotalCooldownTime_Parms;
	SetTotalCooldownTime_Parms.fTotalCooldown = fTotalCooldown;

	pFnSetTotalCooldownTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTotalCooldownTime, &SetTotalCooldownTime_Parms, NULL );

	pFnSetTotalCooldownTime->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.GetTotalCooldownTime
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bCheckLinkedPower              ( CPF_OptionalParm | CPF_Parm )

float UBioPower::GetTotalCooldownTime ( unsigned long bCheckLinkedPower )
{
	static UFunction* pFnGetTotalCooldownTime = NULL;

	if ( ! pFnGetTotalCooldownTime )
		pFnGetTotalCooldownTime = (UFunction*) UObject::GObjObjects()->Data[ 46801 ];

	UBioPower_execGetTotalCooldownTime_Parms GetTotalCooldownTime_Parms;
	GetTotalCooldownTime_Parms.bCheckLinkedPower = bCheckLinkedPower;

	pFnGetTotalCooldownTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTotalCooldownTime, &GetTotalCooldownTime_Parms, NULL );

	pFnGetTotalCooldownTime->FunctionFlags |= 0x400;

	return GetTotalCooldownTime_Parms.ReturnValue;
};

// Function SFXGame.BioPower.SetCooldownRemaining
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          fCooldownRemaining             ( CPF_Parm )
// unsigned long                  bFireCompletionEventIfZero     ( CPF_OptionalParm | CPF_Parm )

void UBioPower::SetCooldownRemaining ( float fCooldownRemaining, unsigned long bFireCompletionEventIfZero )
{
	static UFunction* pFnSetCooldownRemaining = NULL;

	if ( ! pFnSetCooldownRemaining )
		pFnSetCooldownRemaining = (UFunction*) UObject::GObjObjects()->Data[ 46798 ];

	UBioPower_execSetCooldownRemaining_Parms SetCooldownRemaining_Parms;
	SetCooldownRemaining_Parms.fCooldownRemaining = fCooldownRemaining;
	SetCooldownRemaining_Parms.bFireCompletionEventIfZero = bFireCompletionEventIfZero;

	pFnSetCooldownRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCooldownRemaining, &SetCooldownRemaining_Parms, NULL );

	pFnSetCooldownRemaining->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.GetCooldownRemaining
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bCheckLinkedPower              ( CPF_OptionalParm | CPF_Parm )

float UBioPower::GetCooldownRemaining ( unsigned long bCheckLinkedPower )
{
	static UFunction* pFnGetCooldownRemaining = NULL;

	if ( ! pFnGetCooldownRemaining )
		pFnGetCooldownRemaining = (UFunction*) UObject::GObjObjects()->Data[ 46795 ];

	UBioPower_execGetCooldownRemaining_Parms GetCooldownRemaining_Parms;
	GetCooldownRemaining_Parms.bCheckLinkedPower = bCheckLinkedPower;

	pFnGetCooldownRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCooldownRemaining, &GetCooldownRemaining_Parms, NULL );

	pFnGetCooldownRemaining->FunctionFlags |= 0x400;

	return GetCooldownRemaining_Parms.ReturnValue;
};

// Function SFXGame.BioPower.StopPowerBuildUp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// class UBioGameProperty*        oGameProperty                  ( CPF_Parm )

bool UBioPower::StopPowerBuildUp ( class AActor* oCaster, class AActor* oTarget, class UBioGameProperty* oGameProperty )
{
	static UFunction* pFnStopPowerBuildUp = NULL;

	if ( ! pFnStopPowerBuildUp )
		pFnStopPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 46790 ];

	UBioPower_execStopPowerBuildUp_Parms StopPowerBuildUp_Parms;
	StopPowerBuildUp_Parms.oCaster = oCaster;
	StopPowerBuildUp_Parms.oTarget = oTarget;
	StopPowerBuildUp_Parms.oGameProperty = oGameProperty;

	pFnStopPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopPowerBuildUp, &StopPowerBuildUp_Parms, NULL );

	pFnStopPowerBuildUp->FunctionFlags |= 0x400;

	return StopPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetPowerBuildUp
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// float                          fPowerBuildUp                  ( CPF_Parm | CPF_OutParm )
// class UBioGameProperty*        oGameProperty                  ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetPowerBuildUp ( class AActor* oCaster, class AActor* oTarget, float* fPowerBuildUp, class UBioGameProperty** oGameProperty )
{
	static UFunction* pFnGetPowerBuildUp = NULL;

	if ( ! pFnGetPowerBuildUp )
		pFnGetPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 46784 ];

	UBioPower_execGetPowerBuildUp_Parms GetPowerBuildUp_Parms;
	GetPowerBuildUp_Parms.oCaster = oCaster;
	GetPowerBuildUp_Parms.oTarget = oTarget;

	pFnGetPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerBuildUp, &GetPowerBuildUp_Parms, NULL );

	pFnGetPowerBuildUp->FunctionFlags |= 0x400;

	if ( fPowerBuildUp )
		*fPowerBuildUp = GetPowerBuildUp_Parms.fPowerBuildUp;

	if ( oGameProperty )
		*oGameProperty = GetPowerBuildUp_Parms.oGameProperty;

	return GetPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioPower.StartPowerBuildUp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )

bool UBioPower::StartPowerBuildUp ( class AActor* oCaster, class AActor* oTarget )
{
	static UFunction* pFnStartPowerBuildUp = NULL;

	if ( ! pFnStartPowerBuildUp )
		pFnStartPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 46780 ];

	UBioPower_execStartPowerBuildUp_Parms StartPowerBuildUp_Parms;
	StartPowerBuildUp_Parms.oCaster = oCaster;
	StartPowerBuildUp_Parms.oTarget = oTarget;

	pFnStartPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartPowerBuildUp, &StartPowerBuildUp_Parms, NULL );

	pFnStartPowerBuildUp->FunctionFlags |= 0x400;

	return StartPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsSuppressed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsSuppressed ( )
{
	static UFunction* pFnIsSuppressed = NULL;

	if ( ! pFnIsSuppressed )
		pFnIsSuppressed = (UFunction*) UObject::GObjObjects()->Data[ 46778 ];

	UBioPower_execIsSuppressed_Parms IsSuppressed_Parms;

	pFnIsSuppressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSuppressed, &IsSuppressed_Parms, NULL );

	pFnIsSuppressed->FunctionFlags |= 0x400;

	return IsSuppressed_Parms.ReturnValue;
};

// Function SFXGame.BioPower.SuppressPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSuppress                      ( CPF_Parm )

int UBioPower::SuppressPower ( unsigned long bSuppress )
{
	static UFunction* pFnSuppressPower = NULL;

	if ( ! pFnSuppressPower )
		pFnSuppressPower = (UFunction*) UObject::GObjObjects()->Data[ 46775 ];

	UBioPower_execSuppressPower_Parms SuppressPower_Parms;
	SuppressPower_Parms.bSuppress = bSuppress;

	pFnSuppressPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSuppressPower, &SuppressPower_Parms, NULL );

	pFnSuppressPower->FunctionFlags |= 0x400;

	return SuppressPower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.IsEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::IsEnabled ( )
{
	static UFunction* pFnIsEnabled = NULL;

	if ( ! pFnIsEnabled )
		pFnIsEnabled = (UFunction*) UObject::GObjObjects()->Data[ 45665 ];

	UBioPower_execIsEnabled_Parms IsEnabled_Parms;

	pFnIsEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEnabled, &IsEnabled_Parms, NULL );

	pFnIsEnabled->FunctionFlags |= 0x400;

	return IsEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioPower.EnablePower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnable                        ( CPF_Parm )

bool UBioPower::EnablePower ( unsigned long bEnable )
{
	static UFunction* pFnEnablePower = NULL;

	if ( ! pFnEnablePower )
		pFnEnablePower = (UFunction*) UObject::GObjObjects()->Data[ 46772 ];

	UBioPower_execEnablePower_Parms EnablePower_Parms;
	EnablePower_Parms.bEnable = bEnable;

	pFnEnablePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnablePower, &EnablePower_Parms, NULL );

	pFnEnablePower->FunctionFlags |= 0x400;

	return EnablePower_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eLocation                      ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetLocation ( unsigned char* eLocation )
{
	static UFunction* pFnGetLocation = NULL;

	if ( ! pFnGetLocation )
		pFnGetLocation = (UFunction*) UObject::GObjObjects()->Data[ 46769 ];

	UBioPower_execGetLocation_Parms GetLocation_Parms;

	pFnGetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocation, &GetLocation_Parms, NULL );

	pFnGetLocation->FunctionFlags |= 0x400;

	if ( eLocation )
		*eLocation = GetLocation_Parms.eLocation;

	return GetLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetImpactShape
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eShape                         ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetImpactShape ( unsigned char* eShape )
{
	static UFunction* pFnGetImpactShape = NULL;

	if ( ! pFnGetImpactShape )
		pFnGetImpactShape = (UFunction*) UObject::GObjObjects()->Data[ 46766 ];

	UBioPower_execGetImpactShape_Parms GetImpactShape_Parms;

	pFnGetImpactShape->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetImpactShape, &GetImpactShape_Parms, NULL );

	pFnGetImpactShape->FunctionFlags |= 0x400;

	if ( eShape )
		*eShape = GetImpactShape_Parms.eShape;

	return GetImpactShape_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetProjectileAttachPoint
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )
// struct FVector                 vAttachPoint                   ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetProjectileAttachPoint ( class APawn* pPawn, struct FVector* vAttachPoint )
{
	static UFunction* pFnGetProjectileAttachPoint = NULL;

	if ( ! pFnGetProjectileAttachPoint )
		pFnGetProjectileAttachPoint = (UFunction*) UObject::GObjObjects()->Data[ 46762 ];

	UBioPower_execGetProjectileAttachPoint_Parms GetProjectileAttachPoint_Parms;
	GetProjectileAttachPoint_Parms.pPawn = pPawn;

	pFnGetProjectileAttachPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetProjectileAttachPoint, &GetProjectileAttachPoint_Parms, NULL );

	pFnGetProjectileAttachPoint->FunctionFlags |= 0x400;

	if ( vAttachPoint )
		memcpy ( vAttachPoint, &GetProjectileAttachPoint_Parms.vAttachPoint, 0xC );

	return GetProjectileAttachPoint_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetAnim
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUseCoverAnimations            ( CPF_Parm )
// struct FString                 sAnim                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FName                   nmAnimSet                      ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetAnim ( unsigned long bUseCoverAnimations, struct FString* sAnim, struct FName* nmAnimSet )
{
	static UFunction* pFnGetAnim = NULL;

	if ( ! pFnGetAnim )
		pFnGetAnim = (UFunction*) UObject::GObjObjects()->Data[ 46757 ];

	UBioPower_execGetAnim_Parms GetAnim_Parms;
	GetAnim_Parms.bUseCoverAnimations = bUseCoverAnimations;

	pFnGetAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnim, &GetAnim_Parms, NULL );

	pFnGetAnim->FunctionFlags |= 0x400;

	if ( sAnim )
		memcpy ( sAnim, &GetAnim_Parms.sAnim, 0x10 );

	if ( nmAnimSet )
		memcpy ( nmAnimSet, &GetAnim_Parms.nmAnimSet, 0x8 );

	return GetAnim_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetParameter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmParameter                    ( CPF_Parm )

float UBioPower::GetParameter ( struct FName nmParameter )
{
	static UFunction* pFnGetParameter = NULL;

	if ( ! pFnGetParameter )
		pFnGetParameter = (UFunction*) UObject::GObjObjects()->Data[ 43040 ];

	UBioPower_execGetParameter_Parms GetParameter_Parms;
	memcpy ( &GetParameter_Parms.nmParameter, &nmParameter, 0x8 );

	pFnGetParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParameter, &GetParameter_Parms, NULL );

	pFnGetParameter->FunctionFlags |= 0x400;

	return GetParameter_Parms.ReturnValue;
};

// Function SFXGame.BioPower.DoImpactVFX
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )
// class UBioActivePower*         pPowerInstance                 ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitNormal                     ( CPF_Parm | CPF_OutParm )

void UBioPower::DoImpactVFX ( class AActor* oActor, class UBioActivePower* pPowerInstance, struct FName BoneName, struct FVector* vLocation, struct FVector* vHitNormal )
{
	static UFunction* pFnDoImpactVFX = NULL;

	if ( ! pFnDoImpactVFX )
		pFnDoImpactVFX = (UFunction*) UObject::GObjObjects()->Data[ 46750 ];

	UBioPower_execDoImpactVFX_Parms DoImpactVFX_Parms;
	DoImpactVFX_Parms.oActor = oActor;
	DoImpactVFX_Parms.pPowerInstance = pPowerInstance;
	memcpy ( &DoImpactVFX_Parms.BoneName, &BoneName, 0x8 );

	pFnDoImpactVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoImpactVFX, &DoImpactVFX_Parms, NULL );

	pFnDoImpactVFX->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &DoImpactVFX_Parms.vLocation, 0xC );

	if ( vHitNormal )
		memcpy ( vHitNormal, &DoImpactVFX_Parms.vHitNormal, 0xC );
};

// Function SFXGame.BioPower.GetVFXLifetime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eResource                      ( CPF_Parm )
// class UBioActivePower*         oPowerInstance                 ( CPF_Parm )

float UBioPower::GetVFXLifetime ( unsigned char eResource, class UBioActivePower* oPowerInstance )
{
	static UFunction* pFnGetVFXLifetime = NULL;

	if ( ! pFnGetVFXLifetime )
		pFnGetVFXLifetime = (UFunction*) UObject::GObjObjects()->Data[ 46746 ];

	UBioPower_execGetVFXLifetime_Parms GetVFXLifetime_Parms;
	GetVFXLifetime_Parms.eResource = eResource;
	GetVFXLifetime_Parms.oPowerInstance = oPowerInstance;

	pFnGetVFXLifetime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVFXLifetime, &GetVFXLifetime_Parms, NULL );

	pFnGetVFXLifetime->FunctionFlags |= 0x400;

	return GetVFXLifetime_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetVFXTemplate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVFXTemplate*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eResource                      ( CPF_Parm )

class UBioVFXTemplate* UBioPower::GetVFXTemplate ( unsigned char eResource )
{
	static UFunction* pFnGetVFXTemplate = NULL;

	if ( ! pFnGetVFXTemplate )
		pFnGetVFXTemplate = (UFunction*) UObject::GObjObjects()->Data[ 46743 ];

	UBioPower_execGetVFXTemplate_Parms GetVFXTemplate_Parms;
	GetVFXTemplate_Parms.eResource = eResource;

	pFnGetVFXTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVFXTemplate, &GetVFXTemplate_Parms, NULL );

	pFnGetVFXTemplate->FunctionFlags |= 0x400;

	return GetVFXTemplate_Parms.ReturnValue;
};

// Function SFXGame.BioPower.EndVisualEffect
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )
// unsigned long                  bAllowVFXToFinish              ( CPF_OptionalParm | CPF_Parm )

void UBioPower::EndVisualEffect ( unsigned char eResource, unsigned long bAllowVFXToFinish )
{
	static UFunction* pFnEndVisualEffect = NULL;

	if ( ! pFnEndVisualEffect )
		pFnEndVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 46740 ];

	UBioPower_execEndVisualEffect_Parms EndVisualEffect_Parms;
	EndVisualEffect_Parms.eResource = eResource;
	EndVisualEffect_Parms.bAllowVFXToFinish = bAllowVFXToFinish;

	pFnEndVisualEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndVisualEffect, &EndVisualEffect_Parms, NULL );

	pFnEndVisualEffect->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.GetVisualEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eResource                      ( CPF_Parm )

class ABioVisualEffect* UBioPower::GetVisualEffect ( unsigned char eResource )
{
	static UFunction* pFnGetVisualEffect = NULL;

	if ( ! pFnGetVisualEffect )
		pFnGetVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 46737 ];

	UBioPower_execGetVisualEffect_Parms GetVisualEffect_Parms;
	GetVisualEffect_Parms.eResource = eResource;

	pFnGetVisualEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualEffect, &GetVisualEffect_Parms, NULL );

	pFnGetVisualEffect->FunctionFlags |= 0x400;

	return GetVisualEffect_Parms.ReturnValue;
};

// Function SFXGame.BioPower.LoadVFXAppearance
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPower::LoadVFXAppearance ( )
{
	static UFunction* pFnLoadVFXAppearance = NULL;

	if ( ! pFnLoadVFXAppearance )
		pFnLoadVFXAppearance = (UFunction*) UObject::GObjObjects()->Data[ 46735 ];

	UBioPower_execLoadVFXAppearance_Parms LoadVFXAppearance_Parms;

	pFnLoadVFXAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadVFXAppearance, &LoadVFXAppearance_Parms, NULL );

	pFnLoadVFXAppearance->FunctionFlags |= 0x400;

	return LoadVFXAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioPower.GetPowerScript
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPowerScript                  ( CPF_Parm | CPF_OutParm )

bool UBioPower::GetPowerScript ( struct FName* nmPowerScript )
{
	static UFunction* pFnGetPowerScript = NULL;

	if ( ! pFnGetPowerScript )
		pFnGetPowerScript = (UFunction*) UObject::GObjObjects()->Data[ 46732 ];

	UBioPower_execGetPowerScript_Parms GetPowerScript_Parms;

	pFnGetPowerScript->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerScript, &GetPowerScript_Parms, NULL );

	pFnGetPowerScript->FunctionFlags |= 0x400;

	if ( nmPowerScript )
		memcpy ( nmPowerScript, &GetPowerScript_Parms.nmPowerScript, 0x8 );

	return GetPowerScript_Parms.ReturnValue;
};

// Function SFXGame.BioPower.CreatePowerIndexMap
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UBio2DA*                 oPowers2DA                     ( CPF_Parm )

void UBioPower::CreatePowerIndexMap ( class UBio2DA* oPowers2DA )
{
	static UFunction* pFnCreatePowerIndexMap = NULL;

	if ( ! pFnCreatePowerIndexMap )
		pFnCreatePowerIndexMap = (UFunction*) UObject::GObjObjects()->Data[ 46730 ];

	UBioPower_execCreatePowerIndexMap_Parms CreatePowerIndexMap_Parms;
	CreatePowerIndexMap_Parms.oPowers2DA = oPowers2DA;

	pFnCreatePowerIndexMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreatePowerIndexMap, &CreatePowerIndexMap_Parms, NULL );

	pFnCreatePowerIndexMap->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.InitializePower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmPower                        ( CPF_Parm )

void UBioPower::InitializePower ( struct FName nmPower )
{
	static UFunction* pFnInitializePower = NULL;

	if ( ! pFnInitializePower )
		pFnInitializePower = (UFunction*) UObject::GObjObjects()->Data[ 46728 ];

	UBioPower_execInitializePower_Parms InitializePower_Parms;
	memcpy ( &InitializePower_Parms.nmPower, &nmPower, 0x8 );

	pFnInitializePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializePower, &InitializePower_Parms, NULL );

	pFnInitializePower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.RemoveFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioPower::RemoveFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnRemoveFloatAttributeModifier = NULL;

	if ( ! pFnRemoveFloatAttributeModifier )
		pFnRemoveFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 46723 ];

	UBioPower_execRemoveFloatAttributeModifier_Parms RemoveFloatAttributeModifier_Parms;
	memcpy ( &RemoveFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	RemoveFloatAttributeModifier_Parms.modType = modType;
	RemoveFloatAttributeModifier_Parms.fValue = fValue;
	RemoveFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnRemoveFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFloatAttributeModifier, &RemoveFloatAttributeModifier_Parms, NULL );

	pFnRemoveFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.AddFloatAttributeModifier
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioPower::AddFloatAttributeModifier ( struct FName attribute, unsigned char modType, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnAddFloatAttributeModifier = NULL;

	if ( ! pFnAddFloatAttributeModifier )
		pFnAddFloatAttributeModifier = (UFunction*) UObject::GObjObjects()->Data[ 46718 ];

	UBioPower_execAddFloatAttributeModifier_Parms AddFloatAttributeModifier_Parms;
	memcpy ( &AddFloatAttributeModifier_Parms.attribute, &attribute, 0x8 );
	AddFloatAttributeModifier_Parms.modType = modType;
	AddFloatAttributeModifier_Parms.fValue = fValue;
	AddFloatAttributeModifier_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnAddFloatAttributeModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatAttributeModifier, &AddFloatAttributeModifier_Parms, NULL );

	pFnAddFloatAttributeModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPower.SetFloatAttribute
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   attribute                      ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// int                            nIndexOfAttributeInArray       ( CPF_OptionalParm | CPF_Parm )

void UBioPower::SetFloatAttribute ( struct FName attribute, float fValue, int nIndexOfAttributeInArray )
{
	static UFunction* pFnSetFloatAttribute = NULL;

	if ( ! pFnSetFloatAttribute )
		pFnSetFloatAttribute = (UFunction*) UObject::GObjObjects()->Data[ 46714 ];

	UBioPower_execSetFloatAttribute_Parms SetFloatAttribute_Parms;
	memcpy ( &SetFloatAttribute_Parms.attribute, &attribute, 0x8 );
	SetFloatAttribute_Parms.fValue = fValue;
	SetFloatAttribute_Parms.nIndexOfAttributeInArray = nIndexOfAttributeInArray;

	pFnSetFloatAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatAttribute, &SetFloatAttribute_Parms, NULL );

	pFnSetFloatAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPowerManager.GetAimTargetForPlayer
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          fMaxRange                      ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 vTargetLocation                ( CPF_Parm | CPF_OutParm )

void UBioPowerManager::GetAimTargetForPlayer ( float fMaxRange, class AActor** oTarget, struct FVector* vTargetLocation )
{
	static UFunction* pFnGetAimTargetForPlayer = NULL;

	if ( ! pFnGetAimTargetForPlayer )
		pFnGetAimTargetForPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57499 ];

	UBioPowerManager_execGetAimTargetForPlayer_Parms GetAimTargetForPlayer_Parms;
	GetAimTargetForPlayer_Parms.fMaxRange = fMaxRange;

	pFnGetAimTargetForPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAimTargetForPlayer, &GetAimTargetForPlayer_Parms, NULL );

	pFnGetAimTargetForPlayer->FunctionFlags |= 0x400;

	if ( oTarget )
		*oTarget = GetAimTargetForPlayer_Parms.oTarget;

	if ( vTargetLocation )
		memcpy ( vTargetLocation, &GetAimTargetForPlayer_Parms.vTargetLocation, 0xC );
};

// Function SFXGame.BioPowerManager.AreActorsFriendly
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oFirstActor                    ( CPF_Parm )
// class AActor*                  oSecondActor                   ( CPF_Parm )

bool UBioPowerManager::AreActorsFriendly ( class AActor* oFirstActor, class AActor* oSecondActor )
{
	static UFunction* pFnAreActorsFriendly = NULL;

	if ( ! pFnAreActorsFriendly )
		pFnAreActorsFriendly = (UFunction*) UObject::GObjObjects()->Data[ 57495 ];

	UBioPowerManager_execAreActorsFriendly_Parms AreActorsFriendly_Parms;
	AreActorsFriendly_Parms.oFirstActor = oFirstActor;
	AreActorsFriendly_Parms.oSecondActor = oSecondActor;

	pFnAreActorsFriendly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAreActorsFriendly, &AreActorsFriendly_Parms, NULL );

	pFnAreActorsFriendly->FunctionFlags |= 0x400;

	return AreActorsFriendly_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.CanImpactActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

bool UBioPowerManager::CanImpactActor ( class AActor* oActor )
{
	static UFunction* pFnCanImpactActor = NULL;

	if ( ! pFnCanImpactActor )
		pFnCanImpactActor = (UFunction*) UObject::GObjObjects()->Data[ 57492 ];

	UBioPowerManager_execCanImpactActor_Parms CanImpactActor_Parms;
	CanImpactActor_Parms.oActor = oActor;

	pFnCanImpactActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanImpactActor, &CanImpactActor_Parms, NULL );

	pFnCanImpactActor->FunctionFlags |= 0x400;

	return CanImpactActor_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.CheckLOSToLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oSourceActor                   ( CPF_Parm )
// struct FVector                 vStartLocation                 ( CPF_Parm )
// struct FVector                 vEndLocation                   ( CPF_Parm )
// float                          fMaxRange                      ( CPF_Parm )
// unsigned long                  bIgnoreFriendlies              ( CPF_Parm )
// class AActor*                  oHitActor                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitLocation                   ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitNormal                     ( CPF_Parm | CPF_OutParm )

bool UBioPowerManager::CheckLOSToLocation ( class AActor* oSourceActor, struct FVector vStartLocation, struct FVector vEndLocation, float fMaxRange, unsigned long bIgnoreFriendlies, class AActor** oHitActor, struct FVector* vHitLocation, struct FVector* vHitNormal )
{
	static UFunction* pFnCheckLOSToLocation = NULL;

	if ( ! pFnCheckLOSToLocation )
		pFnCheckLOSToLocation = (UFunction*) UObject::GObjObjects()->Data[ 57482 ];

	UBioPowerManager_execCheckLOSToLocation_Parms CheckLOSToLocation_Parms;
	CheckLOSToLocation_Parms.oSourceActor = oSourceActor;
	memcpy ( &CheckLOSToLocation_Parms.vStartLocation, &vStartLocation, 0xC );
	memcpy ( &CheckLOSToLocation_Parms.vEndLocation, &vEndLocation, 0xC );
	CheckLOSToLocation_Parms.fMaxRange = fMaxRange;
	CheckLOSToLocation_Parms.bIgnoreFriendlies = bIgnoreFriendlies;

	pFnCheckLOSToLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLOSToLocation, &CheckLOSToLocation_Parms, NULL );

	pFnCheckLOSToLocation->FunctionFlags |= 0x400;

	if ( oHitActor )
		*oHitActor = CheckLOSToLocation_Parms.oHitActor;

	if ( vHitLocation )
		memcpy ( vHitLocation, &CheckLOSToLocation_Parms.vHitLocation, 0xC );

	if ( vHitNormal )
		memcpy ( vHitNormal, &CheckLOSToLocation_Parms.vHitNormal, 0xC );

	return CheckLOSToLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.CheckLOSToActor
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oSourceActor                   ( CPF_Parm )
// class AActor*                  oDestinationActor              ( CPF_Parm )
// struct FVector                 vStartLocation                 ( CPF_Parm )
// float                          fMaxRange                      ( CPF_Parm )
// unsigned long                  bIgnoreFriendlies              ( CPF_Parm )
// class AActor*                  oHitActor                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitLocation                   ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitNormal                     ( CPF_Parm | CPF_OutParm )

bool UBioPowerManager::CheckLOSToActor ( class AActor* oSourceActor, class AActor* oDestinationActor, struct FVector vStartLocation, float fMaxRange, unsigned long bIgnoreFriendlies, class AActor** oHitActor, struct FVector* vHitLocation, struct FVector* vHitNormal )
{
	static UFunction* pFnCheckLOSToActor = NULL;

	if ( ! pFnCheckLOSToActor )
		pFnCheckLOSToActor = (UFunction*) UObject::GObjObjects()->Data[ 57472 ];

	UBioPowerManager_execCheckLOSToActor_Parms CheckLOSToActor_Parms;
	CheckLOSToActor_Parms.oSourceActor = oSourceActor;
	CheckLOSToActor_Parms.oDestinationActor = oDestinationActor;
	memcpy ( &CheckLOSToActor_Parms.vStartLocation, &vStartLocation, 0xC );
	CheckLOSToActor_Parms.fMaxRange = fMaxRange;
	CheckLOSToActor_Parms.bIgnoreFriendlies = bIgnoreFriendlies;

	pFnCheckLOSToActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLOSToActor, &CheckLOSToActor_Parms, NULL );

	pFnCheckLOSToActor->FunctionFlags |= 0x400;

	if ( oHitActor )
		*oHitActor = CheckLOSToActor_Parms.oHitActor;

	if ( vHitLocation )
		memcpy ( vHitLocation, &CheckLOSToActor_Parms.vHitLocation, 0xC );

	if ( vHitNormal )
		memcpy ( vHitNormal, &CheckLOSToActor_Parms.vHitNormal, 0xC );

	return CheckLOSToActor_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.RemoveProjectile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioLinePowerProjectile* oProjectile                    ( CPF_Parm )

void UBioPowerManager::RemoveProjectile ( class ABioLinePowerProjectile* oProjectile )
{
	static UFunction* pFnRemoveProjectile = NULL;

	if ( ! pFnRemoveProjectile )
		pFnRemoveProjectile = (UFunction*) UObject::GObjObjects()->Data[ 57470 ];

	UBioPowerManager_execRemoveProjectile_Parms RemoveProjectile_Parms;
	RemoveProjectile_Parms.oProjectile = oProjectile;

	pFnRemoveProjectile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveProjectile, &RemoveProjectile_Parms, NULL );

	pFnRemoveProjectile->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPowerManager.AddProjectile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioLinePowerProjectile* oProjectile                    ( CPF_Parm )

void UBioPowerManager::AddProjectile ( class ABioLinePowerProjectile* oProjectile )
{
	static UFunction* pFnAddProjectile = NULL;

	if ( ! pFnAddProjectile )
		pFnAddProjectile = (UFunction*) UObject::GObjObjects()->Data[ 57468 ];

	UBioPowerManager_execAddProjectile_Parms AddProjectile_Parms;
	AddProjectile_Parms.oProjectile = oProjectile;

	pFnAddProjectile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddProjectile, &AddProjectile_Parms, NULL );

	pFnAddProjectile->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPowerManager.GetCurrentArmorEmitterPower
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEpicPawnBehavior*    oBehavior                      ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm | CPF_OutParm )
// int                            nIndexInPowerArray             ( CPF_Parm | CPF_OutParm )

bool UBioPowerManager::GetCurrentArmorEmitterPower ( class UBioEpicPawnBehavior* oBehavior, class UBioPower** oPower, int* nIndexInPowerArray )
{
	static UFunction* pFnGetCurrentArmorEmitterPower = NULL;

	if ( ! pFnGetCurrentArmorEmitterPower )
		pFnGetCurrentArmorEmitterPower = (UFunction*) UObject::GObjObjects()->Data[ 57463 ];

	UBioPowerManager_execGetCurrentArmorEmitterPower_Parms GetCurrentArmorEmitterPower_Parms;
	GetCurrentArmorEmitterPower_Parms.oBehavior = oBehavior;

	pFnGetCurrentArmorEmitterPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentArmorEmitterPower, &GetCurrentArmorEmitterPower_Parms, NULL );

	pFnGetCurrentArmorEmitterPower->FunctionFlags |= 0x400;

	if ( oPower )
		*oPower = GetCurrentArmorEmitterPower_Parms.oPower;

	if ( nIndexInPowerArray )
		*nIndexInPowerArray = GetCurrentArmorEmitterPower_Parms.nIndexInPowerArray;

	return GetCurrentArmorEmitterPower_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.GetCurrentHealPower
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEpicPawnBehavior*    oBehavior                      ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm | CPF_OutParm )
// int                            nIndexInPowerArray             ( CPF_Parm | CPF_OutParm )

bool UBioPowerManager::GetCurrentHealPower ( class UBioEpicPawnBehavior* oBehavior, class UBioPower** oPower, int* nIndexInPowerArray )
{
	static UFunction* pFnGetCurrentHealPower = NULL;

	if ( ! pFnGetCurrentHealPower )
		pFnGetCurrentHealPower = (UFunction*) UObject::GObjObjects()->Data[ 57458 ];

	UBioPowerManager_execGetCurrentHealPower_Parms GetCurrentHealPower_Parms;
	GetCurrentHealPower_Parms.oBehavior = oBehavior;

	pFnGetCurrentHealPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentHealPower, &GetCurrentHealPower_Parms, NULL );

	pFnGetCurrentHealPower->FunctionFlags |= 0x400;

	if ( oPower )
		*oPower = GetCurrentHealPower_Parms.oPower;

	if ( nIndexInPowerArray )
		*nIndexInPowerArray = GetCurrentHealPower_Parms.nIndexInPowerArray;

	return GetCurrentHealPower_Parms.ReturnValue;
};

// Function SFXGame.BioPowerManager.GetCurrentWeaponPower
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEpicPawnBehavior*    oBehavior                      ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm | CPF_OutParm )
// int                            nIndexInPowerArray             ( CPF_Parm | CPF_OutParm )

bool UBioPowerManager::GetCurrentWeaponPower ( class UBioEpicPawnBehavior* oBehavior, class UBioPower** oPower, int* nIndexInPowerArray )
{
	static UFunction* pFnGetCurrentWeaponPower = NULL;

	if ( ! pFnGetCurrentWeaponPower )
		pFnGetCurrentWeaponPower = (UFunction*) UObject::GObjObjects()->Data[ 57453 ];

	UBioPowerManager_execGetCurrentWeaponPower_Parms GetCurrentWeaponPower_Parms;
	GetCurrentWeaponPower_Parms.oBehavior = oBehavior;

	pFnGetCurrentWeaponPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentWeaponPower, &GetCurrentWeaponPower_Parms, NULL );

	pFnGetCurrentWeaponPower->FunctionFlags |= 0x400;

	if ( oPower )
		*oPower = GetCurrentWeaponPower_Parms.oPower;

	if ( nIndexInPowerArray )
		*nIndexInPowerArray = GetCurrentWeaponPower_Parms.nIndexInPowerArray;

	return GetCurrentWeaponPower_Parms.ReturnValue;
};

// Function SFXGame.BioAudioVolume.myTimerPop
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioAudioVolume::myTimerPop ( )
{
	static UFunction* pFnmyTimerPop = NULL;

	if ( ! pFnmyTimerPop )
		pFnmyTimerPop = (UFunction*) UObject::GObjObjects()->Data[ 50088 ];

	ABioAudioVolume_execmyTimerPop_Parms myTimerPop_Parms;

	pFnmyTimerPop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnmyTimerPop, &myTimerPop_Parms, NULL );

	pFnmyTimerPop->FunctionFlags |= 0x400;
};

// Function SFXGame.BioAudioVolume.TimerPop
// [0x00020002] 
// Parameters infos:
// class ABioAudioVolumeTimer*    T                              ( CPF_Parm )

void ABioAudioVolume::TimerPop ( class ABioAudioVolumeTimer* T )
{
	static UFunction* pFnTimerPop = NULL;

	if ( ! pFnTimerPop )
		pFnTimerPop = (UFunction*) UObject::GObjObjects()->Data[ 50086 ];

	ABioAudioVolume_execTimerPop_Parms TimerPop_Parms;
	TimerPop_Parms.T = T;

	this->ProcessEvent ( pFnTimerPop, &TimerPop_Parms, NULL );
};

// Function SFXGame.BioAudioVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioAudioVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50084 ];

	ABioAudioVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioAudioVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioAudioVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50076 ];

	ABioAudioVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioAudioVolume.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioAudioVolume::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50073 ];

	ABioAudioVolume_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioMusicVolume.SetContainsPlayer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bContainsPlayer                ( CPF_Parm )

void ABioMusicVolume::SetContainsPlayer ( unsigned long bContainsPlayer )
{
	static UFunction* pFnSetContainsPlayer = NULL;

	if ( ! pFnSetContainsPlayer )
		pFnSetContainsPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55764 ];

	ABioMusicVolume_execSetContainsPlayer_Parms SetContainsPlayer_Parms;
	SetContainsPlayer_Parms.bContainsPlayer = bContainsPlayer;

	pFnSetContainsPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContainsPlayer, &SetContainsPlayer_Parms, NULL );

	pFnSetContainsPlayer->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.GetIsMusicOverriddenByXBox
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioMusicVolume::GetIsMusicOverriddenByXBox ( )
{
	static UFunction* pFnGetIsMusicOverriddenByXBox = NULL;

	if ( ! pFnGetIsMusicOverriddenByXBox )
		pFnGetIsMusicOverriddenByXBox = (UFunction*) UObject::GObjObjects()->Data[ 55762 ];

	ABioMusicVolume_execGetIsMusicOverriddenByXBox_Parms GetIsMusicOverriddenByXBox_Parms;

	pFnGetIsMusicOverriddenByXBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsMusicOverriddenByXBox, &GetIsMusicOverriddenByXBox_Parms, NULL );

	pFnGetIsMusicOverriddenByXBox->FunctionFlags |= 0x400;

	return GetIsMusicOverriddenByXBox_Parms.ReturnValue;
};

// Function SFXGame.BioMusicVolume.CheckCurrentMusicState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioMusicVolume::CheckCurrentMusicState ( )
{
	static UFunction* pFnCheckCurrentMusicState = NULL;

	if ( ! pFnCheckCurrentMusicState )
		pFnCheckCurrentMusicState = (UFunction*) UObject::GObjObjects()->Data[ 55761 ];

	ABioMusicVolume_execCheckCurrentMusicState_Parms CheckCurrentMusicState_Parms;

	pFnCheckCurrentMusicState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckCurrentMusicState, &CheckCurrentMusicState_Parms, NULL );

	pFnCheckCurrentMusicState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ABioMusicVolume::SetEnabled ( unsigned long bEnabled )
{
	static UFunction* pFnSetEnabled = NULL;

	if ( ! pFnSetEnabled )
		pFnSetEnabled = (UFunction*) UObject::GObjObjects()->Data[ 55759 ];

	ABioMusicVolume_execSetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bEnabled = bEnabled;

	pFnSetEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEnabled, &SetEnabled_Parms, NULL );

	pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.Initialise2DA
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioMusicVolume::Initialise2DA ( )
{
	static UFunction* pFnInitialise2DA = NULL;

	if ( ! pFnInitialise2DA )
		pFnInitialise2DA = (UFunction*) UObject::GObjObjects()->Data[ 55749 ];

	ABioMusicVolume_execInitialise2DA_Parms Initialise2DA_Parms;

	pFnInitialise2DA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialise2DA, &Initialise2DA_Parms, NULL );

	pFnInitialise2DA->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.StopMusic
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioMusicVolume::StopMusic ( )
{
	static UFunction* pFnStopMusic = NULL;

	if ( ! pFnStopMusic )
		pFnStopMusic = (UFunction*) UObject::GObjObjects()->Data[ 55758 ];

	ABioMusicVolume_execStopMusic_Parms StopMusic_Parms;

	pFnStopMusic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopMusic, &StopMusic_Parms, NULL );

	pFnStopMusic->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.StartMusic
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioMusicVolume::StartMusic ( )
{
	static UFunction* pFnStartMusic = NULL;

	if ( ! pFnStartMusic )
		pFnStartMusic = (UFunction*) UObject::GObjObjects()->Data[ 55757 ];

	ABioMusicVolume_execStartMusic_Parms StartMusic_Parms;

	pFnStartMusic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartMusic, &StartMusic_Parms, NULL );

	pFnStartMusic->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.CheckPriority
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioMusicVolume::CheckPriority ( )
{
	static UFunction* pFnCheckPriority = NULL;

	if ( ! pFnCheckPriority )
		pFnCheckPriority = (UFunction*) UObject::GObjObjects()->Data[ 55755 ];

	ABioMusicVolume_execCheckPriority_Parms CheckPriority_Parms;

	pFnCheckPriority->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckPriority, &CheckPriority_Parms, NULL );

	pFnCheckPriority->FunctionFlags |= 0x400;

	return CheckPriority_Parms.ReturnValue;
};

// Function SFXGame.BioMusicVolume.TimerPop
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioMusicVolumeTimer*    T                              ( CPF_Parm )

void ABioMusicVolume::TimerPop ( class ABioMusicVolumeTimer* T )
{
	static UFunction* pFnTimerPop = NULL;

	if ( ! pFnTimerPop )
		pFnTimerPop = (UFunction*) UObject::GObjObjects()->Data[ 55753 ];

	ABioMusicVolume_execTimerPop_Parms TimerPop_Parms;
	TimerPop_Parms.T = T;

	pFnTimerPop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTimerPop, &TimerPop_Parms, NULL );

	pFnTimerPop->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMusicVolume.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioMusicVolume::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55748 ];

	ABioMusicVolume_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioMusicVolumeTimer.Timer
// [0x00020002] 
// Parameters infos:

void ABioMusicVolumeTimer::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 55778 ];

	ABioMusicVolumeTimer_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function SFXGame.BioMusicVolumeTimer.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioMusicVolumeTimer::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55776 ];

	ABioMusicVolumeTimer_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ReverbPreset.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ReverbPreset::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60149 ];

	UBioSeqAct_ReverbPreset_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ReverbVolume.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ReverbVolume::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60152 ];

	UBioSeqAct_ReverbVolume_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GrenadeDetached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oGrenade                       ( CPF_Parm )

void UBioActorBehavior::GrenadeDetached ( class AActor* oGrenade )
{
	static UFunction* pFnGrenadeDetached = NULL;

	if ( ! pFnGrenadeDetached )
		pFnGrenadeDetached = (UFunction*) UObject::GObjObjects()->Data[ 41819 ];

	UBioActorBehavior_execGrenadeDetached_Parms GrenadeDetached_Parms;
	GrenadeDetached_Parms.oGrenade = oGrenade;

	pFnGrenadeDetached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGrenadeDetached, &GrenadeDetached_Parms, NULL );

	pFnGrenadeDetached->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.GrenadeAttached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oGrenade                       ( CPF_Parm )

void UBioActorBehavior::GrenadeAttached ( class AActor* oGrenade )
{
	static UFunction* pFnGrenadeAttached = NULL;

	if ( ! pFnGrenadeAttached )
		pFnGrenadeAttached = (UFunction*) UObject::GObjObjects()->Data[ 41817 ];

	UBioActorBehavior_execGrenadeAttached_Parms GrenadeAttached_Parms;
	GrenadeAttached_Parms.oGrenade = oGrenade;

	pFnGrenadeAttached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGrenadeAttached, &GrenadeAttached_Parms, NULL );

	pFnGrenadeAttached->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.GetPowerText
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sPowerText                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioActorBehavior::GetPowerText ( struct FString* sPowerText )
{
	static UFunction* pFnGetPowerText = NULL;

	if ( ! pFnGetPowerText )
		pFnGetPowerText = (UFunction*) UObject::GObjObjects()->Data[ 41814 ];

	UBioActorBehavior_execGetPowerText_Parms GetPowerText_Parms;

	pFnGetPowerText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerText, &GetPowerText_Parms, NULL );

	pFnGetPowerText->FunctionFlags |= 0x400;

	if ( sPowerText )
		memcpy ( sPowerText, &GetPowerText_Parms.sPowerText, 0x10 );

	return GetPowerText_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsDisintegrationSuppressed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::IsDisintegrationSuppressed ( )
{
	static UFunction* pFnIsDisintegrationSuppressed = NULL;

	if ( ! pFnIsDisintegrationSuppressed )
		pFnIsDisintegrationSuppressed = (UFunction*) UObject::GObjObjects()->Data[ 41812 ];

	UBioActorBehavior_execIsDisintegrationSuppressed_Parms IsDisintegrationSuppressed_Parms;

	pFnIsDisintegrationSuppressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDisintegrationSuppressed, &IsDisintegrationSuppressed_Parms, NULL );

	pFnIsDisintegrationSuppressed->FunctionFlags |= 0x400;

	return IsDisintegrationSuppressed_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsPlotProtected
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::IsPlotProtected ( )
{
	static UFunction* pFnIsPlotProtected = NULL;

	if ( ! pFnIsPlotProtected )
		pFnIsPlotProtected = (UFunction*) UObject::GObjObjects()->Data[ 41647 ];

	UBioActorBehavior_execIsPlotProtected_Parms IsPlotProtected_Parms;

	pFnIsPlotProtected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPlotProtected, &IsPlotProtected_Parms, NULL );

	pFnIsPlotProtected->FunctionFlags |= 0x400;

	return IsPlotProtected_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsInvulnerable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::IsInvulnerable ( )
{
	static UFunction* pFnIsInvulnerable = NULL;

	if ( ! pFnIsInvulnerable )
		pFnIsInvulnerable = (UFunction*) UObject::GObjObjects()->Data[ 41602 ];

	UBioActorBehavior_execIsInvulnerable_Parms IsInvulnerable_Parms;

	pFnIsInvulnerable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInvulnerable, &IsInvulnerable_Parms, NULL );

	pFnIsInvulnerable->FunctionFlags |= 0x400;

	return IsInvulnerable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.MakeInvulnerable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioActorBehavior::MakeInvulnerable ( unsigned long B )
{
	static UFunction* pFnMakeInvulnerable = NULL;

	if ( ! pFnMakeInvulnerable )
		pFnMakeInvulnerable = (UFunction*) UObject::GObjObjects()->Data[ 41808 ];

	UBioActorBehavior_execMakeInvulnerable_Parms MakeInvulnerable_Parms;
	MakeInvulnerable_Parms.B = B;

	pFnMakeInvulnerable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMakeInvulnerable, &MakeInvulnerable_Parms, NULL );

	pFnMakeInvulnerable->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.DelayTacticalOrders
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioActorBehavior::eventDelayTacticalOrders ( )
{
	static UFunction* pFnDelayTacticalOrders = NULL;

	if ( ! pFnDelayTacticalOrders )
		pFnDelayTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 41807 ];

	UBioActorBehavior_eventDelayTacticalOrders_Parms DelayTacticalOrders_Parms;

	this->ProcessEvent ( pFnDelayTacticalOrders, &DelayTacticalOrders_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.ApplyTacticalOrders
// [0x00020002] 
// Parameters infos:

void UBioActorBehavior::ApplyTacticalOrders ( )
{
	static UFunction* pFnApplyTacticalOrders = NULL;

	if ( ! pFnApplyTacticalOrders )
		pFnApplyTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 41806 ];

	UBioActorBehavior_execApplyTacticalOrders_Parms ApplyTacticalOrders_Parms;

	this->ProcessEvent ( pFnApplyTacticalOrders, &ApplyTacticalOrders_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioActorBehavior::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 41804 ];

	UBioActorBehavior_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ExitCombatStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::ExitCombatStasis ( )
{
	static UFunction* pFnExitCombatStasis = NULL;

	if ( ! pFnExitCombatStasis )
		pFnExitCombatStasis = (UFunction*) UObject::GObjObjects()->Data[ 41802 ];

	UBioActorBehavior_execExitCombatStasis_Parms ExitCombatStasis_Parms;

	pFnExitCombatStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitCombatStasis, &ExitCombatStasis_Parms, NULL );

	pFnExitCombatStasis->FunctionFlags |= 0x400;

	return ExitCombatStasis_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.EnterCombatStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDuration                      ( CPF_Parm )
// unsigned long                  bAllowDamage                   ( CPF_Parm )
// int                            srStasisPowerText              ( CPF_Parm )

bool UBioActorBehavior::EnterCombatStasis ( float fDuration, unsigned long bAllowDamage, int srStasisPowerText )
{
	static UFunction* pFnEnterCombatStasis = NULL;

	if ( ! pFnEnterCombatStasis )
		pFnEnterCombatStasis = (UFunction*) UObject::GObjObjects()->Data[ 41797 ];

	UBioActorBehavior_execEnterCombatStasis_Parms EnterCombatStasis_Parms;
	EnterCombatStasis_Parms.fDuration = fDuration;
	EnterCombatStasis_Parms.bAllowDamage = bAllowDamage;
	EnterCombatStasis_Parms.srStasisPowerText = srStasisPowerText;

	pFnEnterCombatStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnterCombatStasis, &EnterCombatStasis_Parms, NULL );

	pFnEnterCombatStasis->FunctionFlags |= 0x400;

	return EnterCombatStasis_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.MoveActorToFloor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

bool UBioActorBehavior::MoveActorToFloor ( class AActor* oActor )
{
	static UFunction* pFnMoveActorToFloor = NULL;

	if ( ! pFnMoveActorToFloor )
		pFnMoveActorToFloor = (UFunction*) UObject::GObjObjects()->Data[ 41794 ];

	UBioActorBehavior_execMoveActorToFloor_Parms MoveActorToFloor_Parms;
	MoveActorToFloor_Parms.oActor = oActor;

	pFnMoveActorToFloor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMoveActorToFloor, &MoveActorToFloor_Parms, NULL );

	pFnMoveActorToFloor->FunctionFlags |= 0x400;

	return MoveActorToFloor_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SpawnActorFromType
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sActorResource                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )
// float                          fLifeSpan                      ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  oOwner                         ( CPF_OptionalParm | CPF_Parm )

class AActor* UBioActorBehavior::SpawnActorFromType ( struct FString sActorResource, struct FVector vLocation, struct FRotator rRotation, float fLifeSpan, class AActor* oOwner )
{
	static UFunction* pFnSpawnActorFromType = NULL;

	if ( ! pFnSpawnActorFromType )
		pFnSpawnActorFromType = (UFunction*) UObject::GObjObjects()->Data[ 41787 ];

	UBioActorBehavior_execSpawnActorFromType_Parms SpawnActorFromType_Parms;
	memcpy ( &SpawnActorFromType_Parms.sActorResource, &sActorResource, 0x10 );
	memcpy ( &SpawnActorFromType_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &SpawnActorFromType_Parms.rRotation, &rRotation, 0xC );
	SpawnActorFromType_Parms.fLifeSpan = fLifeSpan;
	SpawnActorFromType_Parms.oOwner = oOwner;

	pFnSpawnActorFromType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnActorFromType, &SpawnActorFromType_Parms, NULL );

	pFnSpawnActorFromType->FunctionFlags |= 0x400;

	return SpawnActorFromType_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetMaxHealth
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioActorBehavior::GetMaxHealth ( )
{
	static UFunction* pFnGetMaxHealth = NULL;

	if ( ! pFnGetMaxHealth )
		pFnGetMaxHealth = (UFunction*) UObject::GObjObjects()->Data[ 41785 ];

	UBioActorBehavior_execGetMaxHealth_Parms GetMaxHealth_Parms;

	this->ProcessEvent ( pFnGetMaxHealth, &GetMaxHealth_Parms, NULL );

	return GetMaxHealth_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetAppearanceTemplate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioBaseAppearance*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioBaseAppearance* UBioActorBehavior::GetAppearanceTemplate ( )
{
	static UFunction* pFnGetAppearanceTemplate = NULL;

	if ( ! pFnGetAppearanceTemplate )
		pFnGetAppearanceTemplate = (UFunction*) UObject::GObjObjects()->Data[ 41783 ];

	UBioActorBehavior_execGetAppearanceTemplate_Parms GetAppearanceTemplate_Parms;

	pFnGetAppearanceTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAppearanceTemplate, &GetAppearanceTemplate_Parms, NULL );

	pFnGetAppearanceTemplate->FunctionFlags |= 0x400;

	return GetAppearanceTemplate_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.TermRagdoll
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::eventTermRagdoll ( )
{
	static UFunction* pFnTermRagdoll = NULL;

	if ( ! pFnTermRagdoll )
		pFnTermRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 41781 ];

	UBioActorBehavior_eventTermRagdoll_Parms TermRagdoll_Parms;

	this->ProcessEvent ( pFnTermRagdoll, &TermRagdoll_Parms, NULL );

	return TermRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.InitRagdoll
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::eventInitRagdoll ( )
{
	static UFunction* pFnInitRagdoll = NULL;

	if ( ! pFnInitRagdoll )
		pFnInitRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 41779 ];

	UBioActorBehavior_eventInitRagdoll_Parms InitRagdoll_Parms;

	this->ProcessEvent ( pFnInitRagdoll, &InitRagdoll_Parms, NULL );

	return InitRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsRadialImpulseObstructed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vStart                         ( CPF_Parm )
// struct FVector                 vEnd                           ( CPF_Parm )

bool UBioActorBehavior::IsRadialImpulseObstructed ( struct FVector vStart, struct FVector vEnd )
{
	static UFunction* pFnIsRadialImpulseObstructed = NULL;

	if ( ! pFnIsRadialImpulseObstructed )
		pFnIsRadialImpulseObstructed = (UFunction*) UObject::GObjObjects()->Data[ 41775 ];

	UBioActorBehavior_execIsRadialImpulseObstructed_Parms IsRadialImpulseObstructed_Parms;
	memcpy ( &IsRadialImpulseObstructed_Parms.vStart, &vStart, 0xC );
	memcpy ( &IsRadialImpulseObstructed_Parms.vEnd, &vEnd, 0xC );

	pFnIsRadialImpulseObstructed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRadialImpulseObstructed, &IsRadialImpulseObstructed_Parms, NULL );

	pFnIsRadialImpulseObstructed->FunctionFlags |= 0x400;

	return IsRadialImpulseObstructed_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ApplyRadialImpulse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLineOfSightOrigin             ( CPF_Parm )
// struct FVector                 vImpulseOrigin                 ( CPF_Parm )
// float                          fImpulseMagnitude              ( CPF_Parm )
// struct FName                   nmPhysicsBoneName              ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::ApplyRadialImpulse ( struct FVector vLineOfSightOrigin, struct FVector vImpulseOrigin, float fImpulseMagnitude, struct FName nmPhysicsBoneName )
{
	static UFunction* pFnApplyRadialImpulse = NULL;

	if ( ! pFnApplyRadialImpulse )
		pFnApplyRadialImpulse = (UFunction*) UObject::GObjObjects()->Data[ 41769 ];

	UBioActorBehavior_execApplyRadialImpulse_Parms ApplyRadialImpulse_Parms;
	memcpy ( &ApplyRadialImpulse_Parms.vLineOfSightOrigin, &vLineOfSightOrigin, 0xC );
	memcpy ( &ApplyRadialImpulse_Parms.vImpulseOrigin, &vImpulseOrigin, 0xC );
	ApplyRadialImpulse_Parms.fImpulseMagnitude = fImpulseMagnitude;
	memcpy ( &ApplyRadialImpulse_Parms.nmPhysicsBoneName, &nmPhysicsBoneName, 0x8 );

	pFnApplyRadialImpulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyRadialImpulse, &ApplyRadialImpulse_Parms, NULL );

	pFnApplyRadialImpulse->FunctionFlags |= 0x400;

	return ApplyRadialImpulse_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ExplosionHurtRadius
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fBaseDamage                    ( CPF_Parm )
// float                          fExplosionRadius               ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )
// float                          fMomentum                      ( CPF_Parm )
// struct FVector                 vDamageImpactOrigin            ( CPF_Parm )
// struct FVector                 vImpactOriginOffset            ( CPF_Parm )
// int                            nMaxTargetZones                ( CPF_Parm )
// class AActor*                  oIgnoredActor                  ( CPF_OptionalParm | CPF_Parm )
// class AController*             oInstigatedByController        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoFullDamage                  ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::ExplosionHurtRadius ( float fBaseDamage, float fExplosionRadius, class UClass* clsDamageType, class UBioDamageType* pDamage, float fMomentum, struct FVector vDamageImpactOrigin, struct FVector vImpactOriginOffset, int nMaxTargetZones, class AActor* oIgnoredActor, class AController* oInstigatedByController, unsigned long bDoFullDamage )
{
	static UFunction* pFnExplosionHurtRadius = NULL;

	if ( ! pFnExplosionHurtRadius )
		pFnExplosionHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 41756 ];

	UBioActorBehavior_execExplosionHurtRadius_Parms ExplosionHurtRadius_Parms;
	ExplosionHurtRadius_Parms.fBaseDamage = fBaseDamage;
	ExplosionHurtRadius_Parms.fExplosionRadius = fExplosionRadius;
	ExplosionHurtRadius_Parms.clsDamageType = clsDamageType;
	ExplosionHurtRadius_Parms.pDamage = pDamage;
	ExplosionHurtRadius_Parms.fMomentum = fMomentum;
	memcpy ( &ExplosionHurtRadius_Parms.vDamageImpactOrigin, &vDamageImpactOrigin, 0xC );
	memcpy ( &ExplosionHurtRadius_Parms.vImpactOriginOffset, &vImpactOriginOffset, 0xC );
	ExplosionHurtRadius_Parms.nMaxTargetZones = nMaxTargetZones;
	ExplosionHurtRadius_Parms.oIgnoredActor = oIgnoredActor;
	ExplosionHurtRadius_Parms.oInstigatedByController = oInstigatedByController;
	ExplosionHurtRadius_Parms.bDoFullDamage = bDoFullDamage;

	pFnExplosionHurtRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExplosionHurtRadius, &ExplosionHurtRadius_Parms, NULL );

	pFnExplosionHurtRadius->FunctionFlags |= 0x400;

	return ExplosionHurtRadius_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsObstructed
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vStart                         ( CPF_Parm )
// struct FVector                 vEnd                           ( CPF_Parm )
// class AActor*                  oCandidate                     ( CPF_Parm )

bool UBioActorBehavior::IsObstructed ( struct FVector vStart, struct FVector vEnd, class AActor* oCandidate )
{
	static UFunction* pFnIsObstructed = NULL;

	if ( ! pFnIsObstructed )
		pFnIsObstructed = (UFunction*) UObject::GObjObjects()->Data[ 41751 ];

	UBioActorBehavior_execIsObstructed_Parms IsObstructed_Parms;
	memcpy ( &IsObstructed_Parms.vStart, &vStart, 0xC );
	memcpy ( &IsObstructed_Parms.vEnd, &vEnd, 0xC );
	IsObstructed_Parms.oCandidate = oCandidate;

	pFnIsObstructed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsObstructed, &IsObstructed_Parms, NULL );

	pFnIsObstructed->FunctionFlags |= 0x400;

	return IsObstructed_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioInventory*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioInventory* UBioActorBehavior::GetInventory ( )
{
	static UFunction* pFnGetInventory = NULL;

	if ( ! pFnGetInventory )
		pFnGetInventory = (UFunction*) UObject::GObjObjects()->Data[ 41749 ];

	UBioActorBehavior_execGetInventory_Parms GetInventory_Parms;

	pFnGetInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventory, &GetInventory_Parms, NULL );

	pFnGetInventory->FunctionFlags |= 0x400;

	return GetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.DetachMesh
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  Mesh                           ( CPF_Parm | CPF_EditInline )
// class USkeletalMeshComponent*  subMesh                        ( CPF_Parm | CPF_EditInline )

bool UBioActorBehavior::DetachMesh ( class USkeletalMeshComponent* Mesh, class USkeletalMeshComponent* subMesh )
{
	static UFunction* pFnDetachMesh = NULL;

	if ( ! pFnDetachMesh )
		pFnDetachMesh = (UFunction*) UObject::GObjObjects()->Data[ 41745 ];

	UBioActorBehavior_execDetachMesh_Parms DetachMesh_Parms;
	DetachMesh_Parms.Mesh = Mesh;
	DetachMesh_Parms.subMesh = subMesh;

	this->ProcessEvent ( pFnDetachMesh, &DetachMesh_Parms, NULL );

	return DetachMesh_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.AttachMeshToClosestBone
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  Mesh                           ( CPF_Parm | CPF_EditInline )
// float                          fMeshDrawScale                 ( CPF_Parm )
// class USkeletalMeshComponent*  subMesh                        ( CPF_Parm | CPF_EditInline )
// struct FVector                 subMeshPosition                ( CPF_Parm )
// struct FRotator                subMeshRotation                ( CPF_Parm )

bool UBioActorBehavior::AttachMeshToClosestBone ( class USkeletalMeshComponent* Mesh, float fMeshDrawScale, class USkeletalMeshComponent* subMesh, struct FVector subMeshPosition, struct FRotator subMeshRotation )
{
	static UFunction* pFnAttachMeshToClosestBone = NULL;

	if ( ! pFnAttachMeshToClosestBone )
		pFnAttachMeshToClosestBone = (UFunction*) UObject::GObjObjects()->Data[ 41733 ];

	UBioActorBehavior_execAttachMeshToClosestBone_Parms AttachMeshToClosestBone_Parms;
	AttachMeshToClosestBone_Parms.Mesh = Mesh;
	AttachMeshToClosestBone_Parms.fMeshDrawScale = fMeshDrawScale;
	AttachMeshToClosestBone_Parms.subMesh = subMesh;
	memcpy ( &AttachMeshToClosestBone_Parms.subMeshPosition, &subMeshPosition, 0xC );
	memcpy ( &AttachMeshToClosestBone_Parms.subMeshRotation, &subMeshRotation, 0xC );

	this->ProcessEvent ( pFnAttachMeshToClosestBone, &AttachMeshToClosestBone_Parms, NULL );

	return AttachMeshToClosestBone_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.PlayVOElements
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UAudioComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )
// class USoundCue*               oVOSound                       ( CPF_Parm )
// class UFaceFXAnimSet*          oVOLipSet                      ( CPF_Parm )
// struct FString                 sVOLipAnim                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bLetFaceFXPlayAudio            ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bAutoDestroy                   ( CPF_OptionalParm | CPF_Parm )
// struct FBioVOSettings          cSettings                      ( CPF_Const | CPF_Parm | CPF_OutParm )

class UAudioComponent* UBioActorBehavior::PlayVOElements ( struct FString sText, class USoundCue* oVOSound, class UFaceFXAnimSet* oVOLipSet, struct FString sVOLipAnim, unsigned long bLetFaceFXPlayAudio, unsigned long bAutoDestroy, struct FBioVOSettings* cSettings )
{
	static UFunction* pFnPlayVOElements = NULL;

	if ( ! pFnPlayVOElements )
		pFnPlayVOElements = (UFunction*) UObject::GObjObjects()->Data[ 41724 ];

	UBioActorBehavior_execPlayVOElements_Parms PlayVOElements_Parms;
	memcpy ( &PlayVOElements_Parms.sText, &sText, 0x10 );
	PlayVOElements_Parms.oVOSound = oVOSound;
	PlayVOElements_Parms.oVOLipSet = oVOLipSet;
	memcpy ( &PlayVOElements_Parms.sVOLipAnim, &sVOLipAnim, 0x10 );
	PlayVOElements_Parms.bLetFaceFXPlayAudio = bLetFaceFXPlayAudio;
	PlayVOElements_Parms.bAutoDestroy = bAutoDestroy;

	pFnPlayVOElements->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayVOElements, &PlayVOElements_Parms, NULL );

	pFnPlayVOElements->FunctionFlags |= 0x400;

	if ( cSettings )
		memcpy ( cSettings, &PlayVOElements_Parms.cSettings, 0xC );

	return PlayVOElements_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.RanOverByVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVehicleBase*         oVehicle                       ( CPF_Parm )

void UBioActorBehavior::RanOverByVehicle ( class ABioVehicleBase* oVehicle )
{
	static UFunction* pFnRanOverByVehicle = NULL;

	if ( ! pFnRanOverByVehicle )
		pFnRanOverByVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41722 ];

	UBioActorBehavior_execRanOverByVehicle_Parms RanOverByVehicle_Parms;
	RanOverByVehicle_Parms.oVehicle = oVehicle;

	pFnRanOverByVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRanOverByVehicle, &RanOverByVehicle_Parms, NULL );

	pFnRanOverByVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.OnGPEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioActorBehavior::OnGPEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnGPEvent = NULL;

	if ( ! pFnOnGPEvent )
		pFnOnGPEvent = (UFunction*) UObject::GObjObjects()->Data[ 41719 ];

	UBioActorBehavior_execOnGPEvent_Parms OnGPEvent_Parms;
	OnGPEvent_Parms.eEvent = eEvent;
	OnGPEvent_Parms.pTarget = pTarget;

	pFnOnGPEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGPEvent, &OnGPEvent_Parms, NULL );

	pFnOnGPEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.GetBusyState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::GetBusyState ( )
{
	static UFunction* pFnGetBusyState = NULL;

	if ( ! pFnGetBusyState )
		pFnGetBusyState = (UFunction*) UObject::GObjObjects()->Data[ 41717 ];

	UBioActorBehavior_execGetBusyState_Parms GetBusyState_Parms;

	pFnGetBusyState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBusyState, &GetBusyState_Parms, NULL );

	pFnGetBusyState->FunctionFlags |= 0x400;

	return GetBusyState_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SetBusyState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bSetBusy                       ( CPF_Parm )

void UBioActorBehavior::SetBusyState ( unsigned long bSetBusy )
{
	static UFunction* pFnSetBusyState = NULL;

	if ( ! pFnSetBusyState )
		pFnSetBusyState = (UFunction*) UObject::GObjObjects()->Data[ 41715 ];

	UBioActorBehavior_execSetBusyState_Parms SetBusyState_Parms;
	SetBusyState_Parms.bSetBusy = bSetBusy;

	pFnSetBusyState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBusyState, &SetBusyState_Parms, NULL );

	pFnSetBusyState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.SetActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bSetActive                     ( CPF_Parm )

void UBioActorBehavior::SetActive ( unsigned long bSetActive )
{
	static UFunction* pFnSetActive = NULL;

	if ( ! pFnSetActive )
		pFnSetActive = (UFunction*) UObject::GObjObjects()->Data[ 41713 ];

	UBioActorBehavior_execSetActive_Parms SetActive_Parms;
	SetActive_Parms.bSetActive = bSetActive;

	pFnSetActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActive, &SetActive_Parms, NULL );

	pFnSetActive->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.IsCurrentTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCandidateTarget               ( CPF_Parm )

bool UBioActorBehavior::IsCurrentTarget ( class AActor* oCandidateTarget )
{
	static UFunction* pFnIsCurrentTarget = NULL;

	if ( ! pFnIsCurrentTarget )
		pFnIsCurrentTarget = (UFunction*) UObject::GObjObjects()->Data[ 41710 ];

	UBioActorBehavior_execIsCurrentTarget_Parms IsCurrentTarget_Parms;
	IsCurrentTarget_Parms.oCandidateTarget = oCandidateTarget;

	pFnIsCurrentTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCurrentTarget, &IsCurrentTarget_Parms, NULL );

	pFnIsCurrentTarget->FunctionFlags |= 0x400;

	return IsCurrentTarget_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsPenetratedByInstantWeaponFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

bool UBioActorBehavior::IsPenetratedByInstantWeaponFire ( class UClass* clsDamageType, class UBioDamageType* pDamage )
{
	static UFunction* pFnIsPenetratedByInstantWeaponFire = NULL;

	if ( ! pFnIsPenetratedByInstantWeaponFire )
		pFnIsPenetratedByInstantWeaponFire = (UFunction*) UObject::GObjObjects()->Data[ 41706 ];

	UBioActorBehavior_execIsPenetratedByInstantWeaponFire_Parms IsPenetratedByInstantWeaponFire_Parms;
	IsPenetratedByInstantWeaponFire_Parms.clsDamageType = clsDamageType;
	IsPenetratedByInstantWeaponFire_Parms.pDamage = pDamage;

	pFnIsPenetratedByInstantWeaponFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPenetratedByInstantWeaponFire, &IsPenetratedByInstantWeaponFire_Parms, NULL );

	pFnIsPenetratedByInstantWeaponFire->FunctionFlags |= 0x400;

	return IsPenetratedByInstantWeaponFire_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.OnAnimEnd
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       oAnimation                     ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void UBioActorBehavior::eventOnAnimEnd ( class UAnimNodeSequence* oAnimation, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 41702 ];

	UBioActorBehavior_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.oAnimation = oAnimation;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.ReactToDeath
// [0x00024002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioActorBehavior::ReactToDeath ( float Damage, float fDeathDamage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* clsDamageType, struct FTraceHitInfo HitInfo, class UBioDamageType* pDamage )
{
	static UFunction* pFnReactToDeath = NULL;

	if ( ! pFnReactToDeath )
		pFnReactToDeath = (UFunction*) UObject::GObjObjects()->Data[ 41691 ];

	UBioActorBehavior_execReactToDeath_Parms ReactToDeath_Parms;
	ReactToDeath_Parms.Damage = Damage;
	ReactToDeath_Parms.fDeathDamage = fDeathDamage;
	ReactToDeath_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReactToDeath_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ReactToDeath_Parms.Momentum, &Momentum, 0xC );
	ReactToDeath_Parms.clsDamageType = clsDamageType;
	memcpy ( &ReactToDeath_Parms.HitInfo, &HitInfo, 0x28 );
	ReactToDeath_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnReactToDeath, &ReactToDeath_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.CacheDeathVFXGameState
// [0x00020002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             pInstigatorController          ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

void UBioActorBehavior::CacheDeathVFXGameState ( float fDamage, float fDeathDamage, class AController* pInstigatorController, struct FVector vHitLocation, struct FVector vMomentum, class UBioDamageType* pDamage )
{
	static UFunction* pFnCacheDeathVFXGameState = NULL;

	if ( ! pFnCacheDeathVFXGameState )
		pFnCacheDeathVFXGameState = (UFunction*) UObject::GObjObjects()->Data[ 41683 ];

	UBioActorBehavior_execCacheDeathVFXGameState_Parms CacheDeathVFXGameState_Parms;
	CacheDeathVFXGameState_Parms.fDamage = fDamage;
	CacheDeathVFXGameState_Parms.fDeathDamage = fDeathDamage;
	CacheDeathVFXGameState_Parms.pInstigatorController = pInstigatorController;
	memcpy ( &CacheDeathVFXGameState_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &CacheDeathVFXGameState_Parms.vMomentum, &vMomentum, 0xC );
	CacheDeathVFXGameState_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnCacheDeathVFXGameState, &CacheDeathVFXGameState_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.AmplifyDamage
// [0x00420000] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::AmplifyDamage ( float* Damage )
{
	static UFunction* pFnAmplifyDamage = NULL;

	if ( ! pFnAmplifyDamage )
		pFnAmplifyDamage = (UFunction*) UObject::GObjObjects()->Data[ 41681 ];

	UBioActorBehavior_execAmplifyDamage_Parms AmplifyDamage_Parms;

	this->ProcessEvent ( pFnAmplifyDamage, &AmplifyDamage_Parms, NULL );

	if ( Damage )
		*Damage = AmplifyDamage_Parms.Damage;
};

// Function SFXGame.BioActorBehavior.HurtRadius
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// class AActor*                  oDirectlyHitActor              ( CPF_OptionalParm | CPF_Parm )
// class UDamageType*             pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioActorBehavior::eventHurtRadius ( float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, class AActor* oDirectlyHitActor, class UDamageType* pDamage )
{
	static UFunction* pFnHurtRadius = NULL;

	if ( ! pFnHurtRadius )
		pFnHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 41669 ];

	UBioActorBehavior_eventHurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.BaseDamage = BaseDamage;
	HurtRadius_Parms.DamageRadius = DamageRadius;
	HurtRadius_Parms.DamageType = DamageType;
	HurtRadius_Parms.Momentum = Momentum;
	memcpy ( &HurtRadius_Parms.HurtOrigin, &HurtOrigin, 0xC );
	HurtRadius_Parms.oDirectlyHitActor = oDirectlyHitActor;
	HurtRadius_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnHurtRadius, &HurtRadius_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.TakeRadiusDamage
// [0x00024002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UDamageType*             pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioActorBehavior::TakeRadiusDamage ( class AController* InstigatedBy, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* pDamageCausingActor, class UDamageType* pDamage )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 41649 ];

	UBioActorBehavior_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	TakeRadiusDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.IsFriendlyFire
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             pInstigatorController          ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

bool UBioActorBehavior::eventIsFriendlyFire ( class AController* pInstigatorController, class UBioDamageType* pDamage )
{
	static UFunction* pFnIsFriendlyFire = NULL;

	if ( ! pFnIsFriendlyFire )
		pFnIsFriendlyFire = (UFunction*) UObject::GObjObjects()->Data[ 41639 ];

	UBioActorBehavior_eventIsFriendlyFire_Parms IsFriendlyFire_Parms;
	IsFriendlyFire_Parms.pInstigatorController = pInstigatorController;
	IsFriendlyFire_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnIsFriendlyFire, &IsFriendlyFire_Parms, NULL );

	return IsFriendlyFire_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ProxyTakeDamage
// [0x00424002] 
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// float                          CurrentDamage                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::ProxyTakeDamage ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, float* CurrentDamage, struct FVector* Momentum )
{
	static UFunction* pFnProxyTakeDamage = NULL;

	if ( ! pFnProxyTakeDamage )
		pFnProxyTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 41610 ];

	UBioActorBehavior_execProxyTakeDamage_Parms ProxyTakeDamage_Parms;
	ProxyTakeDamage_Parms.OriginalDamage = OriginalDamage;
	ProxyTakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ProxyTakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	ProxyTakeDamage_Parms.DamageType = DamageType;
	memcpy ( &ProxyTakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	ProxyTakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	ProxyTakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnProxyTakeDamage, &ProxyTakeDamage_Parms, NULL );

	if ( CurrentDamage )
		*CurrentDamage = ProxyTakeDamage_Parms.CurrentDamage;

	if ( Momentum )
		memcpy ( Momentum, &ProxyTakeDamage_Parms.Momentum, 0xC );
};

// Function SFXGame.BioActorBehavior.TakeDamage
// [0x00024002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UDamageType*             pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioActorBehavior::TakeDamage ( float Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UDamageType* pDamage )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 41590 ];

	UBioActorBehavior_execTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	TakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	TakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.SetActorGameName
// [0x00020002] 
// Parameters infos:
// struct FString                 newActorGameName               ( CPF_Parm | CPF_NeedCtorLink )

void UBioActorBehavior::SetActorGameName ( struct FString newActorGameName )
{
	static UFunction* pFnSetActorGameName = NULL;

	if ( ! pFnSetActorGameName )
		pFnSetActorGameName = (UFunction*) UObject::GObjObjects()->Data[ 41588 ];

	UBioActorBehavior_execSetActorGameName_Parms SetActorGameName_Parms;
	memcpy ( &SetActorGameName_Parms.newActorGameName, &newActorGameName, 0x10 );

	this->ProcessEvent ( pFnSetActorGameName, &SetActorGameName_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.GetActorGameName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioActorBehavior::eventGetActorGameName ( )
{
	static UFunction* pFnGetActorGameName = NULL;

	if ( ! pFnGetActorGameName )
		pFnGetActorGameName = (UFunction*) UObject::GObjObjects()->Data[ 41580 ];

	UBioActorBehavior_eventGetActorGameName_Parms GetActorGameName_Parms;

	this->ProcessEvent ( pFnGetActorGameName, &GetActorGameName_Parms, NULL );

	return GetActorGameName_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsMin1Health
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::eventIsMin1Health ( )
{
	static UFunction* pFnIsMin1Health = NULL;

	if ( ! pFnIsMin1Health )
		pFnIsMin1Health = (UFunction*) UObject::GObjObjects()->Data[ 41575 ];

	UBioActorBehavior_eventIsMin1Health_Parms IsMin1Health_Parms;

	this->ProcessEvent ( pFnIsMin1Health, &IsMin1Health_Parms, NULL );

	return IsMin1Health_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioActorBehavior::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 41574 ];

	UBioActorBehavior_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.BioRelateActors
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioActorBehavior::eventBioRelateActors ( )
{
	static UFunction* pFnBioRelateActors = NULL;

	if ( ! pFnBioRelateActors )
		pFnBioRelateActors = (UFunction*) UObject::GObjObjects()->Data[ 41565 ];

	UBioActorBehavior_eventBioRelateActors_Parms BioRelateActors_Parms;

	this->ProcessEvent ( pFnBioRelateActors, &BioRelateActors_Parms, NULL );
};

// Function SFXGame.BioActorBehavior.ShouldChallengeScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::ShouldChallengeScale ( )
{
	static UFunction* pFnShouldChallengeScale = NULL;

	if ( ! pFnShouldChallengeScale )
		pFnShouldChallengeScale = (UFunction*) UObject::GObjObjects()->Data[ 41563 ];

	UBioActorBehavior_execShouldChallengeScale_Parms ShouldChallengeScale_Parms;

	pFnShouldChallengeScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldChallengeScale, &ShouldChallengeScale_Parms, NULL );

	pFnShouldChallengeScale->FunctionFlags |= 0x400;

	return ShouldChallengeScale_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetActionFrameworkErrorCode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioActorBehavior::GetActionFrameworkErrorCode ( )
{
	static UFunction* pFnGetActionFrameworkErrorCode = NULL;

	if ( ! pFnGetActionFrameworkErrorCode )
		pFnGetActionFrameworkErrorCode = (UFunction*) UObject::GObjObjects()->Data[ 41561 ];

	UBioActorBehavior_execGetActionFrameworkErrorCode_Parms GetActionFrameworkErrorCode_Parms;

	pFnGetActionFrameworkErrorCode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActionFrameworkErrorCode, &GetActionFrameworkErrorCode_Parms, NULL );

	pFnGetActionFrameworkErrorCode->FunctionFlags |= 0x400;

	return GetActionFrameworkErrorCode_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SetActionFrameworkErrorCode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eError                         ( CPF_Parm )

void UBioActorBehavior::SetActionFrameworkErrorCode ( unsigned char eError )
{
	static UFunction* pFnSetActionFrameworkErrorCode = NULL;

	if ( ! pFnSetActionFrameworkErrorCode )
		pFnSetActionFrameworkErrorCode = (UFunction*) UObject::GObjObjects()->Data[ 41559 ];

	UBioActorBehavior_execSetActionFrameworkErrorCode_Parms SetActionFrameworkErrorCode_Parms;
	SetActionFrameworkErrorCode_Parms.eError = eError;

	pFnSetActionFrameworkErrorCode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActionFrameworkErrorCode, &SetActionFrameworkErrorCode_Parms, NULL );

	pFnSetActionFrameworkErrorCode->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.HasCapability
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCap                           ( CPF_Parm )

bool UBioActorBehavior::HasCapability ( class UBioCapability* oCap )
{
	static UFunction* pFnHasCapability = NULL;

	if ( ! pFnHasCapability )
		pFnHasCapability = (UFunction*) UObject::GObjObjects()->Data[ 41556 ];

	UBioActorBehavior_execHasCapability_Parms HasCapability_Parms;
	HasCapability_Parms.oCap = oCap;

	pFnHasCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasCapability, &HasCapability_Parms, NULL );

	pFnHasCapability->FunctionFlags |= 0x400;

	return HasCapability_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsAbilityEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

bool UBioActorBehavior::IsAbilityEnabled ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnIsAbilityEnabled = NULL;

	if ( ! pFnIsAbilityEnabled )
		pFnIsAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 41552 ];

	UBioActorBehavior_execIsAbilityEnabled_Parms IsAbilityEnabled_Parms;
	IsAbilityEnabled_Parms.eEnableType = eEnableType;
	memcpy ( &IsAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	pFnIsAbilityEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabled, &IsAbilityEnabled_Parms, NULL );

	pFnIsAbilityEnabled->FunctionFlags |= 0x400;

	return IsAbilityEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.AbilityEnable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnable                        ( CPF_Parm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

int UBioActorBehavior::AbilityEnable ( unsigned long bEnable, unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnAbilityEnable = NULL;

	if ( ! pFnAbilityEnable )
		pFnAbilityEnable = (UFunction*) UObject::GObjObjects()->Data[ 41547 ];

	UBioActorBehavior_execAbilityEnable_Parms AbilityEnable_Parms;
	AbilityEnable_Parms.bEnable = bEnable;
	AbilityEnable_Parms.eEnableType = eEnableType;
	memcpy ( &AbilityEnable_Parms.nmSubType, &nmSubType, 0x8 );

	pFnAbilityEnable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAbilityEnable, &AbilityEnable_Parms, NULL );

	pFnAbilityEnable->FunctionFlags |= 0x400;

	return AbilityEnable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ComputeStepOutLocations
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AController*             oCoverUser                     ( CPF_Parm )
// int                            nStepFlags                     ( CPF_Parm )
// struct FVector                 vSlotLoc                       ( CPF_Parm )
// struct FRotator                rSlotRot                       ( CPF_Parm )
// float                          fLeftDist                      ( CPF_Parm )
// float                          fRightDist                     ( CPF_Parm )
// struct FVector                 vExtents                       ( CPF_Parm )
// struct FVector                 vHidePos                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 vStepLeftPost                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 vStepRightPost                 ( CPF_Parm | CPF_OutParm )
// struct FVector                 vLeanLeftLocation              ( CPF_Parm | CPF_OutParm )
// struct FVector                 vLeanRightLocation             ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::ComputeStepOutLocations ( class AController* oCoverUser, int nStepFlags, struct FVector vSlotLoc, struct FRotator rSlotRot, float fLeftDist, float fRightDist, struct FVector vExtents, struct FVector* vHidePos, struct FVector* vStepLeftPost, struct FVector* vStepRightPost, struct FVector* vLeanLeftLocation, struct FVector* vLeanRightLocation )
{
	static UFunction* pFnComputeStepOutLocations = NULL;

	if ( ! pFnComputeStepOutLocations )
		pFnComputeStepOutLocations = (UFunction*) UObject::GObjObjects()->Data[ 41534 ];

	UBioActorBehavior_execComputeStepOutLocations_Parms ComputeStepOutLocations_Parms;
	ComputeStepOutLocations_Parms.oCoverUser = oCoverUser;
	ComputeStepOutLocations_Parms.nStepFlags = nStepFlags;
	memcpy ( &ComputeStepOutLocations_Parms.vSlotLoc, &vSlotLoc, 0xC );
	memcpy ( &ComputeStepOutLocations_Parms.rSlotRot, &rSlotRot, 0xC );
	ComputeStepOutLocations_Parms.fLeftDist = fLeftDist;
	ComputeStepOutLocations_Parms.fRightDist = fRightDist;
	memcpy ( &ComputeStepOutLocations_Parms.vExtents, &vExtents, 0xC );

	pFnComputeStepOutLocations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeStepOutLocations, &ComputeStepOutLocations_Parms, NULL );

	pFnComputeStepOutLocations->FunctionFlags |= 0x400;

	if ( vHidePos )
		memcpy ( vHidePos, &ComputeStepOutLocations_Parms.vHidePos, 0xC );

	if ( vStepLeftPost )
		memcpy ( vStepLeftPost, &ComputeStepOutLocations_Parms.vStepLeftPost, 0xC );

	if ( vStepRightPost )
		memcpy ( vStepRightPost, &ComputeStepOutLocations_Parms.vStepRightPost, 0xC );

	if ( vLeanLeftLocation )
		memcpy ( vLeanLeftLocation, &ComputeStepOutLocations_Parms.vLeanLeftLocation, 0xC );

	if ( vLeanRightLocation )
		memcpy ( vLeanRightLocation, &ComputeStepOutLocations_Parms.vLeanRightLocation, 0xC );
};

// Function SFXGame.BioActorBehavior.WeaponLineOfSightThreshold
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bCrouched                      ( CPF_OptionalParm | CPF_Parm )
// float                          fThreshold                     ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::WeaponLineOfSightThreshold ( class AActor* oTarget, unsigned long bCrouched, float fThreshold )
{
	static UFunction* pFnWeaponLineOfSightThreshold = NULL;

	if ( ! pFnWeaponLineOfSightThreshold )
		pFnWeaponLineOfSightThreshold = (UFunction*) UObject::GObjObjects()->Data[ 41529 ];

	UBioActorBehavior_execWeaponLineOfSightThreshold_Parms WeaponLineOfSightThreshold_Parms;
	WeaponLineOfSightThreshold_Parms.oTarget = oTarget;
	WeaponLineOfSightThreshold_Parms.bCrouched = bCrouched;
	WeaponLineOfSightThreshold_Parms.fThreshold = fThreshold;

	pFnWeaponLineOfSightThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWeaponLineOfSightThreshold, &WeaponLineOfSightThreshold_Parms, NULL );

	pFnWeaponLineOfSightThreshold->FunctionFlags |= 0x400;

	return WeaponLineOfSightThreshold_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.WeaponLineOfSightFromLocation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bCrouched                      ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  LeanDirection                  ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::WeaponLineOfSightFromLocation ( struct FVector vLoc, class AActor* oTarget, unsigned long bCrouched, unsigned char LeanDirection )
{
	static UFunction* pFnWeaponLineOfSightFromLocation = NULL;

	if ( ! pFnWeaponLineOfSightFromLocation )
		pFnWeaponLineOfSightFromLocation = (UFunction*) UObject::GObjObjects()->Data[ 41523 ];

	UBioActorBehavior_execWeaponLineOfSightFromLocation_Parms WeaponLineOfSightFromLocation_Parms;
	memcpy ( &WeaponLineOfSightFromLocation_Parms.vLoc, &vLoc, 0xC );
	WeaponLineOfSightFromLocation_Parms.oTarget = oTarget;
	WeaponLineOfSightFromLocation_Parms.bCrouched = bCrouched;
	WeaponLineOfSightFromLocation_Parms.LeanDirection = LeanDirection;

	pFnWeaponLineOfSightFromLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWeaponLineOfSightFromLocation, &WeaponLineOfSightFromLocation_Parms, NULL );

	pFnWeaponLineOfSightFromLocation->FunctionFlags |= 0x400;

	return WeaponLineOfSightFromLocation_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetCurrentMoveTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oMoveTarget                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 vTarget                        ( CPF_Parm | CPF_OutParm )

bool UBioActorBehavior::GetCurrentMoveTarget ( class AActor** oMoveTarget, struct FVector* vTarget )
{
	static UFunction* pFnGetCurrentMoveTarget = NULL;

	if ( ! pFnGetCurrentMoveTarget )
		pFnGetCurrentMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 41519 ];

	UBioActorBehavior_execGetCurrentMoveTarget_Parms GetCurrentMoveTarget_Parms;

	pFnGetCurrentMoveTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentMoveTarget, &GetCurrentMoveTarget_Parms, NULL );

	pFnGetCurrentMoveTarget->FunctionFlags |= 0x400;

	if ( oMoveTarget )
		*oMoveTarget = GetCurrentMoveTarget_Parms.oMoveTarget;

	if ( vTarget )
		memcpy ( vTarget, &GetCurrentMoveTarget_Parms.vTarget, 0xC );

	return GetCurrentMoveTarget_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.RemoveAllLatentSequenceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActorBehavior::RemoveAllLatentSequenceData ( )
{
	static UFunction* pFnRemoveAllLatentSequenceData = NULL;

	if ( ! pFnRemoveAllLatentSequenceData )
		pFnRemoveAllLatentSequenceData = (UFunction*) UObject::GObjObjects()->Data[ 41518 ];

	UBioActorBehavior_execRemoveAllLatentSequenceData_Parms RemoveAllLatentSequenceData_Parms;

	pFnRemoveAllLatentSequenceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveAllLatentSequenceData, &RemoveAllLatentSequenceData_Parms, NULL );

	pFnRemoveAllLatentSequenceData->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.RemoveLatentSequenceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ClsType                        ( CPF_Parm )

void UBioActorBehavior::RemoveLatentSequenceData ( class UClass* ClsType )
{
	static UFunction* pFnRemoveLatentSequenceData = NULL;

	if ( ! pFnRemoveLatentSequenceData )
		pFnRemoveLatentSequenceData = (UFunction*) UObject::GObjObjects()->Data[ 41516 ];

	UBioActorBehavior_execRemoveLatentSequenceData_Parms RemoveLatentSequenceData_Parms;
	RemoveLatentSequenceData_Parms.ClsType = ClsType;

	pFnRemoveLatentSequenceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveLatentSequenceData, &RemoveLatentSequenceData_Parms, NULL );

	pFnRemoveLatentSequenceData->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.MakeLatentSequenceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ClsType                        ( CPF_Parm )

class UBioSeqData* UBioActorBehavior::MakeLatentSequenceData ( class UClass* ClsType )
{
	static UFunction* pFnMakeLatentSequenceData = NULL;

	if ( ! pFnMakeLatentSequenceData )
		pFnMakeLatentSequenceData = (UFunction*) UObject::GObjObjects()->Data[ 41513 ];

	UBioActorBehavior_execMakeLatentSequenceData_Parms MakeLatentSequenceData_Parms;
	MakeLatentSequenceData_Parms.ClsType = ClsType;

	pFnMakeLatentSequenceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMakeLatentSequenceData, &MakeLatentSequenceData_Parms, NULL );

	pFnMakeLatentSequenceData->FunctionFlags |= 0x400;

	return MakeLatentSequenceData_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetLatentSequenceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ClsType                        ( CPF_Parm )

class UBioSeqData* UBioActorBehavior::GetLatentSequenceData ( class UClass* ClsType )
{
	static UFunction* pFnGetLatentSequenceData = NULL;

	if ( ! pFnGetLatentSequenceData )
		pFnGetLatentSequenceData = (UFunction*) UObject::GObjObjects()->Data[ 41510 ];

	UBioActorBehavior_execGetLatentSequenceData_Parms GetLatentSequenceData_Parms;
	GetLatentSequenceData_Parms.ClsType = ClsType;

	pFnGetLatentSequenceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLatentSequenceData, &GetLatentSequenceData_Parms, NULL );

	pFnGetLatentSequenceData->FunctionFlags |= 0x400;

	return GetLatentSequenceData_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.DumpLatentSequenceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActorBehavior::DumpLatentSequenceData ( )
{
	static UFunction* pFnDumpLatentSequenceData = NULL;

	if ( ! pFnDumpLatentSequenceData )
		pFnDumpLatentSequenceData = (UFunction*) UObject::GObjObjects()->Data[ 41509 ];

	UBioActorBehavior_execDumpLatentSequenceData_Parms DumpLatentSequenceData_Parms;

	pFnDumpLatentSequenceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDumpLatentSequenceData, &DumpLatentSequenceData_Parms, NULL );

	pFnDumpLatentSequenceData->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.GetSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioBaseSquad* UBioActorBehavior::GetSquad ( )
{
	static UFunction* pFnGetSquad = NULL;

	if ( ! pFnGetSquad )
		pFnGetSquad = (UFunction*) UObject::GObjObjects()->Data[ 41507 ];

	UBioActorBehavior_execGetSquad_Parms GetSquad_Parms;

	pFnGetSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquad, &GetSquad_Parms, NULL );

	pFnGetSquad->FunctionFlags |= 0x400;

	return GetSquad_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.InitializeForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioActorBehavior::InitializeForPlay ( )
{
	static UFunction* pFnInitializeForPlay = NULL;

	if ( ! pFnInitializeForPlay )
		pFnInitializeForPlay = (UFunction*) UObject::GObjObjects()->Data[ 41506 ];

	UBioActorBehavior_execInitializeForPlay_Parms InitializeForPlay_Parms;

	pFnInitializeForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForPlay, &InitializeForPlay_Parms, NULL );

	pFnInitializeForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.SoftResetMovementAndAnimationState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActorBehavior::SoftResetMovementAndAnimationState ( )
{
	static UFunction* pFnSoftResetMovementAndAnimationState = NULL;

	if ( ! pFnSoftResetMovementAndAnimationState )
		pFnSoftResetMovementAndAnimationState = (UFunction*) UObject::GObjObjects()->Data[ 41505 ];

	UBioActorBehavior_execSoftResetMovementAndAnimationState_Parms SoftResetMovementAndAnimationState_Parms;

	pFnSoftResetMovementAndAnimationState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSoftResetMovementAndAnimationState, &SoftResetMovementAndAnimationState_Parms, NULL );

	pFnSoftResetMovementAndAnimationState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.HardResetActionAndAnimationState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioActorBehavior::HardResetActionAndAnimationState ( )
{
	static UFunction* pFnHardResetActionAndAnimationState = NULL;

	if ( ! pFnHardResetActionAndAnimationState )
		pFnHardResetActionAndAnimationState = (UFunction*) UObject::GObjObjects()->Data[ 41504 ];

	UBioActorBehavior_execHardResetActionAndAnimationState_Parms HardResetActionAndAnimationState_Parms;

	pFnHardResetActionAndAnimationState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHardResetActionAndAnimationState, &HardResetActionAndAnimationState_Parms, NULL );

	pFnHardResetActionAndAnimationState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.ReleasePendingReactive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioReactive*            oReactive                      ( CPF_Parm )

void UBioActorBehavior::ReleasePendingReactive ( class UBioReactive* oReactive )
{
	static UFunction* pFnReleasePendingReactive = NULL;

	if ( ! pFnReleasePendingReactive )
		pFnReleasePendingReactive = (UFunction*) UObject::GObjObjects()->Data[ 41502 ];

	UBioActorBehavior_execReleasePendingReactive_Parms ReleasePendingReactive_Parms;
	ReleasePendingReactive_Parms.oReactive = oReactive;

	pFnReleasePendingReactive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleasePendingReactive, &ReleasePendingReactive_Parms, NULL );

	pFnReleasePendingReactive->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.ReleaseActiveByClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  oActiveToRelease               ( CPF_Parm )

bool UBioActorBehavior::ReleaseActiveByClass ( class UClass* oActiveToRelease )
{
	static UFunction* pFnReleaseActiveByClass = NULL;

	if ( ! pFnReleaseActiveByClass )
		pFnReleaseActiveByClass = (UFunction*) UObject::GObjObjects()->Data[ 41499 ];

	UBioActorBehavior_execReleaseActiveByClass_Parms ReleaseActiveByClass_Parms;
	ReleaseActiveByClass_Parms.oActiveToRelease = oActiveToRelease;

	pFnReleaseActiveByClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseActiveByClass, &ReleaseActiveByClass_Parms, NULL );

	pFnReleaseActiveByClass->FunctionFlags |= 0x400;

	return ReleaseActiveByClass_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ReleaseActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::ReleaseActive ( )
{
	static UFunction* pFnReleaseActive = NULL;

	if ( ! pFnReleaseActive )
		pFnReleaseActive = (UFunction*) UObject::GObjObjects()->Data[ 41497 ];

	UBioActorBehavior_execReleaseActive_Parms ReleaseActive_Parms;

	pFnReleaseActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseActive, &ReleaseActive_Parms, NULL );

	pFnReleaseActive->FunctionFlags |= 0x400;

	return ReleaseActive_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.AcquireReactive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioReactive*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsReactive                    ( CPF_Parm )
// class AActor*                  oInstigator                    ( CPF_Parm )

class UBioReactive* UBioActorBehavior::AcquireReactive ( class UClass* clsReactive, class AActor* oInstigator )
{
	static UFunction* pFnAcquireReactive = NULL;

	if ( ! pFnAcquireReactive )
		pFnAcquireReactive = (UFunction*) UObject::GObjObjects()->Data[ 41493 ];

	UBioActorBehavior_execAcquireReactive_Parms AcquireReactive_Parms;
	AcquireReactive_Parms.clsReactive = clsReactive;
	AcquireReactive_Parms.oInstigator = oInstigator;

	pFnAcquireReactive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcquireReactive, &AcquireReactive_Parms, NULL );

	pFnAcquireReactive->FunctionFlags |= 0x400;

	return AcquireReactive_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SearchForActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActive*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsActive                      ( CPF_Parm )

class UBioActive* UBioActorBehavior::SearchForActive ( class UClass* clsActive )
{
	static UFunction* pFnSearchForActive = NULL;

	if ( ! pFnSearchForActive )
		pFnSearchForActive = (UFunction*) UObject::GObjObjects()->Data[ 41490 ];

	UBioActorBehavior_execSearchForActive_Parms SearchForActive_Parms;
	SearchForActive_Parms.clsActive = clsActive;

	pFnSearchForActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSearchForActive, &SearchForActive_Parms, NULL );

	pFnSearchForActive->FunctionFlags |= 0x400;

	return SearchForActive_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.AcquireActive
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioActive*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsActive                      ( CPF_Parm )
// unsigned long                  bAutoStartActive               ( CPF_OptionalParm | CPF_Parm )

class UBioActive* UBioActorBehavior::AcquireActive ( class UClass* clsActive, unsigned long bAutoStartActive )
{
	static UFunction* pFnAcquireActive = NULL;

	if ( ! pFnAcquireActive )
		pFnAcquireActive = (UFunction*) UObject::GObjObjects()->Data[ 41486 ];

	UBioActorBehavior_execAcquireActive_Parms AcquireActive_Parms;
	AcquireActive_Parms.clsActive = clsActive;
	AcquireActive_Parms.bAutoStartActive = bAutoStartActive;

	pFnAcquireActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcquireActive, &AcquireActive_Parms, NULL );

	pFnAcquireActive->FunctionFlags |= 0x400;

	return AcquireActive_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.RegisterReactive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  clsReactive                    ( CPF_Parm )
// class UBioReactive*            oReactive                      ( CPF_Parm )

void UBioActorBehavior::RegisterReactive ( class UClass* clsReactive, class UBioReactive* oReactive )
{
	static UFunction* pFnRegisterReactive = NULL;

	if ( ! pFnRegisterReactive )
		pFnRegisterReactive = (UFunction*) UObject::GObjObjects()->Data[ 41483 ];

	UBioActorBehavior_execRegisterReactive_Parms RegisterReactive_Parms;
	RegisterReactive_Parms.clsReactive = clsReactive;
	RegisterReactive_Parms.oReactive = oReactive;

	pFnRegisterReactive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterReactive, &RegisterReactive_Parms, NULL );

	pFnRegisterReactive->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.RegisterActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  clsActive                      ( CPF_Parm )
// class UBioActive*              oActive                        ( CPF_Parm )

void UBioActorBehavior::RegisterActive ( class UClass* clsActive, class UBioActive* oActive )
{
	static UFunction* pFnRegisterActive = NULL;

	if ( ! pFnRegisterActive )
		pFnRegisterActive = (UFunction*) UObject::GObjObjects()->Data[ 41480 ];

	UBioActorBehavior_execRegisterActive_Parms RegisterActive_Parms;
	RegisterActive_Parms.clsActive = clsActive;
	RegisterActive_Parms.oActive = oActive;

	pFnRegisterActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterActive, &RegisterActive_Parms, NULL );

	pFnRegisterActive->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.EnableCollision
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )

void UBioActorBehavior::EnableCollision ( unsigned long bState )
{
	static UFunction* pFnEnableCollision = NULL;

	if ( ! pFnEnableCollision )
		pFnEnableCollision = (UFunction*) UObject::GObjObjects()->Data[ 41478 ];

	UBioActorBehavior_execEnableCollision_Parms EnableCollision_Parms;
	EnableCollision_Parms.bState = bState;

	pFnEnableCollision->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableCollision, &EnableCollision_Parms, NULL );

	pFnEnableCollision->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.OnPhysicsImpulse
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UMeshComponent*          oMesh                          ( CPF_Parm | CPF_EditInline )
// unsigned long                  bIsForce                       ( CPF_Parm )
// struct FVector                 Impulse                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 Position                       ( CPF_Parm | CPF_OutParm )
// struct FName                   BoneName                       ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::OnPhysicsImpulse ( class UMeshComponent* oMesh, unsigned long bIsForce, struct FVector* Impulse, struct FVector* Position, struct FName* BoneName )
{
	static UFunction* pFnOnPhysicsImpulse = NULL;

	if ( ! pFnOnPhysicsImpulse )
		pFnOnPhysicsImpulse = (UFunction*) UObject::GObjObjects()->Data[ 41472 ];

	UBioActorBehavior_execOnPhysicsImpulse_Parms OnPhysicsImpulse_Parms;
	OnPhysicsImpulse_Parms.oMesh = oMesh;
	OnPhysicsImpulse_Parms.bIsForce = bIsForce;

	pFnOnPhysicsImpulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPhysicsImpulse, &OnPhysicsImpulse_Parms, NULL );

	pFnOnPhysicsImpulse->FunctionFlags |= 0x400;

	if ( Impulse )
		memcpy ( Impulse, &OnPhysicsImpulse_Parms.Impulse, 0xC );

	if ( Position )
		memcpy ( Position, &OnPhysicsImpulse_Parms.Position, 0xC );

	if ( BoneName )
		memcpy ( BoneName, &OnPhysicsImpulse_Parms.BoneName, 0x8 );
};

// Function SFXGame.BioActorBehavior.IsAbleToInstigate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::IsAbleToInstigate ( )
{
	static UFunction* pFnIsAbleToInstigate = NULL;

	if ( ! pFnIsAbleToInstigate )
		pFnIsAbleToInstigate = (UFunction*) UObject::GObjObjects()->Data[ 41470 ];

	UBioActorBehavior_execIsAbleToInstigate_Parms IsAbleToInstigate_Parms;

	pFnIsAbleToInstigate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbleToInstigate, &IsAbleToInstigate_Parms, NULL );

	pFnIsAbleToInstigate->FunctionFlags |= 0x400;

	return IsAbleToInstigate_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsDefaultActionPossible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::IsDefaultActionPossible ( )
{
	static UFunction* pFnIsDefaultActionPossible = NULL;

	if ( ! pFnIsDefaultActionPossible )
		pFnIsDefaultActionPossible = (UFunction*) UObject::GObjObjects()->Data[ 41468 ];

	UBioActorBehavior_execIsDefaultActionPossible_Parms IsDefaultActionPossible_Parms;

	pFnIsDefaultActionPossible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDefaultActionPossible, &IsDefaultActionPossible_Parms, NULL );

	pFnIsDefaultActionPossible->FunctionFlags |= 0x400;

	return IsDefaultActionPossible_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsWithinUseRange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vRefLocation                   ( CPF_Parm )

bool UBioActorBehavior::IsWithinUseRange ( struct FVector vRefLocation )
{
	static UFunction* pFnIsWithinUseRange = NULL;

	if ( ! pFnIsWithinUseRange )
		pFnIsWithinUseRange = (UFunction*) UObject::GObjObjects()->Data[ 41465 ];

	UBioActorBehavior_execIsWithinUseRange_Parms IsWithinUseRange_Parms;
	memcpy ( &IsWithinUseRange_Parms.vRefLocation, &vRefLocation, 0xC );

	pFnIsWithinUseRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsWithinUseRange, &IsWithinUseRange_Parms, NULL );

	pFnIsWithinUseRange->FunctionFlags |= 0x400;

	return IsWithinUseRange_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetUseRange
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioActorBehavior::GetUseRange ( )
{
	static UFunction* pFnGetUseRange = NULL;

	if ( ! pFnGetUseRange )
		pFnGetUseRange = (UFunction*) UObject::GObjObjects()->Data[ 41463 ];

	UBioActorBehavior_execGetUseRange_Parms GetUseRange_Parms;

	pFnGetUseRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUseRange, &GetUseRange_Parms, NULL );

	pFnGetUseRange->FunctionFlags |= 0x400;

	return GetUseRange_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetScanable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nInstigatorScanLevel           ( CPF_Parm )

bool UBioActorBehavior::GetScanable ( int nInstigatorScanLevel )
{
	static UFunction* pFnGetScanable = NULL;

	if ( ! pFnGetScanable )
		pFnGetScanable = (UFunction*) UObject::GObjObjects()->Data[ 41460 ];

	UBioActorBehavior_execGetScanable_Parms GetScanable_Parms;
	GetScanable_Parms.nInstigatorScanLevel = nInstigatorScanLevel;

	pFnGetScanable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetScanable, &GetScanable_Parms, NULL );

	pFnGetScanable->FunctionFlags |= 0x400;

	return GetScanable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetCombatTargetable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::GetCombatTargetable ( )
{
	static UFunction* pFnGetCombatTargetable = NULL;

	if ( ! pFnGetCombatTargetable )
		pFnGetCombatTargetable = (UFunction*) UObject::GObjObjects()->Data[ 41458 ];

	UBioActorBehavior_execGetCombatTargetable_Parms GetCombatTargetable_Parms;

	pFnGetCombatTargetable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCombatTargetable, &GetCombatTargetable_Parms, NULL );

	pFnGetCombatTargetable->FunctionFlags |= 0x400;

	return GetCombatTargetable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetTargetable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::GetTargetable ( )
{
	static UFunction* pFnGetTargetable = NULL;

	if ( ! pFnGetTargetable )
		pFnGetTargetable = (UFunction*) UObject::GObjObjects()->Data[ 41456 ];

	UBioActorBehavior_execGetTargetable_Parms GetTargetable_Parms;

	pFnGetTargetable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetable, &GetTargetable_Parms, NULL );

	pFnGetTargetable->FunctionFlags |= 0x400;

	return GetTargetable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsCombatSelectable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )

bool UBioActorBehavior::IsCombatSelectable ( class ABioPlayerController* pPlayerController )
{
	static UFunction* pFnIsCombatSelectable = NULL;

	if ( ! pFnIsCombatSelectable )
		pFnIsCombatSelectable = (UFunction*) UObject::GObjObjects()->Data[ 41453 ];

	UBioActorBehavior_execIsCombatSelectable_Parms IsCombatSelectable_Parms;
	IsCombatSelectable_Parms.pPlayerController = pPlayerController;

	pFnIsCombatSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCombatSelectable, &IsCombatSelectable_Parms, NULL );

	pFnIsCombatSelectable->FunctionFlags |= 0x400;

	return IsCombatSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsExploreSelectable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )

bool UBioActorBehavior::IsExploreSelectable ( class ABioPlayerController* pPlayerController )
{
	static UFunction* pFnIsExploreSelectable = NULL;

	if ( ! pFnIsExploreSelectable )
		pFnIsExploreSelectable = (UFunction*) UObject::GObjObjects()->Data[ 41450 ];

	UBioActorBehavior_execIsExploreSelectable_Parms IsExploreSelectable_Parms;
	IsExploreSelectable_Parms.pPlayerController = pPlayerController;

	pFnIsExploreSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsExploreSelectable, &IsExploreSelectable_Parms, NULL );

	pFnIsExploreSelectable->FunctionFlags |= 0x400;

	return IsExploreSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetPlayerSelectable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )
// unsigned char                  ePlayerState                   ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::GetPlayerSelectable ( class ABioPlayerController* pPlayerController, unsigned char ePlayerState )
{
	static UFunction* pFnGetPlayerSelectable = NULL;

	if ( ! pFnGetPlayerSelectable )
		pFnGetPlayerSelectable = (UFunction*) UObject::GObjObjects()->Data[ 41446 ];

	UBioActorBehavior_execGetPlayerSelectable_Parms GetPlayerSelectable_Parms;
	GetPlayerSelectable_Parms.pPlayerController = pPlayerController;
	GetPlayerSelectable_Parms.ePlayerState = ePlayerState;

	pFnGetPlayerSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerSelectable, &GetPlayerSelectable_Parms, NULL );

	pFnGetPlayerSelectable->FunctionFlags |= 0x400;

	return GetPlayerSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetTargetZoneLocationN
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )

bool UBioActorBehavior::GetTargetZoneLocationN ( int nIndex, struct FVector* vLocation )
{
	static UFunction* pFnGetTargetZoneLocationN = NULL;

	if ( ! pFnGetTargetZoneLocationN )
		pFnGetTargetZoneLocationN = (UFunction*) UObject::GObjObjects()->Data[ 41442 ];

	UBioActorBehavior_execGetTargetZoneLocationN_Parms GetTargetZoneLocationN_Parms;
	GetTargetZoneLocationN_Parms.nIndex = nIndex;

	pFnGetTargetZoneLocationN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocationN, &GetTargetZoneLocationN_Parms, NULL );

	pFnGetTargetZoneLocationN->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetTargetZoneLocationN_Parms.vLocation, 0xC );

	return GetTargetZoneLocationN_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetTargetZoneLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UBioActorBehavior::GetTargetZoneLocation ( )
{
	static UFunction* pFnGetTargetZoneLocation = NULL;

	if ( ! pFnGetTargetZoneLocation )
		pFnGetTargetZoneLocation = (UFunction*) UObject::GObjObjects()->Data[ 41440 ];

	UBioActorBehavior_execGetTargetZoneLocation_Parms GetTargetZoneLocation_Parms;

	pFnGetTargetZoneLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocation, &GetTargetZoneLocation_Parms, NULL );

	pFnGetTargetZoneLocation->FunctionFlags |= 0x400;

	return GetTargetZoneLocation_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.OnCastAt
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oWho                           ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   Power                          ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::OnCastAt ( class AActor* oWho, class APawn* oAttacker, struct FName* Power )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 41436 ];

	UBioActorBehavior_execOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oWho = oWho;
	OnCastAt_Parms.oAttacker = oAttacker;

	pFnOnCastAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );

	pFnOnCastAt->FunctionFlags |= 0x400;

	if ( Power )
		memcpy ( Power, &OnCastAt_Parms.Power, 0x8 );
};

// Function SFXGame.BioActorBehavior.OnAttacked
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oWho                           ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   Weapon                         ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::OnAttacked ( class AActor* oWho, class APawn* oAttacker, struct FName* Weapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 41432 ];

	UBioActorBehavior_execOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oWho = oWho;
	OnAttacked_Parms.oAttacker = oAttacker;

	pFnOnAttacked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );

	pFnOnAttacked->FunctionFlags |= 0x400;

	if ( Weapon )
		memcpy ( Weapon, &OnAttacked_Parms.Weapon, 0x8 );
};

// Function SFXGame.BioActorBehavior.GenerateOnCastAt
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       oAttacker                      ( CPF_Parm )
// struct FName                   nPower                         ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::GenerateOnCastAt ( class UBioActorBehavior* oAttacker, struct FName* nPower )
{
	static UFunction* pFnGenerateOnCastAt = NULL;

	if ( ! pFnGenerateOnCastAt )
		pFnGenerateOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 41429 ];

	UBioActorBehavior_execGenerateOnCastAt_Parms GenerateOnCastAt_Parms;
	GenerateOnCastAt_Parms.oAttacker = oAttacker;

	pFnGenerateOnCastAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateOnCastAt, &GenerateOnCastAt_Parms, NULL );

	pFnGenerateOnCastAt->FunctionFlags |= 0x400;

	if ( nPower )
		memcpy ( nPower, &GenerateOnCastAt_Parms.nPower, 0x8 );
};

// Function SFXGame.BioActorBehavior.GenerateOnAttacked
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       oAttacker                      ( CPF_Parm )
// struct FName                   nWeapon                        ( CPF_Parm | CPF_OutParm )

void UBioActorBehavior::GenerateOnAttacked ( class UBioActorBehavior* oAttacker, struct FName* nWeapon )
{
	static UFunction* pFnGenerateOnAttacked = NULL;

	if ( ! pFnGenerateOnAttacked )
		pFnGenerateOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 41426 ];

	UBioActorBehavior_execGenerateOnAttacked_Parms GenerateOnAttacked_Parms;
	GenerateOnAttacked_Parms.oAttacker = oAttacker;

	pFnGenerateOnAttacked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateOnAttacked, &GenerateOnAttacked_Parms, NULL );

	pFnGenerateOnAttacked->FunctionFlags |= 0x400;

	if ( nWeapon )
		memcpy ( nWeapon, &GenerateOnAttacked_Parms.nWeapon, 0x8 );
};

// Function SFXGame.BioActorBehavior.CanBeMounted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oMounter                       ( CPF_Parm )

bool UBioActorBehavior::CanBeMounted ( class APawn* oMounter )
{
	static UFunction* pFnCanBeMounted = NULL;

	if ( ! pFnCanBeMounted )
		pFnCanBeMounted = (UFunction*) UObject::GObjObjects()->Data[ 41423 ];

	UBioActorBehavior_execCanBeMounted_Parms CanBeMounted_Parms;
	CanBeMounted_Parms.oMounter = oMounter;

	pFnCanBeMounted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeMounted, &CanBeMounted_Parms, NULL );

	pFnCanBeMounted->FunctionFlags |= 0x400;

	return CanBeMounted_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.CanBeShot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActorBehavior*       pOther                         ( CPF_Parm )

bool UBioActorBehavior::CanBeShot ( class UBioActorBehavior* pOther )
{
	static UFunction* pFnCanBeShot = NULL;

	if ( ! pFnCanBeShot )
		pFnCanBeShot = (UFunction*) UObject::GObjObjects()->Data[ 41420 ];

	UBioActorBehavior_execCanBeShot_Parms CanBeShot_Parms;
	CanBeShot_Parms.pOther = pOther;

	pFnCanBeShot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeShot, &CanBeShot_Parms, NULL );

	pFnCanBeShot->FunctionFlags |= 0x400;

	return CanBeShot_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.IsSuperModeCurrentAndActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSuperMode                     ( CPF_Parm )

bool UBioActorBehavior::IsSuperModeCurrentAndActive ( unsigned char eSuperMode )
{
	static UFunction* pFnIsSuperModeCurrentAndActive = NULL;

	if ( ! pFnIsSuperModeCurrentAndActive )
		pFnIsSuperModeCurrentAndActive = (UFunction*) UObject::GObjObjects()->Data[ 41417 ];

	UBioActorBehavior_execIsSuperModeCurrentAndActive_Parms IsSuperModeCurrentAndActive_Parms;
	IsSuperModeCurrentAndActive_Parms.eSuperMode = eSuperMode;

	pFnIsSuperModeCurrentAndActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSuperModeCurrentAndActive, &IsSuperModeCurrentAndActive_Parms, NULL );

	pFnIsSuperModeCurrentAndActive->FunctionFlags |= 0x400;

	return IsSuperModeCurrentAndActive_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SetAnimationStateTrackingFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmNodeName                     ( CPF_Parm )
// struct FName                   nmValue                        ( CPF_Parm )

void UBioActorBehavior::SetAnimationStateTrackingFor ( struct FName nmNodeName, struct FName nmValue )
{
	static UFunction* pFnSetAnimationStateTrackingFor = NULL;

	if ( ! pFnSetAnimationStateTrackingFor )
		pFnSetAnimationStateTrackingFor = (UFunction*) UObject::GObjObjects()->Data[ 41414 ];

	UBioActorBehavior_execSetAnimationStateTrackingFor_Parms SetAnimationStateTrackingFor_Parms;
	memcpy ( &SetAnimationStateTrackingFor_Parms.nmNodeName, &nmNodeName, 0x8 );
	memcpy ( &SetAnimationStateTrackingFor_Parms.nmValue, &nmValue, 0x8 );

	pFnSetAnimationStateTrackingFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAnimationStateTrackingFor, &SetAnimationStateTrackingFor_Parms, NULL );

	pFnSetAnimationStateTrackingFor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioActorBehavior.GetAnimationStateTrackingFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmNodeName                     ( CPF_Parm )

struct FName UBioActorBehavior::GetAnimationStateTrackingFor ( struct FName nmNodeName )
{
	static UFunction* pFnGetAnimationStateTrackingFor = NULL;

	if ( ! pFnGetAnimationStateTrackingFor )
		pFnGetAnimationStateTrackingFor = (UFunction*) UObject::GObjObjects()->Data[ 41411 ];

	UBioActorBehavior_execGetAnimationStateTrackingFor_Parms GetAnimationStateTrackingFor_Parms;
	memcpy ( &GetAnimationStateTrackingFor_Parms.nmNodeName, &nmNodeName, 0x8 );

	pFnGetAnimationStateTrackingFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationStateTrackingFor, &GetAnimationStateTrackingFor_Parms, NULL );

	pFnGetAnimationStateTrackingFor->FunctionFlags |= 0x400;

	return GetAnimationStateTrackingFor_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetTargetTipText
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioEpicPawnBehavior*    oSourcePawnBehav               ( CPF_Parm )
// struct FString                 strTip                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioActorBehavior::GetTargetTipText ( class UBioEpicPawnBehavior* oSourcePawnBehav, struct FString* strTip )
{
	static UFunction* pFnGetTargetTipText = NULL;

	if ( ! pFnGetTargetTipText )
		pFnGetTargetTipText = (UFunction*) UObject::GObjObjects()->Data[ 41408 ];

	UBioActorBehavior_execGetTargetTipText_Parms GetTargetTipText_Parms;
	GetTargetTipText_Parms.oSourcePawnBehav = oSourcePawnBehav;

	pFnGetTargetTipText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetTipText, &GetTargetTipText_Parms, NULL );

	pFnGetTargetTipText->FunctionFlags |= 0x400;

	if ( strTip )
		memcpy ( strTip, &GetTargetTipText_Parms.strTip, 0x10 );
};

// Function SFXGame.BioActorBehavior.GetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UBioActorBehavior::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 41406 ];

	UBioActorBehavior_execGetTarget_Parms GetTarget_Parms;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.ForceClearTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioActorBehavior::ForceClearTarget ( )
{
	static UFunction* pFnForceClearTarget = NULL;

	if ( ! pFnForceClearTarget )
		pFnForceClearTarget = (UFunction*) UObject::GObjObjects()->Data[ 41404 ];

	UBioActorBehavior_execForceClearTarget_Parms ForceClearTarget_Parms;

	pFnForceClearTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceClearTarget, &ForceClearTarget_Parms, NULL );

	pFnForceClearTarget->FunctionFlags |= 0x400;

	return ForceClearTarget_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SetTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bLockOnTarget                  ( CPF_OptionalParm | CPF_Parm )

bool UBioActorBehavior::SetTarget ( class AActor* oTarget, unsigned long bLockOnTarget )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 41400 ];

	UBioActorBehavior_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.oTarget = oTarget;
	SetTarget_Parms.bLockOnTarget = bLockOnTarget;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;

	return SetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.FindSuperMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSuperMode*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsSuperMode                   ( CPF_Parm )

class UBioSuperMode* UBioActorBehavior::FindSuperMode ( class UClass* clsSuperMode )
{
	static UFunction* pFnFindSuperMode = NULL;

	if ( ! pFnFindSuperMode )
		pFnFindSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 41397 ];

	UBioActorBehavior_execFindSuperMode_Parms FindSuperMode_Parms;
	FindSuperMode_Parms.clsSuperMode = clsSuperMode;

	pFnFindSuperMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSuperMode, &FindSuperMode_Parms, NULL );

	pFnFindSuperMode->FunctionFlags |= 0x400;

	return FindSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.SetSuperMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSuperMode                     ( CPF_Parm )
// unsigned long                  bActivate                      ( CPF_Parm )
// unsigned long                  bReturnToSuperMode             ( CPF_Parm )

bool UBioActorBehavior::SetSuperMode ( unsigned char nSuperMode, unsigned long bActivate, unsigned long bReturnToSuperMode )
{
	static UFunction* pFnSetSuperMode = NULL;

	if ( ! pFnSetSuperMode )
		pFnSetSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 41392 ];

	UBioActorBehavior_execSetSuperMode_Parms SetSuperMode_Parms;
	SetSuperMode_Parms.nSuperMode = nSuperMode;
	SetSuperMode_Parms.bActivate = bActivate;
	SetSuperMode_Parms.bReturnToSuperMode = bReturnToSuperMode;

	pFnSetSuperMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSuperMode, &SetSuperMode_Parms, NULL );

	pFnSetSuperMode->FunctionFlags |= 0x400;

	return SetSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.GetPreviousSuperMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioActorBehavior::GetPreviousSuperMode ( )
{
	static UFunction* pFnGetPreviousSuperMode = NULL;

	if ( ! pFnGetPreviousSuperMode )
		pFnGetPreviousSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 41390 ];

	UBioActorBehavior_execGetPreviousSuperMode_Parms GetPreviousSuperMode_Parms;

	pFnGetPreviousSuperMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviousSuperMode, &GetPreviousSuperMode_Parms, NULL );

	pFnGetPreviousSuperMode->FunctionFlags |= 0x400;

	return GetPreviousSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehavior.TickBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioActorBehavior::TickBehavior ( float DeltaTime )
{
	static UFunction* pFnTickBehavior = NULL;

	if ( ! pFnTickBehavior )
		pFnTickBehavior = (UFunction*) UObject::GObjObjects()->Data[ 41388 ];

	UBioActorBehavior_execTickBehavior_Parms TickBehavior_Parms;
	TickBehavior_Parms.DeltaTime = DeltaTime;

	pFnTickBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickBehavior, &TickBehavior_Parms, NULL );

	pFnTickBehavior->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.DetonateAttachedGrenades
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioArtPlaceableBehavior::DetonateAttachedGrenades ( )
{
	static UFunction* pFnDetonateAttachedGrenades = NULL;

	if ( ! pFnDetonateAttachedGrenades )
		pFnDetonateAttachedGrenades = (UFunction*) UObject::GObjObjects()->Data[ 49482 ];

	UBioArtPlaceableBehavior_execDetonateAttachedGrenades_Parms DetonateAttachedGrenades_Parms;

	pFnDetonateAttachedGrenades->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetonateAttachedGrenades, &DetonateAttachedGrenades_Parms, NULL );

	pFnDetonateAttachedGrenades->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.GrenadeDetached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oGrenade                       ( CPF_Parm )

void UBioArtPlaceableBehavior::GrenadeDetached ( class AActor* oGrenade )
{
	static UFunction* pFnGrenadeDetached = NULL;

	if ( ! pFnGrenadeDetached )
		pFnGrenadeDetached = (UFunction*) UObject::GObjObjects()->Data[ 49480 ];

	UBioArtPlaceableBehavior_execGrenadeDetached_Parms GrenadeDetached_Parms;
	GrenadeDetached_Parms.oGrenade = oGrenade;

	pFnGrenadeDetached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGrenadeDetached, &GrenadeDetached_Parms, NULL );

	pFnGrenadeDetached->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.GrenadeAttached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oGrenade                       ( CPF_Parm )

void UBioArtPlaceableBehavior::GrenadeAttached ( class AActor* oGrenade )
{
	static UFunction* pFnGrenadeAttached = NULL;

	if ( ! pFnGrenadeAttached )
		pFnGrenadeAttached = (UFunction*) UObject::GObjObjects()->Data[ 49478 ];

	UBioArtPlaceableBehavior_execGrenadeAttached_Parms GrenadeAttached_Parms;
	GrenadeAttached_Parms.oGrenade = oGrenade;

	pFnGrenadeAttached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGrenadeAttached, &GrenadeAttached_Parms, NULL );

	pFnGrenadeAttached->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.WriteSaveObject
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UBioBaseSaveObject*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 InOuter                        ( CPF_Parm )
// class UBioBaseSaveObject*      Save                           ( CPF_OptionalParm | CPF_Parm )

class UBioBaseSaveObject* UBioArtPlaceableBehavior::eventWriteSaveObject ( class UObject* InOuter, class UBioBaseSaveObject* Save )
{
	static UFunction* pFnWriteSaveObject = NULL;

	if ( ! pFnWriteSaveObject )
		pFnWriteSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 49472 ];

	UBioArtPlaceableBehavior_eventWriteSaveObject_Parms WriteSaveObject_Parms;
	WriteSaveObject_Parms.InOuter = InOuter;
	WriteSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnWriteSaveObject, &WriteSaveObject_Parms, NULL );

	return WriteSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.ReadSaveObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioBaseSaveObject*      Save                           ( CPF_Parm )

void UBioArtPlaceableBehavior::eventReadSaveObject ( class UBioBaseSaveObject* Save )
{
	static UFunction* pFnReadSaveObject = NULL;

	if ( ! pFnReadSaveObject )
		pFnReadSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 49469 ];

	UBioArtPlaceableBehavior_eventReadSaveObject_Parms ReadSaveObject_Parms;
	ReadSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnReadSaveObject, &ReadSaveObject_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioArtPlaceableBehavior::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 49467 ];

	UBioArtPlaceableBehavior_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.ProceedWithMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oPawn                          ( CPF_Parm )

bool UBioArtPlaceableBehavior::ProceedWithMove ( class APawn* oPawn )
{
	static UFunction* pFnProceedWithMove = NULL;

	if ( ! pFnProceedWithMove )
		pFnProceedWithMove = (UFunction*) UObject::GObjObjects()->Data[ 49461 ];

	UBioArtPlaceableBehavior_execProceedWithMove_Parms ProceedWithMove_Parms;
	ProceedWithMove_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnProceedWithMove, &ProceedWithMove_Parms, NULL );

	return ProceedWithMove_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.SetWaitingForMove
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVal                           ( CPF_Parm )

void UBioArtPlaceableBehavior::SetWaitingForMove ( unsigned long bVal )
{
	static UFunction* pFnSetWaitingForMove = NULL;

	if ( ! pFnSetWaitingForMove )
		pFnSetWaitingForMove = (UFunction*) UObject::GObjObjects()->Data[ 49458 ];

	UBioArtPlaceableBehavior_execSetWaitingForMove_Parms SetWaitingForMove_Parms;
	SetWaitingForMove_Parms.bVal = bVal;

	this->ProcessEvent ( pFnSetWaitingForMove, &SetWaitingForMove_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.GetMaxHealth
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioArtPlaceableBehavior::GetMaxHealth ( )
{
	static UFunction* pFnGetMaxHealth = NULL;

	if ( ! pFnGetMaxHealth )
		pFnGetMaxHealth = (UFunction*) UObject::GObjObjects()->Data[ 49456 ];

	UBioArtPlaceableBehavior_execGetMaxHealth_Parms GetMaxHealth_Parms;

	this->ProcessEvent ( pFnGetMaxHealth, &GetMaxHealth_Parms, NULL );

	return GetMaxHealth_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.TermRagdoll
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::TermRagdoll ( )
{
	static UFunction* pFnTermRagdoll = NULL;

	if ( ! pFnTermRagdoll )
		pFnTermRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 49453 ];

	UBioArtPlaceableBehavior_execTermRagdoll_Parms TermRagdoll_Parms;

	this->ProcessEvent ( pFnTermRagdoll, &TermRagdoll_Parms, NULL );

	return TermRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.InitRagdoll
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::InitRagdoll ( )
{
	static UFunction* pFnInitRagdoll = NULL;

	if ( ! pFnInitRagdoll )
		pFnInitRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 49450 ];

	UBioArtPlaceableBehavior_execInitRagdoll_Parms InitRagdoll_Parms;

	this->ProcessEvent ( pFnInitRagdoll, &InitRagdoll_Parms, NULL );

	return InitRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.CanBeShot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActorBehavior*       pOther                         ( CPF_Parm )

bool UBioArtPlaceableBehavior::CanBeShot ( class UBioActorBehavior* pOther )
{
	static UFunction* pFnCanBeShot = NULL;

	if ( ! pFnCanBeShot )
		pFnCanBeShot = (UFunction*) UObject::GObjObjects()->Data[ 49447 ];

	UBioArtPlaceableBehavior_execCanBeShot_Parms CanBeShot_Parms;
	CanBeShot_Parms.pOther = pOther;

	pFnCanBeShot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeShot, &CanBeShot_Parms, NULL );

	pFnCanBeShot->FunctionFlags |= 0x400;

	return CanBeShot_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.RanOverByVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVehicleBase*         oVehicle                       ( CPF_Parm )

void UBioArtPlaceableBehavior::RanOverByVehicle ( class ABioVehicleBase* oVehicle )
{
	static UFunction* pFnRanOverByVehicle = NULL;

	if ( ! pFnRanOverByVehicle )
		pFnRanOverByVehicle = (UFunction*) UObject::GObjObjects()->Data[ 49445 ];

	UBioArtPlaceableBehavior_execRanOverByVehicle_Parms RanOverByVehicle_Parms;
	RanOverByVehicle_Parms.oVehicle = oVehicle;

	pFnRanOverByVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRanOverByVehicle, &RanOverByVehicle_Parms, NULL );

	pFnRanOverByVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.IsPhysicsAffectable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::IsPhysicsAffectable ( )
{
	static UFunction* pFnIsPhysicsAffectable = NULL;

	if ( ! pFnIsPhysicsAffectable )
		pFnIsPhysicsAffectable = (UFunction*) UObject::GObjObjects()->Data[ 49443 ];

	UBioArtPlaceableBehavior_execIsPhysicsAffectable_Parms IsPhysicsAffectable_Parms;

	pFnIsPhysicsAffectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPhysicsAffectable, &IsPhysicsAffectable_Parms, NULL );

	pFnIsPhysicsAffectable->FunctionFlags |= 0x400;

	return IsPhysicsAffectable_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetUseCase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioArtPlaceableBehavior::GetUseCase ( )
{
	static UFunction* pFnGetUseCase = NULL;

	if ( ! pFnGetUseCase )
		pFnGetUseCase = (UFunction*) UObject::GObjObjects()->Data[ 49441 ];

	UBioArtPlaceableBehavior_execGetUseCase_Parms GetUseCase_Parms;

	pFnGetUseCase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUseCase, &GetUseCase_Parms, NULL );

	pFnGetUseCase->FunctionFlags |= 0x400;

	return GetUseCase_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetStateFailure
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioArtPlaceableBehavior::GetStateFailure ( )
{
	static UFunction* pFnGetStateFailure = NULL;

	if ( ! pFnGetStateFailure )
		pFnGetStateFailure = (UFunction*) UObject::GObjObjects()->Data[ 49439 ];

	UBioArtPlaceableBehavior_execGetStateFailure_Parms GetStateFailure_Parms;

	pFnGetStateFailure->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStateFailure, &GetStateFailure_Parms, NULL );

	pFnGetStateFailure->FunctionFlags |= 0x400;

	return GetStateFailure_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetStateSuccess
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioArtPlaceableBehavior::GetStateSuccess ( )
{
	static UFunction* pFnGetStateSuccess = NULL;

	if ( ! pFnGetStateSuccess )
		pFnGetStateSuccess = (UFunction*) UObject::GObjObjects()->Data[ 49437 ];

	UBioArtPlaceableBehavior_execGetStateSuccess_Parms GetStateSuccess_Parms;

	pFnGetStateSuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStateSuccess, &GetStateSuccess_Parms, NULL );

	pFnGetStateSuccess->FunctionFlags |= 0x400;

	return GetStateSuccess_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.IsTransitioning
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::IsTransitioning ( )
{
	static UFunction* pFnIsTransitioning = NULL;

	if ( ! pFnIsTransitioning )
		pFnIsTransitioning = (UFunction*) UObject::GObjObjects()->Data[ 49435 ];

	UBioArtPlaceableBehavior_execIsTransitioning_Parms IsTransitioning_Parms;

	pFnIsTransitioning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTransitioning, &IsTransitioning_Parms, NULL );

	pFnIsTransitioning->FunctionFlags |= 0x400;

	return IsTransitioning_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.OnTransitionCPP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   FromState                      ( CPF_Parm )
// struct FName                   ToState                        ( CPF_Parm )

void UBioArtPlaceableBehavior::OnTransitionCPP ( struct FName FromState, struct FName ToState )
{
	static UFunction* pFnOnTransitionCPP = NULL;

	if ( ! pFnOnTransitionCPP )
		pFnOnTransitionCPP = (UFunction*) UObject::GObjObjects()->Data[ 49432 ];

	UBioArtPlaceableBehavior_execOnTransitionCPP_Parms OnTransitionCPP_Parms;
	memcpy ( &OnTransitionCPP_Parms.FromState, &FromState, 0x8 );
	memcpy ( &OnTransitionCPP_Parms.ToState, &ToState, 0x8 );

	pFnOnTransitionCPP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTransitionCPP, &OnTransitionCPP_Parms, NULL );

	pFnOnTransitionCPP->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.ChangeStateMesh
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmState                        ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableBehavior::ChangeStateMesh ( struct FName* nmState )
{
	static UFunction* pFnChangeStateMesh = NULL;

	if ( ! pFnChangeStateMesh )
		pFnChangeStateMesh = (UFunction*) UObject::GObjObjects()->Data[ 49430 ];

	UBioArtPlaceableBehavior_execChangeStateMesh_Parms ChangeStateMesh_Parms;

	pFnChangeStateMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeStateMesh, &ChangeStateMesh_Parms, NULL );

	pFnChangeStateMesh->FunctionFlags |= 0x400;

	if ( nmState )
		memcpy ( nmState, &ChangeStateMesh_Parms.nmState, 0x8 );
};

// Function SFXGame.BioArtPlaceableBehavior.SetActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bSetActive                     ( CPF_Parm )

void UBioArtPlaceableBehavior::SetActive ( unsigned long bSetActive )
{
	static UFunction* pFnSetActive = NULL;

	if ( ! pFnSetActive )
		pFnSetActive = (UFunction*) UObject::GObjObjects()->Data[ 49428 ];

	UBioArtPlaceableBehavior_execSetActive_Parms SetActive_Parms;
	SetActive_Parms.bSetActive = bSetActive;

	pFnSetActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActive, &SetActive_Parms, NULL );

	pFnSetActive->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.SetCollision
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCollide                       ( CPF_Parm )

void UBioArtPlaceableBehavior::SetCollision ( unsigned long bCollide )
{
	static UFunction* pFnSetCollision = NULL;

	if ( ! pFnSetCollision )
		pFnSetCollision = (UFunction*) UObject::GObjObjects()->Data[ 49426 ];

	UBioArtPlaceableBehavior_execSetCollision_Parms SetCollision_Parms;
	SetCollision_Parms.bCollide = bCollide;

	this->ProcessEvent ( pFnSetCollision, &SetCollision_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.GetCurrentState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioArtPlaceableBehavior::eventGetCurrentState ( )
{
	static UFunction* pFnGetCurrentState = NULL;

	if ( ! pFnGetCurrentState )
		pFnGetCurrentState = (UFunction*) UObject::GObjObjects()->Data[ 49424 ];

	UBioArtPlaceableBehavior_eventGetCurrentState_Parms GetCurrentState_Parms;

	this->ProcessEvent ( pFnGetCurrentState, &GetCurrentState_Parms, NULL );

	return GetCurrentState_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.ReactToDeath
// [0x00024002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioArtPlaceableBehavior::ReactToDeath ( float Damage, float fDeathDamage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* clsDamageType, struct FTraceHitInfo HitInfo, class UBioDamageType* pDamage )
{
	static UFunction* pFnReactToDeath = NULL;

	if ( ! pFnReactToDeath )
		pFnReactToDeath = (UFunction*) UObject::GObjObjects()->Data[ 49412 ];

	UBioArtPlaceableBehavior_execReactToDeath_Parms ReactToDeath_Parms;
	ReactToDeath_Parms.Damage = Damage;
	ReactToDeath_Parms.fDeathDamage = fDeathDamage;
	ReactToDeath_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReactToDeath_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ReactToDeath_Parms.Momentum, &Momentum, 0xC );
	ReactToDeath_Parms.clsDamageType = clsDamageType;
	memcpy ( &ReactToDeath_Parms.HitInfo, &HitInfo, 0x28 );
	ReactToDeath_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnReactToDeath, &ReactToDeath_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.ReactToImpulse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vMomentum                      ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )

void UBioArtPlaceableBehavior::eventReactToImpulse ( struct FVector vMomentum, struct FVector vHitLocation )
{
	static UFunction* pFnReactToImpulse = NULL;

	if ( ! pFnReactToImpulse )
		pFnReactToImpulse = (UFunction*) UObject::GObjObjects()->Data[ 49404 ];

	UBioArtPlaceableBehavior_eventReactToImpulse_Parms ReactToImpulse_Parms;
	memcpy ( &ReactToImpulse_Parms.vMomentum, &vMomentum, 0xC );
	memcpy ( &ReactToImpulse_Parms.vHitLocation, &vHitLocation, 0xC );

	this->ProcessEvent ( pFnReactToImpulse, &ReactToImpulse_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.ProxyTakeDamage
// [0x00424002] 
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// float                          CurrentDamage                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableBehavior::ProxyTakeDamage ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, float* CurrentDamage, struct FVector* Momentum )
{
	static UFunction* pFnProxyTakeDamage = NULL;

	if ( ! pFnProxyTakeDamage )
		pFnProxyTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 49384 ];

	UBioArtPlaceableBehavior_execProxyTakeDamage_Parms ProxyTakeDamage_Parms;
	ProxyTakeDamage_Parms.OriginalDamage = OriginalDamage;
	ProxyTakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ProxyTakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	ProxyTakeDamage_Parms.DamageType = DamageType;
	memcpy ( &ProxyTakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	ProxyTakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	ProxyTakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnProxyTakeDamage, &ProxyTakeDamage_Parms, NULL );

	if ( CurrentDamage )
		*CurrentDamage = ProxyTakeDamage_Parms.CurrentDamage;

	if ( Momentum )
		memcpy ( Momentum, &ProxyTakeDamage_Parms.Momentum, 0xC );
};

// Function SFXGame.BioArtPlaceableBehavior.TakeDamageCPP
// [0x00424802] ( FUNC_Event )
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableBehavior::eventTakeDamageCPP ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, struct FVector* Momentum )
{
	static UFunction* pFnTakeDamageCPP = NULL;

	if ( ! pFnTakeDamageCPP )
		pFnTakeDamageCPP = (UFunction*) UObject::GObjObjects()->Data[ 49375 ];

	UBioArtPlaceableBehavior_eventTakeDamageCPP_Parms TakeDamageCPP_Parms;
	TakeDamageCPP_Parms.OriginalDamage = OriginalDamage;
	TakeDamageCPP_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamageCPP_Parms.HitLocation, &HitLocation, 0xC );
	TakeDamageCPP_Parms.DamageType = DamageType;
	memcpy ( &TakeDamageCPP_Parms.HitInfo, &HitInfo, 0x28 );
	TakeDamageCPP_Parms.pDamageCausingActor = pDamageCausingActor;
	TakeDamageCPP_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnTakeDamageCPP, &TakeDamageCPP_Parms, NULL );

	if ( Momentum )
		memcpy ( Momentum, &TakeDamageCPP_Parms.Momentum, 0xC );
};

// Function SFXGame.BioArtPlaceableBehavior.UsedKey
// [0x00020000] 
// Parameters infos:
// struct FName                   KeyName                        ( CPF_Parm )

void UBioArtPlaceableBehavior::UsedKey ( struct FName KeyName )
{
	static UFunction* pFnUsedKey = NULL;

	if ( ! pFnUsedKey )
		pFnUsedKey = (UFunction*) UObject::GObjObjects()->Data[ 49373 ];

	UBioArtPlaceableBehavior_execUsedKey_Parms UsedKey_Parms;
	memcpy ( &UsedKey_Parms.KeyName, &KeyName, 0x8 );

	this->ProcessEvent ( pFnUsedKey, &UsedKey_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.HasKey
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   KeyName                        ( CPF_Parm )

bool UBioArtPlaceableBehavior::eventHasKey ( struct FName KeyName )
{
	static UFunction* pFnHasKey = NULL;

	if ( ! pFnHasKey )
		pFnHasKey = (UFunction*) UObject::GObjObjects()->Data[ 49369 ];

	UBioArtPlaceableBehavior_eventHasKey_Parms HasKey_Parms;
	memcpy ( &HasKey_Parms.KeyName, &KeyName, 0x8 );

	this->ProcessEvent ( pFnHasKey, &HasKey_Parms, NULL );

	return HasKey_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.OnAppearanceSet
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UBioBaseAppearancePlaceable* oAppearance                    ( CPF_Parm )

void UBioArtPlaceableBehavior::eventOnAppearanceSet ( class UBioBaseAppearancePlaceable* oAppearance )
{
	static UFunction* pFnOnAppearanceSet = NULL;

	if ( ! pFnOnAppearanceSet )
		pFnOnAppearanceSet = (UFunction*) UObject::GObjObjects()->Data[ 49367 ];

	UBioArtPlaceableBehavior_eventOnAppearanceSet_Parms OnAppearanceSet_Parms;
	OnAppearanceSet_Parms.oAppearance = oAppearance;

	this->ProcessEvent ( pFnOnAppearanceSet, &OnAppearanceSet_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.OnTransition
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   FromState                      ( CPF_Parm )
// struct FName                   ToState                        ( CPF_Parm )
// unsigned long                  bCallCPP                       ( CPF_OptionalParm | CPF_Parm )

void UBioArtPlaceableBehavior::eventOnTransition ( struct FName FromState, struct FName ToState, unsigned long bCallCPP )
{
	static UFunction* pFnOnTransition = NULL;

	if ( ! pFnOnTransition )
		pFnOnTransition = (UFunction*) UObject::GObjObjects()->Data[ 49361 ];

	UBioArtPlaceableBehavior_eventOnTransition_Parms OnTransition_Parms;
	memcpy ( &OnTransition_Parms.FromState, &FromState, 0x8 );
	memcpy ( &OnTransition_Parms.ToState, &ToState, 0x8 );
	OnTransition_Parms.bCallCPP = bCallCPP;

	this->ProcessEvent ( pFnOnTransition, &OnTransition_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.OnArtPlaceablePlotFail
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oUsingActor                    ( CPF_Parm )
// struct FName                   nmToState                      ( CPF_Parm )

void UBioArtPlaceableBehavior::eventOnArtPlaceablePlotFail ( class AActor* oUsingActor, struct FName nmToState )
{
	static UFunction* pFnOnArtPlaceablePlotFail = NULL;

	if ( ! pFnOnArtPlaceablePlotFail )
		pFnOnArtPlaceablePlotFail = (UFunction*) UObject::GObjObjects()->Data[ 49356 ];

	UBioArtPlaceableBehavior_eventOnArtPlaceablePlotFail_Parms OnArtPlaceablePlotFail_Parms;
	OnArtPlaceablePlotFail_Parms.oUsingActor = oUsingActor;
	memcpy ( &OnArtPlaceablePlotFail_Parms.nmToState, &nmToState, 0x8 );

	this->ProcessEvent ( pFnOnArtPlaceablePlotFail, &OnArtPlaceablePlotFail_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.OnArtPlaceableUsed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  User                           ( CPF_Parm )
// struct FName                   ToState                        ( CPF_Parm )

void UBioArtPlaceableBehavior::eventOnArtPlaceableUsed ( class AActor* User, struct FName ToState )
{
	static UFunction* pFnOnArtPlaceableUsed = NULL;

	if ( ! pFnOnArtPlaceableUsed )
		pFnOnArtPlaceableUsed = (UFunction*) UObject::GObjObjects()->Data[ 49351 ];

	UBioArtPlaceableBehavior_eventOnArtPlaceableUsed_Parms OnArtPlaceableUsed_Parms;
	OnArtPlaceableUsed_Parms.User = User;
	memcpy ( &OnArtPlaceableUsed_Parms.ToState, &ToState, 0x8 );

	this->ProcessEvent ( pFnOnArtPlaceableUsed, &OnArtPlaceableUsed_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.IsInteractive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::eventIsInteractive ( )
{
	static UFunction* pFnIsInteractive = NULL;

	if ( ! pFnIsInteractive )
		pFnIsInteractive = (UFunction*) UObject::GObjObjects()->Data[ 49347 ];

	UBioArtPlaceableBehavior_eventIsInteractive_Parms IsInteractive_Parms;

	this->ProcessEvent ( pFnIsInteractive, &IsInteractive_Parms, NULL );

	return IsInteractive_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetState
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioArtPlaceableBehavior::GetState ( )
{
	static UFunction* pFnGetState = NULL;

	if ( ! pFnGetState )
		pFnGetState = (UFunction*) UObject::GObjObjects()->Data[ 49344 ];

	UBioArtPlaceableBehavior_execGetState_Parms GetState_Parms;

	this->ProcessEvent ( pFnGetState, &GetState_Parms, NULL );

	return GetState_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetHealth
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioArtPlaceableBehavior::eventGetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 49340 ];

	UBioArtPlaceableBehavior_eventGetHealth_Parms GetHealth_Parms;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	return GetHealth_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.BioRelateActors
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioArtPlaceableBehavior::eventBioRelateActors ( )
{
	static UFunction* pFnBioRelateActors = NULL;

	if ( ! pFnBioRelateActors )
		pFnBioRelateActors = (UFunction*) UObject::GObjObjects()->Data[ 49336 ];

	UBioArtPlaceableBehavior_eventBioRelateActors_Parms BioRelateActors_Parms;

	this->ProcessEvent ( pFnBioRelateActors, &BioRelateActors_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioArtPlaceableBehavior::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 49330 ];

	UBioArtPlaceableBehavior_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.BeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioArtPlaceableBehavior::eventBeginPlay ( )
{
	static UFunction* pFnBeginPlay = NULL;

	if ( ! pFnBeginPlay )
		pFnBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49329 ];

	UBioArtPlaceableBehavior_eventBeginPlay_Parms BeginPlay_Parms;

	this->ProcessEvent ( pFnBeginPlay, &BeginPlay_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehavior.GetStartingState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioArtPlaceableBehavior::eventGetStartingState ( )
{
	static UFunction* pFnGetStartingState = NULL;

	if ( ! pFnGetStartingState )
		pFnGetStartingState = (UFunction*) UObject::GObjObjects()->Data[ 49325 ];

	UBioArtPlaceableBehavior_eventGetStartingState_Parms GetStartingState_Parms;

	this->ProcessEvent ( pFnGetStartingState, &GetStartingState_Parms, NULL );

	return GetStartingState_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.CanForceOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::eventCanForceOpen ( )
{
	static UFunction* pFnCanForceOpen = NULL;

	if ( ! pFnCanForceOpen )
		pFnCanForceOpen = (UFunction*) UObject::GObjObjects()->Data[ 49321 ];

	UBioArtPlaceableBehavior_eventCanForceOpen_Parms CanForceOpen_Parms;

	this->ProcessEvent ( pFnCanForceOpen, &CanForceOpen_Parms, NULL );

	return CanForceOpen_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetTreasureID
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioArtPlaceableBehavior::eventGetTreasureID ( )
{
	static UFunction* pFnGetTreasureID = NULL;

	if ( ! pFnGetTreasureID )
		pFnGetTreasureID = (UFunction*) UObject::GObjObjects()->Data[ 49318 ];

	UBioArtPlaceableBehavior_eventGetTreasureID_Parms GetTreasureID_Parms;

	this->ProcessEvent ( pFnGetTreasureID, &GetTreasureID_Parms, NULL );

	return GetTreasureID_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.ContainsTreasure
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::eventContainsTreasure ( )
{
	static UFunction* pFnContainsTreasure = NULL;

	if ( ! pFnContainsTreasure )
		pFnContainsTreasure = (UFunction*) UObject::GObjObjects()->Data[ 49315 ];

	UBioArtPlaceableBehavior_eventContainsTreasure_Parms ContainsTreasure_Parms;

	this->ProcessEvent ( pFnContainsTreasure, &ContainsTreasure_Parms, NULL );

	return ContainsTreasure_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.DoDoorFinished
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ToState                        ( CPF_Parm )

void UBioArtPlaceableBehavior::DoDoorFinished ( struct FName ToState )
{
	static UFunction* pFnDoDoorFinished = NULL;

	if ( ! pFnDoDoorFinished )
		pFnDoDoorFinished = (UFunction*) UObject::GObjObjects()->Data[ 49313 ];

	UBioArtPlaceableBehavior_execDoDoorFinished_Parms DoDoorFinished_Parms;
	memcpy ( &DoDoorFinished_Parms.ToState, &ToState, 0x8 );

	pFnDoDoorFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoDoorFinished, &DoDoorFinished_Parms, NULL );

	pFnDoDoorFinished->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.HasTransition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   Transition                     ( CPF_Parm )

bool UBioArtPlaceableBehavior::HasTransition ( struct FName ToState, struct FName Transition )
{
	static UFunction* pFnHasTransition = NULL;

	if ( ! pFnHasTransition )
		pFnHasTransition = (UFunction*) UObject::GObjObjects()->Data[ 49309 ];

	UBioArtPlaceableBehavior_execHasTransition_Parms HasTransition_Parms;
	memcpy ( &HasTransition_Parms.ToState, &ToState, 0x8 );
	memcpy ( &HasTransition_Parms.Transition, &Transition, 0x8 );

	pFnHasTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasTransition, &HasTransition_Parms, NULL );

	pFnHasTransition->FunctionFlags |= 0x400;

	return HasTransition_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.SetState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   NamedTransition                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  IgnoreTransition               ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRightNow                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bApplyVFX                      ( CPF_OptionalParm | CPF_Parm )

bool UBioArtPlaceableBehavior::SetState ( struct FName ToState, struct FName NamedTransition, unsigned long IgnoreTransition, unsigned long bRightNow, unsigned long bApplyVFX )
{
	static UFunction* pFnSetState = NULL;

	if ( ! pFnSetState )
		pFnSetState = (UFunction*) UObject::GObjObjects()->Data[ 49302 ];

	UBioArtPlaceableBehavior_execSetState_Parms SetState_Parms;
	memcpy ( &SetState_Parms.ToState, &ToState, 0x8 );
	memcpy ( &SetState_Parms.NamedTransition, &NamedTransition, 0x8 );
	SetState_Parms.IgnoreTransition = IgnoreTransition;
	SetState_Parms.bRightNow = bRightNow;
	SetState_Parms.bApplyVFX = bApplyVFX;

	pFnSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetState, &SetState_Parms, NULL );

	pFnSetState->FunctionFlags |= 0x400;

	return SetState_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.VerifyNotEditor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioArtPlaceableBehavior::VerifyNotEditor ( )
{
	static UFunction* pFnVerifyNotEditor = NULL;

	if ( ! pFnVerifyNotEditor )
		pFnVerifyNotEditor = (UFunction*) UObject::GObjObjects()->Data[ 49301 ];

	UBioArtPlaceableBehavior_execVerifyNotEditor_Parms VerifyNotEditor_Parms;

	pFnVerifyNotEditor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVerifyNotEditor, &VerifyNotEditor_Parms, NULL );

	pFnVerifyNotEditor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.ApplyVFXForState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   NewState                       ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UBioArtPlaceableBehavior::ApplyVFXForState ( struct FName NewState, unsigned long bForce )
{
	static UFunction* pFnApplyVFXForState = NULL;

	if ( ! pFnApplyVFXForState )
		pFnApplyVFXForState = (UFunction*) UObject::GObjObjects()->Data[ 49298 ];

	UBioArtPlaceableBehavior_execApplyVFXForState_Parms ApplyVFXForState_Parms;
	memcpy ( &ApplyVFXForState_Parms.NewState, &NewState, 0x8 );
	ApplyVFXForState_Parms.bForce = bForce;

	pFnApplyVFXForState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyVFXForState, &ApplyVFXForState_Parms, NULL );

	pFnApplyVFXForState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.PreloadVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioArtPlaceableBehavior::PreloadVFX ( )
{
	static UFunction* pFnPreloadVFX = NULL;

	if ( ! pFnPreloadVFX )
		pFnPreloadVFX = (UFunction*) UObject::GObjObjects()->Data[ 49297 ];

	UBioArtPlaceableBehavior_execPreloadVFX_Parms PreloadVFX_Parms;

	pFnPreloadVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreloadVFX, &PreloadVFX_Parms, NULL );

	pFnPreloadVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.CanBeMounted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oMounter                       ( CPF_Parm )

bool UBioArtPlaceableBehavior::CanBeMounted ( class APawn* oMounter )
{
	static UFunction* pFnCanBeMounted = NULL;

	if ( ! pFnCanBeMounted )
		pFnCanBeMounted = (UFunction*) UObject::GObjObjects()->Data[ 49294 ];

	UBioArtPlaceableBehavior_execCanBeMounted_Parms CanBeMounted_Parms;
	CanBeMounted_Parms.oMounter = oMounter;

	pFnCanBeMounted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeMounted, &CanBeMounted_Parms, NULL );

	pFnCanBeMounted->FunctionFlags |= 0x400;

	return CanBeMounted_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.PlaySoundForState
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   oState                         ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableBehavior::PlaySoundForState ( struct FName* oState )
{
	static UFunction* pFnPlaySoundForState = NULL;

	if ( ! pFnPlaySoundForState )
		pFnPlaySoundForState = (UFunction*) UObject::GObjObjects()->Data[ 49292 ];

	UBioArtPlaceableBehavior_execPlaySoundForState_Parms PlaySoundForState_Parms;

	pFnPlaySoundForState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaySoundForState, &PlaySoundForState_Parms, NULL );

	pFnPlaySoundForState->FunctionFlags |= 0x400;

	if ( oState )
		memcpy ( oState, &PlaySoundForState_Parms.oState, 0x8 );
};

// Function SFXGame.BioArtPlaceableBehavior.IsMeshPhysicsCapable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioArtPlaceableBehavior::IsMeshPhysicsCapable ( )
{
	static UFunction* pFnIsMeshPhysicsCapable = NULL;

	if ( ! pFnIsMeshPhysicsCapable )
		pFnIsMeshPhysicsCapable = (UFunction*) UObject::GObjObjects()->Data[ 49290 ];

	UBioArtPlaceableBehavior_execIsMeshPhysicsCapable_Parms IsMeshPhysicsCapable_Parms;

	pFnIsMeshPhysicsCapable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMeshPhysicsCapable, &IsMeshPhysicsCapable_Parms, NULL );

	pFnIsMeshPhysicsCapable->FunctionFlags |= 0x400;

	return IsMeshPhysicsCapable_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.UpdatePlaceableDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioArtPlaceableBehavior::UpdatePlaceableDamage ( )
{
	static UFunction* pFnUpdatePlaceableDamage = NULL;

	if ( ! pFnUpdatePlaceableDamage )
		pFnUpdatePlaceableDamage = (UFunction*) UObject::GObjObjects()->Data[ 49289 ];

	UBioArtPlaceableBehavior_execUpdatePlaceableDamage_Parms UpdatePlaceableDamage_Parms;

	pFnUpdatePlaceableDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlaceableDamage, &UpdatePlaceableDamage_Parms, NULL );

	pFnUpdatePlaceableDamage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.HandleDamageablePlaceable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UBioArtPlaceableBehavior::HandleDamageablePlaceable ( class AController* InstigatedBy, struct FVector HitLocation )
{
	static UFunction* pFnHandleDamageablePlaceable = NULL;

	if ( ! pFnHandleDamageablePlaceable )
		pFnHandleDamageablePlaceable = (UFunction*) UObject::GObjObjects()->Data[ 49286 ];

	UBioArtPlaceableBehavior_execHandleDamageablePlaceable_Parms HandleDamageablePlaceable_Parms;
	HandleDamageablePlaceable_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &HandleDamageablePlaceable_Parms.HitLocation, &HitLocation, 0xC );

	pFnHandleDamageablePlaceable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleDamageablePlaceable, &HandleDamageablePlaceable_Parms, NULL );

	pFnHandleDamageablePlaceable->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.InitializeActionFramework
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioArtPlaceableBehavior::InitializeActionFramework ( )
{
	static UFunction* pFnInitializeActionFramework = NULL;

	if ( ! pFnInitializeActionFramework )
		pFnInitializeActionFramework = (UFunction*) UObject::GObjObjects()->Data[ 49285 ];

	UBioArtPlaceableBehavior_execInitializeActionFramework_Parms InitializeActionFramework_Parms;

	pFnInitializeActionFramework->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeActionFramework, &InitializeActionFramework_Parms, NULL );

	pFnInitializeActionFramework->FunctionFlags |= 0x400;
};

// Function SFXGame.BioArtPlaceableBehavior.OnPhysicsImpulse
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UMeshComponent*          oMesh                          ( CPF_Parm | CPF_EditInline )
// unsigned long                  bIsForce                       ( CPF_Parm )
// struct FVector                 Impulse                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 Position                       ( CPF_Parm | CPF_OutParm )
// struct FName                   BoneName                       ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableBehavior::OnPhysicsImpulse ( class UMeshComponent* oMesh, unsigned long bIsForce, struct FVector* Impulse, struct FVector* Position, struct FName* BoneName )
{
	static UFunction* pFnOnPhysicsImpulse = NULL;

	if ( ! pFnOnPhysicsImpulse )
		pFnOnPhysicsImpulse = (UFunction*) UObject::GObjObjects()->Data[ 49279 ];

	UBioArtPlaceableBehavior_execOnPhysicsImpulse_Parms OnPhysicsImpulse_Parms;
	OnPhysicsImpulse_Parms.oMesh = oMesh;
	OnPhysicsImpulse_Parms.bIsForce = bIsForce;

	pFnOnPhysicsImpulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPhysicsImpulse, &OnPhysicsImpulse_Parms, NULL );

	pFnOnPhysicsImpulse->FunctionFlags |= 0x400;

	if ( Impulse )
		memcpy ( Impulse, &OnPhysicsImpulse_Parms.Impulse, 0xC );

	if ( Position )
		memcpy ( Position, &OnPhysicsImpulse_Parms.Position, 0xC );

	if ( BoneName )
		memcpy ( BoneName, &OnPhysicsImpulse_Parms.BoneName, 0x8 );
};

// Function SFXGame.BioArtPlaceableBehavior.GetTargetZoneLocationN
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )

bool UBioArtPlaceableBehavior::GetTargetZoneLocationN ( int nIndex, struct FVector* vLocation )
{
	static UFunction* pFnGetTargetZoneLocationN = NULL;

	if ( ! pFnGetTargetZoneLocationN )
		pFnGetTargetZoneLocationN = (UFunction*) UObject::GObjObjects()->Data[ 49275 ];

	UBioArtPlaceableBehavior_execGetTargetZoneLocationN_Parms GetTargetZoneLocationN_Parms;
	GetTargetZoneLocationN_Parms.nIndex = nIndex;

	pFnGetTargetZoneLocationN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocationN, &GetTargetZoneLocationN_Parms, NULL );

	pFnGetTargetZoneLocationN->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetTargetZoneLocationN_Parms.vLocation, 0xC );

	return GetTargetZoneLocationN_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetTargetZoneLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UBioArtPlaceableBehavior::GetTargetZoneLocation ( )
{
	static UFunction* pFnGetTargetZoneLocation = NULL;

	if ( ! pFnGetTargetZoneLocation )
		pFnGetTargetZoneLocation = (UFunction*) UObject::GObjObjects()->Data[ 49273 ];

	UBioArtPlaceableBehavior_execGetTargetZoneLocation_Parms GetTargetZoneLocation_Parms;

	pFnGetTargetZoneLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocation, &GetTargetZoneLocation_Parms, NULL );

	pFnGetTargetZoneLocation->FunctionFlags |= 0x400;

	return GetTargetZoneLocation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableBehavior.GetPlayerSelectable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )
// unsigned char                  ePlayerState                   ( CPF_OptionalParm | CPF_Parm )

bool UBioArtPlaceableBehavior::GetPlayerSelectable ( class ABioPlayerController* pPlayerController, unsigned char ePlayerState )
{
	static UFunction* pFnGetPlayerSelectable = NULL;

	if ( ! pFnGetPlayerSelectable )
		pFnGetPlayerSelectable = (UFunction*) UObject::GObjObjects()->Data[ 49269 ];

	UBioArtPlaceableBehavior_execGetPlayerSelectable_Parms GetPlayerSelectable_Parms;
	GetPlayerSelectable_Parms.pPlayerController = pPlayerController;
	GetPlayerSelectable_Parms.ePlayerState = ePlayerState;

	pFnGetPlayerSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerSelectable, &GetPlayerSelectable_Parms, NULL );

	pFnGetPlayerSelectable->FunctionFlags |= 0x400;

	return GetPlayerSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableShieldBehavior.ProxyTakeDamage
// [0x00424002] 
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// float                          CurrentDamage                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioArtPlaceableShieldBehavior::ProxyTakeDamage ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, float* CurrentDamage, struct FVector* Momentum )
{
	static UFunction* pFnProxyTakeDamage = NULL;

	if ( ! pFnProxyTakeDamage )
		pFnProxyTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 49793 ];

	UBioArtPlaceableShieldBehavior_execProxyTakeDamage_Parms ProxyTakeDamage_Parms;
	ProxyTakeDamage_Parms.OriginalDamage = OriginalDamage;
	ProxyTakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ProxyTakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	ProxyTakeDamage_Parms.DamageType = DamageType;
	memcpy ( &ProxyTakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	ProxyTakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	ProxyTakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnProxyTakeDamage, &ProxyTakeDamage_Parms, NULL );

	if ( CurrentDamage )
		*CurrentDamage = ProxyTakeDamage_Parms.CurrentDamage;

	if ( Momentum )
		memcpy ( Momentum, &ProxyTakeDamage_Parms.Momentum, 0xC );
};

// Function SFXGame.BioArtPlaceableShieldBehavior.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTimeDelta                     ( CPF_Parm )

void UBioArtPlaceableShieldBehavior::Tick ( float fTimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49791 ];

	UBioArtPlaceableShieldBehavior_execTick_Parms Tick_Parms;
	Tick_Parms.fTimeDelta = fTimeDelta;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.SetMatriarchZen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void UBioEpicPawnBehavior::eventSetMatriarchZen ( unsigned long bEnabled )
{
	static UFunction* pFnSetMatriarchZen = NULL;

	if ( ! pFnSetMatriarchZen )
		pFnSetMatriarchZen = (UFunction*) UObject::GObjObjects()->Data[ 43503 ];

	UBioEpicPawnBehavior_eventSetMatriarchZen_Parms SetMatriarchZen_Parms;
	SetMatriarchZen_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetMatriarchZen, &SetMatriarchZen_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.DisplayEpicPawnVisualEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmLabel                        ( CPF_Parm )

bool UBioEpicPawnBehavior::DisplayEpicPawnVisualEffect ( struct FName nmLabel )
{
	static UFunction* pFnDisplayEpicPawnVisualEffect = NULL;

	if ( ! pFnDisplayEpicPawnVisualEffect )
		pFnDisplayEpicPawnVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 43500 ];

	UBioEpicPawnBehavior_execDisplayEpicPawnVisualEffect_Parms DisplayEpicPawnVisualEffect_Parms;
	memcpy ( &DisplayEpicPawnVisualEffect_Parms.nmLabel, &nmLabel, 0x8 );

	pFnDisplayEpicPawnVisualEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayEpicPawnVisualEffect, &DisplayEpicPawnVisualEffect_Parms, NULL );

	pFnDisplayEpicPawnVisualEffect->FunctionFlags |= 0x400;

	return DisplayEpicPawnVisualEffect_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.OnShieldsDown
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UBioEpicPawnBehavior::eventOnShieldsDown ( )
{
	static UFunction* pFnOnShieldsDown = NULL;

	if ( ! pFnOnShieldsDown )
		pFnOnShieldsDown = (UFunction*) UObject::GObjObjects()->Data[ 43499 ];

	UBioEpicPawnBehavior_eventOnShieldsDown_Parms OnShieldsDown_Parms;

	this->ProcessEvent ( pFnOnShieldsDown, &OnShieldsDown_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.AdjustSalvage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fAmt                           ( CPF_Parm )

void UBioEpicPawnBehavior::eventAdjustSalvage ( float fAmt )
{
	static UFunction* pFnAdjustSalvage = NULL;

	if ( ! pFnAdjustSalvage )
		pFnAdjustSalvage = (UFunction*) UObject::GObjObjects()->Data[ 43494 ];

	UBioEpicPawnBehavior_eventAdjustSalvage_Parms AdjustSalvage_Parms;
	AdjustSalvage_Parms.fAmt = fAmt;

	this->ProcessEvent ( pFnAdjustSalvage, &AdjustSalvage_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.GetSalvage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioEpicPawnBehavior::eventGetSalvage ( )
{
	static UFunction* pFnGetSalvage = NULL;

	if ( ! pFnGetSalvage )
		pFnGetSalvage = (UFunction*) UObject::GObjObjects()->Data[ 43488 ];

	UBioEpicPawnBehavior_eventGetSalvage_Parms GetSalvage_Parms;

	this->ProcessEvent ( pFnGetSalvage, &GetSalvage_Parms, NULL );

	return GetSalvage_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsHealing
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsHealing ( )
{
	static UFunction* pFnIsHealing = NULL;

	if ( ! pFnIsHealing )
		pFnIsHealing = (UFunction*) UObject::GObjObjects()->Data[ 43486 ];

	UBioEpicPawnBehavior_execIsHealing_Parms IsHealing_Parms;

	pFnIsHealing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsHealing, &IsHealing_Parms, NULL );

	pFnIsHealing->FunctionFlags |= 0x400;

	return IsHealing_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.Heal
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          fHealthPoints                  ( CPF_Parm )
// float                          fToxicDamageHealed             ( CPF_OptionalParm | CPF_Parm )
// float                          fResourcesRequired             ( CPF_OptionalParm | CPF_Parm )

void UBioEpicPawnBehavior::Heal ( float fHealthPoints, float fToxicDamageHealed, float fResourcesRequired )
{
	static UFunction* pFnHeal = NULL;

	if ( ! pFnHeal )
		pFnHeal = (UFunction*) UObject::GObjObjects()->Data[ 43482 ];

	UBioEpicPawnBehavior_execHeal_Parms Heal_Parms;
	Heal_Parms.fHealthPoints = fHealthPoints;
	Heal_Parms.fToxicDamageHealed = fToxicDamageHealed;
	Heal_Parms.fResourcesRequired = fResourcesRequired;

	pFnHeal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHeal, &Heal_Parms, NULL );

	pFnHeal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.GetPercentHealth
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioEpicPawnBehavior::GetPercentHealth ( )
{
	static UFunction* pFnGetPercentHealth = NULL;

	if ( ! pFnGetPercentHealth )
		pFnGetPercentHealth = (UFunction*) UObject::GObjObjects()->Data[ 43480 ];

	UBioEpicPawnBehavior_execGetPercentHealth_Parms GetPercentHealth_Parms;

	this->ProcessEvent ( pFnGetPercentHealth, &GetPercentHealth_Parms, NULL );

	return GetPercentHealth_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.GetCurrentHealth
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioEpicPawnBehavior::GetCurrentHealth ( )
{
	static UFunction* pFnGetCurrentHealth = NULL;

	if ( ! pFnGetCurrentHealth )
		pFnGetCurrentHealth = (UFunction*) UObject::GObjObjects()->Data[ 43478 ];

	UBioEpicPawnBehavior_execGetCurrentHealth_Parms GetCurrentHealth_Parms;

	this->ProcessEvent ( pFnGetCurrentHealth, &GetCurrentHealth_Parms, NULL );

	return GetCurrentHealth_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioEpicPawnBehavior::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 43476 ];

	UBioEpicPawnBehavior_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.SetCurrentHealth
// [0x00020002] 
// Parameters infos:
// float                          currentHealth                  ( CPF_Parm )

void UBioEpicPawnBehavior::SetCurrentHealth ( float currentHealth )
{
	static UFunction* pFnSetCurrentHealth = NULL;

	if ( ! pFnSetCurrentHealth )
		pFnSetCurrentHealth = (UFunction*) UObject::GObjObjects()->Data[ 43473 ];

	UBioEpicPawnBehavior_execSetCurrentHealth_Parms SetCurrentHealth_Parms;
	SetCurrentHealth_Parms.currentHealth = currentHealth;

	this->ProcessEvent ( pFnSetCurrentHealth, &SetCurrentHealth_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.GetMaxHealth
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioEpicPawnBehavior::GetMaxHealth ( )
{
	static UFunction* pFnGetMaxHealth = NULL;

	if ( ! pFnGetMaxHealth )
		pFnGetMaxHealth = (UFunction*) UObject::GObjObjects()->Data[ 43471 ];

	UBioEpicPawnBehavior_execGetMaxHealth_Parms GetMaxHealth_Parms;

	this->ProcessEvent ( pFnGetMaxHealth, &GetMaxHealth_Parms, NULL );

	return GetMaxHealth_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.UpdatePowersOnDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEpicPawnBehavior::UpdatePowersOnDeath ( )
{
	static UFunction* pFnUpdatePowersOnDeath = NULL;

	if ( ! pFnUpdatePowersOnDeath )
		pFnUpdatePowersOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 43470 ];

	UBioEpicPawnBehavior_execUpdatePowersOnDeath_Parms UpdatePowersOnDeath_Parms;

	pFnUpdatePowersOnDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePowersOnDeath, &UpdatePowersOnDeath_Parms, NULL );

	pFnUpdatePowersOnDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.FindPowerIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPowerName                    ( CPF_Parm )

int UBioEpicPawnBehavior::FindPowerIndex ( struct FName nmPowerName )
{
	static UFunction* pFnFindPowerIndex = NULL;

	if ( ! pFnFindPowerIndex )
		pFnFindPowerIndex = (UFunction*) UObject::GObjObjects()->Data[ 43467 ];

	UBioEpicPawnBehavior_execFindPowerIndex_Parms FindPowerIndex_Parms;
	memcpy ( &FindPowerIndex_Parms.nmPowerName, &nmPowerName, 0x8 );

	pFnFindPowerIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindPowerIndex, &FindPowerIndex_Parms, NULL );

	pFnFindPowerIndex->FunctionFlags |= 0x400;

	return FindPowerIndex_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.FindPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPower*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPowerName                    ( CPF_Parm )

class UBioPower* UBioEpicPawnBehavior::FindPower ( struct FName nmPowerName )
{
	static UFunction* pFnFindPower = NULL;

	if ( ! pFnFindPower )
		pFnFindPower = (UFunction*) UObject::GObjObjects()->Data[ 42976 ];

	UBioEpicPawnBehavior_execFindPower_Parms FindPower_Parms;
	memcpy ( &FindPower_Parms.nmPowerName, &nmPowerName, 0x8 );

	pFnFindPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindPower, &FindPower_Parms, NULL );

	pFnFindPower->FunctionFlags |= 0x400;

	return FindPower_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.ApplyRadialImpulse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLineOfSightOrigin             ( CPF_Parm )
// struct FVector                 vImpulseOrigin                 ( CPF_Parm )
// float                          fImpulseMagnitude              ( CPF_Parm )
// struct FName                   nmPhysicsBoneName              ( CPF_OptionalParm | CPF_Parm )

bool UBioEpicPawnBehavior::ApplyRadialImpulse ( struct FVector vLineOfSightOrigin, struct FVector vImpulseOrigin, float fImpulseMagnitude, struct FName nmPhysicsBoneName )
{
	static UFunction* pFnApplyRadialImpulse = NULL;

	if ( ! pFnApplyRadialImpulse )
		pFnApplyRadialImpulse = (UFunction*) UObject::GObjObjects()->Data[ 43460 ];

	UBioEpicPawnBehavior_execApplyRadialImpulse_Parms ApplyRadialImpulse_Parms;
	memcpy ( &ApplyRadialImpulse_Parms.vLineOfSightOrigin, &vLineOfSightOrigin, 0xC );
	memcpy ( &ApplyRadialImpulse_Parms.vImpulseOrigin, &vImpulseOrigin, 0xC );
	ApplyRadialImpulse_Parms.fImpulseMagnitude = fImpulseMagnitude;
	memcpy ( &ApplyRadialImpulse_Parms.nmPhysicsBoneName, &nmPhysicsBoneName, 0x8 );

	pFnApplyRadialImpulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyRadialImpulse, &ApplyRadialImpulse_Parms, NULL );

	pFnApplyRadialImpulse->FunctionFlags |= 0x400;

	return ApplyRadialImpulse_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.SetTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bLockOnTarget                  ( CPF_OptionalParm | CPF_Parm )

bool UBioEpicPawnBehavior::SetTarget ( class AActor* oTarget, unsigned long bLockOnTarget )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 43456 ];

	UBioEpicPawnBehavior_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.oTarget = oTarget;
	SetTarget_Parms.bLockOnTarget = bLockOnTarget;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;

	return SetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsLockedOnTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsLockedOnTarget ( )
{
	static UFunction* pFnIsLockedOnTarget = NULL;

	if ( ! pFnIsLockedOnTarget )
		pFnIsLockedOnTarget = (UFunction*) UObject::GObjObjects()->Data[ 43454 ];

	UBioEpicPawnBehavior_execIsLockedOnTarget_Parms IsLockedOnTarget_Parms;

	pFnIsLockedOnTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLockedOnTarget, &IsLockedOnTarget_Parms, NULL );

	pFnIsLockedOnTarget->FunctionFlags |= 0x400;

	return IsLockedOnTarget_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.LockOnTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioEpicPawnBehavior::LockOnTarget ( unsigned long B )
{
	static UFunction* pFnLockOnTarget = NULL;

	if ( ! pFnLockOnTarget )
		pFnLockOnTarget = (UFunction*) UObject::GObjObjects()->Data[ 43452 ];

	UBioEpicPawnBehavior_execLockOnTarget_Parms LockOnTarget_Parms;
	LockOnTarget_Parms.B = B;

	pFnLockOnTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLockOnTarget, &LockOnTarget_Parms, NULL );

	pFnLockOnTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioEpicPawnBehavior::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 43450 ];

	UBioEpicPawnBehavior_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.WriteSaveObject
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UBioBaseSaveObject*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 InOuter                        ( CPF_Parm )
// class UBioBaseSaveObject*      Save                           ( CPF_OptionalParm | CPF_Parm )

class UBioBaseSaveObject* UBioEpicPawnBehavior::eventWriteSaveObject ( class UObject* InOuter, class UBioBaseSaveObject* Save )
{
	static UFunction* pFnWriteSaveObject = NULL;

	if ( ! pFnWriteSaveObject )
		pFnWriteSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 43444 ];

	UBioEpicPawnBehavior_eventWriteSaveObject_Parms WriteSaveObject_Parms;
	WriteSaveObject_Parms.InOuter = InOuter;
	WriteSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnWriteSaveObject, &WriteSaveObject_Parms, NULL );

	return WriteSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsFriendlyFire
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             pInstigatorController          ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

bool UBioEpicPawnBehavior::eventIsFriendlyFire ( class AController* pInstigatorController, class UBioDamageType* pDamage )
{
	static UFunction* pFnIsFriendlyFire = NULL;

	if ( ! pFnIsFriendlyFire )
		pFnIsFriendlyFire = (UFunction*) UObject::GObjObjects()->Data[ 43437 ];

	UBioEpicPawnBehavior_eventIsFriendlyFire_Parms IsFriendlyFire_Parms;
	IsFriendlyFire_Parms.pInstigatorController = pInstigatorController;
	IsFriendlyFire_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnIsFriendlyFire, &IsFriendlyFire_Parms, NULL );

	return IsFriendlyFire_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.ReactToDeath
// [0x00024002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             pInstigatedBy                  ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioEpicPawnBehavior::ReactToDeath ( float fDamage, float fDeathDamage, class AController* pInstigatedBy, struct FVector vHitLocation, struct FVector vMomentum, class UClass* clsDamageType, struct FTraceHitInfo HitInfo, class UBioDamageType* pDamage )
{
	static UFunction* pFnReactToDeath = NULL;

	if ( ! pFnReactToDeath )
		pFnReactToDeath = (UFunction*) UObject::GObjObjects()->Data[ 43428 ];

	UBioEpicPawnBehavior_execReactToDeath_Parms ReactToDeath_Parms;
	ReactToDeath_Parms.fDamage = fDamage;
	ReactToDeath_Parms.fDeathDamage = fDeathDamage;
	ReactToDeath_Parms.pInstigatedBy = pInstigatedBy;
	memcpy ( &ReactToDeath_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ReactToDeath_Parms.vMomentum, &vMomentum, 0xC );
	ReactToDeath_Parms.clsDamageType = clsDamageType;
	memcpy ( &ReactToDeath_Parms.HitInfo, &HitInfo, 0x28 );
	ReactToDeath_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnReactToDeath, &ReactToDeath_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.IsHostile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InstigatedBy                   ( CPF_Parm )

bool UBioEpicPawnBehavior::IsHostile ( class AController* InstigatedBy )
{
	static UFunction* pFnIsHostile = NULL;

	if ( ! pFnIsHostile )
		pFnIsHostile = (UFunction*) UObject::GObjObjects()->Data[ 41629 ];

	UBioEpicPawnBehavior_execIsHostile_Parms IsHostile_Parms;
	IsHostile_Parms.InstigatedBy = InstigatedBy;

	pFnIsHostile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsHostile, &IsHostile_Parms, NULL );

	pFnIsHostile->FunctionFlags |= 0x400;

	return IsHostile_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsNeutral
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InstigatedBy                   ( CPF_Parm )

bool UBioEpicPawnBehavior::IsNeutral ( class AController* InstigatedBy )
{
	static UFunction* pFnIsNeutral = NULL;

	if ( ! pFnIsNeutral )
		pFnIsNeutral = (UFunction*) UObject::GObjObjects()->Data[ 43424 ];

	UBioEpicPawnBehavior_execIsNeutral_Parms IsNeutral_Parms;
	IsNeutral_Parms.InstigatedBy = InstigatedBy;

	pFnIsNeutral->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsNeutral, &IsNeutral_Parms, NULL );

	pFnIsNeutral->FunctionFlags |= 0x400;

	return IsNeutral_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsFriendly
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InstigatedBy                   ( CPF_Parm )

bool UBioEpicPawnBehavior::IsFriendly ( class AController* InstigatedBy )
{
	static UFunction* pFnIsFriendly = NULL;

	if ( ! pFnIsFriendly )
		pFnIsFriendly = (UFunction*) UObject::GObjObjects()->Data[ 43421 ];

	UBioEpicPawnBehavior_execIsFriendly_Parms IsFriendly_Parms;
	IsFriendly_Parms.InstigatedBy = InstigatedBy;

	pFnIsFriendly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFriendly, &IsFriendly_Parms, NULL );

	pFnIsFriendly->FunctionFlags |= 0x400;

	return IsFriendly_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.GetHealthAndShieldsCapacities
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            fHealth                        ( CPF_Parm | CPF_OutParm )
// int                            fShields                       ( CPF_Parm | CPF_OutParm )

void UBioEpicPawnBehavior::GetHealthAndShieldsCapacities ( int* fHealth, int* fShields )
{
	static UFunction* pFnGetHealthAndShieldsCapacities = NULL;

	if ( ! pFnGetHealthAndShieldsCapacities )
		pFnGetHealthAndShieldsCapacities = (UFunction*) UObject::GObjObjects()->Data[ 43418 ];

	UBioEpicPawnBehavior_execGetHealthAndShieldsCapacities_Parms GetHealthAndShieldsCapacities_Parms;

	pFnGetHealthAndShieldsCapacities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthAndShieldsCapacities, &GetHealthAndShieldsCapacities_Parms, NULL );

	pFnGetHealthAndShieldsCapacities->FunctionFlags |= 0x400;

	if ( fHealth )
		*fHealth = GetHealthAndShieldsCapacities_Parms.fHealth;

	if ( fShields )
		*fShields = GetHealthAndShieldsCapacities_Parms.fShields;
};

// Function SFXGame.BioEpicPawnBehavior.GetHealthAndShieldsScaledToInt
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            fHealth                        ( CPF_Parm | CPF_OutParm )
// int                            fShields                       ( CPF_Parm | CPF_OutParm )

void UBioEpicPawnBehavior::GetHealthAndShieldsScaledToInt ( int* fHealth, int* fShields )
{
	static UFunction* pFnGetHealthAndShieldsScaledToInt = NULL;

	if ( ! pFnGetHealthAndShieldsScaledToInt )
		pFnGetHealthAndShieldsScaledToInt = (UFunction*) UObject::GObjObjects()->Data[ 43415 ];

	UBioEpicPawnBehavior_execGetHealthAndShieldsScaledToInt_Parms GetHealthAndShieldsScaledToInt_Parms;

	pFnGetHealthAndShieldsScaledToInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthAndShieldsScaledToInt, &GetHealthAndShieldsScaledToInt_Parms, NULL );

	pFnGetHealthAndShieldsScaledToInt->FunctionFlags |= 0x400;

	if ( fHealth )
		*fHealth = GetHealthAndShieldsScaledToInt_Parms.fHealth;

	if ( fShields )
		*fShields = GetHealthAndShieldsScaledToInt_Parms.fShields;
};

// Function SFXGame.BioEpicPawnBehavior.GetHealthAndShieldsScaled
// [0x00420002] 
// Parameters infos:
// float                          fHealth                        ( CPF_Parm | CPF_OutParm )
// float                          fShields                       ( CPF_Parm | CPF_OutParm )

void UBioEpicPawnBehavior::GetHealthAndShieldsScaled ( float* fHealth, float* fShields )
{
	static UFunction* pFnGetHealthAndShieldsScaled = NULL;

	if ( ! pFnGetHealthAndShieldsScaled )
		pFnGetHealthAndShieldsScaled = (UFunction*) UObject::GObjObjects()->Data[ 43412 ];

	UBioEpicPawnBehavior_execGetHealthAndShieldsScaled_Parms GetHealthAndShieldsScaled_Parms;

	this->ProcessEvent ( pFnGetHealthAndShieldsScaled, &GetHealthAndShieldsScaled_Parms, NULL );

	if ( fHealth )
		*fHealth = GetHealthAndShieldsScaled_Parms.fHealth;

	if ( fShields )
		*fShields = GetHealthAndShieldsScaled_Parms.fShields;
};

// Function SFXGame.BioEpicPawnBehavior.ClearAllActionsOnPawn
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sClearLabel                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UBioEpicPawnBehavior::eventClearAllActionsOnPawn ( struct FString sClearLabel )
{
	static UFunction* pFnClearAllActionsOnPawn = NULL;

	if ( ! pFnClearAllActionsOnPawn )
		pFnClearAllActionsOnPawn = (UFunction*) UObject::GObjObjects()->Data[ 43406 ];

	UBioEpicPawnBehavior_eventClearAllActionsOnPawn_Parms ClearAllActionsOnPawn_Parms;
	memcpy ( &ClearAllActionsOnPawn_Parms.sClearLabel, &sClearLabel, 0x10 );

	this->ProcessEvent ( pFnClearAllActionsOnPawn, &ClearAllActionsOnPawn_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehavior.GetDoorProximityRefCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioEpicPawnBehavior::GetDoorProximityRefCount ( )
{
	static UFunction* pFnGetDoorProximityRefCount = NULL;

	if ( ! pFnGetDoorProximityRefCount )
		pFnGetDoorProximityRefCount = (UFunction*) UObject::GObjObjects()->Data[ 43404 ];

	UBioEpicPawnBehavior_execGetDoorProximityRefCount_Parms GetDoorProximityRefCount_Parms;

	pFnGetDoorProximityRefCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDoorProximityRefCount, &GetDoorProximityRefCount_Parms, NULL );

	pFnGetDoorProximityRefCount->FunctionFlags |= 0x400;

	return GetDoorProximityRefCount_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.ModifyDoorProximityRefCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bIncrement                     ( CPF_Parm )

void UBioEpicPawnBehavior::ModifyDoorProximityRefCount ( unsigned long bIncrement )
{
	static UFunction* pFnModifyDoorProximityRefCount = NULL;

	if ( ! pFnModifyDoorProximityRefCount )
		pFnModifyDoorProximityRefCount = (UFunction*) UObject::GObjObjects()->Data[ 43402 ];

	UBioEpicPawnBehavior_execModifyDoorProximityRefCount_Parms ModifyDoorProximityRefCount_Parms;
	ModifyDoorProximityRefCount_Parms.bIncrement = bIncrement;

	pFnModifyDoorProximityRefCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyDoorProximityRefCount, &ModifyDoorProximityRefCount_Parms, NULL );

	pFnModifyDoorProximityRefCount->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.IsCombatSelectable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )

bool UBioEpicPawnBehavior::IsCombatSelectable ( class ABioPlayerController* pPlayerController )
{
	static UFunction* pFnIsCombatSelectable = NULL;

	if ( ! pFnIsCombatSelectable )
		pFnIsCombatSelectable = (UFunction*) UObject::GObjObjects()->Data[ 43399 ];

	UBioEpicPawnBehavior_execIsCombatSelectable_Parms IsCombatSelectable_Parms;
	IsCombatSelectable_Parms.pPlayerController = pPlayerController;

	pFnIsCombatSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCombatSelectable, &IsCombatSelectable_Parms, NULL );

	pFnIsCombatSelectable->FunctionFlags |= 0x400;

	return IsCombatSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsExploreSelectable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )

bool UBioEpicPawnBehavior::IsExploreSelectable ( class ABioPlayerController* pPlayerController )
{
	static UFunction* pFnIsExploreSelectable = NULL;

	if ( ! pFnIsExploreSelectable )
		pFnIsExploreSelectable = (UFunction*) UObject::GObjObjects()->Data[ 43396 ];

	UBioEpicPawnBehavior_execIsExploreSelectable_Parms IsExploreSelectable_Parms;
	IsExploreSelectable_Parms.pPlayerController = pPlayerController;

	pFnIsExploreSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsExploreSelectable, &IsExploreSelectable_Parms, NULL );

	pFnIsExploreSelectable->FunctionFlags |= 0x400;

	return IsExploreSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.ProxyCacheGetMuzzleToTargetDirection
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class ABioWeaponRanged*        Weapon                         ( CPF_Parm )
// struct FRotator                Direction                      ( CPF_Parm | CPF_OutParm )

void UBioEpicPawnBehavior::ProxyCacheGetMuzzleToTargetDirection ( class ABioWeaponRanged* Weapon, struct FRotator* Direction )
{
	static UFunction* pFnProxyCacheGetMuzzleToTargetDirection = NULL;

	if ( ! pFnProxyCacheGetMuzzleToTargetDirection )
		pFnProxyCacheGetMuzzleToTargetDirection = (UFunction*) UObject::GObjObjects()->Data[ 43393 ];

	UBioEpicPawnBehavior_execProxyCacheGetMuzzleToTargetDirection_Parms ProxyCacheGetMuzzleToTargetDirection_Parms;
	ProxyCacheGetMuzzleToTargetDirection_Parms.Weapon = Weapon;

	pFnProxyCacheGetMuzzleToTargetDirection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProxyCacheGetMuzzleToTargetDirection, &ProxyCacheGetMuzzleToTargetDirection_Parms, NULL );

	pFnProxyCacheGetMuzzleToTargetDirection->FunctionFlags |= 0x400;

	if ( Direction )
		memcpy ( Direction, &ProxyCacheGetMuzzleToTargetDirection_Parms.Direction, 0xC );
};

// Function SFXGame.BioEpicPawnBehavior.ProxyCacheGetWeaponTargetPoint
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class ABioWeaponRanged*        Weapon                         ( CPF_Parm )
// struct FVector                 TargetPoint                    ( CPF_Parm | CPF_OutParm )

void UBioEpicPawnBehavior::ProxyCacheGetWeaponTargetPoint ( class ABioWeaponRanged* Weapon, struct FVector* TargetPoint )
{
	static UFunction* pFnProxyCacheGetWeaponTargetPoint = NULL;

	if ( ! pFnProxyCacheGetWeaponTargetPoint )
		pFnProxyCacheGetWeaponTargetPoint = (UFunction*) UObject::GObjObjects()->Data[ 43390 ];

	UBioEpicPawnBehavior_execProxyCacheGetWeaponTargetPoint_Parms ProxyCacheGetWeaponTargetPoint_Parms;
	ProxyCacheGetWeaponTargetPoint_Parms.Weapon = Weapon;

	pFnProxyCacheGetWeaponTargetPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProxyCacheGetWeaponTargetPoint, &ProxyCacheGetWeaponTargetPoint_Parms, NULL );

	pFnProxyCacheGetWeaponTargetPoint->FunctionFlags |= 0x400;

	if ( TargetPoint )
		memcpy ( TargetPoint, &ProxyCacheGetWeaponTargetPoint_Parms.TargetPoint, 0xC );
};

// Function SFXGame.BioEpicPawnBehavior.OnTargetInvalidated
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  CurrentSelection               ( CPF_Parm )

void UBioEpicPawnBehavior::OnTargetInvalidated ( class AActor* CurrentSelection )
{
	static UFunction* pFnOnTargetInvalidated = NULL;

	if ( ! pFnOnTargetInvalidated )
		pFnOnTargetInvalidated = (UFunction*) UObject::GObjObjects()->Data[ 43388 ];

	UBioEpicPawnBehavior_execOnTargetInvalidated_Parms OnTargetInvalidated_Parms;
	OnTargetInvalidated_Parms.CurrentSelection = CurrentSelection;

	pFnOnTargetInvalidated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTargetInvalidated, &OnTargetInvalidated_Parms, NULL );

	pFnOnTargetInvalidated->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.OnNewPlayerPawnSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Selection                      ( CPF_Parm )
// class UBioPlayerSelection*     pPlayerSelection               ( CPF_Parm )

bool UBioEpicPawnBehavior::OnNewPlayerPawnSelection ( class AActor* Selection, class UBioPlayerSelection* pPlayerSelection )
{
	static UFunction* pFnOnNewPlayerPawnSelection = NULL;

	if ( ! pFnOnNewPlayerPawnSelection )
		pFnOnNewPlayerPawnSelection = (UFunction*) UObject::GObjObjects()->Data[ 43384 ];

	UBioEpicPawnBehavior_execOnNewPlayerPawnSelection_Parms OnNewPlayerPawnSelection_Parms;
	OnNewPlayerPawnSelection_Parms.Selection = Selection;
	OnNewPlayerPawnSelection_Parms.pPlayerSelection = pPlayerSelection;

	pFnOnNewPlayerPawnSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnNewPlayerPawnSelection, &OnNewPlayerPawnSelection_Parms, NULL );

	pFnOnNewPlayerPawnSelection->FunctionFlags |= 0x400;

	return OnNewPlayerPawnSelection_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.SetPreviousActionState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioEpicPawnBehavior::SetPreviousActionState ( )
{
	static UFunction* pFnSetPreviousActionState = NULL;

	if ( ! pFnSetPreviousActionState )
		pFnSetPreviousActionState = (UFunction*) UObject::GObjObjects()->Data[ 43382 ];

	UBioEpicPawnBehavior_execSetPreviousActionState_Parms SetPreviousActionState_Parms;

	pFnSetPreviousActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviousActionState, &SetPreviousActionState_Parms, NULL );

	pFnSetPreviousActionState->FunctionFlags |= 0x400;

	return SetPreviousActionState_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.SetActionState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eState                         ( CPF_Parm )
// float                          fDelay                         ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioEpicPawnBehavior::SetActionState ( unsigned char eState, float fDelay )
{
	static UFunction* pFnSetActionState = NULL;

	if ( ! pFnSetActionState )
		pFnSetActionState = (UFunction*) UObject::GObjObjects()->Data[ 43378 ];

	UBioEpicPawnBehavior_execSetActionState_Parms SetActionState_Parms;
	SetActionState_Parms.eState = eState;
	SetActionState_Parms.fDelay = fDelay;

	pFnSetActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActionState, &SetActionState_Parms, NULL );

	pFnSetActionState->FunctionFlags |= 0x400;

	return SetActionState_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.TickPowers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioEpicPawnBehavior::TickPowers ( float DeltaTime )
{
	static UFunction* pFnTickPowers = NULL;

	if ( ! pFnTickPowers )
		pFnTickPowers = (UFunction*) UObject::GObjObjects()->Data[ 43376 ];

	UBioEpicPawnBehavior_execTickPowers_Parms TickPowers_Parms;
	TickPowers_Parms.DeltaTime = DeltaTime;

	pFnTickPowers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickPowers, &TickPowers_Parms, NULL );

	pFnTickPowers->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.ClearCurrentPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEpicPawnBehavior::ClearCurrentPower ( )
{
	static UFunction* pFnClearCurrentPower = NULL;

	if ( ! pFnClearCurrentPower )
		pFnClearCurrentPower = (UFunction*) UObject::GObjObjects()->Data[ 43375 ];

	UBioEpicPawnBehavior_execClearCurrentPower_Parms ClearCurrentPower_Parms;

	pFnClearCurrentPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearCurrentPower, &ClearCurrentPower_Parms, NULL );

	pFnClearCurrentPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.SetCurrentPower
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPower                        ( CPF_Parm )
// float                          fCooldownRemaining             ( CPF_Parm | CPF_OutParm )

bool UBioEpicPawnBehavior::SetCurrentPower ( struct FName nmPower, float* fCooldownRemaining )
{
	static UFunction* pFnSetCurrentPower = NULL;

	if ( ! pFnSetCurrentPower )
		pFnSetCurrentPower = (UFunction*) UObject::GObjObjects()->Data[ 43371 ];

	UBioEpicPawnBehavior_execSetCurrentPower_Parms SetCurrentPower_Parms;
	memcpy ( &SetCurrentPower_Parms.nmPower, &nmPower, 0x8 );

	pFnSetCurrentPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCurrentPower, &SetCurrentPower_Parms, NULL );

	pFnSetCurrentPower->FunctionFlags |= 0x400;

	if ( fCooldownRemaining )
		*fCooldownRemaining = SetCurrentPower_Parms.fCooldownRemaining;

	return SetCurrentPower_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.AppendPawnCapabilitiesToList
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nCapType                       ( CPF_Parm )
// struct TArray<class UBioCapability*> oOutCaps                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioEpicPawnBehavior::AppendPawnCapabilitiesToList ( unsigned char nCapType, struct TArray<class UBioCapability*>* oOutCaps )
{
	static UFunction* pFnAppendPawnCapabilitiesToList = NULL;

	if ( ! pFnAppendPawnCapabilitiesToList )
		pFnAppendPawnCapabilitiesToList = (UFunction*) UObject::GObjObjects()->Data[ 43367 ];

	UBioEpicPawnBehavior_execAppendPawnCapabilitiesToList_Parms AppendPawnCapabilitiesToList_Parms;
	AppendPawnCapabilitiesToList_Parms.nCapType = nCapType;

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppendPawnCapabilitiesToList, &AppendPawnCapabilitiesToList_Parms, NULL );

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= 0x400;

	if ( oOutCaps )
		memcpy ( oOutCaps, &AppendPawnCapabilitiesToList_Parms.oOutCaps, 0x10 );
};

// Function SFXGame.BioEpicPawnBehavior.RecomputeCapabilities
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEpicPawnBehavior::RecomputeCapabilities ( )
{
	static UFunction* pFnRecomputeCapabilities = NULL;

	if ( ! pFnRecomputeCapabilities )
		pFnRecomputeCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 43366 ];

	UBioEpicPawnBehavior_execRecomputeCapabilities_Parms RecomputeCapabilities_Parms;

	pFnRecomputeCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecomputeCapabilities, &RecomputeCapabilities_Parms, NULL );

	pFnRecomputeCapabilities->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledCombatTransition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledCombatTransition ( )
{
	static UFunction* pFnIsAbilityEnabledCombatTransition = NULL;

	if ( ! pFnIsAbilityEnabledCombatTransition )
		pFnIsAbilityEnabledCombatTransition = (UFunction*) UObject::GObjObjects()->Data[ 43364 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledCombatTransition_Parms IsAbilityEnabledCombatTransition_Parms;

	pFnIsAbilityEnabledCombatTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledCombatTransition, &IsAbilityEnabledCombatTransition_Parms, NULL );

	pFnIsAbilityEnabledCombatTransition->FunctionFlags |= 0x400;

	return IsAbilityEnabledCombatTransition_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledPowers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledPowers ( )
{
	static UFunction* pFnIsAbilityEnabledPowers = NULL;

	if ( ! pFnIsAbilityEnabledPowers )
		pFnIsAbilityEnabledPowers = (UFunction*) UObject::GObjObjects()->Data[ 43362 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledPowers_Parms IsAbilityEnabledPowers_Parms;

	pFnIsAbilityEnabledPowers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledPowers, &IsAbilityEnabledPowers_Parms, NULL );

	pFnIsAbilityEnabledPowers->FunctionFlags |= 0x400;

	return IsAbilityEnabledPowers_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledGrenades
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledGrenades ( )
{
	static UFunction* pFnIsAbilityEnabledGrenades = NULL;

	if ( ! pFnIsAbilityEnabledGrenades )
		pFnIsAbilityEnabledGrenades = (UFunction*) UObject::GObjObjects()->Data[ 43360 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledGrenades_Parms IsAbilityEnabledGrenades_Parms;

	pFnIsAbilityEnabledGrenades->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledGrenades, &IsAbilityEnabledGrenades_Parms, NULL );

	pFnIsAbilityEnabledGrenades->FunctionFlags |= 0x400;

	return IsAbilityEnabledGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledWeapons ( )
{
	static UFunction* pFnIsAbilityEnabledWeapons = NULL;

	if ( ! pFnIsAbilityEnabledWeapons )
		pFnIsAbilityEnabledWeapons = (UFunction*) UObject::GObjObjects()->Data[ 43358 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledWeapons_Parms IsAbilityEnabledWeapons_Parms;

	pFnIsAbilityEnabledWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledWeapons, &IsAbilityEnabledWeapons_Parms, NULL );

	pFnIsAbilityEnabledWeapons->FunctionFlags |= 0x400;

	return IsAbilityEnabledWeapons_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledStack ( )
{
	static UFunction* pFnIsAbilityEnabledStack = NULL;

	if ( ! pFnIsAbilityEnabledStack )
		pFnIsAbilityEnabledStack = (UFunction*) UObject::GObjObjects()->Data[ 43356 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledStack_Parms IsAbilityEnabledStack_Parms;

	pFnIsAbilityEnabledStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledStack, &IsAbilityEnabledStack_Parms, NULL );

	pFnIsAbilityEnabledStack->FunctionFlags |= 0x400;

	return IsAbilityEnabledStack_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledQueue ( )
{
	static UFunction* pFnIsAbilityEnabledQueue = NULL;

	if ( ! pFnIsAbilityEnabledQueue )
		pFnIsAbilityEnabledQueue = (UFunction*) UObject::GObjObjects()->Data[ 43354 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledQueue_Parms IsAbilityEnabledQueue_Parms;

	pFnIsAbilityEnabledQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledQueue, &IsAbilityEnabledQueue_Parms, NULL );

	pFnIsAbilityEnabledQueue->FunctionFlags |= 0x400;

	return IsAbilityEnabledQueue_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabledAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsAbilityEnabledAll ( )
{
	static UFunction* pFnIsAbilityEnabledAll = NULL;

	if ( ! pFnIsAbilityEnabledAll )
		pFnIsAbilityEnabledAll = (UFunction*) UObject::GObjObjects()->Data[ 43352 ];

	UBioEpicPawnBehavior_execIsAbilityEnabledAll_Parms IsAbilityEnabledAll_Parms;

	pFnIsAbilityEnabledAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabledAll, &IsAbilityEnabledAll_Parms, NULL );

	pFnIsAbilityEnabledAll->FunctionFlags |= 0x400;

	return IsAbilityEnabledAll_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.DoDisabledEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void UBioEpicPawnBehavior::DoDisabledEvent ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnDoDisabledEvent = NULL;

	if ( ! pFnDoDisabledEvent )
		pFnDoDisabledEvent = (UFunction*) UObject::GObjObjects()->Data[ 43349 ];

	UBioEpicPawnBehavior_execDoDisabledEvent_Parms DoDisabledEvent_Parms;
	DoDisabledEvent_Parms.eEnableType = eEnableType;
	memcpy ( &DoDisabledEvent_Parms.nmSubType, &nmSubType, 0x8 );

	pFnDoDisabledEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoDisabledEvent, &DoDisabledEvent_Parms, NULL );

	pFnDoDisabledEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.DoEnabledEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void UBioEpicPawnBehavior::DoEnabledEvent ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnDoEnabledEvent = NULL;

	if ( ! pFnDoEnabledEvent )
		pFnDoEnabledEvent = (UFunction*) UObject::GObjObjects()->Data[ 43346 ];

	UBioEpicPawnBehavior_execDoEnabledEvent_Parms DoEnabledEvent_Parms;
	DoEnabledEvent_Parms.eEnableType = eEnableType;
	memcpy ( &DoEnabledEvent_Parms.nmSubType, &nmSubType, 0x8 );

	pFnDoEnabledEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoEnabledEvent, &DoEnabledEvent_Parms, NULL );

	pFnDoEnabledEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabled_Power
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

bool UBioEpicPawnBehavior::IsAbilityEnabled_Power ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnIsAbilityEnabled_Power = NULL;

	if ( ! pFnIsAbilityEnabled_Power )
		pFnIsAbilityEnabled_Power = (UFunction*) UObject::GObjObjects()->Data[ 43342 ];

	UBioEpicPawnBehavior_execIsAbilityEnabled_Power_Parms IsAbilityEnabled_Power_Parms;
	IsAbilityEnabled_Power_Parms.eEnableType = eEnableType;
	memcpy ( &IsAbilityEnabled_Power_Parms.nmSubType, &nmSubType, 0x8 );

	pFnIsAbilityEnabled_Power->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabled_Power, &IsAbilityEnabled_Power_Parms, NULL );

	pFnIsAbilityEnabled_Power->FunctionFlags |= 0x400;

	return IsAbilityEnabled_Power_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.AbilityEnable_Power
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnable                        ( CPF_Parm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

int UBioEpicPawnBehavior::AbilityEnable_Power ( unsigned long bEnable, unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnAbilityEnable_Power = NULL;

	if ( ! pFnAbilityEnable_Power )
		pFnAbilityEnable_Power = (UFunction*) UObject::GObjObjects()->Data[ 43337 ];

	UBioEpicPawnBehavior_execAbilityEnable_Power_Parms AbilityEnable_Power_Parms;
	AbilityEnable_Power_Parms.bEnable = bEnable;
	AbilityEnable_Power_Parms.eEnableType = eEnableType;
	memcpy ( &AbilityEnable_Power_Parms.nmSubType, &nmSubType, 0x8 );

	pFnAbilityEnable_Power->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAbilityEnable_Power, &AbilityEnable_Power_Parms, NULL );

	pFnAbilityEnable_Power->FunctionFlags |= 0x400;

	return AbilityEnable_Power_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabled_Offense
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

bool UBioEpicPawnBehavior::IsAbilityEnabled_Offense ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnIsAbilityEnabled_Offense = NULL;

	if ( ! pFnIsAbilityEnabled_Offense )
		pFnIsAbilityEnabled_Offense = (UFunction*) UObject::GObjObjects()->Data[ 43333 ];

	UBioEpicPawnBehavior_execIsAbilityEnabled_Offense_Parms IsAbilityEnabled_Offense_Parms;
	IsAbilityEnabled_Offense_Parms.eEnableType = eEnableType;
	memcpy ( &IsAbilityEnabled_Offense_Parms.nmSubType, &nmSubType, 0x8 );

	pFnIsAbilityEnabled_Offense->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabled_Offense, &IsAbilityEnabled_Offense_Parms, NULL );

	pFnIsAbilityEnabled_Offense->FunctionFlags |= 0x400;

	return IsAbilityEnabled_Offense_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.AbilityEnable_Offense
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnable                        ( CPF_Parm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

int UBioEpicPawnBehavior::AbilityEnable_Offense ( unsigned long bEnable, unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnAbilityEnable_Offense = NULL;

	if ( ! pFnAbilityEnable_Offense )
		pFnAbilityEnable_Offense = (UFunction*) UObject::GObjObjects()->Data[ 43328 ];

	UBioEpicPawnBehavior_execAbilityEnable_Offense_Parms AbilityEnable_Offense_Parms;
	AbilityEnable_Offense_Parms.bEnable = bEnable;
	AbilityEnable_Offense_Parms.eEnableType = eEnableType;
	memcpy ( &AbilityEnable_Offense_Parms.nmSubType, &nmSubType, 0x8 );

	pFnAbilityEnable_Offense->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAbilityEnable_Offense, &AbilityEnable_Offense_Parms, NULL );

	pFnAbilityEnable_Offense->FunctionFlags |= 0x400;

	return AbilityEnable_Offense_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsAbilityEnabled_AI
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

bool UBioEpicPawnBehavior::IsAbilityEnabled_AI ( unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnIsAbilityEnabled_AI = NULL;

	if ( ! pFnIsAbilityEnabled_AI )
		pFnIsAbilityEnabled_AI = (UFunction*) UObject::GObjObjects()->Data[ 43324 ];

	UBioEpicPawnBehavior_execIsAbilityEnabled_AI_Parms IsAbilityEnabled_AI_Parms;
	IsAbilityEnabled_AI_Parms.eEnableType = eEnableType;
	memcpy ( &IsAbilityEnabled_AI_Parms.nmSubType, &nmSubType, 0x8 );

	pFnIsAbilityEnabled_AI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbilityEnabled_AI, &IsAbilityEnabled_AI_Parms, NULL );

	pFnIsAbilityEnabled_AI->FunctionFlags |= 0x400;

	return IsAbilityEnabled_AI_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.AbilityEnable_AI
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnable                        ( CPF_Parm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

int UBioEpicPawnBehavior::AbilityEnable_AI ( unsigned long bEnable, unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnAbilityEnable_AI = NULL;

	if ( ! pFnAbilityEnable_AI )
		pFnAbilityEnable_AI = (UFunction*) UObject::GObjObjects()->Data[ 43319 ];

	UBioEpicPawnBehavior_execAbilityEnable_AI_Parms AbilityEnable_AI_Parms;
	AbilityEnable_AI_Parms.bEnable = bEnable;
	AbilityEnable_AI_Parms.eEnableType = eEnableType;
	memcpy ( &AbilityEnable_AI_Parms.nmSubType, &nmSubType, 0x8 );

	pFnAbilityEnable_AI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAbilityEnable_AI, &AbilityEnable_AI_Parms, NULL );

	pFnAbilityEnable_AI->FunctionFlags |= 0x400;

	return AbilityEnable_AI_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.OnWeaponInstantFire
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioWeaponRanged*        oFiredWeapon                   ( CPF_OptionalParm | CPF_Parm )

void UBioEpicPawnBehavior::OnWeaponInstantFire ( class ABioWeaponRanged* oFiredWeapon )
{
	static UFunction* pFnOnWeaponInstantFire = NULL;

	if ( ! pFnOnWeaponInstantFire )
		pFnOnWeaponInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 43317 ];

	UBioEpicPawnBehavior_execOnWeaponInstantFire_Parms OnWeaponInstantFire_Parms;
	OnWeaponInstantFire_Parms.oFiredWeapon = oFiredWeapon;

	pFnOnWeaponInstantFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnWeaponInstantFire, &OnWeaponInstantFire_Parms, NULL );

	pFnOnWeaponInstantFire->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.InitializeActionFramework
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioEpicPawnBehavior::InitializeActionFramework ( )
{
	static UFunction* pFnInitializeActionFramework = NULL;

	if ( ! pFnInitializeActionFramework )
		pFnInitializeActionFramework = (UFunction*) UObject::GObjObjects()->Data[ 43316 ];

	UBioEpicPawnBehavior_execInitializeActionFramework_Parms InitializeActionFramework_Parms;

	pFnInitializeActionFramework->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeActionFramework, &InitializeActionFramework_Parms, NULL );

	pFnInitializeActionFramework->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.TickBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioEpicPawnBehavior::TickBehavior ( float DeltaTime )
{
	static UFunction* pFnTickBehavior = NULL;

	if ( ! pFnTickBehavior )
		pFnTickBehavior = (UFunction*) UObject::GObjObjects()->Data[ 43314 ];

	UBioEpicPawnBehavior_execTickBehavior_Parms TickBehavior_Parms;
	TickBehavior_Parms.DeltaTime = DeltaTime;

	pFnTickBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickBehavior, &TickBehavior_Parms, NULL );

	pFnTickBehavior->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEpicPawnBehavior.GetTargetZoneCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioEpicPawnBehavior::GetTargetZoneCount ( )
{
	static UFunction* pFnGetTargetZoneCount = NULL;

	if ( ! pFnGetTargetZoneCount )
		pFnGetTargetZoneCount = (UFunction*) UObject::GObjObjects()->Data[ 43312 ];

	UBioEpicPawnBehavior_execGetTargetZoneCount_Parms GetTargetZoneCount_Parms;

	pFnGetTargetZoneCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneCount, &GetTargetZoneCount_Parms, NULL );

	pFnGetTargetZoneCount->FunctionFlags |= 0x400;

	return GetTargetZoneCount_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.GetTargetZoneNameN
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FName                   nmTargetZone                   ( CPF_Parm | CPF_OutParm )

bool UBioEpicPawnBehavior::GetTargetZoneNameN ( int nIndex, struct FName* nmTargetZone )
{
	static UFunction* pFnGetTargetZoneNameN = NULL;

	if ( ! pFnGetTargetZoneNameN )
		pFnGetTargetZoneNameN = (UFunction*) UObject::GObjObjects()->Data[ 43308 ];

	UBioEpicPawnBehavior_execGetTargetZoneNameN_Parms GetTargetZoneNameN_Parms;
	GetTargetZoneNameN_Parms.nIndex = nIndex;

	pFnGetTargetZoneNameN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneNameN, &GetTargetZoneNameN_Parms, NULL );

	pFnGetTargetZoneNameN->FunctionFlags |= 0x400;

	if ( nmTargetZone )
		memcpy ( nmTargetZone, &GetTargetZoneNameN_Parms.nmTargetZone, 0x8 );

	return GetTargetZoneNameN_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.GetTargetZoneLocationN
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )

bool UBioEpicPawnBehavior::GetTargetZoneLocationN ( int nIndex, struct FVector* vLocation )
{
	static UFunction* pFnGetTargetZoneLocationN = NULL;

	if ( ! pFnGetTargetZoneLocationN )
		pFnGetTargetZoneLocationN = (UFunction*) UObject::GObjObjects()->Data[ 43304 ];

	UBioEpicPawnBehavior_execGetTargetZoneLocationN_Parms GetTargetZoneLocationN_Parms;
	GetTargetZoneLocationN_Parms.nIndex = nIndex;

	pFnGetTargetZoneLocationN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocationN, &GetTargetZoneLocationN_Parms, NULL );

	pFnGetTargetZoneLocationN->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetTargetZoneLocationN_Parms.vLocation, 0xC );

	return GetTargetZoneLocationN_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.IsTargetZoneEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEpicPawnBehavior::IsTargetZoneEnabled ( )
{
	static UFunction* pFnIsTargetZoneEnabled = NULL;

	if ( ! pFnIsTargetZoneEnabled )
		pFnIsTargetZoneEnabled = (UFunction*) UObject::GObjObjects()->Data[ 43302 ];

	UBioEpicPawnBehavior_execIsTargetZoneEnabled_Parms IsTargetZoneEnabled_Parms;

	pFnIsTargetZoneEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTargetZoneEnabled, &IsTargetZoneEnabled_Parms, NULL );

	pFnIsTargetZoneEnabled->FunctionFlags |= 0x400;

	return IsTargetZoneEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.GetTargetZoneLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UBioEpicPawnBehavior::GetTargetZoneLocation ( )
{
	static UFunction* pFnGetTargetZoneLocation = NULL;

	if ( ! pFnGetTargetZoneLocation )
		pFnGetTargetZoneLocation = (UFunction*) UObject::GObjObjects()->Data[ 43300 ];

	UBioEpicPawnBehavior_execGetTargetZoneLocation_Parms GetTargetZoneLocation_Parms;

	pFnGetTargetZoneLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetZoneLocation, &GetTargetZoneLocation_Parms, NULL );

	pFnGetTargetZoneLocation->FunctionFlags |= 0x400;

	return GetTargetZoneLocation_Parms.ReturnValue;
};

// Function SFXGame.BioEpicPawnBehavior.CanSeeTarget
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 vSourceLocation                ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTraverseList                  ( CPF_OptionalParm | CPF_Parm )
// int                            nOptLevel                      ( CPF_OptionalParm | CPF_Parm )

struct FName UBioEpicPawnBehavior::CanSeeTarget ( float fDeltaTime, struct FVector vSourceLocation, class AActor* oTarget, unsigned long bTraverseList, int nOptLevel )
{
	static UFunction* pFnCanSeeTarget = NULL;

	if ( ! pFnCanSeeTarget )
		pFnCanSeeTarget = (UFunction*) UObject::GObjObjects()->Data[ 43293 ];

	UBioEpicPawnBehavior_execCanSeeTarget_Parms CanSeeTarget_Parms;
	CanSeeTarget_Parms.fDeltaTime = fDeltaTime;
	memcpy ( &CanSeeTarget_Parms.vSourceLocation, &vSourceLocation, 0xC );
	CanSeeTarget_Parms.oTarget = oTarget;
	CanSeeTarget_Parms.bTraverseList = bTraverseList;
	CanSeeTarget_Parms.nOptLevel = nOptLevel;

	pFnCanSeeTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanSeeTarget, &CanSeeTarget_Parms, NULL );

	pFnCanSeeTarget->FunctionFlags |= 0x400;

	return CanSeeTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetPlayerMeleeTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          MeleeTime                      ( CPF_Parm )

void UBioPawnBehavior::SetPlayerMeleeTime ( float MeleeTime )
{
	static UFunction* pFnSetPlayerMeleeTime = NULL;

	if ( ! pFnSetPlayerMeleeTime )
		pFnSetPlayerMeleeTime = (UFunction*) UObject::GObjObjects()->Data[ 45411 ];

	UBioPawnBehavior_execSetPlayerMeleeTime_Parms SetPlayerMeleeTime_Parms;
	SetPlayerMeleeTime_Parms.MeleeTime = MeleeTime;

	pFnSetPlayerMeleeTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPlayerMeleeTime, &SetPlayerMeleeTime_Parms, NULL );

	pFnSetPlayerMeleeTime->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.GetPlayerMeleeTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetPlayerMeleeTime ( )
{
	static UFunction* pFnGetPlayerMeleeTime = NULL;

	if ( ! pFnGetPlayerMeleeTime )
		pFnGetPlayerMeleeTime = (UFunction*) UObject::GObjObjects()->Data[ 45410 ];

	UBioPawnBehavior_execGetPlayerMeleeTime_Parms GetPlayerMeleeTime_Parms;

	pFnGetPlayerMeleeTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerMeleeTime, &GetPlayerMeleeTime_Parms, NULL );

	pFnGetPlayerMeleeTime->FunctionFlags |= 0x400;

	return GetPlayerMeleeTime_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CancelActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActive*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioActive* UBioPawnBehavior::CancelActive ( )
{
	static UFunction* pFnCancelActive = NULL;

	if ( ! pFnCancelActive )
		pFnCancelActive = (UFunction*) UObject::GObjObjects()->Data[ 43788 ];

	UBioPawnBehavior_execCancelActive_Parms CancelActive_Parms;

	pFnCancelActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelActive, &CancelActive_Parms, NULL );

	pFnCancelActive->FunctionFlags |= 0x400;

	return CancelActive_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.IsBleedingOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::IsBleedingOut ( )
{
	static UFunction* pFnIsBleedingOut = NULL;

	if ( ! pFnIsBleedingOut )
		pFnIsBleedingOut = (UFunction*) UObject::GObjObjects()->Data[ 45670 ];

	UBioPawnBehavior_execIsBleedingOut_Parms IsBleedingOut_Parms;

	pFnIsBleedingOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBleedingOut, &IsBleedingOut_Parms, NULL );

	pFnIsBleedingOut->FunctionFlags |= 0x400;

	return IsBleedingOut_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.IsBleedOutEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::IsBleedOutEnabled ( )
{
	static UFunction* pFnIsBleedOutEnabled = NULL;

	if ( ! pFnIsBleedOutEnabled )
		pFnIsBleedOutEnabled = (UFunction*) UObject::GObjObjects()->Data[ 45668 ];

	UBioPawnBehavior_execIsBleedOutEnabled_Parms IsBleedOutEnabled_Parms;

	pFnIsBleedOutEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBleedOutEnabled, &IsBleedOutEnabled_Parms, NULL );

	pFnIsBleedOutEnabled->FunctionFlags |= 0x400;

	return IsBleedOutEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.UpdateBleedOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::UpdateBleedOut ( )
{
	static UFunction* pFnUpdateBleedOut = NULL;

	if ( ! pFnUpdateBleedOut )
		pFnUpdateBleedOut = (UFunction*) UObject::GObjObjects()->Data[ 45667 ];

	UBioPawnBehavior_execUpdateBleedOut_Parms UpdateBleedOut_Parms;

	pFnUpdateBleedOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateBleedOut, &UpdateBleedOut_Parms, NULL );

	pFnUpdateBleedOut->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.HasPowersOfType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eDiscipline                    ( CPF_Parm )

bool UBioPawnBehavior::HasPowersOfType ( unsigned char eDiscipline )
{
	static UFunction* pFnHasPowersOfType = NULL;

	if ( ! pFnHasPowersOfType )
		pFnHasPowersOfType = (UFunction*) UObject::GObjObjects()->Data[ 43106 ];

	UBioPawnBehavior_execHasPowersOfType_Parms HasPowersOfType_Parms;
	HasPowersOfType_Parms.eDiscipline = eDiscipline;

	this->ProcessEvent ( pFnHasPowersOfType, &HasPowersOfType_Parms, NULL );

	return HasPowersOfType_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.IsOfPowerRace
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eRace                          ( CPF_Parm )

bool UBioPawnBehavior::IsOfPowerRace ( unsigned char eRace )
{
	static UFunction* pFnIsOfPowerRace = NULL;

	if ( ! pFnIsOfPowerRace )
		pFnIsOfPowerRace = (UFunction*) UObject::GObjObjects()->Data[ 43104 ];

	UBioPawnBehavior_execIsOfPowerRace_Parms IsOfPowerRace_Parms;
	IsOfPowerRace_Parms.eRace = eRace;

	this->ProcessEvent ( pFnIsOfPowerRace, &IsOfPowerRace_Parms, NULL );

	return IsOfPowerRace_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetPowerUsePercent
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetPowerUsePercent ( )
{
	static UFunction* pFnGetPowerUsePercent = NULL;

	if ( ! pFnGetPowerUsePercent )
		pFnGetPowerUsePercent = (UFunction*) UObject::GObjObjects()->Data[ 45654 ];

	UBioPawnBehavior_execGetPowerUsePercent_Parms GetPowerUsePercent_Parms;

	this->ProcessEvent ( pFnGetPowerUsePercent, &GetPowerUsePercent_Parms, NULL );

	return GetPowerUsePercent_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetBleedOutThreshold
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetBleedOutThreshold ( )
{
	static UFunction* pFnGetBleedOutThreshold = NULL;

	if ( ! pFnGetBleedOutThreshold )
		pFnGetBleedOutThreshold = (UFunction*) UObject::GObjObjects()->Data[ 45651 ];

	UBioPawnBehavior_execGetBleedOutThreshold_Parms GetBleedOutThreshold_Parms;

	this->ProcessEvent ( pFnGetBleedOutThreshold, &GetBleedOutThreshold_Parms, NULL );

	return GetBleedOutThreshold_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.IsAbleToInstigate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::IsAbleToInstigate ( )
{
	static UFunction* pFnIsAbleToInstigate = NULL;

	if ( ! pFnIsAbleToInstigate )
		pFnIsAbleToInstigate = (UFunction*) UObject::GObjObjects()->Data[ 45649 ];

	UBioPawnBehavior_execIsAbleToInstigate_Parms IsAbleToInstigate_Parms;

	pFnIsAbleToInstigate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbleToInstigate, &IsAbleToInstigate_Parms, NULL );

	pFnIsAbleToInstigate->FunctionFlags |= 0x400;

	return IsAbleToInstigate_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetCanBePhysicsImpacted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::GetCanBePhysicsImpacted ( )
{
	static UFunction* pFnGetCanBePhysicsImpacted = NULL;

	if ( ! pFnGetCanBePhysicsImpacted )
		pFnGetCanBePhysicsImpacted = (UFunction*) UObject::GObjObjects()->Data[ 43102 ];

	UBioPawnBehavior_execGetCanBePhysicsImpacted_Parms GetCanBePhysicsImpacted_Parms;

	pFnGetCanBePhysicsImpacted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCanBePhysicsImpacted, &GetCanBePhysicsImpacted_Parms, NULL );

	pFnGetCanBePhysicsImpacted->FunctionFlags |= 0x400;

	return GetCanBePhysicsImpacted_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetHealthRegenRate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetHealthRegenRate ( )
{
	static UFunction* pFnGetHealthRegenRate = NULL;

	if ( ! pFnGetHealthRegenRate )
		pFnGetHealthRegenRate = (UFunction*) UObject::GObjObjects()->Data[ 45647 ];

	UBioPawnBehavior_execGetHealthRegenRate_Parms GetHealthRegenRate_Parms;

	pFnGetHealthRegenRate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthRegenRate, &GetHealthRegenRate_Parms, NULL );

	pFnGetHealthRegenRate->FunctionFlags |= 0x400;

	return GetHealthRegenRate_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetDamageResistance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetDamageResistance ( )
{
	static UFunction* pFnGetDamageResistance = NULL;

	if ( ! pFnGetDamageResistance )
		pFnGetDamageResistance = (UFunction*) UObject::GObjObjects()->Data[ 45393 ];

	UBioPawnBehavior_execGetDamageResistance_Parms GetDamageResistance_Parms;

	pFnGetDamageResistance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDamageResistance, &GetDamageResistance_Parms, NULL );

	pFnGetDamageResistance->FunctionFlags |= 0x400;

	return GetDamageResistance_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.RecoverFromBleedOut
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::RecoverFromBleedOut ( )
{
	static UFunction* pFnRecoverFromBleedOut = NULL;

	if ( ! pFnRecoverFromBleedOut )
		pFnRecoverFromBleedOut = (UFunction*) UObject::GObjObjects()->Data[ 45645 ];

	UBioPawnBehavior_execRecoverFromBleedOut_Parms RecoverFromBleedOut_Parms;

	pFnRecoverFromBleedOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecoverFromBleedOut, &RecoverFromBleedOut_Parms, NULL );

	pFnRecoverFromBleedOut->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.EnableBleedOut
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioPawnBehavior::EnableBleedOut ( unsigned long B )
{
	static UFunction* pFnEnableBleedOut = NULL;

	if ( ! pFnEnableBleedOut )
		pFnEnableBleedOut = (UFunction*) UObject::GObjObjects()->Data[ 45643 ];

	UBioPawnBehavior_execEnableBleedOut_Parms EnableBleedOut_Parms;
	EnableBleedOut_Parms.B = B;

	pFnEnableBleedOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableBleedOut, &EnableBleedOut_Parms, NULL );

	pFnEnableBleedOut->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.ForceAppearanceUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::ForceAppearanceUpdate ( )
{
	static UFunction* pFnForceAppearanceUpdate = NULL;

	if ( ! pFnForceAppearanceUpdate )
		pFnForceAppearanceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 45642 ];

	UBioPawnBehavior_execForceAppearanceUpdate_Parms ForceAppearanceUpdate_Parms;

	pFnForceAppearanceUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceAppearanceUpdate, &ForceAppearanceUpdate_Parms, NULL );

	pFnForceAppearanceUpdate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.SetActionState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eState                         ( CPF_Parm )
// float                          fDelay                         ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioPawnBehavior::SetActionState ( unsigned char eState, float fDelay )
{
	static UFunction* pFnSetActionState = NULL;

	if ( ! pFnSetActionState )
		pFnSetActionState = (UFunction*) UObject::GObjObjects()->Data[ 45638 ];

	UBioPawnBehavior_execSetActionState_Parms SetActionState_Parms;
	SetActionState_Parms.eState = eState;
	SetActionState_Parms.fDelay = fDelay;

	pFnSetActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActionState, &SetActionState_Parms, NULL );

	pFnSetActionState->FunctionFlags |= 0x400;

	return SetActionState_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetTwistThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void UBioPawnBehavior::SetTwistThreshold ( float F )
{
	static UFunction* pFnSetTwistThreshold = NULL;

	if ( ! pFnSetTwistThreshold )
		pFnSetTwistThreshold = (UFunction*) UObject::GObjObjects()->Data[ 45636 ];

	UBioPawnBehavior_execSetTwistThreshold_Parms SetTwistThreshold_Parms;
	SetTwistThreshold_Parms.F = F;

	pFnSetTwistThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTwistThreshold, &SetTwistThreshold_Parms, NULL );

	pFnSetTwistThreshold->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.GetTwistThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::GetTwistThreshold ( )
{
	static UFunction* pFnGetTwistThreshold = NULL;

	if ( ! pFnGetTwistThreshold )
		pFnGetTwistThreshold = (UFunction*) UObject::GObjObjects()->Data[ 45634 ];

	UBioPawnBehavior_execGetTwistThreshold_Parms GetTwistThreshold_Parms;

	pFnGetTwistThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTwistThreshold, &GetTwistThreshold_Parms, NULL );

	pFnGetTwistThreshold->FunctionFlags |= 0x400;

	return GetTwistThreshold_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetCurrentWeaponItem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioItemWeaponRanged*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioItemWeaponRanged* UBioPawnBehavior::GetCurrentWeaponItem ( )
{
	static UFunction* pFnGetCurrentWeaponItem = NULL;

	if ( ! pFnGetCurrentWeaponItem )
		pFnGetCurrentWeaponItem = (UFunction*) UObject::GObjObjects()->Data[ 45632 ];

	UBioPawnBehavior_execGetCurrentWeaponItem_Parms GetCurrentWeaponItem_Parms;

	pFnGetCurrentWeaponItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentWeaponItem, &GetCurrentWeaponItem_Parms, NULL );

	pFnGetCurrentWeaponItem->FunctionFlags |= 0x400;

	return GetCurrentWeaponItem_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetUnlootableGrenadeCountSaveGames
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetUnlootableGrenadeCountSaveGames ( )
{
	static UFunction* pFnGetUnlootableGrenadeCountSaveGames = NULL;

	if ( ! pFnGetUnlootableGrenadeCountSaveGames )
		pFnGetUnlootableGrenadeCountSaveGames = (UFunction*) UObject::GObjObjects()->Data[ 45630 ];

	UBioPawnBehavior_execGetUnlootableGrenadeCountSaveGames_Parms GetUnlootableGrenadeCountSaveGames_Parms;

	this->ProcessEvent ( pFnGetUnlootableGrenadeCountSaveGames, &GetUnlootableGrenadeCountSaveGames_Parms, NULL );

	return GetUnlootableGrenadeCountSaveGames_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetUnlootableGrenadeCountSaveGames
// [0x00020002] 
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UBioPawnBehavior::SetUnlootableGrenadeCountSaveGames ( int N )
{
	static UFunction* pFnSetUnlootableGrenadeCountSaveGames = NULL;

	if ( ! pFnSetUnlootableGrenadeCountSaveGames )
		pFnSetUnlootableGrenadeCountSaveGames = (UFunction*) UObject::GObjObjects()->Data[ 45627 ];

	UBioPawnBehavior_execSetUnlootableGrenadeCountSaveGames_Parms SetUnlootableGrenadeCountSaveGames_Parms;
	SetUnlootableGrenadeCountSaveGames_Parms.N = N;

	this->ProcessEvent ( pFnSetUnlootableGrenadeCountSaveGames, &SetUnlootableGrenadeCountSaveGames_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetUnlootableGrenadeCount
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetUnlootableGrenadeCount ( )
{
	static UFunction* pFnGetUnlootableGrenadeCount = NULL;

	if ( ! pFnGetUnlootableGrenadeCount )
		pFnGetUnlootableGrenadeCount = (UFunction*) UObject::GObjObjects()->Data[ 45625 ];

	UBioPawnBehavior_execGetUnlootableGrenadeCount_Parms GetUnlootableGrenadeCount_Parms;

	pFnGetUnlootableGrenadeCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUnlootableGrenadeCount, &GetUnlootableGrenadeCount_Parms, NULL );

	pFnGetUnlootableGrenadeCount->FunctionFlags |= 0x400;

	return GetUnlootableGrenadeCount_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.ModifyUnlootableGrenadeCount
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UBioPawnBehavior::ModifyUnlootableGrenadeCount ( int N )
{
	static UFunction* pFnModifyUnlootableGrenadeCount = NULL;

	if ( ! pFnModifyUnlootableGrenadeCount )
		pFnModifyUnlootableGrenadeCount = (UFunction*) UObject::GObjObjects()->Data[ 45623 ];

	UBioPawnBehavior_execModifyUnlootableGrenadeCount_Parms ModifyUnlootableGrenadeCount_Parms;
	ModifyUnlootableGrenadeCount_Parms.N = N;

	pFnModifyUnlootableGrenadeCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyUnlootableGrenadeCount, &ModifyUnlootableGrenadeCount_Parms, NULL );

	pFnModifyUnlootableGrenadeCount->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.UseDeathCapability
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::UseDeathCapability ( )
{
	static UFunction* pFnUseDeathCapability = NULL;

	if ( ! pFnUseDeathCapability )
		pFnUseDeathCapability = (UFunction*) UObject::GObjObjects()->Data[ 45402 ];

	UBioPawnBehavior_execUseDeathCapability_Parms UseDeathCapability_Parms;

	pFnUseDeathCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseDeathCapability, &UseDeathCapability_Parms, NULL );

	pFnUseDeathCapability->FunctionFlags |= 0x400;

	return UseDeathCapability_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.FeignDeathKismet
// [0x00020002] 
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioPawnBehavior::FeignDeathKismet ( unsigned long B )
{
	static UFunction* pFnFeignDeathKismet = NULL;

	if ( ! pFnFeignDeathKismet )
		pFnFeignDeathKismet = (UFunction*) UObject::GObjObjects()->Data[ 45620 ];

	UBioPawnBehavior_execFeignDeathKismet_Parms FeignDeathKismet_Parms;
	FeignDeathKismet_Parms.B = B;

	this->ProcessEvent ( pFnFeignDeathKismet, &FeignDeathKismet_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.FeignDeath
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )
// unsigned long                  bForceState                    ( CPF_OptionalParm | CPF_Parm )

void UBioPawnBehavior::eventFeignDeath ( unsigned long B, unsigned long bForceState )
{
	static UFunction* pFnFeignDeath = NULL;

	if ( ! pFnFeignDeath )
		pFnFeignDeath = (UFunction*) UObject::GObjObjects()->Data[ 45616 ];

	UBioPawnBehavior_eventFeignDeath_Parms FeignDeath_Parms;
	FeignDeath_Parms.B = B;
	FeignDeath_Parms.bForceState = bForceState;

	this->ProcessEvent ( pFnFeignDeath, &FeignDeath_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.MoveWeaponToSocket
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmSocket                       ( CPF_Parm )

void UBioPawnBehavior::eventMoveWeaponToSocket ( struct FName nmSocket )
{
	static UFunction* pFnMoveWeaponToSocket = NULL;

	if ( ! pFnMoveWeaponToSocket )
		pFnMoveWeaponToSocket = (UFunction*) UObject::GObjObjects()->Data[ 45608 ];

	UBioPawnBehavior_eventMoveWeaponToSocket_Parms MoveWeaponToSocket_Parms;
	memcpy ( &MoveWeaponToSocket_Parms.nmSocket, &nmSocket, 0x8 );

	this->ProcessEvent ( pFnMoveWeaponToSocket, &MoveWeaponToSocket_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnShieldsDown
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnShieldsDown ( )
{
	static UFunction* pFnOnShieldsDown = NULL;

	if ( ! pFnOnShieldsDown )
		pFnOnShieldsDown = (UFunction*) UObject::GObjObjects()->Data[ 45607 ];

	UBioPawnBehavior_eventOnShieldsDown_Parms OnShieldsDown_Parms;

	this->ProcessEvent ( pFnOnShieldsDown, &OnShieldsDown_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.TermRagdoll
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::TermRagdoll ( )
{
	static UFunction* pFnTermRagdoll = NULL;

	if ( ! pFnTermRagdoll )
		pFnTermRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 45602 ];

	UBioPawnBehavior_execTermRagdoll_Parms TermRagdoll_Parms;

	this->ProcessEvent ( pFnTermRagdoll, &TermRagdoll_Parms, NULL );

	return TermRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.InitRagdoll
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::InitRagdoll ( )
{
	static UFunction* pFnInitRagdoll = NULL;

	if ( ! pFnInitRagdoll )
		pFnInitRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 45599 ];

	UBioPawnBehavior_execInitRagdoll_Parms InitRagdoll_Parms;

	this->ProcessEvent ( pFnInitRagdoll, &InitRagdoll_Parms, NULL );

	return InitRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioPawnBehavior::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 45597 ];

	UBioPawnBehavior_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CacheGetWeaponDriftAngle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::CacheGetWeaponDriftAngle ( )
{
	static UFunction* pFnCacheGetWeaponDriftAngle = NULL;

	if ( ! pFnCacheGetWeaponDriftAngle )
		pFnCacheGetWeaponDriftAngle = (UFunction*) UObject::GObjObjects()->Data[ 44389 ];

	UBioPawnBehavior_execCacheGetWeaponDriftAngle_Parms CacheGetWeaponDriftAngle_Parms;

	pFnCacheGetWeaponDriftAngle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCacheGetWeaponDriftAngle, &CacheGetWeaponDriftAngle_Parms, NULL );

	pFnCacheGetWeaponDriftAngle->FunctionFlags |= 0x400;

	return CacheGetWeaponDriftAngle_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CacheGetWeaponDriftZoneRadius
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::CacheGetWeaponDriftZoneRadius ( )
{
	static UFunction* pFnCacheGetWeaponDriftZoneRadius = NULL;

	if ( ! pFnCacheGetWeaponDriftZoneRadius )
		pFnCacheGetWeaponDriftZoneRadius = (UFunction*) UObject::GObjObjects()->Data[ 45595 ];

	UBioPawnBehavior_execCacheGetWeaponDriftZoneRadius_Parms CacheGetWeaponDriftZoneRadius_Parms;

	pFnCacheGetWeaponDriftZoneRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCacheGetWeaponDriftZoneRadius, &CacheGetWeaponDriftZoneRadius_Parms, NULL );

	pFnCacheGetWeaponDriftZoneRadius->FunctionFlags |= 0x400;

	return CacheGetWeaponDriftZoneRadius_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioInventory*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioInventory* UBioPawnBehavior::GetInventory ( )
{
	static UFunction* pFnGetInventory = NULL;

	if ( ! pFnGetInventory )
		pFnGetInventory = (UFunction*) UObject::GObjObjects()->Data[ 45464 ];

	UBioPawnBehavior_execGetInventory_Parms GetInventory_Parms;

	pFnGetInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventory, &GetInventory_Parms, NULL );

	pFnGetInventory->FunctionFlags |= 0x400;

	return GetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetCharmSkill
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetCharmSkill ( )
{
	static UFunction* pFnGetCharmSkill = NULL;

	if ( ! pFnGetCharmSkill )
		pFnGetCharmSkill = (UFunction*) UObject::GObjObjects()->Data[ 45591 ];

	UBioPawnBehavior_execGetCharmSkill_Parms GetCharmSkill_Parms;

	this->ProcessEvent ( pFnGetCharmSkill, &GetCharmSkill_Parms, NULL );

	return GetCharmSkill_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetIntimidateSkill
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetIntimidateSkill ( )
{
	static UFunction* pFnGetIntimidateSkill = NULL;

	if ( ! pFnGetIntimidateSkill )
		pFnGetIntimidateSkill = (UFunction*) UObject::GObjObjects()->Data[ 45587 ];

	UBioPawnBehavior_execGetIntimidateSkill_Parms GetIntimidateSkill_Parms;

	this->ProcessEvent ( pFnGetIntimidateSkill, &GetIntimidateSkill_Parms, NULL );

	return GetIntimidateSkill_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CanBeShot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActorBehavior*       pOther                         ( CPF_Parm )

bool UBioPawnBehavior::CanBeShot ( class UBioActorBehavior* pOther )
{
	static UFunction* pFnCanBeShot = NULL;

	if ( ! pFnCanBeShot )
		pFnCanBeShot = (UFunction*) UObject::GObjObjects()->Data[ 45584 ];

	UBioPawnBehavior_execCanBeShot_Parms CanBeShot_Parms;
	CanBeShot_Parms.pOther = pOther;

	pFnCanBeShot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeShot, &CanBeShot_Parms, NULL );

	pFnCanBeShot->FunctionFlags |= 0x400;

	return CanBeShot_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CreateAndEquipEquipment
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nEquipmentId                   ( CPF_Parm )
// int                            nSophistication                ( CPF_Parm )
// int                            nManufacturerID                ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 InExistingObject               ( CPF_OptionalParm | CPF_Parm )

class UBioItem* UBioPawnBehavior::CreateAndEquipEquipment ( int nEquipmentId, int nSophistication, int nManufacturerID, class UObject* InExistingObject )
{
	static UFunction* pFnCreateAndEquipEquipment = NULL;

	if ( ! pFnCreateAndEquipEquipment )
		pFnCreateAndEquipEquipment = (UFunction*) UObject::GObjObjects()->Data[ 45578 ];

	UBioPawnBehavior_execCreateAndEquipEquipment_Parms CreateAndEquipEquipment_Parms;
	CreateAndEquipEquipment_Parms.nEquipmentId = nEquipmentId;
	CreateAndEquipEquipment_Parms.nSophistication = nSophistication;
	CreateAndEquipEquipment_Parms.nManufacturerID = nManufacturerID;
	CreateAndEquipEquipment_Parms.InExistingObject = InExistingObject;

	pFnCreateAndEquipEquipment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateAndEquipEquipment, &CreateAndEquipEquipment_Parms, NULL );

	pFnCreateAndEquipEquipment->FunctionFlags |= 0x400;

	return CreateAndEquipEquipment_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.TickTalents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioPawnBehavior::TickTalents ( float fDeltaTime )
{
	static UFunction* pFnTickTalents = NULL;

	if ( ! pFnTickTalents )
		pFnTickTalents = (UFunction*) UObject::GObjObjects()->Data[ 45576 ];

	UBioPawnBehavior_execTickTalents_Parms TickTalents_Parms;
	TickTalents_Parms.fDeltaTime = fDeltaTime;

	pFnTickTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickTalents, &TickTalents_Parms, NULL );

	pFnTickTalents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.ActivateNextWeapon
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventActivateNextWeapon ( )
{
	static UFunction* pFnActivateNextWeapon = NULL;

	if ( ! pFnActivateNextWeapon )
		pFnActivateNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45575 ];

	UBioPawnBehavior_eventActivateNextWeapon_Parms ActivateNextWeapon_Parms;

	this->ProcessEvent ( pFnActivateNextWeapon, &ActivateNextWeapon_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.ProcessMeshAdj
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioPawnBehavior::ProcessMeshAdj ( float fDeltaTime )
{
	static UFunction* pFnProcessMeshAdj = NULL;

	if ( ! pFnProcessMeshAdj )
		pFnProcessMeshAdj = (UFunction*) UObject::GObjObjects()->Data[ 45573 ];

	UBioPawnBehavior_execProcessMeshAdj_Parms ProcessMeshAdj_Parms;
	ProcessMeshAdj_Parms.fDeltaTime = fDeltaTime;

	pFnProcessMeshAdj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessMeshAdj, &ProcessMeshAdj_Parms, NULL );

	pFnProcessMeshAdj->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.InPlayerParty
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::InPlayerParty ( )
{
	static UFunction* pFnInPlayerParty = NULL;

	if ( ! pFnInPlayerParty )
		pFnInPlayerParty = (UFunction*) UObject::GObjObjects()->Data[ 45571 ];

	UBioPawnBehavior_execInPlayerParty_Parms InPlayerParty_Parms;

	this->ProcessEvent ( pFnInPlayerParty, &InPlayerParty_Parms, NULL );

	return InPlayerParty_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetBioticAmpEquipped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::GetBioticAmpEquipped ( )
{
	static UFunction* pFnGetBioticAmpEquipped = NULL;

	if ( ! pFnGetBioticAmpEquipped )
		pFnGetBioticAmpEquipped = (UFunction*) UObject::GObjObjects()->Data[ 45569 ];

	UBioPawnBehavior_execGetBioticAmpEquipped_Parms GetBioticAmpEquipped_Parms;

	this->ProcessEvent ( pFnGetBioticAmpEquipped, &GetBioticAmpEquipped_Parms, NULL );

	return GetBioticAmpEquipped_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetClass
// [0x00020002] 
// Parameters infos:
// unsigned char                  nValue                         ( CPF_Parm )

void UBioPawnBehavior::SetClass ( unsigned char nValue )
{
	static UFunction* pFnSetClass = NULL;

	if ( ! pFnSetClass )
		pFnSetClass = (UFunction*) UObject::GObjObjects()->Data[ 45567 ];

	UBioPawnBehavior_execSetClass_Parms SetClass_Parms;
	SetClass_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetClass, &SetClass_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetClass
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnBehavior::GetClass ( )
{
	static UFunction* pFnGetClass = NULL;

	if ( ! pFnGetClass )
		pFnGetClass = (UFunction*) UObject::GObjObjects()->Data[ 45565 ];

	UBioPawnBehavior_execGetClass_Parms GetClass_Parms;

	this->ProcessEvent ( pFnGetClass, &GetClass_Parms, NULL );

	return GetClass_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AdjustGrenades
// [0x00020002] 
// Parameters infos:
// int                            nAmt                           ( CPF_Parm )

void UBioPawnBehavior::AdjustGrenades ( int nAmt )
{
	static UFunction* pFnAdjustGrenades = NULL;

	if ( ! pFnAdjustGrenades )
		pFnAdjustGrenades = (UFunction*) UObject::GObjObjects()->Data[ 45562 ];

	UBioPawnBehavior_execAdjustGrenades_Parms AdjustGrenades_Parms;
	AdjustGrenades_Parms.nAmt = nAmt;

	this->ProcessEvent ( pFnAdjustGrenades, &AdjustGrenades_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetGrenades
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::eventGetGrenades ( )
{
	static UFunction* pFnGetGrenades = NULL;

	if ( ! pFnGetGrenades )
		pFnGetGrenades = (UFunction*) UObject::GObjObjects()->Data[ 45559 ];

	UBioPawnBehavior_eventGetGrenades_Parms GetGrenades_Parms;

	this->ProcessEvent ( pFnGetGrenades, &GetGrenades_Parms, NULL );

	return GetGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AdjustMediGel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fAmt                           ( CPF_Parm )

void UBioPawnBehavior::eventAdjustMediGel ( float fAmt )
{
	static UFunction* pFnAdjustMediGel = NULL;

	if ( ! pFnAdjustMediGel )
		pFnAdjustMediGel = (UFunction*) UObject::GObjObjects()->Data[ 45556 ];

	UBioPawnBehavior_eventAdjustMediGel_Parms AdjustMediGel_Parms;
	AdjustMediGel_Parms.fAmt = fAmt;

	this->ProcessEvent ( pFnAdjustMediGel, &AdjustMediGel_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetMediGel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioPawnBehavior::eventGetMediGel ( )
{
	static UFunction* pFnGetMediGel = NULL;

	if ( ! pFnGetMediGel )
		pFnGetMediGel = (UFunction*) UObject::GObjObjects()->Data[ 45553 ];

	UBioPawnBehavior_eventGetMediGel_Parms GetMediGel_Parms;

	this->ProcessEvent ( pFnGetMediGel, &GetMediGel_Parms, NULL );

	return GetMediGel_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AdjustCredits
// [0x00020002] 
// Parameters infos:
// int                            nAmt                           ( CPF_Parm )

void UBioPawnBehavior::AdjustCredits ( int nAmt )
{
	static UFunction* pFnAdjustCredits = NULL;

	if ( ! pFnAdjustCredits )
		pFnAdjustCredits = (UFunction*) UObject::GObjObjects()->Data[ 45547 ];

	UBioPawnBehavior_execAdjustCredits_Parms AdjustCredits_Parms;
	AdjustCredits_Parms.nAmt = nAmt;

	this->ProcessEvent ( pFnAdjustCredits, &AdjustCredits_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetCredits
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetCredits ( )
{
	static UFunction* pFnGetCredits = NULL;

	if ( ! pFnGetCredits )
		pFnGetCredits = (UFunction*) UObject::GObjObjects()->Data[ 45542 ];

	UBioPawnBehavior_execGetCredits_Parms GetCredits_Parms;

	this->ProcessEvent ( pFnGetCredits, &GetCredits_Parms, NULL );

	return GetCredits_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetXPLevel
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetXPLevel ( )
{
	static UFunction* pFnGetXPLevel = NULL;

	if ( ! pFnGetXPLevel )
		pFnGetXPLevel = (UFunction*) UObject::GObjObjects()->Data[ 45539 ];

	UBioPawnBehavior_execGetXPLevel_Parms GetXPLevel_Parms;

	this->ProcessEvent ( pFnGetXPLevel, &GetXPLevel_Parms, NULL );

	return GetXPLevel_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GiveXP
// [0x00020002] 
// Parameters infos:
// int                            nAmt                           ( CPF_Parm )

void UBioPawnBehavior::GiveXP ( int nAmt )
{
	static UFunction* pFnGiveXP = NULL;

	if ( ! pFnGiveXP )
		pFnGiveXP = (UFunction*) UObject::GObjObjects()->Data[ 45536 ];

	UBioPawnBehavior_execGiveXP_Parms GiveXP_Parms;
	GiveXP_Parms.nAmt = nAmt;

	this->ProcessEvent ( pFnGiveXP, &GiveXP_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetXP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetXP ( )
{
	static UFunction* pFnGetXP = NULL;

	if ( ! pFnGetXP )
		pFnGetXP = (UFunction*) UObject::GObjObjects()->Data[ 45531 ];

	UBioPawnBehavior_execGetXP_Parms GetXP_Parms;

	this->ProcessEvent ( pFnGetXP, &GetXP_Parms, NULL );

	return GetXP_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetGender
// [0x00020002] 
// Parameters infos:
// unsigned char                  nValue                         ( CPF_Parm )

void UBioPawnBehavior::SetGender ( unsigned char nValue )
{
	static UFunction* pFnSetGender = NULL;

	if ( ! pFnSetGender )
		pFnSetGender = (UFunction*) UObject::GObjObjects()->Data[ 45529 ];

	UBioPawnBehavior_execSetGender_Parms SetGender_Parms;
	SetGender_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetGender, &SetGender_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetGender
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnBehavior::GetGender ( )
{
	static UFunction* pFnGetGender = NULL;

	if ( ! pFnGetGender )
		pFnGetGender = (UFunction*) UObject::GObjObjects()->Data[ 45527 ];

	UBioPawnBehavior_execGetGender_Parms GetGender_Parms;

	this->ProcessEvent ( pFnGetGender, &GetGender_Parms, NULL );

	return GetGender_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AdvanceTalkToCount
// [0x00020002] 
// Parameters infos:
// int                            nAmt                           ( CPF_Parm )

void UBioPawnBehavior::AdvanceTalkToCount ( int nAmt )
{
	static UFunction* pFnAdvanceTalkToCount = NULL;

	if ( ! pFnAdvanceTalkToCount )
		pFnAdvanceTalkToCount = (UFunction*) UObject::GObjObjects()->Data[ 45525 ];

	UBioPawnBehavior_execAdvanceTalkToCount_Parms AdvanceTalkToCount_Parms;
	AdvanceTalkToCount_Parms.nAmt = nAmt;

	this->ProcessEvent ( pFnAdvanceTalkToCount, &AdvanceTalkToCount_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.SetTalkToCount
// [0x00020002] 
// Parameters infos:
// int                            nValue                         ( CPF_Parm )

void UBioPawnBehavior::SetTalkToCount ( int nValue )
{
	static UFunction* pFnSetTalkToCount = NULL;

	if ( ! pFnSetTalkToCount )
		pFnSetTalkToCount = (UFunction*) UObject::GObjObjects()->Data[ 45523 ];

	UBioPawnBehavior_execSetTalkToCount_Parms SetTalkToCount_Parms;
	SetTalkToCount_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetTalkToCount, &SetTalkToCount_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetTalkToCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetTalkToCount ( )
{
	static UFunction* pFnGetTalkToCount = NULL;

	if ( ! pFnGetTalkToCount )
		pFnGetTalkToCount = (UFunction*) UObject::GObjObjects()->Data[ 45520 ];

	UBioPawnBehavior_execGetTalkToCount_Parms GetTalkToCount_Parms;

	this->ProcessEvent ( pFnGetTalkToCount, &GetTalkToCount_Parms, NULL );

	return GetTalkToCount_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetMarshalRank
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnBehavior::GetMarshalRank ( )
{
	static UFunction* pFnGetMarshalRank = NULL;

	if ( ! pFnGetMarshalRank )
		pFnGetMarshalRank = (UFunction*) UObject::GObjObjects()->Data[ 45518 ];

	UBioPawnBehavior_execGetMarshalRank_Parms GetMarshalRank_Parms;

	this->ProcessEvent ( pFnGetMarshalRank, &GetMarshalRank_Parms, NULL );

	return GetMarshalRank_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetBackground_Notoritey
// [0x00020002] 
// Parameters infos:
// unsigned char                  nValue                         ( CPF_Parm )

void UBioPawnBehavior::SetBackground_Notoritey ( unsigned char nValue )
{
	static UFunction* pFnSetBackground_Notoritey = NULL;

	if ( ! pFnSetBackground_Notoritey )
		pFnSetBackground_Notoritey = (UFunction*) UObject::GObjObjects()->Data[ 45516 ];

	UBioPawnBehavior_execSetBackground_Notoritey_Parms SetBackground_Notoritey_Parms;
	SetBackground_Notoritey_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetBackground_Notoritey, &SetBackground_Notoritey_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetBackground_Notoritey
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnBehavior::GetBackground_Notoritey ( )
{
	static UFunction* pFnGetBackground_Notoritey = NULL;

	if ( ! pFnGetBackground_Notoritey )
		pFnGetBackground_Notoritey = (UFunction*) UObject::GObjObjects()->Data[ 45514 ];

	UBioPawnBehavior_execGetBackground_Notoritey_Parms GetBackground_Notoritey_Parms;

	this->ProcessEvent ( pFnGetBackground_Notoritey, &GetBackground_Notoritey_Parms, NULL );

	return GetBackground_Notoritey_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.SetBackground_Childhood
// [0x00020002] 
// Parameters infos:
// unsigned char                  nValue                         ( CPF_Parm )

void UBioPawnBehavior::SetBackground_Childhood ( unsigned char nValue )
{
	static UFunction* pFnSetBackground_Childhood = NULL;

	if ( ! pFnSetBackground_Childhood )
		pFnSetBackground_Childhood = (UFunction*) UObject::GObjObjects()->Data[ 45512 ];

	UBioPawnBehavior_execSetBackground_Childhood_Parms SetBackground_Childhood_Parms;
	SetBackground_Childhood_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetBackground_Childhood, &SetBackground_Childhood_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GetBackground_Childhood
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioPawnBehavior::GetBackground_Childhood ( )
{
	static UFunction* pFnGetBackground_Childhood = NULL;

	if ( ! pFnGetBackground_Childhood )
		pFnGetBackground_Childhood = (UFunction*) UObject::GObjObjects()->Data[ 45510 ];

	UBioPawnBehavior_execGetBackground_Childhood_Parms GetBackground_Childhood_Parms;

	this->ProcessEvent ( pFnGetBackground_Childhood, &GetBackground_Childhood_Parms, NULL );

	return GetBackground_Childhood_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.OnBioticExitMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnBioticExitMode ( )
{
	static UFunction* pFnOnBioticExitMode = NULL;

	if ( ! pFnOnBioticExitMode )
		pFnOnBioticExitMode = (UFunction*) UObject::GObjObjects()->Data[ 45509 ];

	UBioPawnBehavior_eventOnBioticExitMode_Parms OnBioticExitMode_Parms;

	this->ProcessEvent ( pFnOnBioticExitMode, &OnBioticExitMode_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnBioticSwitchTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnBioticSwitchTarget ( )
{
	static UFunction* pFnOnBioticSwitchTarget = NULL;

	if ( ! pFnOnBioticSwitchTarget )
		pFnOnBioticSwitchTarget = (UFunction*) UObject::GObjObjects()->Data[ 45508 ];

	UBioPawnBehavior_eventOnBioticSwitchTarget_Parms OnBioticSwitchTarget_Parms;

	this->ProcessEvent ( pFnOnBioticSwitchTarget, &OnBioticSwitchTarget_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnBioticRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnBioticRelease ( )
{
	static UFunction* pFnOnBioticRelease = NULL;

	if ( ! pFnOnBioticRelease )
		pFnOnBioticRelease = (UFunction*) UObject::GObjObjects()->Data[ 45507 ];

	UBioPawnBehavior_eventOnBioticRelease_Parms OnBioticRelease_Parms;

	this->ProcessEvent ( pFnOnBioticRelease, &OnBioticRelease_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnBioticLock
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnBioticLock ( )
{
	static UFunction* pFnOnBioticLock = NULL;

	if ( ! pFnOnBioticLock )
		pFnOnBioticLock = (UFunction*) UObject::GObjObjects()->Data[ 45504 ];

	UBioPawnBehavior_eventOnBioticLock_Parms OnBioticLock_Parms;

	this->ProcessEvent ( pFnOnBioticLock, &OnBioticLock_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnBioticEnterMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnBioticEnterMode ( )
{
	static UFunction* pFnOnBioticEnterMode = NULL;

	if ( ! pFnOnBioticEnterMode )
		pFnOnBioticEnterMode = (UFunction*) UObject::GObjObjects()->Data[ 45503 ];

	UBioPawnBehavior_eventOnBioticEnterMode_Parms OnBioticEnterMode_Parms;

	this->ProcessEvent ( pFnOnBioticEnterMode, &OnBioticEnterMode_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.EndSlowMotion
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioPawnBehavior::EndSlowMotion ( )
{
	static UFunction* pFnEndSlowMotion = NULL;

	if ( ! pFnEndSlowMotion )
		pFnEndSlowMotion = (UFunction*) UObject::GObjObjects()->Data[ 45500 ];

	UBioPawnBehavior_execEndSlowMotion_Parms EndSlowMotion_Parms;

	this->ProcessEvent ( pFnEndSlowMotion, &EndSlowMotion_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.OnDeathAnimationFinished
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventOnDeathAnimationFinished ( )
{
	static UFunction* pFnOnDeathAnimationFinished = NULL;

	if ( ! pFnOnDeathAnimationFinished )
		pFnOnDeathAnimationFinished = (UFunction*) UObject::GObjObjects()->Data[ 45499 ];

	UBioPawnBehavior_eventOnDeathAnimationFinished_Parms OnDeathAnimationFinished_Parms;

	this->ProcessEvent ( pFnOnDeathAnimationFinished, &OnDeathAnimationFinished_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.GrantSimpleDeathXP
// [0x00020002] 
// Parameters infos:

void UBioPawnBehavior::GrantSimpleDeathXP ( )
{
	static UFunction* pFnGrantSimpleDeathXP = NULL;

	if ( ! pFnGrantSimpleDeathXP )
		pFnGrantSimpleDeathXP = (UFunction*) UObject::GObjObjects()->Data[ 45480 ];

	UBioPawnBehavior_execGrantSimpleDeathXP_Parms GrantSimpleDeathXP_Parms;

	this->ProcessEvent ( pFnGrantSimpleDeathXP, &GrantSimpleDeathXP_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.CanPlayDeathAnimation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::CanPlayDeathAnimation ( )
{
	static UFunction* pFnCanPlayDeathAnimation = NULL;

	if ( ! pFnCanPlayDeathAnimation )
		pFnCanPlayDeathAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45468 ];

	UBioPawnBehavior_execCanPlayDeathAnimation_Parms CanPlayDeathAnimation_Parms;

	this->ProcessEvent ( pFnCanPlayDeathAnimation, &CanPlayDeathAnimation_Parms, NULL );

	return CanPlayDeathAnimation_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.LootCorpse
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class ABioWorldInfo*           BioWorldInfo                   ( CPF_Parm )

void UBioPawnBehavior::LootCorpse ( class ABioWorldInfo* BioWorldInfo )
{
	static UFunction* pFnLootCorpse = NULL;

	if ( ! pFnLootCorpse )
		pFnLootCorpse = (UFunction*) UObject::GObjObjects()->Data[ 45448 ];

	UBioPawnBehavior_execLootCorpse_Parms LootCorpse_Parms;
	LootCorpse_Parms.BioWorldInfo = BioWorldInfo;

	this->ProcessEvent ( pFnLootCorpse, &LootCorpse_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.ReactToDeath
// [0x00024002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioPawnBehavior::ReactToDeath ( float Damage, float fDeathDamage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class UBioDamageType* pDamage )
{
	static UFunction* pFnReactToDeath = NULL;

	if ( ! pFnReactToDeath )
		pFnReactToDeath = (UFunction*) UObject::GObjObjects()->Data[ 45435 ];

	UBioPawnBehavior_execReactToDeath_Parms ReactToDeath_Parms;
	ReactToDeath_Parms.Damage = Damage;
	ReactToDeath_Parms.fDeathDamage = fDeathDamage;
	ReactToDeath_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReactToDeath_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ReactToDeath_Parms.Momentum, &Momentum, 0xC );
	ReactToDeath_Parms.DamageType = DamageType;
	memcpy ( &ReactToDeath_Parms.HitInfo, &HitInfo, 0x28 );
	ReactToDeath_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnReactToDeath, &ReactToDeath_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.CacheDeathVFXGameState
// [0x00020002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             pInstigatorController          ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

void UBioPawnBehavior::CacheDeathVFXGameState ( float fDamage, float fDeathDamage, class AController* pInstigatorController, struct FVector vHitLocation, struct FVector vMomentum, class UBioDamageType* pDamage )
{
	static UFunction* pFnCacheDeathVFXGameState = NULL;

	if ( ! pFnCacheDeathVFXGameState )
		pFnCacheDeathVFXGameState = (UFunction*) UObject::GObjObjects()->Data[ 45428 ];

	UBioPawnBehavior_execCacheDeathVFXGameState_Parms CacheDeathVFXGameState_Parms;
	CacheDeathVFXGameState_Parms.fDamage = fDamage;
	CacheDeathVFXGameState_Parms.fDeathDamage = fDeathDamage;
	CacheDeathVFXGameState_Parms.pInstigatorController = pInstigatorController;
	memcpy ( &CacheDeathVFXGameState_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &CacheDeathVFXGameState_Parms.vMomentum, &vMomentum, 0xC );
	CacheDeathVFXGameState_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnCacheDeathVFXGameState, &CacheDeathVFXGameState_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.PlayDamageSound
// [0x00020002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )

void UBioPawnBehavior::PlayDamageSound ( float fDamage )
{
	static UFunction* pFnPlayDamageSound = NULL;

	if ( ! pFnPlayDamageSound )
		pFnPlayDamageSound = (UFunction*) UObject::GObjObjects()->Data[ 45425 ];

	UBioPawnBehavior_execPlayDamageSound_Parms PlayDamageSound_Parms;
	PlayDamageSound_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnPlayDamageSound, &PlayDamageSound_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.PlayDamageAnim
// [0x00420002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::PlayDamageAnim ( float fDamage, struct FVector* vMomentum )
{
	static UFunction* pFnPlayDamageAnim = NULL;

	if ( ! pFnPlayDamageAnim )
		pFnPlayDamageAnim = (UFunction*) UObject::GObjObjects()->Data[ 45418 ];

	UBioPawnBehavior_execPlayDamageAnim_Parms PlayDamageAnim_Parms;
	PlayDamageAnim_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnPlayDamageAnim, &PlayDamageAnim_Parms, NULL );

	if ( vMomentum )
		memcpy ( vMomentum, &PlayDamageAnim_Parms.vMomentum, 0xC );
};

// Function SFXGame.BioPawnBehavior.AddImpulse
// [0x00420002] 
// Parameters infos:
// struct FVector                 vMomentum                      ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FVector                 vHitLocation                   ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::AddImpulse ( struct FVector* vMomentum, struct FVector* vHitLocation )
{
	static UFunction* pFnAddImpulse = NULL;

	if ( ! pFnAddImpulse )
		pFnAddImpulse = (UFunction*) UObject::GObjObjects()->Data[ 45414 ];

	UBioPawnBehavior_execAddImpulse_Parms AddImpulse_Parms;

	this->ProcessEvent ( pFnAddImpulse, &AddImpulse_Parms, NULL );

	if ( vMomentum )
		memcpy ( vMomentum, &AddImpulse_Parms.vMomentum, 0xC );

	if ( vHitLocation )
		memcpy ( vHitLocation, &AddImpulse_Parms.vHitLocation, 0xC );
};

// Function SFXGame.BioPawnBehavior.AmplifyDamage
// [0x00420002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::AmplifyDamage ( float* Damage )
{
	static UFunction* pFnAmplifyDamage = NULL;

	if ( ! pFnAmplifyDamage )
		pFnAmplifyDamage = (UFunction*) UObject::GObjObjects()->Data[ 45412 ];

	UBioPawnBehavior_execAmplifyDamage_Parms AmplifyDamage_Parms;

	this->ProcessEvent ( pFnAmplifyDamage, &AmplifyDamage_Parms, NULL );

	if ( Damage )
		*Damage = AmplifyDamage_Parms.Damage;
};

// Function SFXGame.BioPawnBehavior.ProxyTakeDamage
// [0x00424002] 
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// float                          CurrentDamage                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::ProxyTakeDamage ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, float* CurrentDamage, struct FVector* Momentum )
{
	static UFunction* pFnProxyTakeDamage = NULL;

	if ( ! pFnProxyTakeDamage )
		pFnProxyTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 45341 ];

	UBioPawnBehavior_execProxyTakeDamage_Parms ProxyTakeDamage_Parms;
	ProxyTakeDamage_Parms.OriginalDamage = OriginalDamage;
	ProxyTakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ProxyTakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	ProxyTakeDamage_Parms.DamageType = DamageType;
	memcpy ( &ProxyTakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	ProxyTakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	ProxyTakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnProxyTakeDamage, &ProxyTakeDamage_Parms, NULL );

	if ( CurrentDamage )
		*CurrentDamage = ProxyTakeDamage_Parms.CurrentDamage;

	if ( Momentum )
		memcpy ( Momentum, &ProxyTakeDamage_Parms.Momentum, 0xC );
};

// Function SFXGame.BioPawnBehavior.ComputeLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::eventComputeLevel ( )
{
	static UFunction* pFnComputeLevel = NULL;

	if ( ! pFnComputeLevel )
		pFnComputeLevel = (UFunction*) UObject::GObjObjects()->Data[ 45339 ];

	UBioPawnBehavior_eventComputeLevel_Parms ComputeLevel_Parms;

	this->ProcessEvent ( pFnComputeLevel, &ComputeLevel_Parms, NULL );

	return ComputeLevel_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AddToInitialSquad
// [0x00020002] 
// Parameters infos:

void UBioPawnBehavior::AddToInitialSquad ( )
{
	static UFunction* pFnAddToInitialSquad = NULL;

	if ( ! pFnAddToInitialSquad )
		pFnAddToInitialSquad = (UFunction*) UObject::GObjObjects()->Data[ 45338 ];

	UBioPawnBehavior_execAddToInitialSquad_Parms AddToInitialSquad_Parms;

	this->ProcessEvent ( pFnAddToInitialSquad, &AddToInitialSquad_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 45321 ];

	UBioPawnBehavior_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.AddWeapon
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemLabel                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  sophistication                 ( CPF_Parm )

void UBioPawnBehavior::AddWeapon ( struct FString sItemLabel, unsigned char sophistication )
{
	static UFunction* pFnAddWeapon = NULL;

	if ( ! pFnAddWeapon )
		pFnAddWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45312 ];

	UBioPawnBehavior_execAddWeapon_Parms AddWeapon_Parms;
	memcpy ( &AddWeapon_Parms.sItemLabel, &sItemLabel, 0x10 );
	AddWeapon_Parms.sophistication = sophistication;

	this->ProcessEvent ( pFnAddWeapon, &AddWeapon_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.StopParticleSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ePawnParticleSystem            ( CPF_Parm )

void UBioPawnBehavior::eventStopParticleSystem ( unsigned char ePawnParticleSystem )
{
	static UFunction* pFnStopParticleSystem = NULL;

	if ( ! pFnStopParticleSystem )
		pFnStopParticleSystem = (UFunction*) UObject::GObjObjects()->Data[ 45309 ];

	UBioPawnBehavior_eventStopParticleSystem_Parms StopParticleSystem_Parms;
	StopParticleSystem_Parms.ePawnParticleSystem = ePawnParticleSystem;

	this->ProcessEvent ( pFnStopParticleSystem, &StopParticleSystem_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.StartParticleSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ePawnParticleSystem            ( CPF_Parm )

void UBioPawnBehavior::eventStartParticleSystem ( unsigned char ePawnParticleSystem )
{
	static UFunction* pFnStartParticleSystem = NULL;

	if ( ! pFnStartParticleSystem )
		pFnStartParticleSystem = (UFunction*) UObject::GObjObjects()->Data[ 45306 ];

	UBioPawnBehavior_eventStartParticleSystem_Parms StartParticleSystem_Parms;
	StartParticleSystem_Parms.ePawnParticleSystem = ePawnParticleSystem;

	this->ProcessEvent ( pFnStartParticleSystem, &StartParticleSystem_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.InitializeParticleSystem
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ePawnParticleSystem            ( CPF_Parm )
// class ABioPawn*                oInstigator                    ( CPF_OptionalParm | CPF_Parm )

void UBioPawnBehavior::eventInitializeParticleSystem ( unsigned char ePawnParticleSystem, class ABioPawn* oInstigator )
{
	static UFunction* pFnInitializeParticleSystem = NULL;

	if ( ! pFnInitializeParticleSystem )
		pFnInitializeParticleSystem = (UFunction*) UObject::GObjObjects()->Data[ 45299 ];

	UBioPawnBehavior_eventInitializeParticleSystem_Parms InitializeParticleSystem_Parms;
	InitializeParticleSystem_Parms.ePawnParticleSystem = ePawnParticleSystem;
	InitializeParticleSystem_Parms.oInstigator = oInstigator;

	this->ProcessEvent ( pFnInitializeParticleSystem, &InitializeParticleSystem_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.BeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventBeginPlay ( )
{
	static UFunction* pFnBeginPlay = NULL;

	if ( ! pFnBeginPlay )
		pFnBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 45298 ];

	UBioPawnBehavior_eventBeginPlay_Parms BeginPlay_Parms;

	this->ProcessEvent ( pFnBeginPlay, &BeginPlay_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.ForceArmorOverride
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioPawnBehavior::ForceArmorOverride ( unsigned long B )
{
	static UFunction* pFnForceArmorOverride = NULL;

	if ( ! pFnForceArmorOverride )
		pFnForceArmorOverride = (UFunction*) UObject::GObjObjects()->Data[ 45296 ];

	UBioPawnBehavior_execForceArmorOverride_Parms ForceArmorOverride_Parms;
	ForceArmorOverride_Parms.B = B;

	pFnForceArmorOverride->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceArmorOverride, &ForceArmorOverride_Parms, NULL );

	pFnForceArmorOverride->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.IsArmorOverridden
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::IsArmorOverridden ( )
{
	static UFunction* pFnIsArmorOverridden = NULL;

	if ( ! pFnIsArmorOverridden )
		pFnIsArmorOverridden = (UFunction*) UObject::GObjObjects()->Data[ 45294 ];

	UBioPawnBehavior_execIsArmorOverridden_Parms IsArmorOverridden_Parms;

	pFnIsArmorOverridden->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsArmorOverridden, &IsArmorOverridden_Parms, NULL );

	pFnIsArmorOverridden->FunctionFlags |= 0x400;

	return IsArmorOverridden_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void UBioPawnBehavior::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 45290 ];

	UBioPawnBehavior_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.InitializePawnBehaviorForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::InitializePawnBehaviorForPlay ( )
{
	static UFunction* pFnInitializePawnBehaviorForPlay = NULL;

	if ( ! pFnInitializePawnBehaviorForPlay )
		pFnInitializePawnBehaviorForPlay = (UFunction*) UObject::GObjObjects()->Data[ 45289 ];

	UBioPawnBehavior_execInitializePawnBehaviorForPlay_Parms InitializePawnBehaviorForPlay_Parms;

	pFnInitializePawnBehaviorForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializePawnBehaviorForPlay, &InitializePawnBehaviorForPlay_Parms, NULL );

	pFnInitializePawnBehaviorForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.BioRelateActors
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioPawnBehavior::eventBioRelateActors ( )
{
	static UFunction* pFnBioRelateActors = NULL;

	if ( ! pFnBioRelateActors )
		pFnBioRelateActors = (UFunction*) UObject::GObjObjects()->Data[ 45288 ];

	UBioPawnBehavior_eventBioRelateActors_Parms BioRelateActors_Parms;

	this->ProcessEvent ( pFnBioRelateActors, &BioRelateActors_Parms, NULL );
};

// Function SFXGame.BioPawnBehavior.SoftResetMovementAndAnimationState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::SoftResetMovementAndAnimationState ( )
{
	static UFunction* pFnSoftResetMovementAndAnimationState = NULL;

	if ( ! pFnSoftResetMovementAndAnimationState )
		pFnSoftResetMovementAndAnimationState = (UFunction*) UObject::GObjObjects()->Data[ 45287 ];

	UBioPawnBehavior_execSoftResetMovementAndAnimationState_Parms SoftResetMovementAndAnimationState_Parms;

	pFnSoftResetMovementAndAnimationState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSoftResetMovementAndAnimationState, &SoftResetMovementAndAnimationState_Parms, NULL );

	pFnSoftResetMovementAndAnimationState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.HardResetActionAndAnimationState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::HardResetActionAndAnimationState ( )
{
	static UFunction* pFnHardResetActionAndAnimationState = NULL;

	if ( ! pFnHardResetActionAndAnimationState )
		pFnHardResetActionAndAnimationState = (UFunction*) UObject::GObjObjects()->Data[ 45286 ];

	UBioPawnBehavior_execHardResetActionAndAnimationState_Parms HardResetActionAndAnimationState_Parms;

	pFnHardResetActionAndAnimationState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHardResetActionAndAnimationState, &HardResetActionAndAnimationState_Parms, NULL );

	pFnHardResetActionAndAnimationState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.ScaleSecondaryAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            rankedChallengeLevel           ( CPF_Parm )

void UBioPawnBehavior::ScaleSecondaryAttributes ( int rankedChallengeLevel )
{
	static UFunction* pFnScaleSecondaryAttributes = NULL;

	if ( ! pFnScaleSecondaryAttributes )
		pFnScaleSecondaryAttributes = (UFunction*) UObject::GObjObjects()->Data[ 45284 ];

	UBioPawnBehavior_execScaleSecondaryAttributes_Parms ScaleSecondaryAttributes_Parms;
	ScaleSecondaryAttributes_Parms.rankedChallengeLevel = rankedChallengeLevel;

	pFnScaleSecondaryAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleSecondaryAttributes, &ScaleSecondaryAttributes_Parms, NULL );

	pFnScaleSecondaryAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.OnPhysicsImpulse
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UMeshComponent*          oMesh                          ( CPF_Parm | CPF_EditInline )
// unsigned long                  bIsForce                       ( CPF_Parm )
// struct FVector                 Impulse                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 Position                       ( CPF_Parm | CPF_OutParm )
// struct FName                   BoneName                       ( CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::OnPhysicsImpulse ( class UMeshComponent* oMesh, unsigned long bIsForce, struct FVector* Impulse, struct FVector* Position, struct FName* BoneName )
{
	static UFunction* pFnOnPhysicsImpulse = NULL;

	if ( ! pFnOnPhysicsImpulse )
		pFnOnPhysicsImpulse = (UFunction*) UObject::GObjObjects()->Data[ 45278 ];

	UBioPawnBehavior_execOnPhysicsImpulse_Parms OnPhysicsImpulse_Parms;
	OnPhysicsImpulse_Parms.oMesh = oMesh;
	OnPhysicsImpulse_Parms.bIsForce = bIsForce;

	pFnOnPhysicsImpulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPhysicsImpulse, &OnPhysicsImpulse_Parms, NULL );

	pFnOnPhysicsImpulse->FunctionFlags |= 0x400;

	if ( Impulse )
		memcpy ( Impulse, &OnPhysicsImpulse_Parms.Impulse, 0xC );

	if ( Position )
		memcpy ( Position, &OnPhysicsImpulse_Parms.Position, 0xC );

	if ( BoneName )
		memcpy ( BoneName, &OnPhysicsImpulse_Parms.BoneName, 0x8 );
};

// Function SFXGame.BioPawnBehavior.RanOverByVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVehicleBase*         oVehicle                       ( CPF_Parm )

void UBioPawnBehavior::RanOverByVehicle ( class ABioVehicleBase* oVehicle )
{
	static UFunction* pFnRanOverByVehicle = NULL;

	if ( ! pFnRanOverByVehicle )
		pFnRanOverByVehicle = (UFunction*) UObject::GObjObjects()->Data[ 45276 ];

	UBioPawnBehavior_execRanOverByVehicle_Parms RanOverByVehicle_Parms;
	RanOverByVehicle_Parms.oVehicle = oVehicle;

	pFnRanOverByVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRanOverByVehicle, &RanOverByVehicle_Parms, NULL );

	pFnRanOverByVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.Heal
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          fHealthPoints                  ( CPF_Parm )
// float                          fToxicDamageHealed             ( CPF_OptionalParm | CPF_Parm )
// float                          fResourcesRequired             ( CPF_OptionalParm | CPF_Parm )

void UBioPawnBehavior::Heal ( float fHealthPoints, float fToxicDamageHealed, float fResourcesRequired )
{
	static UFunction* pFnHeal = NULL;

	if ( ! pFnHeal )
		pFnHeal = (UFunction*) UObject::GObjObjects()->Data[ 45272 ];

	UBioPawnBehavior_execHeal_Parms Heal_Parms;
	Heal_Parms.fHealthPoints = fHealthPoints;
	Heal_Parms.fToxicDamageHealed = fToxicDamageHealed;
	Heal_Parms.fResourcesRequired = fResourcesRequired;

	pFnHeal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHeal, &Heal_Parms, NULL );

	pFnHeal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.GetPawnSurface
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnBehavior::GetPawnSurface ( )
{
	static UFunction* pFnGetPawnSurface = NULL;

	if ( ! pFnGetPawnSurface )
		pFnGetPawnSurface = (UFunction*) UObject::GObjObjects()->Data[ 45270 ];

	UBioPawnBehavior_execGetPawnSurface_Parms GetPawnSurface_Parms;

	pFnGetPawnSurface->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawnSurface, &GetPawnSurface_Parms, NULL );

	pFnGetPawnSurface->FunctionFlags |= 0x400;

	return GetPawnSurface_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.ShouldGrantExperienceOnKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::ShouldGrantExperienceOnKill ( )
{
	static UFunction* pFnShouldGrantExperienceOnKill = NULL;

	if ( ! pFnShouldGrantExperienceOnKill )
		pFnShouldGrantExperienceOnKill = (UFunction*) UObject::GObjObjects()->Data[ 45268 ];

	UBioPawnBehavior_execShouldGrantExperienceOnKill_Parms ShouldGrantExperienceOnKill_Parms;

	pFnShouldGrantExperienceOnKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldGrantExperienceOnKill, &ShouldGrantExperienceOnKill_Parms, NULL );

	pFnShouldGrantExperienceOnKill->FunctionFlags |= 0x400;

	return ShouldGrantExperienceOnKill_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.IsInCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnBehavior::IsInCover ( )
{
	static UFunction* pFnIsInCover = NULL;

	if ( ! pFnIsInCover )
		pFnIsInCover = (UFunction*) UObject::GObjObjects()->Data[ 45266 ];

	UBioPawnBehavior_execIsInCover_Parms IsInCover_Parms;

	pFnIsInCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCover, &IsInCover_Parms, NULL );

	pFnIsInCover->FunctionFlags |= 0x400;

	return IsInCover_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetSelectionObstructionSource
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UBioPawnBehavior::GetSelectionObstructionSource ( )
{
	static UFunction* pFnGetSelectionObstructionSource = NULL;

	if ( ! pFnGetSelectionObstructionSource )
		pFnGetSelectionObstructionSource = (UFunction*) UObject::GObjObjects()->Data[ 45264 ];

	UBioPawnBehavior_execGetSelectionObstructionSource_Parms GetSelectionObstructionSource_Parms;

	pFnGetSelectionObstructionSource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectionObstructionSource, &GetSelectionObstructionSource_Parms, NULL );

	pFnGetSelectionObstructionSource->FunctionFlags |= 0x400;

	return GetSelectionObstructionSource_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.GetPlayerSelectable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )
// unsigned char                  ePlayerState                   ( CPF_OptionalParm | CPF_Parm )

bool UBioPawnBehavior::GetPlayerSelectable ( class ABioPlayerController* pPlayerController, unsigned char ePlayerState )
{
	static UFunction* pFnGetPlayerSelectable = NULL;

	if ( ! pFnGetPlayerSelectable )
		pFnGetPlayerSelectable = (UFunction*) UObject::GObjObjects()->Data[ 45260 ];

	UBioPawnBehavior_execGetPlayerSelectable_Parms GetPlayerSelectable_Parms;
	GetPlayerSelectable_Parms.pPlayerController = pPlayerController;
	GetPlayerSelectable_Parms.ePlayerState = ePlayerState;

	pFnGetPlayerSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerSelectable, &GetPlayerSelectable_Parms, NULL );

	pFnGetPlayerSelectable->FunctionFlags |= 0x400;

	return GetPlayerSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.OnTargetInvalidated
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  CurrentSelection               ( CPF_Parm )

void UBioPawnBehavior::OnTargetInvalidated ( class AActor* CurrentSelection )
{
	static UFunction* pFnOnTargetInvalidated = NULL;

	if ( ! pFnOnTargetInvalidated )
		pFnOnTargetInvalidated = (UFunction*) UObject::GObjObjects()->Data[ 45258 ];

	UBioPawnBehavior_execOnTargetInvalidated_Parms OnTargetInvalidated_Parms;
	OnTargetInvalidated_Parms.CurrentSelection = CurrentSelection;

	pFnOnTargetInvalidated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTargetInvalidated, &OnTargetInvalidated_Parms, NULL );

	pFnOnTargetInvalidated->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.OnNewPlayerPawnSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Selection                      ( CPF_Parm )
// class UBioPlayerSelection*     pPlayerSelection               ( CPF_Parm )

bool UBioPawnBehavior::OnNewPlayerPawnSelection ( class AActor* Selection, class UBioPlayerSelection* pPlayerSelection )
{
	static UFunction* pFnOnNewPlayerPawnSelection = NULL;

	if ( ! pFnOnNewPlayerPawnSelection )
		pFnOnNewPlayerPawnSelection = (UFunction*) UObject::GObjObjects()->Data[ 45254 ];

	UBioPawnBehavior_execOnNewPlayerPawnSelection_Parms OnNewPlayerPawnSelection_Parms;
	OnNewPlayerPawnSelection_Parms.Selection = Selection;
	OnNewPlayerPawnSelection_Parms.pPlayerSelection = pPlayerSelection;

	pFnOnNewPlayerPawnSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnNewPlayerPawnSelection, &OnNewPlayerPawnSelection_Parms, NULL );

	pFnOnNewPlayerPawnSelection->FunctionFlags |= 0x400;

	return OnNewPlayerPawnSelection_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AttemptDynamicChallengeScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::AttemptDynamicChallengeScale ( )
{
	static UFunction* pFnAttemptDynamicChallengeScale = NULL;

	if ( ! pFnAttemptDynamicChallengeScale )
		pFnAttemptDynamicChallengeScale = (UFunction*) UObject::GObjObjects()->Data[ 45253 ];

	UBioPawnBehavior_execAttemptDynamicChallengeScale_Parms AttemptDynamicChallengeScale_Parms;

	pFnAttemptDynamicChallengeScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttemptDynamicChallengeScale, &AttemptDynamicChallengeScale_Parms, NULL );

	pFnAttemptDynamicChallengeScale->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.TickBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioPawnBehavior::TickBehavior ( float DeltaTime )
{
	static UFunction* pFnTickBehavior = NULL;

	if ( ! pFnTickBehavior )
		pFnTickBehavior = (UFunction*) UObject::GObjObjects()->Data[ 45251 ];

	UBioPawnBehavior_execTickBehavior_Parms TickBehavior_Parms;
	TickBehavior_Parms.DeltaTime = DeltaTime;

	pFnTickBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickBehavior, &TickBehavior_Parms, NULL );

	pFnTickBehavior->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.AppendPawnCapabilitiesToList
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nCapType                       ( CPF_Parm )
// struct TArray<class UBioCapability*> oOutCaps                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioPawnBehavior::AppendPawnCapabilitiesToList ( unsigned char nCapType, struct TArray<class UBioCapability*>* oOutCaps )
{
	static UFunction* pFnAppendPawnCapabilitiesToList = NULL;

	if ( ! pFnAppendPawnCapabilitiesToList )
		pFnAppendPawnCapabilitiesToList = (UFunction*) UObject::GObjObjects()->Data[ 45247 ];

	UBioPawnBehavior_execAppendPawnCapabilitiesToList_Parms AppendPawnCapabilitiesToList_Parms;
	AppendPawnCapabilitiesToList_Parms.nCapType = nCapType;

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppendPawnCapabilitiesToList, &AppendPawnCapabilitiesToList_Parms, NULL );

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= 0x400;

	if ( oOutCaps )
		memcpy ( oOutCaps, &AppendPawnCapabilitiesToList_Parms.oOutCaps, 0x10 );
};

// Function SFXGame.BioPawnBehavior.RecomputeCapabilities
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::RecomputeCapabilities ( )
{
	static UFunction* pFnRecomputeCapabilities = NULL;

	if ( ! pFnRecomputeCapabilities )
		pFnRecomputeCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 45246 ];

	UBioPawnBehavior_execRecomputeCapabilities_Parms RecomputeCapabilities_Parms;

	pFnRecomputeCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecomputeCapabilities, &RecomputeCapabilities_Parms, NULL );

	pFnRecomputeCapabilities->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.GenerateOnCastAt
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       oAttacker                      ( CPF_Parm )
// struct FName                   nPower                         ( CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::GenerateOnCastAt ( class UBioActorBehavior* oAttacker, struct FName* nPower )
{
	static UFunction* pFnGenerateOnCastAt = NULL;

	if ( ! pFnGenerateOnCastAt )
		pFnGenerateOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 45243 ];

	UBioPawnBehavior_execGenerateOnCastAt_Parms GenerateOnCastAt_Parms;
	GenerateOnCastAt_Parms.oAttacker = oAttacker;

	pFnGenerateOnCastAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateOnCastAt, &GenerateOnCastAt_Parms, NULL );

	pFnGenerateOnCastAt->FunctionFlags |= 0x400;

	if ( nPower )
		memcpy ( nPower, &GenerateOnCastAt_Parms.nPower, 0x8 );
};

// Function SFXGame.BioPawnBehavior.GenerateOnAttacked
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       oAttacker                      ( CPF_Parm )
// struct FName                   nWeapon                        ( CPF_Parm | CPF_OutParm )

void UBioPawnBehavior::GenerateOnAttacked ( class UBioActorBehavior* oAttacker, struct FName* nWeapon )
{
	static UFunction* pFnGenerateOnAttacked = NULL;

	if ( ! pFnGenerateOnAttacked )
		pFnGenerateOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 45240 ];

	UBioPawnBehavior_execGenerateOnAttacked_Parms GenerateOnAttacked_Parms;
	GenerateOnAttacked_Parms.oAttacker = oAttacker;

	pFnGenerateOnAttacked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateOnAttacked, &GenerateOnAttacked_Parms, NULL );

	pFnGenerateOnAttacked->FunctionFlags |= 0x400;

	if ( nWeapon )
		memcpy ( nWeapon, &GenerateOnAttacked_Parms.nWeapon, 0x8 );
};

// Function SFXGame.BioPawnBehavior.AdjustStability
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fStability                     ( CPF_Parm )

void UBioPawnBehavior::AdjustStability ( float fStability )
{
	static UFunction* pFnAdjustStability = NULL;

	if ( ! pFnAdjustStability )
		pFnAdjustStability = (UFunction*) UObject::GObjObjects()->Data[ 45238 ];

	UBioPawnBehavior_execAdjustStability_Parms AdjustStability_Parms;
	AdjustStability_Parms.fStability = fStability;

	pFnAdjustStability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustStability, &AdjustStability_Parms, NULL );

	pFnAdjustStability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.GetWeaponAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesItem*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  meshOfWeapon                   ( CPF_Parm | CPF_EditInline )

class UBioAttributesItem* UBioPawnBehavior::GetWeaponAttributes ( class USkeletalMeshComponent* meshOfWeapon )
{
	static UFunction* pFnGetWeaponAttributes = NULL;

	if ( ! pFnGetWeaponAttributes )
		pFnGetWeaponAttributes = (UFunction*) UObject::GObjObjects()->Data[ 45235 ];

	UBioPawnBehavior_execGetWeaponAttributes_Parms GetWeaponAttributes_Parms;
	GetWeaponAttributes_Parms.meshOfWeapon = meshOfWeapon;

	pFnGetWeaponAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponAttributes, &GetWeaponAttributes_Parms, NULL );

	pFnGetWeaponAttributes->FunctionFlags |= 0x400;

	return GetWeaponAttributes_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.FindFirstValidSecondaryAttribute
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBio2DA*                 table                          ( CPF_Parm )
// int                            nRankedLevel                   ( CPF_Parm )
// struct FName                   ColumnName                     ( CPF_Parm )
// unsigned char                  modType                        ( CPF_Parm )
// class UBioGameProperty*        oGameProperty                  ( CPF_Parm )

void UBioPawnBehavior::FindFirstValidSecondaryAttribute ( class UBio2DA* table, int nRankedLevel, struct FName ColumnName, unsigned char modType, class UBioGameProperty* oGameProperty )
{
	static UFunction* pFnFindFirstValidSecondaryAttribute = NULL;

	if ( ! pFnFindFirstValidSecondaryAttribute )
		pFnFindFirstValidSecondaryAttribute = (UFunction*) UObject::GObjObjects()->Data[ 45229 ];

	UBioPawnBehavior_execFindFirstValidSecondaryAttribute_Parms FindFirstValidSecondaryAttribute_Parms;
	FindFirstValidSecondaryAttribute_Parms.table = table;
	FindFirstValidSecondaryAttribute_Parms.nRankedLevel = nRankedLevel;
	memcpy ( &FindFirstValidSecondaryAttribute_Parms.ColumnName, &ColumnName, 0x8 );
	FindFirstValidSecondaryAttribute_Parms.modType = modType;
	FindFirstValidSecondaryAttribute_Parms.oGameProperty = oGameProperty;

	pFnFindFirstValidSecondaryAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindFirstValidSecondaryAttribute, &FindFirstValidSecondaryAttribute_Parms, NULL );

	pFnFindFirstValidSecondaryAttribute->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.FindFirstValidPrimaryAttribute
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 table                          ( CPF_Parm )
// int                            nRankedLevel                   ( CPF_Parm )
// struct FName                   ColumnName                     ( CPF_Parm )
// int                            nValue                         ( CPF_Parm | CPF_OutParm )

bool UBioPawnBehavior::FindFirstValidPrimaryAttribute ( class UBio2DA* table, int nRankedLevel, struct FName ColumnName, int* nValue )
{
	static UFunction* pFnFindFirstValidPrimaryAttribute = NULL;

	if ( ! pFnFindFirstValidPrimaryAttribute )
		pFnFindFirstValidPrimaryAttribute = (UFunction*) UObject::GObjObjects()->Data[ 45223 ];

	UBioPawnBehavior_execFindFirstValidPrimaryAttribute_Parms FindFirstValidPrimaryAttribute_Parms;
	FindFirstValidPrimaryAttribute_Parms.table = table;
	FindFirstValidPrimaryAttribute_Parms.nRankedLevel = nRankedLevel;
	memcpy ( &FindFirstValidPrimaryAttribute_Parms.ColumnName, &ColumnName, 0x8 );

	pFnFindFirstValidPrimaryAttribute->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindFirstValidPrimaryAttribute, &FindFirstValidPrimaryAttribute_Parms, NULL );

	pFnFindFirstValidPrimaryAttribute->FunctionFlags |= 0x400;

	if ( nValue )
		*nValue = FindFirstValidPrimaryAttribute_Parms.nValue;

	return FindFirstValidPrimaryAttribute_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.CanBeMounted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oMounter                       ( CPF_Parm )

bool UBioPawnBehavior::CanBeMounted ( class APawn* oMounter )
{
	static UFunction* pFnCanBeMounted = NULL;

	if ( ! pFnCanBeMounted )
		pFnCanBeMounted = (UFunction*) UObject::GObjObjects()->Data[ 45220 ];

	UBioPawnBehavior_execCanBeMounted_Parms CanBeMounted_Parms;
	CanBeMounted_Parms.oMounter = oMounter;

	pFnCanBeMounted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeMounted, &CanBeMounted_Parms, NULL );

	pFnCanBeMounted->FunctionFlags |= 0x400;

	return CanBeMounted_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.AcquireActive
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioActive*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsActive                      ( CPF_Parm )
// unsigned long                  bAutoStartActive               ( CPF_OptionalParm | CPF_Parm )

class UBioActive* UBioPawnBehavior::AcquireActive ( class UClass* clsActive, unsigned long bAutoStartActive )
{
	static UFunction* pFnAcquireActive = NULL;

	if ( ! pFnAcquireActive )
		pFnAcquireActive = (UFunction*) UObject::GObjObjects()->Data[ 45216 ];

	UBioPawnBehavior_execAcquireActive_Parms AcquireActive_Parms;
	AcquireActive_Parms.clsActive = clsActive;
	AcquireActive_Parms.bAutoStartActive = bAutoStartActive;

	pFnAcquireActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcquireActive, &AcquireActive_Parms, NULL );

	pFnAcquireActive->FunctionFlags |= 0x400;

	return AcquireActive_Parms.ReturnValue;
};

// Function SFXGame.BioPawnBehavior.InitializeActionFramework
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPawnBehavior::InitializeActionFramework ( )
{
	static UFunction* pFnInitializeActionFramework = NULL;

	if ( ! pFnInitializeActionFramework )
		pFnInitializeActionFramework = (UFunction*) UObject::GObjObjects()->Data[ 45215 ];

	UBioPawnBehavior_execInitializeActionFramework_Parms InitializeActionFramework_Parms;

	pFnInitializeActionFramework->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeActionFramework, &InitializeActionFramework_Parms, NULL );

	pFnInitializeActionFramework->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnBehavior.PlaySound
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ePawnSound                     ( CPF_Parm )
// unsigned char                  eMode                          ( CPF_Parm )

void UBioPawnBehavior::PlaySound ( unsigned char ePawnSound, unsigned char eMode )
{
	static UFunction* pFnPlaySound = NULL;

	if ( ! pFnPlaySound )
		pFnPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 45212 ];

	UBioPawnBehavior_execPlaySound_Parms PlaySound_Parms;
	PlaySound_Parms.ePawnSound = ePawnSound;
	PlaySound_Parms.eMode = eMode;

	this->ProcessEvent ( pFnPlaySound, &PlaySound_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioVehicleBehaviorBase::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 65344 ];

	UBioVehicleBehaviorBase_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.ReactToDeath
// [0x00024002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )
// float                          fDeathDamage                   ( CPF_Parm )
// class AController*             pInstigatedBy                  ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )

void UBioVehicleBehaviorBase::ReactToDeath ( float fDamage, float fDeathDamage, class AController* pInstigatedBy, struct FVector vHitLocation, struct FVector vMomentum, class UClass* clsDamageType, struct FTraceHitInfo HitInfo, class UBioDamageType* pDamage )
{
	static UFunction* pFnReactToDeath = NULL;

	if ( ! pFnReactToDeath )
		pFnReactToDeath = (UFunction*) UObject::GObjObjects()->Data[ 65334 ];

	UBioVehicleBehaviorBase_execReactToDeath_Parms ReactToDeath_Parms;
	ReactToDeath_Parms.fDamage = fDamage;
	ReactToDeath_Parms.fDeathDamage = fDeathDamage;
	ReactToDeath_Parms.pInstigatedBy = pInstigatedBy;
	memcpy ( &ReactToDeath_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ReactToDeath_Parms.vMomentum, &vMomentum, 0xC );
	ReactToDeath_Parms.clsDamageType = clsDamageType;
	memcpy ( &ReactToDeath_Parms.HitInfo, &HitInfo, 0x28 );
	ReactToDeath_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnReactToDeath, &ReactToDeath_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.StartUprighting
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::eventStartUprighting ( )
{
	static UFunction* pFnStartUprighting = NULL;

	if ( ! pFnStartUprighting )
		pFnStartUprighting = (UFunction*) UObject::GObjObjects()->Data[ 65330 ];

	UBioVehicleBehaviorBase_eventStartUprighting_Parms StartUprighting_Parms;

	this->ProcessEvent ( pFnStartUprighting, &StartUprighting_Parms, NULL );

	return StartUprighting_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.OnShieldsDown
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioVehicleBehaviorBase::eventOnShieldsDown ( )
{
	static UFunction* pFnOnShieldsDown = NULL;

	if ( ! pFnOnShieldsDown )
		pFnOnShieldsDown = (UFunction*) UObject::GObjObjects()->Data[ 65329 ];

	UBioVehicleBehaviorBase_eventOnShieldsDown_Parms OnShieldsDown_Parms;

	this->ProcessEvent ( pFnOnShieldsDown, &OnShieldsDown_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.PlayDamageSound
// [0x00020002] 
// Parameters infos:
// float                          fDamage                        ( CPF_Parm )

void UBioVehicleBehaviorBase::PlayDamageSound ( float fDamage )
{
	static UFunction* pFnPlayDamageSound = NULL;

	if ( ! pFnPlayDamageSound )
		pFnPlayDamageSound = (UFunction*) UObject::GObjObjects()->Data[ 65325 ];

	UBioVehicleBehaviorBase_execPlayDamageSound_Parms PlayDamageSound_Parms;
	PlayDamageSound_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnPlayDamageSound, &PlayDamageSound_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.ProxyTakeDamage
// [0x00424002] 
// Parameters infos:
// float                          OriginalDamage                 ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_OptionalParm | CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_OptionalParm | CPF_Parm )
// float                          CurrentDamage                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void UBioVehicleBehaviorBase::ProxyTakeDamage ( float OriginalDamage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* pDamageCausingActor, class UBioDamageType* pDamage, float* CurrentDamage, struct FVector* Momentum )
{
	static UFunction* pFnProxyTakeDamage = NULL;

	if ( ! pFnProxyTakeDamage )
		pFnProxyTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 65314 ];

	UBioVehicleBehaviorBase_execProxyTakeDamage_Parms ProxyTakeDamage_Parms;
	ProxyTakeDamage_Parms.OriginalDamage = OriginalDamage;
	ProxyTakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ProxyTakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	ProxyTakeDamage_Parms.DamageType = DamageType;
	memcpy ( &ProxyTakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	ProxyTakeDamage_Parms.pDamageCausingActor = pDamageCausingActor;
	ProxyTakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnProxyTakeDamage, &ProxyTakeDamage_Parms, NULL );

	if ( CurrentDamage )
		*CurrentDamage = ProxyTakeDamage_Parms.CurrentDamage;

	if ( Momentum )
		memcpy ( Momentum, &ProxyTakeDamage_Parms.Momentum, 0xC );
};

// Function SFXGame.BioVehicleBehaviorBase.BeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioVehicleBehaviorBase::eventBeginPlay ( )
{
	static UFunction* pFnBeginPlay = NULL;

	if ( ! pFnBeginPlay )
		pFnBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 65313 ];

	UBioVehicleBehaviorBase_eventBeginPlay_Parms BeginPlay_Parms;

	this->ProcessEvent ( pFnBeginPlay, &BeginPlay_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioVehicleBehaviorBase::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 65312 ];

	UBioVehicleBehaviorBase_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorBase.StopLowShieldAlert
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::StopLowShieldAlert ( )
{
	static UFunction* pFnStopLowShieldAlert = NULL;

	if ( ! pFnStopLowShieldAlert )
		pFnStopLowShieldAlert = (UFunction*) UObject::GObjObjects()->Data[ 65311 ];

	UBioVehicleBehaviorBase_execStopLowShieldAlert_Parms StopLowShieldAlert_Parms;

	pFnStopLowShieldAlert->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopLowShieldAlert, &StopLowShieldAlert_Parms, NULL );

	pFnStopLowShieldAlert->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.SetMaterialParameterState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )

void UBioVehicleBehaviorBase::SetMaterialParameterState ( unsigned long bState )
{
	static UFunction* pFnSetMaterialParameterState = NULL;

	if ( ! pFnSetMaterialParameterState )
		pFnSetMaterialParameterState = (UFunction*) UObject::GObjObjects()->Data[ 65309 ];

	UBioVehicleBehaviorBase_execSetMaterialParameterState_Parms SetMaterialParameterState_Parms;
	SetMaterialParameterState_Parms.bState = bState;

	pFnSetMaterialParameterState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMaterialParameterState, &SetMaterialParameterState_Parms, NULL );

	pFnSetMaterialParameterState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.OnVehiclePause
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPaused                        ( CPF_Parm )

bool UBioVehicleBehaviorBase::OnVehiclePause ( unsigned long bPaused )
{
	static UFunction* pFnOnVehiclePause = NULL;

	if ( ! pFnOnVehiclePause )
		pFnOnVehiclePause = (UFunction*) UObject::GObjObjects()->Data[ 65306 ];

	UBioVehicleBehaviorBase_execOnVehiclePause_Parms OnVehiclePause_Parms;
	OnVehiclePause_Parms.bPaused = bPaused;

	pFnOnVehiclePause->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnVehiclePause, &OnVehiclePause_Parms, NULL );

	pFnOnVehiclePause->FunctionFlags |= 0x400;

	return OnVehiclePause_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.UnEquipShields
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::UnEquipShields ( )
{
	static UFunction* pFnUnEquipShields = NULL;

	if ( ! pFnUnEquipShields )
		pFnUnEquipShields = (UFunction*) UObject::GObjObjects()->Data[ 65304 ];

	UBioVehicleBehaviorBase_execUnEquipShields_Parms UnEquipShields_Parms;

	pFnUnEquipShields->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnEquipShields, &UnEquipShields_Parms, NULL );

	pFnUnEquipShields->FunctionFlags |= 0x400;

	return UnEquipShields_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.EquipShields
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oNewItem                       ( CPF_Parm )

bool UBioVehicleBehaviorBase::EquipShields ( class UBioItem* oNewItem )
{
	static UFunction* pFnEquipShields = NULL;

	if ( ! pFnEquipShields )
		pFnEquipShields = (UFunction*) UObject::GObjObjects()->Data[ 65301 ];

	UBioVehicleBehaviorBase_execEquipShields_Parms EquipShields_Parms;
	EquipShields_Parms.oNewItem = oNewItem;

	pFnEquipShields->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipShields, &EquipShields_Parms, NULL );

	pFnEquipShields->FunctionFlags |= 0x400;

	return EquipShields_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.ScaleVehicleEquipment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::ScaleVehicleEquipment ( )
{
	static UFunction* pFnScaleVehicleEquipment = NULL;

	if ( ! pFnScaleVehicleEquipment )
		pFnScaleVehicleEquipment = (UFunction*) UObject::GObjObjects()->Data[ 65299 ];

	UBioVehicleBehaviorBase_execScaleVehicleEquipment_Parms ScaleVehicleEquipment_Parms;

	pFnScaleVehicleEquipment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleVehicleEquipment, &ScaleVehicleEquipment_Parms, NULL );

	pFnScaleVehicleEquipment->FunctionFlags |= 0x400;

	return ScaleVehicleEquipment_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.GetRequiredEquipmentSophisticationLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nCurrentPlayerLevel            ( CPF_Parm )

int UBioVehicleBehaviorBase::GetRequiredEquipmentSophisticationLevel ( int nCurrentPlayerLevel )
{
	static UFunction* pFnGetRequiredEquipmentSophisticationLevel = NULL;

	if ( ! pFnGetRequiredEquipmentSophisticationLevel )
		pFnGetRequiredEquipmentSophisticationLevel = (UFunction*) UObject::GObjObjects()->Data[ 65296 ];

	UBioVehicleBehaviorBase_execGetRequiredEquipmentSophisticationLevel_Parms GetRequiredEquipmentSophisticationLevel_Parms;
	GetRequiredEquipmentSophisticationLevel_Parms.nCurrentPlayerLevel = nCurrentPlayerLevel;

	pFnGetRequiredEquipmentSophisticationLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRequiredEquipmentSophisticationLevel, &GetRequiredEquipmentSophisticationLevel_Parms, NULL );

	pFnGetRequiredEquipmentSophisticationLevel->FunctionFlags |= 0x400;

	return GetRequiredEquipmentSophisticationLevel_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.EquipDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEquipmentVehicle*    oEquipment                     ( CPF_Parm )

bool UBioVehicleBehaviorBase::EquipDefaults ( class UBioEquipmentVehicle* oEquipment )
{
	static UFunction* pFnEquipDefaults = NULL;

	if ( ! pFnEquipDefaults )
		pFnEquipDefaults = (UFunction*) UObject::GObjObjects()->Data[ 57449 ];

	UBioVehicleBehaviorBase_execEquipDefaults_Parms EquipDefaults_Parms;
	EquipDefaults_Parms.oEquipment = oEquipment;

	pFnEquipDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipDefaults, &EquipDefaults_Parms, NULL );

	pFnEquipDefaults->FunctionFlags |= 0x400;

	return EquipDefaults_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.Heal
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          fHealthPoints                  ( CPF_Parm )
// float                          fToxicDamageHealed             ( CPF_OptionalParm | CPF_Parm )
// float                          fResourcesRequired             ( CPF_OptionalParm | CPF_Parm )

void UBioVehicleBehaviorBase::Heal ( float fHealthPoints, float fToxicDamageHealed, float fResourcesRequired )
{
	static UFunction* pFnHeal = NULL;

	if ( ! pFnHeal )
		pFnHeal = (UFunction*) UObject::GObjObjects()->Data[ 65291 ];

	UBioVehicleBehaviorBase_execHeal_Parms Heal_Parms;
	Heal_Parms.fHealthPoints = fHealthPoints;
	Heal_Parms.fToxicDamageHealed = fToxicDamageHealed;
	Heal_Parms.fResourcesRequired = fResourcesRequired;

	pFnHeal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHeal, &Heal_Parms, NULL );

	pFnHeal->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.UpdateDamageModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::UpdateDamageModel ( )
{
	static UFunction* pFnUpdateDamageModel = NULL;

	if ( ! pFnUpdateDamageModel )
		pFnUpdateDamageModel = (UFunction*) UObject::GObjObjects()->Data[ 65289 ];

	UBioVehicleBehaviorBase_execUpdateDamageModel_Parms UpdateDamageModel_Parms;

	pFnUpdateDamageModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDamageModel, &UpdateDamageModel_Parms, NULL );

	pFnUpdateDamageModel->FunctionFlags |= 0x400;

	return UpdateDamageModel_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.GetPlayerSelectable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    pPlayerController              ( CPF_Parm )
// unsigned char                  ePlayerState                   ( CPF_OptionalParm | CPF_Parm )

bool UBioVehicleBehaviorBase::GetPlayerSelectable ( class ABioPlayerController* pPlayerController, unsigned char ePlayerState )
{
	static UFunction* pFnGetPlayerSelectable = NULL;

	if ( ! pFnGetPlayerSelectable )
		pFnGetPlayerSelectable = (UFunction*) UObject::GObjObjects()->Data[ 65285 ];

	UBioVehicleBehaviorBase_execGetPlayerSelectable_Parms GetPlayerSelectable_Parms;
	GetPlayerSelectable_Parms.pPlayerController = pPlayerController;
	GetPlayerSelectable_Parms.ePlayerState = ePlayerState;

	pFnGetPlayerSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerSelectable, &GetPlayerSelectable_Parms, NULL );

	pFnGetPlayerSelectable->FunctionFlags |= 0x400;

	return GetPlayerSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.OnTargetInvalidated
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  CurrentSelection               ( CPF_Parm )

void UBioVehicleBehaviorBase::OnTargetInvalidated ( class AActor* CurrentSelection )
{
	static UFunction* pFnOnTargetInvalidated = NULL;

	if ( ! pFnOnTargetInvalidated )
		pFnOnTargetInvalidated = (UFunction*) UObject::GObjObjects()->Data[ 65283 ];

	UBioVehicleBehaviorBase_execOnTargetInvalidated_Parms OnTargetInvalidated_Parms;
	OnTargetInvalidated_Parms.CurrentSelection = CurrentSelection;

	pFnOnTargetInvalidated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTargetInvalidated, &OnTargetInvalidated_Parms, NULL );

	pFnOnTargetInvalidated->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.OnNewPlayerPawnSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Selection                      ( CPF_Parm )
// class UBioPlayerSelection*     pPlayerSelection               ( CPF_Parm )

bool UBioVehicleBehaviorBase::OnNewPlayerPawnSelection ( class AActor* Selection, class UBioPlayerSelection* pPlayerSelection )
{
	static UFunction* pFnOnNewPlayerPawnSelection = NULL;

	if ( ! pFnOnNewPlayerPawnSelection )
		pFnOnNewPlayerPawnSelection = (UFunction*) UObject::GObjObjects()->Data[ 65279 ];

	UBioVehicleBehaviorBase_execOnNewPlayerPawnSelection_Parms OnNewPlayerPawnSelection_Parms;
	OnNewPlayerPawnSelection_Parms.Selection = Selection;
	OnNewPlayerPawnSelection_Parms.pPlayerSelection = pPlayerSelection;

	pFnOnNewPlayerPawnSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnNewPlayerPawnSelection, &OnNewPlayerPawnSelection_Parms, NULL );

	pFnOnNewPlayerPawnSelection->FunctionFlags |= 0x400;

	return OnNewPlayerPawnSelection_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeSounds
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::InitializeSounds ( )
{
	static UFunction* pFnInitializeSounds = NULL;

	if ( ! pFnInitializeSounds )
		pFnInitializeSounds = (UFunction*) UObject::GObjObjects()->Data[ 65277 ];

	UBioVehicleBehaviorBase_execInitializeSounds_Parms InitializeSounds_Parms;

	pFnInitializeSounds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeSounds, &InitializeSounds_Parms, NULL );

	pFnInitializeSounds->FunctionFlags |= 0x400;

	return InitializeSounds_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.DeactivateThruster
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void UBioVehicleBehaviorBase::DeactivateThruster ( int nIndex )
{
	static UFunction* pFnDeactivateThruster = NULL;

	if ( ! pFnDeactivateThruster )
		pFnDeactivateThruster = (UFunction*) UObject::GObjObjects()->Data[ 65275 ];

	UBioVehicleBehaviorBase_execDeactivateThruster_Parms DeactivateThruster_Parms;
	DeactivateThruster_Parms.nIndex = nIndex;

	pFnDeactivateThruster->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateThruster, &DeactivateThruster_Parms, NULL );

	pFnDeactivateThruster->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.ActivateThruster
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void UBioVehicleBehaviorBase::ActivateThruster ( int nIndex )
{
	static UFunction* pFnActivateThruster = NULL;

	if ( ! pFnActivateThruster )
		pFnActivateThruster = (UFunction*) UObject::GObjObjects()->Data[ 65273 ];

	UBioVehicleBehaviorBase_execActivateThruster_Parms ActivateThruster_Parms;
	ActivateThruster_Parms.nIndex = nIndex;

	pFnActivateThruster->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateThruster, &ActivateThruster_Parms, NULL );

	pFnActivateThruster->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeThrusters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::InitializeThrusters ( )
{
	static UFunction* pFnInitializeThrusters = NULL;

	if ( ! pFnInitializeThrusters )
		pFnInitializeThrusters = (UFunction*) UObject::GObjObjects()->Data[ 65271 ];

	UBioVehicleBehaviorBase_execInitializeThrusters_Parms InitializeThrusters_Parms;

	pFnInitializeThrusters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeThrusters, &InitializeThrusters_Parms, NULL );

	pFnInitializeThrusters->FunctionFlags |= 0x400;

	return InitializeThrusters_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeVehicleSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::InitializeVehicleSquad ( )
{
	static UFunction* pFnInitializeVehicleSquad = NULL;

	if ( ! pFnInitializeVehicleSquad )
		pFnInitializeVehicleSquad = (UFunction*) UObject::GObjObjects()->Data[ 65270 ];

	UBioVehicleBehaviorBase_execInitializeVehicleSquad_Parms InitializeVehicleSquad_Parms;

	pFnInitializeVehicleSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeVehicleSquad, &InitializeVehicleSquad_Parms, NULL );

	pFnInitializeVehicleSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.SquadExit
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::SquadExit ( )
{
	static UFunction* pFnSquadExit = NULL;

	if ( ! pFnSquadExit )
		pFnSquadExit = (UFunction*) UObject::GObjObjects()->Data[ 65269 ];

	UBioVehicleBehaviorBase_execSquadExit_Parms SquadExit_Parms;

	pFnSquadExit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadExit, &SquadExit_Parms, NULL );

	pFnSquadExit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.SquadEnter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           oEnterSquad                    ( CPF_Parm )

void UBioVehicleBehaviorBase::SquadEnter ( class ABioBaseSquad* oEnterSquad )
{
	static UFunction* pFnSquadEnter = NULL;

	if ( ! pFnSquadEnter )
		pFnSquadEnter = (UFunction*) UObject::GObjObjects()->Data[ 65267 ];

	UBioVehicleBehaviorBase_execSquadEnter_Parms SquadEnter_Parms;
	SquadEnter_Parms.oEnterSquad = oEnterSquad;

	pFnSquadEnter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadEnter, &SquadEnter_Parms, NULL );

	pFnSquadEnter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.OnDriverPartyDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::OnDriverPartyDeath ( )
{
	static UFunction* pFnOnDriverPartyDeath = NULL;

	if ( ! pFnOnDriverPartyDeath )
		pFnOnDriverPartyDeath = (UFunction*) UObject::GObjObjects()->Data[ 65266 ];

	UBioVehicleBehaviorBase_execOnDriverPartyDeath_Parms OnDriverPartyDeath_Parms;

	pFnOnDriverPartyDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDriverPartyDeath, &OnDriverPartyDeath_Parms, NULL );

	pFnOnDriverPartyDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.UpdateCurrentZoomTurret
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaYaw                      ( CPF_Parm )
// float                          fDeltaPitch                    ( CPF_Parm )

bool UBioVehicleBehaviorBase::UpdateCurrentZoomTurret ( float fDeltaYaw, float fDeltaPitch )
{
	static UFunction* pFnUpdateCurrentZoomTurret = NULL;

	if ( ! pFnUpdateCurrentZoomTurret )
		pFnUpdateCurrentZoomTurret = (UFunction*) UObject::GObjObjects()->Data[ 65262 ];

	UBioVehicleBehaviorBase_execUpdateCurrentZoomTurret_Parms UpdateCurrentZoomTurret_Parms;
	UpdateCurrentZoomTurret_Parms.fDeltaYaw = fDeltaYaw;
	UpdateCurrentZoomTurret_Parms.fDeltaPitch = fDeltaPitch;

	pFnUpdateCurrentZoomTurret->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentZoomTurret, &UpdateCurrentZoomTurret_Parms, NULL );

	pFnUpdateCurrentZoomTurret->FunctionFlags |= 0x400;

	return UpdateCurrentZoomTurret_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.ExitZoomMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::ExitZoomMode ( )
{
	static UFunction* pFnExitZoomMode = NULL;

	if ( ! pFnExitZoomMode )
		pFnExitZoomMode = (UFunction*) UObject::GObjObjects()->Data[ 65260 ];

	UBioVehicleBehaviorBase_execExitZoomMode_Parms ExitZoomMode_Parms;

	pFnExitZoomMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitZoomMode, &ExitZoomMode_Parms, NULL );

	pFnExitZoomMode->FunctionFlags |= 0x400;

	return ExitZoomMode_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.EnterZoomMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nZoomTurretIndex               ( CPF_Parm )

bool UBioVehicleBehaviorBase::EnterZoomMode ( int nZoomTurretIndex )
{
	static UFunction* pFnEnterZoomMode = NULL;

	if ( ! pFnEnterZoomMode )
		pFnEnterZoomMode = (UFunction*) UObject::GObjObjects()->Data[ 65257 ];

	UBioVehicleBehaviorBase_execEnterZoomMode_Parms EnterZoomMode_Parms;
	EnterZoomMode_Parms.nZoomTurretIndex = nZoomTurretIndex;

	pFnEnterZoomMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnterZoomMode, &EnterZoomMode_Parms, NULL );

	pFnEnterZoomMode->FunctionFlags |= 0x400;

	return EnterZoomMode_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.IsWorldLocationWithinTurretCone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nTurretIndex                   ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

bool UBioVehicleBehaviorBase::IsWorldLocationWithinTurretCone ( int nTurretIndex, struct FVector vLocation )
{
	static UFunction* pFnIsWorldLocationWithinTurretCone = NULL;

	if ( ! pFnIsWorldLocationWithinTurretCone )
		pFnIsWorldLocationWithinTurretCone = (UFunction*) UObject::GObjObjects()->Data[ 56726 ];

	UBioVehicleBehaviorBase_execIsWorldLocationWithinTurretCone_Parms IsWorldLocationWithinTurretCone_Parms;
	IsWorldLocationWithinTurretCone_Parms.nTurretIndex = nTurretIndex;
	memcpy ( &IsWorldLocationWithinTurretCone_Parms.vLocation, &vLocation, 0xC );

	pFnIsWorldLocationWithinTurretCone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsWorldLocationWithinTurretCone, &IsWorldLocationWithinTurretCone_Parms, NULL );

	pFnIsWorldLocationWithinTurretCone->FunctionFlags |= 0x400;

	return IsWorldLocationWithinTurretCone_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.IsWeaponAimWithinTurretCone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWeaponRanged*        oWeapon                        ( CPF_Parm )

bool UBioVehicleBehaviorBase::IsWeaponAimWithinTurretCone ( class ABioWeaponRanged* oWeapon )
{
	static UFunction* pFnIsWeaponAimWithinTurretCone = NULL;

	if ( ! pFnIsWeaponAimWithinTurretCone )
		pFnIsWeaponAimWithinTurretCone = (UFunction*) UObject::GObjObjects()->Data[ 65252 ];

	UBioVehicleBehaviorBase_execIsWeaponAimWithinTurretCone_Parms IsWeaponAimWithinTurretCone_Parms;
	IsWeaponAimWithinTurretCone_Parms.oWeapon = oWeapon;

	pFnIsWeaponAimWithinTurretCone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsWeaponAimWithinTurretCone, &IsWeaponAimWithinTurretCone_Parms, NULL );

	pFnIsWeaponAimWithinTurretCone->FunctionFlags |= 0x400;

	return IsWeaponAimWithinTurretCone_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.SetDesiredTurretAimPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nTurretIndex                   ( CPF_Parm )
// struct FVector                 vTargetLocation                ( CPF_Parm )

struct FRotator UBioVehicleBehaviorBase::SetDesiredTurretAimPoint ( int nTurretIndex, struct FVector vTargetLocation )
{
	static UFunction* pFnSetDesiredTurretAimPoint = NULL;

	if ( ! pFnSetDesiredTurretAimPoint )
		pFnSetDesiredTurretAimPoint = (UFunction*) UObject::GObjObjects()->Data[ 65248 ];

	UBioVehicleBehaviorBase_execSetDesiredTurretAimPoint_Parms SetDesiredTurretAimPoint_Parms;
	SetDesiredTurretAimPoint_Parms.nTurretIndex = nTurretIndex;
	memcpy ( &SetDesiredTurretAimPoint_Parms.vTargetLocation, &vTargetLocation, 0xC );

	pFnSetDesiredTurretAimPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDesiredTurretAimPoint, &SetDesiredTurretAimPoint_Parms, NULL );

	pFnSetDesiredTurretAimPoint->FunctionFlags |= 0x400;

	return SetDesiredTurretAimPoint_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.GetWeaponIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWeapon*              oWeapon                        ( CPF_Parm )

int UBioVehicleBehaviorBase::GetWeaponIndex ( class ABioWeapon* oWeapon )
{
	static UFunction* pFnGetWeaponIndex = NULL;

	if ( ! pFnGetWeaponIndex )
		pFnGetWeaponIndex = (UFunction*) UObject::GObjObjects()->Data[ 65245 ];

	UBioVehicleBehaviorBase_execGetWeaponIndex_Parms GetWeaponIndex_Parms;
	GetWeaponIndex_Parms.oWeapon = oWeapon;

	pFnGetWeaponIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponIndex, &GetWeaponIndex_Parms, NULL );

	pFnGetWeaponIndex->FunctionFlags |= 0x400;

	return GetWeaponIndex_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.GetWeaponAtIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioWeapon*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class ABioWeapon* UBioVehicleBehaviorBase::GetWeaponAtIndex ( int nIndex )
{
	static UFunction* pFnGetWeaponAtIndex = NULL;

	if ( ! pFnGetWeaponAtIndex )
		pFnGetWeaponAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 65242 ];

	UBioVehicleBehaviorBase_execGetWeaponAtIndex_Parms GetWeaponAtIndex_Parms;
	GetWeaponAtIndex_Parms.nIndex = nIndex;

	pFnGetWeaponAtIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponAtIndex, &GetWeaponAtIndex_Parms, NULL );

	pFnGetWeaponAtIndex->FunctionFlags |= 0x400;

	return GetWeaponAtIndex_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.DetachAndDestroyWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWeapon*              oWeapon                        ( CPF_Parm )

bool UBioVehicleBehaviorBase::DetachAndDestroyWeapon ( class ABioWeapon* oWeapon )
{
	static UFunction* pFnDetachAndDestroyWeapon = NULL;

	if ( ! pFnDetachAndDestroyWeapon )
		pFnDetachAndDestroyWeapon = (UFunction*) UObject::GObjObjects()->Data[ 65239 ];

	UBioVehicleBehaviorBase_execDetachAndDestroyWeapon_Parms DetachAndDestroyWeapon_Parms;
	DetachAndDestroyWeapon_Parms.oWeapon = oWeapon;

	pFnDetachAndDestroyWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetachAndDestroyWeapon, &DetachAndDestroyWeapon_Parms, NULL );

	pFnDetachAndDestroyWeapon->FunctionFlags |= 0x400;

	return DetachAndDestroyWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.CreateAndAttachWeapon
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  oWeaponClass                   ( CPF_Parm )
// class UBioItemWeapon*          oWeaponItem                    ( CPF_Parm )
// int                            nTurretIndex                   ( CPF_Parm )
// struct FBioVehicleWeaponInfo   oWeaponInfo                    ( CPF_Parm | CPF_OutParm )

bool UBioVehicleBehaviorBase::CreateAndAttachWeapon ( class UClass* oWeaponClass, class UBioItemWeapon* oWeaponItem, int nTurretIndex, struct FBioVehicleWeaponInfo* oWeaponInfo )
{
	static UFunction* pFnCreateAndAttachWeapon = NULL;

	if ( ! pFnCreateAndAttachWeapon )
		pFnCreateAndAttachWeapon = (UFunction*) UObject::GObjObjects()->Data[ 65233 ];

	UBioVehicleBehaviorBase_execCreateAndAttachWeapon_Parms CreateAndAttachWeapon_Parms;
	CreateAndAttachWeapon_Parms.oWeaponClass = oWeaponClass;
	CreateAndAttachWeapon_Parms.oWeaponItem = oWeaponItem;
	CreateAndAttachWeapon_Parms.nTurretIndex = nTurretIndex;

	pFnCreateAndAttachWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateAndAttachWeapon, &CreateAndAttachWeapon_Parms, NULL );

	pFnCreateAndAttachWeapon->FunctionFlags |= 0x400;

	if ( oWeaponInfo )
		memcpy ( oWeaponInfo, &CreateAndAttachWeapon_Parms.oWeaponInfo, 0x18 );

	return CreateAndAttachWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeVehicleWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::InitializeVehicleWeapons ( )
{
	static UFunction* pFnInitializeVehicleWeapons = NULL;

	if ( ! pFnInitializeVehicleWeapons )
		pFnInitializeVehicleWeapons = (UFunction*) UObject::GObjObjects()->Data[ 65231 ];

	UBioVehicleBehaviorBase_execInitializeVehicleWeapons_Parms InitializeVehicleWeapons_Parms;

	pFnInitializeVehicleWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeVehicleWeapons, &InitializeVehicleWeapons_Parms, NULL );

	pFnInitializeVehicleWeapons->FunctionFlags |= 0x400;

	return InitializeVehicleWeapons_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::InitializeVehicle ( )
{
	static UFunction* pFnInitializeVehicle = NULL;

	if ( ! pFnInitializeVehicle )
		pFnInitializeVehicle = (UFunction*) UObject::GObjObjects()->Data[ 65229 ];

	UBioVehicleBehaviorBase_execInitializeVehicle_Parms InitializeVehicle_Parms;

	pFnInitializeVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeVehicle, &InitializeVehicle_Parms, NULL );

	pFnInitializeVehicle->FunctionFlags |= 0x400;

	return InitializeVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.OnVehicleExit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::OnVehicleExit ( )
{
	static UFunction* pFnOnVehicleExit = NULL;

	if ( ! pFnOnVehicleExit )
		pFnOnVehicleExit = (UFunction*) UObject::GObjObjects()->Data[ 65227 ];

	UBioVehicleBehaviorBase_execOnVehicleExit_Parms OnVehicleExit_Parms;

	pFnOnVehicleExit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnVehicleExit, &OnVehicleExit_Parms, NULL );

	pFnOnVehicleExit->FunctionFlags |= 0x400;

	return OnVehicleExit_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.OnVehicleEnter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::OnVehicleEnter ( )
{
	static UFunction* pFnOnVehicleEnter = NULL;

	if ( ! pFnOnVehicleEnter )
		pFnOnVehicleEnter = (UFunction*) UObject::GObjObjects()->Data[ 65225 ];

	UBioVehicleBehaviorBase_execOnVehicleEnter_Parms OnVehicleEnter_Parms;

	pFnOnVehicleEnter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnVehicleEnter, &OnVehicleEnter_Parms, NULL );

	pFnOnVehicleEnter->FunctionFlags |= 0x400;

	return OnVehicleEnter_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.SetBrakeState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bStatus                        ( CPF_Parm )

void UBioVehicleBehaviorBase::SetBrakeState ( unsigned long bStatus )
{
	static UFunction* pFnSetBrakeState = NULL;

	if ( ! pFnSetBrakeState )
		pFnSetBrakeState = (UFunction*) UObject::GObjObjects()->Data[ 65223 ];

	UBioVehicleBehaviorBase_execSetBrakeState_Parms SetBrakeState_Parms;
	SetBrakeState_Parms.bStatus = bStatus;

	pFnSetBrakeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBrakeState, &SetBrakeState_Parms, NULL );

	pFnSetBrakeState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.SetVehicleFunctionState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bStatus                        ( CPF_Parm )

void UBioVehicleBehaviorBase::SetVehicleFunctionState ( unsigned long bStatus )
{
	static UFunction* pFnSetVehicleFunctionState = NULL;

	if ( ! pFnSetVehicleFunctionState )
		pFnSetVehicleFunctionState = (UFunction*) UObject::GObjObjects()->Data[ 65221 ];

	UBioVehicleBehaviorBase_execSetVehicleFunctionState_Parms SetVehicleFunctionState_Parms;
	SetVehicleFunctionState_Parms.bStatus = bStatus;

	pFnSetVehicleFunctionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVehicleFunctionState, &SetVehicleFunctionState_Parms, NULL );

	pFnSetVehicleFunctionState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.SetPowertrainState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bStatus                        ( CPF_Parm )

void UBioVehicleBehaviorBase::SetPowertrainState ( unsigned long bStatus )
{
	static UFunction* pFnSetPowertrainState = NULL;

	if ( ! pFnSetPowertrainState )
		pFnSetPowertrainState = (UFunction*) UObject::GObjObjects()->Data[ 65219 ];

	UBioVehicleBehaviorBase_execSetPowertrainState_Parms SetPowertrainState_Parms;
	SetPowertrainState_Parms.bStatus = bStatus;

	pFnSetPowertrainState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPowertrainState, &SetPowertrainState_Parms, NULL );

	pFnSetPowertrainState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.CanBeShot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActorBehavior*       pOther                         ( CPF_Parm )

bool UBioVehicleBehaviorBase::CanBeShot ( class UBioActorBehavior* pOther )
{
	static UFunction* pFnCanBeShot = NULL;

	if ( ! pFnCanBeShot )
		pFnCanBeShot = (UFunction*) UObject::GObjObjects()->Data[ 65216 ];

	UBioVehicleBehaviorBase_execCanBeShot_Parms CanBeShot_Parms;
	CanBeShot_Parms.pOther = pOther;

	pFnCanBeShot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanBeShot, &CanBeShot_Parms, NULL );

	pFnCanBeShot->FunctionFlags |= 0x400;

	return CanBeShot_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.SetSuperMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSuperMode                     ( CPF_Parm )
// unsigned long                  bActivate                      ( CPF_Parm )
// unsigned long                  bReturnToSuperMode             ( CPF_Parm )

bool UBioVehicleBehaviorBase::SetSuperMode ( unsigned char nSuperMode, unsigned long bActivate, unsigned long bReturnToSuperMode )
{
	static UFunction* pFnSetSuperMode = NULL;

	if ( ! pFnSetSuperMode )
		pFnSetSuperMode = (UFunction*) UObject::GObjObjects()->Data[ 65211 ];

	UBioVehicleBehaviorBase_execSetSuperMode_Parms SetSuperMode_Parms;
	SetSuperMode_Parms.nSuperMode = nSuperMode;
	SetSuperMode_Parms.bActivate = bActivate;
	SetSuperMode_Parms.bReturnToSuperMode = bReturnToSuperMode;

	pFnSetSuperMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSuperMode, &SetSuperMode_Parms, NULL );

	pFnSetSuperMode->FunctionFlags |= 0x400;

	return SetSuperMode_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.ReleaseActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorBase::ReleaseActive ( )
{
	static UFunction* pFnReleaseActive = NULL;

	if ( ! pFnReleaseActive )
		pFnReleaseActive = (UFunction*) UObject::GObjObjects()->Data[ 65209 ];

	UBioVehicleBehaviorBase_execReleaseActive_Parms ReleaseActive_Parms;

	pFnReleaseActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseActive, &ReleaseActive_Parms, NULL );

	pFnReleaseActive->FunctionFlags |= 0x400;

	return ReleaseActive_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializePawnBehaviorForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::InitializePawnBehaviorForPlay ( )
{
	static UFunction* pFnInitializePawnBehaviorForPlay = NULL;

	if ( ! pFnInitializePawnBehaviorForPlay )
		pFnInitializePawnBehaviorForPlay = (UFunction*) UObject::GObjObjects()->Data[ 65208 ];

	UBioVehicleBehaviorBase_execInitializePawnBehaviorForPlay_Parms InitializePawnBehaviorForPlay_Parms;

	pFnInitializePawnBehaviorForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializePawnBehaviorForPlay, &InitializePawnBehaviorForPlay_Parms, NULL );

	pFnInitializePawnBehaviorForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorBase.InitializeActionFramework
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorBase::InitializeActionFramework ( )
{
	static UFunction* pFnInitializeActionFramework = NULL;

	if ( ! pFnInitializeActionFramework )
		pFnInitializeActionFramework = (UFunction*) UObject::GObjObjects()->Data[ 65207 ];

	UBioVehicleBehaviorBase_execInitializeActionFramework_Parms InitializeActionFramework_Parms;

	pFnInitializeActionFramework->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeActionFramework, &InitializeActionFramework_Parms, NULL );

	pFnInitializeActionFramework->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorWheeled.InitializeRunTimeOnlyTransients
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioVehicleBehaviorWheeled::eventInitializeRunTimeOnlyTransients ( )
{
	static UFunction* pFnInitializeRunTimeOnlyTransients = NULL;

	if ( ! pFnInitializeRunTimeOnlyTransients )
		pFnInitializeRunTimeOnlyTransients = (UFunction*) UObject::GObjObjects()->Data[ 65512 ];

	UBioVehicleBehaviorWheeled_eventInitializeRunTimeOnlyTransients_Parms InitializeRunTimeOnlyTransients_Parms;

	this->ProcessEvent ( pFnInitializeRunTimeOnlyTransients, &InitializeRunTimeOnlyTransients_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorWheeled.OnWeaponInstantFire
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioWeaponRanged*        oFiredWeapon                   ( CPF_OptionalParm | CPF_Parm )

void UBioVehicleBehaviorWheeled::OnWeaponInstantFire ( class ABioWeaponRanged* oFiredWeapon )
{
	static UFunction* pFnOnWeaponInstantFire = NULL;

	if ( ! pFnOnWeaponInstantFire )
		pFnOnWeaponInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 65510 ];

	UBioVehicleBehaviorWheeled_execOnWeaponInstantFire_Parms OnWeaponInstantFire_Parms;
	OnWeaponInstantFire_Parms.oFiredWeapon = oFiredWeapon;

	pFnOnWeaponInstantFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnWeaponInstantFire, &OnWeaponInstantFire_Parms, NULL );

	pFnOnWeaponInstantFire->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorWheeled.InitializeActionFramework
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioVehicleBehaviorWheeled::InitializeActionFramework ( )
{
	static UFunction* pFnInitializeActionFramework = NULL;

	if ( ! pFnInitializeActionFramework )
		pFnInitializeActionFramework = (UFunction*) UObject::GObjObjects()->Data[ 65509 ];

	UBioVehicleBehaviorWheeled_execInitializeActionFramework_Parms InitializeActionFramework_Parms;

	pFnInitializeActionFramework->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeActionFramework, &InitializeActionFramework_Parms, NULL );

	pFnInitializeActionFramework->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBehaviorWheeled.UnEquipMachineGun
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorWheeled::UnEquipMachineGun ( )
{
	static UFunction* pFnUnEquipMachineGun = NULL;

	if ( ! pFnUnEquipMachineGun )
		pFnUnEquipMachineGun = (UFunction*) UObject::GObjObjects()->Data[ 65507 ];

	UBioVehicleBehaviorWheeled_execUnEquipMachineGun_Parms UnEquipMachineGun_Parms;

	pFnUnEquipMachineGun->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnEquipMachineGun, &UnEquipMachineGun_Parms, NULL );

	pFnUnEquipMachineGun->FunctionFlags |= 0x400;

	return UnEquipMachineGun_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorWheeled.UnEquipCannon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorWheeled::UnEquipCannon ( )
{
	static UFunction* pFnUnEquipCannon = NULL;

	if ( ! pFnUnEquipCannon )
		pFnUnEquipCannon = (UFunction*) UObject::GObjObjects()->Data[ 65505 ];

	UBioVehicleBehaviorWheeled_execUnEquipCannon_Parms UnEquipCannon_Parms;

	pFnUnEquipCannon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnEquipCannon, &UnEquipCannon_Parms, NULL );

	pFnUnEquipCannon->FunctionFlags |= 0x400;

	return UnEquipCannon_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorWheeled.EquipMachineGun
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oNewItem                       ( CPF_Parm )

bool UBioVehicleBehaviorWheeled::EquipMachineGun ( class UBioItem* oNewItem )
{
	static UFunction* pFnEquipMachineGun = NULL;

	if ( ! pFnEquipMachineGun )
		pFnEquipMachineGun = (UFunction*) UObject::GObjObjects()->Data[ 65502 ];

	UBioVehicleBehaviorWheeled_execEquipMachineGun_Parms EquipMachineGun_Parms;
	EquipMachineGun_Parms.oNewItem = oNewItem;

	pFnEquipMachineGun->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipMachineGun, &EquipMachineGun_Parms, NULL );

	pFnEquipMachineGun->FunctionFlags |= 0x400;

	return EquipMachineGun_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorWheeled.EquipCannon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oNewItem                       ( CPF_Parm )

bool UBioVehicleBehaviorWheeled::EquipCannon ( class UBioItem* oNewItem )
{
	static UFunction* pFnEquipCannon = NULL;

	if ( ! pFnEquipCannon )
		pFnEquipCannon = (UFunction*) UObject::GObjObjects()->Data[ 65499 ];

	UBioVehicleBehaviorWheeled_execEquipCannon_Parms EquipCannon_Parms;
	EquipCannon_Parms.oNewItem = oNewItem;

	pFnEquipCannon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipCannon, &EquipCannon_Parms, NULL );

	pFnEquipCannon->FunctionFlags |= 0x400;

	return EquipCannon_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorWheeled.EquipDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEquipmentVehicle*    oEquipment                     ( CPF_Parm )

bool UBioVehicleBehaviorWheeled::EquipDefaults ( class UBioEquipmentVehicle* oEquipment )
{
	static UFunction* pFnEquipDefaults = NULL;

	if ( ! pFnEquipDefaults )
		pFnEquipDefaults = (UFunction*) UObject::GObjObjects()->Data[ 65496 ];

	UBioVehicleBehaviorWheeled_execEquipDefaults_Parms EquipDefaults_Parms;
	EquipDefaults_Parms.oEquipment = oEquipment;

	pFnEquipDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipDefaults, &EquipDefaults_Parms, NULL );

	pFnEquipDefaults->FunctionFlags |= 0x400;

	return EquipDefaults_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBehaviorWheeled.InitializeVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioVehicleBehaviorWheeled::InitializeVehicle ( )
{
	static UFunction* pFnInitializeVehicle = NULL;

	if ( ! pFnInitializeVehicle )
		pFnInitializeVehicle = (UFunction*) UObject::GObjObjects()->Data[ 65494 ];

	UBioVehicleBehaviorWheeled_execInitializeVehicle_Parms InitializeVehicle_Parms;

	pFnInitializeVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeVehicle, &InitializeVehicle_Parms, NULL );

	pFnInitializeVehicle->FunctionFlags |= 0x400;

	return InitializeVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioPawnSquadInterface.FindSquadMemberByTag
// [0x00020002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTag                          ( CPF_Parm )

class APawn* UBioPawnSquadInterface::FindSquadMemberByTag ( struct FName nmTag )
{
	static UFunction* pFnFindSquadMemberByTag = NULL;

	if ( ! pFnFindSquadMemberByTag )
		pFnFindSquadMemberByTag = (UFunction*) UObject::GObjObjects()->Data[ 56994 ];

	UBioPawnSquadInterface_execFindSquadMemberByTag_Parms FindSquadMemberByTag_Parms;
	memcpy ( &FindSquadMemberByTag_Parms.nmTag, &nmTag, 0x8 );

	this->ProcessEvent ( pFnFindSquadMemberByTag, &FindSquadMemberByTag_Parms, NULL );

	return FindSquadMemberByTag_Parms.ReturnValue;
};

// Function SFXGame.BioPawnSquadInterface.FindSquadIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioPawnSquadInterface::FindSquadIndex ( )
{
	static UFunction* pFnFindSquadIndex = NULL;

	if ( ! pFnFindSquadIndex )
		pFnFindSquadIndex = (UFunction*) UObject::GObjObjects()->Data[ 43795 ];

	UBioPawnSquadInterface_execFindSquadIndex_Parms FindSquadIndex_Parms;

	pFnFindSquadIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSquadIndex, &FindSquadIndex_Parms, NULL );

	pFnFindSquadIndex->FunctionFlags |= 0x400;

	return FindSquadIndex_Parms.ReturnValue;
};

// Function SFXGame.BioPawnSquadInterface.ChangeSquads
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioBaseSquad*           NewSquad                       ( CPF_Parm )

void UBioPawnSquadInterface::eventChangeSquads ( class ABioBaseSquad* NewSquad )
{
	static UFunction* pFnChangeSquads = NULL;

	if ( ! pFnChangeSquads )
		pFnChangeSquads = (UFunction*) UObject::GObjObjects()->Data[ 56992 ];

	UBioPawnSquadInterface_eventChangeSquads_Parms ChangeSquads_Parms;
	ChangeSquads_Parms.NewSquad = NewSquad;

	this->ProcessEvent ( pFnChangeSquads, &ChangeSquads_Parms, NULL );
};

// Function SFXGame.BioPawnSquadInterface.ChangeToPlayerSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sClass                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   aSquadName                     ( CPF_Parm )

void UBioPawnSquadInterface::ChangeToPlayerSquad ( struct FString sClass, struct FName aSquadName )
{
	static UFunction* pFnChangeToPlayerSquad = NULL;

	if ( ! pFnChangeToPlayerSquad )
		pFnChangeToPlayerSquad = (UFunction*) UObject::GObjObjects()->Data[ 56989 ];

	UBioPawnSquadInterface_execChangeToPlayerSquad_Parms ChangeToPlayerSquad_Parms;
	memcpy ( &ChangeToPlayerSquad_Parms.sClass, &sClass, 0x10 );
	memcpy ( &ChangeToPlayerSquad_Parms.aSquadName, &aSquadName, 0x8 );

	pFnChangeToPlayerSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeToPlayerSquad, &ChangeToPlayerSquad_Parms, NULL );

	pFnChangeToPlayerSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnSquadInterface.ChangeToDefaultSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnSquadInterface::ChangeToDefaultSquad ( )
{
	static UFunction* pFnChangeToDefaultSquad = NULL;

	if ( ! pFnChangeToDefaultSquad )
		pFnChangeToDefaultSquad = (UFunction*) UObject::GObjObjects()->Data[ 56988 ];

	UBioPawnSquadInterface_execChangeToDefaultSquad_Parms ChangeToDefaultSquad_Parms;

	pFnChangeToDefaultSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeToDefaultSquad, &ChangeToDefaultSquad_Parms, NULL );

	pFnChangeToDefaultSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnSquadInterface.PawnDestroyed
// [0x00020002] 
// Parameters infos:

void UBioPawnSquadInterface::PawnDestroyed ( )
{
	static UFunction* pFnPawnDestroyed = NULL;

	if ( ! pFnPawnDestroyed )
		pFnPawnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 56987 ];

	UBioPawnSquadInterface_execPawnDestroyed_Parms PawnDestroyed_Parms;

	this->ProcessEvent ( pFnPawnDestroyed, &PawnDestroyed_Parms, NULL );
};

// Function SFXGame.BioPawnSquadInterface.LeaveSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnSquadInterface::LeaveSquad ( )
{
	static UFunction* pFnLeaveSquad = NULL;

	if ( ! pFnLeaveSquad )
		pFnLeaveSquad = (UFunction*) UObject::GObjObjects()->Data[ 56986 ];

	UBioPawnSquadInterface_execLeaveSquad_Parms LeaveSquad_Parms;

	pFnLeaveSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveSquad, &LeaveSquad_Parms, NULL );

	pFnLeaveSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnSquadInterface.JoinSquad
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class ABioBaseSquad*           NewSquad                       ( CPF_Parm )

void UBioPawnSquadInterface::eventJoinSquad ( class ABioBaseSquad* NewSquad )
{
	static UFunction* pFnJoinSquad = NULL;

	if ( ! pFnJoinSquad )
		pFnJoinSquad = (UFunction*) UObject::GObjObjects()->Data[ 56984 ];

	UBioPawnSquadInterface_eventJoinSquad_Parms JoinSquad_Parms;
	JoinSquad_Parms.NewSquad = NewSquad;

	this->ProcessEvent ( pFnJoinSquad, &JoinSquad_Parms, NULL );
};

// Function SFXGame.BioSFHandler_AreaMap.RTNConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_AreaMap::RTNConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnRTNConfirm = NULL;

	if ( ! pFnRTNConfirm )
		pFnRTNConfirm = (UFunction*) UObject::GObjObjects()->Data[ 61055 ];

	UBioSFHandler_AreaMap_execRTNConfirm_Parms RTNConfirm_Parms;
	RTNConfirm_Parms.bAPressed = bAPressed;
	RTNConfirm_Parms.nContext = nContext;

	pFnRTNConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRTNConfirm, &RTNConfirm_Parms, NULL );

	pFnRTNConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCAreaMap.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCAreaMap::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62928 ];

	UBioSFHandler_PCAreaMap_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.ExitToMainMenu
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_BrowserWheel::ExitToMainMenu ( )
{
	static UFunction* pFnExitToMainMenu = NULL;

	if ( ! pFnExitToMainMenu )
		pFnExitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 61144 ];

	UBioSFHandler_BrowserWheel_execExitToMainMenu_Parms ExitToMainMenu_Parms;

	pFnExitToMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitToMainMenu, &ExitToMainMenu_Parms, NULL );

	pFnExitToMainMenu->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_BrowserWheel.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_BrowserWheel::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 61199 ];

	UBioSFHandler_BrowserWheel_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_BrowserWheel::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 61197 ];

	UBioSFHandler_BrowserWheel_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_BrowserWheel::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61196 ];

	UBioSFHandler_BrowserWheel_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.UpdateGUILayout
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_BrowserWheel::eventUpdateGUILayout ( )
{
	static UFunction* pFnUpdateGUILayout = NULL;

	if ( ! pFnUpdateGUILayout )
		pFnUpdateGUILayout = (UFunction*) UObject::GObjObjects()->Data[ 61192 ];

	UBioSFHandler_BrowserWheel_eventUpdateGUILayout_Parms UpdateGUILayout_Parms;

	this->ProcessEvent ( pFnUpdateGUILayout, &UpdateGUILayout_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.InitializeBrowser
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_BrowserWheel::InitializeBrowser ( )
{
	static UFunction* pFnInitializeBrowser = NULL;

	if ( ! pFnInitializeBrowser )
		pFnInitializeBrowser = (UFunction*) UObject::GObjObjects()->Data[ 61143 ];

	UBioSFHandler_BrowserWheel_execInitializeBrowser_Parms InitializeBrowser_Parms;

	this->ProcessEvent ( pFnInitializeBrowser, &InitializeBrowser_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.DetermineJournalCodexUpdateStatus
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_BrowserWheel::DetermineJournalCodexUpdateStatus ( )
{
	static UFunction* pFnDetermineJournalCodexUpdateStatus = NULL;

	if ( ! pFnDetermineJournalCodexUpdateStatus )
		pFnDetermineJournalCodexUpdateStatus = (UFunction*) UObject::GObjObjects()->Data[ 61177 ];

	UBioSFHandler_BrowserWheel_execDetermineJournalCodexUpdateStatus_Parms DetermineJournalCodexUpdateStatus_Parms;

	pFnDetermineJournalCodexUpdateStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetermineJournalCodexUpdateStatus, &DetermineJournalCodexUpdateStatus_Parms, NULL );

	pFnDetermineJournalCodexUpdateStatus->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_BrowserWheel.DetermineSquadUpdateStatus
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_BrowserWheel::DetermineSquadUpdateStatus ( )
{
	static UFunction* pFnDetermineSquadUpdateStatus = NULL;

	if ( ! pFnDetermineSquadUpdateStatus )
		pFnDetermineSquadUpdateStatus = (UFunction*) UObject::GObjObjects()->Data[ 61168 ];

	UBioSFHandler_BrowserWheel_execDetermineSquadUpdateStatus_Parms DetermineSquadUpdateStatus_Parms;

	this->ProcessEvent ( pFnDetermineSquadUpdateStatus, &DetermineSquadUpdateStatus_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_BrowserWheel::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61157 ];

	UBioSFHandler_BrowserWheel_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_BrowserWheel::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 61153 ];

	UBioSFHandler_BrowserWheel_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.ExitConfirm
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_BrowserWheel::ExitConfirm ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnExitConfirm = NULL;

	if ( ! pFnExitConfirm )
		pFnExitConfirm = (UFunction*) UObject::GObjObjects()->Data[ 61149 ];

	UBioSFHandler_BrowserWheel_execExitConfirm_Parms ExitConfirm_Parms;
	ExitConfirm_Parms.bAPressed = bAPressed;
	ExitConfirm_Parms.nContext = nContext;
	ExitConfirm_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnExitConfirm, &ExitConfirm_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.MainMenuConfirm
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_BrowserWheel::MainMenuConfirm ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnMainMenuConfirm = NULL;

	if ( ! pFnMainMenuConfirm )
		pFnMainMenuConfirm = (UFunction*) UObject::GObjObjects()->Data[ 61145 ];

	UBioSFHandler_BrowserWheel_execMainMenuConfirm_Parms MainMenuConfirm_Parms;
	MainMenuConfirm_Parms.bAPressed = bAPressed;
	MainMenuConfirm_Parms.nContext = nContext;
	MainMenuConfirm_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnMainMenuConfirm, &MainMenuConfirm_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_BrowserWheel::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61135 ];

	UBioSFHandler_BrowserWheel_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_BrowserWheel.UpdateCachedItemCategory
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioSFPanel*             oLastPanel                     ( CPF_Parm )

void UBioSFHandler_BrowserWheel::UpdateCachedItemCategory ( class UBioSFPanel* oLastPanel )
{
	static UFunction* pFnUpdateCachedItemCategory = NULL;

	if ( ! pFnUpdateCachedItemCategory )
		pFnUpdateCachedItemCategory = (UFunction*) UObject::GObjObjects()->Data[ 61130 ];

	UBioSFHandler_BrowserWheel_execUpdateCachedItemCategory_Parms UpdateCachedItemCategory_Parms;
	UpdateCachedItemCategory_Parms.oLastPanel = oLastPanel;

	this->ProcessEvent ( pFnUpdateCachedItemCategory, &UpdateCachedItemCategory_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BrowserWheel.ShowSelectedPanel
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            nPanel                         ( CPF_Parm )
// class UBioSFManager*           oManager                       ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_BrowserWheel::eventShowSelectedPanel ( int nPanel, class UBioSFManager* oManager )
{
	static UFunction* pFnShowSelectedPanel = NULL;

	if ( ! pFnShowSelectedPanel )
		pFnShowSelectedPanel = (UFunction*) UObject::GObjObjects()->Data[ 61111 ];

	UBioSFHandler_BrowserWheel_eventShowSelectedPanel_Parms ShowSelectedPanel_Parms;
	ShowSelectedPanel_Parms.nPanel = nPanel;
	ShowSelectedPanel_Parms.oManager = oManager;

	this->ProcessEvent ( pFnShowSelectedPanel, &ShowSelectedPanel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Credits::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 61526 ];

	UBioSFHandler_Credits_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.SetFromAdditionalContent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_Credits::eventSetFromAdditionalContent ( )
{
	static UFunction* pFnSetFromAdditionalContent = NULL;

	if ( ! pFnSetFromAdditionalContent )
		pFnSetFromAdditionalContent = (UFunction*) UObject::GObjObjects()->Data[ 61525 ];

	UBioSFHandler_Credits_eventSetFromAdditionalContent_Parms SetFromAdditionalContent_Parms;

	this->ProcessEvent ( pFnSetFromAdditionalContent, &SetFromAdditionalContent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.SetFromMainMenu
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Credits::SetFromMainMenu ( )
{
	static UFunction* pFnSetFromMainMenu = NULL;

	if ( ! pFnSetFromMainMenu )
		pFnSetFromMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 61524 ];

	UBioSFHandler_Credits_execSetFromMainMenu_Parms SetFromMainMenu_Parms;

	this->ProcessEvent ( pFnSetFromMainMenu, &SetFromMainMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.PopulateScrollingCredits
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Credits::PopulateScrollingCredits ( )
{
	static UFunction* pFnPopulateScrollingCredits = NULL;

	if ( ! pFnPopulateScrollingCredits )
		pFnPopulateScrollingCredits = (UFunction*) UObject::GObjObjects()->Data[ 61507 ];

	UBioSFHandler_Credits_execPopulateScrollingCredits_Parms PopulateScrollingCredits_Parms;

	this->ProcessEvent ( pFnPopulateScrollingCredits, &PopulateScrollingCredits_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.SendFlashingCredit
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Credits::SendFlashingCredit ( )
{
	static UFunction* pFnSendFlashingCredit = NULL;

	if ( ! pFnSendFlashingCredit )
		pFnSendFlashingCredit = (UFunction*) UObject::GObjObjects()->Data[ 61506 ];

	UBioSFHandler_Credits_execSendFlashingCredit_Parms SendFlashingCredit_Parms;

	this->ProcessEvent ( pFnSendFlashingCredit, &SendFlashingCredit_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.SetupCreditDetails
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Credits::SetupCreditDetails ( )
{
	static UFunction* pFnSetupCreditDetails = NULL;

	if ( ! pFnSetupCreditDetails )
		pFnSetupCreditDetails = (UFunction*) UObject::GObjObjects()->Data[ 61508 ];

	UBioSFHandler_Credits_execSetupCreditDetails_Parms SetupCreditDetails_Parms;

	this->ProcessEvent ( pFnSetupCreditDetails, &SetupCreditDetails_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Credits.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Credits::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61500 ];

	UBioSFHandler_Credits_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Credits.SetDataFromIniFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 m_sFileName                    ( CPF_Parm | CPF_NeedCtorLink )

bool UBioSFHandler_Credits::SetDataFromIniFile ( struct FString m_sFileName )
{
	static UFunction* pFnSetDataFromIniFile = NULL;

	if ( ! pFnSetDataFromIniFile )
		pFnSetDataFromIniFile = (UFunction*) UObject::GObjObjects()->Data[ 61497 ];

	UBioSFHandler_Credits_execSetDataFromIniFile_Parms SetDataFromIniFile_Parms;
	memcpy ( &SetDataFromIniFile_Parms.m_sFileName, &m_sFileName, 0x10 );

	pFnSetDataFromIniFile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDataFromIniFile, &SetDataFromIniFile_Parms, NULL );

	pFnSetDataFromIniFile->FunctionFlags |= 0x400;

	return SetDataFromIniFile_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DataCodex.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_DataCodex::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 61536 ];

	UBioSFHandler_DataCodex_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DataCodex.GoBackToMainMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_DataCodex::eventGoBackToMainMenu ( )
{
	static UFunction* pFnGoBackToMainMenu = NULL;

	if ( ! pFnGoBackToMainMenu )
		pFnGoBackToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 61534 ];

	UBioSFHandler_DataCodex_eventGoBackToMainMenu_Parms GoBackToMainMenu_Parms;

	this->ProcessEvent ( pFnGoBackToMainMenu, &GoBackToMainMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DataCodex.SetFromMainMenu
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_DataCodex::SetFromMainMenu ( )
{
	static UFunction* pFnSetFromMainMenu = NULL;

	if ( ! pFnSetFromMainMenu )
		pFnSetFromMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 61532 ];

	UBioSFHandler_DataCodex_execSetFromMainMenu_Parms SetFromMainMenu_Parms;

	this->ProcessEvent ( pFnSetFromMainMenu, &SetFromMainMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.EnableCameraMovement
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_DesignerUI::eventEnableCameraMovement ( )
{
	static UFunction* pFnEnableCameraMovement = NULL;

	if ( ! pFnEnableCameraMovement )
		pFnEnableCameraMovement = (UFunction*) UObject::GObjObjects()->Data[ 59647 ];

	UBioSFHandler_DesignerUI_eventEnableCameraMovement_Parms EnableCameraMovement_Parms;

	this->ProcessEvent ( pFnEnableCameraMovement, &EnableCameraMovement_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.DisableCameraMovement
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_DesignerUI::eventDisableCameraMovement ( )
{
	static UFunction* pFnDisableCameraMovement = NULL;

	if ( ! pFnDisableCameraMovement )
		pFnDisableCameraMovement = (UFunction*) UObject::GObjObjects()->Data[ 59645 ];

	UBioSFHandler_DesignerUI_eventDisableCameraMovement_Parms DisableCameraMovement_Parms;

	this->ProcessEvent ( pFnDisableCameraMovement, &DisableCameraMovement_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_DesignerUI::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 59640 ];

	UBioSFHandler_DesignerUI_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.PressedButtonAS
// [0x00020002] 
// Parameters infos:
// int                            btnIndex                       ( CPF_Parm )

void UBioSFHandler_DesignerUI::PressedButtonAS ( int btnIndex )
{
	static UFunction* pFnPressedButtonAS = NULL;

	if ( ! pFnPressedButtonAS )
		pFnPressedButtonAS = (UFunction*) UObject::GObjObjects()->Data[ 59638 ];

	UBioSFHandler_DesignerUI_execPressedButtonAS_Parms PressedButtonAS_Parms;
	PressedButtonAS_Parms.btnIndex = btnIndex;

	this->ProcessEvent ( pFnPressedButtonAS, &PressedButtonAS_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.MiniGameInput
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            nOutputLink                    ( CPF_Parm )

void UBioSFHandler_DesignerUI::MiniGameInput ( int nOutputLink )
{
	static UFunction* pFnMiniGameInput = NULL;

	if ( ! pFnMiniGameInput )
		pFnMiniGameInput = (UFunction*) UObject::GObjObjects()->Data[ 59626 ];

	UBioSFHandler_DesignerUI_execMiniGameInput_Parms MiniGameInput_Parms;
	MiniGameInput_Parms.nOutputLink = nOutputLink;

	this->ProcessEvent ( pFnMiniGameInput, &MiniGameInput_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_DesignerUI::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 59623 ];

	UBioSFHandler_DesignerUI_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DesignerUI.GetTimerValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bModalTimer                    ( CPF_Parm )

float UBioSFHandler_DesignerUI::GetTimerValue ( unsigned long bModalTimer )
{
	static UFunction* pFnGetTimerValue = NULL;

	if ( ! pFnGetTimerValue )
		pFnGetTimerValue = (UFunction*) UObject::GObjObjects()->Data[ 59620 ];

	UBioSFHandler_DesignerUI_execGetTimerValue_Parms GetTimerValue_Parms;
	GetTimerValue_Parms.bModalTimer = bModalTimer;

	pFnGetTimerValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimerValue, &GetTimerValue_Parms, NULL );

	pFnGetTimerValue->FunctionFlags |= 0x400;

	return GetTimerValue_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetTimerDetails
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModalTimer                    ( CPF_Parm )
// float                          fStartTime                     ( CPF_Parm )
// float                          fEndTime                       ( CPF_Parm )
// float                          fInterval                      ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetTimerDetails ( unsigned long bModalTimer, float fStartTime, float fEndTime, float fInterval )
{
	static UFunction* pFnSetTimerDetails = NULL;

	if ( ! pFnSetTimerDetails )
		pFnSetTimerDetails = (UFunction*) UObject::GObjObjects()->Data[ 59615 ];

	UBioSFHandler_DesignerUI_execSetTimerDetails_Parms SetTimerDetails_Parms;
	SetTimerDetails_Parms.bModalTimer = bModalTimer;
	SetTimerDetails_Parms.fStartTime = fStartTime;
	SetTimerDetails_Parms.fEndTime = fEndTime;
	SetTimerDetails_Parms.fInterval = fInterval;

	pFnSetTimerDetails->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTimerDetails, &SetTimerDetails_Parms, NULL );

	pFnSetTimerDetails->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.CheckLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_DesignerUI::CheckLayout ( unsigned long bShow )
{
	static UFunction* pFnCheckLayout = NULL;

	if ( ! pFnCheckLayout )
		pFnCheckLayout = (UFunction*) UObject::GObjObjects()->Data[ 59613 ];

	UBioSFHandler_DesignerUI_execCheckLayout_Parms CheckLayout_Parms;
	CheckLayout_Parms.bShow = bShow;

	pFnCheckLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLayout, &CheckLayout_Parms, NULL );

	pFnCheckLayout->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.IsToxinCureLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_DesignerUI::IsToxinCureLayout ( )
{
	static UFunction* pFnIsToxinCureLayout = NULL;

	if ( ! pFnIsToxinCureLayout )
		pFnIsToxinCureLayout = (UFunction*) UObject::GObjObjects()->Data[ 59611 ];

	UBioSFHandler_DesignerUI_execIsToxinCureLayout_Parms IsToxinCureLayout_Parms;

	pFnIsToxinCureLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsToxinCureLayout, &IsToxinCureLayout_Parms, NULL );

	pFnIsToxinCureLayout->FunctionFlags |= 0x400;

	return IsToxinCureLayout_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetToxinCureLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetToxinCureLayout ( unsigned long bShow )
{
	static UFunction* pFnSetToxinCureLayout = NULL;

	if ( ! pFnSetToxinCureLayout )
		pFnSetToxinCureLayout = (UFunction*) UObject::GObjObjects()->Data[ 59609 ];

	UBioSFHandler_DesignerUI_execSetToxinCureLayout_Parms SetToxinCureLayout_Parms;
	SetToxinCureLayout_Parms.bShow = bShow;

	pFnSetToxinCureLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetToxinCureLayout, &SetToxinCureLayout_Parms, NULL );

	pFnSetToxinCureLayout->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.IsMiraHanoiLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_DesignerUI::IsMiraHanoiLayout ( )
{
	static UFunction* pFnIsMiraHanoiLayout = NULL;

	if ( ! pFnIsMiraHanoiLayout )
		pFnIsMiraHanoiLayout = (UFunction*) UObject::GObjObjects()->Data[ 59607 ];

	UBioSFHandler_DesignerUI_execIsMiraHanoiLayout_Parms IsMiraHanoiLayout_Parms;

	pFnIsMiraHanoiLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMiraHanoiLayout, &IsMiraHanoiLayout_Parms, NULL );

	pFnIsMiraHanoiLayout->FunctionFlags |= 0x400;

	return IsMiraHanoiLayout_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetMiraHanoiLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetMiraHanoiLayout ( unsigned long bShow )
{
	static UFunction* pFnSetMiraHanoiLayout = NULL;

	if ( ! pFnSetMiraHanoiLayout )
		pFnSetMiraHanoiLayout = (UFunction*) UObject::GObjObjects()->Data[ 59605 ];

	UBioSFHandler_DesignerUI_execSetMiraHanoiLayout_Parms SetMiraHanoiLayout_Parms;
	SetMiraHanoiLayout_Parms.bShow = bShow;

	pFnSetMiraHanoiLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMiraHanoiLayout, &SetMiraHanoiLayout_Parms, NULL );

	pFnSetMiraHanoiLayout->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.IsLaserLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_DesignerUI::IsLaserLayout ( )
{
	static UFunction* pFnIsLaserLayout = NULL;

	if ( ! pFnIsLaserLayout )
		pFnIsLaserLayout = (UFunction*) UObject::GObjObjects()->Data[ 59603 ];

	UBioSFHandler_DesignerUI_execIsLaserLayout_Parms IsLaserLayout_Parms;

	pFnIsLaserLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLaserLayout, &IsLaserLayout_Parms, NULL );

	pFnIsLaserLayout->FunctionFlags |= 0x400;

	return IsLaserLayout_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetLaserCircle
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            CircleState                    ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_DesignerUI::SetLaserCircle ( int CircleState )
{
	static UFunction* pFnSetLaserCircle = NULL;

	if ( ! pFnSetLaserCircle )
		pFnSetLaserCircle = (UFunction*) UObject::GObjObjects()->Data[ 59601 ];

	UBioSFHandler_DesignerUI_execSetLaserCircle_Parms SetLaserCircle_Parms;
	SetLaserCircle_Parms.CircleState = CircleState;

	pFnSetLaserCircle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLaserCircle, &SetLaserCircle_Parms, NULL );

	pFnSetLaserCircle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetLaserLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetLaserLayout ( unsigned long bShow )
{
	static UFunction* pFnSetLaserLayout = NULL;

	if ( ! pFnSetLaserLayout )
		pFnSetLaserLayout = (UFunction*) UObject::GObjObjects()->Data[ 59599 ];

	UBioSFHandler_DesignerUI_execSetLaserLayout_Parms SetLaserLayout_Parms;
	SetLaserLayout_Parms.bShow = bShow;

	pFnSetLaserLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLaserLayout, &SetLaserLayout_Parms, NULL );

	pFnSetLaserLayout->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.IsQuasarLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_DesignerUI::IsQuasarLayout ( )
{
	static UFunction* pFnIsQuasarLayout = NULL;

	if ( ! pFnIsQuasarLayout )
		pFnIsQuasarLayout = (UFunction*) UObject::GObjObjects()->Data[ 59597 ];

	UBioSFHandler_DesignerUI_execIsQuasarLayout_Parms IsQuasarLayout_Parms;

	pFnIsQuasarLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsQuasarLayout, &IsQuasarLayout_Parms, NULL );

	pFnIsQuasarLayout->FunctionFlags |= 0x400;

	return IsQuasarLayout_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetQuasarLayout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetQuasarLayout ( unsigned long bShow )
{
	static UFunction* pFnSetQuasarLayout = NULL;

	if ( ! pFnSetQuasarLayout )
		pFnSetQuasarLayout = (UFunction*) UObject::GObjObjects()->Data[ 59595 ];

	UBioSFHandler_DesignerUI_execSetQuasarLayout_Parms SetQuasarLayout_Parms;
	SetQuasarLayout_Parms.bShow = bShow;

	pFnSetQuasarLayout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetQuasarLayout, &SetQuasarLayout_Parms, NULL );

	pFnSetQuasarLayout->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetBarFillDirection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModalBar                      ( CPF_Parm )
// unsigned long                  bLeftToRight                   ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetBarFillDirection ( unsigned long bModalBar, unsigned long bLeftToRight )
{
	static UFunction* pFnSetBarFillDirection = NULL;

	if ( ! pFnSetBarFillDirection )
		pFnSetBarFillDirection = (UFunction*) UObject::GObjObjects()->Data[ 59592 ];

	UBioSFHandler_DesignerUI_execSetBarFillDirection_Parms SetBarFillDirection_Parms;
	SetBarFillDirection_Parms.bModalBar = bModalBar;
	SetBarFillDirection_Parms.bLeftToRight = bLeftToRight;

	pFnSetBarFillDirection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBarFillDirection, &SetBarFillDirection_Parms, NULL );

	pFnSetBarFillDirection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetBarFillPercent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModalBar                      ( CPF_Parm )
// int                            nPercent                       ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetBarFillPercent ( unsigned long bModalBar, int nPercent )
{
	static UFunction* pFnSetBarFillPercent = NULL;

	if ( ! pFnSetBarFillPercent )
		pFnSetBarFillPercent = (UFunction*) UObject::GObjObjects()->Data[ 59589 ];

	UBioSFHandler_DesignerUI_execSetBarFillPercent_Parms SetBarFillPercent_Parms;
	SetBarFillPercent_Parms.bModalBar = bModalBar;
	SetBarFillPercent_Parms.nPercent = nPercent;

	pFnSetBarFillPercent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBarFillPercent, &SetBarFillPercent_Parms, NULL );

	pFnSetBarFillPercent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetBarMarkerPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModalBar                      ( CPF_Parm )
// int                            nMarker1                       ( CPF_Parm )
// int                            nMarker2                       ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetBarMarkerPoints ( unsigned long bModalBar, int nMarker1, int nMarker2 )
{
	static UFunction* pFnSetBarMarkerPoints = NULL;

	if ( ! pFnSetBarMarkerPoints )
		pFnSetBarMarkerPoints = (UFunction*) UObject::GObjObjects()->Data[ 59585 ];

	UBioSFHandler_DesignerUI_execSetBarMarkerPoints_Parms SetBarMarkerPoints_Parms;
	SetBarMarkerPoints_Parms.bModalBar = bModalBar;
	SetBarMarkerPoints_Parms.nMarker1 = nMarker1;
	SetBarMarkerPoints_Parms.nMarker2 = nMarker2;

	pFnSetBarMarkerPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBarMarkerPoints, &SetBarMarkerPoints_Parms, NULL );

	pFnSetBarMarkerPoints->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetCounterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModalCounter                  ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetCounterValue ( unsigned long bModalCounter, int nValue )
{
	static UFunction* pFnSetCounterValue = NULL;

	if ( ! pFnSetCounterValue )
		pFnSetCounterValue = (UFunction*) UObject::GObjObjects()->Data[ 59582 ];

	UBioSFHandler_DesignerUI_execSetCounterValue_Parms SetCounterValue_Parms;
	SetCounterValue_Parms.bModalCounter = bModalCounter;
	SetCounterValue_Parms.nValue = nValue;

	pFnSetCounterValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCounterValue, &SetCounterValue_Parms, NULL );

	pFnSetCounterValue->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetElementText
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )
// struct FString                 sText                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_DesignerUI::SetElementText ( unsigned char nElement, struct FString* sText )
{
	static UFunction* pFnSetElementText = NULL;

	if ( ! pFnSetElementText )
		pFnSetElementText = (UFunction*) UObject::GObjObjects()->Data[ 59579 ];

	UBioSFHandler_DesignerUI_execSetElementText_Parms SetElementText_Parms;
	SetElementText_Parms.nElement = nElement;

	pFnSetElementText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetElementText, &SetElementText_Parms, NULL );

	pFnSetElementText->FunctionFlags |= 0x400;

	if ( sText )
		memcpy ( sText, &SetElementText_Parms.sText, 0x10 );
};

// Function SFXGame.BioSFHandler_DesignerUI.SetTextStringRef
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )
// int                            srText                         ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetTextStringRef ( unsigned char nElement, int srText )
{
	static UFunction* pFnSetTextStringRef = NULL;

	if ( ! pFnSetTextStringRef )
		pFnSetTextStringRef = (UFunction*) UObject::GObjObjects()->Data[ 59576 ];

	UBioSFHandler_DesignerUI_execSetTextStringRef_Parms SetTextStringRef_Parms;
	SetTextStringRef_Parms.nElement = nElement;
	SetTextStringRef_Parms.srText = srText;

	pFnSetTextStringRef->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTextStringRef, &SetTextStringRef_Parms, NULL );

	pFnSetTextStringRef->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.ClearElementPulse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )

void UBioSFHandler_DesignerUI::ClearElementPulse ( unsigned char nElement )
{
	static UFunction* pFnClearElementPulse = NULL;

	if ( ! pFnClearElementPulse )
		pFnClearElementPulse = (UFunction*) UObject::GObjObjects()->Data[ 59574 ];

	UBioSFHandler_DesignerUI_execClearElementPulse_Parms ClearElementPulse_Parms;
	ClearElementPulse_Parms.nElement = nElement;

	pFnClearElementPulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearElementPulse, &ClearElementPulse_Parms, NULL );

	pFnClearElementPulse->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetupElementPulse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nElement                       ( CPF_Parm )
// float                          fMinAlpha                      ( CPF_Parm )
// float                          fCycleTime                     ( CPF_Parm )

int UBioSFHandler_DesignerUI::SetupElementPulse ( unsigned char nElement, float fMinAlpha, float fCycleTime )
{
	static UFunction* pFnSetupElementPulse = NULL;

	if ( ! pFnSetupElementPulse )
		pFnSetupElementPulse = (UFunction*) UObject::GObjObjects()->Data[ 59569 ];

	UBioSFHandler_DesignerUI_execSetupElementPulse_Parms SetupElementPulse_Parms;
	SetupElementPulse_Parms.nElement = nElement;
	SetupElementPulse_Parms.fMinAlpha = fMinAlpha;
	SetupElementPulse_Parms.fCycleTime = fCycleTime;

	pFnSetupElementPulse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupElementPulse, &SetupElementPulse_Parms, NULL );

	pFnSetupElementPulse->FunctionFlags |= 0x400;

	return SetupElementPulse_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetElementAlpha
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )
// float                          fAlpha                         ( CPF_Parm )

void UBioSFHandler_DesignerUI::SetElementAlpha ( unsigned char nElement, float fAlpha )
{
	static UFunction* pFnSetElementAlpha = NULL;

	if ( ! pFnSetElementAlpha )
		pFnSetElementAlpha = (UFunction*) UObject::GObjObjects()->Data[ 59566 ];

	UBioSFHandler_DesignerUI_execSetElementAlpha_Parms SetElementAlpha_Parms;
	SetElementAlpha_Parms.nElement = nElement;
	SetElementAlpha_Parms.fAlpha = fAlpha;

	pFnSetElementAlpha->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetElementAlpha, &SetElementAlpha_Parms, NULL );

	pFnSetElementAlpha->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.SetElementColor
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )
// struct FColor                  stColor                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_DesignerUI::SetElementColor ( unsigned char nElement, struct FColor* stColor )
{
	static UFunction* pFnSetElementColor = NULL;

	if ( ! pFnSetElementColor )
		pFnSetElementColor = (UFunction*) UObject::GObjObjects()->Data[ 59563 ];

	UBioSFHandler_DesignerUI_execSetElementColor_Parms SetElementColor_Parms;
	SetElementColor_Parms.nElement = nElement;

	pFnSetElementColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetElementColor, &SetElementColor_Parms, NULL );

	pFnSetElementColor->FunctionFlags |= 0x400;

	if ( stColor )
		memcpy ( stColor, &SetElementColor_Parms.stColor, 0x4 );
};

// Function SFXGame.BioSFHandler_DesignerUI.SetElementVisible
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nElement                       ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )
// float                          fFadeTime                      ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_DesignerUI::SetElementVisible ( unsigned char nElement, unsigned long bVisible, float fFadeTime )
{
	static UFunction* pFnSetElementVisible = NULL;

	if ( ! pFnSetElementVisible )
		pFnSetElementVisible = (UFunction*) UObject::GObjObjects()->Data[ 59559 ];

	UBioSFHandler_DesignerUI_execSetElementVisible_Parms SetElementVisible_Parms;
	SetElementVisible_Parms.nElement = nElement;
	SetElementVisible_Parms.bVisible = bVisible;
	SetElementVisible_Parms.fFadeTime = fFadeTime;

	pFnSetElementVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetElementVisible, &SetElementVisible_Parms, NULL );

	pFnSetElementVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DesignerUI.IsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bModal                         ( CPF_Parm )

bool UBioSFHandler_DesignerUI::IsActive ( unsigned long bModal )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 59509 ];

	UBioSFHandler_DesignerUI_execIsActive_Parms IsActive_Parms;
	IsActive_Parms.bModal = bModal;

	pFnIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	pFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_DesignerUI.ClearAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bModal                         ( CPF_Parm )

void UBioSFHandler_DesignerUI::ClearAll ( unsigned long bModal )
{
	static UFunction* pFnClearAll = NULL;

	if ( ! pFnClearAll )
		pFnClearAll = (UFunction*) UObject::GObjObjects()->Data[ 59556 ];

	UBioSFHandler_DesignerUI_execClearAll_Parms ClearAll_Parms;
	ClearAll_Parms.bModal = bModal;

	pFnClearAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearAll, &ClearAll_Parms, NULL );

	pFnClearAll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.SetCancelDelegateEx
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   nmFunction                     ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioSFHandler_DeviceSelection::SetCancelDelegateEx ( struct FName nmFunction, class UObject* pTarget )
{
	static UFunction* pFnSetCancelDelegateEx = NULL;

	if ( ! pFnSetCancelDelegateEx )
		pFnSetCancelDelegateEx = (UFunction*) UObject::GObjObjects()->Data[ 61565 ];

	UBioSFHandler_DeviceSelection_execSetCancelDelegateEx_Parms SetCancelDelegateEx_Parms;
	memcpy ( &SetCancelDelegateEx_Parms.nmFunction, &nmFunction, 0x8 );
	SetCancelDelegateEx_Parms.pTarget = pTarget;

	pFnSetCancelDelegateEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCancelDelegateEx, &SetCancelDelegateEx_Parms, NULL );

	pFnSetCancelDelegateEx->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.SetCancelDelegate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_DeviceSelection::SetCancelDelegate ( struct FScriptDelegate pDelegate )
{
	static UFunction* pFnSetCancelDelegate = NULL;

	if ( ! pFnSetCancelDelegate )
		pFnSetCancelDelegate = (UFunction*) UObject::GObjObjects()->Data[ 61563 ];

	UBioSFHandler_DeviceSelection_execSetCancelDelegate_Parms SetCancelDelegate_Parms;
	memcpy ( &SetCancelDelegate_Parms.pDelegate, &pDelegate, 0x10 );

	pFnSetCancelDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCancelDelegate, &SetCancelDelegate_Parms, NULL );

	pFnSetCancelDelegate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.SetCompletionDelegateEx
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   nmFunction                     ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioSFHandler_DeviceSelection::SetCompletionDelegateEx ( struct FName nmFunction, class UObject* pTarget )
{
	static UFunction* pFnSetCompletionDelegateEx = NULL;

	if ( ! pFnSetCompletionDelegateEx )
		pFnSetCompletionDelegateEx = (UFunction*) UObject::GObjObjects()->Data[ 61560 ];

	UBioSFHandler_DeviceSelection_execSetCompletionDelegateEx_Parms SetCompletionDelegateEx_Parms;
	memcpy ( &SetCompletionDelegateEx_Parms.nmFunction, &nmFunction, 0x8 );
	SetCompletionDelegateEx_Parms.pTarget = pTarget;

	pFnSetCompletionDelegateEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCompletionDelegateEx, &SetCompletionDelegateEx_Parms, NULL );

	pFnSetCompletionDelegateEx->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.SetCompletionDelegate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_DeviceSelection::SetCompletionDelegate ( struct FScriptDelegate pDelegate )
{
	static UFunction* pFnSetCompletionDelegate = NULL;

	if ( ! pFnSetCompletionDelegate )
		pFnSetCompletionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 61558 ];

	UBioSFHandler_DeviceSelection_execSetCompletionDelegate_Parms SetCompletionDelegate_Parms;
	memcpy ( &SetCompletionDelegate_Parms.pDelegate, &pDelegate, 0x10 );

	pFnSetCompletionDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCompletionDelegate, &SetCompletionDelegate_Parms, NULL );

	pFnSetCompletionDelegate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.DisplayDeviceSelection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// int                            SizeNeeded                     ( CPF_Parm )
// unsigned long                  bForceShowUI                   ( CPF_Parm )

void UBioSFHandler_DeviceSelection::DisplayDeviceSelection ( unsigned char LocalUserNum, int SizeNeeded, unsigned long bForceShowUI )
{
	static UFunction* pFnDisplayDeviceSelection = NULL;

	if ( ! pFnDisplayDeviceSelection )
		pFnDisplayDeviceSelection = (UFunction*) UObject::GObjObjects()->Data[ 61554 ];

	UBioSFHandler_DeviceSelection_execDisplayDeviceSelection_Parms DisplayDeviceSelection_Parms;
	DisplayDeviceSelection_Parms.LocalUserNum = LocalUserNum;
	DisplayDeviceSelection_Parms.SizeNeeded = SizeNeeded;
	DisplayDeviceSelection_Parms.bForceShowUI = bForceShowUI;

	pFnDisplayDeviceSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDeviceSelection, &DisplayDeviceSelection_Parms, NULL );

	pFnDisplayDeviceSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_DeviceSelection.CancelCallback
// [0x00120000] 
// Parameters infos:
// int                            i_dwDeviceSelectionId          ( CPF_Parm )

void UBioSFHandler_DeviceSelection::CancelCallback ( int i_dwDeviceSelectionId )
{
	static UFunction* pFnCancelCallback = NULL;

	if ( ! pFnCancelCallback )
		pFnCancelCallback = (UFunction*) UObject::GObjObjects()->Data[ 61552 ];

	UBioSFHandler_DeviceSelection_execCancelCallback_Parms CancelCallback_Parms;
	CancelCallback_Parms.i_dwDeviceSelectionId = i_dwDeviceSelectionId;

	this->ProcessEvent ( pFnCancelCallback, &CancelCallback_Parms, NULL );
};

// Function SFXGame.BioSFHandler_DeviceSelection.CompletionCallback
// [0x00120000] 
// Parameters infos:
// int                            i_dwDeviceSelectionId          ( CPF_Parm )

void UBioSFHandler_DeviceSelection::CompletionCallback ( int i_dwDeviceSelectionId )
{
	static UFunction* pFnCompletionCallback = NULL;

	if ( ! pFnCompletionCallback )
		pFnCompletionCallback = (UFunction*) UObject::GObjObjects()->Data[ 61550 ];

	UBioSFHandler_DeviceSelection_execCompletionCallback_Parms CompletionCallback_Parms;
	CompletionCallback_Parms.i_dwDeviceSelectionId = i_dwDeviceSelectionId;

	this->ProcessEvent ( pFnCompletionCallback, &CompletionCallback_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GalaxyMap.TravelConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_GalaxyMap::TravelConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnTravelConfirm = NULL;

	if ( ! pFnTravelConfirm )
		pFnTravelConfirm = (UFunction*) UObject::GObjObjects()->Data[ 61583 ];

	UBioSFHandler_GalaxyMap_execTravelConfirm_Parms TravelConfirm_Parms;
	TravelConfirm_Parms.bAPressed = bAPressed;
	TravelConfirm_Parms.nContext = nContext;

	pFnTravelConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTravelConfirm, &TravelConfirm_Parms, NULL );

	pFnTravelConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_GalaxyMap.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_GalaxyMap::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 61578 ];

	UBioSFHandler_GalaxyMap_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GameOver.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_GameOver::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 61620 ];

	UBioSFHandler_GameOver_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GameOver.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_GameOver::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61618 ];

	UBioSFHandler_GameOver_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GameOver.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_GameOver::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61617 ];

	UBioSFHandler_GameOver_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GameOver.GotoMainMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_GameOver::GotoMainMenu ( )
{
	static UFunction* pFnGotoMainMenu = NULL;

	if ( ! pFnGotoMainMenu )
		pFnGotoMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 61616 ];

	UBioSFHandler_GameOver_execGotoMainMenu_Parms GotoMainMenu_Parms;

	pFnGotoMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGotoMainMenu, &GotoMainMenu_Parms, NULL );

	pFnGotoMainMenu->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_GameOver.SetupGameOver
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_GameOver::SetupGameOver ( )
{
	static UFunction* pFnSetupGameOver = NULL;

	if ( ! pFnSetupGameOver )
		pFnSetupGameOver = (UFunction*) UObject::GObjObjects()->Data[ 61609 ];

	UBioSFHandler_GameOver_execSetupGameOver_Parms SetupGameOver_Parms;

	this->ProcessEvent ( pFnSetupGameOver, &SetupGameOver_Parms, NULL );
};

// Function SFXGame.BioSFHandler_GameOver.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_GameOver::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61600 ];

	UBioSFHandler_GameOver_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_HUD.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_HUD::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61797 ];

	UBioSFHandler_HUD_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.GetVariableObject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UGFxValue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Path                           ( CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  Type                           ( CPF_OptionalParm | CPF_Parm )

class UGFxValue* UBioSFHandler_HUD::GetVariableObject ( struct FString Path, class UClass* Type )
{
	static UFunction* pFnGetVariableObject = NULL;

	if ( ! pFnGetVariableObject )
		pFnGetVariableObject = (UFunction*) UObject::GObjObjects()->Data[ 61793 ];

	UBioSFHandler_HUD_execGetVariableObject_Parms GetVariableObject_Parms;
	memcpy ( &GetVariableObject_Parms.Path, &Path, 0x10 );
	GetVariableObject_Parms.Type = Type;

	pFnGetVariableObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVariableObject, &GetVariableObject_Parms, NULL );

	pFnGetVariableObject->FunctionFlags |= 0x400;

	return GetVariableObject_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.UpdateStormWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPlayerInput*         oPlayerInput                   ( CPF_Parm )
// class ABioPlayerController*    oCtrl                          ( CPF_Parm )

void UBioSFHandler_HUD::UpdateStormWidget ( class UBioPlayerInput* oPlayerInput, class ABioPlayerController* oCtrl )
{
	static UFunction* pFnUpdateStormWidget = NULL;

	if ( ! pFnUpdateStormWidget )
		pFnUpdateStormWidget = (UFunction*) UObject::GObjObjects()->Data[ 61790 ];

	UBioSFHandler_HUD_execUpdateStormWidget_Parms UpdateStormWidget_Parms;
	UpdateStormWidget_Parms.oPlayerInput = oPlayerInput;
	UpdateStormWidget_Parms.oCtrl = oCtrl;

	pFnUpdateStormWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStormWidget, &UpdateStormWidget_Parms, NULL );

	pFnUpdateStormWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateXPTotalWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nDelta                         ( CPF_Parm )
// int                            nNewTotal                      ( CPF_Parm )

void UBioSFHandler_HUD::UpdateXPTotalWidget ( int nDelta, int nNewTotal )
{
	static UFunction* pFnUpdateXPTotalWidget = NULL;

	if ( ! pFnUpdateXPTotalWidget )
		pFnUpdateXPTotalWidget = (UFunction*) UObject::GObjObjects()->Data[ 61787 ];

	UBioSFHandler_HUD_execUpdateXPTotalWidget_Parms UpdateXPTotalWidget_Parms;
	UpdateXPTotalWidget_Parms.nDelta = nDelta;
	UpdateXPTotalWidget_Parms.nNewTotal = nNewTotal;

	pFnUpdateXPTotalWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateXPTotalWidget, &UpdateXPTotalWidget_Parms, NULL );

	pFnUpdateXPTotalWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateIconDumpWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEventNotifier*       oEventNotifier                 ( CPF_Parm )

void UBioSFHandler_HUD::UpdateIconDumpWidget ( class UBioEventNotifier* oEventNotifier )
{
	static UFunction* pFnUpdateIconDumpWidget = NULL;

	if ( ! pFnUpdateIconDumpWidget )
		pFnUpdateIconDumpWidget = (UFunction*) UObject::GObjObjects()->Data[ 61785 ];

	UBioSFHandler_HUD_execUpdateIconDumpWidget_Parms UpdateIconDumpWidget_Parms;
	UpdateIconDumpWidget_Parms.oEventNotifier = oEventNotifier;

	pFnUpdateIconDumpWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateIconDumpWidget, &UpdateIconDumpWidget_Parms, NULL );

	pFnUpdateIconDumpWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.DerivePowerBarPercentage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eBehaviorType                  ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm )

int UBioSFHandler_HUD::DerivePowerBarPercentage ( unsigned char eBehaviorType, class UBioPower* oPower )
{
	static UFunction* pFnDerivePowerBarPercentage = NULL;

	if ( ! pFnDerivePowerBarPercentage )
		pFnDerivePowerBarPercentage = (UFunction*) UObject::GObjObjects()->Data[ 61781 ];

	UBioSFHandler_HUD_execDerivePowerBarPercentage_Parms DerivePowerBarPercentage_Parms;
	DerivePowerBarPercentage_Parms.eBehaviorType = eBehaviorType;
	DerivePowerBarPercentage_Parms.oPower = oPower;

	pFnDerivePowerBarPercentage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDerivePowerBarPercentage, &DerivePowerBarPercentage_Parms, NULL );

	pFnDerivePowerBarPercentage->FunctionFlags |= 0x400;

	return DerivePowerBarPercentage_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.DeriveComplexPowerBehaviorType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPower*               oPower                         ( CPF_Parm )

unsigned char UBioSFHandler_HUD::DeriveComplexPowerBehaviorType ( class UBioPower* oPower )
{
	static UFunction* pFnDeriveComplexPowerBehaviorType = NULL;

	if ( ! pFnDeriveComplexPowerBehaviorType )
		pFnDeriveComplexPowerBehaviorType = (UFunction*) UObject::GObjObjects()->Data[ 61778 ];

	UBioSFHandler_HUD_execDeriveComplexPowerBehaviorType_Parms DeriveComplexPowerBehaviorType_Parms;
	DeriveComplexPowerBehaviorType_Parms.oPower = oPower;

	pFnDeriveComplexPowerBehaviorType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeriveComplexPowerBehaviorType, &DeriveComplexPowerBehaviorType_Parms, NULL );

	pFnDeriveComplexPowerBehaviorType->FunctionFlags |= 0x400;

	return DeriveComplexPowerBehaviorType_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.UpdateCustomMappingWidget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eMapSlot                       ( CPF_Parm )
// class ABioPlayerController*    oPlayerCtrl                    ( CPF_Parm )
// class ABioPawn*                oTarget                        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_HUD::UpdateCustomMappingWidget ( unsigned char eMapSlot, class ABioPlayerController* oPlayerCtrl, class ABioPawn* oTarget )
{
	static UFunction* pFnUpdateCustomMappingWidget = NULL;

	if ( ! pFnUpdateCustomMappingWidget )
		pFnUpdateCustomMappingWidget = (UFunction*) UObject::GObjObjects()->Data[ 61774 ];

	UBioSFHandler_HUD_execUpdateCustomMappingWidget_Parms UpdateCustomMappingWidget_Parms;
	UpdateCustomMappingWidget_Parms.eMapSlot = eMapSlot;
	UpdateCustomMappingWidget_Parms.oPlayerCtrl = oPlayerCtrl;
	UpdateCustomMappingWidget_Parms.oTarget = oTarget;

	pFnUpdateCustomMappingWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCustomMappingWidget, &UpdateCustomMappingWidget_Parms, NULL );

	pFnUpdateCustomMappingWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateAllCustomMappingWidgets
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioPlayerInput*         pPlayerInput                   ( CPF_Parm )
// class ABioPlayerController*    oPlayerCtrl                    ( CPF_Parm )
// class ABioPawn*                oTarget                        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_HUD::UpdateAllCustomMappingWidgets ( class UBioPlayerInput* pPlayerInput, class ABioPlayerController* oPlayerCtrl, class ABioPawn* oTarget )
{
	static UFunction* pFnUpdateAllCustomMappingWidgets = NULL;

	if ( ! pFnUpdateAllCustomMappingWidgets )
		pFnUpdateAllCustomMappingWidgets = (UFunction*) UObject::GObjObjects()->Data[ 61770 ];

	UBioSFHandler_HUD_execUpdateAllCustomMappingWidgets_Parms UpdateAllCustomMappingWidgets_Parms;
	UpdateAllCustomMappingWidgets_Parms.pPlayerInput = pPlayerInput;
	UpdateAllCustomMappingWidgets_Parms.oPlayerCtrl = oPlayerCtrl;
	UpdateAllCustomMappingWidgets_Parms.oTarget = oTarget;

	pFnUpdateAllCustomMappingWidgets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAllCustomMappingWidgets, &UpdateAllCustomMappingWidgets_Parms, NULL );

	pFnUpdateAllCustomMappingWidgets->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulateCommandsFromPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulateCommandsFromPawn ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulateCommandsFromPawn = NULL;

	if ( ! pFnPopulateCommandsFromPawn )
		pFnPopulateCommandsFromPawn = (UFunction*) UObject::GObjObjects()->Data[ 61767 ];

	UBioSFHandler_HUD_execPopulateCommandsFromPawn_Parms PopulateCommandsFromPawn_Parms;
	PopulateCommandsFromPawn_Parms.oPlayer = oPlayer;
	PopulateCommandsFromPawn_Parms.nPawnIndex = nPawnIndex;

	pFnPopulateCommandsFromPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateCommandsFromPawn, &PopulateCommandsFromPawn_Parms, NULL );

	pFnPopulateCommandsFromPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulatePowersFromPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulatePowersFromPawn ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulatePowersFromPawn = NULL;

	if ( ! pFnPopulatePowersFromPawn )
		pFnPopulatePowersFromPawn = (UFunction*) UObject::GObjObjects()->Data[ 61764 ];

	UBioSFHandler_HUD_execPopulatePowersFromPawn_Parms PopulatePowersFromPawn_Parms;
	PopulatePowersFromPawn_Parms.oPlayer = oPlayer;
	PopulatePowersFromPawn_Parms.nPawnIndex = nPawnIndex;

	pFnPopulatePowersFromPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulatePowersFromPawn, &PopulatePowersFromPawn_Parms, NULL );

	pFnPopulatePowersFromPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulatePowerFromPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )
// int                            nPowerIndex                    ( CPF_Parm )

void UBioSFHandler_HUD::PopulatePowerFromPawn ( class ABioPawn* oPlayer, int nPawnIndex, int nPowerIndex )
{
	static UFunction* pFnPopulatePowerFromPawn = NULL;

	if ( ! pFnPopulatePowerFromPawn )
		pFnPopulatePowerFromPawn = (UFunction*) UObject::GObjObjects()->Data[ 61760 ];

	UBioSFHandler_HUD_execPopulatePowerFromPawn_Parms PopulatePowerFromPawn_Parms;
	PopulatePowerFromPawn_Parms.oPlayer = oPlayer;
	PopulatePowerFromPawn_Parms.nPawnIndex = nPawnIndex;
	PopulatePowerFromPawn_Parms.nPowerIndex = nPowerIndex;

	pFnPopulatePowerFromPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulatePowerFromPawn, &PopulatePowerFromPawn_Parms, NULL );

	pFnPopulatePowerFromPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulateArmorEmitterPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulateArmorEmitterPower ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulateArmorEmitterPower = NULL;

	if ( ! pFnPopulateArmorEmitterPower )
		pFnPopulateArmorEmitterPower = (UFunction*) UObject::GObjObjects()->Data[ 61757 ];

	UBioSFHandler_HUD_execPopulateArmorEmitterPower_Parms PopulateArmorEmitterPower_Parms;
	PopulateArmorEmitterPower_Parms.oPlayer = oPlayer;
	PopulateArmorEmitterPower_Parms.nPawnIndex = nPawnIndex;

	pFnPopulateArmorEmitterPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateArmorEmitterPower, &PopulateArmorEmitterPower_Parms, NULL );

	pFnPopulateArmorEmitterPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulateWeaponAltPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulateWeaponAltPower ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulateWeaponAltPower = NULL;

	if ( ! pFnPopulateWeaponAltPower )
		pFnPopulateWeaponAltPower = (UFunction*) UObject::GObjObjects()->Data[ 61754 ];

	UBioSFHandler_HUD_execPopulateWeaponAltPower_Parms PopulateWeaponAltPower_Parms;
	PopulateWeaponAltPower_Parms.oPlayer = oPlayer;
	PopulateWeaponAltPower_Parms.nPawnIndex = nPawnIndex;

	pFnPopulateWeaponAltPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateWeaponAltPower, &PopulateWeaponAltPower_Parms, NULL );

	pFnPopulateWeaponAltPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulateHealPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulateHealPower ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulateHealPower = NULL;

	if ( ! pFnPopulateHealPower )
		pFnPopulateHealPower = (UFunction*) UObject::GObjObjects()->Data[ 61751 ];

	UBioSFHandler_HUD_execPopulateHealPower_Parms PopulateHealPower_Parms;
	PopulateHealPower_Parms.oPlayer = oPlayer;
	PopulateHealPower_Parms.nPawnIndex = nPawnIndex;

	pFnPopulateHealPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateHealPower, &PopulateHealPower_Parms, NULL );

	pFnPopulateHealPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PopulateGrenadePower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPlayer                        ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::PopulateGrenadePower ( class ABioPawn* oPlayer, int nPawnIndex )
{
	static UFunction* pFnPopulateGrenadePower = NULL;

	if ( ! pFnPopulateGrenadePower )
		pFnPopulateGrenadePower = (UFunction*) UObject::GObjObjects()->Data[ 61748 ];

	UBioSFHandler_HUD_execPopulateGrenadePower_Parms PopulateGrenadePower_Parms;
	PopulateGrenadePower_Parms.oPlayer = oPlayer;
	PopulateGrenadePower_Parms.nPawnIndex = nPawnIndex;

	pFnPopulateGrenadePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateGrenadePower, &PopulateGrenadePower_Parms, NULL );

	pFnPopulateGrenadePower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.SetPowerPadMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eMode                          ( CPF_Parm )

void UBioSFHandler_HUD::SetPowerPadMode ( unsigned char eMode )
{
	static UFunction* pFnSetPowerPadMode = NULL;

	if ( ! pFnSetPowerPadMode )
		pFnSetPowerPadMode = (UFunction*) UObject::GObjObjects()->Data[ 61746 ];

	UBioSFHandler_HUD_execSetPowerPadMode_Parms SetPowerPadMode_Parms;
	SetPowerPadMode_Parms.eMode = eMode;

	pFnSetPowerPadMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPowerPadMode, &SetPowerPadMode_Parms, NULL );

	pFnSetPowerPadMode->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateMinimapWidget
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_HUD::UpdateMinimapWidget ( )
{
	static UFunction* pFnUpdateMinimapWidget = NULL;

	if ( ! pFnUpdateMinimapWidget )
		pFnUpdateMinimapWidget = (UFunction*) UObject::GObjObjects()->Data[ 61745 ];

	UBioSFHandler_HUD_execUpdateMinimapWidget_Parms UpdateMinimapWidget_Parms;

	this->ProcessEvent ( pFnUpdateMinimapWidget, &UpdateMinimapWidget_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.SetSquadStatusWidgetInvisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::SetSquadStatusWidgetInvisible ( )
{
	static UFunction* pFnSetSquadStatusWidgetInvisible = NULL;

	if ( ! pFnSetSquadStatusWidgetInvisible )
		pFnSetSquadStatusWidgetInvisible = (UFunction*) UObject::GObjObjects()->Data[ 61744 ];

	UBioSFHandler_HUD_execSetSquadStatusWidgetInvisible_Parms SetSquadStatusWidgetInvisible_Parms;

	pFnSetSquadStatusWidgetInvisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSquadStatusWidgetInvisible, &SetSquadStatusWidgetInvisible_Parms, NULL );

	pFnSetSquadStatusWidgetInvisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.SetSquadStatusWidgetVisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::SetSquadStatusWidgetVisible ( )
{
	static UFunction* pFnSetSquadStatusWidgetVisible = NULL;

	if ( ! pFnSetSquadStatusWidgetVisible )
		pFnSetSquadStatusWidgetVisible = (UFunction*) UObject::GObjObjects()->Data[ 61743 ];

	UBioSFHandler_HUD_execSetSquadStatusWidgetVisible_Parms SetSquadStatusWidgetVisible_Parms;

	pFnSetSquadStatusWidgetVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSquadStatusWidgetVisible, &SetSquadStatusWidgetVisible_Parms, NULL );

	pFnSetSquadStatusWidgetVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.DeriveNameIconRef
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSourceRef                     ( CPF_Parm )

int UBioSFHandler_HUD::DeriveNameIconRef ( int nSourceRef )
{
	static UFunction* pFnDeriveNameIconRef = NULL;

	if ( ! pFnDeriveNameIconRef )
		pFnDeriveNameIconRef = (UFunction*) UObject::GObjObjects()->Data[ 61740 ];

	UBioSFHandler_HUD_execDeriveNameIconRef_Parms DeriveNameIconRef_Parms;
	DeriveNameIconRef_Parms.nSourceRef = nSourceRef;

	pFnDeriveNameIconRef->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeriveNameIconRef, &DeriveNameIconRef_Parms, NULL );

	pFnDeriveNameIconRef->FunctionFlags |= 0x400;

	return DeriveNameIconRef_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.UpdateSquadFormationWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::UpdateSquadFormationWidget ( )
{
	static UFunction* pFnUpdateSquadFormationWidget = NULL;

	if ( ! pFnUpdateSquadFormationWidget )
		pFnUpdateSquadFormationWidget = (UFunction*) UObject::GObjObjects()->Data[ 61739 ];

	UBioSFHandler_HUD_execUpdateSquadFormationWidget_Parms UpdateSquadFormationWidget_Parms;

	pFnUpdateSquadFormationWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSquadFormationWidget, &UpdateSquadFormationWidget_Parms, NULL );

	pFnUpdateSquadFormationWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.GetHenchmanFormation
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSquadIndex                    ( CPF_Parm )

unsigned char UBioSFHandler_HUD::GetHenchmanFormation ( int nSquadIndex )
{
	static UFunction* pFnGetHenchmanFormation = NULL;

	if ( ! pFnGetHenchmanFormation )
		pFnGetHenchmanFormation = (UFunction*) UObject::GObjObjects()->Data[ 61736 ];

	UBioSFHandler_HUD_execGetHenchmanFormation_Parms GetHenchmanFormation_Parms;
	GetHenchmanFormation_Parms.nSquadIndex = nSquadIndex;

	pFnGetHenchmanFormation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHenchmanFormation, &GetHenchmanFormation_Parms, NULL );

	pFnGetHenchmanFormation->FunctionFlags |= 0x400;

	return GetHenchmanFormation_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.UpdateSquadStatusWidgets
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::UpdateSquadStatusWidgets ( )
{
	static UFunction* pFnUpdateSquadStatusWidgets = NULL;

	if ( ! pFnUpdateSquadStatusWidgets )
		pFnUpdateSquadStatusWidgets = (UFunction*) UObject::GObjObjects()->Data[ 61735 ];

	UBioSFHandler_HUD_execUpdateSquadStatusWidgets_Parms UpdateSquadStatusWidgets_Parms;

	pFnUpdateSquadStatusWidgets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSquadStatusWidgets, &UpdateSquadStatusWidgets_Parms, NULL );

	pFnUpdateSquadStatusWidgets->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.SiftPlayerSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::SiftPlayerSquad ( )
{
	static UFunction* pFnSiftPlayerSquad = NULL;

	if ( ! pFnSiftPlayerSquad )
		pFnSiftPlayerSquad = (UFunction*) UObject::GObjObjects()->Data[ 61734 ];

	UBioSFHandler_HUD_execSiftPlayerSquad_Parms SiftPlayerSquad_Parms;

	pFnSiftPlayerSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSiftPlayerSquad, &SiftPlayerSquad_Parms, NULL );

	pFnSiftPlayerSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.SetVehicleStatusWidgetVisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::SetVehicleStatusWidgetVisible ( )
{
	static UFunction* pFnSetVehicleStatusWidgetVisible = NULL;

	if ( ! pFnSetVehicleStatusWidgetVisible )
		pFnSetVehicleStatusWidgetVisible = (UFunction*) UObject::GObjObjects()->Data[ 61733 ];

	UBioSFHandler_HUD_execSetVehicleStatusWidgetVisible_Parms SetVehicleStatusWidgetVisible_Parms;

	pFnSetVehicleStatusWidgetVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVehicleStatusWidgetVisible, &SetVehicleStatusWidgetVisible_Parms, NULL );

	pFnSetVehicleStatusWidgetVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateVehicleStatusWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVehicleBase*         oVehicle                       ( CPF_Parm )

void UBioSFHandler_HUD::UpdateVehicleStatusWidget ( class ABioVehicleBase* oVehicle )
{
	static UFunction* pFnUpdateVehicleStatusWidget = NULL;

	if ( ! pFnUpdateVehicleStatusWidget )
		pFnUpdateVehicleStatusWidget = (UFunction*) UObject::GObjObjects()->Data[ 61731 ];

	UBioSFHandler_HUD_execUpdateVehicleStatusWidget_Parms UpdateVehicleStatusWidget_Parms;
	UpdateVehicleStatusWidget_Parms.oVehicle = oVehicle;

	pFnUpdateVehicleStatusWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVehicleStatusWidget, &UpdateVehicleStatusWidget_Parms, NULL );

	pFnUpdateVehicleStatusWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateCurrentWeaponWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nWeaponSlot                    ( CPF_Parm )
// class ABioWeaponRanged*        oRangedWeapon                  ( CPF_Parm )
// unsigned long                  bUsageSituationAmenable        ( CPF_Parm )

void UBioSFHandler_HUD::UpdateCurrentWeaponWidget ( int nWeaponSlot, class ABioWeaponRanged* oRangedWeapon, unsigned long bUsageSituationAmenable )
{
	static UFunction* pFnUpdateCurrentWeaponWidget = NULL;

	if ( ! pFnUpdateCurrentWeaponWidget )
		pFnUpdateCurrentWeaponWidget = (UFunction*) UObject::GObjObjects()->Data[ 61727 ];

	UBioSFHandler_HUD_execUpdateCurrentWeaponWidget_Parms UpdateCurrentWeaponWidget_Parms;
	UpdateCurrentWeaponWidget_Parms.nWeaponSlot = nWeaponSlot;
	UpdateCurrentWeaponWidget_Parms.oRangedWeapon = oRangedWeapon;
	UpdateCurrentWeaponWidget_Parms.bUsageSituationAmenable = bUsageSituationAmenable;

	pFnUpdateCurrentWeaponWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentWeaponWidget, &UpdateCurrentWeaponWidget_Parms, NULL );

	pFnUpdateCurrentWeaponWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateWeaponSwitchWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )
// int                            nPawnIndex                     ( CPF_Parm )

void UBioSFHandler_HUD::UpdateWeaponSwitchWidget ( class ABioPawn* oPawn, int nPawnIndex )
{
	static UFunction* pFnUpdateWeaponSwitchWidget = NULL;

	if ( ! pFnUpdateWeaponSwitchWidget )
		pFnUpdateWeaponSwitchWidget = (UFunction*) UObject::GObjObjects()->Data[ 61724 ];

	UBioSFHandler_HUD_execUpdateWeaponSwitchWidget_Parms UpdateWeaponSwitchWidget_Parms;
	UpdateWeaponSwitchWidget_Parms.oPawn = oPawn;
	UpdateWeaponSwitchWidget_Parms.nPawnIndex = nPawnIndex;

	pFnUpdateWeaponSwitchWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateWeaponSwitchWidget, &UpdateWeaponSwitchWidget_Parms, NULL );

	pFnUpdateWeaponSwitchWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.DeriveSlotFromWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eWeapon                        ( CPF_Parm )

int UBioSFHandler_HUD::DeriveSlotFromWeapon ( unsigned char eWeapon )
{
	static UFunction* pFnDeriveSlotFromWeapon = NULL;

	if ( ! pFnDeriveSlotFromWeapon )
		pFnDeriveSlotFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 61721 ];

	UBioSFHandler_HUD_execDeriveSlotFromWeapon_Parms DeriveSlotFromWeapon_Parms;
	DeriveSlotFromWeapon_Parms.eWeapon = eWeapon;

	pFnDeriveSlotFromWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeriveSlotFromWeapon, &DeriveSlotFromWeapon_Parms, NULL );

	pFnDeriveSlotFromWeapon->FunctionFlags |= 0x400;

	return DeriveSlotFromWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.HideTargetStatusWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::HideTargetStatusWidget ( )
{
	static UFunction* pFnHideTargetStatusWidget = NULL;

	if ( ! pFnHideTargetStatusWidget )
		pFnHideTargetStatusWidget = (UFunction*) UObject::GObjObjects()->Data[ 61720 ];

	UBioSFHandler_HUD_execHideTargetStatusWidget_Parms HideTargetStatusWidget_Parms;

	pFnHideTargetStatusWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideTargetStatusWidget, &HideTargetStatusWidget_Parms, NULL );

	pFnHideTargetStatusWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateTargetStatusWidget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pTarget                        ( CPF_Parm )
// class APawn*                   pPlayer                        ( CPF_Parm )
// unsigned long                  bIsTargetCombattant            ( CPF_Parm )
// unsigned long                  bPlayerInVehicle               ( CPF_Parm )

void UBioSFHandler_HUD::UpdateTargetStatusWidget ( class AActor* pTarget, class APawn* pPlayer, unsigned long bIsTargetCombattant, unsigned long bPlayerInVehicle )
{
	static UFunction* pFnUpdateTargetStatusWidget = NULL;

	if ( ! pFnUpdateTargetStatusWidget )
		pFnUpdateTargetStatusWidget = (UFunction*) UObject::GObjObjects()->Data[ 61715 ];

	UBioSFHandler_HUD_execUpdateTargetStatusWidget_Parms UpdateTargetStatusWidget_Parms;
	UpdateTargetStatusWidget_Parms.pTarget = pTarget;
	UpdateTargetStatusWidget_Parms.pPlayer = pPlayer;
	UpdateTargetStatusWidget_Parms.bIsTargetCombattant = bIsTargetCombattant;
	UpdateTargetStatusWidget_Parms.bPlayerInVehicle = bPlayerInVehicle;

	pFnUpdateTargetStatusWidget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTargetStatusWidget, &UpdateTargetStatusWidget_Parms, NULL );

	pFnUpdateTargetStatusWidget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.UpdateHUDModes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// int                            EActionState                   ( CPF_Parm )

void UBioSFHandler_HUD::UpdateHUDModes ( class ABioPlayerController* PC, int EActionState )
{
	static UFunction* pFnUpdateHUDModes = NULL;

	if ( ! pFnUpdateHUDModes )
		pFnUpdateHUDModes = (UFunction*) UObject::GObjObjects()->Data[ 61712 ];

	UBioSFHandler_HUD_execUpdateHUDModes_Parms UpdateHUDModes_Parms;
	UpdateHUDModes_Parms.PC = PC;
	UpdateHUDModes_Parms.EActionState = EActionState;

	pFnUpdateHUDModes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHUDModes, &UpdateHUDModes_Parms, NULL );

	pFnUpdateHUDModes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.PreReleaseHUD
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::PreReleaseHUD ( )
{
	static UFunction* pFnPreReleaseHUD = NULL;

	if ( ! pFnPreReleaseHUD )
		pFnPreReleaseHUD = (UFunction*) UObject::GObjObjects()->Data[ 61706 ];

	UBioSFHandler_HUD_execPreReleaseHUD_Parms PreReleaseHUD_Parms;

	pFnPreReleaseHUD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreReleaseHUD, &PreReleaseHUD_Parms, NULL );

	pFnPreReleaseHUD->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.InitializeEverything
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_HUD::InitializeEverything ( )
{
	static UFunction* pFnInitializeEverything = NULL;

	if ( ! pFnInitializeEverything )
		pFnInitializeEverything = (UFunction*) UObject::GObjObjects()->Data[ 61701 ];

	UBioSFHandler_HUD_execInitializeEverything_Parms InitializeEverything_Parms;

	this->ProcessEvent ( pFnInitializeEverything, &InitializeEverything_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.assignKeyMaps
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::assignKeyMaps ( )
{
	static UFunction* pFnassignKeyMaps = NULL;

	if ( ! pFnassignKeyMaps )
		pFnassignKeyMaps = (UFunction*) UObject::GObjObjects()->Data[ 61700 ];

	UBioSFHandler_HUD_execassignKeyMaps_Parms assignKeyMaps_Parms;

	pFnassignKeyMaps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnassignKeyMaps, &assignKeyMaps_Parms, NULL );

	pFnassignKeyMaps->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.assignHotKeys
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioSFHandler_HUD::assignHotKeys ( )
{
	static UFunction* pFnassignHotKeys = NULL;

	if ( ! pFnassignHotKeys )
		pFnassignHotKeys = (UFunction*) UObject::GObjObjects()->Data[ 61699 ];

	UBioSFHandler_HUD_execassignHotKeys_Parms assignHotKeys_Parms;

	pFnassignHotKeys->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnassignHotKeys, &assignHotKeys_Parms, NULL );

	pFnassignHotKeys->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_HUD.getSquadUniqueIndex
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            HUDMemberIndex                 ( CPF_Parm )

int UBioSFHandler_HUD::getSquadUniqueIndex ( int HUDMemberIndex )
{
	static UFunction* pFngetSquadUniqueIndex = NULL;

	if ( ! pFngetSquadUniqueIndex )
		pFngetSquadUniqueIndex = (UFunction*) UObject::GObjObjects()->Data[ 61696 ];

	UBioSFHandler_HUD_execgetSquadUniqueIndex_Parms getSquadUniqueIndex_Parms;
	getSquadUniqueIndex_Parms.HUDMemberIndex = HUDMemberIndex;

	pFngetSquadUniqueIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetSquadUniqueIndex, &getSquadUniqueIndex_Parms, NULL );

	pFngetSquadUniqueIndex->FunctionFlags |= 0x400;

	return getSquadUniqueIndex_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_HUD.doHotKey
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UBioSFHandler_HUD::doHotKey ( int Index )
{
	static UFunction* pFndoHotKey = NULL;

	if ( ! pFndoHotKey )
		pFndoHotKey = (UFunction*) UObject::GObjObjects()->Data[ 61689 ];

	UBioSFHandler_HUD_execdoHotKey_Parms doHotKey_Parms;
	doHotKey_Parms.Index = Index;

	this->ProcessEvent ( pFndoHotKey, &doHotKey_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.AStoLog
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_HUD::AStoLog ( struct FString msg )
{
	static UFunction* pFnAStoLog = NULL;

	if ( ! pFnAStoLog )
		pFnAStoLog = (UFunction*) UObject::GObjObjects()->Data[ 61687 ];

	UBioSFHandler_HUD_execAStoLog_Parms AStoLog_Parms;
	memcpy ( &AStoLog_Parms.msg, &msg, 0x10 );

	this->ProcessEvent ( pFnAStoLog, &AStoLog_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_HUD::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61668 ];

	UBioSFHandler_HUD_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_HUD.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_HUD::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 61663 ];

	UBioSFHandler_HUD_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_HUD.ToggleKeyMap
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_HUD::ToggleKeyMap ( )
{
	static UFunction* pFnToggleKeyMap = NULL;

	if ( ! pFnToggleKeyMap )
		pFnToggleKeyMap = (UFunction*) UObject::GObjObjects()->Data[ 61662 ];

	UBioSFHandler_HUD_execToggleKeyMap_Parms ToggleKeyMap_Parms;

	this->ProcessEvent ( pFnToggleKeyMap, &ToggleKeyMap_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCHUD.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCHUD::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62987 ];

	UBioSFHandler_PCHUD_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_PCHUD.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCHUD::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62985 ];

	UBioSFHandler_PCHUD_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCHUD.InitializeEverything
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCHUD::InitializeEverything ( )
{
	static UFunction* pFnInitializeEverything = NULL;

	if ( ! pFnInitializeEverything )
		pFnInitializeEverything = (UFunction*) UObject::GObjObjects()->Data[ 62984 ];

	UBioSFHandler_PCHUD_execInitializeEverything_Parms InitializeEverything_Parms;

	this->ProcessEvent ( pFnInitializeEverything, &InitializeEverything_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Journal.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Journal::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62101 ];

	UBioSFHandler_Journal_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Journal.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Journal::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62096 ];

	UBioSFHandler_Journal_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Journal.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Journal::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 62092 ];

	UBioSFHandler_Journal_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Keyboard.DisplayKeyboard
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            srTitle                        ( CPF_Parm )
// int                            srDescription                  ( CPF_Parm )
// unsigned char                  nOptions                       ( CPF_Parm )
// int                            nMaxLength                     ( CPF_Parm )
// struct FString                 sDefault                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_Keyboard::DisplayKeyboard ( int srTitle, int srDescription, unsigned char nOptions, int nMaxLength, struct FString sDefault )
{
	static UFunction* pFnDisplayKeyboard = NULL;

	if ( ! pFnDisplayKeyboard )
		pFnDisplayKeyboard = (UFunction*) UObject::GObjObjects()->Data[ 62109 ];

	UBioSFHandler_Keyboard_execDisplayKeyboard_Parms DisplayKeyboard_Parms;
	DisplayKeyboard_Parms.srTitle = srTitle;
	DisplayKeyboard_Parms.srDescription = srDescription;
	DisplayKeyboard_Parms.nOptions = nOptions;
	DisplayKeyboard_Parms.nMaxLength = nMaxLength;
	memcpy ( &DisplayKeyboard_Parms.sDefault, &sDefault, 0x10 );

	pFnDisplayKeyboard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayKeyboard, &DisplayKeyboard_Parms, NULL );

	pFnDisplayKeyboard->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Loot.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Loot::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62263 ];

	UBioSFHandler_Loot_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.DisplayLootMaxed
// [0x00020002] 
// Parameters infos:
// int                            i_nNumberToSlavage             ( CPF_Parm )
// int                            i_nMaxItems                    ( CPF_Parm )

void UBioSFHandler_Loot::DisplayLootMaxed ( int i_nNumberToSlavage, int i_nMaxItems )
{
	static UFunction* pFnDisplayLootMaxed = NULL;

	if ( ! pFnDisplayLootMaxed )
		pFnDisplayLootMaxed = (UFunction*) UObject::GObjObjects()->Data[ 62257 ];

	UBioSFHandler_Loot_execDisplayLootMaxed_Parms DisplayLootMaxed_Parms;
	DisplayLootMaxed_Parms.i_nNumberToSlavage = i_nNumberToSlavage;
	DisplayLootMaxed_Parms.i_nMaxItems = i_nMaxItems;

	this->ProcessEvent ( pFnDisplayLootMaxed, &DisplayLootMaxed_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.DisplayLootLimitWarning
// [0x00020002] 
// Parameters infos:
// int                            i_nCurrentInventoryNum         ( CPF_Parm )
// int                            i_nMaxItems                    ( CPF_Parm )

void UBioSFHandler_Loot::DisplayLootLimitWarning ( int i_nCurrentInventoryNum, int i_nMaxItems )
{
	static UFunction* pFnDisplayLootLimitWarning = NULL;

	if ( ! pFnDisplayLootLimitWarning )
		pFnDisplayLootLimitWarning = (UFunction*) UObject::GObjObjects()->Data[ 62250 ];

	UBioSFHandler_Loot_execDisplayLootLimitWarning_Parms DisplayLootLimitWarning_Parms;
	DisplayLootLimitWarning_Parms.i_nCurrentInventoryNum = i_nCurrentInventoryNum;
	DisplayLootLimitWarning_Parms.i_nMaxItems = i_nMaxItems;

	this->ProcessEvent ( pFnDisplayLootLimitWarning, &DisplayLootLimitWarning_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.DetermineLootConstraints
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Loot::DetermineLootConstraints ( )
{
	static UFunction* pFnDetermineLootConstraints = NULL;

	if ( ! pFnDetermineLootConstraints )
		pFnDetermineLootConstraints = (UFunction*) UObject::GObjObjects()->Data[ 62240 ];

	UBioSFHandler_Loot_execDetermineLootConstraints_Parms DetermineLootConstraints_Parms;

	this->ProcessEvent ( pFnDetermineLootConstraints, &DetermineLootConstraints_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.GameSessionEnded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Loot::GameSessionEnded ( )
{
	static UFunction* pFnGameSessionEnded = NULL;

	if ( ! pFnGameSessionEnded )
		pFnGameSessionEnded = (UFunction*) UObject::GObjObjects()->Data[ 62239 ];

	UBioSFHandler_Loot_execGameSessionEnded_Parms GameSessionEnded_Parms;

	this->ProcessEvent ( pFnGameSessionEnded, &GameSessionEnded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.OnPanelRemoved
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_Loot::eventOnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 62238 ];

	UBioSFHandler_Loot_eventOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.OnPanelAdded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_Loot::eventOnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 62237 ];

	UBioSFHandler_Loot_eventOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.LootSalvageItemProcessDoubleCheck
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConfirmedSalvageAttempt       ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_Loot::LootSalvageItemProcessDoubleCheck ( unsigned long bConfirmedSalvageAttempt, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnLootSalvageItemProcessDoubleCheck = NULL;

	if ( ! pFnLootSalvageItemProcessDoubleCheck )
		pFnLootSalvageItemProcessDoubleCheck = (UFunction*) UObject::GObjObjects()->Data[ 62223 ];

	UBioSFHandler_Loot_execLootSalvageItemProcessDoubleCheck_Parms LootSalvageItemProcessDoubleCheck_Parms;
	LootSalvageItemProcessDoubleCheck_Parms.bConfirmedSalvageAttempt = bConfirmedSalvageAttempt;
	LootSalvageItemProcessDoubleCheck_Parms.nContext = nContext;
	LootSalvageItemProcessDoubleCheck_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnLootSalvageItemProcessDoubleCheck, &LootSalvageItemProcessDoubleCheck_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.PopulateLootItemListEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nDisplayIndex                  ( CPF_Parm )

void UBioSFHandler_Loot::PopulateLootItemListEntry ( int nDisplayIndex )
{
	static UFunction* pFnPopulateLootItemListEntry = NULL;

	if ( ! pFnPopulateLootItemListEntry )
		pFnPopulateLootItemListEntry = (UFunction*) UObject::GObjObjects()->Data[ 62217 ];

	UBioSFHandler_Loot_execPopulateLootItemListEntry_Parms PopulateLootItemListEntry_Parms;
	PopulateLootItemListEntry_Parms.nDisplayIndex = nDisplayIndex;

	this->ProcessEvent ( pFnPopulateLootItemListEntry, &PopulateLootItemListEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.PopulateLootItemList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Loot::PopulateLootItemList ( )
{
	static UFunction* pFnPopulateLootItemList = NULL;

	if ( ! pFnPopulateLootItemList )
		pFnPopulateLootItemList = (UFunction*) UObject::GObjObjects()->Data[ 62203 ];

	UBioSFHandler_Loot_execPopulateLootItemList_Parms PopulateLootItemList_Parms;

	this->ProcessEvent ( pFnPopulateLootItemList, &PopulateLootItemList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.PopulateResourceList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Loot::PopulateResourceList ( )
{
	static UFunction* pFnPopulateResourceList = NULL;

	if ( ! pFnPopulateResourceList )
		pFnPopulateResourceList = (UFunction*) UObject::GObjObjects()->Data[ 62204 ];

	UBioSFHandler_Loot_execPopulateResourceList_Parms PopulateResourceList_Parms;

	this->ProcessEvent ( pFnPopulateResourceList, &PopulateResourceList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.SetGlobalVars
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Loot::SetGlobalVars ( )
{
	static UFunction* pFnSetGlobalVars = NULL;

	if ( ! pFnSetGlobalVars )
		pFnSetGlobalVars = (UFunction*) UObject::GObjObjects()->Data[ 62202 ];

	UBioSFHandler_Loot_execSetGlobalVars_Parms SetGlobalVars_Parms;

	this->ProcessEvent ( pFnSetGlobalVars, &SetGlobalVars_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Loot.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Loot::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62189 ];

	UBioSFHandler_Loot_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Loot.GetInventoryThresholdWarning
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            i_nCurrentInvNum               ( CPF_Parm )
// int                            i_nMaxItems                    ( CPF_Parm )

struct FString UBioSFHandler_Loot::GetInventoryThresholdWarning ( int i_nCurrentInvNum, int i_nMaxItems )
{
	static UFunction* pFnGetInventoryThresholdWarning = NULL;

	if ( ! pFnGetInventoryThresholdWarning )
		pFnGetInventoryThresholdWarning = (UFunction*) UObject::GObjObjects()->Data[ 62185 ];

	UBioSFHandler_Loot_execGetInventoryThresholdWarning_Parms GetInventoryThresholdWarning_Parms;
	GetInventoryThresholdWarning_Parms.i_nCurrentInvNum = i_nCurrentInvNum;
	GetInventoryThresholdWarning_Parms.i_nMaxItems = i_nMaxItems;

	pFnGetInventoryThresholdWarning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryThresholdWarning, &GetInventoryThresholdWarning_Parms, NULL );

	pFnGetInventoryThresholdWarning->FunctionFlags |= 0x400;

	return GetInventoryThresholdWarning_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Loot.GetInventoryMaxedMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            i_nNumberOver                  ( CPF_Parm )
// int                            i_nMaxItems                    ( CPF_Parm )

struct FString UBioSFHandler_Loot::GetInventoryMaxedMessage ( int i_nNumberOver, int i_nMaxItems )
{
	static UFunction* pFnGetInventoryMaxedMessage = NULL;

	if ( ! pFnGetInventoryMaxedMessage )
		pFnGetInventoryMaxedMessage = (UFunction*) UObject::GObjObjects()->Data[ 62181 ];

	UBioSFHandler_Loot_execGetInventoryMaxedMessage_Parms GetInventoryMaxedMessage_Parms;
	GetInventoryMaxedMessage_Parms.i_nNumberOver = i_nNumberOver;
	GetInventoryMaxedMessage_Parms.i_nMaxItems = i_nMaxItems;

	pFnGetInventoryMaxedMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryMaxedMessage, &GetInventoryMaxedMessage_Parms, NULL );

	pFnGetInventoryMaxedMessage->FunctionFlags |= 0x400;

	return GetInventoryMaxedMessage_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_MainMenu.StartAchievementEnumeration
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_MainMenu::StartAchievementEnumeration ( )
{
	static UFunction* pFnStartAchievementEnumeration = NULL;

	if ( ! pFnStartAchievementEnumeration )
		pFnStartAchievementEnumeration = (UFunction*) UObject::GObjObjects()->Data[ 62528 ];

	UBioSFHandler_MainMenu_execStartAchievementEnumeration_Parms StartAchievementEnumeration_Parms;

	pFnStartAchievementEnumeration->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartAchievementEnumeration, &StartAchievementEnumeration_Parms, NULL );

	pFnStartAchievementEnumeration->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MainMenu.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_MainMenu::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62566 ];

	UBioSFHandler_MainMenu_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_MainMenu::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 62562 ];

	UBioSFHandler_MainMenu_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.OnQueryAvailableDownloadsComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UBioSFHandler_MainMenu::OnQueryAvailableDownloadsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnQueryAvailableDownloadsComplete = NULL;

	if ( ! pFnOnQueryAvailableDownloadsComplete )
		pFnOnQueryAvailableDownloadsComplete = (UFunction*) UObject::GObjObjects()->Data[ 62547 ];

	UBioSFHandler_MainMenu_execOnQueryAvailableDownloadsComplete_Parms OnQueryAvailableDownloadsComplete_Parms;
	OnQueryAvailableDownloadsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnQueryAvailableDownloadsComplete, &OnQueryAvailableDownloadsComplete_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.UpdateGUILayout
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_MainMenu::eventUpdateGUILayout ( )
{
	static UFunction* pFnUpdateGUILayout = NULL;

	if ( ! pFnUpdateGUILayout )
		pFnUpdateGUILayout = (UFunction*) UObject::GObjObjects()->Data[ 62543 ];

	UBioSFHandler_MainMenu_eventUpdateGUILayout_Parms UpdateGUILayout_Parms;

	this->ProcessEvent ( pFnUpdateGUILayout, &UpdateGUILayout_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.SetupMainMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_MainMenu::eventSetupMainMenu ( )
{
	static UFunction* pFnSetupMainMenu = NULL;

	if ( ! pFnSetupMainMenu )
		pFnSetupMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 62537 ];

	UBioSFHandler_MainMenu_eventSetupMainMenu_Parms SetupMainMenu_Parms;

	this->ProcessEvent ( pFnSetupMainMenu, &SetupMainMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_MainMenu::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 62535 ];

	UBioSFHandler_MainMenu_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.SetEnabledAndVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVal                           ( CPF_Parm )

void UBioSFHandler_MainMenu::SetEnabledAndVisible ( unsigned long bVal )
{
	static UFunction* pFnSetEnabledAndVisible = NULL;

	if ( ! pFnSetEnabledAndVisible )
		pFnSetEnabledAndVisible = (UFunction*) UObject::GObjObjects()->Data[ 62533 ];

	UBioSFHandler_MainMenu_execSetEnabledAndVisible_Parms SetEnabledAndVisible_Parms;
	SetEnabledAndVisible_Parms.bVal = bVal;

	this->ProcessEvent ( pFnSetEnabledAndVisible, &SetEnabledAndVisible_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.ExitConfirm
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_MainMenu::ExitConfirm ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnExitConfirm = NULL;

	if ( ! pFnExitConfirm )
		pFnExitConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62529 ];

	UBioSFHandler_MainMenu_execExitConfirm_Parms ExitConfirm_Parms;
	ExitConfirm_Parms.bAPressed = bAPressed;
	ExitConfirm_Parms.nContext = nContext;
	ExitConfirm_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnExitConfirm, &ExitConfirm_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_MainMenu::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62512 ];

	UBioSFHandler_MainMenu_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_MainMenu.OnResumeFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_MainMenu::eventOnResumeFailed ( )
{
	static UFunction* pFnOnResumeFailed = NULL;

	if ( ! pFnOnResumeFailed )
		pFnOnResumeFailed = (UFunction*) UObject::GObjObjects()->Data[ 62511 ];

	UBioSFHandler_MainMenu_eventOnResumeFailed_Parms OnResumeFailed_Parms;

	this->ProcessEvent ( pFnOnResumeFailed, &OnResumeFailed_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MainMenu.DismissCareerLimitMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_MainMenu::DismissCareerLimitMessage ( )
{
	static UFunction* pFnDismissCareerLimitMessage = NULL;

	if ( ! pFnDismissCareerLimitMessage )
		pFnDismissCareerLimitMessage = (UFunction*) UObject::GObjObjects()->Data[ 62510 ];

	UBioSFHandler_MainMenu_execDismissCareerLimitMessage_Parms DismissCareerLimitMessage_Parms;

	pFnDismissCareerLimitMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDismissCareerLimitMessage, &DismissCareerLimitMessage_Parms, NULL );

	pFnDismissCareerLimitMessage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MainMenu.SetResumeFailedHandler
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_MainMenu::SetResumeFailedHandler ( )
{
	static UFunction* pFnSetResumeFailedHandler = NULL;

	if ( ! pFnSetResumeFailedHandler )
		pFnSetResumeFailedHandler = (UFunction*) UObject::GObjObjects()->Data[ 62509 ];

	UBioSFHandler_MainMenu_execSetResumeFailedHandler_Parms SetResumeFailedHandler_Parms;

	pFnSetResumeFailedHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetResumeFailedHandler, &SetResumeFailedHandler_Parms, NULL );

	pFnSetResumeFailedHandler->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MainMenu.CheckMaxCareersExceeded
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_MainMenu::CheckMaxCareersExceeded ( )
{
	static UFunction* pFnCheckMaxCareersExceeded = NULL;

	if ( ! pFnCheckMaxCareersExceeded )
		pFnCheckMaxCareersExceeded = (UFunction*) UObject::GObjObjects()->Data[ 62507 ];

	UBioSFHandler_MainMenu_execCheckMaxCareersExceeded_Parms CheckMaxCareersExceeded_Parms;

	pFnCheckMaxCareersExceeded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckMaxCareersExceeded, &CheckMaxCareersExceeded_Parms, NULL );

	pFnCheckMaxCareersExceeded->FunctionFlags |= 0x400;

	return CheckMaxCareersExceeded_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCMainMenu.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCMainMenu::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63051 ];

	UBioSFHandler_PCMainMenu_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MessageBox.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_MessageBox::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 60477 ];

	UBioSFHandler_MessageBox_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MessageBox.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_MessageBox::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 60476 ];

	UBioSFHandler_MessageBox_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MessageBox.HideMessageBox
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bRemove                        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_MessageBox::HideMessageBox ( unsigned long bRemove )
{
	static UFunction* pFnHideMessageBox = NULL;

	if ( ! pFnHideMessageBox )
		pFnHideMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 56358 ];

	UBioSFHandler_MessageBox_execHideMessageBox_Parms HideMessageBox_Parms;
	HideMessageBox_Parms.bRemove = bRemove;

	pFnHideMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideMessageBox, &HideMessageBox_Parms, NULL );

	pFnHideMessageBox->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MessageBox.DisplayQuickMessageBoxEx
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FBioMessageBoxOptionalParams stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_MessageBox::DisplayQuickMessageBoxEx ( struct FString sMessage, struct FBioMessageBoxOptionalParams* stParams )
{
	static UFunction* pFnDisplayQuickMessageBoxEx = NULL;

	if ( ! pFnDisplayQuickMessageBoxEx )
		pFnDisplayQuickMessageBoxEx = (UFunction*) UObject::GObjObjects()->Data[ 60472 ];

	UBioSFHandler_MessageBox_execDisplayQuickMessageBoxEx_Parms DisplayQuickMessageBoxEx_Parms;
	memcpy ( &DisplayQuickMessageBoxEx_Parms.sMessage, &sMessage, 0x10 );

	pFnDisplayQuickMessageBoxEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayQuickMessageBoxEx, &DisplayQuickMessageBoxEx_Parms, NULL );

	pFnDisplayQuickMessageBoxEx->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &DisplayQuickMessageBoxEx_Parms.stParams, 0x18 );
};

// Function SFXGame.BioSFHandler_MessageBox.DisplayQuickMessageBox
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            srMessage                      ( CPF_Parm )
// struct FBioMessageBoxOptionalParams stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_MessageBox::DisplayQuickMessageBox ( int srMessage, struct FBioMessageBoxOptionalParams* stParams )
{
	static UFunction* pFnDisplayQuickMessageBox = NULL;

	if ( ! pFnDisplayQuickMessageBox )
		pFnDisplayQuickMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 60469 ];

	UBioSFHandler_MessageBox_execDisplayQuickMessageBox_Parms DisplayQuickMessageBox_Parms;
	DisplayQuickMessageBox_Parms.srMessage = srMessage;

	pFnDisplayQuickMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayQuickMessageBox, &DisplayQuickMessageBox_Parms, NULL );

	pFnDisplayQuickMessageBox->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &DisplayQuickMessageBox_Parms.stParams, 0x18 );
};

// Function SFXGame.BioSFHandler_MessageBox.DisplayAlternateMessageBoxEx
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FBioMessageBoxOptionalParams stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_MessageBox::DisplayAlternateMessageBoxEx ( struct FString sMessage, struct FBioMessageBoxOptionalParams* stParams )
{
	static UFunction* pFnDisplayAlternateMessageBoxEx = NULL;

	if ( ! pFnDisplayAlternateMessageBoxEx )
		pFnDisplayAlternateMessageBoxEx = (UFunction*) UObject::GObjObjects()->Data[ 60466 ];

	UBioSFHandler_MessageBox_execDisplayAlternateMessageBoxEx_Parms DisplayAlternateMessageBoxEx_Parms;
	memcpy ( &DisplayAlternateMessageBoxEx_Parms.sMessage, &sMessage, 0x10 );

	pFnDisplayAlternateMessageBoxEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayAlternateMessageBoxEx, &DisplayAlternateMessageBoxEx_Parms, NULL );

	pFnDisplayAlternateMessageBoxEx->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &DisplayAlternateMessageBoxEx_Parms.stParams, 0x18 );
};

// Function SFXGame.BioSFHandler_MessageBox.DisplayMessageBoxEx
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 sGamepadMessage                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPCMessage                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FBioMessageBoxOptionalParams stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_MessageBox::DisplayMessageBoxEx ( struct FString sGamepadMessage, struct FString sPCMessage, struct FBioMessageBoxOptionalParams* stParams )
{
	static UFunction* pFnDisplayMessageBoxEx = NULL;

	if ( ! pFnDisplayMessageBoxEx )
		pFnDisplayMessageBoxEx = (UFunction*) UObject::GObjObjects()->Data[ 60462 ];

	UBioSFHandler_MessageBox_execDisplayMessageBoxEx_Parms DisplayMessageBoxEx_Parms;
	memcpy ( &DisplayMessageBoxEx_Parms.sGamepadMessage, &sGamepadMessage, 0x10 );
	memcpy ( &DisplayMessageBoxEx_Parms.sPCMessage, &sPCMessage, 0x10 );

	pFnDisplayMessageBoxEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayMessageBoxEx, &DisplayMessageBoxEx_Parms, NULL );

	pFnDisplayMessageBoxEx->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &DisplayMessageBoxEx_Parms.stParams, 0x18 );
};

// Function SFXGame.BioSFHandler_MessageBox.DisplayMessageBox
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            srMessage                      ( CPF_Parm )
// struct FBioMessageBoxOptionalParams stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioSFHandler_MessageBox::DisplayMessageBox ( int srMessage, struct FBioMessageBoxOptionalParams* stParams )
{
	static UFunction* pFnDisplayMessageBox = NULL;

	if ( ! pFnDisplayMessageBox )
		pFnDisplayMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 56357 ];

	UBioSFHandler_MessageBox_execDisplayMessageBox_Parms DisplayMessageBox_Parms;
	DisplayMessageBox_Parms.srMessage = srMessage;

	pFnDisplayMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayMessageBox, &DisplayMessageBox_Parms, NULL );

	pFnDisplayMessageBox->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &DisplayMessageBox_Parms.stParams, 0x18 );
};

// Function SFXGame.BioSFHandler_MessageBox.SetUpdateDelegate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_MessageBox::SetUpdateDelegate ( struct FScriptDelegate pDelegate )
{
	static UFunction* pFnSetUpdateDelegate = NULL;

	if ( ! pFnSetUpdateDelegate )
		pFnSetUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60458 ];

	UBioSFHandler_MessageBox_execSetUpdateDelegate_Parms SetUpdateDelegate_Parms;
	memcpy ( &SetUpdateDelegate_Parms.pDelegate, &pDelegate, 0x10 );

	pFnSetUpdateDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetUpdateDelegate, &SetUpdateDelegate_Parms, NULL );

	pFnSetUpdateDelegate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MessageBox.SetInputDelegate
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            nContext                       ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_MessageBox::SetInputDelegate ( struct FScriptDelegate pDelegate, int nContext )
{
	static UFunction* pFnSetInputDelegate = NULL;

	if ( ! pFnSetInputDelegate )
		pFnSetInputDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57978 ];

	UBioSFHandler_MessageBox_execSetInputDelegate_Parms SetInputDelegate_Parms;
	memcpy ( &SetInputDelegate_Parms.pDelegate, &pDelegate, 0x10 );
	SetInputDelegate_Parms.nContext = nContext;

	pFnSetInputDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetInputDelegate, &SetInputDelegate_Parms, NULL );

	pFnSetInputDelegate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_MessageBox.UpdateCallbackEx
// [0x00120000] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UObject*                 oMsgBox                        ( CPF_Parm )

void UBioSFHandler_MessageBox::UpdateCallbackEx ( float fDeltaT, class UObject* oMsgBox )
{
	static UFunction* pFnUpdateCallbackEx = NULL;

	if ( ! pFnUpdateCallbackEx )
		pFnUpdateCallbackEx = (UFunction*) UObject::GObjObjects()->Data[ 60453 ];

	UBioSFHandler_MessageBox_execUpdateCallbackEx_Parms UpdateCallbackEx_Parms;
	UpdateCallbackEx_Parms.fDeltaT = fDeltaT;
	UpdateCallbackEx_Parms.oMsgBox = oMsgBox;

	this->ProcessEvent ( pFnUpdateCallbackEx, &UpdateCallbackEx_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MessageBox.UpdateCallback
// [0x00120000] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UBioSFHandler_MessageBox* oMsgBox                        ( CPF_Parm )

void UBioSFHandler_MessageBox::UpdateCallback ( float fDeltaT, class UBioSFHandler_MessageBox* oMsgBox )
{
	static UFunction* pFnUpdateCallback = NULL;

	if ( ! pFnUpdateCallback )
		pFnUpdateCallback = (UFunction*) UObject::GObjObjects()->Data[ 60450 ];

	UBioSFHandler_MessageBox_execUpdateCallback_Parms UpdateCallback_Parms;
	UpdateCallback_Parms.fDeltaT = fDeltaT;
	UpdateCallback_Parms.oMsgBox = oMsgBox;

	this->ProcessEvent ( pFnUpdateCallback, &UpdateCallback_Parms, NULL );
};

// Function SFXGame.BioSFHandler_MessageBox.InputCallback
// [0x00124000] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_MessageBox::InputCallback ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnInputCallback = NULL;

	if ( ! pFnInputCallback )
		pFnInputCallback = (UFunction*) UObject::GObjObjects()->Data[ 60446 ];

	UBioSFHandler_MessageBox_execInputCallback_Parms InputCallback_Parms;
	InputCallback_Parms.bAPressed = bAPressed;
	InputCallback_Parms.nContext = nContext;
	InputCallback_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnInputCallback, &InputCallback_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SelectPreviousPregeneratedHead
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::SelectPreviousPregeneratedHead ( )
{
	static UFunction* pFnSelectPreviousPregeneratedHead = NULL;

	if ( ! pFnSelectPreviousPregeneratedHead )
		pFnSelectPreviousPregeneratedHead = (UFunction*) UObject::GObjObjects()->Data[ 62821 ];

	UBioSFHandler_NewCharacter_execSelectPreviousPregeneratedHead_Parms SelectPreviousPregeneratedHead_Parms;

	this->ProcessEvent ( pFnSelectPreviousPregeneratedHead, &SelectPreviousPregeneratedHead_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SelectNextPregeneratedHead
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::SelectNextPregeneratedHead ( )
{
	static UFunction* pFnSelectNextPregeneratedHead = NULL;

	if ( ! pFnSelectNextPregeneratedHead )
		pFnSelectNextPregeneratedHead = (UFunction*) UObject::GObjObjects()->Data[ 62638 ];

	UBioSFHandler_NewCharacter_execSelectNextPregeneratedHead_Parms SelectNextPregeneratedHead_Parms;

	this->ProcessEvent ( pFnSelectNextPregeneratedHead, &SelectNextPregeneratedHead_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ConfirmButtonPressed
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_NewCharacter::ConfirmButtonPressed ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnConfirmButtonPressed = NULL;

	if ( ! pFnConfirmButtonPressed )
		pFnConfirmButtonPressed = (UFunction*) UObject::GObjObjects()->Data[ 62813 ];

	UBioSFHandler_NewCharacter_execConfirmButtonPressed_Parms ConfirmButtonPressed_Parms;
	ConfirmButtonPressed_Parms.bAPressed = bAPressed;
	ConfirmButtonPressed_Parms.nContext = nContext;
	ConfirmButtonPressed_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnConfirmButtonPressed, &ConfirmButtonPressed_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ConfirmComplete
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::ConfirmComplete ( )
{
	static UFunction* pFnConfirmComplete = NULL;

	if ( ! pFnConfirmComplete )
		pFnConfirmComplete = (UFunction*) UObject::GObjObjects()->Data[ 62643 ];

	UBioSFHandler_NewCharacter_execConfirmComplete_Parms ConfirmComplete_Parms;

	this->ProcessEvent ( pFnConfirmComplete, &ConfirmComplete_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ClearModels
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::ClearModels ( )
{
	static UFunction* pFnClearModels = NULL;

	if ( ! pFnClearModels )
		pFnClearModels = (UFunction*) UObject::GObjObjects()->Data[ 62762 ];

	UBioSFHandler_NewCharacter_execClearModels_Parms ClearModels_Parms;

	this->ProcessEvent ( pFnClearModels, &ClearModels_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_NewCharacter::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 62806 ];

	UBioSFHandler_NewCharacter_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_NewCharacter::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 62805 ];

	UBioSFHandler_NewCharacter_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.PopulateCustomFaceList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::PopulateCustomFaceList ( )
{
	static UFunction* pFnPopulateCustomFaceList = NULL;

	if ( ! pFnPopulateCustomFaceList )
		pFnPopulateCustomFaceList = (UFunction*) UObject::GObjObjects()->Data[ 62656 ];

	UBioSFHandler_NewCharacter_execPopulateCustomFaceList_Parms PopulateCustomFaceList_Parms;

	this->ProcessEvent ( pFnPopulateCustomFaceList, &PopulateCustomFaceList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleSliderChange
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nCategory                      ( CPF_Parm )
// int                            nSlider                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioSFHandler_NewCharacter::HandleSliderChange ( int nCategory, int nSlider, int nValue )
{
	static UFunction* pFnHandleSliderChange = NULL;

	if ( ! pFnHandleSliderChange )
		pFnHandleSliderChange = (UFunction*) UObject::GObjObjects()->Data[ 62631 ];

	UBioSFHandler_NewCharacter_execHandleSliderChange_Parms HandleSliderChange_Parms;
	HandleSliderChange_Parms.nCategory = nCategory;
	HandleSliderChange_Parms.nSlider = nSlider;
	HandleSliderChange_Parms.nValue = nValue;

	this->ProcessEvent ( pFnHandleSliderChange, &HandleSliderChange_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.DoCategoryReset
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nCategory                      ( CPF_Parm )

void UBioSFHandler_NewCharacter::DoCategoryReset ( int nCategory )
{
	static UFunction* pFnDoCategoryReset = NULL;

	if ( ! pFnDoCategoryReset )
		pFnDoCategoryReset = (UFunction*) UObject::GObjObjects()->Data[ 62639 ];

	UBioSFHandler_NewCharacter_execDoCategoryReset_Parms DoCategoryReset_Parms;
	DoCategoryReset_Parms.nCategory = nCategory;

	this->ProcessEvent ( pFnDoCategoryReset, &DoCategoryReset_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SetSliderPositions
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::SetSliderPositions ( )
{
	static UFunction* pFnSetSliderPositions = NULL;

	if ( ! pFnSetSliderPositions )
		pFnSetSliderPositions = (UFunction*) UObject::GObjObjects()->Data[ 62657 ];

	UBioSFHandler_NewCharacter_execSetSliderPositions_Parms SetSliderPositions_Parms;

	this->ProcessEvent ( pFnSetSliderPositions, &SetSliderPositions_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SetCustomModel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::SetCustomModel ( )
{
	static UFunction* pFnSetCustomModel = NULL;

	if ( ! pFnSetCustomModel )
		pFnSetCustomModel = (UFunction*) UObject::GObjObjects()->Data[ 62655 ];

	UBioSFHandler_NewCharacter_execSetCustomModel_Parms SetCustomModel_Parms;

	this->ProcessEvent ( pFnSetCustomModel, &SetCustomModel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SelectModel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  NewTemplate                    ( CPF_Parm )

void UBioSFHandler_NewCharacter::SelectModel ( unsigned char NewTemplate )
{
	static UFunction* pFnSelectModel = NULL;

	if ( ! pFnSelectModel )
		pFnSelectModel = (UFunction*) UObject::GObjObjects()->Data[ 62637 ];

	UBioSFHandler_NewCharacter_execSelectModel_Parms SelectModel_Parms;
	SelectModel_Parms.NewTemplate = NewTemplate;

	this->ProcessEvent ( pFnSelectModel, &SelectModel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::UpdateCharacter ( )
{
	static UFunction* pFnUpdateCharacter = NULL;

	if ( ! pFnUpdateCharacter )
		pFnUpdateCharacter = (UFunction*) UObject::GObjObjects()->Data[ 62632 ];

	UBioSFHandler_NewCharacter_execUpdateCharacter_Parms UpdateCharacter_Parms;

	this->ProcessEvent ( pFnUpdateCharacter, &UpdateCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateUIState
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )

void UBioSFHandler_NewCharacter::UpdateUIState ( int NewState )
{
	static UFunction* pFnUpdateUIState = NULL;

	if ( ! pFnUpdateUIState )
		pFnUpdateUIState = (UFunction*) UObject::GObjObjects()->Data[ 62666 ];

	UBioSFHandler_NewCharacter_execUpdateUIState_Parms UpdateUIState_Parms;
	UpdateUIState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnUpdateUIState, &UpdateUIState_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ChangeClass
// [0x00020002] 
// Parameters infos:
// struct FName                   ClassName                      ( CPF_Parm )

void UBioSFHandler_NewCharacter::ChangeClass ( struct FName ClassName )
{
	static UFunction* pFnChangeClass = NULL;

	if ( ! pFnChangeClass )
		pFnChangeClass = (UFunction*) UObject::GObjObjects()->Data[ 62767 ];

	UBioSFHandler_NewCharacter_execChangeClass_Parms ChangeClass_Parms;
	memcpy ( &ChangeClass_Parms.ClassName, &ClassName, 0x8 );

	this->ProcessEvent ( pFnChangeClass, &ChangeClass_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.StartNewGameEx
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UBioSFHandler_NewCharacter::eventStartNewGameEx ( )
{
	static UFunction* pFnStartNewGameEx = NULL;

	if ( ! pFnStartNewGameEx )
		pFnStartNewGameEx = (UFunction*) UObject::GObjObjects()->Data[ 62763 ];

	UBioSFHandler_NewCharacter_eventStartNewGameEx_Parms StartNewGameEx_Parms;

	this->ProcessEvent ( pFnStartNewGameEx, &StartNewGameEx_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.StartNewGame
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::StartNewGame ( )
{
	static UFunction* pFnStartNewGame = NULL;

	if ( ! pFnStartNewGame )
		pFnStartNewGame = (UFunction*) UObject::GObjObjects()->Data[ 62641 ];

	UBioSFHandler_NewCharacter_execStartNewGame_Parms StartNewGame_Parms;

	this->ProcessEvent ( pFnStartNewGame, &StartNewGame_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateBonusTalentList
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 sCharClass                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::UpdateBonusTalentList ( struct FString sCharClass )
{
	static UFunction* pFnUpdateBonusTalentList = NULL;

	if ( ! pFnUpdateBonusTalentList )
		pFnUpdateBonusTalentList = (UFunction*) UObject::GObjObjects()->Data[ 62645 ];

	UBioSFHandler_NewCharacter_execUpdateBonusTalentList_Parms UpdateBonusTalentList_Parms;
	memcpy ( &UpdateBonusTalentList_Parms.sCharClass, &sCharClass, 0x10 );

	this->ProcessEvent ( pFnUpdateBonusTalentList, &UpdateBonusTalentList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.StartGameWithCustomCharacter
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FString>  playerSettings                 ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::StartGameWithCustomCharacter ( struct TArray<struct FString>* playerSettings )
{
	static UFunction* pFnStartGameWithCustomCharacter = NULL;

	if ( ! pFnStartGameWithCustomCharacter )
		pFnStartGameWithCustomCharacter = (UFunction*) UObject::GObjObjects()->Data[ 62642 ];

	UBioSFHandler_NewCharacter_execStartGameWithCustomCharacter_Parms StartGameWithCustomCharacter_Parms;

	this->ProcessEvent ( pFnStartGameWithCustomCharacter, &StartGameWithCustomCharacter_Parms, NULL );

	if ( playerSettings )
		memcpy ( playerSettings, &StartGameWithCustomCharacter_Parms.playerSettings, 0x10 );
};

// Function SFXGame.BioSFHandler_NewCharacter.StartGameWithIconicCharacter
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FString>  lstSettings                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::StartGameWithIconicCharacter ( struct TArray<struct FString>* lstSettings )
{
	static UFunction* pFnStartGameWithIconicCharacter = NULL;

	if ( ! pFnStartGameWithIconicCharacter )
		pFnStartGameWithIconicCharacter = (UFunction*) UObject::GObjObjects()->Data[ 62640 ];

	UBioSFHandler_NewCharacter_execStartGameWithIconicCharacter_Parms StartGameWithIconicCharacter_Parms;

	this->ProcessEvent ( pFnStartGameWithIconicCharacter, &StartGameWithIconicCharacter_Parms, NULL );

	if ( lstSettings )
		memcpy ( lstSettings, &StartGameWithIconicCharacter_Parms.lstSettings, 0x10 );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateCustomClassChoice
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioCharacterImporter*   importer                       ( CPF_Parm )
// int                            Row                            ( CPF_Parm )

void UBioSFHandler_NewCharacter::UpdateCustomClassChoice ( class UBioCharacterImporter* importer, int Row )
{
	static UFunction* pFnUpdateCustomClassChoice = NULL;

	if ( ! pFnUpdateCustomClassChoice )
		pFnUpdateCustomClassChoice = (UFunction*) UObject::GObjObjects()->Data[ 62733 ];

	UBioSFHandler_NewCharacter_execUpdateCustomClassChoice_Parms UpdateCustomClassChoice_Parms;
	UpdateCustomClassChoice_Parms.importer = importer;
	UpdateCustomClassChoice_Parms.Row = Row;

	this->ProcessEvent ( pFnUpdateCustomClassChoice, &UpdateCustomClassChoice_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateCustomClassList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::UpdateCustomClassList ( )
{
	static UFunction* pFnUpdateCustomClassList = NULL;

	if ( ! pFnUpdateCustomClassList )
		pFnUpdateCustomClassList = (UFunction*) UObject::GObjObjects()->Data[ 62651 ];

	UBioSFHandler_NewCharacter_execUpdateCustomClassList_Parms UpdateCustomClassList_Parms;

	this->ProcessEvent ( pFnUpdateCustomClassList, &UpdateCustomClassList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdatePreviousCharacterList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::UpdatePreviousCharacterList ( )
{
	static UFunction* pFnUpdatePreviousCharacterList = NULL;

	if ( ! pFnUpdatePreviousCharacterList )
		pFnUpdatePreviousCharacterList = (UFunction*) UObject::GObjObjects()->Data[ 62652 ];

	UBioSFHandler_NewCharacter_execUpdatePreviousCharacterList_Parms UpdatePreviousCharacterList_Parms;

	this->ProcessEvent ( pFnUpdatePreviousCharacterList, &UpdatePreviousCharacterList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SetupSummary
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_NewCharacter::SetupSummary ( )
{
	static UFunction* pFnSetupSummary = NULL;

	if ( ! pFnSetupSummary )
		pFnSetupSummary = (UFunction*) UObject::GObjObjects()->Data[ 62653 ];

	UBioSFHandler_NewCharacter_execSetupSummary_Parms SetupSummary_Parms;

	this->ProcessEvent ( pFnSetupSummary, &SetupSummary_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.SetCustomName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 sMaleName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFemaleName                    ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::SetCustomName ( struct FString sMaleName, struct FString sFemaleName )
{
	static UFunction* pFnSetCustomName = NULL;

	if ( ! pFnSetCustomName )
		pFnSetCustomName = (UFunction*) UObject::GObjObjects()->Data[ 62650 ];

	UBioSFHandler_NewCharacter_execSetCustomName_Parms SetCustomName_Parms;
	memcpy ( &SetCustomName_Parms.sMaleName, &sMaleName, 0x10 );
	memcpy ( &SetCustomName_Parms.sFemaleName, &sFemaleName, 0x10 );

	this->ProcessEvent ( pFnSetCustomName, &SetCustomName_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.UpdateCode
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_NewCharacter::UpdateCode ( )
{
	static UFunction* pFnUpdateCode = NULL;

	if ( ! pFnUpdateCode )
		pFnUpdateCode = (UFunction*) UObject::GObjObjects()->Data[ 62699 ];

	UBioSFHandler_NewCharacter_execUpdateCode_Parms UpdateCode_Parms;

	this->ProcessEvent ( pFnUpdateCode, &UpdateCode_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ApplyNewCode
// [0x00020002] 
// Parameters infos:
// struct FString                 sInputCode                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::ApplyNewCode ( struct FString sInputCode )
{
	static UFunction* pFnApplyNewCode = NULL;

	if ( ! pFnApplyNewCode )
		pFnApplyNewCode = (UFunction*) UObject::GObjObjects()->Data[ 62691 ];

	UBioSFHandler_NewCharacter_execApplyNewCode_Parms ApplyNewCode_Parms;
	memcpy ( &ApplyNewCode_Parms.sInputCode, &sInputCode, 0x10 );

	this->ProcessEvent ( pFnApplyNewCode, &ApplyNewCode_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_NewCharacter::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62686 ];

	UBioSFHandler_NewCharacter_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.ResetLookAt
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_NewCharacter::ResetLookAt ( )
{
	static UFunction* pFnResetLookAt = NULL;

	if ( ! pFnResetLookAt )
		pFnResetLookAt = (UFunction*) UObject::GObjObjects()->Data[ 62685 ];

	UBioSFHandler_NewCharacter_execResetLookAt_Parms ResetLookAt_Parms;

	this->ProcessEvent ( pFnResetLookAt, &ResetLookAt_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleLookAtLeftRight
// [0x00020002] 
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UBioSFHandler_NewCharacter::HandleLookAtLeftRight ( float fValue )
{
	static UFunction* pFnHandleLookAtLeftRight = NULL;

	if ( ! pFnHandleLookAtLeftRight )
		pFnHandleLookAtLeftRight = (UFunction*) UObject::GObjObjects()->Data[ 62682 ];

	UBioSFHandler_NewCharacter_execHandleLookAtLeftRight_Parms HandleLookAtLeftRight_Parms;
	HandleLookAtLeftRight_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleLookAtLeftRight, &HandleLookAtLeftRight_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleLookAtUpDown
// [0x00020002] 
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UBioSFHandler_NewCharacter::HandleLookAtUpDown ( float fValue )
{
	static UFunction* pFnHandleLookAtUpDown = NULL;

	if ( ! pFnHandleLookAtUpDown )
		pFnHandleLookAtUpDown = (UFunction*) UObject::GObjObjects()->Data[ 62675 ];

	UBioSFHandler_NewCharacter_execHandleLookAtUpDown_Parms HandleLookAtUpDown_Parms;
	HandleLookAtUpDown_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleLookAtUpDown, &HandleLookAtUpDown_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleRotate
// [0x00020002] 
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UBioSFHandler_NewCharacter::HandleRotate ( float fValue )
{
	static UFunction* pFnHandleRotate = NULL;

	if ( ! pFnHandleRotate )
		pFnHandleRotate = (UFunction*) UObject::GObjObjects()->Data[ 62673 ];

	UBioSFHandler_NewCharacter_execHandleRotate_Parms HandleRotate_Parms;
	HandleRotate_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleRotate, &HandleRotate_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_NewCharacter::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 62669 ];

	UBioSFHandler_NewCharacter_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.AStoLog
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::AStoLog ( struct FString msg )
{
	static UFunction* pFnAStoLog = NULL;

	if ( ! pFnAStoLog )
		pFnAStoLog = (UFunction*) UObject::GObjObjects()->Data[ 62667 ];

	UBioSFHandler_NewCharacter_execAStoLog_Parms AStoLog_Parms;
	memcpy ( &AStoLog_Parms.msg, &msg, 0x10 );

	this->ProcessEvent ( pFnAStoLog, &AStoLog_Parms, NULL );
};

// Function SFXGame.BioSFHandler_NewCharacter.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62622 ];

	UBioSFHandler_NewCharacter_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_NewCharacter.ClipboardPaste
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioSFHandler_NewCharacter::ClipboardPaste ( )
{
	static UFunction* pFnClipboardPaste = NULL;

	if ( ! pFnClipboardPaste )
		pFnClipboardPaste = (UFunction*) UObject::GObjObjects()->Data[ 62620 ];

	UBioSFHandler_NewCharacter_execClipboardPaste_Parms ClipboardPaste_Parms;

	pFnClipboardPaste->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClipboardPaste, &ClipboardPaste_Parms, NULL );

	pFnClipboardPaste->FunctionFlags |= 0x400;

	return ClipboardPaste_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_NewCharacter.ClipboardCopy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_NewCharacter::ClipboardCopy ( struct FString sString )
{
	static UFunction* pFnClipboardCopy = NULL;

	if ( ! pFnClipboardCopy )
		pFnClipboardCopy = (UFunction*) UObject::GObjObjects()->Data[ 62618 ];

	UBioSFHandler_NewCharacter_execClipboardCopy_Parms ClipboardCopy_Parms;
	memcpy ( &ClipboardCopy_Parms.sString, &sString, 0x10 );

	pFnClipboardCopy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClipboardCopy, &ClipboardCopy_Parms, NULL );

	pFnClipboardCopy->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_NewCharacter.ClearEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_NewCharacter::ClearEffects ( )
{
	static UFunction* pFnClearEffects = NULL;

	if ( ! pFnClearEffects )
		pFnClearEffects = (UFunction*) UObject::GObjObjects()->Data[ 62617 ];

	UBioSFHandler_NewCharacter_execClearEffects_Parms ClearEffects_Parms;

	pFnClearEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearEffects, &ClearEffects_Parms, NULL );

	pFnClearEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_NewCharacter.Update3DModelByClass
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmClass                        ( CPF_Parm )
// class ABioPawn*                pTemplate                      ( CPF_Parm )
// unsigned char                  nTemplate                      ( CPF_Parm )
// unsigned long                  bUpdate                        ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bAttachVFXandUpdatePose        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_NewCharacter::Update3DModelByClass ( struct FName nmClass, class ABioPawn* pTemplate, unsigned char nTemplate, unsigned long bUpdate, unsigned long bForce, unsigned long bAttachVFXandUpdatePose )
{
	static UFunction* pFnUpdate3DModelByClass = NULL;

	if ( ! pFnUpdate3DModelByClass )
		pFnUpdate3DModelByClass = (UFunction*) UObject::GObjObjects()->Data[ 62610 ];

	UBioSFHandler_NewCharacter_execUpdate3DModelByClass_Parms Update3DModelByClass_Parms;
	memcpy ( &Update3DModelByClass_Parms.nmClass, &nmClass, 0x8 );
	Update3DModelByClass_Parms.pTemplate = pTemplate;
	Update3DModelByClass_Parms.nTemplate = nTemplate;
	Update3DModelByClass_Parms.bUpdate = bUpdate;
	Update3DModelByClass_Parms.bForce = bForce;
	Update3DModelByClass_Parms.bAttachVFXandUpdatePose = bAttachVFXandUpdatePose;

	pFnUpdate3DModelByClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate3DModelByClass, &Update3DModelByClass_Parms, NULL );

	pFnUpdate3DModelByClass->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_NewCharacter.Setup3DModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_NewCharacter::Setup3DModel ( )
{
	static UFunction* pFnSetup3DModel = NULL;

	if ( ! pFnSetup3DModel )
		pFnSetup3DModel = (UFunction*) UObject::GObjObjects()->Data[ 62609 ];

	UBioSFHandler_NewCharacter_execSetup3DModel_Parms Setup3DModel_Parms;

	pFnSetup3DModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetup3DModel, &Setup3DModel_Parms, NULL );

	pFnSetup3DModel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCNewCharacter.setZoominFaceVar
// [0x00020002] 
// Parameters infos:
// unsigned long                  zoomIn                         ( CPF_Parm )

void UBioSFHandler_PCNewCharacter::setZoominFaceVar ( unsigned long zoomIn )
{
	static UFunction* pFnsetZoominFaceVar = NULL;

	if ( ! pFnsetZoominFaceVar )
		pFnsetZoominFaceVar = (UFunction*) UObject::GObjObjects()->Data[ 63076 ];

	UBioSFHandler_PCNewCharacter_execsetZoominFaceVar_Parms setZoominFaceVar_Parms;
	setZoominFaceVar_Parms.zoomIn = zoomIn;

	this->ProcessEvent ( pFnsetZoominFaceVar, &setZoominFaceVar_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.HandleLookAtLeftRightMouse
// [0x00020002] 
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UBioSFHandler_PCNewCharacter::HandleLookAtLeftRightMouse ( float fValue )
{
	static UFunction* pFnHandleLookAtLeftRightMouse = NULL;

	if ( ! pFnHandleLookAtLeftRightMouse )
		pFnHandleLookAtLeftRightMouse = (UFunction*) UObject::GObjObjects()->Data[ 63073 ];

	UBioSFHandler_PCNewCharacter_execHandleLookAtLeftRightMouse_Parms HandleLookAtLeftRightMouse_Parms;
	HandleLookAtLeftRightMouse_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleLookAtLeftRightMouse, &HandleLookAtLeftRightMouse_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.HandleLookAtUpDownMouse
// [0x00020002] 
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UBioSFHandler_PCNewCharacter::HandleLookAtUpDownMouse ( float fValue )
{
	static UFunction* pFnHandleLookAtUpDownMouse = NULL;

	if ( ! pFnHandleLookAtUpDownMouse )
		pFnHandleLookAtUpDownMouse = (UFunction*) UObject::GObjObjects()->Data[ 63070 ];

	UBioSFHandler_PCNewCharacter_execHandleLookAtUpDownMouse_Parms HandleLookAtUpDownMouse_Parms;
	HandleLookAtUpDownMouse_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleLookAtUpDownMouse, &HandleLookAtUpDownMouse_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_PCNewCharacter::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 63064 ];

	UBioSFHandler_PCNewCharacter_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCNewCharacter::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63059 ];

	UBioSFHandler_PCNewCharacter_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCNewCharacter::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63058 ];

	UBioSFHandler_PCNewCharacter_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCNewCharacter.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCNewCharacter::eventUpdate ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 63056 ];

	UBioSFHandler_PCNewCharacter_eventUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Options.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Options::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62860 ];

	UBioSFHandler_Options_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Options.ConfirmResetTutorials
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_Options::ConfirmResetTutorials ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmResetTutorials = NULL;

	if ( ! pFnConfirmResetTutorials )
		pFnConfirmResetTutorials = (UFunction*) UObject::GObjObjects()->Data[ 62857 ];

	UBioSFHandler_Options_execConfirmResetTutorials_Parms ConfirmResetTutorials_Parms;
	ConfirmResetTutorials_Parms.bAPressed = bAPressed;
	ConfirmResetTutorials_Parms.nContext = nContext;

	pFnConfirmResetTutorials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmResetTutorials, &ConfirmResetTutorials_Parms, NULL );

	pFnConfirmResetTutorials->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.ConfirmResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_Options::ConfirmResetToDefaults ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmResetToDefaults = NULL;

	if ( ! pFnConfirmResetToDefaults )
		pFnConfirmResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 62854 ];

	UBioSFHandler_Options_execConfirmResetToDefaults_Parms ConfirmResetToDefaults_Parms;
	ConfirmResetToDefaults_Parms.bAPressed = bAPressed;
	ConfirmResetToDefaults_Parms.nContext = nContext;

	pFnConfirmResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmResetToDefaults, &ConfirmResetToDefaults_Parms, NULL );

	pFnConfirmResetToDefaults->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.OptionsConfirmCancel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_Options::OptionsConfirmCancel ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnOptionsConfirmCancel = NULL;

	if ( ! pFnOptionsConfirmCancel )
		pFnOptionsConfirmCancel = (UFunction*) UObject::GObjObjects()->Data[ 62851 ];

	UBioSFHandler_Options_execOptionsConfirmCancel_Parms OptionsConfirmCancel_Parms;
	OptionsConfirmCancel_Parms.bAPressed = bAPressed;
	OptionsConfirmCancel_Parms.nContext = nContext;

	pFnOptionsConfirmCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOptionsConfirmCancel, &OptionsConfirmCancel_Parms, NULL );

	pFnOptionsConfirmCancel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.SetHDRStatus
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_Options::SetHDRStatus ( )
{
	static UFunction* pFnSetHDRStatus = NULL;

	if ( ! pFnSetHDRStatus )
		pFnSetHDRStatus = (UFunction*) UObject::GObjObjects()->Data[ 62850 ];

	UBioSFHandler_Options_execSetHDRStatus_Parms SetHDRStatus_Parms;

	pFnSetHDRStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHDRStatus, &SetHDRStatus_Parms, NULL );

	pFnSetHDRStatus->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.CloseGui
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_Options::CloseGui ( )
{
	static UFunction* pFnCloseGui = NULL;

	if ( ! pFnCloseGui )
		pFnCloseGui = (UFunction*) UObject::GObjObjects()->Data[ 62849 ];

	UBioSFHandler_Options_execCloseGui_Parms CloseGui_Parms;

	pFnCloseGui->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCloseGui, &CloseGui_Parms, NULL );

	pFnCloseGui->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.ConfirmGoToMainMenu
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_Options::ConfirmGoToMainMenu ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmGoToMainMenu = NULL;

	if ( ! pFnConfirmGoToMainMenu )
		pFnConfirmGoToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 62846 ];

	UBioSFHandler_Options_execConfirmGoToMainMenu_Parms ConfirmGoToMainMenu_Parms;
	ConfirmGoToMainMenu_Parms.bAPressed = bAPressed;
	ConfirmGoToMainMenu_Parms.nContext = nContext;

	pFnConfirmGoToMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmGoToMainMenu, &ConfirmGoToMainMenu_Parms, NULL );

	pFnConfirmGoToMainMenu->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.OptionsConfirmCommit
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bDoNotClose                    ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Options::OptionsConfirmCommit ( unsigned long bAPressed, int nContext, unsigned long bDoNotClose )
{
	static UFunction* pFnOptionsConfirmCommit = NULL;

	if ( ! pFnOptionsConfirmCommit )
		pFnOptionsConfirmCommit = (UFunction*) UObject::GObjObjects()->Data[ 62842 ];

	UBioSFHandler_Options_execOptionsConfirmCommit_Parms OptionsConfirmCommit_Parms;
	OptionsConfirmCommit_Parms.bAPressed = bAPressed;
	OptionsConfirmCommit_Parms.nContext = nContext;
	OptionsConfirmCommit_Parms.bDoNotClose = bDoNotClose;

	pFnOptionsConfirmCommit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOptionsConfirmCommit, &OptionsConfirmCommit_Parms, NULL );

	pFnOptionsConfirmCommit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Options.SetOptionsOnGUI
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            i_GameOptions                  ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_Options::SetOptionsOnGUI ( struct FGameOptions* i_GameOptions )
{
	static UFunction* pFnSetOptionsOnGUI = NULL;

	if ( ! pFnSetOptionsOnGUI )
		pFnSetOptionsOnGUI = (UFunction*) UObject::GObjObjects()->Data[ 62840 ];

	UBioSFHandler_Options_execSetOptionsOnGUI_Parms SetOptionsOnGUI_Parms;

	pFnSetOptionsOnGUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOptionsOnGUI, &SetOptionsOnGUI_Parms, NULL );

	pFnSetOptionsOnGUI->FunctionFlags |= 0x400;

	if ( i_GameOptions )
		memcpy ( i_GameOptions, &SetOptionsOnGUI_Parms.i_GameOptions, 0xB0 );
};

// Function SFXGame.BioSFHandler_PCOptions.StoreIncomingResolution
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::StoreIncomingResolution ( )
{
	static UFunction* pFnStoreIncomingResolution = NULL;

	if ( ! pFnStoreIncomingResolution )
		pFnStoreIncomingResolution = (UFunction*) UObject::GObjObjects()->Data[ 63617 ];

	UBioSFHandler_PCOptions_execStoreIncomingResolution_Parms StoreIncomingResolution_Parms;

	pFnStoreIncomingResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStoreIncomingResolution, &StoreIncomingResolution_Parms, NULL );

	pFnStoreIncomingResolution->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.WillChangeDisplay
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_PCOptions::WillChangeDisplay ( )
{
	static UFunction* pFnWillChangeDisplay = NULL;

	if ( ! pFnWillChangeDisplay )
		pFnWillChangeDisplay = (UFunction*) UObject::GObjObjects()->Data[ 63629 ];

	UBioSFHandler_PCOptions_execWillChangeDisplay_Parms WillChangeDisplay_Parms;

	pFnWillChangeDisplay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWillChangeDisplay, &WillChangeDisplay_Parms, NULL );

	pFnWillChangeDisplay->FunctionFlags |= 0x400;

	return WillChangeDisplay_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.RevertSettings
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::RevertSettings ( )
{
	static UFunction* pFnRevertSettings = NULL;

	if ( ! pFnRevertSettings )
		pFnRevertSettings = (UFunction*) UObject::GObjObjects()->Data[ 63639 ];

	UBioSFHandler_PCOptions_execRevertSettings_Parms RevertSettings_Parms;

	pFnRevertSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRevertSettings, &RevertSettings_Parms, NULL );

	pFnRevertSettings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetInExtendedTelemetryCache
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eOptionId                      ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioSFHandler_PCOptions::SetInExtendedTelemetryCache ( unsigned char eOptionId, int nValue )
{
	static UFunction* pFnSetInExtendedTelemetryCache = NULL;

	if ( ! pFnSetInExtendedTelemetryCache )
		pFnSetInExtendedTelemetryCache = (UFunction*) UObject::GObjObjects()->Data[ 63659 ];

	UBioSFHandler_PCOptions_execSetInExtendedTelemetryCache_Parms SetInExtendedTelemetryCache_Parms;
	SetInExtendedTelemetryCache_Parms.eOptionId = eOptionId;
	SetInExtendedTelemetryCache_Parms.nValue = nValue;

	pFnSetInExtendedTelemetryCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetInExtendedTelemetryCache, &SetInExtendedTelemetryCache_Parms, NULL );

	pFnSetInExtendedTelemetryCache->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetInTelemetryCache
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eOptionId                      ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioSFHandler_PCOptions::SetInTelemetryCache ( unsigned char eOptionId, int nValue )
{
	static UFunction* pFnSetInTelemetryCache = NULL;

	if ( ! pFnSetInTelemetryCache )
		pFnSetInTelemetryCache = (UFunction*) UObject::GObjObjects()->Data[ 63656 ];

	UBioSFHandler_PCOptions_execSetInTelemetryCache_Parms SetInTelemetryCache_Parms;
	SetInTelemetryCache_Parms.eOptionId = eOptionId;
	SetInTelemetryCache_Parms.nValue = nValue;

	pFnSetInTelemetryCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetInTelemetryCache, &SetInTelemetryCache_Parms, NULL );

	pFnSetInTelemetryCache->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyShadowDetail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyShadowDetail ( )
{
	static UFunction* pFnApplyShadowDetail = NULL;

	if ( ! pFnApplyShadowDetail )
		pFnApplyShadowDetail = (UFunction*) UObject::GObjObjects()->Data[ 63655 ];

	UBioSFHandler_PCOptions_execApplyShadowDetail_Parms ApplyShadowDetail_Parms;

	pFnApplyShadowDetail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyShadowDetail, &ApplyShadowDetail_Parms, NULL );

	pFnApplyShadowDetail->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyVideoChangesResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyVideoChangesResolution ( )
{
	static UFunction* pFnApplyVideoChangesResolution = NULL;

	if ( ! pFnApplyVideoChangesResolution )
		pFnApplyVideoChangesResolution = (UFunction*) UObject::GObjObjects()->Data[ 63654 ];

	UBioSFHandler_PCOptions_execApplyVideoChangesResolution_Parms ApplyVideoChangesResolution_Parms;

	pFnApplyVideoChangesResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyVideoChangesResolution, &ApplyVideoChangesResolution_Parms, NULL );

	pFnApplyVideoChangesResolution->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.InitSystemSettingsCache
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::InitSystemSettingsCache ( )
{
	static UFunction* pFnInitSystemSettingsCache = NULL;

	if ( ! pFnInitSystemSettingsCache )
		pFnInitSystemSettingsCache = (UFunction*) UObject::GObjObjects()->Data[ 63365 ];

	UBioSFHandler_PCOptions_execInitSystemSettingsCache_Parms InitSystemSettingsCache_Parms;

	pFnInitSystemSettingsCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitSystemSettingsCache, &InitSystemSettingsCache_Parms, NULL );

	pFnInitSystemSettingsCache->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.Callback_ConfirmDisplayChange
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            context                        ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_PCOptions::Callback_ConfirmDisplayChange ( unsigned long bAPressed, int context, unsigned long bYPressed )
{
	static UFunction* pFnCallback_ConfirmDisplayChange = NULL;

	if ( ! pFnCallback_ConfirmDisplayChange )
		pFnCallback_ConfirmDisplayChange = (UFunction*) UObject::GObjObjects()->Data[ 63650 ];

	UBioSFHandler_PCOptions_execCallback_ConfirmDisplayChange_Parms Callback_ConfirmDisplayChange_Parms;
	Callback_ConfirmDisplayChange_Parms.bAPressed = bAPressed;
	Callback_ConfirmDisplayChange_Parms.context = context;
	Callback_ConfirmDisplayChange_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnCallback_ConfirmDisplayChange, &Callback_ConfirmDisplayChange_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateResolutionIndex
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::UpdateResolutionIndex ( )
{
	static UFunction* pFnUpdateResolutionIndex = NULL;

	if ( ! pFnUpdateResolutionIndex )
		pFnUpdateResolutionIndex = (UFunction*) UObject::GObjObjects()->Data[ 63640 ];

	UBioSFHandler_PCOptions_execUpdateResolutionIndex_Parms UpdateResolutionIndex_Parms;

	this->ProcessEvent ( pFnUpdateResolutionIndex, &UpdateResolutionIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.Callback_DisplayChangeTimeout
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::Callback_DisplayChangeTimeout ( )
{
	static UFunction* pFnCallback_DisplayChangeTimeout = NULL;

	if ( ! pFnCallback_DisplayChangeTimeout )
		pFnCallback_DisplayChangeTimeout = (UFunction*) UObject::GObjObjects()->Data[ 63638 ];

	UBioSFHandler_PCOptions_execCallback_DisplayChangeTimeout_Parms Callback_DisplayChangeTimeout_Parms;

	this->ProcessEvent ( pFnCallback_DisplayChangeTimeout, &Callback_DisplayChangeTimeout_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ConfirmDisplayChange
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::ConfirmDisplayChange ( )
{
	static UFunction* pFnConfirmDisplayChange = NULL;

	if ( ! pFnConfirmDisplayChange )
		pFnConfirmDisplayChange = (UFunction*) UObject::GObjObjects()->Data[ 63630 ];

	UBioSFHandler_PCOptions_execConfirmDisplayChange_Parms ConfirmDisplayChange_Parms;

	this->ProcessEvent ( pFnConfirmDisplayChange, &ConfirmDisplayChange_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDisplayChanges
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::SetDisplayChanges ( )
{
	static UFunction* pFnSetDisplayChanges = NULL;

	if ( ! pFnSetDisplayChanges )
		pFnSetDisplayChanges = (UFunction*) UObject::GObjObjects()->Data[ 63626 ];

	UBioSFHandler_PCOptions_execSetDisplayChanges_Parms SetDisplayChanges_Parms;

	this->ProcessEvent ( pFnSetDisplayChanges, &SetDisplayChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyCalibrationChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyCalibrationChanges ( )
{
	static UFunction* pFnApplyCalibrationChanges = NULL;

	if ( ! pFnApplyCalibrationChanges )
		pFnApplyCalibrationChanges = (UFunction*) UObject::GObjObjects()->Data[ 63465 ];

	UBioSFHandler_PCOptions_execApplyCalibrationChanges_Parms ApplyCalibrationChanges_Parms;

	this->ProcessEvent ( pFnApplyCalibrationChanges, &ApplyCalibrationChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyVideoChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyVideoChanges ( )
{
	static UFunction* pFnApplyVideoChanges = NULL;

	if ( ! pFnApplyVideoChanges )
		pFnApplyVideoChanges = (UFunction*) UObject::GObjObjects()->Data[ 63464 ];

	UBioSFHandler_PCOptions_execApplyVideoChanges_Parms ApplyVideoChanges_Parms;

	this->ProcessEvent ( pFnApplyVideoChanges, &ApplyVideoChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAntiAliasingLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            AALevel                        ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAntiAliasingLevel ( int AALevel )
{
	static UFunction* pFnSetAntiAliasingLevel = NULL;

	if ( ! pFnSetAntiAliasingLevel )
		pFnSetAntiAliasingLevel = (UFunction*) UObject::GObjObjects()->Data[ 63395 ];

	UBioSFHandler_PCOptions_execSetAntiAliasingLevel_Parms SetAntiAliasingLevel_Parms;
	SetAntiAliasingLevel_Parms.AALevel = AALevel;

	this->ProcessEvent ( pFnSetAntiAliasingLevel, &SetAntiAliasingLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetShadowDetailLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  ShadowDetailLevel              ( CPF_Parm )

void UBioSFHandler_PCOptions::SetShadowDetailLevel ( unsigned long ShadowDetailLevel )
{
	static UFunction* pFnSetShadowDetailLevel = NULL;

	if ( ! pFnSetShadowDetailLevel )
		pFnSetShadowDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 63390 ];

	UBioSFHandler_PCOptions_execSetShadowDetailLevel_Parms SetShadowDetailLevel_Parms;
	SetShadowDetailLevel_Parms.ShadowDetailLevel = ShadowDetailLevel;

	this->ProcessEvent ( pFnSetShadowDetailLevel, &SetShadowDetailLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetFilterLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            FilterLevel                    ( CPF_Parm )

void UBioSFHandler_PCOptions::SetFilterLevel ( int FilterLevel )
{
	static UFunction* pFnSetFilterLevel = NULL;

	if ( ! pFnSetFilterLevel )
		pFnSetFilterLevel = (UFunction*) UObject::GObjObjects()->Data[ 63389 ];

	UBioSFHandler_PCOptions_execSetFilterLevel_Parms SetFilterLevel_Parms;
	SetFilterLevel_Parms.FilterLevel = FilterLevel;

	this->ProcessEvent ( pFnSetFilterLevel, &SetFilterLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetShaderFilmLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            FilmDetailLevel                ( CPF_Parm )

void UBioSFHandler_PCOptions::SetShaderFilmLevel ( int FilmDetailLevel )
{
	static UFunction* pFnSetShaderFilmLevel = NULL;

	if ( ! pFnSetShaderFilmLevel )
		pFnSetShaderFilmLevel = (UFunction*) UObject::GObjObjects()->Data[ 63388 ];

	UBioSFHandler_PCOptions_execSetShaderFilmLevel_Parms SetShaderFilmLevel_Parms;
	SetShaderFilmLevel_Parms.FilmDetailLevel = FilmDetailLevel;

	this->ProcessEvent ( pFnSetShaderFilmLevel, &SetShaderFilmLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetShaderBlurLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            BlurDetailLevel                ( CPF_Parm )

void UBioSFHandler_PCOptions::SetShaderBlurLevel ( int BlurDetailLevel )
{
	static UFunction* pFnSetShaderBlurLevel = NULL;

	if ( ! pFnSetShaderBlurLevel )
		pFnSetShaderBlurLevel = (UFunction*) UObject::GObjObjects()->Data[ 63387 ];

	UBioSFHandler_PCOptions_execSetShaderBlurLevel_Parms SetShaderBlurLevel_Parms;
	SetShaderBlurLevel_Parms.BlurDetailLevel = BlurDetailLevel;

	this->ProcessEvent ( pFnSetShaderBlurLevel, &SetShaderBlurLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetTextureLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            TextureLevel                   ( CPF_Parm )

void UBioSFHandler_PCOptions::SetTextureLevel ( int TextureLevel )
{
	static UFunction* pFnSetTextureLevel = NULL;

	if ( ! pFnSetTextureLevel )
		pFnSetTextureLevel = (UFunction*) UObject::GObjObjects()->Data[ 63386 ];

	UBioSFHandler_PCOptions_execSetTextureLevel_Parms SetTextureLevel_Parms;
	SetTextureLevel_Parms.TextureLevel = TextureLevel;

	this->ProcessEvent ( pFnSetTextureLevel, &SetTextureLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetScreenRes
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            NewScreenRes                   ( CPF_Parm )

void UBioSFHandler_PCOptions::SetScreenRes ( int NewScreenRes )
{
	static UFunction* pFnSetScreenRes = NULL;

	if ( ! pFnSetScreenRes )
		pFnSetScreenRes = (UFunction*) UObject::GObjObjects()->Data[ 63385 ];

	UBioSFHandler_PCOptions_execSetScreenRes_Parms SetScreenRes_Parms;
	SetScreenRes_Parms.NewScreenRes = NewScreenRes;

	this->ProcessEvent ( pFnSetScreenRes, &SetScreenRes_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetWindow
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            NewMode                        ( CPF_Parm )

void UBioSFHandler_PCOptions::SetWindow ( int NewMode )
{
	static UFunction* pFnSetWindow = NULL;

	if ( ! pFnSetWindow )
		pFnSetWindow = (UFunction*) UObject::GObjObjects()->Data[ 63384 ];

	UBioSFHandler_PCOptions_execSetWindow_Parms SetWindow_Parms;
	SetWindow_Parms.NewMode = NewMode;

	this->ProcessEvent ( pFnSetWindow, &SetWindow_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetParticleEffectsLevel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            newLevel                       ( CPF_Parm )

void UBioSFHandler_PCOptions::SetParticleEffectsLevel ( int newLevel )
{
	static UFunction* pFnSetParticleEffectsLevel = NULL;

	if ( ! pFnSetParticleEffectsLevel )
		pFnSetParticleEffectsLevel = (UFunction*) UObject::GObjObjects()->Data[ 63383 ];

	UBioSFHandler_PCOptions_execSetParticleEffectsLevel_Parms SetParticleEffectsLevel_Parms;
	SetParticleEffectsLevel_Parms.newLevel = newLevel;

	this->ProcessEvent ( pFnSetParticleEffectsLevel, &SetParticleEffectsLevel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetVSyncOn
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetVSyncOn ( unsigned long bOn )
{
	static UFunction* pFnSetVSyncOn = NULL;

	if ( ! pFnSetVSyncOn )
		pFnSetVSyncOn = (UFunction*) UObject::GObjObjects()->Data[ 63382 ];

	UBioSFHandler_PCOptions_execSetVSyncOn_Parms SetVSyncOn_Parms;
	SetVSyncOn_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetVSyncOn, &SetVSyncOn_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetSelectedMonitor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            monitorIndex                   ( CPF_Parm )

void UBioSFHandler_PCOptions::SetSelectedMonitor ( int monitorIndex )
{
	static UFunction* pFnSetSelectedMonitor = NULL;

	if ( ! pFnSetSelectedMonitor )
		pFnSetSelectedMonitor = (UFunction*) UObject::GObjObjects()->Data[ 63611 ];

	UBioSFHandler_PCOptions_execSetSelectedMonitor_Parms SetSelectedMonitor_Parms;
	SetSelectedMonitor_Parms.monitorIndex = monitorIndex;

	pFnSetSelectedMonitor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSelectedMonitor, &SetSelectedMonitor_Parms, NULL );

	pFnSetSelectedMonitor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetSelectedMonitorIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSFHandler_PCOptions::GetSelectedMonitorIndex ( )
{
	static UFunction* pFnGetSelectedMonitorIndex = NULL;

	if ( ! pFnGetSelectedMonitorIndex )
		pFnGetSelectedMonitorIndex = (UFunction*) UObject::GObjObjects()->Data[ 63609 ];

	UBioSFHandler_PCOptions_execGetSelectedMonitorIndex_Parms GetSelectedMonitorIndex_Parms;

	pFnGetSelectedMonitorIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectedMonitorIndex, &GetSelectedMonitorIndex_Parms, NULL );

	pFnGetSelectedMonitorIndex->FunctionFlags |= 0x400;

	return GetSelectedMonitorIndex_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.SetAmbientOcclusion
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetAmbientOcclusion ( )
{
	static UFunction* pFnSetAmbientOcclusion = NULL;

	if ( ! pFnSetAmbientOcclusion )
		pFnSetAmbientOcclusion = (UFunction*) UObject::GObjObjects()->Data[ 63608 ];

	UBioSFHandler_PCOptions_execSetAmbientOcclusion_Parms SetAmbientOcclusion_Parms;

	pFnSetAmbientOcclusion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAmbientOcclusion, &SetAmbientOcclusion_Parms, NULL );

	pFnSetAmbientOcclusion->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetAmbientOcclusion
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetAmbientOcclusion ( )
{
	static UFunction* pFnGetAmbientOcclusion = NULL;

	if ( ! pFnGetAmbientOcclusion )
		pFnGetAmbientOcclusion = (UFunction*) UObject::GObjObjects()->Data[ 63607 ];

	UBioSFHandler_PCOptions_execGetAmbientOcclusion_Parms GetAmbientOcclusion_Parms;

	pFnGetAmbientOcclusion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAmbientOcclusion, &GetAmbientOcclusion_Parms, NULL );

	pFnGetAmbientOcclusion->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.BuildMonitorList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::BuildMonitorList ( )
{
	static UFunction* pFnBuildMonitorList = NULL;

	if ( ! pFnBuildMonitorList )
		pFnBuildMonitorList = (UFunction*) UObject::GObjObjects()->Data[ 63606 ];

	UBioSFHandler_PCOptions_execBuildMonitorList_Parms BuildMonitorList_Parms;

	pFnBuildMonitorList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildMonitorList, &BuildMonitorList_Parms, NULL );

	pFnBuildMonitorList->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyDynamicResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyDynamicResolution ( )
{
	static UFunction* pFnApplyDynamicResolution = NULL;

	if ( ! pFnApplyDynamicResolution )
		pFnApplyDynamicResolution = (UFunction*) UObject::GObjObjects()->Data[ 63605 ];

	UBioSFHandler_PCOptions_execApplyDynamicResolution_Parms ApplyDynamicResolution_Parms;

	pFnApplyDynamicResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyDynamicResolution, &ApplyDynamicResolution_Parms, NULL );

	pFnApplyDynamicResolution->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetDynamicResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetDynamicResolution ( )
{
	static UFunction* pFnGetDynamicResolution = NULL;

	if ( ! pFnGetDynamicResolution )
		pFnGetDynamicResolution = (UFunction*) UObject::GObjObjects()->Data[ 63604 ];

	UBioSFHandler_PCOptions_execGetDynamicResolution_Parms GetDynamicResolution_Parms;

	pFnGetDynamicResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDynamicResolution, &GetDynamicResolution_Parms, NULL );

	pFnGetDynamicResolution->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyParticleEffectsLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyParticleEffectsLevel ( )
{
	static UFunction* pFnApplyParticleEffectsLevel = NULL;

	if ( ! pFnApplyParticleEffectsLevel )
		pFnApplyParticleEffectsLevel = (UFunction*) UObject::GObjObjects()->Data[ 63603 ];

	UBioSFHandler_PCOptions_execApplyParticleEffectsLevel_Parms ApplyParticleEffectsLevel_Parms;

	pFnApplyParticleEffectsLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyParticleEffectsLevel, &ApplyParticleEffectsLevel_Parms, NULL );

	pFnApplyParticleEffectsLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyTextureLevelOfDetail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyTextureLevelOfDetail ( )
{
	static UFunction* pFnApplyTextureLevelOfDetail = NULL;

	if ( ! pFnApplyTextureLevelOfDetail )
		pFnApplyTextureLevelOfDetail = (UFunction*) UObject::GObjObjects()->Data[ 63602 ];

	UBioSFHandler_PCOptions_execApplyTextureLevelOfDetail_Parms ApplyTextureLevelOfDetail_Parms;

	pFnApplyTextureLevelOfDetail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyTextureLevelOfDetail, &ApplyTextureLevelOfDetail_Parms, NULL );

	pFnApplyTextureLevelOfDetail->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetTextureLevelOfDetail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetTextureLevelOfDetail ( )
{
	static UFunction* pFnGetTextureLevelOfDetail = NULL;

	if ( ! pFnGetTextureLevelOfDetail )
		pFnGetTextureLevelOfDetail = (UFunction*) UObject::GObjObjects()->Data[ 63601 ];

	UBioSFHandler_PCOptions_execGetTextureLevelOfDetail_Parms GetTextureLevelOfDetail_Parms;

	pFnGetTextureLevelOfDetail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTextureLevelOfDetail, &GetTextureLevelOfDetail_Parms, NULL );

	pFnGetTextureLevelOfDetail->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.BuildResolutionList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::BuildResolutionList ( )
{
	static UFunction* pFnBuildResolutionList = NULL;

	if ( ! pFnBuildResolutionList )
		pFnBuildResolutionList = (UFunction*) UObject::GObjObjects()->Data[ 63600 ];

	UBioSFHandler_PCOptions_execBuildResolutionList_Parms BuildResolutionList_Parms;

	pFnBuildResolutionList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildResolutionList, &BuildResolutionList_Parms, NULL );

	pFnBuildResolutionList->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.AddMonitorOptionToUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 monitorString                  ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_PCOptions::eventAddMonitorOptionToUI ( struct FString monitorString )
{
	static UFunction* pFnAddMonitorOptionToUI = NULL;

	if ( ! pFnAddMonitorOptionToUI )
		pFnAddMonitorOptionToUI = (UFunction*) UObject::GObjObjects()->Data[ 63595 ];

	UBioSFHandler_PCOptions_eventAddMonitorOptionToUI_Parms AddMonitorOptionToUI_Parms;
	memcpy ( &AddMonitorOptionToUI_Parms.monitorString, &monitorString, 0x10 );

	this->ProcessEvent ( pFnAddMonitorOptionToUI, &AddMonitorOptionToUI_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateMonitorSelections
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::UpdateMonitorSelections ( )
{
	static UFunction* pFnUpdateMonitorSelections = NULL;

	if ( ! pFnUpdateMonitorSelections )
		pFnUpdateMonitorSelections = (UFunction*) UObject::GObjObjects()->Data[ 63593 ];

	UBioSFHandler_PCOptions_execUpdateMonitorSelections_Parms UpdateMonitorSelections_Parms;

	this->ProcessEvent ( pFnUpdateMonitorSelections, &UpdateMonitorSelections_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.AddResolutionOptionToUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FBioScreenResolution    ScreenRes                      ( CPF_Parm )

void UBioSFHandler_PCOptions::eventAddResolutionOptionToUI ( struct FBioScreenResolution ScreenRes )
{
	static UFunction* pFnAddResolutionOptionToUI = NULL;

	if ( ! pFnAddResolutionOptionToUI )
		pFnAddResolutionOptionToUI = (UFunction*) UObject::GObjObjects()->Data[ 63587 ];

	UBioSFHandler_PCOptions_eventAddResolutionOptionToUI_Parms AddResolutionOptionToUI_Parms;
	memcpy ( &AddResolutionOptionToUI_Parms.ScreenRes, &ScreenRes, 0xC );

	this->ProcessEvent ( pFnAddResolutionOptionToUI, &AddResolutionOptionToUI_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateResolutionSelections
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::UpdateResolutionSelections ( )
{
	static UFunction* pFnUpdateResolutionSelections = NULL;

	if ( ! pFnUpdateResolutionSelections )
		pFnUpdateResolutionSelections = (UFunction*) UObject::GObjObjects()->Data[ 63585 ];

	UBioSFHandler_PCOptions_execUpdateResolutionSelections_Parms UpdateResolutionSelections_Parms;

	this->ProcessEvent ( pFnUpdateResolutionSelections, &UpdateResolutionSelections_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAnalogSens
// [0x00020002] 
// Parameters infos:
// int                            Percent                        ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAnalogSens ( int Percent )
{
	static UFunction* pFnSetAnalogSens = NULL;

	if ( ! pFnSetAnalogSens )
		pFnSetAnalogSens = (UFunction*) UObject::GObjObjects()->Data[ 63583 ];

	UBioSFHandler_PCOptions_execSetAnalogSens_Parms SetAnalogSens_Parms;
	SetAnalogSens_Parms.Percent = Percent;

	this->ProcessEvent ( pFnSetAnalogSens, &SetAnalogSens_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetRumbleToggle
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetRumbleToggle ( unsigned long bOn )
{
	static UFunction* pFnSetRumbleToggle = NULL;

	if ( ! pFnSetRumbleToggle )
		pFnSetRumbleToggle = (UFunction*) UObject::GObjObjects()->Data[ 63581 ];

	UBioSFHandler_PCOptions_execSetRumbleToggle_Parms SetRumbleToggle_Parms;
	SetRumbleToggle_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetRumbleToggle, &SetRumbleToggle_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.GetValidWindowedModeIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSFHandler_PCOptions::GetValidWindowedModeIndex ( )
{
	static UFunction* pFnGetValidWindowedModeIndex = NULL;

	if ( ! pFnGetValidWindowedModeIndex )
		pFnGetValidWindowedModeIndex = (UFunction*) UObject::GObjObjects()->Data[ 63579 ];

	UBioSFHandler_PCOptions_execGetValidWindowedModeIndex_Parms GetValidWindowedModeIndex_Parms;

	pFnGetValidWindowedModeIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValidWindowedModeIndex, &GetValidWindowedModeIndex_Parms, NULL );

	pFnGetValidWindowedModeIndex->FunctionFlags |= 0x400;

	return GetValidWindowedModeIndex_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.SetAntiAliasingOption
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetAntiAliasingOption ( )
{
	static UFunction* pFnSetAntiAliasingOption = NULL;

	if ( ! pFnSetAntiAliasingOption )
		pFnSetAntiAliasingOption = (UFunction*) UObject::GObjObjects()->Data[ 63578 ];

	UBioSFHandler_PCOptions_execSetAntiAliasingOption_Parms SetAntiAliasingOption_Parms;

	pFnSetAntiAliasingOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAntiAliasingOption, &SetAntiAliasingOption_Parms, NULL );

	pFnSetAntiAliasingOption->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetAntiAliasingOption
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetAntiAliasingOption ( )
{
	static UFunction* pFnGetAntiAliasingOption = NULL;

	if ( ! pFnGetAntiAliasingOption )
		pFnGetAntiAliasingOption = (UFunction*) UObject::GObjObjects()->Data[ 63577 ];

	UBioSFHandler_PCOptions_execGetAntiAliasingOption_Parms GetAntiAliasingOption_Parms;

	pFnGetAntiAliasingOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAntiAliasingOption, &GetAntiAliasingOption_Parms, NULL );

	pFnGetAntiAliasingOption->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ConvertLODBiasToParticleEffectsLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LODBias                        ( CPF_Parm )

int UBioSFHandler_PCOptions::ConvertLODBiasToParticleEffectsLevel ( int LODBias )
{
	static UFunction* pFnConvertLODBiasToParticleEffectsLevel = NULL;

	if ( ! pFnConvertLODBiasToParticleEffectsLevel )
		pFnConvertLODBiasToParticleEffectsLevel = (UFunction*) UObject::GObjObjects()->Data[ 63574 ];

	UBioSFHandler_PCOptions_execConvertLODBiasToParticleEffectsLevel_Parms ConvertLODBiasToParticleEffectsLevel_Parms;
	ConvertLODBiasToParticleEffectsLevel_Parms.LODBias = LODBias;

	pFnConvertLODBiasToParticleEffectsLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConvertLODBiasToParticleEffectsLevel, &ConvertLODBiasToParticleEffectsLevel_Parms, NULL );

	pFnConvertLODBiasToParticleEffectsLevel->FunctionFlags |= 0x400;

	return ConvertLODBiasToParticleEffectsLevel_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.ConvertParticleEffectsLevelToLODBias
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ParticleEffectsLevel           ( CPF_Parm )

int UBioSFHandler_PCOptions::ConvertParticleEffectsLevelToLODBias ( int ParticleEffectsLevel )
{
	static UFunction* pFnConvertParticleEffectsLevelToLODBias = NULL;

	if ( ! pFnConvertParticleEffectsLevelToLODBias )
		pFnConvertParticleEffectsLevelToLODBias = (UFunction*) UObject::GObjObjects()->Data[ 63571 ];

	UBioSFHandler_PCOptions_execConvertParticleEffectsLevelToLODBias_Parms ConvertParticleEffectsLevelToLODBias_Parms;
	ConvertParticleEffectsLevelToLODBias_Parms.ParticleEffectsLevel = ParticleEffectsLevel;

	pFnConvertParticleEffectsLevelToLODBias->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConvertParticleEffectsLevelToLODBias, &ConvertParticleEffectsLevelToLODBias_Parms, NULL );

	pFnConvertParticleEffectsLevelToLODBias->FunctionFlags |= 0x400;

	return ConvertParticleEffectsLevelToLODBias_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyCalibrationOptions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyCalibrationOptions ( )
{
	static UFunction* pFnApplyCalibrationOptions = NULL;

	if ( ! pFnApplyCalibrationOptions )
		pFnApplyCalibrationOptions = (UFunction*) UObject::GObjObjects()->Data[ 63570 ];

	UBioSFHandler_PCOptions_execApplyCalibrationOptions_Parms ApplyCalibrationOptions_Parms;

	pFnApplyCalibrationOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyCalibrationOptions, &ApplyCalibrationOptions_Parms, NULL );

	pFnApplyCalibrationOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetParticleEffectsLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetParticleEffectsLevel ( )
{
	static UFunction* pFnGetParticleEffectsLevel = NULL;

	if ( ! pFnGetParticleEffectsLevel )
		pFnGetParticleEffectsLevel = (UFunction*) UObject::GObjObjects()->Data[ 63569 ];

	UBioSFHandler_PCOptions_execGetParticleEffectsLevel_Parms GetParticleEffectsLevel_Parms;

	pFnGetParticleEffectsLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParticleEffectsLevel, &GetParticleEffectsLevel_Parms, NULL );

	pFnGetParticleEffectsLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetShadowDetailLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetShadowDetailLevel ( )
{
	static UFunction* pFnGetShadowDetailLevel = NULL;

	if ( ! pFnGetShadowDetailLevel )
		pFnGetShadowDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 63568 ];

	UBioSFHandler_PCOptions_execGetShadowDetailLevel_Parms GetShadowDetailLevel_Parms;

	pFnGetShadowDetailLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShadowDetailLevel, &GetShadowDetailLevel_Parms, NULL );

	pFnGetShadowDetailLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetCurrentRes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetCurrentRes ( )
{
	static UFunction* pFnGetCurrentRes = NULL;

	if ( ! pFnGetCurrentRes )
		pFnGetCurrentRes = (UFunction*) UObject::GObjObjects()->Data[ 63567 ];

	UBioSFHandler_PCOptions_execGetCurrentRes_Parms GetCurrentRes_Parms;

	pFnGetCurrentRes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentRes, &GetCurrentRes_Parms, NULL );

	pFnGetCurrentRes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetFilter
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetFilter ( )
{
	static UFunction* pFnSetFilter = NULL;

	if ( ! pFnSetFilter )
		pFnSetFilter = (UFunction*) UObject::GObjObjects()->Data[ 63566 ];

	UBioSFHandler_PCOptions_execSetFilter_Parms SetFilter_Parms;

	pFnSetFilter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFilter, &SetFilter_Parms, NULL );

	pFnSetFilter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetFilter
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetFilter ( )
{
	static UFunction* pFnGetFilter = NULL;

	if ( ! pFnGetFilter )
		pFnGetFilter = (UFunction*) UObject::GObjObjects()->Data[ 63565 ];

	UBioSFHandler_PCOptions_execGetFilter_Parms GetFilter_Parms;

	pFnGetFilter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFilter, &GetFilter_Parms, NULL );

	pFnGetFilter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetVsync
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetVsync ( )
{
	static UFunction* pFnSetVsync = NULL;

	if ( ! pFnSetVsync )
		pFnSetVsync = (UFunction*) UObject::GObjObjects()->Data[ 63564 ];

	UBioSFHandler_PCOptions_execSetVsync_Parms SetVsync_Parms;

	pFnSetVsync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVsync, &SetVsync_Parms, NULL );

	pFnSetVsync->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetVSync
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetVSync ( )
{
	static UFunction* pFnGetVSync = NULL;

	if ( ! pFnGetVSync )
		pFnGetVSync = (UFunction*) UObject::GObjObjects()->Data[ 63563 ];

	UBioSFHandler_PCOptions_execGetVSync_Parms GetVSync_Parms;

	pFnGetVSync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVSync, &GetVSync_Parms, NULL );

	pFnGetVSync->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetCalibration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetCalibration ( )
{
	static UFunction* pFnSetCalibration = NULL;

	if ( ! pFnSetCalibration )
		pFnSetCalibration = (UFunction*) UObject::GObjObjects()->Data[ 63562 ];

	UBioSFHandler_PCOptions_execSetCalibration_Parms SetCalibration_Parms;

	pFnSetCalibration->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCalibration, &SetCalibration_Parms, NULL );

	pFnSetCalibration->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.GetCurrentCalibration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetCurrentCalibration ( )
{
	static UFunction* pFnGetCurrentCalibration = NULL;

	if ( ! pFnGetCurrentCalibration )
		pFnGetCurrentCalibration = (UFunction*) UObject::GObjObjects()->Data[ 63561 ];

	UBioSFHandler_PCOptions_execGetCurrentCalibration_Parms GetCurrentCalibration_Parms;

	pFnGetCurrentCalibration->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentCalibration, &GetCurrentCalibration_Parms, NULL );

	pFnGetCurrentCalibration->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.InitVideoValues
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::InitVideoValues ( )
{
	static UFunction* pFnInitVideoValues = NULL;

	if ( ! pFnInitVideoValues )
		pFnInitVideoValues = (UFunction*) UObject::GObjObjects()->Data[ 63364 ];

	UBioSFHandler_PCOptions_execInitVideoValues_Parms InitVideoValues_Parms;

	this->ProcessEvent ( pFnInitVideoValues, &InitVideoValues_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyAudioChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyAudioChanges ( )
{
	static UFunction* pFnApplyAudioChanges = NULL;

	if ( ! pFnApplyAudioChanges )
		pFnApplyAudioChanges = (UFunction*) UObject::GObjObjects()->Data[ 63466 ];

	UBioSFHandler_PCOptions_execApplyAudioChanges_Parms ApplyAudioChanges_Parms;

	this->ProcessEvent ( pFnApplyAudioChanges, &ApplyAudioChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyAudioSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyAudioSettings ( )
{
	static UFunction* pFnApplyAudioSettings = NULL;

	if ( ! pFnApplyAudioSettings )
		pFnApplyAudioSettings = (UFunction*) UObject::GObjObjects()->Data[ 63557 ];

	UBioSFHandler_PCOptions_execApplyAudioSettings_Parms ApplyAudioSettings_Parms;

	pFnApplyAudioSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyAudioSettings, &ApplyAudioSettings_Parms, NULL );

	pFnApplyAudioSettings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetLegacyLevelUpMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetLegacyLevelUpMode ( unsigned long bOn )
{
	static UFunction* pFnSetLegacyLevelUpMode = NULL;

	if ( ! pFnSetLegacyLevelUpMode )
		pFnSetLegacyLevelUpMode = (UFunction*) UObject::GObjObjects()->Data[ 63555 ];

	UBioSFHandler_PCOptions_execSetLegacyLevelUpMode_Parms SetLegacyLevelUpMode_Parms;
	SetLegacyLevelUpMode_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetLegacyLevelUpMode, &SetLegacyLevelUpMode_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAutoSave
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAutoSave ( unsigned long bOn )
{
	static UFunction* pFnSetAutoSave = NULL;

	if ( ! pFnSetAutoSave )
		pFnSetAutoSave = (UFunction*) UObject::GObjObjects()->Data[ 63381 ];

	UBioSFHandler_PCOptions_execSetAutoSave_Parms SetAutoSave_Parms;
	SetAutoSave_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetAutoSave, &SetAutoSave_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetCaptionToggle
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetCaptionToggle ( unsigned long bOn )
{
	static UFunction* pFnSetCaptionToggle = NULL;

	if ( ! pFnSetCaptionToggle )
		pFnSetCaptionToggle = (UFunction*) UObject::GObjObjects()->Data[ 63380 ];

	UBioSFHandler_PCOptions_execSetCaptionToggle_Parms SetCaptionToggle_Parms;
	SetCaptionToggle_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetCaptionToggle, &SetCaptionToggle_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAudioVolVoice
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAudioVolVoice ( int Value )
{
	static UFunction* pFnSetAudioVolVoice = NULL;

	if ( ! pFnSetAudioVolVoice )
		pFnSetAudioVolVoice = (UFunction*) UObject::GObjObjects()->Data[ 63379 ];

	UBioSFHandler_PCOptions_execSetAudioVolVoice_Parms SetAudioVolVoice_Parms;
	SetAudioVolVoice_Parms.Value = Value;

	this->ProcessEvent ( pFnSetAudioVolVoice, &SetAudioVolVoice_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAudioVolFX
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAudioVolFX ( int Value )
{
	static UFunction* pFnSetAudioVolFX = NULL;

	if ( ! pFnSetAudioVolFX )
		pFnSetAudioVolFX = (UFunction*) UObject::GObjObjects()->Data[ 63378 ];

	UBioSFHandler_PCOptions_execSetAudioVolFX_Parms SetAudioVolFX_Parms;
	SetAudioVolFX_Parms.Value = Value;

	this->ProcessEvent ( pFnSetAudioVolFX, &SetAudioVolFX_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetAudioVolMusic
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void UBioSFHandler_PCOptions::SetAudioVolMusic ( int Value )
{
	static UFunction* pFnSetAudioVolMusic = NULL;

	if ( ! pFnSetAudioVolMusic )
		pFnSetAudioVolMusic = (UFunction*) UObject::GObjObjects()->Data[ 63377 ];

	UBioSFHandler_PCOptions_execSetAudioVolMusic_Parms SetAudioVolMusic_Parms;
	SetAudioVolMusic_Parms.Value = Value;

	this->ProcessEvent ( pFnSetAudioVolMusic, &SetAudioVolMusic_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.PlaySampleSound
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         Comp                           ( CPF_Parm | CPF_EditInline )
// float                          Volume                         ( CPF_Parm )

void UBioSFHandler_PCOptions::PlaySampleSound ( class UAudioComponent* Comp, float Volume )
{
	static UFunction* pFnPlaySampleSound = NULL;

	if ( ! pFnPlaySampleSound )
		pFnPlaySampleSound = (UFunction*) UObject::GObjObjects()->Data[ 63546 ];

	UBioSFHandler_PCOptions_execPlaySampleSound_Parms PlaySampleSound_Parms;
	PlaySampleSound_Parms.Comp = Comp;
	PlaySampleSound_Parms.Volume = Volume;

	this->ProcessEvent ( pFnPlaySampleSound, &PlaySampleSound_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.InitAudioValues
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::InitAudioValues ( )
{
	static UFunction* pFnInitAudioValues = NULL;

	if ( ! pFnInitAudioValues )
		pFnInitAudioValues = (UFunction*) UObject::GObjObjects()->Data[ 63363 ];

	UBioSFHandler_PCOptions_execInitAudioValues_Parms InitAudioValues_Parms;

	this->ProcessEvent ( pFnInitAudioValues, &InitAudioValues_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.GetHardwareSoundOn
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::GetHardwareSoundOn ( )
{
	static UFunction* pFnGetHardwareSoundOn = NULL;

	if ( ! pFnGetHardwareSoundOn )
		pFnGetHardwareSoundOn = (UFunction*) UObject::GObjObjects()->Data[ 63540 ];

	UBioSFHandler_PCOptions_execGetHardwareSoundOn_Parms GetHardwareSoundOn_Parms;

	pFnGetHardwareSoundOn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHardwareSoundOn, &GetHardwareSoundOn_Parms, NULL );

	pFnGetHardwareSoundOn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.LoadSound
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// struct FString                 Section                        ( CPF_Parm | CPF_NeedCtorLink )
// class USoundCue*               Cue                            ( CPF_Parm )

class UAudioComponent* UBioSFHandler_PCOptions::LoadSound ( struct FString Section, class USoundCue* Cue )
{
	static UFunction* pFnLoadSound = NULL;

	if ( ! pFnLoadSound )
		pFnLoadSound = (UFunction*) UObject::GObjObjects()->Data[ 63535 ];

	UBioSFHandler_PCOptions_execLoadSound_Parms LoadSound_Parms;
	memcpy ( &LoadSound_Parms.Section, &Section, 0x10 );
	LoadSound_Parms.Cue = Cue;

	this->ProcessEvent ( pFnLoadSound, &LoadSound_Parms, NULL );

	return LoadSound_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.ProcessInput
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   Key                            ( CPF_Parm )
// unsigned char                  EventType                      ( CPF_Parm )
// float                          AmountDepressed                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGamepad                       ( CPF_OptionalParm | CPF_Parm )

bool UBioSFHandler_PCOptions::ProcessInput ( int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad )
{
	static UFunction* pFnProcessInput = NULL;

	if ( ! pFnProcessInput )
		pFnProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 63528 ];

	UBioSFHandler_PCOptions_execProcessInput_Parms ProcessInput_Parms;
	ProcessInput_Parms.ControllerId = ControllerId;
	memcpy ( &ProcessInput_Parms.Key, &Key, 0x8 );
	ProcessInput_Parms.EventType = EventType;
	ProcessInput_Parms.AmountDepressed = AmountDepressed;
	ProcessInput_Parms.bGamepad = bGamepad;

	pFnProcessInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessInput, &ProcessInput_Parms, NULL );

	pFnProcessInput->FunctionFlags |= 0x400;

	return ProcessInput_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.CaptureNewBinding
// [0x00020002] 
// Parameters infos:
// int                            BindIndex                      ( CPF_Parm )
// int                            BindNumber                     ( CPF_Parm )

void UBioSFHandler_PCOptions::CaptureNewBinding ( int BindIndex, int BindNumber )
{
	static UFunction* pFnCaptureNewBinding = NULL;

	if ( ! pFnCaptureNewBinding )
		pFnCaptureNewBinding = (UFunction*) UObject::GObjObjects()->Data[ 63521 ];

	UBioSFHandler_PCOptions_execCaptureNewBinding_Parms CaptureNewBinding_Parms;
	CaptureNewBinding_Parms.BindIndex = BindIndex;
	CaptureNewBinding_Parms.BindNumber = BindNumber;

	this->ProcessEvent ( pFnCaptureNewBinding, &CaptureNewBinding_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateKeyToSF
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UBioSFHandler_PCOptions::UpdateKeyToSF ( int Index )
{
	static UFunction* pFnUpdateKeyToSF = NULL;

	if ( ! pFnUpdateKeyToSF )
		pFnUpdateKeyToSF = (UFunction*) UObject::GObjObjects()->Data[ 63519 ];

	UBioSFHandler_PCOptions_execUpdateKeyToSF_Parms UpdateKeyToSF_Parms;
	UpdateKeyToSF_Parms.Index = Index;

	pFnUpdateKeyToSF->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateKeyToSF, &UpdateKeyToSF_Parms, NULL );

	pFnUpdateKeyToSF->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateTextOnButtons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::UpdateTextOnButtons ( )
{
	static UFunction* pFnUpdateTextOnButtons = NULL;

	if ( ! pFnUpdateTextOnButtons )
		pFnUpdateTextOnButtons = (UFunction*) UObject::GObjObjects()->Data[ 63518 ];

	UBioSFHandler_PCOptions_execUpdateTextOnButtons_Parms UpdateTextOnButtons_Parms;

	pFnUpdateTextOnButtons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTextOnButtons, &UpdateTextOnButtons_Parms, NULL );

	pFnUpdateTextOnButtons->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.BuildBindingList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bUseDefaults                   ( CPF_Parm )

void UBioSFHandler_PCOptions::BuildBindingList ( unsigned long bUseDefaults )
{
	static UFunction* pFnBuildBindingList = NULL;

	if ( ! pFnBuildBindingList )
		pFnBuildBindingList = (UFunction*) UObject::GObjObjects()->Data[ 63516 ];

	UBioSFHandler_PCOptions_execBuildBindingList_Parms BuildBindingList_Parms;
	BuildBindingList_Parms.bUseDefaults = bUseDefaults;

	pFnBuildBindingList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildBindingList, &BuildBindingList_Parms, NULL );

	pFnBuildBindingList->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyPCBindings
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyPCBindings ( )
{
	static UFunction* pFnApplyPCBindings = NULL;

	if ( ! pFnApplyPCBindings )
		pFnApplyPCBindings = (UFunction*) UObject::GObjObjects()->Data[ 63468 ];

	UBioSFHandler_PCOptions_execApplyPCBindings_Parms ApplyPCBindings_Parms;

	pFnApplyPCBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyPCBindings, &ApplyPCBindings_Parms, NULL );

	pFnApplyPCBindings->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.InitKeyboardValues
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::InitKeyboardValues ( )
{
	static UFunction* pFnInitKeyboardValues = NULL;

	if ( ! pFnInitKeyboardValues )
		pFnInitKeyboardValues = (UFunction*) UObject::GObjObjects()->Data[ 63362 ];

	UBioSFHandler_PCOptions_execInitKeyboardValues_Parms InitKeyboardValues_Parms;

	this->ProcessEvent ( pFnInitKeyboardValues, &InitKeyboardValues_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetBindingHelpText
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 HelpText                       ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_PCOptions::eventSetBindingHelpText ( struct FString HelpText )
{
	static UFunction* pFnSetBindingHelpText = NULL;

	if ( ! pFnSetBindingHelpText )
		pFnSetBindingHelpText = (UFunction*) UObject::GObjObjects()->Data[ 63511 ];

	UBioSFHandler_PCOptions_eventSetBindingHelpText_Parms SetBindingHelpText_Parms;
	memcpy ( &SetBindingHelpText_Parms.HelpText, &HelpText, 0x10 );

	this->ProcessEvent ( pFnSetBindingHelpText, &SetBindingHelpText_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetBindingKeyText
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 TalentText                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            KeyIndex                       ( CPF_Parm )

void UBioSFHandler_PCOptions::eventSetBindingKeyText ( int Index, struct FString TalentText, int KeyIndex )
{
	static UFunction* pFnSetBindingKeyText = NULL;

	if ( ! pFnSetBindingKeyText )
		pFnSetBindingKeyText = (UFunction*) UObject::GObjObjects()->Data[ 63504 ];

	UBioSFHandler_PCOptions_eventSetBindingKeyText_Parms SetBindingKeyText_Parms;
	SetBindingKeyText_Parms.Index = Index;
	memcpy ( &SetBindingKeyText_Parms.TalentText, &TalentText, 0x10 );
	SetBindingKeyText_Parms.KeyIndex = KeyIndex;

	this->ProcessEvent ( pFnSetBindingKeyText, &SetBindingKeyText_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetBindingTalentText
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 TalentText                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_PCOptions::eventSetBindingTalentText ( int Index, struct FString TalentText )
{
	static UFunction* pFnSetBindingTalentText = NULL;

	if ( ! pFnSetBindingTalentText )
		pFnSetBindingTalentText = (UFunction*) UObject::GObjObjects()->Data[ 63498 ];

	UBioSFHandler_PCOptions_eventSetBindingTalentText_Parms SetBindingTalentText_Parms;
	SetBindingTalentText_Parms.Index = Index;
	memcpy ( &SetBindingTalentText_Parms.TalentText, &TalentText, 0x10 );

	this->ProcessEvent ( pFnSetBindingTalentText, &SetBindingTalentText_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ShowBindingRow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bShow                          ( CPF_Parm )

void UBioSFHandler_PCOptions::eventShowBindingRow ( int Index, unsigned long bShow )
{
	static UFunction* pFnShowBindingRow = NULL;

	if ( ! pFnShowBindingRow )
		pFnShowBindingRow = (UFunction*) UObject::GObjObjects()->Data[ 63492 ];

	UBioSFHandler_PCOptions_eventShowBindingRow_Parms ShowBindingRow_Parms;
	ShowBindingRow_Parms.Index = Index;
	ShowBindingRow_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowBindingRow, &ShowBindingRow_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyAutos
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyAutos ( )
{
	static UFunction* pFnApplyAutos = NULL;

	if ( ! pFnApplyAutos )
		pFnApplyAutos = (UFunction*) UObject::GObjObjects()->Data[ 63490 ];

	UBioSFHandler_PCOptions_execApplyAutos_Parms ApplyAutos_Parms;

	this->ProcessEvent ( pFnApplyAutos, &ApplyAutos_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyGamePlay
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyGamePlay ( )
{
	static UFunction* pFnApplyGamePlay = NULL;

	if ( ! pFnApplyGamePlay )
		pFnApplyGamePlay = (UFunction*) UObject::GObjObjects()->Data[ 63488 ];

	UBioSFHandler_PCOptions_execApplyGamePlay_Parms ApplyGamePlay_Parms;

	this->ProcessEvent ( pFnApplyGamePlay, &ApplyGamePlay_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetTutorialsMSG
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetTutorialsMSG ( )
{
	static UFunction* pFnResetTutorialsMSG = NULL;

	if ( ! pFnResetTutorialsMSG )
		pFnResetTutorialsMSG = (UFunction*) UObject::GObjObjects()->Data[ 63391 ];

	UBioSFHandler_PCOptions_execResetTutorialsMSG_Parms ResetTutorialsMSG_Parms;

	pFnResetTutorialsMSG->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetTutorialsMSG, &ResetTutorialsMSG_Parms, NULL );

	pFnResetTutorialsMSG->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ConfirmResetTutorials
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::ConfirmResetTutorials ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmResetTutorials = NULL;

	if ( ! pFnConfirmResetTutorials )
		pFnConfirmResetTutorials = (UFunction*) UObject::GObjObjects()->Data[ 63485 ];

	UBioSFHandler_PCOptions_execConfirmResetTutorials_Parms ConfirmResetTutorials_Parms;
	ConfirmResetTutorials_Parms.bAPressed = bAPressed;
	ConfirmResetTutorials_Parms.nContext = nContext;

	pFnConfirmResetTutorials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmResetTutorials, &ConfirmResetTutorials_Parms, NULL );

	pFnConfirmResetTutorials->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SaveProfile
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SaveProfile ( )
{
	static UFunction* pFnSaveProfile = NULL;

	if ( ! pFnSaveProfile )
		pFnSaveProfile = (UFunction*) UObject::GObjObjects()->Data[ 63469 ];

	UBioSFHandler_PCOptions_execSaveProfile_Parms SaveProfile_Parms;

	pFnSaveProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveProfile, &SaveProfile_Parms, NULL );

	pFnSaveProfile->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.InitAutos
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::InitAutos ( )
{
	static UFunction* pFnInitAutos = NULL;

	if ( ! pFnInitAutos )
		pFnInitAutos = (UFunction*) UObject::GObjObjects()->Data[ 63483 ];

	UBioSFHandler_PCOptions_execInitAutos_Parms InitAutos_Parms;

	this->ProcessEvent ( pFnInitAutos, &InitAutos_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.InitGamePlay
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::InitGamePlay ( )
{
	static UFunction* pFnInitGamePlay = NULL;

	if ( ! pFnInitGamePlay )
		pFnInitGamePlay = (UFunction*) UObject::GObjObjects()->Data[ 63481 ];

	UBioSFHandler_PCOptions_execInitGamePlay_Parms InitGamePlay_Parms;

	this->ProcessEvent ( pFnInitGamePlay, &InitGamePlay_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyInput
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ApplyInput ( )
{
	static UFunction* pFnApplyInput = NULL;

	if ( ! pFnApplyInput )
		pFnApplyInput = (UFunction*) UObject::GObjObjects()->Data[ 63467 ];

	UBioSFHandler_PCOptions_execApplyInput_Parms ApplyInput_Parms;

	this->ProcessEvent ( pFnApplyInput, &ApplyInput_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetMouseSense
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            SliderValue                    ( CPF_Parm )

void UBioSFHandler_PCOptions::SetMouseSense ( int SliderValue )
{
	static UFunction* pFnSetMouseSense = NULL;

	if ( ! pFnSetMouseSense )
		pFnSetMouseSense = (UFunction*) UObject::GObjObjects()->Data[ 63374 ];

	UBioSFHandler_PCOptions_execSetMouseSense_Parms SetMouseSense_Parms;
	SetMouseSense_Parms.SliderValue = SliderValue;

	this->ProcessEvent ( pFnSetMouseSense, &SetMouseSense_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetHardwareMouseMouse
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetHardwareMouseMouse ( unsigned long bOn )
{
	static UFunction* pFnSetHardwareMouseMouse = NULL;

	if ( ! pFnSetHardwareMouseMouse )
		pFnSetHardwareMouseMouse = (UFunction*) UObject::GObjObjects()->Data[ 63373 ];

	UBioSFHandler_PCOptions_execSetHardwareMouseMouse_Parms SetHardwareMouseMouse_Parms;
	SetHardwareMouseMouse_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetHardwareMouseMouse, &SetHardwareMouseMouse_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.InitInput
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::InitInput ( )
{
	static UFunction* pFnInitInput = NULL;

	if ( ! pFnInitInput )
		pFnInitInput = (UFunction*) UObject::GObjObjects()->Data[ 63361 ];

	UBioSFHandler_PCOptions_execInitInput_Parms InitInput_Parms;

	this->ProcessEvent ( pFnInitInput, &InitInput_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ApplyChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            SubPanelIndex                  ( CPF_Parm )

void UBioSFHandler_PCOptions::ApplyChanges ( int SubPanelIndex )
{
	static UFunction* pFnApplyChanges = NULL;

	if ( ! pFnApplyChanges )
		pFnApplyChanges = (UFunction*) UObject::GObjObjects()->Data[ 63376 ];

	UBioSFHandler_PCOptions_execApplyChanges_Parms ApplyChanges_Parms;
	ApplyChanges_Parms.SubPanelIndex = SubPanelIndex;

	this->ProcessEvent ( pFnApplyChanges, &ApplyChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ExitMenu
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ExitMenu ( )
{
	static UFunction* pFnExitMenu = NULL;

	if ( ! pFnExitMenu )
		pFnExitMenu = (UFunction*) UObject::GObjObjects()->Data[ 63375 ];

	UBioSFHandler_PCOptions_execExitMenu_Parms ExitMenu_Parms;

	this->ProcessEvent ( pFnExitMenu, &ExitMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ConfirmGoToMainMenu
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::ConfirmGoToMainMenu ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmGoToMainMenu = NULL;

	if ( ! pFnConfirmGoToMainMenu )
		pFnConfirmGoToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 63459 ];

	UBioSFHandler_PCOptions_execConfirmGoToMainMenu_Parms ConfirmGoToMainMenu_Parms;
	ConfirmGoToMainMenu_Parms.bAPressed = bAPressed;
	ConfirmGoToMainMenu_Parms.nContext = nContext;

	pFnConfirmGoToMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmGoToMainMenu, &ConfirmGoToMainMenu_Parms, NULL );

	pFnConfirmGoToMainMenu->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.QuitToMainMenuFromOptions
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::QuitToMainMenuFromOptions ( )
{
	static UFunction* pFnQuitToMainMenuFromOptions = NULL;

	if ( ! pFnQuitToMainMenuFromOptions )
		pFnQuitToMainMenuFromOptions = (UFunction*) UObject::GObjObjects()->Data[ 63394 ];

	UBioSFHandler_PCOptions_execQuitToMainMenuFromOptions_Parms QuitToMainMenuFromOptions_Parms;

	pFnQuitToMainMenuFromOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQuitToMainMenuFromOptions, &QuitToMainMenuFromOptions_Parms, NULL );

	pFnQuitToMainMenuFromOptions->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ExitToMainMenu
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ExitToMainMenu ( )
{
	static UFunction* pFnExitToMainMenu = NULL;

	if ( ! pFnExitToMainMenu )
		pFnExitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 63458 ];

	UBioSFHandler_PCOptions_execExitToMainMenu_Parms ExitToMainMenu_Parms;

	pFnExitToMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitToMainMenu, &ExitToMainMenu_Parms, NULL );

	pFnExitToMainMenu->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ResetAutos
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetAutos ( )
{
	static UFunction* pFnResetAutos = NULL;

	if ( ! pFnResetAutos )
		pFnResetAutos = (UFunction*) UObject::GObjObjects()->Data[ 63457 ];

	UBioSFHandler_PCOptions_execResetAutos_Parms ResetAutos_Parms;

	this->ProcessEvent ( pFnResetAutos, &ResetAutos_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetGameplay
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetGameplay ( )
{
	static UFunction* pFnResetGameplay = NULL;

	if ( ! pFnResetGameplay )
		pFnResetGameplay = (UFunction*) UObject::GObjObjects()->Data[ 63441 ];

	UBioSFHandler_PCOptions_execResetGameplay_Parms ResetGameplay_Parms;

	this->ProcessEvent ( pFnResetGameplay, &ResetGameplay_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetControls
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetControls ( )
{
	static UFunction* pFnResetControls = NULL;

	if ( ! pFnResetControls )
		pFnResetControls = (UFunction*) UObject::GObjObjects()->Data[ 63439 ];

	UBioSFHandler_PCOptions_execResetControls_Parms ResetControls_Parms;

	this->ProcessEvent ( pFnResetControls, &ResetControls_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetController
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetController ( )
{
	static UFunction* pFnResetController = NULL;

	if ( ! pFnResetController )
		pFnResetController = (UFunction*) UObject::GObjObjects()->Data[ 63456 ];

	UBioSFHandler_PCOptions_execResetController_Parms ResetController_Parms;

	this->ProcessEvent ( pFnResetController, &ResetController_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetInput
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetInput ( )
{
	static UFunction* pFnResetInput = NULL;

	if ( ! pFnResetInput )
		pFnResetInput = (UFunction*) UObject::GObjObjects()->Data[ 63437 ];

	UBioSFHandler_PCOptions_execResetInput_Parms ResetInput_Parms;

	this->ProcessEvent ( pFnResetInput, &ResetInput_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetSound
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetSound ( )
{
	static UFunction* pFnResetSound = NULL;

	if ( ! pFnResetSound )
		pFnResetSound = (UFunction*) UObject::GObjObjects()->Data[ 63435 ];

	UBioSFHandler_PCOptions_execResetSound_Parms ResetSound_Parms;

	this->ProcessEvent ( pFnResetSound, &ResetSound_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetCalibration
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetCalibration ( )
{
	static UFunction* pFnResetCalibration = NULL;

	if ( ! pFnResetCalibration )
		pFnResetCalibration = (UFunction*) UObject::GObjObjects()->Data[ 63433 ];

	UBioSFHandler_PCOptions_execResetCalibration_Parms ResetCalibration_Parms;

	this->ProcessEvent ( pFnResetCalibration, &ResetCalibration_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetGraphics
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetGraphics ( )
{
	static UFunction* pFnResetGraphics = NULL;

	if ( ! pFnResetGraphics )
		pFnResetGraphics = (UFunction*) UObject::GObjObjects()->Data[ 63431 ];

	UBioSFHandler_PCOptions_execResetGraphics_Parms ResetGraphics_Parms;

	this->ProcessEvent ( pFnResetGraphics, &ResetGraphics_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.UpdateVideoOptionsOnRevert
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_PCOptions::eventUpdateVideoOptionsOnRevert ( )
{
	static UFunction* pFnUpdateVideoOptionsOnRevert = NULL;

	if ( ! pFnUpdateVideoOptionsOnRevert )
		pFnUpdateVideoOptionsOnRevert = (UFunction*) UObject::GObjObjects()->Data[ 63453 ];

	UBioSFHandler_PCOptions_eventUpdateVideoOptionsOnRevert_Parms UpdateVideoOptionsOnRevert_Parms;

	this->ProcessEvent ( pFnUpdateVideoOptionsOnRevert, &UpdateVideoOptionsOnRevert_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ResetAllValues
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            SubPanelIndex                  ( CPF_Parm )

void UBioSFHandler_PCOptions::eventResetAllValues ( int SubPanelIndex )
{
	static UFunction* pFnResetAllValues = NULL;

	if ( ! pFnResetAllValues )
		pFnResetAllValues = (UFunction*) UObject::GObjObjects()->Data[ 63367 ];

	UBioSFHandler_PCOptions_eventResetAllValues_Parms ResetAllValues_Parms;
	ResetAllValues_Parms.SubPanelIndex = SubPanelIndex;

	this->ProcessEvent ( pFnResetAllValues, &ResetAllValues_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultAutos
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultAutos ( )
{
	static UFunction* pFnSetDefaultAutos = NULL;

	if ( ! pFnSetDefaultAutos )
		pFnSetDefaultAutos = (UFunction*) UObject::GObjObjects()->Data[ 63449 ];

	UBioSFHandler_PCOptions_execSetDefaultAutos_Parms SetDefaultAutos_Parms;

	this->ProcessEvent ( pFnSetDefaultAutos, &SetDefaultAutos_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultGameplay
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultGameplay ( )
{
	static UFunction* pFnSetDefaultGameplay = NULL;

	if ( ! pFnSetDefaultGameplay )
		pFnSetDefaultGameplay = (UFunction*) UObject::GObjObjects()->Data[ 63440 ];

	UBioSFHandler_PCOptions_execSetDefaultGameplay_Parms SetDefaultGameplay_Parms;

	this->ProcessEvent ( pFnSetDefaultGameplay, &SetDefaultGameplay_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultControls
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultControls ( )
{
	static UFunction* pFnSetDefaultControls = NULL;

	if ( ! pFnSetDefaultControls )
		pFnSetDefaultControls = (UFunction*) UObject::GObjObjects()->Data[ 63438 ];

	UBioSFHandler_PCOptions_execSetDefaultControls_Parms SetDefaultControls_Parms;

	this->ProcessEvent ( pFnSetDefaultControls, &SetDefaultControls_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultController
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultController ( )
{
	static UFunction* pFnSetDefaultController = NULL;

	if ( ! pFnSetDefaultController )
		pFnSetDefaultController = (UFunction*) UObject::GObjObjects()->Data[ 63444 ];

	UBioSFHandler_PCOptions_execSetDefaultController_Parms SetDefaultController_Parms;

	this->ProcessEvent ( pFnSetDefaultController, &SetDefaultController_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultInput
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultInput ( )
{
	static UFunction* pFnSetDefaultInput = NULL;

	if ( ! pFnSetDefaultInput )
		pFnSetDefaultInput = (UFunction*) UObject::GObjObjects()->Data[ 63436 ];

	UBioSFHandler_PCOptions_execSetDefaultInput_Parms SetDefaultInput_Parms;

	this->ProcessEvent ( pFnSetDefaultInput, &SetDefaultInput_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultSound
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultSound ( )
{
	static UFunction* pFnSetDefaultSound = NULL;

	if ( ! pFnSetDefaultSound )
		pFnSetDefaultSound = (UFunction*) UObject::GObjObjects()->Data[ 63434 ];

	UBioSFHandler_PCOptions_execSetDefaultSound_Parms SetDefaultSound_Parms;

	this->ProcessEvent ( pFnSetDefaultSound, &SetDefaultSound_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultCalibration
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultCalibration ( )
{
	static UFunction* pFnSetDefaultCalibration = NULL;

	if ( ! pFnSetDefaultCalibration )
		pFnSetDefaultCalibration = (UFunction*) UObject::GObjObjects()->Data[ 63432 ];

	UBioSFHandler_PCOptions_execSetDefaultCalibration_Parms SetDefaultCalibration_Parms;

	this->ProcessEvent ( pFnSetDefaultCalibration, &SetDefaultCalibration_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaultVideo
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PCOptions::SetDefaultVideo ( )
{
	static UFunction* pFnSetDefaultVideo = NULL;

	if ( ! pFnSetDefaultVideo )
		pFnSetDefaultVideo = (UFunction*) UObject::GObjObjects()->Data[ 63430 ];

	UBioSFHandler_PCOptions_execSetDefaultVideo_Parms SetDefaultVideo_Parms;

	this->ProcessEvent ( pFnSetDefaultVideo, &SetDefaultVideo_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetDefaults
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            SubPanelIndex                  ( CPF_Parm )

void UBioSFHandler_PCOptions::eventSetDefaults ( int SubPanelIndex )
{
	static UFunction* pFnSetDefaults = NULL;

	if ( ! pFnSetDefaults )
		pFnSetDefaults = (UFunction*) UObject::GObjObjects()->Data[ 63428 ];

	UBioSFHandler_PCOptions_eventSetDefaults_Parms SetDefaults_Parms;
	SetDefaults_Parms.SubPanelIndex = SubPanelIndex;

	this->ProcessEvent ( pFnSetDefaults, &SetDefaults_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.setDropdownByID
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UBioSFHandler_PCOptions::setDropdownByID ( int Id, int Index )
{
	static UFunction* pFnsetDropdownByID = NULL;

	if ( ! pFnsetDropdownByID )
		pFnsetDropdownByID = (UFunction*) UObject::GObjObjects()->Data[ 63422 ];

	UBioSFHandler_PCOptions_execsetDropdownByID_Parms setDropdownByID_Parms;
	setDropdownByID_Parms.Id = Id;
	setDropdownByID_Parms.Index = Index;

	this->ProcessEvent ( pFnsetDropdownByID, &setDropdownByID_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetIndexedSliderByIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            Value                          ( CPF_Parm )
// unsigned long                  bSetLastMarker                 ( CPF_Parm )

void UBioSFHandler_PCOptions::SetIndexedSliderByIndex ( int Index, int Value, unsigned long bSetLastMarker )
{
	static UFunction* pFnSetIndexedSliderByIndex = NULL;

	if ( ! pFnSetIndexedSliderByIndex )
		pFnSetIndexedSliderByIndex = (UFunction*) UObject::GObjObjects()->Data[ 63415 ];

	UBioSFHandler_PCOptions_execSetIndexedSliderByIndex_Parms SetIndexedSliderByIndex_Parms;
	SetIndexedSliderByIndex_Parms.Index = Index;
	SetIndexedSliderByIndex_Parms.Value = Value;
	SetIndexedSliderByIndex_Parms.bSetLastMarker = bSetLastMarker;

	this->ProcessEvent ( pFnSetIndexedSliderByIndex, &SetIndexedSliderByIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetSliderByIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// float                          Value                          ( CPF_Parm )
// unsigned long                  bSetLastMarker                 ( CPF_Parm )

void UBioSFHandler_PCOptions::SetSliderByIndex ( int Index, float Value, unsigned long bSetLastMarker )
{
	static UFunction* pFnSetSliderByIndex = NULL;

	if ( ! pFnSetSliderByIndex )
		pFnSetSliderByIndex = (UFunction*) UObject::GObjObjects()->Data[ 63408 ];

	UBioSFHandler_PCOptions_execSetSliderByIndex_Parms SetSliderByIndex_Parms;
	SetSliderByIndex_Parms.Index = Index;
	SetSliderByIndex_Parms.Value = Value;
	SetSliderByIndex_Parms.bSetLastMarker = bSetLastMarker;

	this->ProcessEvent ( pFnSetSliderByIndex, &SetSliderByIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.SetCheckBoxByIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bOn                            ( CPF_Parm )

void UBioSFHandler_PCOptions::SetCheckBoxByIndex ( int Index, unsigned long bOn )
{
	static UFunction* pFnSetCheckBoxByIndex = NULL;

	if ( ! pFnSetCheckBoxByIndex )
		pFnSetCheckBoxByIndex = (UFunction*) UObject::GObjObjects()->Data[ 63402 ];

	UBioSFHandler_PCOptions_execSetCheckBoxByIndex_Parms SetCheckBoxByIndex_Parms;
	SetCheckBoxByIndex_Parms.Index = Index;
	SetCheckBoxByIndex_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetCheckBoxByIndex, &SetCheckBoxByIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.WarnUnsaved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::WarnUnsaved ( )
{
	static UFunction* pFnWarnUnsaved = NULL;

	if ( ! pFnWarnUnsaved )
		pFnWarnUnsaved = (UFunction*) UObject::GObjObjects()->Data[ 63401 ];

	UBioSFHandler_PCOptions_execWarnUnsaved_Parms WarnUnsaved_Parms;

	this->ProcessEvent ( pFnWarnUnsaved, &WarnUnsaved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.AStoLog
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_PCOptions::AStoLog ( struct FString msg )
{
	static UFunction* pFnAStoLog = NULL;

	if ( ! pFnAStoLog )
		pFnAStoLog = (UFunction*) UObject::GObjObjects()->Data[ 63399 ];

	UBioSFHandler_PCOptions_execAStoLog_Parms AStoLog_Parms;
	memcpy ( &AStoLog_Parms.msg, &msg, 0x10 );

	this->ProcessEvent ( pFnAStoLog, &AStoLog_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.ClosePanelWithOutSavingConfirm
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bConfimNoSave                  ( CPF_Parm )

void UBioSFHandler_PCOptions::ClosePanelWithOutSavingConfirm ( unsigned long bConfimNoSave )
{
	static UFunction* pFnClosePanelWithOutSavingConfirm = NULL;

	if ( ! pFnClosePanelWithOutSavingConfirm )
		pFnClosePanelWithOutSavingConfirm = (UFunction*) UObject::GObjObjects()->Data[ 63397 ];

	UBioSFHandler_PCOptions_execClosePanelWithOutSavingConfirm_Parms ClosePanelWithOutSavingConfirm_Parms;
	ClosePanelWithOutSavingConfirm_Parms.bConfimNoSave = bConfimNoSave;

	pFnClosePanelWithOutSavingConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClosePanelWithOutSavingConfirm, &ClosePanelWithOutSavingConfirm_Parms, NULL );

	pFnClosePanelWithOutSavingConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ClosePanelWithOutSaving
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ClosePanelWithOutSaving ( )
{
	static UFunction* pFnClosePanelWithOutSaving = NULL;

	if ( ! pFnClosePanelWithOutSaving )
		pFnClosePanelWithOutSaving = (UFunction*) UObject::GObjObjects()->Data[ 63396 ];

	UBioSFHandler_PCOptions_execClosePanelWithOutSaving_Parms ClosePanelWithOutSaving_Parms;

	pFnClosePanelWithOutSaving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClosePanelWithOutSaving, &ClosePanelWithOutSaving_Parms, NULL );

	pFnClosePanelWithOutSaving->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCOptions::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63368 ];

	UBioSFHandler_PCOptions_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_PCOptions.Init
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_PCOptions::eventInit ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 63354 ];

	UBioSFHandler_PCOptions_eventInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.HandleButtonRefresh
// [0x00020002] 
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCOptions::HandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63349 ];

	UBioSFHandler_PCOptions_execHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCOptions::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63348 ];

	UBioSFHandler_PCOptions_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCOptions.RestoreMappedSettingStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )
// int                            Step                           ( CPF_Parm )

int UBioSFHandler_PCOptions::RestoreMappedSettingStep ( unsigned char Type, int Step )
{
	static UFunction* pFnRestoreMappedSettingStep = NULL;

	if ( ! pFnRestoreMappedSettingStep )
		pFnRestoreMappedSettingStep = (UFunction*) UObject::GObjObjects()->Data[ 63344 ];

	UBioSFHandler_PCOptions_execRestoreMappedSettingStep_Parms RestoreMappedSettingStep_Parms;
	RestoreMappedSettingStep_Parms.Type = Type;
	RestoreMappedSettingStep_Parms.Step = Step;

	pFnRestoreMappedSettingStep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreMappedSettingStep, &RestoreMappedSettingStep_Parms, NULL );

	pFnRestoreMappedSettingStep->FunctionFlags |= 0x400;

	return RestoreMappedSettingStep_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.StoreMappedSettingStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )
// int                            Step                           ( CPF_Parm )

int UBioSFHandler_PCOptions::StoreMappedSettingStep ( unsigned char Type, int Step )
{
	static UFunction* pFnStoreMappedSettingStep = NULL;

	if ( ! pFnStoreMappedSettingStep )
		pFnStoreMappedSettingStep = (UFunction*) UObject::GObjObjects()->Data[ 63340 ];

	UBioSFHandler_PCOptions_execStoreMappedSettingStep_Parms StoreMappedSettingStep_Parms;
	StoreMappedSettingStep_Parms.Type = Type;
	StoreMappedSettingStep_Parms.Step = Step;

	pFnStoreMappedSettingStep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStoreMappedSettingStep, &StoreMappedSettingStep_Parms, NULL );

	pFnStoreMappedSettingStep->FunctionFlags |= 0x400;

	return StoreMappedSettingStep_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCOptions.ResetTelemetryCache
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::ResetTelemetryCache ( )
{
	static UFunction* pFnResetTelemetryCache = NULL;

	if ( ! pFnResetTelemetryCache )
		pFnResetTelemetryCache = (UFunction*) UObject::GObjObjects()->Data[ 63339 ];

	UBioSFHandler_PCOptions_execResetTelemetryCache_Parms ResetTelemetryCache_Parms;

	pFnResetTelemetryCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetTelemetryCache, &ResetTelemetryCache_Parms, NULL );

	pFnResetTelemetryCache->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SendTelemetryChanges
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SendTelemetryChanges ( )
{
	static UFunction* pFnSendTelemetryChanges = NULL;

	if ( ! pFnSendTelemetryChanges )
		pFnSendTelemetryChanges = (UFunction*) UObject::GObjObjects()->Data[ 63338 ];

	UBioSFHandler_PCOptions_execSendTelemetryChanges_Parms SendTelemetryChanges_Parms;

	pFnSendTelemetryChanges->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendTelemetryChanges, &SendTelemetryChanges_Parms, NULL );

	pFnSendTelemetryChanges->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ConfirmKeybindOverwrite
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::ConfirmKeybindOverwrite ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmKeybindOverwrite = NULL;

	if ( ! pFnConfirmKeybindOverwrite )
		pFnConfirmKeybindOverwrite = (UFunction*) UObject::GObjObjects()->Data[ 63335 ];

	UBioSFHandler_PCOptions_execConfirmKeybindOverwrite_Parms ConfirmKeybindOverwrite_Parms;
	ConfirmKeybindOverwrite_Parms.bAPressed = bAPressed;
	ConfirmKeybindOverwrite_Parms.nContext = nContext;

	pFnConfirmKeybindOverwrite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmKeybindOverwrite, &ConfirmKeybindOverwrite_Parms, NULL );

	pFnConfirmKeybindOverwrite->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ResetDefaultsMSG
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::ResetDefaultsMSG ( int nContext )
{
	static UFunction* pFnResetDefaultsMSG = NULL;

	if ( ! pFnResetDefaultsMSG )
		pFnResetDefaultsMSG = (UFunction*) UObject::GObjObjects()->Data[ 63333 ];

	UBioSFHandler_PCOptions_execResetDefaultsMSG_Parms ResetDefaultsMSG_Parms;
	ResetDefaultsMSG_Parms.nContext = nContext;

	pFnResetDefaultsMSG->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetDefaultsMSG, &ResetDefaultsMSG_Parms, NULL );

	pFnResetDefaultsMSG->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SetHDRStatus
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SetHDRStatus ( )
{
	static UFunction* pFnSetHDRStatus = NULL;

	if ( ! pFnSetHDRStatus )
		pFnSetHDRStatus = (UFunction*) UObject::GObjObjects()->Data[ 63332 ];

	UBioSFHandler_PCOptions_execSetHDRStatus_Parms SetHDRStatus_Parms;

	pFnSetHDRStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHDRStatus, &SetHDRStatus_Parms, NULL );

	pFnSetHDRStatus->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.SavingMSG
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_PCOptions::SavingMSG ( )
{
	static UFunction* pFnSavingMSG = NULL;

	if ( ! pFnSavingMSG )
		pFnSavingMSG = (UFunction*) UObject::GObjObjects()->Data[ 63331 ];

	UBioSFHandler_PCOptions_execSavingMSG_Parms SavingMSG_Parms;

	pFnSavingMSG->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSavingMSG, &SavingMSG_Parms, NULL );

	pFnSavingMSG->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.ConfirmResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::ConfirmResetToDefaults ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnConfirmResetToDefaults = NULL;

	if ( ! pFnConfirmResetToDefaults )
		pFnConfirmResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 63328 ];

	UBioSFHandler_PCOptions_execConfirmResetToDefaults_Parms ConfirmResetToDefaults_Parms;
	ConfirmResetToDefaults_Parms.bAPressed = bAPressed;
	ConfirmResetToDefaults_Parms.nContext = nContext;

	pFnConfirmResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConfirmResetToDefaults, &ConfirmResetToDefaults_Parms, NULL );

	pFnConfirmResetToDefaults->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_PCOptions.OptionsConfirmCommit
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCOptions::OptionsConfirmCommit ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnOptionsConfirmCommit = NULL;

	if ( ! pFnOptionsConfirmCommit )
		pFnOptionsConfirmCommit = (UFunction*) UObject::GObjObjects()->Data[ 63325 ];

	UBioSFHandler_PCOptions_execOptionsConfirmCommit_Parms OptionsConfirmCommit_Parms;
	OptionsConfirmCommit_Parms.bAPressed = bAPressed;
	OptionsConfirmCommit_Parms.nContext = nContext;

	pFnOptionsConfirmCommit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOptionsConfirmCommit, &OptionsConfirmCommit_Parms, NULL );

	pFnOptionsConfirmCommit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_ReplayCharacterSelect.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_ReplayCharacterSelect::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63750 ];

	UBioSFHandler_ReplayCharacterSelect_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_ReplayCharacterSelect.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_ReplayCharacterSelect::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63749 ];

	UBioSFHandler_ReplayCharacterSelect_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Reticule.ProcessImpacts
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bIsHeadShot                    ( CPF_Parm )

void UBioSFHandler_Reticule::ProcessImpacts ( unsigned long bIsHeadShot )
{
	static UFunction* pFnProcessImpacts = NULL;

	if ( ! pFnProcessImpacts )
		pFnProcessImpacts = (UFunction*) UObject::GObjObjects()->Data[ 63787 ];

	UBioSFHandler_Reticule_execProcessImpacts_Parms ProcessImpacts_Parms;
	ProcessImpacts_Parms.bIsHeadShot = bIsHeadShot;

	pFnProcessImpacts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessImpacts, &ProcessImpacts_Parms, NULL );

	pFnProcessImpacts->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Reticule.Reset
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_Reticule::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 62323 ];

	UBioSFHandler_Reticule_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_Reticule.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Reticule::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63786 ];

	UBioSFHandler_Reticule_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveLoadBase.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_SaveLoadBase::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62134 ];

	UBioSFHandler_SaveLoadBase_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveLoadBase.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_SaveLoadBase::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62132 ];

	UBioSFHandler_SaveLoadBase_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveLoadBase.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_SaveLoadBase::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 62131 ];

	UBioSFHandler_SaveLoadBase_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveLoadBase.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_SaveLoadBase::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 62130 ];

	UBioSFHandler_SaveLoadBase_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveLoadBase.DeviceSelectionCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_dwDeviceSelectionId          ( CPF_Parm )

void UBioSFHandler_SaveLoadBase::DeviceSelectionCancel ( int i_dwDeviceSelectionId )
{
	static UFunction* pFnDeviceSelectionCancel = NULL;

	if ( ! pFnDeviceSelectionCancel )
		pFnDeviceSelectionCancel = (UFunction*) UObject::GObjObjects()->Data[ 62128 ];

	UBioSFHandler_SaveLoadBase_execDeviceSelectionCancel_Parms DeviceSelectionCancel_Parms;
	DeviceSelectionCancel_Parms.i_dwDeviceSelectionId = i_dwDeviceSelectionId;

	pFnDeviceSelectionCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeviceSelectionCancel, &DeviceSelectionCancel_Parms, NULL );

	pFnDeviceSelectionCancel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveLoadBase.DeviceSelectionCompletion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_dwDeviceSelectionId          ( CPF_Parm )

void UBioSFHandler_SaveLoadBase::DeviceSelectionCompletion ( int i_dwDeviceSelectionId )
{
	static UFunction* pFnDeviceSelectionCompletion = NULL;

	if ( ! pFnDeviceSelectionCompletion )
		pFnDeviceSelectionCompletion = (UFunction*) UObject::GObjObjects()->Data[ 62126 ];

	UBioSFHandler_SaveLoadBase_execDeviceSelectionCompletion_Parms DeviceSelectionCompletion_Parms;
	DeviceSelectionCompletion_Parms.i_dwDeviceSelectionId = i_dwDeviceSelectionId;

	pFnDeviceSelectionCompletion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeviceSelectionCompletion, &DeviceSelectionCompletion_Parms, NULL );

	pFnDeviceSelectionCompletion->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveLoadBase.DeleteGameConfirm
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_SaveLoadBase::DeleteGameConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnDeleteGameConfirm = NULL;

	if ( ! pFnDeleteGameConfirm )
		pFnDeleteGameConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62123 ];

	UBioSFHandler_SaveLoadBase_execDeleteGameConfirm_Parms DeleteGameConfirm_Parms;
	DeleteGameConfirm_Parms.bAPressed = bAPressed;
	DeleteGameConfirm_Parms.nContext = nContext;

	pFnDeleteGameConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteGameConfirm, &DeleteGameConfirm_Parms, NULL );

	pFnDeleteGameConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_LoadGame::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62167 ];

	UBioSFHandler_LoadGame_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_LoadGame.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_LoadGame::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 62165 ];

	UBioSFHandler_LoadGame_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_LoadGame.SetDirty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_LoadGame::SetDirty ( )
{
	static UFunction* pFnSetDirty = NULL;

	if ( ! pFnSetDirty )
		pFnSetDirty = (UFunction*) UObject::GObjObjects()->Data[ 62164 ];

	UBioSFHandler_LoadGame_execSetDirty_Parms SetDirty_Parms;

	pFnSetDirty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDirty, &SetDirty_Parms, NULL );

	pFnSetDirty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.RebuildLoadGameList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSFHandler_LoadGame::RebuildLoadGameList ( )
{
	static UFunction* pFnRebuildLoadGameList = NULL;

	if ( ! pFnRebuildLoadGameList )
		pFnRebuildLoadGameList = (UFunction*) UObject::GObjObjects()->Data[ 62163 ];

	UBioSFHandler_LoadGame_execRebuildLoadGameList_Parms RebuildLoadGameList_Parms;

	pFnRebuildLoadGameList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRebuildLoadGameList, &RebuildLoadGameList_Parms, NULL );

	pFnRebuildLoadGameList->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.NotifyCorruptSavesAndDelete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_LoadGame::NotifyCorruptSavesAndDelete ( )
{
	static UFunction* pFnNotifyCorruptSavesAndDelete = NULL;

	if ( ! pFnNotifyCorruptSavesAndDelete )
		pFnNotifyCorruptSavesAndDelete = (UFunction*) UObject::GObjObjects()->Data[ 62162 ];

	UBioSFHandler_LoadGame_execNotifyCorruptSavesAndDelete_Parms NotifyCorruptSavesAndDelete_Parms;

	pFnNotifyCorruptSavesAndDelete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyCorruptSavesAndDelete, &NotifyCorruptSavesAndDelete_Parms, NULL );

	pFnNotifyCorruptSavesAndDelete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.DeleteCorruptGamesConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )

void UBioSFHandler_LoadGame::DeleteCorruptGamesConfirm ( unsigned long bAPressed )
{
	static UFunction* pFnDeleteCorruptGamesConfirm = NULL;

	if ( ! pFnDeleteCorruptGamesConfirm )
		pFnDeleteCorruptGamesConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62160 ];

	UBioSFHandler_LoadGame_execDeleteCorruptGamesConfirm_Parms DeleteCorruptGamesConfirm_Parms;
	DeleteCorruptGamesConfirm_Parms.bAPressed = bAPressed;

	pFnDeleteCorruptGamesConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteCorruptGamesConfirm, &DeleteCorruptGamesConfirm_Parms, NULL );

	pFnDeleteCorruptGamesConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.ChunksNotInstalledConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_LoadGame::ChunksNotInstalledConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnChunksNotInstalledConfirm = NULL;

	if ( ! pFnChunksNotInstalledConfirm )
		pFnChunksNotInstalledConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62157 ];

	UBioSFHandler_LoadGame_execChunksNotInstalledConfirm_Parms ChunksNotInstalledConfirm_Parms;
	ChunksNotInstalledConfirm_Parms.bAPressed = bAPressed;
	ChunksNotInstalledConfirm_Parms.nContext = nContext;

	pFnChunksNotInstalledConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChunksNotInstalledConfirm, &ChunksNotInstalledConfirm_Parms, NULL );

	pFnChunksNotInstalledConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.DeleteGameConfirm
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_LoadGame::DeleteGameConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnDeleteGameConfirm = NULL;

	if ( ! pFnDeleteGameConfirm )
		pFnDeleteGameConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62154 ];

	UBioSFHandler_LoadGame_execDeleteGameConfirm_Parms DeleteGameConfirm_Parms;
	DeleteGameConfirm_Parms.bAPressed = bAPressed;
	DeleteGameConfirm_Parms.nContext = nContext;

	pFnDeleteGameConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteGameConfirm, &DeleteGameConfirm_Parms, NULL );

	pFnDeleteGameConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.DeleteCharacterConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_LoadGame::DeleteCharacterConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnDeleteCharacterConfirm = NULL;

	if ( ! pFnDeleteCharacterConfirm )
		pFnDeleteCharacterConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62151 ];

	UBioSFHandler_LoadGame_execDeleteCharacterConfirm_Parms DeleteCharacterConfirm_Parms;
	DeleteCharacterConfirm_Parms.bAPressed = bAPressed;
	DeleteCharacterConfirm_Parms.nContext = nContext;

	pFnDeleteCharacterConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteCharacterConfirm, &DeleteCharacterConfirm_Parms, NULL );

	pFnDeleteCharacterConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_LoadGame.LoadGameConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_LoadGame::LoadGameConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnLoadGameConfirm = NULL;

	if ( ! pFnLoadGameConfirm )
		pFnLoadGameConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62148 ];

	UBioSFHandler_LoadGame_execLoadGameConfirm_Parms LoadGameConfirm_Parms;
	LoadGameConfirm_Parms.bAPressed = bAPressed;
	LoadGameConfirm_Parms.nContext = nContext;

	pFnLoadGameConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameConfirm, &LoadGameConfirm_Parms, NULL );

	pFnLoadGameConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.CheckFreeSpaceComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_SaveGame::CheckFreeSpaceComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnCheckFreeSpaceComplete = NULL;

	if ( ! pFnCheckFreeSpaceComplete )
		pFnCheckFreeSpaceComplete = (UFunction*) UObject::GObjObjects()->Data[ 63817 ];

	UBioSFHandler_SaveGame_execCheckFreeSpaceComplete_Parms CheckFreeSpaceComplete_Parms;
	memcpy ( &CheckFreeSpaceComplete_Parms.Args, &Args, 0x60 );

	pFnCheckFreeSpaceComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckFreeSpaceComplete, &CheckFreeSpaceComplete_Parms, NULL );

	pFnCheckFreeSpaceComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_SaveGame::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 63816 ];

	UBioSFHandler_SaveGame_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SaveGame.NotifyCorruptSavesAndDelete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioSFHandler_SaveGame::NotifyCorruptSavesAndDelete ( )
{
	static UFunction* pFnNotifyCorruptSavesAndDelete = NULL;

	if ( ! pFnNotifyCorruptSavesAndDelete )
		pFnNotifyCorruptSavesAndDelete = (UFunction*) UObject::GObjObjects()->Data[ 63815 ];

	UBioSFHandler_SaveGame_execNotifyCorruptSavesAndDelete_Parms NotifyCorruptSavesAndDelete_Parms;

	pFnNotifyCorruptSavesAndDelete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyCorruptSavesAndDelete, &NotifyCorruptSavesAndDelete_Parms, NULL );

	pFnNotifyCorruptSavesAndDelete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.DeleteCorruptGamesConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )

void UBioSFHandler_SaveGame::DeleteCorruptGamesConfirm ( unsigned long bAPressed )
{
	static UFunction* pFnDeleteCorruptGamesConfirm = NULL;

	if ( ! pFnDeleteCorruptGamesConfirm )
		pFnDeleteCorruptGamesConfirm = (UFunction*) UObject::GObjObjects()->Data[ 63813 ];

	UBioSFHandler_SaveGame_execDeleteCorruptGamesConfirm_Parms DeleteCorruptGamesConfirm_Parms;
	DeleteCorruptGamesConfirm_Parms.bAPressed = bAPressed;

	pFnDeleteCorruptGamesConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteCorruptGamesConfirm, &DeleteCorruptGamesConfirm_Parms, NULL );

	pFnDeleteCorruptGamesConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.SaveComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UBioSFHandler_MessageBox* oMsgBox                        ( CPF_Parm )

void UBioSFHandler_SaveGame::SaveComplete ( float fDeltaT, class UBioSFHandler_MessageBox* oMsgBox )
{
	static UFunction* pFnSaveComplete = NULL;

	if ( ! pFnSaveComplete )
		pFnSaveComplete = (UFunction*) UObject::GObjObjects()->Data[ 63810 ];

	UBioSFHandler_SaveGame_execSaveComplete_Parms SaveComplete_Parms;
	SaveComplete_Parms.fDeltaT = fDeltaT;
	SaveComplete_Parms.oMsgBox = oMsgBox;

	pFnSaveComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveComplete, &SaveComplete_Parms, NULL );

	pFnSaveComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.SaveGameConfirm
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_SaveGame::SaveGameConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnSaveGameConfirm = NULL;

	if ( ! pFnSaveGameConfirm )
		pFnSaveGameConfirm = (UFunction*) UObject::GObjObjects()->Data[ 63807 ];

	UBioSFHandler_SaveGame_execSaveGameConfirm_Parms SaveGameConfirm_Parms;
	SaveGameConfirm_Parms.bAPressed = bAPressed;
	SaveGameConfirm_Parms.nContext = nContext;

	pFnSaveGameConfirm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveGameConfirm, &SaveGameConfirm_Parms, NULL );

	pFnSaveGameConfirm->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSFHandler_SaveGame.DeleteGameConfirm
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_SaveGame::DeleteGameConfirm ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnDeleteGameConfirm = NULL;

	if ( ! pFnDeleteGameConfirm )
		pFnDeleteGameConfirm = (UFunction*) UObject::GObjObjects()->Data[ 63803 ];

	UBioSFHandler_SaveGame_execDeleteGameConfirm_Parms DeleteGameConfirm_Parms;
	DeleteGameConfirm_Parms.bAPressed = bAPressed;
	DeleteGameConfirm_Parms.nContext = nContext;

	this->ProcessEvent ( pFnDeleteGameConfirm, &DeleteGameConfirm_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SharedIGG.BackToMainMenu
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_SharedIGG::BackToMainMenu ( )
{
	static UFunction* pFnBackToMainMenu = NULL;

	if ( ! pFnBackToMainMenu )
		pFnBackToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 63857 ];

	UBioSFHandler_SharedIGG_execBackToMainMenu_Parms BackToMainMenu_Parms;

	this->ProcessEvent ( pFnBackToMainMenu, &BackToMainMenu_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SharedIGG.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_SharedIGG::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63852 ];

	UBioSFHandler_SharedIGG_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Shop.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Shop::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 64170 ];

	UBioSFHandler_Shop_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdatePurchaseErrorMsg
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UBioSFHandler_MessageBox* oMsgBox                        ( CPF_Parm )

void UBioSFHandler_Shop::UpdatePurchaseErrorMsg ( float fDeltaT, class UBioSFHandler_MessageBox* oMsgBox )
{
	static UFunction* pFnUpdatePurchaseErrorMsg = NULL;

	if ( ! pFnUpdatePurchaseErrorMsg )
		pFnUpdatePurchaseErrorMsg = (UFunction*) UObject::GObjObjects()->Data[ 64167 ];

	UBioSFHandler_Shop_execUpdatePurchaseErrorMsg_Parms UpdatePurchaseErrorMsg_Parms;
	UpdatePurchaseErrorMsg_Parms.fDeltaT = fDeltaT;
	UpdatePurchaseErrorMsg_Parms.oMsgBox = oMsgBox;

	this->ProcessEvent ( pFnUpdatePurchaseErrorMsg, &UpdatePurchaseErrorMsg_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.DisplayPurchaseErrorMsg
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::DisplayPurchaseErrorMsg ( )
{
	static UFunction* pFnDisplayPurchaseErrorMsg = NULL;

	if ( ! pFnDisplayPurchaseErrorMsg )
		pFnDisplayPurchaseErrorMsg = (UFunction*) UObject::GObjObjects()->Data[ 64160 ];

	UBioSFHandler_Shop_execDisplayPurchaseErrorMsg_Parms DisplayPurchaseErrorMsg_Parms;

	this->ProcessEvent ( pFnDisplayPurchaseErrorMsg, &DisplayPurchaseErrorMsg_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.ConfirmSellAllJunk
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConfirmedJunk                 ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_Shop::ConfirmSellAllJunk ( unsigned long bConfirmedJunk, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnConfirmSellAllJunk = NULL;

	if ( ! pFnConfirmSellAllJunk )
		pFnConfirmSellAllJunk = (UFunction*) UObject::GObjObjects()->Data[ 64152 ];

	UBioSFHandler_Shop_execConfirmSellAllJunk_Parms ConfirmSellAllJunk_Parms;
	ConfirmSellAllJunk_Parms.bConfirmedJunk = bConfirmedJunk;
	ConfirmSellAllJunk_Parms.nContext = nContext;
	ConfirmSellAllJunk_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnConfirmSellAllJunk, &ConfirmSellAllJunk_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.SellAllJunk
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::SellAllJunk ( )
{
	static UFunction* pFnSellAllJunk = NULL;

	if ( ! pFnSellAllJunk )
		pFnSellAllJunk = (UFunction*) UObject::GObjObjects()->Data[ 64146 ];

	UBioSFHandler_Shop_execSellAllJunk_Parms SellAllJunk_Parms;

	this->ProcessEvent ( pFnSellAllJunk, &SellAllJunk_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.MarkItemAsJunk
// [0x00020002] 
// Parameters infos:
// unsigned long                  val                            ( CPF_Parm )

void UBioSFHandler_Shop::MarkItemAsJunk ( unsigned long val )
{
	static UFunction* pFnMarkItemAsJunk = NULL;

	if ( ! pFnMarkItemAsJunk )
		pFnMarkItemAsJunk = (UFunction*) UObject::GObjObjects()->Data[ 64144 ];

	UBioSFHandler_Shop_execMarkItemAsJunk_Parms MarkItemAsJunk_Parms;
	MarkItemAsJunk_Parms.val = val;

	this->ProcessEvent ( pFnMarkItemAsJunk, &MarkItemAsJunk_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.GetProperSortString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            SortType                       ( CPF_Parm )

struct FString UBioSFHandler_Shop::GetProperSortString ( int SortType )
{
	static UFunction* pFnGetProperSortString = NULL;

	if ( ! pFnGetProperSortString )
		pFnGetProperSortString = (UFunction*) UObject::GObjObjects()->Data[ 64135 ];

	UBioSFHandler_Shop_execGetProperSortString_Parms GetProperSortString_Parms;
	GetProperSortString_Parms.SortType = SortType;

	this->ProcessEvent ( pFnGetProperSortString, &GetProperSortString_Parms, NULL );

	return GetProperSortString_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.NextSort
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::NextSort ( )
{
	static UFunction* pFnNextSort = NULL;

	if ( ! pFnNextSort )
		pFnNextSort = (UFunction*) UObject::GObjObjects()->Data[ 64133 ];

	UBioSFHandler_Shop_execNextSort_Parms NextSort_Parms;

	this->ProcessEvent ( pFnNextSort, &NextSort_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 64132 ];

	UBioSFHandler_Shop_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.ReclaimOrCheckItemXMods
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bCheckOnly                     ( CPF_Parm )
// class UBioItem*                oItem                          ( CPF_Parm )

bool UBioSFHandler_Shop::ReclaimOrCheckItemXMods ( unsigned long bCheckOnly, class UBioItem* oItem )
{
	static UFunction* pFnReclaimOrCheckItemXMods = NULL;

	if ( ! pFnReclaimOrCheckItemXMods )
		pFnReclaimOrCheckItemXMods = (UFunction*) UObject::GObjObjects()->Data[ 63994 ];

	UBioSFHandler_Shop_execReclaimOrCheckItemXMods_Parms ReclaimOrCheckItemXMods_Parms;
	ReclaimOrCheckItemXMods_Parms.bCheckOnly = bCheckOnly;
	ReclaimOrCheckItemXMods_Parms.oItem = oItem;

	this->ProcessEvent ( pFnReclaimOrCheckItemXMods, &ReclaimOrCheckItemXMods_Parms, NULL );

	return ReclaimOrCheckItemXMods_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.GetCurrentItemCategory
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            intIsXMod                      ( CPF_Parm | CPF_OutParm )
// int                            intIsWeapon                    ( CPF_Parm | CPF_OutParm )
// int                            intIsPlotItem                  ( CPF_Parm | CPF_OutParm )
// unsigned char                  EquipmentSlot                  ( CPF_Parm | CPF_OutParm )
// unsigned char                  weaponType                     ( CPF_Parm | CPF_OutParm )

bool UBioSFHandler_Shop::GetCurrentItemCategory ( int* intIsXMod, int* intIsWeapon, int* intIsPlotItem, unsigned char* EquipmentSlot, unsigned char* weaponType )
{
	static UFunction* pFnGetCurrentItemCategory = NULL;

	if ( ! pFnGetCurrentItemCategory )
		pFnGetCurrentItemCategory = (UFunction*) UObject::GObjObjects()->Data[ 64086 ];

	UBioSFHandler_Shop_execGetCurrentItemCategory_Parms GetCurrentItemCategory_Parms;

	this->ProcessEvent ( pFnGetCurrentItemCategory, &GetCurrentItemCategory_Parms, NULL );

	if ( intIsXMod )
		*intIsXMod = GetCurrentItemCategory_Parms.intIsXMod;

	if ( intIsWeapon )
		*intIsWeapon = GetCurrentItemCategory_Parms.intIsWeapon;

	if ( intIsPlotItem )
		*intIsPlotItem = GetCurrentItemCategory_Parms.intIsPlotItem;

	if ( EquipmentSlot )
		*EquipmentSlot = GetCurrentItemCategory_Parms.EquipmentSlot;

	if ( weaponType )
		*weaponType = GetCurrentItemCategory_Parms.weaponType;

	return GetCurrentItemCategory_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.CalculatePurchasePriceFromBasePrice
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          basePrice                      ( CPF_Parm )

int UBioSFHandler_Shop::CalculatePurchasePriceFromBasePrice ( float basePrice )
{
	static UFunction* pFnCalculatePurchasePriceFromBasePrice = NULL;

	if ( ! pFnCalculatePurchasePriceFromBasePrice )
		pFnCalculatePurchasePriceFromBasePrice = (UFunction*) UObject::GObjObjects()->Data[ 64014 ];

	UBioSFHandler_Shop_execCalculatePurchasePriceFromBasePrice_Parms CalculatePurchasePriceFromBasePrice_Parms;
	CalculatePurchasePriceFromBasePrice_Parms.basePrice = basePrice;

	this->ProcessEvent ( pFnCalculatePurchasePriceFromBasePrice, &CalculatePurchasePriceFromBasePrice_Parms, NULL );

	return CalculatePurchasePriceFromBasePrice_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.CalculateSellPriceFromBasePrice
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          basePrice                      ( CPF_Parm )

int UBioSFHandler_Shop::CalculateSellPriceFromBasePrice ( float basePrice )
{
	static UFunction* pFnCalculateSellPriceFromBasePrice = NULL;

	if ( ! pFnCalculateSellPriceFromBasePrice )
		pFnCalculateSellPriceFromBasePrice = (UFunction*) UObject::GObjObjects()->Data[ 64003 ];

	UBioSFHandler_Shop_execCalculateSellPriceFromBasePrice_Parms CalculateSellPriceFromBasePrice_Parms;
	CalculateSellPriceFromBasePrice_Parms.basePrice = basePrice;

	this->ProcessEvent ( pFnCalculateSellPriceFromBasePrice, &CalculateSellPriceFromBasePrice_Parms, NULL );

	return CalculateSellPriceFromBasePrice_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.UpdateCompareItemAtIndex
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 squadMemberName                ( CPF_Parm | CPF_NeedCtorLink )
// class UBioItem*                Item                           ( CPF_Parm )
// int                            nIsXMod                        ( CPF_Parm )

void UBioSFHandler_Shop::UpdateCompareItemAtIndex ( int Index, struct FString squadMemberName, class UBioItem* Item, int nIsXMod )
{
	static UFunction* pFnUpdateCompareItemAtIndex = NULL;

	if ( ! pFnUpdateCompareItemAtIndex )
		pFnUpdateCompareItemAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 64087 ];

	UBioSFHandler_Shop_execUpdateCompareItemAtIndex_Parms UpdateCompareItemAtIndex_Parms;
	UpdateCompareItemAtIndex_Parms.Index = Index;
	memcpy ( &UpdateCompareItemAtIndex_Parms.squadMemberName, &squadMemberName, 0x10 );
	UpdateCompareItemAtIndex_Parms.Item = Item;
	UpdateCompareItemAtIndex_Parms.nIsXMod = nIsXMod;

	this->ProcessEvent ( pFnUpdateCompareItemAtIndex, &UpdateCompareItemAtIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdateCompareItems
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::UpdateCompareItems ( )
{
	static UFunction* pFnUpdateCompareItems = NULL;

	if ( ! pFnUpdateCompareItems )
		pFnUpdateCompareItems = (UFunction*) UObject::GObjObjects()->Data[ 64069 ];

	UBioSFHandler_Shop_execUpdateCompareItems_Parms UpdateCompareItems_Parms;

	this->ProcessEvent ( pFnUpdateCompareItems, &UpdateCompareItems_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdatePlotItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            plotItemIndex                  ( CPF_Parm )
// int                            indexToSendToGUI               ( CPF_Parm )

void UBioSFHandler_Shop::UpdatePlotItem ( int plotItemIndex, int indexToSendToGUI )
{
	static UFunction* pFnUpdatePlotItem = NULL;

	if ( ! pFnUpdatePlotItem )
		pFnUpdatePlotItem = (UFunction*) UObject::GObjObjects()->Data[ 64040 ];

	UBioSFHandler_Shop_execUpdatePlotItem_Parms UpdatePlotItem_Parms;
	UpdatePlotItem_Parms.plotItemIndex = plotItemIndex;
	UpdatePlotItem_Parms.indexToSendToGUI = indexToSendToGUI;

	this->ProcessEvent ( pFnUpdatePlotItem, &UpdatePlotItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdateListItem
// [0x00020002] 
// Parameters infos:
// int                            ListIndex                      ( CPF_Parm )
// int                            indexToSendToGUI               ( CPF_Parm )

void UBioSFHandler_Shop::UpdateListItem ( int ListIndex, int indexToSendToGUI )
{
	static UFunction* pFnUpdateListItem = NULL;

	if ( ! pFnUpdateListItem )
		pFnUpdateListItem = (UFunction*) UObject::GObjObjects()->Data[ 64041 ];

	UBioSFHandler_Shop_execUpdateListItem_Parms UpdateListItem_Parms;
	UpdateListItem_Parms.ListIndex = ListIndex;
	UpdateListItem_Parms.indexToSendToGUI = indexToSendToGUI;

	this->ProcessEvent ( pFnUpdateListItem, &UpdateListItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdateEntireShopList
// [0x00020002] 
// Parameters infos:
// int                            nSetGUIIndex                   ( CPF_Parm )
// unsigned long                  fullRefresh                    ( CPF_Parm )

void UBioSFHandler_Shop::UpdateEntireShopList ( int nSetGUIIndex, unsigned long fullRefresh )
{
	static UFunction* pFnUpdateEntireShopList = NULL;

	if ( ! pFnUpdateEntireShopList )
		pFnUpdateEntireShopList = (UFunction*) UObject::GObjObjects()->Data[ 64028 ];

	UBioSFHandler_Shop_execUpdateEntireShopList_Parms UpdateEntireShopList_Parms;
	UpdateEntireShopList_Parms.nSetGUIIndex = nSetGUIIndex;
	UpdateEntireShopList_Parms.fullRefresh = fullRefresh;

	this->ProcessEvent ( pFnUpdateEntireShopList, &UpdateEntireShopList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdateCurrentIndex
// [0x00020002] 
// Parameters infos:
// int                            nRequestedGUIIndex             ( CPF_Parm )

void UBioSFHandler_Shop::UpdateCurrentIndex ( int nRequestedGUIIndex )
{
	static UFunction* pFnUpdateCurrentIndex = NULL;

	if ( ! pFnUpdateCurrentIndex )
		pFnUpdateCurrentIndex = (UFunction*) UObject::GObjObjects()->Data[ 64020 ];

	UBioSFHandler_Shop_execUpdateCurrentIndex_Parms UpdateCurrentIndex_Parms;
	UpdateCurrentIndex_Parms.nRequestedGUIIndex = nRequestedGUIIndex;

	this->ProcessEvent ( pFnUpdateCurrentIndex, &UpdateCurrentIndex_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.UpdatePartyCash
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::UpdatePartyCash ( )
{
	static UFunction* pFnUpdatePartyCash = NULL;

	if ( ! pFnUpdatePartyCash )
		pFnUpdatePartyCash = (UFunction*) UObject::GObjObjects()->Data[ 64016 ];

	UBioSFHandler_Shop_execUpdatePartyCash_Parms UpdatePartyCash_Parms;

	this->ProcessEvent ( pFnUpdatePartyCash, &UpdatePartyCash_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.BuyCurrentItem
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSFHandler_Shop::BuyCurrentItem ( )
{
	static UFunction* pFnBuyCurrentItem = NULL;

	if ( ! pFnBuyCurrentItem )
		pFnBuyCurrentItem = (UFunction*) UObject::GObjObjects()->Data[ 64005 ];

	UBioSFHandler_Shop_execBuyCurrentItem_Parms BuyCurrentItem_Parms;

	this->ProcessEvent ( pFnBuyCurrentItem, &BuyCurrentItem_Parms, NULL );

	return BuyCurrentItem_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.SellItemDelegate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConfirmedSell                 ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_Shop::SellItemDelegate ( unsigned long bConfirmedSell, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnSellItemDelegate = NULL;

	if ( ! pFnSellItemDelegate )
		pFnSellItemDelegate = (UFunction*) UObject::GObjObjects()->Data[ 63998 ];

	UBioSFHandler_Shop_execSellItemDelegate_Parms SellItemDelegate_Parms;
	SellItemDelegate_Parms.bConfirmedSell = bConfirmedSell;
	SellItemDelegate_Parms.nContext = nContext;
	SellItemDelegate_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnSellItemDelegate, &SellItemDelegate_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.SellCurrentItem
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::SellCurrentItem ( )
{
	static UFunction* pFnSellCurrentItem = NULL;

	if ( ! pFnSellCurrentItem )
		pFnSellCurrentItem = (UFunction*) UObject::GObjObjects()->Data[ 63988 ];

	UBioSFHandler_Shop_execSellCurrentItem_Parms SellCurrentItem_Parms;

	this->ProcessEvent ( pFnSellCurrentItem, &SellCurrentItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.RebuildAndUpdateShopInventory
// [0x00020002] 
// Parameters infos:
// int                            nSetGUIIndex                   ( CPF_Parm )
// unsigned long                  needsFullRefresh               ( CPF_Parm )

void UBioSFHandler_Shop::RebuildAndUpdateShopInventory ( int nSetGUIIndex, unsigned long needsFullRefresh )
{
	static UFunction* pFnRebuildAndUpdateShopInventory = NULL;

	if ( ! pFnRebuildAndUpdateShopInventory )
		pFnRebuildAndUpdateShopInventory = (UFunction*) UObject::GObjObjects()->Data[ 63984 ];

	UBioSFHandler_Shop_execRebuildAndUpdateShopInventory_Parms RebuildAndUpdateShopInventory_Parms;
	RebuildAndUpdateShopInventory_Parms.nSetGUIIndex = nSetGUIIndex;
	RebuildAndUpdateShopInventory_Parms.needsFullRefresh = needsFullRefresh;

	this->ProcessEvent ( pFnRebuildAndUpdateShopInventory, &RebuildAndUpdateShopInventory_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.SetSlotState
// [0x00020002] 
// Parameters infos:
// unsigned char                  newSlot                        ( CPF_Parm )

void UBioSFHandler_Shop::SetSlotState ( unsigned char newSlot )
{
	static UFunction* pFnSetSlotState = NULL;

	if ( ! pFnSetSlotState )
		pFnSetSlotState = (UFunction*) UObject::GObjObjects()->Data[ 63981 ];

	UBioSFHandler_Shop_execSetSlotState_Parms SetSlotState_Parms;
	SetSlotState_Parms.newSlot = newSlot;

	this->ProcessEvent ( pFnSetSlotState, &SetSlotState_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.SetTradeState
// [0x00020002] 
// Parameters infos:
// unsigned long                  isPlayerBuying                 ( CPF_Parm )

void UBioSFHandler_Shop::SetTradeState ( unsigned long isPlayerBuying )
{
	static UFunction* pFnSetTradeState = NULL;

	if ( ! pFnSetTradeState )
		pFnSetTradeState = (UFunction*) UObject::GObjObjects()->Data[ 63977 ];

	UBioSFHandler_Shop_execSetTradeState_Parms SetTradeState_Parms;
	SetTradeState_Parms.isPlayerBuying = isPlayerBuying;

	this->ProcessEvent ( pFnSetTradeState, &SetTradeState_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.ShutDown
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 63975 ];

	UBioSFHandler_Shop_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.Initialize
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Shop::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 63974 ];

	UBioSFHandler_Shop_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.Update
// [0x00020002] 
// Parameters infos:
// float                          unused                         ( CPF_Parm )

void UBioSFHandler_Shop::Update ( float unused )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 63969 ];

	UBioSFHandler_Shop_execUpdate_Parms Update_Parms;
	Update_Parms.unused = unused;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Shop::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 63965 ];

	UBioSFHandler_Shop_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Shop.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  Parameters                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Shop::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* Parameters )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63952 ];

	UBioSFHandler_Shop_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( Parameters )
		memcpy ( Parameters, &HandleEvent_Parms.Parameters, 0x10 );
};

// Function SFXGame.BioSFHandler_Shop.PreInitialization
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioShop*                shop                           ( CPF_Parm )
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )

bool UBioSFHandler_Shop::PreInitialization ( class ABioShop* shop, class ABioWorldInfo* WorldInfo )
{
	static UFunction* pFnPreInitialization = NULL;

	if ( ! pFnPreInitialization )
		pFnPreInitialization = (UFunction*) UObject::GObjObjects()->Data[ 62366 ];

	UBioSFHandler_Shop_execPreInitialization_Parms PreInitialization_Parms;
	PreInitialization_Parms.shop = shop;
	PreInitialization_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnPreInitialization, &PreInitialization_Parms, NULL );

	return PreInitialization_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Shop.GetInventoryFullMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            i_nOverItems                   ( CPF_Parm )
// int                            i_nMaxItems                    ( CPF_Parm )

struct FString UBioSFHandler_Shop::GetInventoryFullMessage ( int i_nOverItems, int i_nMaxItems )
{
	static UFunction* pFnGetInventoryFullMessage = NULL;

	if ( ! pFnGetInventoryFullMessage )
		pFnGetInventoryFullMessage = (UFunction*) UObject::GObjObjects()->Data[ 63941 ];

	UBioSFHandler_Shop_execGetInventoryFullMessage_Parms GetInventoryFullMessage_Parms;
	GetInventoryFullMessage_Parms.i_nOverItems = i_nOverItems;
	GetInventoryFullMessage_Parms.i_nMaxItems = i_nMaxItems;

	pFnGetInventoryFullMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryFullMessage, &GetInventoryFullMessage_Parms, NULL );

	pFnGetInventoryFullMessage->FunctionFlags |= 0x400;

	return GetInventoryFullMessage_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Splash.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Splash::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63733 ];

	UBioSFHandler_Splash_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.StartTimeout
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShowLegal                     ( CPF_Parm )

void UBioSFHandler_Splash::StartTimeout ( unsigned long bShowLegal )
{
	static UFunction* pFnStartTimeout = NULL;

	if ( ! pFnStartTimeout )
		pFnStartTimeout = (UFunction*) UObject::GObjObjects()->Data[ 63727 ];

	UBioSFHandler_Splash_execStartTimeout_Parms StartTimeout_Parms;
	StartTimeout_Parms.bShowLegal = bShowLegal;

	this->ProcessEvent ( pFnStartTimeout, &StartTimeout_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Splash::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 63724 ];

	UBioSFHandler_Splash_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.AdvanceScreen
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_Splash::eventAdvanceScreen ( )
{
	static UFunction* pFnAdvanceScreen = NULL;

	if ( ! pFnAdvanceScreen )
		pFnAdvanceScreen = (UFunction*) UObject::GObjObjects()->Data[ 63722 ];

	UBioSFHandler_Splash_eventAdvanceScreen_Parms AdvanceScreen_Parms;

	this->ProcessEvent ( pFnAdvanceScreen, &AdvanceScreen_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.Initialize
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Splash::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 63717 ];

	UBioSFHandler_Splash_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Splash::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63713 ];

	UBioSFHandler_Splash_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Splash.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Splash::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 63710 ];

	UBioSFHandler_Splash_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.DisplayNoProfileConfirmation
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Splash::DisplayNoProfileConfirmation ( )
{
	static UFunction* pFnDisplayNoProfileConfirmation = NULL;

	if ( ! pFnDisplayNoProfileConfirmation )
		pFnDisplayNoProfileConfirmation = (UFunction*) UObject::GObjObjects()->Data[ 63708 ];

	UBioSFHandler_Splash_execDisplayNoProfileConfirmation_Parms DisplayNoProfileConfirmation_Parms;

	this->ProcessEvent ( pFnDisplayNoProfileConfirmation, &DisplayNoProfileConfirmation_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.Callback_LoginComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bIsOpening                     ( CPF_Parm )

void UBioSFHandler_Splash::Callback_LoginComplete ( unsigned long bIsOpening )
{
	static UFunction* pFnCallback_LoginComplete = NULL;

	if ( ! pFnCallback_LoginComplete )
		pFnCallback_LoginComplete = (UFunction*) UObject::GObjObjects()->Data[ 63701 ];

	UBioSFHandler_Splash_execCallback_LoginComplete_Parms Callback_LoginComplete_Parms;
	Callback_LoginComplete_Parms.bIsOpening = bIsOpening;

	this->ProcessEvent ( pFnCallback_LoginComplete, &Callback_LoginComplete_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Splash.CheckLogin
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Splash::CheckLogin ( )
{
	static UFunction* pFnCheckLogin = NULL;

	if ( ! pFnCheckLogin )
		pFnCheckLogin = (UFunction*) UObject::GObjObjects()->Data[ 63694 ];

	UBioSFHandler_Splash_execCheckLogin_Parms CheckLogin_Parms;

	this->ProcessEvent ( pFnCheckLogin, &CheckLogin_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCSplash.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCSplash::eventUpdate ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 63745 ];

	UBioSFHandler_PCSplash_eventUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCSplash.AdvanceScreen
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_PCSplash::eventAdvanceScreen ( )
{
	static UFunction* pFnAdvanceScreen = NULL;

	if ( ! pFnAdvanceScreen )
		pFnAdvanceScreen = (UFunction*) UObject::GObjObjects()->Data[ 63744 ];

	UBioSFHandler_PCSplash_eventAdvanceScreen_Parms AdvanceScreen_Parms;

	this->ProcessEvent ( pFnAdvanceScreen, &AdvanceScreen_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCSplash.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCSplash::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63740 ];

	UBioSFHandler_PCSplash_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_PCSplash.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCSplash::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 63739 ];

	UBioSFHandler_PCSplash_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Tutorial.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Tutorial::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 64231 ];

	UBioSFHandler_Tutorial_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Tutorial.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Tutorial::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 64223 ];

	UBioSFHandler_Tutorial_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Tutorial.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Tutorial::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 64222 ];

	UBioSFHandler_Tutorial_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Tutorial.CompletionCallback
// [0x00120000] 
// Parameters infos:

void UBioSFHandler_Tutorial::CompletionCallback ( )
{
	static UFunction* pFnCompletionCallback = NULL;

	if ( ! pFnCompletionCallback )
		pFnCompletionCallback = (UFunction*) UObject::GObjObjects()->Data[ 64221 ];

	UBioSFHandler_Tutorial_execCompletionCallback_Parms CompletionCallback_Parms;

	this->ProcessEvent ( pFnCompletionCallback, &CompletionCallback_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XBoxMessageBox.DisplayMessageBox
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            srTitle                        ( CPF_Parm )
// int                            srMessage                      ( CPF_Parm )
// unsigned char                  nIcon                          ( CPF_OptionalParm | CPF_Parm )
// int                            nDefaultButton                 ( CPF_OptionalParm | CPF_Parm )
// struct TArray<int>             srButtons                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_XBoxMessageBox::DisplayMessageBox ( int srTitle, int srMessage, unsigned char nIcon, int nDefaultButton, struct TArray<int>* srButtons )
{
	static UFunction* pFnDisplayMessageBox = NULL;

	if ( ! pFnDisplayMessageBox )
		pFnDisplayMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 64237 ];

	UBioSFHandler_XBoxMessageBox_execDisplayMessageBox_Parms DisplayMessageBox_Parms;
	DisplayMessageBox_Parms.srTitle = srTitle;
	DisplayMessageBox_Parms.srMessage = srMessage;
	DisplayMessageBox_Parms.nIcon = nIcon;
	DisplayMessageBox_Parms.nDefaultButton = nDefaultButton;

	pFnDisplayMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayMessageBox, &DisplayMessageBox_Parms, NULL );

	pFnDisplayMessageBox->FunctionFlags |= 0x400;

	if ( srButtons )
		memcpy ( srButtons, &DisplayMessageBox_Parms.srButtons, 0x10 );
};

// Function SFXGame.BioSkillGame_Handler.SetSwapXandO
// [0x00020002] 
// Parameters infos:
// unsigned long                  shouldSwap                     ( CPF_Parm )

void UBioSkillGame_Handler::SetSwapXandO ( unsigned long shouldSwap )
{
	static UFunction* pFnSetSwapXandO = NULL;

	if ( ! pFnSetSwapXandO )
		pFnSetSwapXandO = (UFunction*) UObject::GObjObjects()->Data[ 64571 ];

	UBioSkillGame_Handler_execSetSwapXandO_Parms SetSwapXandO_Parms;
	SetSwapXandO_Parms.shouldSwap = shouldSwap;

	this->ProcessEvent ( pFnSetSwapXandO, &SetSwapXandO_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSkillGame_Handler::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 64570 ];

	UBioSkillGame_Handler_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.ResetMousePos
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSkillGame_Handler::ResetMousePos ( )
{
	static UFunction* pFnResetMousePos = NULL;

	if ( ! pFnResetMousePos )
		pFnResetMousePos = (UFunction*) UObject::GObjObjects()->Data[ 64569 ];

	UBioSkillGame_Handler_execResetMousePos_Parms ResetMousePos_Parms;

	pFnResetMousePos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetMousePos, &ResetMousePos_Parms, NULL );

	pFnResetMousePos->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.SetupGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_initialSalvage               ( CPF_Parm )

void UBioSkillGame_Handler::SetupGame ( int i_initialSalvage )
{
	static UFunction* pFnSetupGame = NULL;

	if ( ! pFnSetupGame )
		pFnSetupGame = (UFunction*) UObject::GObjObjects()->Data[ 64567 ];

	UBioSkillGame_Handler_execSetupGame_Parms SetupGame_Parms;
	SetupGame_Parms.i_initialSalvage = i_initialSalvage;

	pFnSetupGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupGame, &SetupGame_Parms, NULL );

	pFnSetupGame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.UpdateSalvage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_salvage                      ( CPF_Parm )

void UBioSkillGame_Handler::UpdateSalvage ( int i_salvage )
{
	static UFunction* pFnUpdateSalvage = NULL;

	if ( ! pFnUpdateSalvage )
		pFnUpdateSalvage = (UFunction*) UObject::GObjObjects()->Data[ 64565 ];

	UBioSkillGame_Handler_execUpdateSalvage_Parms UpdateSalvage_Parms;
	UpdateSalvage_Parms.i_salvage = i_salvage;

	pFnUpdateSalvage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSalvage, &UpdateSalvage_Parms, NULL );

	pFnUpdateSalvage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.SetButtonVisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_ButtonType                   ( CPF_Parm )

void UBioSkillGame_Handler::SetButtonVisible ( int i_ButtonType )
{
	static UFunction* pFnSetButtonVisible = NULL;

	if ( ! pFnSetButtonVisible )
		pFnSetButtonVisible = (UFunction*) UObject::GObjObjects()->Data[ 64563 ];

	UBioSkillGame_Handler_execSetButtonVisible_Parms SetButtonVisible_Parms;
	SetButtonVisible_Parms.i_ButtonType = i_ButtonType;

	pFnSetButtonVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetButtonVisible, &SetButtonVisible_Parms, NULL );

	pFnSetButtonVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.ClearAllButtons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSkillGame_Handler::ClearAllButtons ( )
{
	static UFunction* pFnClearAllButtons = NULL;

	if ( ! pFnClearAllButtons )
		pFnClearAllButtons = (UFunction*) UObject::GObjObjects()->Data[ 64562 ];

	UBioSkillGame_Handler_execClearAllButtons_Parms ClearAllButtons_Parms;

	pFnClearAllButtons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearAllButtons, &ClearAllButtons_Parms, NULL );

	pFnClearAllButtons->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.HandleSkillGameDisplayButton
// [0x00020002] 
// Parameters infos:
// class UObject*                 Params                         ( CPF_Parm )

void UBioSkillGame_Handler::HandleSkillGameDisplayButton ( class UObject* Params )
{
	static UFunction* pFnHandleSkillGameDisplayButton = NULL;

	if ( ! pFnHandleSkillGameDisplayButton )
		pFnHandleSkillGameDisplayButton = (UFunction*) UObject::GObjObjects()->Data[ 64558 ];

	UBioSkillGame_Handler_execHandleSkillGameDisplayButton_Parms HandleSkillGameDisplayButton_Parms;
	HandleSkillGameDisplayButton_Parms.Params = Params;

	this->ProcessEvent ( pFnHandleSkillGameDisplayButton, &HandleSkillGameDisplayButton_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.SkillGameTriggerNextButton
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fButtonDelayTime               ( CPF_Parm )

void UBioSkillGame_Handler::eventSkillGameTriggerNextButton ( float fButtonDelayTime )
{
	static UFunction* pFnSkillGameTriggerNextButton = NULL;

	if ( ! pFnSkillGameTriggerNextButton )
		pFnSkillGameTriggerNextButton = (UFunction*) UObject::GObjObjects()->Data[ 64554 ];

	UBioSkillGame_Handler_eventSkillGameTriggerNextButton_Parms SkillGameTriggerNextButton_Parms;
	SkillGameTriggerNextButton_Parms.fButtonDelayTime = fButtonDelayTime;

	this->ProcessEvent ( pFnSkillGameTriggerNextButton, &SkillGameTriggerNextButton_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.HandleSkillGameButtonTimeout
// [0x00020002] 
// Parameters infos:
// class UObject*                 Params                         ( CPF_Parm )

void UBioSkillGame_Handler::HandleSkillGameButtonTimeout ( class UObject* Params )
{
	static UFunction* pFnHandleSkillGameButtonTimeout = NULL;

	if ( ! pFnHandleSkillGameButtonTimeout )
		pFnHandleSkillGameButtonTimeout = (UFunction*) UObject::GObjObjects()->Data[ 64552 ];

	UBioSkillGame_Handler_execHandleSkillGameButtonTimeout_Parms HandleSkillGameButtonTimeout_Parms;
	HandleSkillGameButtonTimeout_Parms.Params = Params;

	this->ProcessEvent ( pFnHandleSkillGameButtonTimeout, &HandleSkillGameButtonTimeout_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.HandleSkillGameButtonPress
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  InputEvent                     ( CPF_Parm )

void UBioSkillGame_Handler::eventHandleSkillGameButtonPress ( unsigned char InputEvent )
{
	static UFunction* pFnHandleSkillGameButtonPress = NULL;

	if ( ! pFnHandleSkillGameButtonPress )
		pFnHandleSkillGameButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 64548 ];

	UBioSkillGame_Handler_eventHandleSkillGameButtonPress_Parms HandleSkillGameButtonPress_Parms;
	HandleSkillGameButtonPress_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnHandleSkillGameButtonPress, &HandleSkillGameButtonPress_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSkillGame_Handler::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 64545 ];

	UBioSkillGame_Handler_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.EndSkillGame
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bCompleted                     ( CPF_Parm )
// unsigned long                  bNoSalvage                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGameCanceled                  ( CPF_OptionalParm | CPF_Parm )

void UBioSkillGame_Handler::eventEndSkillGame ( unsigned long bCompleted, unsigned long bNoSalvage, unsigned long bGameCanceled )
{
	static UFunction* pFnEndSkillGame = NULL;

	if ( ! pFnEndSkillGame )
		pFnEndSkillGame = (UFunction*) UObject::GObjObjects()->Data[ 64533 ];

	UBioSkillGame_Handler_eventEndSkillGame_Parms EndSkillGame_Parms;
	EndSkillGame_Parms.bCompleted = bCompleted;
	EndSkillGame_Parms.bNoSalvage = bNoSalvage;
	EndSkillGame_Parms.bGameCanceled = bGameCanceled;

	this->ProcessEvent ( pFnEndSkillGame, &EndSkillGame_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.EndSkillGameEx
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bCompleted                     ( CPF_Parm )

void UBioSkillGame_Handler::EndSkillGameEx ( unsigned long bCompleted )
{
	static UFunction* pFnEndSkillGameEx = NULL;

	if ( ! pFnEndSkillGameEx )
		pFnEndSkillGameEx = (UFunction*) UObject::GObjObjects()->Data[ 64531 ];

	UBioSkillGame_Handler_execEndSkillGameEx_Parms EndSkillGameEx_Parms;
	EndSkillGameEx_Parms.bCompleted = bCompleted;

	pFnEndSkillGameEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndSkillGameEx, &EndSkillGameEx_Parms, NULL );

	pFnEndSkillGameEx->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.StartSkillGameEx
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )
// class UObject*                 oPlaceable                     ( CPF_Parm )
// unsigned char                  nSkillGameType                 ( CPF_Parm )
// int                            nMinSalvage                    ( CPF_Parm )
// int                            nMaxSalvage                    ( CPF_Parm )
// int                            nTotalButtonsToDisplay         ( CPF_Parm )
// float                          fButtonTimeout                 ( CPF_Parm )
// float                          fButtonDelayTime               ( CPF_Parm )
// unsigned char                  eGameDifficulty                ( CPF_Parm )

void UBioSkillGame_Handler::StartSkillGameEx ( class ABioPawn* oUsingPawn, class UObject* oPlaceable, unsigned char nSkillGameType, int nMinSalvage, int nMaxSalvage, int nTotalButtonsToDisplay, float fButtonTimeout, float fButtonDelayTime, unsigned char eGameDifficulty )
{
	static UFunction* pFnStartSkillGameEx = NULL;

	if ( ! pFnStartSkillGameEx )
		pFnStartSkillGameEx = (UFunction*) UObject::GObjObjects()->Data[ 64521 ];

	UBioSkillGame_Handler_execStartSkillGameEx_Parms StartSkillGameEx_Parms;
	StartSkillGameEx_Parms.oUsingPawn = oUsingPawn;
	StartSkillGameEx_Parms.oPlaceable = oPlaceable;
	StartSkillGameEx_Parms.nSkillGameType = nSkillGameType;
	StartSkillGameEx_Parms.nMinSalvage = nMinSalvage;
	StartSkillGameEx_Parms.nMaxSalvage = nMaxSalvage;
	StartSkillGameEx_Parms.nTotalButtonsToDisplay = nTotalButtonsToDisplay;
	StartSkillGameEx_Parms.fButtonTimeout = fButtonTimeout;
	StartSkillGameEx_Parms.fButtonDelayTime = fButtonDelayTime;
	StartSkillGameEx_Parms.eGameDifficulty = eGameDifficulty;

	pFnStartSkillGameEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartSkillGameEx, &StartSkillGameEx_Parms, NULL );

	pFnStartSkillGameEx->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame_Handler.InitializeStringReferences
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            i_GameMessageSuccess           ( CPF_Parm )
// int                            i_GameMessageFailure           ( CPF_Parm )
// int                            i_GameMessageDuringGame        ( CPF_Parm )
// int                            i_preGameButtonAText           ( CPF_Parm )
// int                            i_preGameButtonBText           ( CPF_Parm )
// int                            i_preGameButtonXText           ( CPF_Parm )

void UBioSkillGame_Handler::eventInitializeStringReferences ( int i_GameMessageSuccess, int i_GameMessageFailure, int i_GameMessageDuringGame, int i_preGameButtonAText, int i_preGameButtonBText, int i_preGameButtonXText )
{
	static UFunction* pFnInitializeStringReferences = NULL;

	if ( ! pFnInitializeStringReferences )
		pFnInitializeStringReferences = (UFunction*) UObject::GObjObjects()->Data[ 64508 ];

	UBioSkillGame_Handler_eventInitializeStringReferences_Parms InitializeStringReferences_Parms;
	InitializeStringReferences_Parms.i_GameMessageSuccess = i_GameMessageSuccess;
	InitializeStringReferences_Parms.i_GameMessageFailure = i_GameMessageFailure;
	InitializeStringReferences_Parms.i_GameMessageDuringGame = i_GameMessageDuringGame;
	InitializeStringReferences_Parms.i_preGameButtonAText = i_preGameButtonAText;
	InitializeStringReferences_Parms.i_preGameButtonBText = i_preGameButtonBText;
	InitializeStringReferences_Parms.i_preGameButtonXText = i_preGameButtonXText;

	this->ProcessEvent ( pFnInitializeStringReferences, &InitializeStringReferences_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.InitializeSkillGameData
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )
// class UObject*                 oDependent                     ( CPF_Parm )
// unsigned char                  nSkillGameType                 ( CPF_Parm )
// int                            nMinSalvage                    ( CPF_Parm )
// int                            nMaxSalvage                    ( CPF_Parm )
// int                            nTotalButtonsToDisplay         ( CPF_Parm )
// float                          fButtonTimeout                 ( CPF_Parm )
// float                          fButtonDelayTime               ( CPF_Parm )
// unsigned char                  eGameDifficulty                ( CPF_Parm )

void UBioSkillGame_Handler::eventInitializeSkillGameData ( class ABioPawn* oUsingPawn, class UObject* oDependent, unsigned char nSkillGameType, int nMinSalvage, int nMaxSalvage, int nTotalButtonsToDisplay, float fButtonTimeout, float fButtonDelayTime, unsigned char eGameDifficulty )
{
	static UFunction* pFnInitializeSkillGameData = NULL;

	if ( ! pFnInitializeSkillGameData )
		pFnInitializeSkillGameData = (UFunction*) UObject::GObjObjects()->Data[ 64484 ];

	UBioSkillGame_Handler_eventInitializeSkillGameData_Parms InitializeSkillGameData_Parms;
	InitializeSkillGameData_Parms.oUsingPawn = oUsingPawn;
	InitializeSkillGameData_Parms.oDependent = oDependent;
	InitializeSkillGameData_Parms.nSkillGameType = nSkillGameType;
	InitializeSkillGameData_Parms.nMinSalvage = nMinSalvage;
	InitializeSkillGameData_Parms.nMaxSalvage = nMaxSalvage;
	InitializeSkillGameData_Parms.nTotalButtonsToDisplay = nTotalButtonsToDisplay;
	InitializeSkillGameData_Parms.fButtonTimeout = fButtonTimeout;
	InitializeSkillGameData_Parms.fButtonDelayTime = fButtonDelayTime;
	InitializeSkillGameData_Parms.eGameDifficulty = eGameDifficulty;

	this->ProcessEvent ( pFnInitializeSkillGameData, &InitializeSkillGameData_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.OnCancelCallback
// [0x00120000] 
// Parameters infos:
// int                            n_SalvageUsed                  ( CPF_Parm )

void UBioSkillGame_Handler::OnCancelCallback ( int n_SalvageUsed )
{
	static UFunction* pFnOnCancelCallback = NULL;

	if ( ! pFnOnCancelCallback )
		pFnOnCancelCallback = (UFunction*) UObject::GObjObjects()->Data[ 64482 ];

	UBioSkillGame_Handler_execOnCancelCallback_Parms OnCancelCallback_Parms;
	OnCancelCallback_Parms.n_SalvageUsed = n_SalvageUsed;

	this->ProcessEvent ( pFnOnCancelCallback, &OnCancelCallback_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.OnFailureCallback
// [0x00120000] 
// Parameters infos:
// int                            n_SalvageUsed                  ( CPF_Parm )

void UBioSkillGame_Handler::OnFailureCallback ( int n_SalvageUsed )
{
	static UFunction* pFnOnFailureCallback = NULL;

	if ( ! pFnOnFailureCallback )
		pFnOnFailureCallback = (UFunction*) UObject::GObjObjects()->Data[ 64480 ];

	UBioSkillGame_Handler_execOnFailureCallback_Parms OnFailureCallback_Parms;
	OnFailureCallback_Parms.n_SalvageUsed = n_SalvageUsed;

	this->ProcessEvent ( pFnOnFailureCallback, &OnFailureCallback_Parms, NULL );
};

// Function SFXGame.BioSkillGame_Handler.OnSuccessCallback
// [0x00120000] 
// Parameters infos:
// int                            n_SalvageUsed                  ( CPF_Parm )

void UBioSkillGame_Handler::OnSuccessCallback ( int n_SalvageUsed )
{
	static UFunction* pFnOnSuccessCallback = NULL;

	if ( ! pFnOnSuccessCallback )
		pFnOnSuccessCallback = (UFunction*) UObject::GObjObjects()->Data[ 64478 ];

	UBioSkillGame_Handler_execOnSuccessCallback_Parms OnSuccessCallback_Parms;
	OnSuccessCallback_Parms.n_SalvageUsed = n_SalvageUsed;

	this->ProcessEvent ( pFnOnSuccessCallback, &OnSuccessCallback_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSkillGame_PCHandler::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 64592 ];

	UBioSkillGame_PCHandler_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.HandleClockUpdate
// [0x00020002] 
// Parameters infos:
// class UObject*                 Params                         ( CPF_Parm )

void UBioSkillGame_PCHandler::HandleClockUpdate ( class UObject* Params )
{
	static UFunction* pFnHandleClockUpdate = NULL;

	if ( ! pFnHandleClockUpdate )
		pFnHandleClockUpdate = (UFunction*) UObject::GObjObjects()->Data[ 64590 ];

	UBioSkillGame_PCHandler_execHandleClockUpdate_Parms HandleClockUpdate_Parms;
	HandleClockUpdate_Parms.Params = Params;

	this->ProcessEvent ( pFnHandleClockUpdate, &HandleClockUpdate_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.StartTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSkillGame_PCHandler::eventStartTimer ( )
{
	static UFunction* pFnStartTimer = NULL;

	if ( ! pFnStartTimer )
		pFnStartTimer = (UFunction*) UObject::GObjObjects()->Data[ 64587 ];

	UBioSkillGame_PCHandler_eventStartTimer_Parms StartTimer_Parms;

	this->ProcessEvent ( pFnStartTimer, &StartTimer_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSkillGame_PCHandler::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 64583 ];

	UBioSkillGame_PCHandler_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSkillGame_PCHandler::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 64582 ];

	UBioSkillGame_PCHandler_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSkillGame_PCHandler.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSkillGame_PCHandler::eventUpdate ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 64579 ];

	UBioSkillGame_PCHandler_eventUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HidePhotoMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::HidePhotoMode ( )
{
	static UFunction* pFnHidePhotoMode = NULL;

	if ( ! pFnHidePhotoMode )
		pFnHidePhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 62501 ];

	UMassEffectGuiManager_execHidePhotoMode_Parms HidePhotoMode_Parms;

	this->ProcessEvent ( pFnHidePhotoMode, &HidePhotoMode_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowPhotoMode
// [0x00020002] 
// Parameters infos:
// class UBioSFHandler*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler* UMassEffectGuiManager::ShowPhotoMode ( )
{
	static UFunction* pFnShowPhotoMode = NULL;

	if ( ! pFnShowPhotoMode )
		pFnShowPhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 52349 ];

	UMassEffectGuiManager_execShowPhotoMode_Parms ShowPhotoMode_Parms;

	this->ProcessEvent ( pFnShowPhotoMode, &ShowPhotoMode_Parms, NULL );

	return ShowPhotoMode_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideSubMenuCharacterRecord
// [0x00020002] 
// Parameters infos:

void UMassEffectGuiManager::HideSubMenuCharacterRecord ( )
{
	static UFunction* pFnHideSubMenuCharacterRecord = NULL;

	if ( ! pFnHideSubMenuCharacterRecord )
		pFnHideSubMenuCharacterRecord = (UFunction*) UObject::GObjObjects()->Data[ 62496 ];

	UMassEffectGuiManager_execHideSubMenuCharacterRecord_Parms HideSubMenuCharacterRecord_Parms;

	this->ProcessEvent ( pFnHideSubMenuCharacterRecord, &HideSubMenuCharacterRecord_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowSubMenuCharacterRecord
// [0x00020002] 
// Parameters infos:
// class UBioSFPanel*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFPanel* UMassEffectGuiManager::ShowSubMenuCharacterRecord ( )
{
	static UFunction* pFnShowSubMenuCharacterRecord = NULL;

	if ( ! pFnShowSubMenuCharacterRecord )
		pFnShowSubMenuCharacterRecord = (UFunction*) UObject::GObjObjects()->Data[ 62492 ];

	UMassEffectGuiManager_execShowSubMenuCharacterRecord_Parms ShowSubMenuCharacterRecord_Parms;

	this->ProcessEvent ( pFnShowSubMenuCharacterRecord, &ShowSubMenuCharacterRecord_Parms, NULL );

	return ShowSubMenuCharacterRecord_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.ShowSubMenuInventory
// [0x00024002] 
// Parameters infos:
// class UBioSFPanel*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oChar                          ( CPF_OptionalParm | CPF_Parm )

class UBioSFPanel* UMassEffectGuiManager::ShowSubMenuInventory ( class ABioPawn* oChar )
{
	static UFunction* pFnShowSubMenuInventory = NULL;

	if ( ! pFnShowSubMenuInventory )
		pFnShowSubMenuInventory = (UFunction*) UObject::GObjObjects()->Data[ 62485 ];

	UMassEffectGuiManager_execShowSubMenuInventory_Parms ShowSubMenuInventory_Parms;
	ShowSubMenuInventory_Parms.oChar = oChar;

	this->ProcessEvent ( pFnShowSubMenuInventory, &ShowSubMenuInventory_Parms, NULL );

	return ShowSubMenuInventory_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.ShowSubMenuGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFPanel*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   GuiName                        ( CPF_Parm )

class UBioSFPanel* UMassEffectGuiManager::eventShowSubMenuGui ( struct FName GuiName )
{
	static UFunction* pFnShowSubMenuGui = NULL;

	if ( ! pFnShowSubMenuGui )
		pFnShowSubMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 62481 ];

	UMassEffectGuiManager_eventShowSubMenuGui_Parms ShowSubMenuGui_Parms;
	memcpy ( &ShowSubMenuGui_Parms.GuiName, &GuiName, 0x8 );

	this->ProcessEvent ( pFnShowSubMenuGui, &ShowSubMenuGui_Parms, NULL );

	return ShowSubMenuGui_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.RedisplayHudElements
// [0x00020002] 
// Parameters infos:

void UMassEffectGuiManager::RedisplayHudElements ( )
{
	static UFunction* pFnRedisplayHudElements = NULL;

	if ( ! pFnRedisplayHudElements )
		pFnRedisplayHudElements = (UFunction*) UObject::GObjObjects()->Data[ 62479 ];

	UMassEffectGuiManager_execRedisplayHudElements_Parms RedisplayHudElements_Parms;

	this->ProcessEvent ( pFnRedisplayHudElements, &RedisplayHudElements_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HidePauseMenu
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFPanel*             oCurrentPanel                  ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::eventHidePauseMenu ( class UBioSFPanel* oCurrentPanel )
{
	static UFunction* pFnHidePauseMenu = NULL;

	if ( ! pFnHidePauseMenu )
		pFnHidePauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 62477 ];

	UMassEffectGuiManager_eventHidePauseMenu_Parms HidePauseMenu_Parms;
	HidePauseMenu_Parms.oCurrentPanel = oCurrentPanel;

	this->ProcessEvent ( pFnHidePauseMenu, &HidePauseMenu_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ReturnToPauseMenu
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// class UBioSFPanel*             oCurrentPanel                  ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::ReturnToPauseMenu ( class UBioSFPanel* oCurrentPanel )
{
	static UFunction* pFnReturnToPauseMenu = NULL;

	if ( ! pFnReturnToPauseMenu )
		pFnReturnToPauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 62473 ];

	UMassEffectGuiManager_execReturnToPauseMenu_Parms ReturnToPauseMenu_Parms;
	ReturnToPauseMenu_Parms.oCurrentPanel = oCurrentPanel;

	this->ProcessEvent ( pFnReturnToPauseMenu, &ReturnToPauseMenu_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.UpdateMouseVisibilityState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMassEffectGuiManager::UpdateMouseVisibilityState ( )
{
	static UFunction* pFnUpdateMouseVisibilityState = NULL;

	if ( ! pFnUpdateMouseVisibilityState )
		pFnUpdateMouseVisibilityState = (UFunction*) UObject::GObjObjects()->Data[ 62472 ];

	UMassEffectGuiManager_execUpdateMouseVisibilityState_Parms UpdateMouseVisibilityState_Parms;

	pFnUpdateMouseVisibilityState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateMouseVisibilityState, &UpdateMouseVisibilityState_Parms, NULL );

	pFnUpdateMouseVisibilityState->FunctionFlags |= 0x400;
};

// Function SFXGame.MassEffectGuiManager.SetMouseVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pObject                        ( CPF_Parm )
// unsigned long                  bShow                          ( CPF_Parm )

bool UMassEffectGuiManager::SetMouseVisibility ( class UObject* pObject, unsigned long bShow )
{
	static UFunction* pFnSetMouseVisibility = NULL;

	if ( ! pFnSetMouseVisibility )
		pFnSetMouseVisibility = (UFunction*) UObject::GObjObjects()->Data[ 62468 ];

	UMassEffectGuiManager_execSetMouseVisibility_Parms SetMouseVisibility_Parms;
	SetMouseVisibility_Parms.pObject = pObject;
	SetMouseVisibility_Parms.bShow = bShow;

	pFnSetMouseVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMouseVisibility, &SetMouseVisibility_Parms, NULL );

	pFnSetMouseVisibility->FunctionFlags |= 0x400;

	return SetMouseVisibility_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.GameSessionEnded
// [0x00020002] 
// Parameters infos:

void UMassEffectGuiManager::GameSessionEnded ( )
{
	static UFunction* pFnGameSessionEnded = NULL;

	if ( ! pFnGameSessionEnded )
		pFnGameSessionEnded = (UFunction*) UObject::GObjObjects()->Data[ 62463 ];

	UMassEffectGuiManager_execGameSessionEnded_Parms GameSessionEnded_Parms;

	this->ProcessEvent ( pFnGameSessionEnded, &GameSessionEnded_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.CreateMessageBox
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSFHandler_MessageBox* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler_MessageBox* UMassEffectGuiManager::CreateMessageBox ( )
{
	static UFunction* pFnCreateMessageBox = NULL;

	if ( ! pFnCreateMessageBox )
		pFnCreateMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 56352 ];

	UMassEffectGuiManager_execCreateMessageBox_Parms CreateMessageBox_Parms;

	pFnCreateMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateMessageBox, &CreateMessageBox_Parms, NULL );

	pFnCreateMessageBox->FunctionFlags |= 0x400;

	return CreateMessageBox_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.ConvertTutorialString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            incomingRef                    ( CPF_Parm )

struct FString UMassEffectGuiManager::ConvertTutorialString ( int incomingRef )
{
	static UFunction* pFnConvertTutorialString = NULL;

	if ( ! pFnConvertTutorialString )
		pFnConvertTutorialString = (UFunction*) UObject::GObjObjects()->Data[ 61190 ];

	UMassEffectGuiManager_execConvertTutorialString_Parms ConvertTutorialString_Parms;
	ConvertTutorialString_Parms.incomingRef = incomingRef;

	pFnConvertTutorialString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConvertTutorialString, &ConvertTutorialString_Parms, NULL );

	pFnConvertTutorialString->FunctionFlags |= 0x400;

	return ConvertTutorialString_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.CancelTutorial
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bFadeOut                       ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmTutorial                     ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::CancelTutorial ( unsigned long bFadeOut, struct FName nmTutorial )
{
	static UFunction* pFnCancelTutorial = NULL;

	if ( ! pFnCancelTutorial )
		pFnCancelTutorial = (UFunction*) UObject::GObjObjects()->Data[ 62459 ];

	UMassEffectGuiManager_execCancelTutorial_Parms CancelTutorial_Parms;
	CancelTutorial_Parms.bFadeOut = bFadeOut;
	memcpy ( &CancelTutorial_Parms.nmTutorial, &nmTutorial, 0x8 );

	pFnCancelTutorial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTutorial, &CancelTutorial_Parms, NULL );

	pFnCancelTutorial->FunctionFlags |= 0x400;
};

// Function SFXGame.MassEffectGuiManager.ShowTutorial
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FBioTutorialParams      stParams                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UMassEffectGuiManager::ShowTutorial ( struct FBioTutorialParams* stParams )
{
	static UFunction* pFnShowTutorial = NULL;

	if ( ! pFnShowTutorial )
		pFnShowTutorial = (UFunction*) UObject::GObjObjects()->Data[ 62447 ];

	UMassEffectGuiManager_execShowTutorial_Parms ShowTutorial_Parms;

	pFnShowTutorial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowTutorial, &ShowTutorial_Parms, NULL );

	pFnShowTutorial->FunctionFlags |= 0x400;

	if ( stParams )
		memcpy ( stParams, &ShowTutorial_Parms.stParams, 0x40 );
};

// Function SFXGame.MassEffectGuiManager.GetPauseMenuHandler
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSFHandler_BrowserWheel* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler_BrowserWheel* UMassEffectGuiManager::GetPauseMenuHandler ( )
{
	static UFunction* pFnGetPauseMenuHandler = NULL;

	if ( ! pFnGetPauseMenuHandler )
		pFnGetPauseMenuHandler = (UFunction*) UObject::GObjObjects()->Data[ 62445 ];

	UMassEffectGuiManager_execGetPauseMenuHandler_Parms GetPauseMenuHandler_Parms;

	pFnGetPauseMenuHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPauseMenuHandler, &GetPauseMenuHandler_Parms, NULL );

	pFnGetPauseMenuHandler->FunctionFlags |= 0x400;

	return GetPauseMenuHandler_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.GetBrowserHandler
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSFHandler_BrowserWheel* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler_BrowserWheel* UMassEffectGuiManager::GetBrowserHandler ( )
{
	static UFunction* pFnGetBrowserHandler = NULL;

	if ( ! pFnGetBrowserHandler )
		pFnGetBrowserHandler = (UFunction*) UObject::GObjObjects()->Data[ 62331 ];

	UMassEffectGuiManager_execGetBrowserHandler_Parms GetBrowserHandler_Parms;

	pFnGetBrowserHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBrowserHandler, &GetBrowserHandler_Parms, NULL );

	pFnGetBrowserHandler->FunctionFlags |= 0x400;

	return GetBrowserHandler_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.GetDUIHandler
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSFHandler_DesignerUI* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler_DesignerUI* UMassEffectGuiManager::GetDUIHandler ( )
{
	static UFunction* pFnGetDUIHandler = NULL;

	if ( ! pFnGetDUIHandler )
		pFnGetDUIHandler = (UFunction*) UObject::GObjObjects()->Data[ 59503 ];

	UMassEffectGuiManager_execGetDUIHandler_Parms GetDUIHandler_Parms;

	pFnGetDUIHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDUIHandler, &GetDUIHandler_Parms, NULL );

	pFnGetDUIHandler->FunctionFlags |= 0x400;

	return GetDUIHandler_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.SetWheelState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nPage                          ( CPF_Parm )
// unsigned char                  nState                         ( CPF_Parm )

void UMassEffectGuiManager::SetWheelState ( unsigned char nPage, unsigned char nState )
{
	static UFunction* pFnSetWheelState = NULL;

	if ( ! pFnSetWheelState )
		pFnSetWheelState = (UFunction*) UObject::GObjObjects()->Data[ 62441 ];

	UMassEffectGuiManager_execSetWheelState_Parms SetWheelState_Parms;
	SetWheelState_Parms.nPage = nPage;
	SetWheelState_Parms.nState = nState;

	pFnSetWheelState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWheelState, &SetWheelState_Parms, NULL );

	pFnSetWheelState->FunctionFlags |= 0x400;
};

// Function SFXGame.MassEffectGuiManager.RemoveBlackScreen
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::RemoveBlackScreen ( )
{
	static UFunction* pFnRemoveBlackScreen = NULL;

	if ( ! pFnRemoveBlackScreen )
		pFnRemoveBlackScreen = (UFunction*) UObject::GObjObjects()->Data[ 61078 ];

	UMassEffectGuiManager_execRemoveBlackScreen_Parms RemoveBlackScreen_Parms;

	this->ProcessEvent ( pFnRemoveBlackScreen, &RemoveBlackScreen_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.OnPlayerDeath
// [0x00020002] 
// Parameters infos:

void UMassEffectGuiManager::OnPlayerDeath ( )
{
	static UFunction* pFnOnPlayerDeath = NULL;

	if ( ! pFnOnPlayerDeath )
		pFnOnPlayerDeath = (UFunction*) UObject::GObjObjects()->Data[ 62439 ];

	UMassEffectGuiManager_execOnPlayerDeath_Parms OnPlayerDeath_Parms;

	this->ProcessEvent ( pFnOnPlayerDeath, &OnPlayerDeath_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideDeviceSelection
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideDeviceSelection ( )
{
	static UFunction* pFnHideDeviceSelection = NULL;

	if ( ! pFnHideDeviceSelection )
		pFnHideDeviceSelection = (UFunction*) UObject::GObjObjects()->Data[ 62438 ];

	UMassEffectGuiManager_eventHideDeviceSelection_Parms HideDeviceSelection_Parms;

	this->ProcessEvent ( pFnHideDeviceSelection, &HideDeviceSelection_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowDeviceSelection
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFHandler_DeviceSelection* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   i_nmCompletionDelegateFunction ( CPF_Parm )
// struct FName                   i_nmCancelDelegateFunction     ( CPF_Parm )
// int                            i_nSize                        ( CPF_Parm )
// class UObject*                 i_Target                       ( CPF_Parm )

class UBioSFHandler_DeviceSelection* UMassEffectGuiManager::eventShowDeviceSelection ( struct FName i_nmCompletionDelegateFunction, struct FName i_nmCancelDelegateFunction, int i_nSize, class UObject* i_Target )
{
	static UFunction* pFnShowDeviceSelection = NULL;

	if ( ! pFnShowDeviceSelection )
		pFnShowDeviceSelection = (UFunction*) UObject::GObjObjects()->Data[ 62430 ];

	UMassEffectGuiManager_eventShowDeviceSelection_Parms ShowDeviceSelection_Parms;
	memcpy ( &ShowDeviceSelection_Parms.i_nmCompletionDelegateFunction, &i_nmCompletionDelegateFunction, 0x8 );
	memcpy ( &ShowDeviceSelection_Parms.i_nmCancelDelegateFunction, &i_nmCancelDelegateFunction, 0x8 );
	ShowDeviceSelection_Parms.i_nSize = i_nSize;
	ShowDeviceSelection_Parms.i_Target = i_Target;

	this->ProcessEvent ( pFnShowDeviceSelection, &ShowDeviceSelection_Parms, NULL );

	return ShowDeviceSelection_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideSkillGame
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideSkillGame ( )
{
	static UFunction* pFnHideSkillGame = NULL;

	if ( ! pFnHideSkillGame )
		pFnHideSkillGame = (UFunction*) UObject::GObjObjects()->Data[ 62422 ];

	UMassEffectGuiManager_eventHideSkillGame_Parms HideSkillGame_Parms;

	this->ProcessEvent ( pFnHideSkillGame, &HideSkillGame_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowSkillGame
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSkillGame_Handler*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSkillGame_Handler* UMassEffectGuiManager::eventShowSkillGame ( )
{
	static UFunction* pFnShowSkillGame = NULL;

	if ( ! pFnShowSkillGame )
		pFnShowSkillGame = (UFunction*) UObject::GObjObjects()->Data[ 62418 ];

	UMassEffectGuiManager_eventShowSkillGame_Parms ShowSkillGame_Parms;

	this->ProcessEvent ( pFnShowSkillGame, &ShowSkillGame_Parms, NULL );

	return ShowSkillGame_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.GetBioPlayerController
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPlayerController* UMassEffectGuiManager::GetBioPlayerController ( )
{
	static UFunction* pFnGetBioPlayerController = NULL;

	if ( ! pFnGetBioPlayerController )
		pFnGetBioPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 62416 ];

	UMassEffectGuiManager_execGetBioPlayerController_Parms GetBioPlayerController_Parms;

	this->ProcessEvent ( pFnGetBioPlayerController, &GetBioPlayerController_Parms, NULL );

	return GetBioPlayerController_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.GetPlayerController
// [0x00020002] 
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APlayerController* UMassEffectGuiManager::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 62413 ];

	UMassEffectGuiManager_execGetPlayerController_Parms GetPlayerController_Parms;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );

	return GetPlayerController_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.BlackScreenFadeFinished
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMassEffectGuiManager::BlackScreenFadeFinished ( )
{
	static UFunction* pFnBlackScreenFadeFinished = NULL;

	if ( ! pFnBlackScreenFadeFinished )
		pFnBlackScreenFadeFinished = (UFunction*) UObject::GObjObjects()->Data[ 59285 ];

	UMassEffectGuiManager_execBlackScreenFadeFinished_Parms BlackScreenFadeFinished_Parms;

	this->ProcessEvent ( pFnBlackScreenFadeFinished, &BlackScreenFadeFinished_Parms, NULL );

	return BlackScreenFadeFinished_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideBlackScreen
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bWithFade                      ( CPF_Parm )

void UMassEffectGuiManager::HideBlackScreen ( unsigned long bWithFade )
{
	static UFunction* pFnHideBlackScreen = NULL;

	if ( ! pFnHideBlackScreen )
		pFnHideBlackScreen = (UFunction*) UObject::GObjObjects()->Data[ 59279 ];

	UMassEffectGuiManager_execHideBlackScreen_Parms HideBlackScreen_Parms;
	HideBlackScreen_Parms.bWithFade = bWithFade;

	this->ProcessEvent ( pFnHideBlackScreen, &HideBlackScreen_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowBlackScreen
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bWithFade                      ( CPF_Parm )

void UMassEffectGuiManager::ShowBlackScreen ( unsigned long bWithFade )
{
	static UFunction* pFnShowBlackScreen = NULL;

	if ( ! pFnShowBlackScreen )
		pFnShowBlackScreen = (UFunction*) UObject::GObjObjects()->Data[ 59278 ];

	UMassEffectGuiManager_execShowBlackScreen_Parms ShowBlackScreen_Parms;
	ShowBlackScreen_Parms.bWithFade = bWithFade;

	this->ProcessEvent ( pFnShowBlackScreen, &ShowBlackScreen_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideGameOverGui
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::HideGameOverGui ( )
{
	static UFunction* pFnHideGameOverGui = NULL;

	if ( ! pFnHideGameOverGui )
		pFnHideGameOverGui = (UFunction*) UObject::GObjObjects()->Data[ 61610 ];

	UMassEffectGuiManager_execHideGameOverGui_Parms HideGameOverGui_Parms;

	this->ProcessEvent ( pFnHideGameOverGui, &HideGameOverGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowGameOverGui
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// int                            srGameOverString               ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::ShowGameOverGui ( int srGameOverString )
{
	static UFunction* pFnShowGameOverGui = NULL;

	if ( ! pFnShowGameOverGui )
		pFnShowGameOverGui = (UFunction*) UObject::GObjObjects()->Data[ 52202 ];

	UMassEffectGuiManager_execShowGameOverGui_Parms ShowGameOverGui_Parms;
	ShowGameOverGui_Parms.srGameOverString = srGameOverString;

	this->ProcessEvent ( pFnShowGameOverGui, &ShowGameOverGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.PlayCredits
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::PlayCredits ( )
{
	static UFunction* pFnPlayCredits = NULL;

	if ( ! pFnPlayCredits )
		pFnPlayCredits = (UFunction*) UObject::GObjObjects()->Data[ 60392 ];

	UMassEffectGuiManager_execPlayCredits_Parms PlayCredits_Parms;

	this->ProcessEvent ( pFnPlayCredits, &PlayCredits_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HidePartySelect
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::HidePartySelect ( )
{
	static UFunction* pFnHidePartySelect = NULL;

	if ( ! pFnHidePartySelect )
		pFnHidePartySelect = (UFunction*) UObject::GObjObjects()->Data[ 62401 ];

	UMassEffectGuiManager_execHidePartySelect_Parms HidePartySelect_Parms;

	this->ProcessEvent ( pFnHidePartySelect, &HidePartySelect_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowPartySelect
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FName                   nmForcedHenchman               ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::ShowPartySelect ( struct FName nmForcedHenchman )
{
	static UFunction* pFnShowPartySelect = NULL;

	if ( ! pFnShowPartySelect )
		pFnShowPartySelect = (UFunction*) UObject::GObjObjects()->Data[ 60527 ];

	UMassEffectGuiManager_execShowPartySelect_Parms ShowPartySelect_Parms;
	memcpy ( &ShowPartySelect_Parms.nmForcedHenchman, &nmForcedHenchman, 0x8 );

	this->ProcessEvent ( pFnShowPartySelect, &ShowPartySelect_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.NestedCategory
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eLeftCat                       ( CPF_Parm )
// unsigned char                  eRightCat                      ( CPF_Parm )

bool UMassEffectGuiManager::NestedCategory ( unsigned char eLeftCat, unsigned char eRightCat )
{
	static UFunction* pFnNestedCategory = NULL;

	if ( ! pFnNestedCategory )
		pFnNestedCategory = (UFunction*) UObject::GObjObjects()->Data[ 62390 ];

	UMassEffectGuiManager_execNestedCategory_Parms NestedCategory_Parms;
	NestedCategory_Parms.eLeftCat = eLeftCat;
	NestedCategory_Parms.eRightCat = eRightCat;

	this->ProcessEvent ( pFnNestedCategory, &NestedCategory_Parms, NULL );

	return NestedCategory_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.FindCompatibleCategory
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<unsigned char>   lstSlotsOrdered                ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  eCategory                      ( CPF_Parm )

int UMassEffectGuiManager::FindCompatibleCategory ( struct TArray<unsigned char> lstSlotsOrdered, unsigned char eCategory )
{
	static UFunction* pFnFindCompatibleCategory = NULL;

	if ( ! pFnFindCompatibleCategory )
		pFnFindCompatibleCategory = (UFunction*) UObject::GObjObjects()->Data[ 62384 ];

	UMassEffectGuiManager_execFindCompatibleCategory_Parms FindCompatibleCategory_Parms;
	memcpy ( &FindCompatibleCategory_Parms.lstSlotsOrdered, &lstSlotsOrdered, 0x10 );
	FindCompatibleCategory_Parms.eCategory = eCategory;

	this->ProcessEvent ( pFnFindCompatibleCategory, &FindCompatibleCategory_Parms, NULL );

	return FindCompatibleCategory_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.SetSlotOrder
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eHandlerID                     ( CPF_Parm )
// class UBioInventoryGuiInterface* oInvLayer                      ( CPF_Parm )
// unsigned char                  ePreferredDefault              ( CPF_OptionalParm | CPF_Parm )

bool UMassEffectGuiManager::SetSlotOrder ( unsigned char eHandlerID, class UBioInventoryGuiInterface* oInvLayer, unsigned char ePreferredDefault )
{
	static UFunction* pFnSetSlotOrder = NULL;

	if ( ! pFnSetSlotOrder )
		pFnSetSlotOrder = (UFunction*) UObject::GObjObjects()->Data[ 61126 ];

	UMassEffectGuiManager_execSetSlotOrder_Parms SetSlotOrder_Parms;
	SetSlotOrder_Parms.eHandlerID = eHandlerID;
	SetSlotOrder_Parms.oInvLayer = oInvLayer;
	SetSlotOrder_Parms.ePreferredDefault = ePreferredDefault;

	this->ProcessEvent ( pFnSetSlotOrder, &SetSlotOrder_Parms, NULL );

	return SetSlotOrder_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideSpecializationGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideSpecializationGui ( )
{
	static UFunction* pFnHideSpecializationGui = NULL;

	if ( ! pFnHideSpecializationGui )
		pFnHideSpecializationGui = (UFunction*) UObject::GObjObjects()->Data[ 62377 ];

	UMassEffectGuiManager_eventHideSpecializationGui_Parms HideSpecializationGui_Parms;

	this->ProcessEvent ( pFnHideSpecializationGui, &HideSpecializationGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowSpecializationGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventShowSpecializationGui ( )
{
	static UFunction* pFnShowSpecializationGui = NULL;

	if ( ! pFnShowSpecializationGui )
		pFnShowSpecializationGui = (UFunction*) UObject::GObjObjects()->Data[ 51663 ];

	UMassEffectGuiManager_eventShowSpecializationGui_Parms ShowSpecializationGui_Parms;

	this->ProcessEvent ( pFnShowSpecializationGui, &ShowSpecializationGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideShopGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideShopGui ( )
{
	static UFunction* pFnHideShopGui = NULL;

	if ( ! pFnHideShopGui )
		pFnHideShopGui = (UFunction*) UObject::GObjObjects()->Data[ 62368 ];

	UMassEffectGuiManager_eventHideShopGui_Parms HideShopGui_Parms;

	this->ProcessEvent ( pFnHideShopGui, &HideShopGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowShopGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioShop*                shop                           ( CPF_Parm )

bool UMassEffectGuiManager::eventShowShopGui ( class ABioShop* shop )
{
	static UFunction* pFnShowShopGui = NULL;

	if ( ! pFnShowShopGui )
		pFnShowShopGui = (UFunction*) UObject::GObjObjects()->Data[ 62359 ];

	UMassEffectGuiManager_eventShowShopGui_Parms ShowShopGui_Parms;
	ShowShopGui_Parms.shop = shop;

	this->ProcessEvent ( pFnShowShopGui, &ShowShopGui_Parms, NULL );

	return ShowShopGui_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideGuiByTag
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   sTag                           ( CPF_Parm )

void UMassEffectGuiManager::eventHideGuiByTag ( struct FName sTag )
{
	static UFunction* pFnHideGuiByTag = NULL;

	if ( ! pFnHideGuiByTag )
		pFnHideGuiByTag = (UFunction*) UObject::GObjObjects()->Data[ 62356 ];

	UMassEffectGuiManager_eventHideGuiByTag_Parms HideGuiByTag_Parms;
	memcpy ( &HideGuiByTag_Parms.sTag, &sTag, 0x8 );

	this->ProcessEvent ( pFnHideGuiByTag, &HideGuiByTag_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideLootGui
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::HideLootGui ( )
{
	static UFunction* pFnHideLootGui = NULL;

	if ( ! pFnHideLootGui )
		pFnHideLootGui = (UFunction*) UObject::GObjObjects()->Data[ 62201 ];

	UMassEffectGuiManager_execHideLootGui_Parms HideLootGui_Parms;

	this->ProcessEvent ( pFnHideLootGui, &HideLootGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowLootGui
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioInventory*           oLootInv                       ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::eventShowLootGui ( class UBioInventory* oLootInv )
{
	static UFunction* pFnShowLootGui = NULL;

	if ( ! pFnShowLootGui )
		pFnShowLootGui = (UFunction*) UObject::GObjObjects()->Data[ 60113 ];

	UMassEffectGuiManager_eventShowLootGui_Parms ShowLootGui_Parms;
	ShowLootGui_Parms.oLootInv = oLootInv;

	this->ProcessEvent ( pFnShowLootGui, &ShowLootGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowXModsGui
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    oController                    ( CPF_Parm )

void UMassEffectGuiManager::ShowXModsGui ( class ABioPlayerController* oController )
{
	static UFunction* pFnShowXModsGui = NULL;

	if ( ! pFnShowXModsGui )
		pFnShowXModsGui = (UFunction*) UObject::GObjObjects()->Data[ 62349 ];

	UMassEffectGuiManager_execShowXModsGui_Parms ShowXModsGui_Parms;
	ShowXModsGui_Parms.oController = oController;

	this->ProcessEvent ( pFnShowXModsGui, &ShowXModsGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideBrowserWheel
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFPanel*             oCurrentPanel                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUnpauseSound                  ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::eventHideBrowserWheel ( class UBioSFPanel* oCurrentPanel, unsigned long bUnpauseSound )
{
	static UFunction* pFnHideBrowserWheel = NULL;

	if ( ! pFnHideBrowserWheel )
		pFnHideBrowserWheel = (UFunction*) UObject::GObjObjects()->Data[ 61142 ];

	UMassEffectGuiManager_eventHideBrowserWheel_Parms HideBrowserWheel_Parms;
	HideBrowserWheel_Parms.oCurrentPanel = oCurrentPanel;
	HideBrowserWheel_Parms.bUnpauseSound = bUnpauseSound;

	this->ProcessEvent ( pFnHideBrowserWheel, &HideBrowserWheel_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ReturnToBrowserWheel
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFPanel*             oCurrentPanel                  ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::eventReturnToBrowserWheel ( class UBioSFPanel* oCurrentPanel )
{
	static UFunction* pFnReturnToBrowserWheel = NULL;

	if ( ! pFnReturnToBrowserWheel )
		pFnReturnToBrowserWheel = (UFunction*) UObject::GObjObjects()->Data[ 62341 ];

	UMassEffectGuiManager_eventReturnToBrowserWheel_Parms ReturnToBrowserWheel_Parms;
	ReturnToBrowserWheel_Parms.oCurrentPanel = oCurrentPanel;

	this->ProcessEvent ( pFnReturnToBrowserWheel, &ReturnToBrowserWheel_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowBrowserWheel
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned long                  bPauseSound                    ( CPF_OptionalParm | CPF_Parm )

void UMassEffectGuiManager::eventShowBrowserWheel ( unsigned long bPauseSound )
{
	static UFunction* pFnShowBrowserWheel = NULL;

	if ( ! pFnShowBrowserWheel )
		pFnShowBrowserWheel = (UFunction*) UObject::GObjObjects()->Data[ 62337 ];

	UMassEffectGuiManager_eventShowBrowserWheel_Parms ShowBrowserWheel_Parms;
	ShowBrowserWheel_Parms.bPauseSound = bPauseSound;

	this->ProcessEvent ( pFnShowBrowserWheel, &ShowBrowserWheel_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.CancelLeaderActive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMassEffectGuiManager::CancelLeaderActive ( )
{
	static UFunction* pFnCancelLeaderActive = NULL;

	if ( ! pFnCancelLeaderActive )
		pFnCancelLeaderActive = (UFunction*) UObject::GObjObjects()->Data[ 62336 ];

	UMassEffectGuiManager_execCancelLeaderActive_Parms CancelLeaderActive_Parms;

	pFnCancelLeaderActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelLeaderActive, &CancelLeaderActive_Parms, NULL );

	pFnCancelLeaderActive->FunctionFlags |= 0x400;
};

// Function SFXGame.MassEffectGuiManager.HideInventoryScreen
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::HideInventoryScreen ( )
{
	static UFunction* pFnHideInventoryScreen = NULL;

	if ( ! pFnHideInventoryScreen )
		pFnHideInventoryScreen = (UFunction*) UObject::GObjObjects()->Data[ 62082 ];

	UMassEffectGuiManager_execHideInventoryScreen_Parms HideInventoryScreen_Parms;

	this->ProcessEvent ( pFnHideInventoryScreen, &HideInventoryScreen_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowInventoryScreen
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class ABioPawn*                oChar                          ( CPF_Parm )

void UMassEffectGuiManager::ShowInventoryScreen ( class ABioPawn* oChar )
{
	static UFunction* pFnShowInventoryScreen = NULL;

	if ( ! pFnShowInventoryScreen )
		pFnShowInventoryScreen = (UFunction*) UObject::GObjObjects()->Data[ 60414 ];

	UMassEffectGuiManager_execShowInventoryScreen_Parms ShowInventoryScreen_Parms;
	ShowInventoryScreen_Parms.oChar = oChar;

	this->ProcessEvent ( pFnShowInventoryScreen, &ShowInventoryScreen_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.HideHUD
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideHUD ( )
{
	static UFunction* pFnHideHUD = NULL;

	if ( ! pFnHideHUD )
		pFnHideHUD = (UFunction*) UObject::GObjObjects()->Data[ 54482 ];

	UMassEffectGuiManager_eventHideHUD_Parms HideHUD_Parms;

	this->ProcessEvent ( pFnHideHUD, &HideHUD_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowHUD
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventShowHUD ( )
{
	static UFunction* pFnShowHUD = NULL;

	if ( ! pFnShowHUD )
		pFnShowHUD = (UFunction*) UObject::GObjObjects()->Data[ 54481 ];

	UMassEffectGuiManager_eventShowHUD_Parms ShowHUD_Parms;

	this->ProcessEvent ( pFnShowHUD, &ShowHUD_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ReleaseHudCache
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::ReleaseHudCache ( )
{
	static UFunction* pFnReleaseHudCache = NULL;

	if ( ! pFnReleaseHudCache )
		pFnReleaseHudCache = (UFunction*) UObject::GObjObjects()->Data[ 51924 ];

	UMassEffectGuiManager_execReleaseHudCache_Parms ReleaseHudCache_Parms;

	this->ProcessEvent ( pFnReleaseHudCache, &ReleaseHudCache_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.RecreateHudPanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UMassEffectGuiManager::RecreateHudPanel ( )
{
	static UFunction* pFnRecreateHudPanel = NULL;

	if ( ! pFnRecreateHudPanel )
		pFnRecreateHudPanel = (UFunction*) UObject::GObjObjects()->Data[ 62312 ];

	UMassEffectGuiManager_execRecreateHudPanel_Parms RecreateHudPanel_Parms;

	this->ProcessEvent ( pFnRecreateHudPanel, &RecreateHudPanel_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.IsInConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMassEffectGuiManager::IsInConversation ( )
{
	static UFunction* pFnIsInConversation = NULL;

	if ( ! pFnIsInConversation )
		pFnIsInConversation = (UFunction*) UObject::GObjObjects()->Data[ 45394 ];

	UMassEffectGuiManager_execIsInConversation_Parms IsInConversation_Parms;

	pFnIsInConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInConversation, &IsInConversation_Parms, NULL );

	pFnIsInConversation->FunctionFlags |= 0x400;

	return IsInConversation_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.HideConversationGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UMassEffectGuiManager::eventHideConversationGui ( )
{
	static UFunction* pFnHideConversationGui = NULL;

	if ( ! pFnHideConversationGui )
		pFnHideConversationGui = (UFunction*) UObject::GObjObjects()->Data[ 62310 ];

	UMassEffectGuiManager_eventHideConversationGui_Parms HideConversationGui_Parms;

	this->ProcessEvent ( pFnHideConversationGui, &HideConversationGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowConversationGui
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned long                  IsAmbient                      ( CPF_Parm )

void UMassEffectGuiManager::eventShowConversationGui ( unsigned long IsAmbient )
{
	static UFunction* pFnShowConversationGui = NULL;

	if ( ! pFnShowConversationGui )
		pFnShowConversationGui = (UFunction*) UObject::GObjObjects()->Data[ 62304 ];

	UMassEffectGuiManager_eventShowConversationGui_Parms ShowConversationGui_Parms;
	ShowConversationGui_Parms.IsAmbient = IsAmbient;

	this->ProcessEvent ( pFnShowConversationGui, &ShowConversationGui_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.ShowMainMenu
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioSFHandler_MainMenu*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSFHandler_MainMenu* UMassEffectGuiManager::eventShowMainMenu ( )
{
	static UFunction* pFnShowMainMenu = NULL;

	if ( ! pFnShowMainMenu )
		pFnShowMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 60441 ];

	UMassEffectGuiManager_eventShowMainMenu_Parms ShowMainMenu_Parms;

	this->ProcessEvent ( pFnShowMainMenu, &ShowMainMenu_Parms, NULL );

	return ShowMainMenu_Parms.ReturnValue;
};

// Function SFXGame.MassEffectGuiManager.SetupBackground
// [0x00020002] 
// Parameters infos:

void UMassEffectGuiManager::SetupBackground ( )
{
	static UFunction* pFnSetupBackground = NULL;

	if ( ! pFnSetupBackground )
		pFnSetupBackground = (UFunction*) UObject::GObjObjects()->Data[ 62305 ];

	UMassEffectGuiManager_execSetupBackground_Parms SetupBackground_Parms;

	this->ProcessEvent ( pFnSetupBackground, &SetupBackground_Parms, NULL );
};

// Function SFXGame.MassEffectGuiManager.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UMassEffectGuiManager::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62301 ];

	UMassEffectGuiManager_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.ToggleOptions
// [0x00020002] 
// Parameters infos:

void USFXSFHandler_PhotoMode::ToggleOptions ( )
{
	static UFunction* pFnToggleOptions = NULL;

	if ( ! pFnToggleOptions )
		pFnToggleOptions = (UFunction*) UObject::GObjObjects()->Data[ 67880 ];

	USFXSFHandler_PhotoMode_execToggleOptions_Parms ToggleOptions_Parms;

	this->ProcessEvent ( pFnToggleOptions, &ToggleOptions_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.HandleOptionChanged
// [0x00020002] 
// Parameters infos:
// unsigned char                  OptionId                       ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void USFXSFHandler_PhotoMode::HandleOptionChanged ( unsigned char OptionId, float Value )
{
	static UFunction* pFnHandleOptionChanged = NULL;

	if ( ! pFnHandleOptionChanged )
		pFnHandleOptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 67876 ];

	USFXSFHandler_PhotoMode_execHandleOptionChanged_Parms HandleOptionChanged_Parms;
	HandleOptionChanged_Parms.OptionId = OptionId;
	HandleOptionChanged_Parms.Value = Value;

	this->ProcessEvent ( pFnHandleOptionChanged, &HandleOptionChanged_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.SetOption
// [0x00020002] 
// Parameters infos:
// unsigned char                  OptionId                       ( CPF_Parm )
// float                          ValueIdx                       ( CPF_Parm )

void USFXSFHandler_PhotoMode::SetOption ( unsigned char OptionId, float ValueIdx )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = (UFunction*) UObject::GObjObjects()->Data[ 67871 ];

	USFXSFHandler_PhotoMode_execSetOption_Parms SetOption_Parms;
	SetOption_Parms.OptionId = OptionId;
	SetOption_Parms.ValueIdx = ValueIdx;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.GetDefaultFloatOption
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  OptionId                       ( CPF_Parm )

float USFXSFHandler_PhotoMode::GetDefaultFloatOption ( unsigned char OptionId )
{
	static UFunction* pFnGetDefaultFloatOption = NULL;

	if ( ! pFnGetDefaultFloatOption )
		pFnGetDefaultFloatOption = (UFunction*) UObject::GObjObjects()->Data[ 67302 ];

	USFXSFHandler_PhotoMode_execGetDefaultFloatOption_Parms GetDefaultFloatOption_Parms;
	GetDefaultFloatOption_Parms.OptionId = OptionId;

	this->ProcessEvent ( pFnGetDefaultFloatOption, &GetDefaultFloatOption_Parms, NULL );

	return GetDefaultFloatOption_Parms.ReturnValue;
};

// Function SFXGame.SFXSFHandler_PhotoMode.GetDefaultBoolOption
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  OptionId                       ( CPF_Parm )

bool USFXSFHandler_PhotoMode::GetDefaultBoolOption ( unsigned char OptionId )
{
	static UFunction* pFnGetDefaultBoolOption = NULL;

	if ( ! pFnGetDefaultBoolOption )
		pFnGetDefaultBoolOption = (UFunction*) UObject::GObjObjects()->Data[ 67304 ];

	USFXSFHandler_PhotoMode_execGetDefaultBoolOption_Parms GetDefaultBoolOption_Parms;
	GetDefaultBoolOption_Parms.OptionId = OptionId;

	this->ProcessEvent ( pFnGetDefaultBoolOption, &GetDefaultBoolOption_Parms, NULL );

	return GetDefaultBoolOption_Parms.ReturnValue;
};

// Function SFXGame.SFXSFHandler_PhotoMode.InitializePhotoMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXSFHandler_PhotoMode::InitializePhotoMode ( )
{
	static UFunction* pFnInitializePhotoMode = NULL;

	if ( ! pFnInitializePhotoMode )
		pFnInitializePhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 67864 ];

	USFXSFHandler_PhotoMode_execInitializePhotoMode_Parms InitializePhotoMode_Parms;

	pFnInitializePhotoMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializePhotoMode, &InitializePhotoMode_Parms, NULL );

	pFnInitializePhotoMode->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXSFHandler_PhotoMode.MovieLoaded
// [0x00020002] 
// Parameters infos:

void USFXSFHandler_PhotoMode::MovieLoaded ( )
{
	static UFunction* pFnMovieLoaded = NULL;

	if ( ! pFnMovieLoaded )
		pFnMovieLoaded = (UFunction*) UObject::GObjObjects()->Data[ 67863 ];

	USFXSFHandler_PhotoMode_execMovieLoaded_Parms MovieLoaded_Parms;

	this->ProcessEvent ( pFnMovieLoaded, &MovieLoaded_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void USFXSFHandler_PhotoMode::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 67862 ];

	USFXSFHandler_PhotoMode_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void USFXSFHandler_PhotoMode::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 67859 ];

	USFXSFHandler_PhotoMode_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.HandleButtonRefresh
// [0x00020002] 
// Parameters infos:
// unsigned long                  bUsingGamepad                  ( CPF_Parm )

void USFXSFHandler_PhotoMode::HandleButtonRefresh ( unsigned long bUsingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 67853 ];

	USFXSFHandler_PhotoMode_execHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.bUsingGamepad = bUsingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.SFXSFHandler_PhotoMode.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void USFXSFHandler_PhotoMode::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 67849 ];

	USFXSFHandler_PhotoMode_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioCameraZoom.Initialize
// [0x00020002] 
// Parameters infos:
// float                          Distance                       ( CPF_Parm )

void UBioCameraZoom::Initialize ( float Distance )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 50447 ];

	UBioCameraZoom_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.Distance = Distance;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioCameraZoom.ModifyPostProcessSettings
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCameraZoom::ModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 50445 ];

	UBioCameraZoom_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	pFnModifyPostProcessSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	pFnModifyPostProcessSettings->FunctionFlags |= 0x400;

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.BioCameraZoom.Tick
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioCameraZoom::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50179 ];

	UBioCameraZoom_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCameraZoom.Focus
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          Distance                       ( CPF_Parm )

void UBioCameraZoom::Focus ( float Distance )
{
	static UFunction* pFnFocus = NULL;

	if ( ! pFnFocus )
		pFnFocus = (UFunction*) UObject::GObjObjects()->Data[ 50178 ];

	UBioCameraZoom_execFocus_Parms Focus_Parms;
	Focus_Parms.Distance = Distance;

	pFnFocus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFocus, &Focus_Parms, NULL );

	pFnFocus->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXCameraMode.ProcessViewRotation
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )

void USFXCameraMode::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 50237 ];

	USFXCameraMode_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( OutViewRotation )
		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );

	if ( OutDeltaRot )
		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
};

// Function SFXGame.SFXCameraMode.GetActorCameraHook
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 OutLocation                    ( CPF_Parm | CPF_OutParm )

bool USFXCameraMode::GetActorCameraHook ( struct FVector* OutLocation )
{
	static UFunction* pFnGetActorCameraHook = NULL;

	if ( ! pFnGetActorCameraHook )
		pFnGetActorCameraHook = (UFunction*) UObject::GObjObjects()->Data[ 50234 ];

	USFXCameraMode_execGetActorCameraHook_Parms GetActorCameraHook_Parms;

	pFnGetActorCameraHook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorCameraHook, &GetActorCameraHook_Parms, NULL );

	pFnGetActorCameraHook->FunctionFlags |= 0x400;

	if ( OutLocation )
		memcpy ( OutLocation, &GetActorCameraHook_Parms.OutLocation, 0xC );

	return GetActorCameraHook_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.CheckLoop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          M                              ( CPF_Parm )
// int                            RecurseLevel                   ( CPF_Parm )

bool USFXCameraMode::CheckLoop ( class USFXCameraMode* M, int RecurseLevel )
{
	static UFunction* pFnCheckLoop = NULL;

	if ( ! pFnCheckLoop )
		pFnCheckLoop = (UFunction*) UObject::GObjObjects()->Data[ 50230 ];

	USFXCameraMode_execCheckLoop_Parms CheckLoop_Parms;
	CheckLoop_Parms.M = M;
	CheckLoop_Parms.RecurseLevel = RecurseLevel;

	this->ProcessEvent ( pFnCheckLoop, &CheckLoop_Parms, NULL );

	return CheckLoop_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.DrawHUD
// [0x00020002] 
// Parameters infos:
// class UBioCheatManager*        M                              ( CPF_Parm )

void USFXCameraMode::DrawHUD ( class UBioCheatManager* M )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 50221 ];

	USFXCameraMode_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.M = M;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.GetCurrentShake
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator USFXCameraMode::GetCurrentShake ( )
{
	static UFunction* pFnGetCurrentShake = NULL;

	if ( ! pFnGetCurrentShake )
		pFnGetCurrentShake = (UFunction*) UObject::GObjObjects()->Data[ 50215 ];

	USFXCameraMode_execGetCurrentShake_Parms GetCurrentShake_Parms;

	this->ProcessEvent ( pFnGetCurrentShake, &GetCurrentShake_Parms, NULL );

	return GetCurrentShake_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.IsCollisionEnabled
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXCameraMode::IsCollisionEnabled ( )
{
	static UFunction* pFnIsCollisionEnabled = NULL;

	if ( ! pFnIsCollisionEnabled )
		pFnIsCollisionEnabled = (UFunction*) UObject::GObjObjects()->Data[ 50212 ];

	USFXCameraMode_execIsCollisionEnabled_Parms IsCollisionEnabled_Parms;

	this->ProcessEvent ( pFnIsCollisionEnabled, &IsCollisionEnabled_Parms, NULL );

	return IsCollisionEnabled_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 50207 ];

	USFXCameraMode_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.MakeInactive
// [0x00020000] 
// Parameters infos:

void USFXCameraMode::MakeInactive ( )
{
	static UFunction* pFnMakeInactive = NULL;

	if ( ! pFnMakeInactive )
		pFnMakeInactive = (UFunction*) UObject::GObjObjects()->Data[ 50206 ];

	USFXCameraMode_execMakeInactive_Parms MakeInactive_Parms;

	this->ProcessEvent ( pFnMakeInactive, &MakeInactive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.MakeActive
// [0x00020000] 
// Parameters infos:

void USFXCameraMode::MakeActive ( )
{
	static UFunction* pFnMakeActive = NULL;

	if ( ! pFnMakeActive )
		pFnMakeActive = (UFunction*) UObject::GObjObjects()->Data[ 50205 ];

	USFXCameraMode_execMakeActive_Parms MakeActive_Parms;

	this->ProcessEvent ( pFnMakeActive, &MakeActive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.AimAtPoint
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 V                              ( CPF_Parm )

void USFXCameraMode::eventAimAtPoint ( struct FVector V )
{
	static UFunction* pFnAimAtPoint = NULL;

	if ( ! pFnAimAtPoint )
		pFnAimAtPoint = (UFunction*) UObject::GObjObjects()->Data[ 50191 ];

	USFXCameraMode_eventAimAtPoint_Parms AimAtPoint_Parms;
	memcpy ( &AimAtPoint_Parms.V, &V, 0xC );

	this->ProcessEvent ( pFnAimAtPoint, &AimAtPoint_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.GetCameraHook
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector USFXCameraMode::GetCameraHook ( )
{
	static UFunction* pFnGetCameraHook = NULL;

	if ( ! pFnGetCameraHook )
		pFnGetCameraHook = (UFunction*) UObject::GObjObjects()->Data[ 50189 ];

	USFXCameraMode_execGetCameraHook_Parms GetCameraHook_Parms;

	pFnGetCameraHook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCameraHook, &GetCameraHook_Parms, NULL );

	pFnGetCameraHook->FunctionFlags |= 0x400;

	return GetCameraHook_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.CalculateOffsetHook
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_OptionalParm | CPF_Parm )

struct FVector USFXCameraMode::CalculateOffsetHook ( float Distance )
{
	static UFunction* pFnCalculateOffsetHook = NULL;

	if ( ! pFnCalculateOffsetHook )
		pFnCalculateOffsetHook = (UFunction*) UObject::GObjObjects()->Data[ 50186 ];

	USFXCameraMode_execCalculateOffsetHook_Parms CalculateOffsetHook_Parms;
	CalculateOffsetHook_Parms.Distance = Distance;

	pFnCalculateOffsetHook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateOffsetHook, &CalculateOffsetHook_Parms, NULL );

	pFnCalculateOffsetHook->FunctionFlags |= 0x400;

	return CalculateOffsetHook_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.DoSniperCameraCollision
// [0x00420002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )
// struct FVector                 V                              ( CPF_Parm | CPF_OutParm )
// struct FRotator                R                              ( CPF_Parm | CPF_OutParm )

void USFXCameraMode::DoSniperCameraCollision ( class AActor* A, struct FVector* V, struct FRotator* R )
{
	static UFunction* pFnDoSniperCameraCollision = NULL;

	if ( ! pFnDoSniperCameraCollision )
		pFnDoSniperCameraCollision = (UFunction*) UObject::GObjObjects()->Data[ 50180 ];

	USFXCameraMode_execDoSniperCameraCollision_Parms DoSniperCameraCollision_Parms;
	DoSniperCameraCollision_Parms.A = A;

	this->ProcessEvent ( pFnDoSniperCameraCollision, &DoSniperCameraCollision_Parms, NULL );

	if ( V )
		memcpy ( V, &DoSniperCameraCollision_Parms.V, 0xC );

	if ( R )
		memcpy ( R, &DoSniperCameraCollision_Parms.R, 0xC );
};

// Function SFXGame.SFXCameraMode.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraMode::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50160 ];

	USFXCameraMode_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode.GetCameraLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector USFXCameraMode::GetCameraLocation ( )
{
	static UFunction* pFnGetCameraLocation = NULL;

	if ( ! pFnGetCameraLocation )
		pFnGetCameraLocation = (UFunction*) UObject::GObjObjects()->Data[ 50158 ];

	USFXCameraMode_execGetCameraLocation_Parms GetCameraLocation_Parms;

	pFnGetCameraLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCameraLocation, &GetCameraLocation_Parms, NULL );

	pFnGetCameraLocation->FunctionFlags |= 0x400;

	return GetCameraLocation_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.ComputeClipPlaneRect
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          fFov                           ( CPF_Parm )
// float                          fNearClipPlane                 ( CPF_Parm )
// float                          fWidth                         ( CPF_Parm | CPF_OutParm )
// float                          fHeight                        ( CPF_Parm | CPF_OutParm )

void USFXCameraMode::ComputeClipPlaneRect ( float fFov, float fNearClipPlane, float* fWidth, float* fHeight )
{
	static UFunction* pFnComputeClipPlaneRect = NULL;

	if ( ! pFnComputeClipPlaneRect )
		pFnComputeClipPlaneRect = (UFunction*) UObject::GObjObjects()->Data[ 50153 ];

	USFXCameraMode_execComputeClipPlaneRect_Parms ComputeClipPlaneRect_Parms;
	ComputeClipPlaneRect_Parms.fFov = fFov;
	ComputeClipPlaneRect_Parms.fNearClipPlane = fNearClipPlane;

	pFnComputeClipPlaneRect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeClipPlaneRect, &ComputeClipPlaneRect_Parms, NULL );

	pFnComputeClipPlaneRect->FunctionFlags |= 0x400;

	if ( fWidth )
		*fWidth = ComputeClipPlaneRect_Parms.fWidth;

	if ( fHeight )
		*fHeight = ComputeClipPlaneRect_Parms.fHeight;
};

// Function SFXGame.SFXCameraMode.DoCameraCollisionNative
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 CollisionHook                  ( CPF_Parm )
// class AActor*                  A                              ( CPF_Parm )
// struct FVector                 V                              ( CPF_Parm | CPF_OutParm )
// struct FRotator                R                              ( CPF_Parm | CPF_OutParm )

void USFXCameraMode::DoCameraCollisionNative ( struct FVector CollisionHook, class AActor* A, struct FVector* V, struct FRotator* R )
{
	static UFunction* pFnDoCameraCollisionNative = NULL;

	if ( ! pFnDoCameraCollisionNative )
		pFnDoCameraCollisionNative = (UFunction*) UObject::GObjObjects()->Data[ 50143 ];

	USFXCameraMode_execDoCameraCollisionNative_Parms DoCameraCollisionNative_Parms;
	memcpy ( &DoCameraCollisionNative_Parms.CollisionHook, &CollisionHook, 0xC );
	DoCameraCollisionNative_Parms.A = A;

	pFnDoCameraCollisionNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCameraCollisionNative, &DoCameraCollisionNative_Parms, NULL );

	pFnDoCameraCollisionNative->FunctionFlags |= 0x400;

	if ( V )
		memcpy ( V, &DoCameraCollisionNative_Parms.V, 0xC );

	if ( R )
		memcpy ( R, &DoCameraCollisionNative_Parms.R, 0xC );
};

// Function SFXGame.SFXCameraMode.GetViewTargetAsController
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AController* USFXCameraMode::eventGetViewTargetAsController ( )
{
	static UFunction* pFnGetViewTargetAsController = NULL;

	if ( ! pFnGetViewTargetAsController )
		pFnGetViewTargetAsController = (UFunction*) UObject::GObjObjects()->Data[ 50135 ];

	USFXCameraMode_eventGetViewTargetAsController_Parms GetViewTargetAsController_Parms;

	this->ProcessEvent ( pFnGetViewTargetAsController, &GetViewTargetAsController_Parms, NULL );

	return GetViewTargetAsController_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.GetViewTargetAsPawn
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APawn* USFXCameraMode::GetViewTargetAsPawn ( )
{
	static UFunction* pFnGetViewTargetAsPawn = NULL;

	if ( ! pFnGetViewTargetAsPawn )
		pFnGetViewTargetAsPawn = (UFunction*) UObject::GObjObjects()->Data[ 50144 ];

	USFXCameraMode_execGetViewTargetAsPawn_Parms GetViewTargetAsPawn_Parms;

	this->ProcessEvent ( pFnGetViewTargetAsPawn, &GetViewTargetAsPawn_Parms, NULL );

	return GetViewTargetAsPawn_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode.DoCameraCollision
// [0x00420002] 
// Parameters infos:
// class AActor*                  Owner                          ( CPF_Parm )
// struct FVector                 CamPosition                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                CamRotation                    ( CPF_Parm | CPF_OutParm )

void USFXCameraMode::DoCameraCollision ( class AActor* Owner, struct FVector* CamPosition, struct FRotator* CamRotation )
{
	static UFunction* pFnDoCameraCollision = NULL;

	if ( ! pFnDoCameraCollision )
		pFnDoCameraCollision = (UFunction*) UObject::GObjObjects()->Data[ 50137 ];

	USFXCameraMode_execDoCameraCollision_Parms DoCameraCollision_Parms;
	DoCameraCollision_Parms.Owner = Owner;

	this->ProcessEvent ( pFnDoCameraCollision, &DoCameraCollision_Parms, NULL );

	if ( CamPosition )
		memcpy ( CamPosition, &DoCameraCollision_Parms.CamPosition, 0xC );

	if ( CamRotation )
		memcpy ( CamRotation, &DoCameraCollision_Parms.CamRotation, 0xC );
};

// Function SFXGame.SFXCameraMode.ModifyPostProcessSettings
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXCameraMode::eventModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 50132 ];

	USFXCameraMode_eventModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.BioCameraBehavior.Tick
// [0x00020000] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void UBioCameraBehavior::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50258 ];

	UBioCameraBehavior_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorConversation.GetProceduralCam
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInvert                        ( CPF_Parm )
// struct FVector                 vCamLocation                   ( CPF_Parm | CPF_OutParm )
// struct FRotator                rCamRotation                   ( CPF_Parm | CPF_OutParm )

void UBioCameraBehaviorConversation::eventGetProceduralCam ( unsigned long bInvert, struct FVector* vCamLocation, struct FRotator* rCamRotation )
{
	static UFunction* pFnGetProceduralCam = NULL;

	if ( ! pFnGetProceduralCam )
		pFnGetProceduralCam = (UFunction*) UObject::GObjObjects()->Data[ 50288 ];

	UBioCameraBehaviorConversation_eventGetProceduralCam_Parms GetProceduralCam_Parms;
	GetProceduralCam_Parms.bInvert = bInvert;

	this->ProcessEvent ( pFnGetProceduralCam, &GetProceduralCam_Parms, NULL );

	if ( vCamLocation )
		memcpy ( vCamLocation, &GetProceduralCam_Parms.vCamLocation, 0xC );

	if ( rCamRotation )
		memcpy ( rCamRotation, &GetProceduralCam_Parms.rCamRotation, 0xC );
};

// Function SFXGame.BioCameraBehaviorConversation.ModifyPostProcessSettings
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCameraBehaviorConversation::eventModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 50272 ];

	UBioCameraBehaviorConversation_eventModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.BioCameraBehaviorConversation.InternalModifyPostProcessSettings
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCameraBehaviorConversation::InternalModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnInternalModifyPostProcessSettings = NULL;

	if ( ! pFnInternalModifyPostProcessSettings )
		pFnInternalModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 50270 ];

	UBioCameraBehaviorConversation_execInternalModifyPostProcessSettings_Parms InternalModifyPostProcessSettings_Parms;

	pFnInternalModifyPostProcessSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInternalModifyPostProcessSettings, &InternalModifyPostProcessSettings_Parms, NULL );

	pFnInternalModifyPostProcessSettings->FunctionFlags |= 0x400;

	if ( PPSettings )
		memcpy ( PPSettings, &InternalModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.BioCameraBehaviorConversation.Reset
// [0x00020002] 
// Parameters infos:

void UBioCameraBehaviorConversation::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 50269 ];

	UBioCameraBehaviorConversation_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorConversation.MakeInactive
// [0x00020002] 
// Parameters infos:

void UBioCameraBehaviorConversation::MakeInactive ( )
{
	static UFunction* pFnMakeInactive = NULL;

	if ( ! pFnMakeInactive )
		pFnMakeInactive = (UFunction*) UObject::GObjObjects()->Data[ 50267 ];

	UBioCameraBehaviorConversation_execMakeInactive_Parms MakeInactive_Parms;

	this->ProcessEvent ( pFnMakeInactive, &MakeInactive_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorConversation.ForcePOV
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioCameraBehaviorConversation::ForcePOV ( )
{
	static UFunction* pFnForcePOV = NULL;

	if ( ! pFnForcePOV )
		pFnForcePOV = (UFunction*) UObject::GObjObjects()->Data[ 50266 ];

	UBioCameraBehaviorConversation_execForcePOV_Parms ForcePOV_Parms;

	pFnForcePOV->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForcePOV, &ForcePOV_Parms, NULL );

	pFnForcePOV->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCameraBehaviorConversation.ShutDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioCameraBehaviorConversation::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 50265 ];

	UBioCameraBehaviorConversation_execShutDown_Parms ShutDown_Parms;

	pFnShutDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );

	pFnShutDown->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCameraBehaviorConversation.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void UBioCameraBehaviorConversation::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50263 ];

	UBioCameraBehaviorConversation_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCameraBehaviorGalaxy.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void UBioCameraBehaviorGalaxy::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50372 ];

	UBioCameraBehaviorGalaxy_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXCameraModifier_ScreenShake.ModifyCamera
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ACamera*                 Camera                         ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FTPOV                   OutPOV                         ( CPF_Parm | CPF_OutParm )

bool USFXCameraModifier_ScreenShake::ModifyCamera ( class ACamera* Camera, float DeltaTime, struct FTPOV* OutPOV )
{
	static UFunction* pFnModifyCamera = NULL;

	if ( ! pFnModifyCamera )
		pFnModifyCamera = (UFunction*) UObject::GObjObjects()->Data[ 65606 ];

	USFXCameraModifier_ScreenShake_execModifyCamera_Parms ModifyCamera_Parms;
	ModifyCamera_Parms.Camera = Camera;
	ModifyCamera_Parms.DeltaTime = DeltaTime;

	pFnModifyCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyCamera, &ModifyCamera_Parms, NULL );

	pFnModifyCamera->FunctionFlags |= 0x400;

	if ( OutPOV )
		memcpy ( OutPOV, &ModifyCamera_Parms.OutPOV, 0x1C );

	return ModifyCamera_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraModifier_ScreenShake.UpdateScreenShake
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FScreenShakeStruct      Shake                          ( CPF_Parm | CPF_OutParm )
// struct FTPOV                   OutPOV                         ( CPF_Parm | CPF_OutParm )

void USFXCameraModifier_ScreenShake::UpdateScreenShake ( float DeltaTime, struct FScreenShakeStruct* Shake, struct FTPOV* OutPOV )
{
	static UFunction* pFnUpdateScreenShake = NULL;

	if ( ! pFnUpdateScreenShake )
		pFnUpdateScreenShake = (UFunction*) UObject::GObjObjects()->Data[ 65602 ];

	USFXCameraModifier_ScreenShake_execUpdateScreenShake_Parms UpdateScreenShake_Parms;
	UpdateScreenShake_Parms.DeltaTime = DeltaTime;

	pFnUpdateScreenShake->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateScreenShake, &UpdateScreenShake_Parms, NULL );

	pFnUpdateScreenShake->FunctionFlags |= 0x400;

	if ( Shake )
		memcpy ( Shake, &UpdateScreenShake_Parms.Shake, 0x78 );

	if ( OutPOV )
		memcpy ( OutPOV, &UpdateScreenShake_Parms.OutPOV, 0x1C );
};

// Function SFXGame.SFXCameraModifier_ScreenShake.StartNewShake
// [0x00820002] 
// Parameters infos:
// float                          Duration                       ( CPF_Parm )
// struct FVector                 newRotAmplitude                ( CPF_Parm )
// struct FVector                 newRotFrequency                ( CPF_Parm )
// struct FVector                 newLocAmplitude                ( CPF_Parm )
// struct FVector                 newLocFrequency                ( CPF_Parm )
// float                          newFOVAmplitude                ( CPF_Parm )
// float                          newFOVFrequency                ( CPF_Parm )

void USFXCameraModifier_ScreenShake::StartNewShake ( float Duration, struct FVector newRotAmplitude, struct FVector newRotFrequency, struct FVector newLocAmplitude, struct FVector newLocFrequency, float newFOVAmplitude, float newFOVFrequency )
{
	static UFunction* pFnStartNewShake = NULL;

	if ( ! pFnStartNewShake )
		pFnStartNewShake = (UFunction*) UObject::GObjObjects()->Data[ 65593 ];

	USFXCameraModifier_ScreenShake_execStartNewShake_Parms StartNewShake_Parms;
	StartNewShake_Parms.Duration = Duration;
	memcpy ( &StartNewShake_Parms.newRotAmplitude, &newRotAmplitude, 0xC );
	memcpy ( &StartNewShake_Parms.newRotFrequency, &newRotFrequency, 0xC );
	memcpy ( &StartNewShake_Parms.newLocAmplitude, &newLocAmplitude, 0xC );
	memcpy ( &StartNewShake_Parms.newLocFrequency, &newLocFrequency, 0xC );
	StartNewShake_Parms.newFOVAmplitude = newFOVAmplitude;
	StartNewShake_Parms.newFOVFrequency = newFOVFrequency;

	this->ProcessEvent ( pFnStartNewShake, &StartNewShake_Parms, NULL );
};

// Function SFXGame.SFXCameraModifier_ScreenShake.ComposeNewShake
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct FScreenShakeStruct      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Duration                       ( CPF_Parm )
// struct FVector                 newRotAmplitude                ( CPF_Parm )
// struct FVector                 newRotFrequency                ( CPF_Parm )
// struct FVector                 newLocAmplitude                ( CPF_Parm )
// struct FVector                 newLocFrequency                ( CPF_Parm )
// float                          newFOVAmplitude                ( CPF_Parm )
// float                          newFOVFrequency                ( CPF_Parm )

struct FScreenShakeStruct USFXCameraModifier_ScreenShake::ComposeNewShake ( float Duration, struct FVector newRotAmplitude, struct FVector newRotFrequency, struct FVector newLocAmplitude, struct FVector newLocFrequency, float newFOVAmplitude, float newFOVFrequency )
{
	static UFunction* pFnComposeNewShake = NULL;

	if ( ! pFnComposeNewShake )
		pFnComposeNewShake = (UFunction*) UObject::GObjObjects()->Data[ 65583 ];

	USFXCameraModifier_ScreenShake_execComposeNewShake_Parms ComposeNewShake_Parms;
	ComposeNewShake_Parms.Duration = Duration;
	memcpy ( &ComposeNewShake_Parms.newRotAmplitude, &newRotAmplitude, 0xC );
	memcpy ( &ComposeNewShake_Parms.newRotFrequency, &newRotFrequency, 0xC );
	memcpy ( &ComposeNewShake_Parms.newLocAmplitude, &newLocAmplitude, 0xC );
	memcpy ( &ComposeNewShake_Parms.newLocFrequency, &newLocFrequency, 0xC );
	ComposeNewShake_Parms.newFOVAmplitude = newFOVAmplitude;
	ComposeNewShake_Parms.newFOVFrequency = newFOVFrequency;

	this->ProcessEvent ( pFnComposeNewShake, &ComposeNewShake_Parms, NULL );

	return ComposeNewShake_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraModifier_ScreenShake.InitializeOffset
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Param                          ( CPF_Parm )

float USFXCameraModifier_ScreenShake::InitializeOffset ( unsigned char Param )
{
	static UFunction* pFnInitializeOffset = NULL;

	if ( ! pFnInitializeOffset )
		pFnInitializeOffset = (UFunction*) UObject::GObjObjects()->Data[ 65580 ];

	USFXCameraModifier_ScreenShake_execInitializeOffset_Parms InitializeOffset_Parms;
	InitializeOffset_Parms.Param = Param;

	this->ProcessEvent ( pFnInitializeOffset, &InitializeOffset_Parms, NULL );

	return InitializeOffset_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraModifier_ScreenShake.InitializeShake
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScreenShakeStruct      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FScreenShakeStruct      NewShake                       ( CPF_Parm )

struct FScreenShakeStruct USFXCameraModifier_ScreenShake::InitializeShake ( struct FScreenShakeStruct NewShake )
{
	static UFunction* pFnInitializeShake = NULL;

	if ( ! pFnInitializeShake )
		pFnInitializeShake = (UFunction*) UObject::GObjObjects()->Data[ 65556 ];

	USFXCameraModifier_ScreenShake_execInitializeShake_Parms InitializeShake_Parms;
	memcpy ( &InitializeShake_Parms.NewShake, &NewShake, 0x78 );

	this->ProcessEvent ( pFnInitializeShake, &InitializeShake_Parms, NULL );

	return InitializeShake_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraModifier_ScreenShake.AddScreenShake
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct FScreenShakeStruct      NewShake                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void USFXCameraModifier_ScreenShake::AddScreenShake ( struct FScreenShakeStruct* NewShake )
{
	static UFunction* pFnAddScreenShake = NULL;

	if ( ! pFnAddScreenShake )
		pFnAddScreenShake = (UFunction*) UObject::GObjObjects()->Data[ 65549 ];

	USFXCameraModifier_ScreenShake_execAddScreenShake_Parms AddScreenShake_Parms;

	this->ProcessEvent ( pFnAddScreenShake, &AddScreenShake_Parms, NULL );

	if ( NewShake )
		memcpy ( NewShake, &AddScreenShake_Parms.NewShake, 0x78 );
};

// Function SFXGame.SFXCameraModifier_ScreenShake.RemoveScreenShake
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   ShakeName                      ( CPF_Parm )

void USFXCameraModifier_ScreenShake::RemoveScreenShake ( struct FName ShakeName )
{
	static UFunction* pFnRemoveScreenShake = NULL;

	if ( ! pFnRemoveScreenShake )
		pFnRemoveScreenShake = (UFunction*) UObject::GObjObjects()->Data[ 65546 ];

	USFXCameraModifier_ScreenShake_execRemoveScreenShake_Parms RemoveScreenShake_Parms;
	memcpy ( &RemoveScreenShake_Parms.ShakeName, &ShakeName, 0x8 );

	this->ProcessEvent ( pFnRemoveScreenShake, &RemoveScreenShake_Parms, NULL );
};

// Function SFXGame.SFXCameraModifier_ScreenShake.RemoveAllScreenShakes
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXCameraModifier_ScreenShake::RemoveAllScreenShakes ( )
{
	static UFunction* pFnRemoveAllScreenShakes = NULL;

	if ( ! pFnRemoveAllScreenShakes )
		pFnRemoveAllScreenShakes = (UFunction*) UObject::GObjObjects()->Data[ 56697 ];

	USFXCameraModifier_ScreenShake_execRemoveAllScreenShakes_Parms RemoveAllScreenShakes_Parms;

	this->ProcessEvent ( pFnRemoveAllScreenShakes, &RemoveAllScreenShakes_Parms, NULL );
};

// Function SFXGame.SFXCameraNativeBase.AddScreenShake
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FScreenShakeStruct      Shake                          ( CPF_Parm )

void ASFXCameraNativeBase::eventAddScreenShake ( struct FScreenShakeStruct Shake )
{
	static UFunction* pFnAddScreenShake = NULL;

	if ( ! pFnAddScreenShake )
		pFnAddScreenShake = (UFunction*) UObject::GObjObjects()->Data[ 66722 ];

	ASFXCameraNativeBase_eventAddScreenShake_Parms AddScreenShake_Parms;
	memcpy ( &AddScreenShake_Parms.Shake, &Shake, 0x78 );

	this->ProcessEvent ( pFnAddScreenShake, &AddScreenShake_Parms, NULL );
};

// Function SFXGame.SFXCameraNativeBase.CreateIPECommands
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioInGamePropertyEditor* IPE                            ( CPF_Parm )
// class UBioPropertyEditorBaseNode* Parent                         ( CPF_Parm )

void ASFXCameraNativeBase::eventCreateIPECommands ( class UBioInGamePropertyEditor* IPE, class UBioPropertyEditorBaseNode* Parent )
{
	static UFunction* pFnCreateIPECommands = NULL;

	if ( ! pFnCreateIPECommands )
		pFnCreateIPECommands = (UFunction*) UObject::GObjObjects()->Data[ 66717 ];

	ASFXCameraNativeBase_eventCreateIPECommands_Parms CreateIPECommands_Parms;
	CreateIPECommands_Parms.IPE = IPE;
	CreateIPECommands_Parms.Parent = Parent;

	this->ProcessEvent ( pFnCreateIPECommands, &CreateIPECommands_Parms, NULL );
};

// Function SFXGame.SFXCameraNativeBase.BioAdjustFOVForViewport
// [0x00080401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          inHorizFOV                     ( CPF_Parm )
// class APawn*                   CameraTargetPawn               ( CPF_Parm )

float ASFXCameraNativeBase::BioAdjustFOVForViewport ( float inHorizFOV, class APawn* CameraTargetPawn )
{
	static UFunction* pFnBioAdjustFOVForViewport = NULL;

	if ( ! pFnBioAdjustFOVForViewport )
		pFnBioAdjustFOVForViewport = (UFunction*) UObject::GObjObjects()->Data[ 66713 ];

	ASFXCameraNativeBase_execBioAdjustFOVForViewport_Parms BioAdjustFOVForViewport_Parms;
	BioAdjustFOVForViewport_Parms.inHorizFOV = inHorizFOV;
	BioAdjustFOVForViewport_Parms.CameraTargetPawn = CameraTargetPawn;

	pFnBioAdjustFOVForViewport->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioAdjustFOVForViewport, &BioAdjustFOVForViewport_Parms, NULL );

	pFnBioAdjustFOVForViewport->FunctionFlags |= 0x400;

	return BioAdjustFOVForViewport_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.PlayCameraAnimEx
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class UCameraAnimInst*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UCameraAnim*             Anim                           ( CPF_Parm )
// float                          Rate                           ( CPF_OptionalParm | CPF_Parm )
// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )
// float                          BlendInTime                    ( CPF_OptionalParm | CPF_Parm )
// float                          BlendOutTime                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRandomStartTime               ( CPF_OptionalParm | CPF_Parm )
// float                          Duration                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bSingleInstance                ( CPF_OptionalParm | CPF_Parm )

class UCameraAnimInst* ASFXCameraNativeBase::PlayCameraAnimEx ( class UCameraAnim* Anim, float Rate, float Scale, float StartTime, float BlendInTime, float BlendOutTime, unsigned long bLoop, unsigned long bRandomStartTime, float Duration, unsigned long bSingleInstance )
{
	static UFunction* pFnPlayCameraAnimEx = NULL;

	if ( ! pFnPlayCameraAnimEx )
		pFnPlayCameraAnimEx = (UFunction*) UObject::GObjObjects()->Data[ 66701 ];

	ASFXCameraNativeBase_execPlayCameraAnimEx_Parms PlayCameraAnimEx_Parms;
	PlayCameraAnimEx_Parms.Anim = Anim;
	PlayCameraAnimEx_Parms.Rate = Rate;
	PlayCameraAnimEx_Parms.Scale = Scale;
	PlayCameraAnimEx_Parms.StartTime = StartTime;
	PlayCameraAnimEx_Parms.BlendInTime = BlendInTime;
	PlayCameraAnimEx_Parms.BlendOutTime = BlendOutTime;
	PlayCameraAnimEx_Parms.bLoop = bLoop;
	PlayCameraAnimEx_Parms.bRandomStartTime = bRandomStartTime;
	PlayCameraAnimEx_Parms.Duration = Duration;
	PlayCameraAnimEx_Parms.bSingleInstance = bSingleInstance;

	pFnPlayCameraAnimEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayCameraAnimEx, &PlayCameraAnimEx_Parms, NULL );

	pFnPlayCameraAnimEx->FunctionFlags |= 0x400;

	return PlayCameraAnimEx_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.SetViewTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ASFXCameraNativeBase::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 66698 ];

	ASFXCameraNativeBase_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0xC );

	pFnSetViewTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );

	pFnSetViewTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXCameraNativeBase.LineCheck
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  TraceActors                    ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 Extent                         ( CPF_OptionalParm | CPF_Parm )
// int                            ExtraTraceFlags                ( CPF_OptionalParm | CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitNormal                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 TraceEnd                       ( CPF_Const | CPF_Parm | CPF_OutParm )

class AActor* ASFXCameraNativeBase::LineCheck ( unsigned long TraceActors, struct FVector Extent, int ExtraTraceFlags, struct FTraceHitInfo* HitInfo, struct FVector* HitLocation, struct FVector* HitNormal, struct FVector* TraceEnd )
{
	static UFunction* pFnLineCheck = NULL;

	if ( ! pFnLineCheck )
		pFnLineCheck = (UFunction*) UObject::GObjObjects()->Data[ 56147 ];

	ASFXCameraNativeBase_execLineCheck_Parms LineCheck_Parms;
	LineCheck_Parms.TraceActors = TraceActors;
	memcpy ( &LineCheck_Parms.Extent, &Extent, 0xC );
	LineCheck_Parms.ExtraTraceFlags = ExtraTraceFlags;

	pFnLineCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLineCheck, &LineCheck_Parms, NULL );

	pFnLineCheck->FunctionFlags |= 0x400;

	if ( HitInfo )
		memcpy ( HitInfo, &LineCheck_Parms.HitInfo, 0x28 );

	if ( HitLocation )
		memcpy ( HitLocation, &LineCheck_Parms.HitLocation, 0xC );

	if ( HitNormal )
		memcpy ( HitNormal, &LineCheck_Parms.HitNormal, 0xC );

	if ( TraceEnd )
		memcpy ( TraceEnd, &LineCheck_Parms.TraceEnd, 0xC );

	return LineCheck_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.GetRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ASFXCameraNativeBase::GetRotation ( )
{
	static UFunction* pFnGetRotation = NULL;

	if ( ! pFnGetRotation )
		pFnGetRotation = (UFunction*) UObject::GObjObjects()->Data[ 66689 ];

	ASFXCameraNativeBase_execGetRotation_Parms GetRotation_Parms;

	pFnGetRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRotation, &GetRotation_Parms, NULL );

	pFnGetRotation->FunctionFlags |= 0x400;

	return GetRotation_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.ResetHiddenActors
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ASFXCameraNativeBase::ResetHiddenActors ( )
{
	static UFunction* pFnResetHiddenActors = NULL;

	if ( ! pFnResetHiddenActors )
		pFnResetHiddenActors = (UFunction*) UObject::GObjObjects()->Data[ 66688 ];

	ASFXCameraNativeBase_execResetHiddenActors_Parms ResetHiddenActors_Parms;

	pFnResetHiddenActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetHiddenActors, &ResetHiddenActors_Parms, NULL );

	pFnResetHiddenActors->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXCameraNativeBase.TraceCamera
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FTViewTarget            VT                             ( CPF_Parm | CPF_OutParm )

void ASFXCameraNativeBase::TraceCamera ( struct FTViewTarget* VT )
{
	static UFunction* pFnTraceCamera = NULL;

	if ( ! pFnTraceCamera )
		pFnTraceCamera = (UFunction*) UObject::GObjObjects()->Data[ 66686 ];

	ASFXCameraNativeBase_execTraceCamera_Parms TraceCamera_Parms;

	pFnTraceCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTraceCamera, &TraceCamera_Parms, NULL );

	pFnTraceCamera->FunctionFlags |= 0x400;

	if ( VT )
		memcpy ( VT, &TraceCamera_Parms.VT, 0x38 );
};

// Function SFXGame.SFXCameraNativeBase.WorldToScreenSnapToEdge
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          i_fSafeZoneX                   ( CPF_Parm )
// float                          i_fSafeZoneY                   ( CPF_Parm )
// struct FVector                 vWorldLoc                      ( CPF_Const | CPF_Parm | CPF_OutParm )

struct FVector ASFXCameraNativeBase::WorldToScreenSnapToEdge ( float i_fSafeZoneX, float i_fSafeZoneY, struct FVector* vWorldLoc )
{
	static UFunction* pFnWorldToScreenSnapToEdge = NULL;

	if ( ! pFnWorldToScreenSnapToEdge )
		pFnWorldToScreenSnapToEdge = (UFunction*) UObject::GObjObjects()->Data[ 66681 ];

	ASFXCameraNativeBase_execWorldToScreenSnapToEdge_Parms WorldToScreenSnapToEdge_Parms;
	WorldToScreenSnapToEdge_Parms.i_fSafeZoneX = i_fSafeZoneX;
	WorldToScreenSnapToEdge_Parms.i_fSafeZoneY = i_fSafeZoneY;

	pFnWorldToScreenSnapToEdge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWorldToScreenSnapToEdge, &WorldToScreenSnapToEdge_Parms, NULL );

	pFnWorldToScreenSnapToEdge->FunctionFlags |= 0x400;

	if ( vWorldLoc )
		memcpy ( vWorldLoc, &WorldToScreenSnapToEdge_Parms.vWorldLoc, 0xC );

	return WorldToScreenSnapToEdge_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.WorldToCanonicalScreen
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vWorldLoc                      ( CPF_Const | CPF_Parm | CPF_OutParm )

struct FVector ASFXCameraNativeBase::WorldToCanonicalScreen ( struct FVector* vWorldLoc )
{
	static UFunction* pFnWorldToCanonicalScreen = NULL;

	if ( ! pFnWorldToCanonicalScreen )
		pFnWorldToCanonicalScreen = (UFunction*) UObject::GObjObjects()->Data[ 66678 ];

	ASFXCameraNativeBase_execWorldToCanonicalScreen_Parms WorldToCanonicalScreen_Parms;

	pFnWorldToCanonicalScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWorldToCanonicalScreen, &WorldToCanonicalScreen_Parms, NULL );

	pFnWorldToCanonicalScreen->FunctionFlags |= 0x400;

	if ( vWorldLoc )
		memcpy ( vWorldLoc, &WorldToCanonicalScreen_Parms.vWorldLoc, 0xC );

	return WorldToCanonicalScreen_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraNativeBase.GetTrace
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oHit                           ( CPF_Parm | CPF_OutParm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )

bool ASFXCameraNativeBase::GetTrace ( class AActor** oHit, struct FVector* vLocation, struct FVector* vNormal )
{
	static UFunction* pFnGetTrace = NULL;

	if ( ! pFnGetTrace )
		pFnGetTrace = (UFunction*) UObject::GObjObjects()->Data[ 50176 ];

	ASFXCameraNativeBase_execGetTrace_Parms GetTrace_Parms;

	pFnGetTrace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTrace, &GetTrace_Parms, NULL );

	pFnGetTrace->FunctionFlags |= 0x400;

	if ( oHit )
		*oHit = GetTrace_Parms.oHit;

	if ( vLocation )
		memcpy ( vLocation, &GetTrace_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetTrace_Parms.vNormal, 0xC );

	return GetTrace_Parms.ReturnValue;
};

// Function SFXGame.BioCameraShakeInterface.ComputeCameraRotationDelta
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UBioCameraShakeInterface::ComputeCameraRotationDelta ( )
{
	static UFunction* pFnComputeCameraRotationDelta = NULL;

	if ( ! pFnComputeCameraRotationDelta )
		pFnComputeCameraRotationDelta = (UFunction*) UObject::GObjObjects()->Data[ 45139 ];

	UBioCameraShakeInterface_execComputeCameraRotationDelta_Parms ComputeCameraRotationDelta_Parms;

	pFnComputeCameraRotationDelta->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeCameraRotationDelta, &ComputeCameraRotationDelta_Parms, NULL );

	pFnComputeCameraRotationDelta->FunctionFlags |= 0x400;

	return ComputeCameraRotationDelta_Parms.ReturnValue;
};

// Function SFXGame.BioPawnCameraShakeInterface.OnPawnDestroyed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnCameraShakeInterface::OnPawnDestroyed ( )
{
	static UFunction* pFnOnPawnDestroyed = NULL;

	if ( ! pFnOnPawnDestroyed )
		pFnOnPawnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 45143 ];

	UBioPawnCameraShakeInterface_execOnPawnDestroyed_Parms OnPawnDestroyed_Parms;

	pFnOnPawnDestroyed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPawnDestroyed, &OnPawnDestroyed_Parms, NULL );

	pFnOnPawnDestroyed->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCharacterImporter.FindCharacterInfoByName
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmCharacter                    ( CPF_Parm )
// struct FName                   nmPackage                      ( CPF_OptionalParm | CPF_Parm )
// int                            Index                          ( CPF_Parm | CPF_OutParm )
// struct FString                 actorTypeString                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            nIsHeadGearVisible             ( CPF_Parm | CPF_OutParm )

bool UBioCharacterImporter::FindCharacterInfoByName ( struct FName nmCharacter, struct FName nmPackage, int* Index, struct FString* actorTypeString, int* nIsHeadGearVisible )
{
	static UFunction* pFnFindCharacterInfoByName = NULL;

	if ( ! pFnFindCharacterInfoByName )
		pFnFindCharacterInfoByName = (UFunction*) UObject::GObjObjects()->Data[ 50623 ];

	UBioCharacterImporter_execFindCharacterInfoByName_Parms FindCharacterInfoByName_Parms;
	memcpy ( &FindCharacterInfoByName_Parms.nmCharacter, &nmCharacter, 0x8 );
	memcpy ( &FindCharacterInfoByName_Parms.nmPackage, &nmPackage, 0x8 );

	this->ProcessEvent ( pFnFindCharacterInfoByName, &FindCharacterInfoByName_Parms, NULL );

	if ( Index )
		*Index = FindCharacterInfoByName_Parms.Index;

	if ( actorTypeString )
		memcpy ( actorTypeString, &FindCharacterInfoByName_Parms.actorTypeString, 0x10 );

	if ( nIsHeadGearVisible )
		*nIsHeadGearVisible = FindCharacterInfoByName_Parms.nIsHeadGearVisible;

	return FindCharacterInfoByName_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.FindPlayerCharacterInfo
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm | CPF_OutParm )
// struct FString                 actorTypeString                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            nIsHeadGearVisible             ( CPF_Parm | CPF_OutParm )

bool UBioCharacterImporter::FindPlayerCharacterInfo ( int* Index, struct FString* actorTypeString, int* nIsHeadGearVisible )
{
	static UFunction* pFnFindPlayerCharacterInfo = NULL;

	if ( ! pFnFindPlayerCharacterInfo )
		pFnFindPlayerCharacterInfo = (UFunction*) UObject::GObjObjects()->Data[ 50617 ];

	UBioCharacterImporter_execFindPlayerCharacterInfo_Parms FindPlayerCharacterInfo_Parms;

	this->ProcessEvent ( pFnFindPlayerCharacterInfo, &FindPlayerCharacterInfo_Parms, NULL );

	if ( Index )
		*Index = FindPlayerCharacterInfo_Parms.Index;

	if ( actorTypeString )
		memcpy ( actorTypeString, &FindPlayerCharacterInfo_Parms.actorTypeString, 0x10 );

	if ( nIsHeadGearVisible )
		*nIsHeadGearVisible = FindPlayerCharacterInfo_Parms.nIsHeadGearVisible;

	return FindPlayerCharacterInfo_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.GetSavedPlayerInformation
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 actorTypeString                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioCharacterImporter::GetSavedPlayerInformation ( struct FString* actorTypeString )
{
	static UFunction* pFnGetSavedPlayerInformation = NULL;

	if ( ! pFnGetSavedPlayerInformation )
		pFnGetSavedPlayerInformation = (UFunction*) UObject::GObjObjects()->Data[ 50604 ];

	UBioCharacterImporter_execGetSavedPlayerInformation_Parms GetSavedPlayerInformation_Parms;

	this->ProcessEvent ( pFnGetSavedPlayerInformation, &GetSavedPlayerInformation_Parms, NULL );

	if ( actorTypeString )
		memcpy ( actorTypeString, &GetSavedPlayerInformation_Parms.actorTypeString, 0x10 );

	return GetSavedPlayerInformation_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadCharacterDefinitionByIndexInternal
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// int                            nCharacterID                   ( CPF_Parm )

bool UBioCharacterImporter::LoadCharacterDefinitionByIndexInternal ( class UBioPawnBehavior* oBehavior, int nCharacterID )
{
	static UFunction* pFnLoadCharacterDefinitionByIndexInternal = NULL;

	if ( ! pFnLoadCharacterDefinitionByIndexInternal )
		pFnLoadCharacterDefinitionByIndexInternal = (UFunction*) UObject::GObjObjects()->Data[ 50584 ];

	UBioCharacterImporter_execLoadCharacterDefinitionByIndexInternal_Parms LoadCharacterDefinitionByIndexInternal_Parms;
	LoadCharacterDefinitionByIndexInternal_Parms.oBehavior = oBehavior;
	LoadCharacterDefinitionByIndexInternal_Parms.nCharacterID = nCharacterID;

	this->ProcessEvent ( pFnLoadCharacterDefinitionByIndexInternal, &LoadCharacterDefinitionByIndexInternal_Parms, NULL );

	return LoadCharacterDefinitionByIndexInternal_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadCharacterDefinitionByIndex
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// int                            nCharacterID                   ( CPF_Parm )
// struct FName                   nmPackage                      ( CPF_OptionalParm | CPF_Parm )

bool UBioCharacterImporter::eventLoadCharacterDefinitionByIndex ( class UBioPawnBehavior* oBehavior, int nCharacterID, struct FName nmPackage )
{
	static UFunction* pFnLoadCharacterDefinitionByIndex = NULL;

	if ( ! pFnLoadCharacterDefinitionByIndex )
		pFnLoadCharacterDefinitionByIndex = (UFunction*) UObject::GObjObjects()->Data[ 50578 ];

	UBioCharacterImporter_eventLoadCharacterDefinitionByIndex_Parms LoadCharacterDefinitionByIndex_Parms;
	LoadCharacterDefinitionByIndex_Parms.oBehavior = oBehavior;
	LoadCharacterDefinitionByIndex_Parms.nCharacterID = nCharacterID;
	memcpy ( &LoadCharacterDefinitionByIndex_Parms.nmPackage, &nmPackage, 0x8 );

	this->ProcessEvent ( pFnLoadCharacterDefinitionByIndex, &LoadCharacterDefinitionByIndex_Parms, NULL );

	return LoadCharacterDefinitionByIndex_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.GetAllValuesForKey
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// struct FName                   nmKeyColumn                    ( CPF_Parm )
// int                            nKey                           ( CPF_Parm )
// struct FName                   nmValueColumn                  ( CPF_Parm )
// struct FBioIntArray            oValueArray                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCharacterImporter::GetAllValuesForKey ( class UBio2DA* o2DA, struct FName nmKeyColumn, int nKey, struct FName nmValueColumn, struct FBioIntArray* oValueArray )
{
	static UFunction* pFnGetAllValuesForKey = NULL;

	if ( ! pFnGetAllValuesForKey )
		pFnGetAllValuesForKey = (UFunction*) UObject::GObjObjects()->Data[ 50571 ];

	UBioCharacterImporter_execGetAllValuesForKey_Parms GetAllValuesForKey_Parms;
	GetAllValuesForKey_Parms.o2DA = o2DA;
	memcpy ( &GetAllValuesForKey_Parms.nmKeyColumn, &nmKeyColumn, 0x8 );
	GetAllValuesForKey_Parms.nKey = nKey;
	memcpy ( &GetAllValuesForKey_Parms.nmValueColumn, &nmValueColumn, 0x8 );

	this->ProcessEvent ( pFnGetAllValuesForKey, &GetAllValuesForKey_Parms, NULL );

	if ( oValueArray )
		memcpy ( oValueArray, &GetAllValuesForKey_Parms.oValueArray, 0x10 );
};

// Function SFXGame.BioCharacterImporter.GetAllRowsAndValuesForKey
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// struct FName                   nmKeyColumn                    ( CPF_Parm )
// int                            nKey                           ( CPF_Parm )
// struct FName                   nmValueColumn                  ( CPF_Parm )
// struct FBioIntArray            oRowIndexArray                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FBioIntArray            oValueArray                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCharacterImporter::GetAllRowsAndValuesForKey ( class UBio2DA* o2DA, struct FName nmKeyColumn, int nKey, struct FName nmValueColumn, struct FBioIntArray* oRowIndexArray, struct FBioIntArray* oValueArray )
{
	static UFunction* pFnGetAllRowsAndValuesForKey = NULL;

	if ( ! pFnGetAllRowsAndValuesForKey )
		pFnGetAllRowsAndValuesForKey = (UFunction*) UObject::GObjObjects()->Data[ 50562 ];

	UBioCharacterImporter_execGetAllRowsAndValuesForKey_Parms GetAllRowsAndValuesForKey_Parms;
	GetAllRowsAndValuesForKey_Parms.o2DA = o2DA;
	memcpy ( &GetAllRowsAndValuesForKey_Parms.nmKeyColumn, &nmKeyColumn, 0x8 );
	GetAllRowsAndValuesForKey_Parms.nKey = nKey;
	memcpy ( &GetAllRowsAndValuesForKey_Parms.nmValueColumn, &nmValueColumn, 0x8 );

	this->ProcessEvent ( pFnGetAllRowsAndValuesForKey, &GetAllRowsAndValuesForKey_Parms, NULL );

	if ( oRowIndexArray )
		memcpy ( oRowIndexArray, &GetAllRowsAndValuesForKey_Parms.oRowIndexArray, 0x10 );

	if ( oValueArray )
		memcpy ( oValueArray, &GetAllRowsAndValuesForKey_Parms.oValueArray, 0x10 );
};

// Function SFXGame.BioCharacterImporter.GetAllRowsForKey
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// struct FName                   nmKeyColumn                    ( CPF_Parm )
// int                            nKey                           ( CPF_Parm )
// struct FBioIntArray            oRowIndexArray                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCharacterImporter::GetAllRowsForKey ( class UBio2DA* o2DA, struct FName nmKeyColumn, int nKey, struct FBioIntArray* oRowIndexArray )
{
	static UFunction* pFnGetAllRowsForKey = NULL;

	if ( ! pFnGetAllRowsForKey )
		pFnGetAllRowsForKey = (UFunction*) UObject::GObjObjects()->Data[ 50555 ];

	UBioCharacterImporter_execGetAllRowsForKey_Parms GetAllRowsForKey_Parms;
	GetAllRowsForKey_Parms.o2DA = o2DA;
	memcpy ( &GetAllRowsForKey_Parms.nmKeyColumn, &nmKeyColumn, 0x8 );
	GetAllRowsForKey_Parms.nKey = nKey;

	this->ProcessEvent ( pFnGetAllRowsForKey, &GetAllRowsForKey_Parms, NULL );

	if ( oRowIndexArray )
		memcpy ( oRowIndexArray, &GetAllRowsForKey_Parms.oRowIndexArray, 0x10 );
};

// Function SFXGame.BioCharacterImporter.LoadAndEquipItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// unsigned char                  table                          ( CPF_Parm )
// int                            Row                            ( CPF_Parm )
// struct FName                   itemIDColumnName               ( CPF_Parm )
// struct FName                   sophisticationColumnName       ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmManufacturerColumn           ( CPF_OptionalParm | CPF_Parm )

void UBioCharacterImporter::LoadAndEquipItem ( class UBioPawnBehavior* oBehavior, unsigned char table, int Row, struct FName itemIDColumnName, struct FName sophisticationColumnName, struct FName nmManufacturerColumn )
{
	static UFunction* pFnLoadAndEquipItem = NULL;

	if ( ! pFnLoadAndEquipItem )
		pFnLoadAndEquipItem = (UFunction*) UObject::GObjObjects()->Data[ 50548 ];

	UBioCharacterImporter_execLoadAndEquipItem_Parms LoadAndEquipItem_Parms;
	LoadAndEquipItem_Parms.oBehavior = oBehavior;
	LoadAndEquipItem_Parms.table = table;
	LoadAndEquipItem_Parms.Row = Row;
	memcpy ( &LoadAndEquipItem_Parms.itemIDColumnName, &itemIDColumnName, 0x8 );
	memcpy ( &LoadAndEquipItem_Parms.sophisticationColumnName, &sophisticationColumnName, 0x8 );
	memcpy ( &LoadAndEquipItem_Parms.nmManufacturerColumn, &nmManufacturerColumn, 0x8 );

	pFnLoadAndEquipItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAndEquipItem, &LoadAndEquipItem_Parms, NULL );

	pFnLoadAndEquipItem->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCharacterImporter.LoadItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// unsigned char                  table                          ( CPF_Parm )
// int                            Row                            ( CPF_Parm )
// struct FName                   itemIDColumnName               ( CPF_Parm )
// struct FName                   sophisticationColumnName       ( CPF_Parm )
// struct FName                   nmManufacturerColumn           ( CPF_OptionalParm | CPF_Parm )

class UBioItem* UBioCharacterImporter::LoadItem ( class UBioPawnBehavior* oBehavior, unsigned char table, int Row, struct FName itemIDColumnName, struct FName sophisticationColumnName, struct FName nmManufacturerColumn )
{
	static UFunction* pFnLoadItem = NULL;

	if ( ! pFnLoadItem )
		pFnLoadItem = (UFunction*) UObject::GObjObjects()->Data[ 50540 ];

	UBioCharacterImporter_execLoadItem_Parms LoadItem_Parms;
	LoadItem_Parms.oBehavior = oBehavior;
	LoadItem_Parms.table = table;
	LoadItem_Parms.Row = Row;
	memcpy ( &LoadItem_Parms.itemIDColumnName, &itemIDColumnName, 0x8 );
	memcpy ( &LoadItem_Parms.sophisticationColumnName, &sophisticationColumnName, 0x8 );
	memcpy ( &LoadItem_Parms.nmManufacturerColumn, &nmManufacturerColumn, 0x8 );

	pFnLoadItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadItem, &LoadItem_Parms, NULL );

	pFnLoadItem->FunctionFlags |= 0x400;

	return LoadItem_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadAndEquipItemOfUnknownType
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// unsigned char                  table                          ( CPF_Parm )
// int                            Row                            ( CPF_Parm )
// struct FName                   itemIDColumnName               ( CPF_Parm )
// struct FName                   sophisticationColumnName       ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmManufacturerColumn           ( CPF_OptionalParm | CPF_Parm )

void UBioCharacterImporter::LoadAndEquipItemOfUnknownType ( class UBioPawnBehavior* oBehavior, unsigned char table, int Row, struct FName itemIDColumnName, struct FName sophisticationColumnName, struct FName nmManufacturerColumn )
{
	static UFunction* pFnLoadAndEquipItemOfUnknownType = NULL;

	if ( ! pFnLoadAndEquipItemOfUnknownType )
		pFnLoadAndEquipItemOfUnknownType = (UFunction*) UObject::GObjObjects()->Data[ 50533 ];

	UBioCharacterImporter_execLoadAndEquipItemOfUnknownType_Parms LoadAndEquipItemOfUnknownType_Parms;
	LoadAndEquipItemOfUnknownType_Parms.oBehavior = oBehavior;
	LoadAndEquipItemOfUnknownType_Parms.table = table;
	LoadAndEquipItemOfUnknownType_Parms.Row = Row;
	memcpy ( &LoadAndEquipItemOfUnknownType_Parms.itemIDColumnName, &itemIDColumnName, 0x8 );
	memcpy ( &LoadAndEquipItemOfUnknownType_Parms.sophisticationColumnName, &sophisticationColumnName, 0x8 );
	memcpy ( &LoadAndEquipItemOfUnknownType_Parms.nmManufacturerColumn, &nmManufacturerColumn, 0x8 );

	pFnLoadAndEquipItemOfUnknownType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAndEquipItemOfUnknownType, &LoadAndEquipItemOfUnknownType_Parms, NULL );

	pFnLoadAndEquipItemOfUnknownType->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCharacterImporter.AddAchievementUnlockedTalentTrees
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPawnBehavior*        Behavior                       ( CPF_Parm )

void UBioCharacterImporter::AddAchievementUnlockedTalentTrees ( class UBioPawnBehavior* Behavior )
{
	static UFunction* pFnAddAchievementUnlockedTalentTrees = NULL;

	if ( ! pFnAddAchievementUnlockedTalentTrees )
		pFnAddAchievementUnlockedTalentTrees = (UFunction*) UObject::GObjObjects()->Data[ 50531 ];

	UBioCharacterImporter_execAddAchievementUnlockedTalentTrees_Parms AddAchievementUnlockedTalentTrees_Parms;
	AddAchievementUnlockedTalentTrees_Parms.Behavior = Behavior;

	pFnAddAchievementUnlockedTalentTrees->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddAchievementUnlockedTalentTrees, &AddAchievementUnlockedTalentTrees_Parms, NULL );

	pFnAddAchievementUnlockedTalentTrees->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCharacterImporter.LoadSpecializationData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            classID                        ( CPF_Parm )
// struct TArray<struct FBioSpecializationData> specData                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioCharacterImporter::LoadSpecializationData ( int classID, struct TArray<struct FBioSpecializationData>* specData )
{
	static UFunction* pFnLoadSpecializationData = NULL;

	if ( ! pFnLoadSpecializationData )
		pFnLoadSpecializationData = (UFunction*) UObject::GObjObjects()->Data[ 50526 ];

	UBioCharacterImporter_execLoadSpecializationData_Parms LoadSpecializationData_Parms;
	LoadSpecializationData_Parms.classID = classID;

	pFnLoadSpecializationData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadSpecializationData, &LoadSpecializationData_Parms, NULL );

	pFnLoadSpecializationData->FunctionFlags |= 0x400;

	if ( specData )
		memcpy ( specData, &LoadSpecializationData_Parms.specData, 0x10 );

	return LoadSpecializationData_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadClassGUIInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            Row                            ( CPF_Parm )
// struct FBioClassGuiInfo        stGuiInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCharacterImporter::LoadClassGUIInfo ( int Row, struct FBioClassGuiInfo* stGuiInfo )
{
	static UFunction* pFnLoadClassGUIInfo = NULL;

	if ( ! pFnLoadClassGUIInfo )
		pFnLoadClassGUIInfo = (UFunction*) UObject::GObjObjects()->Data[ 50523 ];

	UBioCharacterImporter_execLoadClassGUIInfo_Parms LoadClassGUIInfo_Parms;
	LoadClassGUIInfo_Parms.Row = Row;

	pFnLoadClassGUIInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadClassGUIInfo, &LoadClassGUIInfo_Parms, NULL );

	pFnLoadClassGUIInfo->FunctionFlags |= 0x400;

	if ( stGuiInfo )
		memcpy ( stGuiInfo, &LoadClassGUIInfo_Parms.stGuiInfo, 0x20 );
};

// Function SFXGame.BioCharacterImporter.LoadPlayableClassRows
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<int>             classRows                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioCharacterImporter::LoadPlayableClassRows ( struct TArray<int>* classRows )
{
	static UFunction* pFnLoadPlayableClassRows = NULL;

	if ( ! pFnLoadPlayableClassRows )
		pFnLoadPlayableClassRows = (UFunction*) UObject::GObjObjects()->Data[ 50520 ];

	UBioCharacterImporter_execLoadPlayableClassRows_Parms LoadPlayableClassRows_Parms;

	pFnLoadPlayableClassRows->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPlayableClassRows, &LoadPlayableClassRows_Parms, NULL );

	pFnLoadPlayableClassRows->FunctionFlags |= 0x400;

	if ( classRows )
		memcpy ( classRows, &LoadPlayableClassRows_Parms.classRows, 0x10 );
};

// Function SFXGame.BioCharacterImporter.InitializePlayerOverrideInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  gender                         ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  Origin                         ( CPF_Parm )
// unsigned char                  Notoriety                      ( CPF_Parm )
// class UBioMorphFace*           Morph                          ( CPF_Parm )
// int                            nBonusTalentID                 ( CPF_Parm )
// struct FString                 FaceCode                       ( CPF_Parm | CPF_NeedCtorLink )

void UBioCharacterImporter::InitializePlayerOverrideInfo ( struct FString Label, unsigned char gender, struct FString PlayerName, unsigned char Origin, unsigned char Notoriety, class UBioMorphFace* Morph, int nBonusTalentID, struct FString FaceCode )
{
	static UFunction* pFnInitializePlayerOverrideInfo = NULL;

	if ( ! pFnInitializePlayerOverrideInfo )
		pFnInitializePlayerOverrideInfo = (UFunction*) UObject::GObjObjects()->Data[ 50511 ];

	UBioCharacterImporter_execInitializePlayerOverrideInfo_Parms InitializePlayerOverrideInfo_Parms;
	memcpy ( &InitializePlayerOverrideInfo_Parms.Label, &Label, 0x10 );
	InitializePlayerOverrideInfo_Parms.gender = gender;
	memcpy ( &InitializePlayerOverrideInfo_Parms.PlayerName, &PlayerName, 0x10 );
	InitializePlayerOverrideInfo_Parms.Origin = Origin;
	InitializePlayerOverrideInfo_Parms.Notoriety = Notoriety;
	InitializePlayerOverrideInfo_Parms.Morph = Morph;
	InitializePlayerOverrideInfo_Parms.nBonusTalentID = nBonusTalentID;
	memcpy ( &InitializePlayerOverrideInfo_Parms.FaceCode, &FaceCode, 0x10 );

	pFnInitializePlayerOverrideInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializePlayerOverrideInfo, &InitializePlayerOverrideInfo_Parms, NULL );

	pFnInitializePlayerOverrideInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCharacterImporter.LoadClassTalents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        Behavior                       ( CPF_Parm )
// int                            classID                        ( CPF_Parm )

bool UBioCharacterImporter::LoadClassTalents ( class UBioPawnBehavior* Behavior, int classID )
{
	static UFunction* pFnLoadClassTalents = NULL;

	if ( ! pFnLoadClassTalents )
		pFnLoadClassTalents = (UFunction*) UObject::GObjObjects()->Data[ 50507 ];

	UBioCharacterImporter_execLoadClassTalents_Parms LoadClassTalents_Parms;
	LoadClassTalents_Parms.Behavior = Behavior;
	LoadClassTalents_Parms.classID = classID;

	pFnLoadClassTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadClassTalents, &LoadClassTalents_Parms, NULL );

	pFnLoadClassTalents->FunctionFlags |= 0x400;

	return LoadClassTalents_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.GetEnumEntryIN
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmEnum                         ( CPF_Parm )
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// int                            nRow                           ( CPF_Parm )
// struct FName                   nmColumn                       ( CPF_Parm )
// unsigned char                  cValue                         ( CPF_Parm | CPF_OutParm )

bool UBioCharacterImporter::GetEnumEntryIN ( struct FName nmEnum, class UBio2DA* o2DA, int nRow, struct FName nmColumn, unsigned char* cValue )
{
	static UFunction* pFnGetEnumEntryIN = NULL;

	if ( ! pFnGetEnumEntryIN )
		pFnGetEnumEntryIN = (UFunction*) UObject::GObjObjects()->Data[ 50500 ];

	UBioCharacterImporter_execGetEnumEntryIN_Parms GetEnumEntryIN_Parms;
	memcpy ( &GetEnumEntryIN_Parms.nmEnum, &nmEnum, 0x8 );
	GetEnumEntryIN_Parms.o2DA = o2DA;
	GetEnumEntryIN_Parms.nRow = nRow;
	memcpy ( &GetEnumEntryIN_Parms.nmColumn, &nmColumn, 0x8 );

	pFnGetEnumEntryIN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEnumEntryIN, &GetEnumEntryIN_Parms, NULL );

	pFnGetEnumEntryIN->FunctionFlags |= 0x400;

	if ( cValue )
		*cValue = GetEnumEntryIN_Parms.cValue;

	return GetEnumEntryIN_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.GetRowIndex
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// int                            nKeyValue                      ( CPF_Parm )

int UBioCharacterImporter::GetRowIndex ( class UBio2DA* o2DA, int nKeyValue )
{
	static UFunction* pFnGetRowIndex = NULL;

	if ( ! pFnGetRowIndex )
		pFnGetRowIndex = (UFunction*) UObject::GObjObjects()->Data[ 50496 ];

	UBioCharacterImporter_execGetRowIndex_Parms GetRowIndex_Parms;
	GetRowIndex_Parms.o2DA = o2DA;
	GetRowIndex_Parms.nKeyValue = nKeyValue;

	pFnGetRowIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRowIndex, &GetRowIndex_Parms, NULL );

	pFnGetRowIndex->FunctionFlags |= 0x400;

	return GetRowIndex_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadClasses2DAs
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPackage                      ( CPF_OptionalParm | CPF_Parm )

bool UBioCharacterImporter::LoadClasses2DAs ( struct FName nmPackage )
{
	static UFunction* pFnLoadClasses2DAs = NULL;

	if ( ! pFnLoadClasses2DAs )
		pFnLoadClasses2DAs = (UFunction*) UObject::GObjObjects()->Data[ 50493 ];

	UBioCharacterImporter_execLoadClasses2DAs_Parms LoadClasses2DAs_Parms;
	memcpy ( &LoadClasses2DAs_Parms.nmPackage, &nmPackage, 0x8 );

	pFnLoadClasses2DAs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadClasses2DAs, &LoadClasses2DAs_Parms, NULL );

	pFnLoadClasses2DAs->FunctionFlags |= 0x400;

	return LoadClasses2DAs_Parms.ReturnValue;
};

// Function SFXGame.BioCharacterImporter.LoadCharacter2DAs
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPackage                      ( CPF_OptionalParm | CPF_Parm )

bool UBioCharacterImporter::LoadCharacter2DAs ( struct FName nmPackage )
{
	static UFunction* pFnLoadCharacter2DAs = NULL;

	if ( ! pFnLoadCharacter2DAs )
		pFnLoadCharacter2DAs = (UFunction*) UObject::GObjObjects()->Data[ 50490 ];

	UBioCharacterImporter_execLoadCharacter2DAs_Parms LoadCharacter2DAs_Parms;
	memcpy ( &LoadCharacter2DAs_Parms.nmPackage, &nmPackage, 0x8 );

	pFnLoadCharacter2DAs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadCharacter2DAs, &LoadCharacter2DAs_Parms, NULL );

	pFnLoadCharacter2DAs->FunctionFlags |= 0x400;

	return LoadCharacter2DAs_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.GetLaunchPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioGrenade::GetLaunchPoint ( )
{
	static UFunction* pFnGetLaunchPoint = NULL;

	if ( ! pFnGetLaunchPoint )
		pFnGetLaunchPoint = (UFunction*) UObject::GObjObjects()->Data[ 54072 ];

	ABioGrenade_execGetLaunchPoint_Parms GetLaunchPoint_Parms;

	pFnGetLaunchPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLaunchPoint, &GetLaunchPoint_Parms, NULL );

	pFnGetLaunchPoint->FunctionFlags |= 0x400;

	return GetLaunchPoint_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.GetItem
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioItemGrenade*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioItemGrenade* ABioGrenade::eventGetItem ( )
{
	static UFunction* pFnGetItem = NULL;

	if ( ! pFnGetItem )
		pFnGetItem = (UFunction*) UObject::GObjObjects()->Data[ 54070 ];

	ABioGrenade_eventGetItem_Parms GetItem_Parms;

	this->ProcessEvent ( pFnGetItem, &GetItem_Parms, NULL );

	return GetItem_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.ClearItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioGrenade::ClearItem ( )
{
	static UFunction* pFnClearItem = NULL;

	if ( ! pFnClearItem )
		pFnClearItem = (UFunction*) UObject::GObjObjects()->Data[ 54069 ];

	ABioGrenade_execClearItem_Parms ClearItem_Parms;

	this->ProcessEvent ( pFnClearItem, &ClearItem_Parms, NULL );
};

// Function SFXGame.BioGrenade.SetItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioItemGrenade*         pItem                          ( CPF_Parm )

void ABioGrenade::SetItem ( class UBioItemGrenade* pItem )
{
	static UFunction* pFnSetItem = NULL;

	if ( ! pFnSetItem )
		pFnSetItem = (UFunction*) UObject::GObjObjects()->Data[ 54062 ];

	ABioGrenade_execSetItem_Parms SetItem_Parms;
	SetItem_Parms.pItem = pItem;

	this->ProcessEvent ( pFnSetItem, &SetItem_Parms, NULL );
};

// Function SFXGame.BioGrenade.LaunchGrenade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioGrenadeProjectile*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vVelocity                      ( CPF_Parm )

class ABioGrenadeProjectile* ABioGrenade::eventLaunchGrenade ( struct FVector vVelocity )
{
	static UFunction* pFnLaunchGrenade = NULL;

	if ( ! pFnLaunchGrenade )
		pFnLaunchGrenade = (UFunction*) UObject::GObjObjects()->Data[ 54058 ];

	ABioGrenade_eventLaunchGrenade_Parms LaunchGrenade_Parms;
	memcpy ( &LaunchGrenade_Parms.vVelocity, &vVelocity, 0xC );

	this->ProcessEvent ( pFnLaunchGrenade, &LaunchGrenade_Parms, NULL );

	return LaunchGrenade_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.LaunchGrenadeAtPoint
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioGrenadeProjectile*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vTarget                        ( CPF_Parm )

class ABioGrenadeProjectile* ABioGrenade::eventLaunchGrenadeAtPoint ( struct FVector vTarget )
{
	static UFunction* pFnLaunchGrenadeAtPoint = NULL;

	if ( ! pFnLaunchGrenadeAtPoint )
		pFnLaunchGrenadeAtPoint = (UFunction*) UObject::GObjObjects()->Data[ 54054 ];

	ABioGrenade_eventLaunchGrenadeAtPoint_Parms LaunchGrenadeAtPoint_Parms;
	memcpy ( &LaunchGrenadeAtPoint_Parms.vTarget, &vTarget, 0xC );

	this->ProcessEvent ( pFnLaunchGrenadeAtPoint, &LaunchGrenadeAtPoint_Parms, NULL );

	return LaunchGrenadeAtPoint_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.LaunchGrenadeAtActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioGrenadeProjectile*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

class ABioGrenadeProjectile* ABioGrenade::eventLaunchGrenadeAtActor ( class AActor* oTarget )
{
	static UFunction* pFnLaunchGrenadeAtActor = NULL;

	if ( ! pFnLaunchGrenadeAtActor )
		pFnLaunchGrenadeAtActor = (UFunction*) UObject::GObjObjects()->Data[ 54050 ];

	ABioGrenade_eventLaunchGrenadeAtActor_Parms LaunchGrenadeAtActor_Parms;
	LaunchGrenadeAtActor_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnLaunchGrenadeAtActor, &LaunchGrenadeAtActor_Parms, NULL );

	return LaunchGrenadeAtActor_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.MakeProjectile
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class ABioGrenadeProjectile*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioGrenadeProjectile* ABioGrenade::MakeProjectile ( )
{
	static UFunction* pFnMakeProjectile = NULL;

	if ( ! pFnMakeProjectile )
		pFnMakeProjectile = (UFunction*) UObject::GObjObjects()->Data[ 54046 ];

	ABioGrenade_execMakeProjectile_Parms MakeProjectile_Parms;

	this->ProcessEvent ( pFnMakeProjectile, &MakeProjectile_Parms, NULL );

	return MakeProjectile_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.GetProjectileClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioGrenade::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 54043 ];

	ABioGrenade_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.GetPhysicalFireStartLoc
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ABioGrenade::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 54040 ];

	ABioGrenade_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function SFXGame.BioGrenade.DetachWeaponFromMesh
// [0x00020102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )

void ABioGrenade::DetachWeaponFromMesh ( class USkeletalMeshComponent* MeshCpnt )
{
	static UFunction* pFnDetachWeaponFromMesh = NULL;

	if ( ! pFnDetachWeaponFromMesh )
		pFnDetachWeaponFromMesh = (UFunction*) UObject::GObjObjects()->Data[ 54038 ];

	ABioGrenade_execDetachWeaponFromMesh_Parms DetachWeaponFromMesh_Parms;
	DetachWeaponFromMesh_Parms.MeshCpnt = MeshCpnt;

	this->ProcessEvent ( pFnDetachWeaponFromMesh, &DetachWeaponFromMesh_Parms, NULL );
};

// Function SFXGame.BioGrenade.AttachWeaponTo
// [0x00024102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   BoneName                       ( CPF_OptionalParm | CPF_Parm )

void ABioGrenade::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName BoneName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 54032 ];

	ABioGrenade_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.BoneName, &BoneName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UseIconicShepard
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  ShouldUse                      ( CPF_Parm )

void UBioCheatManager::UseIconicShepard ( unsigned long ShouldUse )
{
	static UFunction* pFnUseIconicShepard = NULL;

	if ( ! pFnUseIconicShepard )
		pFnUseIconicShepard = (UFunction*) UObject::GObjObjects()->Data[ 52365 ];

	UBioCheatManager_execUseIconicShepard_Parms UseIconicShepard_Parms;
	UseIconicShepard_Parms.ShouldUse = ShouldUse;

	this->ProcessEvent ( pFnUseIconicShepard, &UseIconicShepard_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Resurrect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   PawnName                       ( CPF_Parm )

void UBioCheatManager::Resurrect ( struct FName PawnName )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 52362 ];

	UBioCheatManager_execResurrect_Parms Resurrect_Parms;
	memcpy ( &Resurrect_Parms.PawnName, &PawnName, 0x8 );

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ResetDifficultyScaling
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ResetDifficultyScaling ( )
{
	static UFunction* pFnResetDifficultyScaling = NULL;

	if ( ! pFnResetDifficultyScaling )
		pFnResetDifficultyScaling = (UFunction*) UObject::GObjObjects()->Data[ 52360 ];

	UBioCheatManager_execResetDifficultyScaling_Parms ResetDifficultyScaling_Parms;

	this->ProcessEvent ( pFnResetDifficultyScaling, &ResetDifficultyScaling_Parms, NULL );
};

// Function SFXGame.BioCheatManager.RefreshSarenWeights
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bRocketPoints                  ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::RefreshSarenWeights ( unsigned long bRocketPoints )
{
	static UFunction* pFnRefreshSarenWeights = NULL;

	if ( ! pFnRefreshSarenWeights )
		pFnRefreshSarenWeights = (UFunction*) UObject::GObjObjects()->Data[ 52355 ];

	UBioCheatManager_execRefreshSarenWeights_Parms RefreshSarenWeights_Parms;
	RefreshSarenWeights_Parms.bRocketPoints = bRocketPoints;

	this->ProcessEvent ( pFnRefreshSarenWeights, &RefreshSarenWeights_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugSaren
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugSaren ( )
{
	static UFunction* pFnDebugSaren = NULL;

	if ( ! pFnDebugSaren )
		pFnDebugSaren = (UFunction*) UObject::GObjObjects()->Data[ 52351 ];

	UBioCheatManager_execDebugSaren_Parms DebugSaren_Parms;

	this->ProcessEvent ( pFnDebugSaren, &DebugSaren_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PhotoMode
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::PhotoMode ( )
{
	static UFunction* pFnPhotoMode = NULL;

	if ( ! pFnPhotoMode )
		pFnPhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 52347 ];

	UBioCheatManager_execPhotoMode_Parms PhotoMode_Parms;

	this->ProcessEvent ( pFnPhotoMode, &PhotoMode_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ActivatePower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Power                          ( CPF_Parm )
// struct FString                 Target                         ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::ActivatePower ( struct FName Power, struct FString Target )
{
	static UFunction* pFnActivatePower = NULL;

	if ( ! pFnActivatePower )
		pFnActivatePower = (UFunction*) UObject::GObjObjects()->Data[ 52341 ];

	UBioCheatManager_execActivatePower_Parms ActivatePower_Parms;
	memcpy ( &ActivatePower_Parms.Power, &Power, 0x8 );
	memcpy ( &ActivatePower_Parms.Target, &Target, 0x10 );

	this->ProcessEvent ( pFnActivatePower, &ActivatePower_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LogFaceCode
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::LogFaceCode ( )
{
	static UFunction* pFnLogFaceCode = NULL;

	if ( ! pFnLogFaceCode )
		pFnLogFaceCode = (UFunction*) UObject::GObjObjects()->Data[ 52335 ];

	UBioCheatManager_execLogFaceCode_Parms LogFaceCode_Parms;

	this->ProcessEvent ( pFnLogFaceCode, &LogFaceCode_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LogSliders
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::LogSliders ( )
{
	static UFunction* pFnLogSliders = NULL;

	if ( ! pFnLogSliders )
		pFnLogSliders = (UFunction*) UObject::GObjObjects()->Data[ 52329 ];

	UBioCheatManager_execLogSliders_Parms LogSliders_Parms;

	this->ProcessEvent ( pFnLogSliders, &LogSliders_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LogMorphHeadInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioMorphFace*           MorphHead                      ( CPF_Parm )

void UBioCheatManager::LogMorphHeadInfo ( class UBioMorphFace* MorphHead )
{
	static UFunction* pFnLogMorphHeadInfo = NULL;

	if ( ! pFnLogMorphHeadInfo )
		pFnLogMorphHeadInfo = (UFunction*) UObject::GObjObjects()->Data[ 52327 ];

	UBioCheatManager_execLogMorphHeadInfo_Parms LogMorphHeadInfo_Parms;
	LogMorphHeadInfo_Parms.MorphHead = MorphHead;

	pFnLogMorphHeadInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogMorphHeadInfo, &LogMorphHeadInfo_Parms, NULL );

	pFnLogMorphHeadInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GetCurrentPlayerMorphHead
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UBioMorphFace*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioMorphFace* UBioCheatManager::GetCurrentPlayerMorphHead ( )
{
	static UFunction* pFnGetCurrentPlayerMorphHead = NULL;

	if ( ! pFnGetCurrentPlayerMorphHead )
		pFnGetCurrentPlayerMorphHead = (UFunction*) UObject::GObjObjects()->Data[ 52315 ];

	UBioCheatManager_execGetCurrentPlayerMorphHead_Parms GetCurrentPlayerMorphHead_Parms;

	this->ProcessEvent ( pFnGetCurrentPlayerMorphHead, &GetCurrentPlayerMorphHead_Parms, NULL );

	return GetCurrentPlayerMorphHead_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.LogMorphHead
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   PawnName                       ( CPF_Parm )

void UBioCheatManager::LogMorphHead ( struct FName PawnName )
{
	static UFunction* pFnLogMorphHead = NULL;

	if ( ! pFnLogMorphHead )
		pFnLogMorphHead = (UFunction*) UObject::GObjObjects()->Data[ 52311 ];

	UBioCheatManager_execLogMorphHead_Parms LogMorphHead_Parms;
	memcpy ( &LogMorphHead_Parms.PawnName, &PawnName, 0x8 );

	this->ProcessEvent ( pFnLogMorphHead, &LogMorphHead_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugDraw_LOD
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )

void UBioCheatManager::DebugDraw_LOD ( class ABioHUD* HUD )
{
	static UFunction* pFnDebugDraw_LOD = NULL;

	if ( ! pFnDebugDraw_LOD )
		pFnDebugDraw_LOD = (UFunction*) UObject::GObjObjects()->Data[ 52298 ];

	UBioCheatManager_execDebugDraw_LOD_Parms DebugDraw_LOD_Parms;
	DebugDraw_LOD_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDraw_LOD, &DebugDraw_LOD_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugLOD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugLOD ( )
{
	static UFunction* pFnDebugLOD = NULL;

	if ( ! pFnDebugLOD )
		pFnDebugLOD = (UFunction*) UObject::GObjObjects()->Data[ 52296 ];

	UBioCheatManager_execDebugLOD_Parms DebugLOD_Parms;

	this->ProcessEvent ( pFnDebugLOD, &DebugLOD_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugDraw_WeaponFireTime
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )

void UBioCheatManager::DebugDraw_WeaponFireTime ( class ABioHUD* HUD )
{
	static UFunction* pFnDebugDraw_WeaponFireTime = NULL;

	if ( ! pFnDebugDraw_WeaponFireTime )
		pFnDebugDraw_WeaponFireTime = (UFunction*) UObject::GObjObjects()->Data[ 52291 ];

	UBioCheatManager_execDebugDraw_WeaponFireTime_Parms DebugDraw_WeaponFireTime_Parms;
	DebugDraw_WeaponFireTime_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDraw_WeaponFireTime, &DebugDraw_WeaponFireTime_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugWeaponFireTime
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugWeaponFireTime ( )
{
	static UFunction* pFnDebugWeaponFireTime = NULL;

	if ( ! pFnDebugWeaponFireTime )
		pFnDebugWeaponFireTime = (UFunction*) UObject::GObjObjects()->Data[ 52289 ];

	UBioCheatManager_execDebugWeaponFireTime_Parms DebugWeaponFireTime_Parms;

	this->ProcessEvent ( pFnDebugWeaponFireTime, &DebugWeaponFireTime_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugAccuracy
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugAccuracy ( )
{
	static UFunction* pFnDebugAccuracy = NULL;

	if ( ! pFnDebugAccuracy )
		pFnDebugAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 52286 ];

	UBioCheatManager_execDebugAccuracy_Parms DebugAccuracy_Parms;

	this->ProcessEvent ( pFnDebugAccuracy, &DebugAccuracy_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugMagnetism
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugMagnetism ( )
{
	static UFunction* pFnDebugMagnetism = NULL;

	if ( ! pFnDebugMagnetism )
		pFnDebugMagnetism = (UFunction*) UObject::GObjObjects()->Data[ 52283 ];

	UBioCheatManager_execDebugMagnetism_Parms DebugMagnetism_Parms;

	this->ProcessEvent ( pFnDebugMagnetism, &DebugMagnetism_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugFriction
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugFriction ( )
{
	static UFunction* pFnDebugFriction = NULL;

	if ( ! pFnDebugFriction )
		pFnDebugFriction = (UFunction*) UObject::GObjObjects()->Data[ 52280 ];

	UBioCheatManager_execDebugFriction_Parms DebugFriction_Parms;

	this->ProcessEvent ( pFnDebugFriction, &DebugFriction_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugAdhesion
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugAdhesion ( )
{
	static UFunction* pFnDebugAdhesion = NULL;

	if ( ! pFnDebugAdhesion )
		pFnDebugAdhesion = (UFunction*) UObject::GObjObjects()->Data[ 52277 ];

	UBioCheatManager_execDebugAdhesion_Parms DebugAdhesion_Parms;

	this->ProcessEvent ( pFnDebugAdhesion, &DebugAdhesion_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugZoomSnap
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugZoomSnap ( )
{
	static UFunction* pFnDebugZoomSnap = NULL;

	if ( ! pFnDebugZoomSnap )
		pFnDebugZoomSnap = (UFunction*) UObject::GObjObjects()->Data[ 52273 ];

	UBioCheatManager_execDebugZoomSnap_Parms DebugZoomSnap_Parms;

	this->ProcessEvent ( pFnDebugZoomSnap, &DebugZoomSnap_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DebugVehicle ( )
{
	static UFunction* pFnDebugVehicle = NULL;

	if ( ! pFnDebugVehicle )
		pFnDebugVehicle = (UFunction*) UObject::GObjObjects()->Data[ 52268 ];

	UBioCheatManager_execDebugVehicle_Parms DebugVehicle_Parms;

	this->ProcessEvent ( pFnDebugVehicle, &DebugVehicle_Parms, NULL );
};

// Function SFXGame.BioCheatManager.RemoveAIFilter
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmFilter                       ( CPF_Parm )

void UBioCheatManager::RemoveAIFilter ( struct FName nmFilter )
{
	static UFunction* pFnRemoveAIFilter = NULL;

	if ( ! pFnRemoveAIFilter )
		pFnRemoveAIFilter = (UFunction*) UObject::GObjObjects()->Data[ 52264 ];

	UBioCheatManager_execRemoveAIFilter_Parms RemoveAIFilter_Parms;
	memcpy ( &RemoveAIFilter_Parms.nmFilter, &nmFilter, 0x8 );

	this->ProcessEvent ( pFnRemoveAIFilter, &RemoveAIFilter_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AddAIFilter
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmFilter                       ( CPF_Parm )

void UBioCheatManager::AddAIFilter ( struct FName nmFilter )
{
	static UFunction* pFnAddAIFilter = NULL;

	if ( ! pFnAddAIFilter )
		pFnAddAIFilter = (UFunction*) UObject::GObjObjects()->Data[ 52259 ];

	UBioCheatManager_execAddAIFilter_Parms AddAIFilter_Parms;
	memcpy ( &AddAIFilter_Parms.nmFilter, &nmFilter, 0x8 );

	this->ProcessEvent ( pFnAddAIFilter, &AddAIFilter_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AILog
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 nmPawn                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEnable                        ( CPF_Parm )

void UBioCheatManager::AILog ( struct FString nmPawn, unsigned long bEnable )
{
	static UFunction* pFnAILog = NULL;

	if ( ! pFnAILog )
		pFnAILog = (UFunction*) UObject::GObjObjects()->Data[ 52254 ];

	UBioCheatManager_execAILog_Parms AILog_Parms;
	memcpy ( &AILog_Parms.nmPawn, &nmPawn, 0x10 );
	AILog_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnAILog, &AILog_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Distance
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 nmActor1                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 nmActor2                       ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Distance ( struct FString nmActor1, struct FString nmActor2 )
{
	static UFunction* pFnDistance = NULL;

	if ( ! pFnDistance )
		pFnDistance = (UFunction*) UObject::GObjObjects()->Data[ 52249 ];

	UBioCheatManager_execDistance_Parms Distance_Parms;
	memcpy ( &Distance_Parms.nmActor1, &nmActor1, 0x10 );
	memcpy ( &Distance_Parms.nmActor2, &nmActor2, 0x10 );

	this->ProcessEvent ( pFnDistance, &Distance_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ProfileCamera
// [0x00020002] 
// Parameters infos:

void UBioCheatManager::ProfileCamera ( )
{
	static UFunction* pFnProfileCamera = NULL;

	if ( ! pFnProfileCamera )
		pFnProfileCamera = (UFunction*) UObject::GObjObjects()->Data[ 52241 ];

	UBioCheatManager_execProfileCamera_Parms ProfileCamera_Parms;

	this->ProcessEvent ( pFnProfileCamera, &ProfileCamera_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowDebugText
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UBioCheatManager::ShowDebugText ( unsigned long bShow )
{
	static UFunction* pFnShowDebugText = NULL;

	if ( ! pFnShowDebugText )
		pFnShowDebugText = (UFunction*) UObject::GObjObjects()->Data[ 52239 ];

	UBioCheatManager_execShowDebugText_Parms ShowDebugText_Parms;
	ShowDebugText_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowDebugText, &ShowDebugText_Parms, NULL );
};

// Function SFXGame.BioCheatManager.RestrictNumberOfSaves
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UBioCheatManager::RestrictNumberOfSaves ( unsigned long bValue )
{
	static UFunction* pFnRestrictNumberOfSaves = NULL;

	if ( ! pFnRestrictNumberOfSaves )
		pFnRestrictNumberOfSaves = (UFunction*) UObject::GObjObjects()->Data[ 52235 ];

	UBioCheatManager_execRestrictNumberOfSaves_Parms RestrictNumberOfSaves_Parms;
	RestrictNumberOfSaves_Parms.bValue = bValue;

	this->ProcessEvent ( pFnRestrictNumberOfSaves, &RestrictNumberOfSaves_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LogAllControllers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::LogAllControllers ( )
{
	static UFunction* pFnLogAllControllers = NULL;

	if ( ! pFnLogAllControllers )
		pFnLogAllControllers = (UFunction*) UObject::GObjObjects()->Data[ 52232 ];

	UBioCheatManager_execLogAllControllers_Parms LogAllControllers_Parms;

	this->ProcessEvent ( pFnLogAllControllers, &LogAllControllers_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LogAllPawns
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::LogAllPawns ( )
{
	static UFunction* pFnLogAllPawns = NULL;

	if ( ! pFnLogAllPawns )
		pFnLogAllPawns = (UFunction*) UObject::GObjObjects()->Data[ 52229 ];

	UBioCheatManager_execLogAllPawns_Parms LogAllPawns_Parms;

	this->ProcessEvent ( pFnLogAllPawns, &LogAllPawns_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetPlayerStabilityCurrent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          nStabilityCurrent              ( CPF_Parm )

void UBioCheatManager::SetPlayerStabilityCurrent ( float nStabilityCurrent )
{
	static UFunction* pFnSetPlayerStabilityCurrent = NULL;

	if ( ! pFnSetPlayerStabilityCurrent )
		pFnSetPlayerStabilityCurrent = (UFunction*) UObject::GObjObjects()->Data[ 52225 ];

	UBioCheatManager_execSetPlayerStabilityCurrent_Parms SetPlayerStabilityCurrent_Parms;
	SetPlayerStabilityCurrent_Parms.nStabilityCurrent = nStabilityCurrent;

	this->ProcessEvent ( pFnSetPlayerStabilityCurrent, &SetPlayerStabilityCurrent_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetPlayerStabilityRegenRate0
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::SetPlayerStabilityRegenRate0 ( )
{
	static UFunction* pFnSetPlayerStabilityRegenRate0 = NULL;

	if ( ! pFnSetPlayerStabilityRegenRate0 )
		pFnSetPlayerStabilityRegenRate0 = (UFunction*) UObject::GObjObjects()->Data[ 52224 ];

	UBioCheatManager_execSetPlayerStabilityRegenRate0_Parms SetPlayerStabilityRegenRate0_Parms;

	pFnSetPlayerStabilityRegenRate0->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPlayerStabilityRegenRate0, &SetPlayerStabilityRegenRate0_Parms, NULL );

	pFnSetPlayerStabilityRegenRate0->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.ChangeWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nWeapon                        ( CPF_Parm )

void UBioCheatManager::ChangeWeapon ( int nWeapon )
{
	static UFunction* pFnChangeWeapon = NULL;

	if ( ! pFnChangeWeapon )
		pFnChangeWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52219 ];

	UBioCheatManager_execChangeWeapon_Parms ChangeWeapon_Parms;
	ChangeWeapon_Parms.nWeapon = nWeapon;

	this->ProcessEvent ( pFnChangeWeapon, &ChangeWeapon_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetAutoRightUpForceAndTorque
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fUpLiftForce                   ( CPF_Parm )
// float                          fUprightTorque                 ( CPF_Parm )

void UBioCheatManager::SetAutoRightUpForceAndTorque ( float fUpLiftForce, float fUprightTorque )
{
	static UFunction* pFnSetAutoRightUpForceAndTorque = NULL;

	if ( ! pFnSetAutoRightUpForceAndTorque )
		pFnSetAutoRightUpForceAndTorque = (UFunction*) UObject::GObjObjects()->Data[ 52215 ];

	UBioCheatManager_execSetAutoRightUpForceAndTorque_Parms SetAutoRightUpForceAndTorque_Parms;
	SetAutoRightUpForceAndTorque_Parms.fUpLiftForce = fUpLiftForce;
	SetAutoRightUpForceAndTorque_Parms.fUprightTorque = fUprightTorque;

	this->ProcessEvent ( pFnSetAutoRightUpForceAndTorque, &SetAutoRightUpForceAndTorque_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetVehicleCOMOffsetZ
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fOffsetZ                       ( CPF_Parm )

void UBioCheatManager::SetVehicleCOMOffsetZ ( float fOffsetZ )
{
	static UFunction* pFnSetVehicleCOMOffsetZ = NULL;

	if ( ! pFnSetVehicleCOMOffsetZ )
		pFnSetVehicleCOMOffsetZ = (UFunction*) UObject::GObjObjects()->Data[ 52212 ];

	UBioCheatManager_execSetVehicleCOMOffsetZ_Parms SetVehicleCOMOffsetZ_Parms;
	SetVehicleCOMOffsetZ_Parms.fOffsetZ = fOffsetZ;

	this->ProcessEvent ( pFnSetVehicleCOMOffsetZ, &SetVehicleCOMOffsetZ_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Mark
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sComment                       ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Mark ( struct FString sComment )
{
	static UFunction* pFnMark = NULL;

	if ( ! pFnMark )
		pFnMark = (UFunction*) UObject::GObjObjects()->Data[ 52210 ];

	UBioCheatManager_execMark_Parms Mark_Parms;
	memcpy ( &Mark_Parms.sComment, &sComment, 0x10 );

	pFnMark->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMark, &Mark_Parms, NULL );

	pFnMark->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.RecoverFromBleedOut
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::RecoverFromBleedOut ( )
{
	static UFunction* pFnRecoverFromBleedOut = NULL;

	if ( ! pFnRecoverFromBleedOut )
		pFnRecoverFromBleedOut = (UFunction*) UObject::GObjObjects()->Data[ 52209 ];

	UBioCheatManager_execRecoverFromBleedOut_Parms RecoverFromBleedOut_Parms;

	this->ProcessEvent ( pFnRecoverFromBleedOut, &RecoverFromBleedOut_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ClearDebugLines
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ClearDebugLines ( )
{
	static UFunction* pFnClearDebugLines = NULL;

	if ( ! pFnClearDebugLines )
		pFnClearDebugLines = (UFunction*) UObject::GObjObjects()->Data[ 52207 ];

	UBioCheatManager_execClearDebugLines_Parms ClearDebugLines_Parms;

	this->ProcessEvent ( pFnClearDebugLines, &ClearDebugLines_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetRenegade
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// int                            Points                         ( CPF_Parm )

void UBioCheatManager::SetRenegade ( int Points )
{
	static UFunction* pFnSetRenegade = NULL;

	if ( ! pFnSetRenegade )
		pFnSetRenegade = (UFunction*) UObject::GObjObjects()->Data[ 52205 ];

	UBioCheatManager_execSetRenegade_Parms SetRenegade_Parms;
	SetRenegade_Parms.Points = Points;

	this->ProcessEvent ( pFnSetRenegade, &SetRenegade_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetParagon
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// int                            Points                         ( CPF_Parm )

void UBioCheatManager::SetParagon ( int Points )
{
	static UFunction* pFnSetParagon = NULL;

	if ( ! pFnSetParagon )
		pFnSetParagon = (UFunction*) UObject::GObjObjects()->Data[ 52203 ];

	UBioCheatManager_execSetParagon_Parms SetParagon_Parms;
	SetParagon_Parms.Points = Points;

	this->ProcessEvent ( pFnSetParagon, &SetParagon_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GameOver
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GameOver ( )
{
	static UFunction* pFnGameOver = NULL;

	if ( ! pFnGameOver )
		pFnGameOver = (UFunction*) UObject::GObjObjects()->Data[ 52201 ];

	UBioCheatManager_execGameOver_Parms GameOver_Parms;

	this->ProcessEvent ( pFnGameOver, &GameOver_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AddPowerAimingInfoToList
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vStartLocation1                ( CPF_Parm )
// struct FVector                 vEndLocation1                  ( CPF_Parm )
// struct FVector                 vStartLocation2                ( CPF_Parm )
// struct FVector                 vEndLocation2                  ( CPF_Parm )

void UBioCheatManager::eventAddPowerAimingInfoToList ( struct FVector vStartLocation1, struct FVector vEndLocation1, struct FVector vStartLocation2, struct FVector vEndLocation2 )
{
	static UFunction* pFnAddPowerAimingInfoToList = NULL;

	if ( ! pFnAddPowerAimingInfoToList )
		pFnAddPowerAimingInfoToList = (UFunction*) UObject::GObjObjects()->Data[ 52195 ];

	UBioCheatManager_eventAddPowerAimingInfoToList_Parms AddPowerAimingInfoToList_Parms;
	memcpy ( &AddPowerAimingInfoToList_Parms.vStartLocation1, &vStartLocation1, 0xC );
	memcpy ( &AddPowerAimingInfoToList_Parms.vEndLocation1, &vEndLocation1, 0xC );
	memcpy ( &AddPowerAimingInfoToList_Parms.vStartLocation2, &vStartLocation2, 0xC );
	memcpy ( &AddPowerAimingInfoToList_Parms.vEndLocation2, &vEndLocation2, 0xC );

	this->ProcessEvent ( pFnAddPowerAimingInfoToList, &AddPowerAimingInfoToList_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowRecentPowers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ShowRecentPowers ( )
{
	static UFunction* pFnShowRecentPowers = NULL;

	if ( ! pFnShowRecentPowers )
		pFnShowRecentPowers = (UFunction*) UObject::GObjObjects()->Data[ 52189 ];

	UBioCheatManager_execShowRecentPowers_Parms ShowRecentPowers_Parms;

	this->ProcessEvent ( pFnShowRecentPowers, &ShowRecentPowers_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AddPowerInfoToList
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sPowerInfo                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::eventAddPowerInfoToList ( struct FString sPowerInfo )
{
	static UFunction* pFnAddPowerInfoToList = NULL;

	if ( ! pFnAddPowerInfoToList )
		pFnAddPowerInfoToList = (UFunction*) UObject::GObjObjects()->Data[ 52187 ];

	UBioCheatManager_eventAddPowerInfoToList_Parms AddPowerInfoToList_Parms;
	memcpy ( &AddPowerInfoToList_Parms.sPowerInfo, &sPowerInfo, 0x10 );

	this->ProcessEvent ( pFnAddPowerInfoToList, &AddPowerInfoToList_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DisplayPowerList
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 oHUD                           ( CPF_Parm )

void UBioCheatManager::DisplayPowerList ( class ABioHUD* oHUD )
{
	static UFunction* pFnDisplayPowerList = NULL;

	if ( ! pFnDisplayPowerList )
		pFnDisplayPowerList = (UFunction*) UObject::GObjObjects()->Data[ 52182 ];

	UBioCheatManager_execDisplayPowerList_Parms DisplayPowerList_Parms;
	DisplayPowerList_Parms.oHUD = oHUD;

	this->ProcessEvent ( pFnDisplayPowerList, &DisplayPowerList_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ClearPowerList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ClearPowerList ( )
{
	static UFunction* pFnClearPowerList = NULL;

	if ( ! pFnClearPowerList )
		pFnClearPowerList = (UFunction*) UObject::GObjObjects()->Data[ 52181 ];

	UBioCheatManager_execClearPowerList_Parms ClearPowerList_Parms;

	this->ProcessEvent ( pFnClearPowerList, &ClearPowerList_Parms, NULL );
};

// Function SFXGame.BioCheatManager.TogglePowerList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TogglePowerList ( )
{
	static UFunction* pFnTogglePowerList = NULL;

	if ( ! pFnTogglePowerList )
		pFnTogglePowerList = (UFunction*) UObject::GObjObjects()->Data[ 52180 ];

	UBioCheatManager_execTogglePowerList_Parms TogglePowerList_Parms;

	this->ProcessEvent ( pFnTogglePowerList, &TogglePowerList_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetVehicleExitLog
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bStatus                        ( CPF_Parm )

void UBioCheatManager::SetVehicleExitLog ( unsigned long bStatus )
{
	static UFunction* pFnSetVehicleExitLog = NULL;

	if ( ! pFnSetVehicleExitLog )
		pFnSetVehicleExitLog = (UFunction*) UObject::GObjObjects()->Data[ 52176 ];

	UBioCheatManager_execSetVehicleExitLog_Parms SetVehicleExitLog_Parms;
	SetVehicleExitLog_Parms.bStatus = bStatus;

	this->ProcessEvent ( pFnSetVehicleExitLog, &SetVehicleExitLog_Parms, NULL );
};

// Function SFXGame.BioCheatManager.MakeInvulnerable
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// struct FString                 sWhitespaceDelimitedArgs       ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::MakeInvulnerable ( struct FString sWhitespaceDelimitedArgs )
{
	static UFunction* pFnMakeInvulnerable = NULL;

	if ( ! pFnMakeInvulnerable )
		pFnMakeInvulnerable = (UFunction*) UObject::GObjObjects()->Data[ 52172 ];

	UBioCheatManager_execMakeInvulnerable_Parms MakeInvulnerable_Parms;
	memcpy ( &MakeInvulnerable_Parms.sWhitespaceDelimitedArgs, &sWhitespaceDelimitedArgs, 0x10 );

	this->ProcessEvent ( pFnMakeInvulnerable, &MakeInvulnerable_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleCoverMarkerDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleCoverMarkerDebug ( )
{
	static UFunction* pFnToggleCoverMarkerDebug = NULL;

	if ( ! pFnToggleCoverMarkerDebug )
		pFnToggleCoverMarkerDebug = (UFunction*) UObject::GObjObjects()->Data[ 52169 ];

	UBioCheatManager_execToggleCoverMarkerDebug_Parms ToggleCoverMarkerDebug_Parms;

	this->ProcessEvent ( pFnToggleCoverMarkerDebug, &ToggleCoverMarkerDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleCoverAlignDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleCoverAlignDebug ( )
{
	static UFunction* pFnToggleCoverAlignDebug = NULL;

	if ( ! pFnToggleCoverAlignDebug )
		pFnToggleCoverAlignDebug = (UFunction*) UObject::GObjObjects()->Data[ 52167 ];

	UBioCheatManager_execToggleCoverAlignDebug_Parms ToggleCoverAlignDebug_Parms;

	this->ProcessEvent ( pFnToggleCoverAlignDebug, &ToggleCoverAlignDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleCoverDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleCoverDebug ( )
{
	static UFunction* pFnToggleCoverDebug = NULL;

	if ( ! pFnToggleCoverDebug )
		pFnToggleCoverDebug = (UFunction*) UObject::GObjObjects()->Data[ 52165 ];

	UBioCheatManager_execToggleCoverDebug_Parms ToggleCoverDebug_Parms;

	this->ProcessEvent ( pFnToggleCoverDebug, &ToggleCoverDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetCurvePixelError
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// struct FName                   nmPanel                        ( CPF_Parm )
// float                          fError                         ( CPF_Parm )

void UBioCheatManager::SetCurvePixelError ( struct FName nmPanel, float fError )
{
	static UFunction* pFnSetCurvePixelError = NULL;

	if ( ! pFnSetCurvePixelError )
		pFnSetCurvePixelError = (UFunction*) UObject::GObjObjects()->Data[ 52158 ];

	UBioCheatManager_execSetCurvePixelError_Parms SetCurvePixelError_Parms;
	memcpy ( &SetCurvePixelError_Parms.nmPanel, &nmPanel, 0x8 );
	SetCurvePixelError_Parms.fError = fError;

	this->ProcessEvent ( pFnSetCurvePixelError, &SetCurvePixelError_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleEdgeAA
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// struct FName                   nmPanel                        ( CPF_Parm )

void UBioCheatManager::ToggleEdgeAA ( struct FName nmPanel )
{
	static UFunction* pFnToggleEdgeAA = NULL;

	if ( ! pFnToggleEdgeAA )
		pFnToggleEdgeAA = (UFunction*) UObject::GObjObjects()->Data[ 52152 ];

	UBioCheatManager_execToggleEdgeAA_Parms ToggleEdgeAA_Parms;
	memcpy ( &ToggleEdgeAA_Parms.nmPanel, &nmPanel, 0x8 );

	this->ProcessEvent ( pFnToggleEdgeAA, &ToggleEdgeAA_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DisplayPowerImpactText
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 oHUD                           ( CPF_Parm )

void UBioCheatManager::DisplayPowerImpactText ( class ABioHUD* oHUD )
{
	static UFunction* pFnDisplayPowerImpactText = NULL;

	if ( ! pFnDisplayPowerImpactText )
		pFnDisplayPowerImpactText = (UFunction*) UObject::GObjObjects()->Data[ 52147 ];

	UBioCheatManager_execDisplayPowerImpactText_Parms DisplayPowerImpactText_Parms;
	DisplayPowerImpactText_Parms.oHUD = oHUD;

	this->ProcessEvent ( pFnDisplayPowerImpactText, &DisplayPowerImpactText_Parms, NULL );
};

// Function SFXGame.BioCheatManager.TogglePowerImpact
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TogglePowerImpact ( )
{
	static UFunction* pFnTogglePowerImpact = NULL;

	if ( ! pFnTogglePowerImpact )
		pFnTogglePowerImpact = (UFunction*) UObject::GObjObjects()->Data[ 52146 ];

	UBioCheatManager_execTogglePowerImpact_Parms TogglePowerImpact_Parms;

	this->ProcessEvent ( pFnTogglePowerImpact, &TogglePowerImpact_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableBleedOut
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::EnableBleedOut ( unsigned long B )
{
	static UFunction* pFnEnableBleedOut = NULL;

	if ( ! pFnEnableBleedOut )
		pFnEnableBleedOut = (UFunction*) UObject::GObjObjects()->Data[ 52144 ];

	UBioCheatManager_execEnableBleedOut_Parms EnableBleedOut_Parms;
	EnableBleedOut_Parms.B = B;

	this->ProcessEvent ( pFnEnableBleedOut, &EnableBleedOut_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleShowAlignmentGains
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleShowAlignmentGains ( )
{
	static UFunction* pFnToggleShowAlignmentGains = NULL;

	if ( ! pFnToggleShowAlignmentGains )
		pFnToggleShowAlignmentGains = (UFunction*) UObject::GObjObjects()->Data[ 52141 ];

	UBioCheatManager_execToggleShowAlignmentGains_Parms ToggleShowAlignmentGains_Parms;

	this->ProcessEvent ( pFnToggleShowAlignmentGains, &ToggleShowAlignmentGains_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetGrenadeAttribute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmAttribute                    ( CPF_Parm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::SetGrenadeAttribute ( struct FName nmAttribute, struct FString sValue )
{
	static UFunction* pFnSetGrenadeAttribute = NULL;

	if ( ! pFnSetGrenadeAttribute )
		pFnSetGrenadeAttribute = (UFunction*) UObject::GObjObjects()->Data[ 52133 ];

	UBioCheatManager_execSetGrenadeAttribute_Parms SetGrenadeAttribute_Parms;
	memcpy ( &SetGrenadeAttribute_Parms.nmAttribute, &nmAttribute, 0x8 );
	memcpy ( &SetGrenadeAttribute_Parms.sValue, &sValue, 0x10 );

	this->ProcessEvent ( pFnSetGrenadeAttribute, &SetGrenadeAttribute_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ResetTrilogyData
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ResetTrilogyData ( )
{
	static UFunction* pFnResetTrilogyData = NULL;

	if ( ! pFnResetTrilogyData )
		pFnResetTrilogyData = (UFunction*) UObject::GObjObjects()->Data[ 52132 ];

	UBioCheatManager_execResetTrilogyData_Parms ResetTrilogyData_Parms;

	this->ProcessEvent ( pFnResetTrilogyData, &ResetTrilogyData_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ResetTrilogyStat
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )

void UBioCheatManager::ResetTrilogyStat ( int ProfileSettingId )
{
	static UFunction* pFnResetTrilogyStat = NULL;

	if ( ! pFnResetTrilogyStat )
		pFnResetTrilogyStat = (UFunction*) UObject::GObjObjects()->Data[ 52129 ];

	UBioCheatManager_execResetTrilogyStat_Parms ResetTrilogyStat_Parms;
	ResetTrilogyStat_Parms.ProfileSettingId = ProfileSettingId;

	this->ProcessEvent ( pFnResetTrilogyStat, &ResetTrilogyStat_Parms, NULL );
};

// Function SFXGame.BioCheatManager.IncrementTrilogyStat
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// int                            ProfileSettingId               ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::IncrementTrilogyStat ( int ProfileSettingId, int Amount )
{
	static UFunction* pFnIncrementTrilogyStat = NULL;

	if ( ! pFnIncrementTrilogyStat )
		pFnIncrementTrilogyStat = (UFunction*) UObject::GObjObjects()->Data[ 52126 ];

	UBioCheatManager_execIncrementTrilogyStat_Parms IncrementTrilogyStat_Parms;
	IncrementTrilogyStat_Parms.ProfileSettingId = ProfileSettingId;
	IncrementTrilogyStat_Parms.Amount = Amount;

	this->ProcessEvent ( pFnIncrementTrilogyStat, &IncrementTrilogyStat_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UpdateEndGameAchievements
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::UpdateEndGameAchievements ( )
{
	static UFunction* pFnUpdateEndGameAchievements = NULL;

	if ( ! pFnUpdateEndGameAchievements )
		pFnUpdateEndGameAchievements = (UFunction*) UObject::GObjObjects()->Data[ 52123 ];

	UBioCheatManager_execUpdateEndGameAchievements_Parms UpdateEndGameAchievements_Parms;

	this->ProcessEvent ( pFnUpdateEndGameAchievements, &UpdateEndGameAchievements_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UnlockAchievementRange
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nLowerAchievementID            ( CPF_Parm )
// int                            nUpperAchievementID            ( CPF_Parm )

void UBioCheatManager::UnlockAchievementRange ( int nLowerAchievementID, int nUpperAchievementID )
{
	static UFunction* pFnUnlockAchievementRange = NULL;

	if ( ! pFnUnlockAchievementRange )
		pFnUnlockAchievementRange = (UFunction*) UObject::GObjObjects()->Data[ 52118 ];

	UBioCheatManager_execUnlockAchievementRange_Parms UnlockAchievementRange_Parms;
	UnlockAchievementRange_Parms.nLowerAchievementID = nLowerAchievementID;
	UnlockAchievementRange_Parms.nUpperAchievementID = nUpperAchievementID;

	this->ProcessEvent ( pFnUnlockAchievementRange, &UnlockAchievementRange_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UnlockAchievement
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nAchievementID                 ( CPF_Parm )

void UBioCheatManager::UnlockAchievement ( int nAchievementID )
{
	static UFunction* pFnUnlockAchievement = NULL;

	if ( ! pFnUnlockAchievement )
		pFnUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 52112 ];

	UBioCheatManager_execUnlockAchievement_Parms UnlockAchievement_Parms;
	UnlockAchievement_Parms.nAchievementID = nAchievementID;

	this->ProcessEvent ( pFnUnlockAchievement, &UnlockAchievement_Parms, NULL );
};

// Function SFXGame.BioCheatManager.InitPlotManagerValueByIndex
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FString                 sVariableType                  ( CPF_Parm | CPF_NeedCtorLink )
// float                          fValue                         ( CPF_Parm )

void UBioCheatManager::InitPlotManagerValueByIndex ( int nIndex, struct FString sVariableType, float fValue )
{
	static UFunction* pFnInitPlotManagerValueByIndex = NULL;

	if ( ! pFnInitPlotManagerValueByIndex )
		pFnInitPlotManagerValueByIndex = (UFunction*) UObject::GObjObjects()->Data[ 52105 ];

	UBioCheatManager_execInitPlotManagerValueByIndex_Parms InitPlotManagerValueByIndex_Parms;
	InitPlotManagerValueByIndex_Parms.nIndex = nIndex;
	memcpy ( &InitPlotManagerValueByIndex_Parms.sVariableType, &sVariableType, 0x10 );
	InitPlotManagerValueByIndex_Parms.fValue = fValue;

	this->ProcessEvent ( pFnInitPlotManagerValueByIndex, &InitPlotManagerValueByIndex_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DumpPlotManagerValueByIndex
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FString                 sVariableType                  ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::DumpPlotManagerValueByIndex ( int nIndex, struct FString sVariableType )
{
	static UFunction* pFnDumpPlotManagerValueByIndex = NULL;

	if ( ! pFnDumpPlotManagerValueByIndex )
		pFnDumpPlotManagerValueByIndex = (UFunction*) UObject::GObjObjects()->Data[ 52092 ];

	UBioCheatManager_execDumpPlotManagerValueByIndex_Parms DumpPlotManagerValueByIndex_Parms;
	DumpPlotManagerValueByIndex_Parms.nIndex = nIndex;
	memcpy ( &DumpPlotManagerValueByIndex_Parms.sVariableType, &sVariableType, 0x10 );

	this->ProcessEvent ( pFnDumpPlotManagerValueByIndex, &DumpPlotManagerValueByIndex_Parms, NULL );
};

// Function SFXGame.BioCheatManager.InitAchievementStat
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 sAchievement                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            nAmount                        ( CPF_Parm )

void UBioCheatManager::InitAchievementStat ( struct FString sAchievement, int nAmount )
{
	static UFunction* pFnInitAchievementStat = NULL;

	if ( ! pFnInitAchievementStat )
		pFnInitAchievementStat = (UFunction*) UObject::GObjObjects()->Data[ 52087 ];

	UBioCheatManager_execInitAchievementStat_Parms InitAchievementStat_Parms;
	memcpy ( &InitAchievementStat_Parms.sAchievement, &sAchievement, 0x10 );
	InitAchievementStat_Parms.nAmount = nAmount;

	this->ProcessEvent ( pFnInitAchievementStat, &InitAchievementStat_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DumpAchievementStats
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DumpAchievementStats ( )
{
	static UFunction* pFnDumpAchievementStats = NULL;

	if ( ! pFnDumpAchievementStats )
		pFnDumpAchievementStats = (UFunction*) UObject::GObjObjects()->Data[ 52084 ];

	UBioCheatManager_execDumpAchievementStats_Parms DumpAchievementStats_Parms;

	this->ProcessEvent ( pFnDumpAchievementStats, &DumpAchievementStats_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnablePowerCooldown
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UBioCheatManager::EnablePowerCooldown ( unsigned long bEnable )
{
	static UFunction* pFnEnablePowerCooldown = NULL;

	if ( ! pFnEnablePowerCooldown )
		pFnEnablePowerCooldown = (UFunction*) UObject::GObjObjects()->Data[ 52081 ];

	UBioCheatManager_execEnablePowerCooldown_Parms EnablePowerCooldown_Parms;
	EnablePowerCooldown_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnablePowerCooldown, &EnablePowerCooldown_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ApplyGrime
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// float                          a_fCombatGrime                 ( CPF_Parm )
// float                          a_fDirtGrime                   ( CPF_Parm )
// float                          a_fGrimeGrime                  ( CPF_Parm )
// struct FName                   nmPawn                         ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::ApplyGrime ( float a_fCombatGrime, float a_fDirtGrime, float a_fGrimeGrime, struct FName nmPawn )
{
	static UFunction* pFnApplyGrime = NULL;

	if ( ! pFnApplyGrime )
		pFnApplyGrime = (UFunction*) UObject::GObjObjects()->Data[ 52075 ];

	UBioCheatManager_execApplyGrime_Parms ApplyGrime_Parms;
	ApplyGrime_Parms.a_fCombatGrime = a_fCombatGrime;
	ApplyGrime_Parms.a_fDirtGrime = a_fDirtGrime;
	ApplyGrime_Parms.a_fGrimeGrime = a_fGrimeGrime;
	memcpy ( &ApplyGrime_Parms.nmPawn, &nmPawn, 0x8 );

	this->ProcessEvent ( pFnApplyGrime, &ApplyGrime_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowSquadMembers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ShowSquadMembers ( )
{
	static UFunction* pFnShowSquadMembers = NULL;

	if ( ! pFnShowSquadMembers )
		pFnShowSquadMembers = (UFunction*) UObject::GObjObjects()->Data[ 52072 ];

	UBioCheatManager_execShowSquadMembers_Parms ShowSquadMembers_Parms;

	this->ProcessEvent ( pFnShowSquadMembers, &ShowSquadMembers_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FFScale
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void UBioCheatManager::FFScale ( float F )
{
	static UFunction* pFnFFScale = NULL;

	if ( ! pFnFFScale )
		pFnFFScale = (UFunction*) UObject::GObjObjects()->Data[ 52070 ];

	UBioCheatManager_execFFScale_Parms FFScale_Parms;
	FFScale_Parms.F = F;

	this->ProcessEvent ( pFnFFScale, &FFScale_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FFEnable
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::FFEnable ( unsigned long B )
{
	static UFunction* pFnFFEnable = NULL;

	if ( ! pFnFFEnable )
		pFnFFEnable = (UFunction*) UObject::GObjObjects()->Data[ 52068 ];

	UBioCheatManager_execFFEnable_Parms FFEnable_Parms;
	FFEnable_Parms.B = B;

	this->ProcessEvent ( pFnFFEnable, &FFEnable_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnterCombatStasis
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// float                          fDuration                      ( CPF_Parm )
// unsigned long                  bAllowDamage                   ( CPF_Parm )

void UBioCheatManager::EnterCombatStasis ( struct FName nmPawn, float fDuration, unsigned long bAllowDamage )
{
	static UFunction* pFnEnterCombatStasis = NULL;

	if ( ! pFnEnterCombatStasis )
		pFnEnterCombatStasis = (UFunction*) UObject::GObjObjects()->Data[ 52062 ];

	UBioCheatManager_execEnterCombatStasis_Parms EnterCombatStasis_Parms;
	memcpy ( &EnterCombatStasis_Parms.nmPawn, &nmPawn, 0x8 );
	EnterCombatStasis_Parms.fDuration = fDuration;
	EnterCombatStasis_Parms.bAllowDamage = bAllowDamage;

	this->ProcessEvent ( pFnEnterCombatStasis, &EnterCombatStasis_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UsePower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void UBioCheatManager::UsePower ( struct FName nmPawn, struct FName nmPower )
{
	static UFunction* pFnUsePower = NULL;

	if ( ! pFnUsePower )
		pFnUsePower = (UFunction*) UObject::GObjObjects()->Data[ 52048 ];

	UBioCheatManager_execUsePower_Parms UsePower_Parms;
	memcpy ( &UsePower_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &UsePower_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnUsePower, &UsePower_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetMicPos
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fPos                           ( CPF_Parm )

void UBioCheatManager::SetMicPos ( float fPos )
{
	static UFunction* pFnSetMicPos = NULL;

	if ( ! pFnSetMicPos )
		pFnSetMicPos = (UFunction*) UObject::GObjObjects()->Data[ 52045 ];

	UBioCheatManager_execSetMicPos_Parms SetMicPos_Parms;
	SetMicPos_Parms.fPos = fPos;

	this->ProcessEvent ( pFnSetMicPos, &SetMicPos_Parms, NULL );
};

// Function SFXGame.BioCheatManager.UpgradeVehicle
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            nSlot                          ( CPF_Parm )
// struct FName                   nmItemLabelName                ( CPF_Parm )

void UBioCheatManager::UpgradeVehicle ( int nSlot, struct FName nmItemLabelName )
{
	static UFunction* pFnUpgradeVehicle = NULL;

	if ( ! pFnUpgradeVehicle )
		pFnUpgradeVehicle = (UFunction*) UObject::GObjObjects()->Data[ 52042 ];

	UBioCheatManager_execUpgradeVehicle_Parms UpgradeVehicle_Parms;
	UpgradeVehicle_Parms.nSlot = nSlot;
	memcpy ( &UpgradeVehicle_Parms.nmItemLabelName, &nmItemLabelName, 0x8 );

	pFnUpgradeVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpgradeVehicle, &UpgradeVehicle_Parms, NULL );

	pFnUpgradeVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.TogglePlayerMovementDump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TogglePlayerMovementDump ( )
{
	static UFunction* pFnTogglePlayerMovementDump = NULL;

	if ( ! pFnTogglePlayerMovementDump )
		pFnTogglePlayerMovementDump = (UFunction*) UObject::GObjObjects()->Data[ 52040 ];

	UBioCheatManager_execTogglePlayerMovementDump_Parms TogglePlayerMovementDump_Parms;

	this->ProcessEvent ( pFnTogglePlayerMovementDump, &TogglePlayerMovementDump_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowMountVolumes
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UBioCheatManager::ShowMountVolumes ( unsigned long bValue )
{
	static UFunction* pFnShowMountVolumes = NULL;

	if ( ! pFnShowMountVolumes )
		pFnShowMountVolumes = (UFunction*) UObject::GObjObjects()->Data[ 52038 ];

	UBioCheatManager_execShowMountVolumes_Parms ShowMountVolumes_Parms;
	ShowMountVolumes_Parms.bValue = bValue;

	pFnShowMountVolumes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowMountVolumes, &ShowMountVolumes_Parms, NULL );

	pFnShowMountVolumes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.EnablePowerRelativeVelocity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nEnable                        ( CPF_Parm )

void UBioCheatManager::EnablePowerRelativeVelocity ( int nEnable )
{
	static UFunction* pFnEnablePowerRelativeVelocity = NULL;

	if ( ! pFnEnablePowerRelativeVelocity )
		pFnEnablePowerRelativeVelocity = (UFunction*) UObject::GObjObjects()->Data[ 52035 ];

	UBioCheatManager_execEnablePowerRelativeVelocity_Parms EnablePowerRelativeVelocity_Parms;
	EnablePowerRelativeVelocity_Parms.nEnable = nEnable;

	this->ProcessEvent ( pFnEnablePowerRelativeVelocity, &EnablePowerRelativeVelocity_Parms, NULL );
};

// Function SFXGame.BioCheatManager.listai
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::listai ( )
{
	static UFunction* pFnlistai = NULL;

	if ( ! pFnlistai )
		pFnlistai = (UFunction*) UObject::GObjObjects()->Data[ 52033 ];

	UBioCheatManager_execlistai_Parms listai_Parms;

	this->ProcessEvent ( pFnlistai, &listai_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetPlayerLocFPS
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::GetPlayerLocFPS ( )
{
	static UFunction* pFnGetPlayerLocFPS = NULL;

	if ( ! pFnGetPlayerLocFPS )
		pFnGetPlayerLocFPS = (UFunction*) UObject::GObjObjects()->Data[ 52032 ];

	UBioCheatManager_execGetPlayerLocFPS_Parms GetPlayerLocFPS_Parms;

	pFnGetPlayerLocFPS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerLocFPS, &GetPlayerLocFPS_Parms, NULL );

	pFnGetPlayerLocFPS->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DisplayStringID
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  i_bDisplay                     ( CPF_Parm )

void UBioCheatManager::DisplayStringID ( unsigned long i_bDisplay )
{
	static UFunction* pFnDisplayStringID = NULL;

	if ( ! pFnDisplayStringID )
		pFnDisplayStringID = (UFunction*) UObject::GObjObjects()->Data[ 52030 ];

	UBioCheatManager_execDisplayStringID_Parms DisplayStringID_Parms;
	DisplayStringID_Parms.i_bDisplay = i_bDisplay;

	pFnDisplayStringID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayStringID, &DisplayStringID_Parms, NULL );

	pFnDisplayStringID->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.CodexAudit
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::CodexAudit ( )
{
	static UFunction* pFnCodexAudit = NULL;

	if ( ! pFnCodexAudit )
		pFnCodexAudit = (UFunction*) UObject::GObjObjects()->Data[ 52029 ];

	UBioCheatManager_execCodexAudit_Parms CodexAudit_Parms;

	pFnCodexAudit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCodexAudit, &CodexAudit_Parms, NULL );

	pFnCodexAudit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.JournalAudit
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::JournalAudit ( )
{
	static UFunction* pFnJournalAudit = NULL;

	if ( ! pFnJournalAudit )
		pFnJournalAudit = (UFunction*) UObject::GObjObjects()->Data[ 52028 ];

	UBioCheatManager_execJournalAudit_Parms JournalAudit_Parms;

	pFnJournalAudit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnJournalAudit, &JournalAudit_Parms, NULL );

	pFnJournalAudit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DebugSpawnActor
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sActorResource                 ( CPF_Parm | CPF_NeedCtorLink )
// float                          fDistanceFromPlayer            ( CPF_Parm )
// float                          fLifeSpan                      ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::DebugSpawnActor ( struct FString sActorResource, float fDistanceFromPlayer, float fLifeSpan )
{
	static UFunction* pFnDebugSpawnActor = NULL;

	if ( ! pFnDebugSpawnActor )
		pFnDebugSpawnActor = (UFunction*) UObject::GObjObjects()->Data[ 52024 ];

	UBioCheatManager_execDebugSpawnActor_Parms DebugSpawnActor_Parms;
	memcpy ( &DebugSpawnActor_Parms.sActorResource, &sActorResource, 0x10 );
	DebugSpawnActor_Parms.fDistanceFromPlayer = fDistanceFromPlayer;
	DebugSpawnActor_Parms.fLifeSpan = fLifeSpan;

	pFnDebugSpawnActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugSpawnActor, &DebugSpawnActor_Parms, NULL );

	pFnDebugSpawnActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DestroySpawnedVehicles
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::DestroySpawnedVehicles ( )
{
	static UFunction* pFnDestroySpawnedVehicles = NULL;

	if ( ! pFnDestroySpawnedVehicles )
		pFnDestroySpawnedVehicles = (UFunction*) UObject::GObjObjects()->Data[ 52023 ];

	UBioCheatManager_execDestroySpawnedVehicles_Parms DestroySpawnedVehicles_Parms;

	pFnDestroySpawnedVehicles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroySpawnedVehicles, &DestroySpawnedVehicles_Parms, NULL );

	pFnDestroySpawnedVehicles->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.SpawnVehicle
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::SpawnVehicle ( )
{
	static UFunction* pFnSpawnVehicle = NULL;

	if ( ! pFnSpawnVehicle )
		pFnSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 52022 ];

	UBioCheatManager_execSpawnVehicle_Parms SpawnVehicle_Parms;

	pFnSpawnVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnVehicle, &SpawnVehicle_Parms, NULL );

	pFnSpawnVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.FeignDeath
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::FeignDeath ( struct FName nmPawn, unsigned long B )
{
	static UFunction* pFnFeignDeath = NULL;

	if ( ! pFnFeignDeath )
		pFnFeignDeath = (UFunction*) UObject::GObjObjects()->Data[ 52018 ];

	UBioCheatManager_execFeignDeath_Parms FeignDeath_Parms;
	memcpy ( &FeignDeath_Parms.nmPawn, &nmPawn, 0x8 );
	FeignDeath_Parms.B = B;

	this->ProcessEvent ( pFnFeignDeath, &FeignDeath_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetPowerAttribute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )
// struct FName                   nmAttribute                    ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void UBioCheatManager::SetPowerAttribute ( struct FName nmPawn, struct FName nmPower, struct FName nmAttribute, float fValue )
{
	static UFunction* pFnSetPowerAttribute = NULL;

	if ( ! pFnSetPowerAttribute )
		pFnSetPowerAttribute = (UFunction*) UObject::GObjObjects()->Data[ 52001 ];

	UBioCheatManager_execSetPowerAttribute_Parms SetPowerAttribute_Parms;
	memcpy ( &SetPowerAttribute_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &SetPowerAttribute_Parms.nmPower, &nmPower, 0x8 );
	memcpy ( &SetPowerAttribute_Parms.nmAttribute, &nmAttribute, 0x8 );
	SetPowerAttribute_Parms.fValue = fValue;

	this->ProcessEvent ( pFnSetPowerAttribute, &SetPowerAttribute_Parms, NULL );
};

// Function SFXGame.BioCheatManager.TogglePowerAiming
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TogglePowerAiming ( )
{
	static UFunction* pFnTogglePowerAiming = NULL;

	if ( ! pFnTogglePowerAiming )
		pFnTogglePowerAiming = (UFunction*) UObject::GObjObjects()->Data[ 51999 ];

	UBioCheatManager_execTogglePowerAiming_Parms TogglePowerAiming_Parms;

	this->ProcessEvent ( pFnTogglePowerAiming, &TogglePowerAiming_Parms, NULL );
};

// Function SFXGame.BioCheatManager.HackAI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 sWhitespaceDelimitedNamedParameters ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::HackAI ( struct FString sWhitespaceDelimitedNamedParameters )
{
	static UFunction* pFnHackAI = NULL;

	if ( ! pFnHackAI )
		pFnHackAI = (UFunction*) UObject::GObjObjects()->Data[ 51980 ];

	UBioCheatManager_execHackAI_Parms HackAI_Parms;
	memcpy ( &HackAI_Parms.sWhitespaceDelimitedNamedParameters, &sWhitespaceDelimitedNamedParameters, 0x10 );

	this->ProcessEvent ( pFnHackAI, &HackAI_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PlayXenonMovie
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sMoviePath                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::PlayXenonMovie ( struct FString sMoviePath )
{
	static UFunction* pFnPlayXenonMovie = NULL;

	if ( ! pFnPlayXenonMovie )
		pFnPlayXenonMovie = (UFunction*) UObject::GObjObjects()->Data[ 51978 ];

	UBioCheatManager_execPlayXenonMovie_Parms PlayXenonMovie_Parms;
	memcpy ( &PlayXenonMovie_Parms.sMoviePath, &sMoviePath, 0x10 );

	pFnPlayXenonMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayXenonMovie, &PlayXenonMovie_Parms, NULL );

	pFnPlayXenonMovie->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DebugPlayerSquadCombatAI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bVal                           ( CPF_Parm )

void UBioCheatManager::DebugPlayerSquadCombatAI ( unsigned long bVal )
{
	static UFunction* pFnDebugPlayerSquadCombatAI = NULL;

	if ( ! pFnDebugPlayerSquadCombatAI )
		pFnDebugPlayerSquadCombatAI = (UFunction*) UObject::GObjObjects()->Data[ 51975 ];

	UBioCheatManager_execDebugPlayerSquadCombatAI_Parms DebugPlayerSquadCombatAI_Parms;
	DebugPlayerSquadCombatAI_Parms.bVal = bVal;

	this->ProcessEvent ( pFnDebugPlayerSquadCombatAI, &DebugPlayerSquadCombatAI_Parms, NULL );
};

// Function SFXGame.BioCheatManager.StasisAll
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::StasisAll ( )
{
	static UFunction* pFnStasisAll = NULL;

	if ( ! pFnStasisAll )
		pFnStasisAll = (UFunction*) UObject::GObjObjects()->Data[ 51972 ];

	UBioCheatManager_execStasisAll_Parms StasisAll_Parms;

	this->ProcessEvent ( pFnStasisAll, &StasisAll_Parms, NULL );
};

// Function SFXGame.BioCheatManager.VINCEToAreaMapGeneric
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   genericString                  ( CPF_Parm )

void UBioCheatManager::VINCEToAreaMapGeneric ( struct FName genericString )
{
	static UFunction* pFnVINCEToAreaMapGeneric = NULL;

	if ( ! pFnVINCEToAreaMapGeneric )
		pFnVINCEToAreaMapGeneric = (UFunction*) UObject::GObjObjects()->Data[ 51970 ];

	UBioCheatManager_execVINCEToAreaMapGeneric_Parms VINCEToAreaMapGeneric_Parms;
	memcpy ( &VINCEToAreaMapGeneric_Parms.genericString, &genericString, 0x8 );

	pFnVINCEToAreaMapGeneric->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVINCEToAreaMapGeneric, &VINCEToAreaMapGeneric_Parms, NULL );

	pFnVINCEToAreaMapGeneric->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAll
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::GiveAll ( )
{
	static UFunction* pFnGiveAll = NULL;

	if ( ! pFnGiveAll )
		pFnGiveAll = (UFunction*) UObject::GObjObjects()->Data[ 51969 ];

	UBioCheatManager_execGiveAll_Parms GiveAll_Parms;

	pFnGiveAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAll, &GiveAll_Parms, NULL );

	pFnGiveAll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveSuperArmor
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::GiveSuperArmor ( )
{
	static UFunction* pFnGiveSuperArmor = NULL;

	if ( ! pFnGiveSuperArmor )
		pFnGiveSuperArmor = (UFunction*) UObject::GObjObjects()->Data[ 51968 ];

	UBioCheatManager_execGiveSuperArmor_Parms GiveSuperArmor_Parms;

	pFnGiveSuperArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveSuperArmor, &GiveSuperArmor_Parms, NULL );

	pFnGiveSuperArmor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveSupergun
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::GiveSupergun ( )
{
	static UFunction* pFnGiveSupergun = NULL;

	if ( ! pFnGiveSupergun )
		pFnGiveSupergun = (UFunction*) UObject::GObjObjects()->Data[ 51967 ];

	UBioCheatManager_execGiveSupergun_Parms GiveSupergun_Parms;

	pFnGiveSupergun->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveSupergun, &GiveSupergun_Parms, NULL );

	pFnGiveSupergun->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllXmods
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UBioCheatManager::GiveAllXmods ( )
{
	static UFunction* pFnGiveAllXmods = NULL;

	if ( ! pFnGiveAllXmods )
		pFnGiveAllXmods = (UFunction*) UObject::GObjObjects()->Data[ 51966 ];

	UBioCheatManager_execGiveAllXmods_Parms GiveAllXmods_Parms;

	pFnGiveAllXmods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllXmods, &GiveAllXmods_Parms, NULL );

	pFnGiveAllXmods->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllArmorHuman
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllArmorHuman ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllArmorHuman = NULL;

	if ( ! pFnGiveAllArmorHuman )
		pFnGiveAllArmorHuman = (UFunction*) UObject::GObjObjects()->Data[ 51964 ];

	UBioCheatManager_execGiveAllArmorHuman_Parms GiveAllArmorHuman_Parms;
	memcpy ( &GiveAllArmorHuman_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllArmorHuman->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllArmorHuman, &GiveAllArmorHuman_Parms, NULL );

	pFnGiveAllArmorHuman->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllArmorKrogan
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllArmorKrogan ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllArmorKrogan = NULL;

	if ( ! pFnGiveAllArmorKrogan )
		pFnGiveAllArmorKrogan = (UFunction*) UObject::GObjObjects()->Data[ 51962 ];

	UBioCheatManager_execGiveAllArmorKrogan_Parms GiveAllArmorKrogan_Parms;
	memcpy ( &GiveAllArmorKrogan_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllArmorKrogan->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllArmorKrogan, &GiveAllArmorKrogan_Parms, NULL );

	pFnGiveAllArmorKrogan->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllArmorQuarian
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllArmorQuarian ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllArmorQuarian = NULL;

	if ( ! pFnGiveAllArmorQuarian )
		pFnGiveAllArmorQuarian = (UFunction*) UObject::GObjObjects()->Data[ 51960 ];

	UBioCheatManager_execGiveAllArmorQuarian_Parms GiveAllArmorQuarian_Parms;
	memcpy ( &GiveAllArmorQuarian_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllArmorQuarian->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllArmorQuarian, &GiveAllArmorQuarian_Parms, NULL );

	pFnGiveAllArmorQuarian->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllArmorTurian
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllArmorTurian ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllArmorTurian = NULL;

	if ( ! pFnGiveAllArmorTurian )
		pFnGiveAllArmorTurian = (UFunction*) UObject::GObjObjects()->Data[ 51958 ];

	UBioCheatManager_execGiveAllArmorTurian_Parms GiveAllArmorTurian_Parms;
	memcpy ( &GiveAllArmorTurian_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllArmorTurian->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllArmorTurian, &GiveAllArmorTurian_Parms, NULL );

	pFnGiveAllArmorTurian->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllArmor
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllArmor ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllArmor = NULL;

	if ( ! pFnGiveAllArmor )
		pFnGiveAllArmor = (UFunction*) UObject::GObjObjects()->Data[ 51956 ];

	UBioCheatManager_execGiveAllArmor_Parms GiveAllArmor_Parms;
	memcpy ( &GiveAllArmor_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllArmor, &GiveAllArmor_Parms, NULL );

	pFnGiveAllArmor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllGrenades
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllGrenades ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllGrenades = NULL;

	if ( ! pFnGiveAllGrenades )
		pFnGiveAllGrenades = (UFunction*) UObject::GObjObjects()->Data[ 51954 ];

	UBioCheatManager_execGiveAllGrenades_Parms GiveAllGrenades_Parms;
	memcpy ( &GiveAllGrenades_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllGrenades->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllGrenades, &GiveAllGrenades_Parms, NULL );

	pFnGiveAllGrenades->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllWeapons
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllWeapons ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllWeapons = NULL;

	if ( ! pFnGiveAllWeapons )
		pFnGiveAllWeapons = (UFunction*) UObject::GObjObjects()->Data[ 51952 ];

	UBioCheatManager_execGiveAllWeapons_Parms GiveAllWeapons_Parms;
	memcpy ( &GiveAllWeapons_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllWeapons, &GiveAllWeapons_Parms, NULL );

	pFnGiveAllWeapons->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllBioAmps
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllBioAmps ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllBioAmps = NULL;

	if ( ! pFnGiveAllBioAmps )
		pFnGiveAllBioAmps = (UFunction*) UObject::GObjObjects()->Data[ 51950 ];

	UBioCheatManager_execGiveAllBioAmps_Parms GiveAllBioAmps_Parms;
	memcpy ( &GiveAllBioAmps_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllBioAmps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllBioAmps, &GiveAllBioAmps_Parms, NULL );

	pFnGiveAllBioAmps->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GiveAllOmnitools
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmManufacturer                 ( CPF_Parm )

void UBioCheatManager::GiveAllOmnitools ( struct FName nmManufacturer )
{
	static UFunction* pFnGiveAllOmnitools = NULL;

	if ( ! pFnGiveAllOmnitools )
		pFnGiveAllOmnitools = (UFunction*) UObject::GObjObjects()->Data[ 51948 ];

	UBioCheatManager_execGiveAllOmnitools_Parms GiveAllOmnitools_Parms;
	memcpy ( &GiveAllOmnitools_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveAllOmnitools->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveAllOmnitools, &GiveAllOmnitools_Parms, NULL );

	pFnGiveAllOmnitools->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GuiInventoryEquip
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSlotListIndex                 ( CPF_Parm )

void UBioCheatManager::GuiInventoryEquip ( int nSlotListIndex )
{
	static UFunction* pFnGuiInventoryEquip = NULL;

	if ( ! pFnGuiInventoryEquip )
		pFnGuiInventoryEquip = (UFunction*) UObject::GObjObjects()->Data[ 51946 ];

	UBioCheatManager_execGuiInventoryEquip_Parms GuiInventoryEquip_Parms;
	GuiInventoryEquip_Parms.nSlotListIndex = nSlotListIndex;

	this->ProcessEvent ( pFnGuiInventoryEquip, &GuiInventoryEquip_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GuiInventorySelect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  eSlot                          ( CPF_Parm )

void UBioCheatManager::GuiInventorySelect ( unsigned char eSlot )
{
	static UFunction* pFnGuiInventorySelect = NULL;

	if ( ! pFnGuiInventorySelect )
		pFnGuiInventorySelect = (UFunction*) UObject::GObjObjects()->Data[ 51944 ];

	UBioCheatManager_execGuiInventorySelect_Parms GuiInventorySelect_Parms;
	GuiInventorySelect_Parms.eSlot = eSlot;

	this->ProcessEvent ( pFnGuiInventorySelect, &GuiInventorySelect_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GuiInventorySetTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 sTarget                        ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::GuiInventorySetTarget ( struct FString sTarget )
{
	static UFunction* pFnGuiInventorySetTarget = NULL;

	if ( ! pFnGuiInventorySetTarget )
		pFnGuiInventorySetTarget = (UFunction*) UObject::GObjObjects()->Data[ 51940 ];

	UBioCheatManager_execGuiInventorySetTarget_Parms GuiInventorySetTarget_Parms;
	memcpy ( &GuiInventorySetTarget_Parms.sTarget, &sTarget, 0x10 );

	this->ProcessEvent ( pFnGuiInventorySetTarget, &GuiInventorySetTarget_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableCombatStateLogging
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::EnableCombatStateLogging ( unsigned long B )
{
	static UFunction* pFnEnableCombatStateLogging = NULL;

	if ( ! pFnEnableCombatStateLogging )
		pFnEnableCombatStateLogging = (UFunction*) UObject::GObjObjects()->Data[ 51937 ];

	UBioCheatManager_execEnableCombatStateLogging_Parms EnableCombatStateLogging_Parms;
	EnableCombatStateLogging_Parms.B = B;

	this->ProcessEvent ( pFnEnableCombatStateLogging, &EnableCombatStateLogging_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableVFXSound
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::EnableVFXSound ( unsigned long B )
{
	static UFunction* pFnEnableVFXSound = NULL;

	if ( ! pFnEnableVFXSound )
		pFnEnableVFXSound = (UFunction*) UObject::GObjObjects()->Data[ 51934 ];

	UBioCheatManager_execEnableVFXSound_Parms EnableVFXSound_Parms;
	EnableVFXSound_Parms.B = B;

	this->ProcessEvent ( pFnEnableVFXSound, &EnableVFXSound_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetPlayerSquadMin1Health
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UBioCheatManager::SetPlayerSquadMin1Health ( unsigned long B )
{
	static UFunction* pFnSetPlayerSquadMin1Health = NULL;

	if ( ! pFnSetPlayerSquadMin1Health )
		pFnSetPlayerSquadMin1Health = (UFunction*) UObject::GObjObjects()->Data[ 51929 ];

	UBioCheatManager_execSetPlayerSquadMin1Health_Parms SetPlayerSquadMin1Health_Parms;
	SetPlayerSquadMin1Health_Parms.B = B;

	this->ProcessEvent ( pFnSetPlayerSquadMin1Health, &SetPlayerSquadMin1Health_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DumpPlayPen
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DumpPlayPen ( )
{
	static UFunction* pFnDumpPlayPen = NULL;

	if ( ! pFnDumpPlayPen )
		pFnDumpPlayPen = (UFunction*) UObject::GObjObjects()->Data[ 51927 ];

	UBioCheatManager_execDumpPlayPen_Parms DumpPlayPen_Parms;

	this->ProcessEvent ( pFnDumpPlayPen, &DumpPlayPen_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GrahamDebug_HideAllPanels
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GrahamDebug_HideAllPanels ( )
{
	static UFunction* pFnGrahamDebug_HideAllPanels = NULL;

	if ( ! pFnGrahamDebug_HideAllPanels )
		pFnGrahamDebug_HideAllPanels = (UFunction*) UObject::GObjObjects()->Data[ 51926 ];

	UBioCheatManager_execGrahamDebug_HideAllPanels_Parms GrahamDebug_HideAllPanels_Parms;

	this->ProcessEvent ( pFnGrahamDebug_HideAllPanels, &GrahamDebug_HideAllPanels_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GrahamDebug_ShowAllPanels
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GrahamDebug_ShowAllPanels ( )
{
	static UFunction* pFnGrahamDebug_ShowAllPanels = NULL;

	if ( ! pFnGrahamDebug_ShowAllPanels )
		pFnGrahamDebug_ShowAllPanels = (UFunction*) UObject::GObjObjects()->Data[ 51925 ];

	UBioCheatManager_execGrahamDebug_ShowAllPanels_Parms GrahamDebug_ShowAllPanels_Parms;

	this->ProcessEvent ( pFnGrahamDebug_ShowAllPanels, &GrahamDebug_ShowAllPanels_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleSFHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleSFHUD ( )
{
	static UFunction* pFnToggleSFHUD = NULL;

	if ( ! pFnToggleSFHUD )
		pFnToggleSFHUD = (UFunction*) UObject::GObjObjects()->Data[ 51922 ];

	UBioCheatManager_execToggleSFHUD_Parms ToggleSFHUD_Parms;

	this->ProcessEvent ( pFnToggleSFHUD, &ToggleSFHUD_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetSelectionHalfAngle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::SetSelectionHalfAngle ( float fVal )
{
	static UFunction* pFnSetSelectionHalfAngle = NULL;

	if ( ! pFnSetSelectionHalfAngle )
		pFnSetSelectionHalfAngle = (UFunction*) UObject::GObjObjects()->Data[ 51919 ];

	UBioCheatManager_execSetSelectionHalfAngle_Parms SetSelectionHalfAngle_Parms;
	SetSelectionHalfAngle_Parms.fVal = fVal;

	this->ProcessEvent ( pFnSetSelectionHalfAngle, &SetSelectionHalfAngle_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PaperDoll
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::PaperDoll ( struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnPaperDoll = NULL;

	if ( ! pFnPaperDoll )
		pFnPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 51917 ];

	UBioCheatManager_execPaperDoll_Parms PaperDoll_Parms;
	memcpy ( &PaperDoll_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	pFnPaperDoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPaperDoll, &PaperDoll_Parms, NULL );

	pFnPaperDoll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DisableOffensive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::DisableOffensive ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnDisableOffensive = NULL;

	if ( ! pFnDisableOffensive )
		pFnDisableOffensive = (UFunction*) UObject::GObjObjects()->Data[ 51913 ];

	UBioCheatManager_execDisableOffensive_Parms DisableOffensive_Parms;
	memcpy ( &DisableOffensive_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &DisableOffensive_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnDisableOffensive, &DisableOffensive_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableOffensive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::EnableOffensive ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnEnableOffensive = NULL;

	if ( ! pFnEnableOffensive )
		pFnEnableOffensive = (UFunction*) UObject::GObjObjects()->Data[ 51909 ];

	UBioCheatManager_execEnableOffensive_Parms EnableOffensive_Parms;
	memcpy ( &EnableOffensive_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &EnableOffensive_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnEnableOffensive, &EnableOffensive_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DisablePower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::DisablePower ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnDisablePower = NULL;

	if ( ! pFnDisablePower )
		pFnDisablePower = (UFunction*) UObject::GObjObjects()->Data[ 51905 ];

	UBioCheatManager_execDisablePower_Parms DisablePower_Parms;
	memcpy ( &DisablePower_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &DisablePower_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnDisablePower, &DisablePower_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnablePower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::EnablePower ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnEnablePower = NULL;

	if ( ! pFnEnablePower )
		pFnEnablePower = (UFunction*) UObject::GObjObjects()->Data[ 51901 ];

	UBioCheatManager_execEnablePower_Parms EnablePower_Parms;
	memcpy ( &EnablePower_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &EnablePower_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnEnablePower, &EnablePower_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DisableAi
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::DisableAi ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnDisableAi = NULL;

	if ( ! pFnDisableAi )
		pFnDisableAi = (UFunction*) UObject::GObjObjects()->Data[ 51897 ];

	UBioCheatManager_execDisableAi_Parms DisableAi_Parms;
	memcpy ( &DisableAi_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &DisableAi_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnDisableAi, &DisableAi_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableAi
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmPawn                         ( CPF_Parm )
// struct FName                   subtype                        ( CPF_Parm )

void UBioCheatManager::EnableAi ( struct FName nmPawn, struct FName subtype )
{
	static UFunction* pFnEnableAi = NULL;

	if ( ! pFnEnableAi )
		pFnEnableAi = (UFunction*) UObject::GObjObjects()->Data[ 51893 ];

	UBioCheatManager_execEnableAi_Parms EnableAi_Parms;
	memcpy ( &EnableAi_Parms.nmPawn, &nmPawn, 0x8 );
	memcpy ( &EnableAi_Parms.subtype, &subtype, 0x8 );

	this->ProcessEvent ( pFnEnableAi, &EnableAi_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetCharmSkill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nCharm                         ( CPF_Parm )

void UBioCheatManager::SetCharmSkill ( int nCharm )
{
	static UFunction* pFnSetCharmSkill = NULL;

	if ( ! pFnSetCharmSkill )
		pFnSetCharmSkill = (UFunction*) UObject::GObjObjects()->Data[ 51889 ];

	UBioCheatManager_execSetCharmSkill_Parms SetCharmSkill_Parms;
	SetCharmSkill_Parms.nCharm = nCharm;

	this->ProcessEvent ( pFnSetCharmSkill, &SetCharmSkill_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetCharmSkill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GetCharmSkill ( )
{
	static UFunction* pFnGetCharmSkill = NULL;

	if ( ! pFnGetCharmSkill )
		pFnGetCharmSkill = (UFunction*) UObject::GObjObjects()->Data[ 51887 ];

	UBioCheatManager_execGetCharmSkill_Parms GetCharmSkill_Parms;

	this->ProcessEvent ( pFnGetCharmSkill, &GetCharmSkill_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetIntimidateSkill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nIntimidate                    ( CPF_Parm )

void UBioCheatManager::SetIntimidateSkill ( int nIntimidate )
{
	static UFunction* pFnSetIntimidateSkill = NULL;

	if ( ! pFnSetIntimidateSkill )
		pFnSetIntimidateSkill = (UFunction*) UObject::GObjObjects()->Data[ 51883 ];

	UBioCheatManager_execSetIntimidateSkill_Parms SetIntimidateSkill_Parms;
	SetIntimidateSkill_Parms.nIntimidate = nIntimidate;

	this->ProcessEvent ( pFnSetIntimidateSkill, &SetIntimidateSkill_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetIntimidateSkill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GetIntimidateSkill ( )
{
	static UFunction* pFnGetIntimidateSkill = NULL;

	if ( ! pFnGetIntimidateSkill )
		pFnGetIntimidateSkill = (UFunction*) UObject::GObjObjects()->Data[ 51881 ];

	UBioCheatManager_execGetIntimidateSkill_Parms GetIntimidateSkill_Parms;

	this->ProcessEvent ( pFnGetIntimidateSkill, &GetIntimidateSkill_Parms, NULL );
};

// Function SFXGame.BioCheatManager.WeaponFireTrace
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNotPersist                    ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::WeaponFireTrace ( unsigned long bNotPersist )
{
	static UFunction* pFnWeaponFireTrace = NULL;

	if ( ! pFnWeaponFireTrace )
		pFnWeaponFireTrace = (UFunction*) UObject::GObjObjects()->Data[ 51877 ];

	UBioCheatManager_execWeaponFireTrace_Parms WeaponFireTrace_Parms;
	WeaponFireTrace_Parms.bNotPersist = bNotPersist;

	this->ProcessEvent ( pFnWeaponFireTrace, &WeaponFireTrace_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DownloadContent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::DownloadContent ( )
{
	static UFunction* pFnDownloadContent = NULL;

	if ( ! pFnDownloadContent )
		pFnDownloadContent = (UFunction*) UObject::GObjObjects()->Data[ 51876 ];

	UBioCheatManager_execDownloadContent_Parms DownloadContent_Parms;

	this->ProcessEvent ( pFnDownloadContent, &DownloadContent_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowMarketplaceUI
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioCheatManager::ShowMarketplaceUI ( )
{
	static UFunction* pFnShowMarketplaceUI = NULL;

	if ( ! pFnShowMarketplaceUI )
		pFnShowMarketplaceUI = (UFunction*) UObject::GObjObjects()->Data[ 51875 ];

	UBioCheatManager_execShowMarketplaceUI_Parms ShowMarketplaceUI_Parms;

	pFnShowMarketplaceUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowMarketplaceUI, &ShowMarketplaceUI_Parms, NULL );

	pFnShowMarketplaceUI->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.AdjustCredits
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nAmount                        ( CPF_Parm )

void UBioCheatManager::AdjustCredits ( int nAmount )
{
	static UFunction* pFnAdjustCredits = NULL;

	if ( ! pFnAdjustCredits )
		pFnAdjustCredits = (UFunction*) UObject::GObjObjects()->Data[ 51872 ];

	UBioCheatManager_execAdjustCredits_Parms AdjustCredits_Parms;
	AdjustCredits_Parms.nAmount = nAmount;

	this->ProcessEvent ( pFnAdjustCredits, &AdjustCredits_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DescribeEquipment
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// struct FString                 sEquipment                     ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::DescribeEquipment ( struct FName nmTarget, struct FString sEquipment )
{
	static UFunction* pFnDescribeEquipment = NULL;

	if ( ! pFnDescribeEquipment )
		pFnDescribeEquipment = (UFunction*) UObject::GObjObjects()->Data[ 51866 ];

	UBioCheatManager_execDescribeEquipment_Parms DescribeEquipment_Parms;
	memcpy ( &DescribeEquipment_Parms.nmTarget, &nmTarget, 0x8 );
	memcpy ( &DescribeEquipment_Parms.sEquipment, &sEquipment, 0x10 );

	this->ProcessEvent ( pFnDescribeEquipment, &DescribeEquipment_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DescribeItemInQuickSlot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// int                            nQuickslot                     ( CPF_Parm )

void UBioCheatManager::DescribeItemInQuickSlot ( struct FName nmTarget, int nQuickslot )
{
	static UFunction* pFnDescribeItemInQuickSlot = NULL;

	if ( ! pFnDescribeItemInQuickSlot )
		pFnDescribeItemInQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 51861 ];

	UBioCheatManager_execDescribeItemInQuickSlot_Parms DescribeItemInQuickSlot_Parms;
	memcpy ( &DescribeItemInQuickSlot_Parms.nmTarget, &nmTarget, 0x8 );
	DescribeItemInQuickSlot_Parms.nQuickslot = nQuickslot;

	this->ProcessEvent ( pFnDescribeItemInQuickSlot, &DescribeItemInQuickSlot_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DescribeItem
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSophistication                ( CPF_Parm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::DescribeItem ( int nSophistication, struct FString sLabel )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 51854 ];

	UBioCheatManager_execDescribeItem_Parms DescribeItem_Parms;
	DescribeItem_Parms.nSophistication = nSophistication;
	memcpy ( &DescribeItem_Parms.sLabel, &sLabel, 0x10 );

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveWeaponXModded
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::GiveWeaponXModded ( struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnGiveWeaponXModded = NULL;

	if ( ! pFnGiveWeaponXModded )
		pFnGiveWeaponXModded = (UFunction*) UObject::GObjObjects()->Data[ 51852 ];

	UBioCheatManager_execGiveWeaponXModded_Parms GiveWeaponXModded_Parms;
	memcpy ( &GiveWeaponXModded_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	pFnGiveWeaponXModded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveWeaponXModded, &GiveWeaponXModded_Parms, NULL );

	pFnGiveWeaponXModded->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.InitGrenades
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nGrenades                      ( CPF_Parm )

void UBioCheatManager::InitGrenades ( int nGrenades )
{
	static UFunction* pFnInitGrenades = NULL;

	if ( ! pFnInitGrenades )
		pFnInitGrenades = (UFunction*) UObject::GObjObjects()->Data[ 51849 ];

	UBioCheatManager_execInitGrenades_Parms InitGrenades_Parms;
	InitGrenades_Parms.nGrenades = nGrenades;

	this->ProcessEvent ( pFnInitGrenades, &InitGrenades_Parms, NULL );
};

// Function SFXGame.BioCheatManager.InitMedigel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fMedigel                       ( CPF_Parm )

void UBioCheatManager::InitMedigel ( float fMedigel )
{
	static UFunction* pFnInitMedigel = NULL;

	if ( ! pFnInitMedigel )
		pFnInitMedigel = (UFunction*) UObject::GObjObjects()->Data[ 51846 ];

	UBioCheatManager_execInitMedigel_Parms InitMedigel_Parms;
	InitMedigel_Parms.fMedigel = fMedigel;

	this->ProcessEvent ( pFnInitMedigel, &InitMedigel_Parms, NULL );
};

// Function SFXGame.BioCheatManager.InitSalvage
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fSalvage                       ( CPF_Parm )

void UBioCheatManager::InitSalvage ( float fSalvage )
{
	static UFunction* pFnInitSalvage = NULL;

	if ( ! pFnInitSalvage )
		pFnInitSalvage = (UFunction*) UObject::GObjObjects()->Data[ 51843 ];

	UBioCheatManager_execInitSalvage_Parms InitSalvage_Parms;
	InitSalvage_Parms.fSalvage = fSalvage;

	this->ProcessEvent ( pFnInitSalvage, &InitSalvage_Parms, NULL );
};

// Function SFXGame.BioCheatManager.InitCredits
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nCredits                       ( CPF_Parm )

void UBioCheatManager::InitCredits ( int nCredits )
{
	static UFunction* pFnInitCredits = NULL;

	if ( ! pFnInitCredits )
		pFnInitCredits = (UFunction*) UObject::GObjObjects()->Data[ 51839 ];

	UBioCheatManager_execInitCredits_Parms InitCredits_Parms;
	InitCredits_Parms.nCredits = nCredits;

	this->ProcessEvent ( pFnInitCredits, &InitCredits_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveItem
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmActor                        ( CPF_Parm )
// int                            nSophistication                ( CPF_Parm )
// struct FName                   nmItemLabel                    ( CPF_Parm )
// struct FName                   nmManufacturer                 ( CPF_OptionalParm | CPF_Parm )

class UBioItem* UBioCheatManager::GiveItem ( struct FName nmActor, int nSophistication, struct FName nmItemLabel, struct FName nmManufacturer )
{
	static UFunction* pFnGiveItem = NULL;

	if ( ! pFnGiveItem )
		pFnGiveItem = (UFunction*) UObject::GObjObjects()->Data[ 51833 ];

	UBioCheatManager_execGiveItem_Parms GiveItem_Parms;
	memcpy ( &GiveItem_Parms.nmActor, &nmActor, 0x8 );
	GiveItem_Parms.nSophistication = nSophistication;
	memcpy ( &GiveItem_Parms.nmItemLabel, &nmItemLabel, 0x8 );
	memcpy ( &GiveItem_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	pFnGiveItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveItem, &GiveItem_Parms, NULL );

	pFnGiveItem->FunctionFlags |= 0x400;

	return GiveItem_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.MSSwarm
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::MSSwarm ( )
{
	static UFunction* pFnMSSwarm = NULL;

	if ( ! pFnMSSwarm )
		pFnMSSwarm = (UFunction*) UObject::GObjObjects()->Data[ 51830 ];

	UBioCheatManager_execMSSwarm_Parms MSSwarm_Parms;

	this->ProcessEvent ( pFnMSSwarm, &MSSwarm_Parms, NULL );
};

// Function SFXGame.BioCheatManager.MSSwarmInfo
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// int                            Z                              ( CPF_Parm )

void UBioCheatManager::MSSwarmInfo ( int X, int Y, int Z )
{
	static UFunction* pFnMSSwarmInfo = NULL;

	if ( ! pFnMSSwarmInfo )
		pFnMSSwarmInfo = (UFunction*) UObject::GObjObjects()->Data[ 51826 ];

	UBioCheatManager_execMSSwarmInfo_Parms MSSwarmInfo_Parms;
	MSSwarmInfo_Parms.X = X;
	MSSwarmInfo_Parms.Y = Y;
	MSSwarmInfo_Parms.Z = Z;

	pFnMSSwarmInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMSSwarmInfo, &MSSwarmInfo_Parms, NULL );

	pFnMSSwarmInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.TestGamePropertySys
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TestGamePropertySys ( )
{
	static UFunction* pFnTestGamePropertySys = NULL;

	if ( ! pFnTestGamePropertySys )
		pFnTestGamePropertySys = (UFunction*) UObject::GObjObjects()->Data[ 51825 ];

	UBioCheatManager_execTestGamePropertySys_Parms TestGamePropertySys_Parms;

	this->ProcessEvent ( pFnTestGamePropertySys, &TestGamePropertySys_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ValidateOwnershipSemantics
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   TargetName                     ( CPF_Parm )
// unsigned long                  isVerbose                      ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::ValidateOwnershipSemantics ( struct FName TargetName, unsigned long isVerbose )
{
	static UFunction* pFnValidateOwnershipSemantics = NULL;

	if ( ! pFnValidateOwnershipSemantics )
		pFnValidateOwnershipSemantics = (UFunction*) UObject::GObjObjects()->Data[ 51819 ];

	UBioCheatManager_execValidateOwnershipSemantics_Parms ValidateOwnershipSemantics_Parms;
	memcpy ( &ValidateOwnershipSemantics_Parms.TargetName, &TargetName, 0x8 );
	ValidateOwnershipSemantics_Parms.isVerbose = isVerbose;

	this->ProcessEvent ( pFnValidateOwnershipSemantics, &ValidateOwnershipSemantics_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ResurrectTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ResurrectTarget ( )
{
	static UFunction* pFnResurrectTarget = NULL;

	if ( ! pFnResurrectTarget )
		pFnResurrectTarget = (UFunction*) UObject::GObjObjects()->Data[ 51815 ];

	UBioCheatManager_execResurrectTarget_Parms ResurrectTarget_Parms;

	this->ProcessEvent ( pFnResurrectTarget, &ResurrectTarget_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Stability
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Command                        ( CPF_Parm )
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Stability ( struct FName Command, struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnStability = NULL;

	if ( ! pFnStability )
		pFnStability = (UFunction*) UObject::GObjObjects()->Data[ 51810 ];

	UBioCheatManager_execStability_Parms Stability_Parms;
	memcpy ( &Stability_Parms.Command, &Command, 0x8 );
	memcpy ( &Stability_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	this->ProcessEvent ( pFnStability, &Stability_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReCaps
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ReCaps ( )
{
	static UFunction* pFnReCaps = NULL;

	if ( ! pFnReCaps )
		pFnReCaps = (UFunction*) UObject::GObjObjects()->Data[ 51808 ];

	UBioCheatManager_execReCaps_Parms ReCaps_Parms;

	this->ProcessEvent ( pFnReCaps, &ReCaps_Parms, NULL );
};

// Function SFXGame.BioCheatManager.testfollow
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::testfollow ( )
{
	static UFunction* pFntestfollow = NULL;

	if ( ! pFntestfollow )
		pFntestfollow = (UFunction*) UObject::GObjObjects()->Data[ 51806 ];

	UBioCheatManager_exectestfollow_Parms testfollow_Parms;

	this->ProcessEvent ( pFntestfollow, &testfollow_Parms, NULL );
};

// Function SFXGame.BioCheatManager.testhold
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::testhold ( )
{
	static UFunction* pFntesthold = NULL;

	if ( ! pFntesthold )
		pFntesthold = (UFunction*) UObject::GObjObjects()->Data[ 51801 ];

	UBioCheatManager_exectesthold_Parms testhold_Parms;

	this->ProcessEvent ( pFntesthold, &testhold_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveArmor
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmActor                        ( CPF_Parm )
// int                            nSophistication                ( CPF_Parm )
// struct FName                   nmArmorLabel                   ( CPF_Parm )
// struct FName                   nmManufacturer                 ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::GiveArmor ( struct FName nmActor, int nSophistication, struct FName nmArmorLabel, struct FName nmManufacturer )
{
	static UFunction* pFnGiveArmor = NULL;

	if ( ! pFnGiveArmor )
		pFnGiveArmor = (UFunction*) UObject::GObjObjects()->Data[ 51796 ];

	UBioCheatManager_execGiveArmor_Parms GiveArmor_Parms;
	memcpy ( &GiveArmor_Parms.nmActor, &nmActor, 0x8 );
	GiveArmor_Parms.nSophistication = nSophistication;
	memcpy ( &GiveArmor_Parms.nmArmorLabel, &nmArmorLabel, 0x8 );
	memcpy ( &GiveArmor_Parms.nmManufacturer, &nmManufacturer, 0x8 );

	this->ProcessEvent ( pFnGiveArmor, &GiveArmor_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FWindDir
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nVal                           ( CPF_Parm )

void UBioCheatManager::FWindDir ( int nVal )
{
	static UFunction* pFnFWindDir = NULL;

	if ( ! pFnFWindDir )
		pFnFWindDir = (UFunction*) UObject::GObjObjects()->Data[ 51793 ];

	UBioCheatManager_execFWindDir_Parms FWindDir_Parms;
	FWindDir_Parms.nVal = nVal;

	this->ProcessEvent ( pFnFWindDir, &FWindDir_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FWindProb
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::FWindProb ( float fVal )
{
	static UFunction* pFnFWindProb = NULL;

	if ( ! pFnFWindProb )
		pFnFWindProb = (UFunction*) UObject::GObjObjects()->Data[ 51790 ];

	UBioCheatManager_execFWindProb_Parms FWindProb_Parms;
	FWindProb_Parms.fVal = fVal;

	this->ProcessEvent ( pFnFWindProb, &FWindProb_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FWindEnable
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nVal                           ( CPF_Parm )

void UBioCheatManager::FWindEnable ( int nVal )
{
	static UFunction* pFnFWindEnable = NULL;

	if ( ! pFnFWindEnable )
		pFnFWindEnable = (UFunction*) UObject::GObjObjects()->Data[ 51787 ];

	UBioCheatManager_execFWindEnable_Parms FWindEnable_Parms;
	FWindEnable_Parms.nVal = nVal;

	this->ProcessEvent ( pFnFWindEnable, &FWindEnable_Parms, NULL );
};

// Function SFXGame.BioCheatManager.FWindMax
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::FWindMax ( float fVal )
{
	static UFunction* pFnFWindMax = NULL;

	if ( ! pFnFWindMax )
		pFnFWindMax = (UFunction*) UObject::GObjObjects()->Data[ 51784 ];

	UBioCheatManager_execFWindMax_Parms FWindMax_Parms;
	FWindMax_Parms.fVal = fVal;

	this->ProcessEvent ( pFnFWindMax, &FWindMax_Parms, NULL );
};

// Function SFXGame.BioCheatManager.CombatWriteLog
// [0x00024A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:
// struct FString                 sVal                           ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::CombatWriteLog ( struct FString sVal )
{
	static UFunction* pFnCombatWriteLog = NULL;

	if ( ! pFnCombatWriteLog )
		pFnCombatWriteLog = (UFunction*) UObject::GObjObjects()->Data[ 51781 ];

	UBioCheatManager_execCombatWriteLog_Parms CombatWriteLog_Parms;
	memcpy ( &CombatWriteLog_Parms.sVal, &sVal, 0x10 );

	this->ProcessEvent ( pFnCombatWriteLog, &CombatWriteLog_Parms, NULL );
};

// Function SFXGame.BioCheatManager.EnableDamage
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nVal                           ( CPF_Parm )

void UBioCheatManager::EnableDamage ( int nVal )
{
	static UFunction* pFnEnableDamage = NULL;

	if ( ! pFnEnableDamage )
		pFnEnableDamage = (UFunction*) UObject::GObjObjects()->Data[ 51779 ];

	UBioCheatManager_execEnableDamage_Parms EnableDamage_Parms;
	EnableDamage_Parms.nVal = nVal;

	this->ProcessEvent ( pFnEnableDamage, &EnableDamage_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetHenchmanByName
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 actorName                      ( CPF_Parm | CPF_NeedCtorLink )

class AActor* UBioCheatManager::GetHenchmanByName ( struct FString actorName )
{
	static UFunction* pFnGetHenchmanByName = NULL;

	if ( ! pFnGetHenchmanByName )
		pFnGetHenchmanByName = (UFunction*) UObject::GObjObjects()->Data[ 51772 ];

	UBioCheatManager_execGetHenchmanByName_Parms GetHenchmanByName_Parms;
	memcpy ( &GetHenchmanByName_Parms.actorName, &actorName, 0x10 );

	this->ProcessEvent ( pFnGetHenchmanByName, &GetHenchmanByName_Parms, NULL );

	return GetHenchmanByName_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.GetUIWorldActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class AActor* UBioCheatManager::GetUIWorldActor ( int Index )
{
	static UFunction* pFnGetUIWorldActor = NULL;

	if ( ! pFnGetUIWorldActor )
		pFnGetUIWorldActor = (UFunction*) UObject::GObjObjects()->Data[ 51769 ];

	UBioCheatManager_execGetUIWorldActor_Parms GetUIWorldActor_Parms;
	GetUIWorldActor_Parms.Index = Index;

	pFnGetUIWorldActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUIWorldActor, &GetUIWorldActor_Parms, NULL );

	pFnGetUIWorldActor->FunctionFlags |= 0x400;

	return GetUIWorldActor_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.GetActorFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Str                            ( CPF_Parm | CPF_NeedCtorLink )

class AActor* UBioCheatManager::eventGetActorFromString ( struct FString Str )
{
	static UFunction* pFnGetActorFromString = NULL;

	if ( ! pFnGetActorFromString )
		pFnGetActorFromString = (UFunction*) UObject::GObjObjects()->Data[ 51755 ];

	UBioCheatManager_eventGetActorFromString_Parms GetActorFromString_Parms;
	memcpy ( &GetActorFromString_Parms.Str, &Str, 0x10 );

	this->ProcessEvent ( pFnGetActorFromString, &GetActorFromString_Parms, NULL );

	return GetActorFromString_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.ToxicDmgMax
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// struct FName                   nmAccess                       ( CPF_Parm )
// float                          fModifier                      ( CPF_Parm )

void UBioCheatManager::ToxicDmgMax ( struct FName nmTarget, struct FName nmAccess, float fModifier )
{
	static UFunction* pFnToxicDmgMax = NULL;

	if ( ! pFnToxicDmgMax )
		pFnToxicDmgMax = (UFunction*) UObject::GObjObjects()->Data[ 51749 ];

	UBioCheatManager_execToxicDmgMax_Parms ToxicDmgMax_Parms;
	memcpy ( &ToxicDmgMax_Parms.nmTarget, &nmTarget, 0x8 );
	memcpy ( &ToxicDmgMax_Parms.nmAccess, &nmAccess, 0x8 );
	ToxicDmgMax_Parms.fModifier = fModifier;

	this->ProcessEvent ( pFnToxicDmgMax, &ToxicDmgMax_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToxicHealRatio
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// struct FName                   nmAccess                       ( CPF_Parm )
// float                          fModifier                      ( CPF_Parm )

void UBioCheatManager::ToxicHealRatio ( struct FName nmTarget, struct FName nmAccess, float fModifier )
{
	static UFunction* pFnToxicHealRatio = NULL;

	if ( ! pFnToxicHealRatio )
		pFnToxicHealRatio = (UFunction*) UObject::GObjObjects()->Data[ 51740 ];

	UBioCheatManager_execToxicHealRatio_Parms ToxicHealRatio_Parms;
	memcpy ( &ToxicHealRatio_Parms.nmTarget, &nmTarget, 0x8 );
	memcpy ( &ToxicHealRatio_Parms.nmAccess, &nmAccess, 0x8 );
	ToxicHealRatio_Parms.fModifier = fModifier;

	this->ProcessEvent ( pFnToxicHealRatio, &ToxicHealRatio_Parms, NULL );
};

// Function SFXGame.BioCheatManager.HealRate
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// float                          fHealRate                      ( CPF_Parm )
// float                          fBonusToxicHealRate            ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::HealRate ( struct FName nmTarget, float fHealRate, float fBonusToxicHealRate )
{
	static UFunction* pFnHealRate = NULL;

	if ( ! pFnHealRate )
		pFnHealRate = (UFunction*) UObject::GObjObjects()->Data[ 51736 ];

	UBioCheatManager_execHealRate_Parms HealRate_Parms;
	memcpy ( &HealRate_Parms.nmTarget, &nmTarget, 0x8 );
	HealRate_Parms.fHealRate = fHealRate;
	HealRate_Parms.fBonusToxicHealRate = fBonusToxicHealRate;

	this->ProcessEvent ( pFnHealRate, &HealRate_Parms, NULL );
};

// Function SFXGame.BioCheatManager.HealLatent
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// float                          fDuration                      ( CPF_Parm )

void UBioCheatManager::HealLatent ( struct FName nmTarget, float fDuration )
{
	static UFunction* pFnHealLatent = NULL;

	if ( ! pFnHealLatent )
		pFnHealLatent = (UFunction*) UObject::GObjObjects()->Data[ 51733 ];

	UBioCheatManager_execHealLatent_Parms HealLatent_Parms;
	memcpy ( &HealLatent_Parms.nmTarget, &nmTarget, 0x8 );
	HealLatent_Parms.fDuration = fDuration;

	this->ProcessEvent ( pFnHealLatent, &HealLatent_Parms, NULL );
};

// Function SFXGame.BioCheatManager.HealInstant
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// float                          fHealAmount                    ( CPF_Parm )
// float                          fBonusToxicHealAmount          ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::HealInstant ( struct FName nmTarget, float fHealAmount, float fBonusToxicHealAmount )
{
	static UFunction* pFnHealInstant = NULL;

	if ( ! pFnHealInstant )
		pFnHealInstant = (UFunction*) UObject::GObjObjects()->Data[ 51729 ];

	UBioCheatManager_execHealInstant_Parms HealInstant_Parms;
	memcpy ( &HealInstant_Parms.nmTarget, &nmTarget, 0x8 );
	HealInstant_Parms.fHealAmount = fHealAmount;
	HealInstant_Parms.fBonusToxicHealAmount = fBonusToxicHealAmount;

	this->ProcessEvent ( pFnHealInstant, &HealInstant_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Damage
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void UBioCheatManager::Damage ( struct FName nmTarget, float fDamage )
{
	static UFunction* pFnDamage = NULL;

	if ( ! pFnDamage )
		pFnDamage = (UFunction*) UObject::GObjObjects()->Data[ 51722 ];

	UBioCheatManager_execDamage_Parms Damage_Parms;
	memcpy ( &Damage_Parms.nmTarget, &nmTarget, 0x8 );
	Damage_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnDamage, &Damage_Parms, NULL );
};

// Function SFXGame.BioCheatManager.CombatAssignTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   sActor                         ( CPF_Parm )
// struct FName                   sTarget                        ( CPF_Parm )

void UBioCheatManager::CombatAssignTarget ( struct FName sActor, struct FName sTarget )
{
	static UFunction* pFnCombatAssignTarget = NULL;

	if ( ! pFnCombatAssignTarget )
		pFnCombatAssignTarget = (UFunction*) UObject::GObjObjects()->Data[ 51716 ];

	UBioCheatManager_execCombatAssignTarget_Parms CombatAssignTarget_Parms;
	memcpy ( &CombatAssignTarget_Parms.sActor, &sActor, 0x8 );
	memcpy ( &CombatAssignTarget_Parms.sTarget, &sTarget, 0x8 );

	this->ProcessEvent ( pFnCombatAssignTarget, &CombatAssignTarget_Parms, NULL );
};

// Function SFXGame.BioCheatManager.TestRagdoll
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sWhitespaceDelimitedArguments  ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::TestRagdoll ( struct FString sWhitespaceDelimitedArguments )
{
	static UFunction* pFnTestRagdoll = NULL;

	if ( ! pFnTestRagdoll )
		pFnTestRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 51714 ];

	UBioCheatManager_execTestRagdoll_Parms TestRagdoll_Parms;
	memcpy ( &TestRagdoll_Parms.sWhitespaceDelimitedArguments, &sWhitespaceDelimitedArguments, 0x10 );

	pFnTestRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestRagdoll, &TestRagdoll_Parms, NULL );

	pFnTestRagdoll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.SightTo
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   nmTarget                       ( CPF_Parm )

void UBioCheatManager::SightTo ( struct FName nmTarget )
{
	static UFunction* pFnSightTo = NULL;

	if ( ! pFnSightTo )
		pFnSightTo = (UFunction*) UObject::GObjObjects()->Data[ 51712 ];

	UBioCheatManager_execSightTo_Parms SightTo_Parms;
	memcpy ( &SightTo_Parms.nmTarget, &nmTarget, 0x8 );

	pFnSightTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSightTo, &SightTo_Parms, NULL );

	pFnSightTo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.Profile
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Profile ( struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnProfile = NULL;

	if ( ! pFnProfile )
		pFnProfile = (UFunction*) UObject::GObjObjects()->Data[ 51710 ];

	UBioCheatManager_execProfile_Parms Profile_Parms;
	memcpy ( &Profile_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	pFnProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfile, &Profile_Parms, NULL );

	pFnProfile->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.DebugSpawnPrefab
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nTestNum                       ( CPF_Parm )

void UBioCheatManager::DebugSpawnPrefab ( int nTestNum )
{
	static UFunction* pFnDebugSpawnPrefab = NULL;

	if ( ! pFnDebugSpawnPrefab )
		pFnDebugSpawnPrefab = (UFunction*) UObject::GObjObjects()->Data[ 51708 ];

	UBioCheatManager_execDebugSpawnPrefab_Parms DebugSpawnPrefab_Parms;
	DebugSpawnPrefab_Parms.nTestNum = nTestNum;

	pFnDebugSpawnPrefab->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugSpawnPrefab, &DebugSpawnPrefab_Parms, NULL );

	pFnDebugSpawnPrefab->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.TestPrefab
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nTestNum                       ( CPF_Parm )

void UBioCheatManager::TestPrefab ( int nTestNum )
{
	static UFunction* pFnTestPrefab = NULL;

	if ( ! pFnTestPrefab )
		pFnTestPrefab = (UFunction*) UObject::GObjObjects()->Data[ 51706 ];

	UBioCheatManager_execTestPrefab_Parms TestPrefab_Parms;
	TestPrefab_Parms.nTestNum = nTestNum;

	this->ProcessEvent ( pFnTestPrefab, &TestPrefab_Parms, NULL );
};

// Function SFXGame.BioCheatManager.APGotoState
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   optrans                        ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::APGotoState ( struct FName ToState, struct FName optrans )
{
	static UFunction* pFnAPGotoState = NULL;

	if ( ! pFnAPGotoState )
		pFnAPGotoState = (UFunction*) UObject::GObjObjects()->Data[ 51698 ];

	UBioCheatManager_execAPGotoState_Parms APGotoState_Parms;
	memcpy ( &APGotoState_Parms.ToState, &ToState, 0x8 );
	memcpy ( &APGotoState_Parms.optrans, &optrans, 0x8 );

	this->ProcessEvent ( pFnAPGotoState, &APGotoState_Parms, NULL );
};

// Function SFXGame.BioCheatManager.APShowStates
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::APShowStates ( )
{
	static UFunction* pFnAPShowStates = NULL;

	if ( ! pFnAPShowStates )
		pFnAPShowStates = (UFunction*) UObject::GObjObjects()->Data[ 51693 ];

	UBioCheatManager_execAPShowStates_Parms APShowStates_Parms;

	this->ProcessEvent ( pFnAPShowStates, &APShowStates_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetDummyCreature
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::SetDummyCreature ( )
{
	static UFunction* pFnSetDummyCreature = NULL;

	if ( ! pFnSetDummyCreature )
		pFnSetDummyCreature = (UFunction*) UObject::GObjObjects()->Data[ 51688 ];

	UBioCheatManager_execSetDummyCreature_Parms SetDummyCreature_Parms;

	this->ProcessEvent ( pFnSetDummyCreature, &SetDummyCreature_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioRunTest
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 TestName                       ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::BioRunTest ( struct FString TestName )
{
	static UFunction* pFnBioRunTest = NULL;

	if ( ! pFnBioRunTest )
		pFnBioRunTest = (UFunction*) UObject::GObjObjects()->Data[ 51686 ];

	UBioCheatManager_execBioRunTest_Parms BioRunTest_Parms;
	memcpy ( &BioRunTest_Parms.TestName, &TestName, 0x10 );

	pFnBioRunTest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioRunTest, &BioRunTest_Parms, NULL );

	pFnBioRunTest->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.BioTransition
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            nTransition                    ( CPF_Parm )
// int                            nParam                         ( CPF_Parm )

void UBioCheatManager::BioTransition ( int nTransition, int nParam )
{
	static UFunction* pFnBioTransition = NULL;

	if ( ! pFnBioTransition )
		pFnBioTransition = (UFunction*) UObject::GObjObjects()->Data[ 51683 ];

	UBioCheatManager_execBioTransition_Parms BioTransition_Parms;
	BioTransition_Parms.nTransition = nTransition;
	BioTransition_Parms.nParam = nParam;

	pFnBioTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioTransition, &BioTransition_Parms, NULL );

	pFnBioTransition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.BioLoadState
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            nSaveStateSlot                 ( CPF_Parm )

void UBioCheatManager::BioLoadState ( int nSaveStateSlot )
{
	static UFunction* pFnBioLoadState = NULL;

	if ( ! pFnBioLoadState )
		pFnBioLoadState = (UFunction*) UObject::GObjObjects()->Data[ 51681 ];

	UBioCheatManager_execBioLoadState_Parms BioLoadState_Parms;
	BioLoadState_Parms.nSaveStateSlot = nSaveStateSlot;

	pFnBioLoadState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioLoadState, &BioLoadState_Parms, NULL );

	pFnBioLoadState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.BioSaveState
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            nSaveStateSlot                 ( CPF_Parm )

void UBioCheatManager::BioSaveState ( int nSaveStateSlot )
{
	static UFunction* pFnBioSaveState = NULL;

	if ( ! pFnBioSaveState )
		pFnBioSaveState = (UFunction*) UObject::GObjObjects()->Data[ 51679 ];

	UBioCheatManager_execBioSaveState_Parms BioSaveState_Parms;
	BioSaveState_Parms.nSaveStateSlot = nSaveStateSlot;

	pFnBioSaveState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioSaveState, &BioSaveState_Parms, NULL );

	pFnBioSaveState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.BioDeleteGame
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )

void UBioCheatManager::BioDeleteGame ( int nSaveGameSlot )
{
	static UFunction* pFnBioDeleteGame = NULL;

	if ( ! pFnBioDeleteGame )
		pFnBioDeleteGame = (UFunction*) UObject::GObjObjects()->Data[ 51677 ];

	UBioCheatManager_execBioDeleteGame_Parms BioDeleteGame_Parms;
	BioDeleteGame_Parms.nSaveGameSlot = nSaveGameSlot;

	this->ProcessEvent ( pFnBioDeleteGame, &BioDeleteGame_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioLoadGame
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )

void UBioCheatManager::BioLoadGame ( int nSaveGameSlot )
{
	static UFunction* pFnBioLoadGame = NULL;

	if ( ! pFnBioLoadGame )
		pFnBioLoadGame = (UFunction*) UObject::GObjObjects()->Data[ 51675 ];

	UBioCheatManager_execBioLoadGame_Parms BioLoadGame_Parms;
	BioLoadGame_Parms.nSaveGameSlot = nSaveGameSlot;

	this->ProcessEvent ( pFnBioLoadGame, &BioLoadGame_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioSaveGame
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )

void UBioCheatManager::BioSaveGame ( int nSaveGameSlot )
{
	static UFunction* pFnBioSaveGame = NULL;

	if ( ! pFnBioSaveGame )
		pFnBioSaveGame = (UFunction*) UObject::GObjObjects()->Data[ 51673 ];

	UBioCheatManager_execBioSaveGame_Parms BioSaveGame_Parms;
	BioSaveGame_Parms.nSaveGameSlot = nSaveGameSlot;

	this->ProcessEvent ( pFnBioSaveGame, &BioSaveGame_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioSetDebugSave
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nSet                           ( CPF_Parm )

void UBioCheatManager::BioSetDebugSave ( int nSet )
{
	static UFunction* pFnBioSetDebugSave = NULL;

	if ( ! pFnBioSetDebugSave )
		pFnBioSetDebugSave = (UFunction*) UObject::GObjObjects()->Data[ 51671 ];

	UBioCheatManager_execBioSetDebugSave_Parms BioSetDebugSave_Parms;
	BioSetDebugSave_Parms.nSet = nSet;

	this->ProcessEvent ( pFnBioSetDebugSave, &BioSetDebugSave_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PawnControll
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )

void UBioCheatManager::PawnControll ( struct FName nmAction )
{
	static UFunction* pFnPawnControll = NULL;

	if ( ! pFnPawnControll )
		pFnPawnControll = (UFunction*) UObject::GObjObjects()->Data[ 51667 ];

	UBioCheatManager_execPawnControll_Parms PawnControll_Parms;
	memcpy ( &PawnControll_Parms.nmAction, &nmAction, 0x8 );

	this->ProcessEvent ( pFnPawnControll, &PawnControll_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SRange
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::SRange ( float fVal )
{
	static UFunction* pFnSRange = NULL;

	if ( ! pFnSRange )
		pFnSRange = (UFunction*) UObject::GObjObjects()->Data[ 51664 ];

	UBioCheatManager_execSRange_Parms SRange_Parms;
	SRange_Parms.fVal = fVal;

	this->ProcessEvent ( pFnSRange, &SRange_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PickSpecialization
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::PickSpecialization ( )
{
	static UFunction* pFnPickSpecialization = NULL;

	if ( ! pFnPickSpecialization )
		pFnPickSpecialization = (UFunction*) UObject::GObjObjects()->Data[ 51661 ];

	UBioCheatManager_execPickSpecialization_Parms PickSpecialization_Parms;

	this->ProcessEvent ( pFnPickSpecialization, &PickSpecialization_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveSpectreTalents
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GiveSpectreTalents ( )
{
	static UFunction* pFnGiveSpectreTalents = NULL;

	if ( ! pFnGiveSpectreTalents )
		pFnGiveSpectreTalents = (UFunction*) UObject::GObjObjects()->Data[ 51660 ];

	UBioCheatManager_execGiveSpectreTalents_Parms GiveSpectreTalents_Parms;

	this->ProcessEvent ( pFnGiveSpectreTalents, &GiveSpectreTalents_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ScaleTalentByIncrement
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TalentID                       ( CPF_Parm )
// int                            rankIncrement                  ( CPF_Parm )

void UBioCheatManager::ScaleTalentByIncrement ( int TalentID, int rankIncrement )
{
	static UFunction* pFnScaleTalentByIncrement = NULL;

	if ( ! pFnScaleTalentByIncrement )
		pFnScaleTalentByIncrement = (UFunction*) UObject::GObjObjects()->Data[ 51656 ];

	UBioCheatManager_execScaleTalentByIncrement_Parms ScaleTalentByIncrement_Parms;
	ScaleTalentByIncrement_Parms.TalentID = TalentID;
	ScaleTalentByIncrement_Parms.rankIncrement = rankIncrement;

	this->ProcessEvent ( pFnScaleTalentByIncrement, &ScaleTalentByIncrement_Parms, NULL );
};

// Function SFXGame.BioCheatManager.IncreaseTalentMaxRankByIncrement
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TalentID                       ( CPF_Parm )
// int                            MaxRankIncrement               ( CPF_Parm )

void UBioCheatManager::IncreaseTalentMaxRankByIncrement ( int TalentID, int MaxRankIncrement )
{
	static UFunction* pFnIncreaseTalentMaxRankByIncrement = NULL;

	if ( ! pFnIncreaseTalentMaxRankByIncrement )
		pFnIncreaseTalentMaxRankByIncrement = (UFunction*) UObject::GObjObjects()->Data[ 51652 ];

	UBioCheatManager_execIncreaseTalentMaxRankByIncrement_Parms IncreaseTalentMaxRankByIncrement_Parms;
	IncreaseTalentMaxRankByIncrement_Parms.TalentID = TalentID;
	IncreaseTalentMaxRankByIncrement_Parms.MaxRankIncrement = MaxRankIncrement;

	this->ProcessEvent ( pFnIncreaseTalentMaxRankByIncrement, &IncreaseTalentMaxRankByIncrement_Parms, NULL );
};

// Function SFXGame.BioCheatManager.IncreaseTalentMaxRank
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TalentID                       ( CPF_Parm )
// int                            MaxRank                        ( CPF_Parm )

void UBioCheatManager::IncreaseTalentMaxRank ( int TalentID, int MaxRank )
{
	static UFunction* pFnIncreaseTalentMaxRank = NULL;

	if ( ! pFnIncreaseTalentMaxRank )
		pFnIncreaseTalentMaxRank = (UFunction*) UObject::GObjObjects()->Data[ 51648 ];

	UBioCheatManager_execIncreaseTalentMaxRank_Parms IncreaseTalentMaxRank_Parms;
	IncreaseTalentMaxRank_Parms.TalentID = TalentID;
	IncreaseTalentMaxRank_Parms.MaxRank = MaxRank;

	this->ProcessEvent ( pFnIncreaseTalentMaxRank, &IncreaseTalentMaxRank_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveBonusTalent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            bonusIdentifier                ( CPF_Parm )

void UBioCheatManager::GiveBonusTalent ( int bonusIdentifier )
{
	static UFunction* pFnGiveBonusTalent = NULL;

	if ( ! pFnGiveBonusTalent )
		pFnGiveBonusTalent = (UFunction*) UObject::GObjObjects()->Data[ 51645 ];

	UBioCheatManager_execGiveBonusTalent_Parms GiveBonusTalent_Parms;
	GiveBonusTalent_Parms.bonusIdentifier = bonusIdentifier;

	this->ProcessEvent ( pFnGiveBonusTalent, &GiveBonusTalent_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveTalentPoints
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            numPoints                      ( CPF_Parm )

void UBioCheatManager::GiveTalentPoints ( int numPoints )
{
	static UFunction* pFnGiveTalentPoints = NULL;

	if ( ! pFnGiveTalentPoints )
		pFnGiveTalentPoints = (UFunction*) UObject::GObjObjects()->Data[ 51641 ];

	UBioCheatManager_execGiveTalentPoints_Parms GiveTalentPoints_Parms;
	GiveTalentPoints_Parms.numPoints = numPoints;

	this->ProcessEvent ( pFnGiveTalentPoints, &GiveTalentPoints_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetVolume
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            i_VolumeType                   ( CPF_Parm )
// int                            i_VolumeLevel                  ( CPF_Parm )

void UBioCheatManager::SetVolume ( int i_VolumeType, int i_VolumeLevel )
{
	static UFunction* pFnSetVolume = NULL;

	if ( ! pFnSetVolume )
		pFnSetVolume = (UFunction*) UObject::GObjObjects()->Data[ 51636 ];

	UBioCheatManager_execSetVolume_Parms SetVolume_Parms;
	SetVolume_Parms.i_VolumeType = i_VolumeType;
	SetVolume_Parms.i_VolumeLevel = i_VolumeLevel;

	this->ProcessEvent ( pFnSetVolume, &SetVolume_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleSaveGameDisplayRawName
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleSaveGameDisplayRawName ( )
{
	static UFunction* pFnToggleSaveGameDisplayRawName = NULL;

	if ( ! pFnToggleSaveGameDisplayRawName )
		pFnToggleSaveGameDisplayRawName = (UFunction*) UObject::GObjObjects()->Data[ 51632 ];

	UBioCheatManager_execToggleSaveGameDisplayRawName_Parms ToggleSaveGameDisplayRawName_Parms;

	this->ProcessEvent ( pFnToggleSaveGameDisplayRawName, &ToggleSaveGameDisplayRawName_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetSaveGameDisplayRawName
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  i_bValue                       ( CPF_Parm )

void UBioCheatManager::SetSaveGameDisplayRawName ( unsigned long i_bValue )
{
	static UFunction* pFnSetSaveGameDisplayRawName = NULL;

	if ( ! pFnSetSaveGameDisplayRawName )
		pFnSetSaveGameDisplayRawName = (UFunction*) UObject::GObjObjects()->Data[ 51629 ];

	UBioCheatManager_execSetSaveGameDisplayRawName_Parms SetSaveGameDisplayRawName_Parms;
	SetSaveGameDisplayRawName_Parms.i_bValue = i_bValue;

	this->ProcessEvent ( pFnSetSaveGameDisplayRawName, &SetSaveGameDisplayRawName_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetCombatDifficulty
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            i_CombatDifficulty             ( CPF_Parm )

void UBioCheatManager::SetCombatDifficulty ( int i_CombatDifficulty )
{
	static UFunction* pFnSetCombatDifficulty = NULL;

	if ( ! pFnSetCombatDifficulty )
		pFnSetCombatDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 51625 ];

	UBioCheatManager_execSetCombatDifficulty_Parms SetCombatDifficulty_Parms;
	SetCombatDifficulty_Parms.i_CombatDifficulty = i_CombatDifficulty;

	this->ProcessEvent ( pFnSetCombatDifficulty, &SetCombatDifficulty_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetPredefinedGammaCorrectionOption
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            i_GammaSetting                 ( CPF_Parm )

void UBioCheatManager::SetPredefinedGammaCorrectionOption ( int i_GammaSetting )
{
	static UFunction* pFnSetPredefinedGammaCorrectionOption = NULL;

	if ( ! pFnSetPredefinedGammaCorrectionOption )
		pFnSetPredefinedGammaCorrectionOption = (UFunction*) UObject::GObjObjects()->Data[ 51621 ];

	UBioCheatManager_execSetPredefinedGammaCorrectionOption_Parms SetPredefinedGammaCorrectionOption_Parms;
	SetPredefinedGammaCorrectionOption_Parms.i_GammaSetting = i_GammaSetting;

	this->ProcessEvent ( pFnSetPredefinedGammaCorrectionOption, &SetPredefinedGammaCorrectionOption_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GiveXP
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nValue                         ( CPF_Parm )

void UBioCheatManager::GiveXP ( int nValue )
{
	static UFunction* pFnGiveXP = NULL;

	if ( ! pFnGiveXP )
		pFnGiveXP = (UFunction*) UObject::GObjObjects()->Data[ 51616 ];

	UBioCheatManager_execGiveXP_Parms GiveXP_Parms;
	GiveXP_Parms.nValue = nValue;

	this->ProcessEvent ( pFnGiveXP, &GiveXP_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowDialogData
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nValue                         ( CPF_Parm )

void UBioCheatManager::ShowDialogData ( struct FName nValue )
{
	static UFunction* pFnShowDialogData = NULL;

	if ( ! pFnShowDialogData )
		pFnShowDialogData = (UFunction*) UObject::GObjObjects()->Data[ 51611 ];

	UBioCheatManager_execShowDialogData_Parms ShowDialogData_Parms;
	memcpy ( &ShowDialogData_Parms.nValue, &nValue, 0x8 );

	this->ProcessEvent ( pFnShowDialogData, &ShowDialogData_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetGender
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nValue                         ( CPF_Parm )

void UBioCheatManager::SetGender ( int nValue )
{
	static UFunction* pFnSetGender = NULL;

	if ( ! pFnSetGender )
		pFnSetGender = (UFunction*) UObject::GObjObjects()->Data[ 51606 ];

	UBioCheatManager_execSetGender_Parms SetGender_Parms;
	SetGender_Parms.nValue = nValue;

	this->ProcessEvent ( pFnSetGender, &SetGender_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleAPCollision
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleAPCollision ( )
{
	static UFunction* pFnToggleAPCollision = NULL;

	if ( ! pFnToggleAPCollision )
		pFnToggleAPCollision = (UFunction*) UObject::GObjObjects()->Data[ 51605 ];

	UBioCheatManager_execToggleAPCollision_Parms ToggleAPCollision_Parms;

	this->ProcessEvent ( pFnToggleAPCollision, &ToggleAPCollision_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetSquadMemberBehavior
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSquadMemberName               ( CPF_Parm | CPF_NeedCtorLink )

class UBioPawnBehavior* UBioCheatManager::GetSquadMemberBehavior ( struct FString sSquadMemberName )
{
	static UFunction* pFnGetSquadMemberBehavior = NULL;

	if ( ! pFnGetSquadMemberBehavior )
		pFnGetSquadMemberBehavior = (UFunction*) UObject::GObjObjects()->Data[ 51598 ];

	UBioCheatManager_execGetSquadMemberBehavior_Parms GetSquadMemberBehavior_Parms;
	memcpy ( &GetSquadMemberBehavior_Parms.sSquadMemberName, &sSquadMemberName, 0x10 );

	this->ProcessEvent ( pFnGetSquadMemberBehavior, &GetSquadMemberBehavior_Parms, NULL );

	return GetSquadMemberBehavior_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.BioEndSloMo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            nReqID                         ( CPF_Parm )
// float                          fExpireTime                    ( CPF_Parm )

void UBioCheatManager::BioEndSloMo ( int nReqID, float fExpireTime )
{
	static UFunction* pFnBioEndSloMo = NULL;

	if ( ! pFnBioEndSloMo )
		pFnBioEndSloMo = (UFunction*) UObject::GObjObjects()->Data[ 51594 ];

	UBioCheatManager_execBioEndSloMo_Parms BioEndSloMo_Parms;
	BioEndSloMo_Parms.nReqID = nReqID;
	BioEndSloMo_Parms.fExpireTime = fExpireTime;

	this->ProcessEvent ( pFnBioEndSloMo, &BioEndSloMo_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioSloMo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fSpeed                         ( CPF_Parm )
// float                          fLife                          ( CPF_Parm )
// int                            nPriority                      ( CPF_Parm )

void UBioCheatManager::BioSloMo ( float fSpeed, float fLife, int nPriority )
{
	static UFunction* pFnBioSloMo = NULL;

	if ( ! pFnBioSloMo )
		pFnBioSloMo = (UFunction*) UObject::GObjObjects()->Data[ 51589 ];

	UBioCheatManager_execBioSloMo_Parms BioSloMo_Parms;
	BioSloMo_Parms.fSpeed = fSpeed;
	BioSloMo_Parms.fLife = fLife;
	BioSloMo_Parms.nPriority = nPriority;

	this->ProcessEvent ( pFnBioSloMo, &BioSloMo_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioSloMoTest
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::BioSloMoTest ( )
{
	static UFunction* pFnBioSloMoTest = NULL;

	if ( ! pFnBioSloMoTest )
		pFnBioSloMoTest = (UFunction*) UObject::GObjObjects()->Data[ 51588 ];

	UBioCheatManager_execBioSloMoTest_Parms BioSloMoTest_Parms;

	this->ProcessEvent ( pFnBioSloMoTest, &BioSloMoTest_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetAct
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   intag                          ( CPF_Parm )
// struct FName                   activity                       ( CPF_Parm )

void UBioCheatManager::SetAct ( struct FName intag, struct FName activity )
{
	static UFunction* pFnSetAct = NULL;

	if ( ! pFnSetAct )
		pFnSetAct = (UFunction*) UObject::GObjObjects()->Data[ 51584 ];

	UBioCheatManager_execSetAct_Parms SetAct_Parms;
	memcpy ( &SetAct_Parms.intag, &intag, 0x8 );
	memcpy ( &SetAct_Parms.activity, &activity, 0x8 );

	this->ProcessEvent ( pFnSetAct, &SetAct_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetTacSelDistancel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::SetTacSelDistancel ( float fVal )
{
	static UFunction* pFnSetTacSelDistancel = NULL;

	if ( ! pFnSetTacSelDistancel )
		pFnSetTacSelDistancel = (UFunction*) UObject::GObjObjects()->Data[ 51581 ];

	UBioCheatManager_execSetTacSelDistancel_Parms SetTacSelDistancel_Parms;
	SetTacSelDistancel_Parms.fVal = fVal;

	this->ProcessEvent ( pFnSetTacSelDistancel, &SetTacSelDistancel_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetTacSelMovment
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::SetTacSelMovment ( float fVal )
{
	static UFunction* pFnSetTacSelMovment = NULL;

	if ( ! pFnSetTacSelMovment )
		pFnSetTacSelMovment = (UFunction*) UObject::GObjObjects()->Data[ 51578 ];

	UBioCheatManager_execSetTacSelMovment_Parms SetTacSelMovment_Parms;
	SetTacSelMovment_Parms.fVal = fVal;

	this->ProcessEvent ( pFnSetTacSelMovment, &SetTacSelMovment_Parms, NULL );
};

// Function SFXGame.BioCheatManager.togglefreetacsel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::togglefreetacsel ( )
{
	static UFunction* pFntogglefreetacsel = NULL;

	if ( ! pFntogglefreetacsel )
		pFntogglefreetacsel = (UFunction*) UObject::GObjObjects()->Data[ 51576 ];

	UBioCheatManager_exectogglefreetacsel_Parms togglefreetacsel_Parms;

	this->ProcessEvent ( pFntogglefreetacsel, &togglefreetacsel_Parms, NULL );
};

// Function SFXGame.BioCheatManager.QSlotPrev
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Target                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::QSlotPrev ( struct FString Target )
{
	static UFunction* pFnQSlotPrev = NULL;

	if ( ! pFnQSlotPrev )
		pFnQSlotPrev = (UFunction*) UObject::GObjObjects()->Data[ 51574 ];

	UBioCheatManager_execQSlotPrev_Parms QSlotPrev_Parms;
	memcpy ( &QSlotPrev_Parms.Target, &Target, 0x10 );

	this->ProcessEvent ( pFnQSlotPrev, &QSlotPrev_Parms, NULL );
};

// Function SFXGame.BioCheatManager.QSlotNext
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Target                         ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::QSlotNext ( struct FString Target )
{
	static UFunction* pFnQSlotNext = NULL;

	if ( ! pFnQSlotNext )
		pFnQSlotNext = (UFunction*) UObject::GObjObjects()->Data[ 51572 ];

	UBioCheatManager_execQSlotNext_Parms QSlotNext_Parms;
	memcpy ( &QSlotNext_Parms.Target, &Target, 0x10 );

	this->ProcessEvent ( pFnQSlotNext, &QSlotNext_Parms, NULL );
};

// Function SFXGame.BioCheatManager.QSlotActivate
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::QSlotActivate ( struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnQSlotActivate = NULL;

	if ( ! pFnQSlotActivate )
		pFnQSlotActivate = (UFunction*) UObject::GObjObjects()->Data[ 51566 ];

	UBioCheatManager_execQSlotActivate_Parms QSlotActivate_Parms;
	memcpy ( &QSlotActivate_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	this->ProcessEvent ( pFnQSlotActivate, &QSlotActivate_Parms, NULL );
};

// Function SFXGame.BioCheatManager.QSlotActivateCurrent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 whitespaceDelimitedArguments   ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::QSlotActivateCurrent ( struct FString whitespaceDelimitedArguments )
{
	static UFunction* pFnQSlotActivateCurrent = NULL;

	if ( ! pFnQSlotActivateCurrent )
		pFnQSlotActivateCurrent = (UFunction*) UObject::GObjObjects()->Data[ 51562 ];

	UBioCheatManager_execQSlotActivateCurrent_Parms QSlotActivateCurrent_Parms;
	memcpy ( &QSlotActivateCurrent_Parms.whitespaceDelimitedArguments, &whitespaceDelimitedArguments, 0x10 );

	this->ProcessEvent ( pFnQSlotActivateCurrent, &QSlotActivateCurrent_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetCurrentQuickSlotIndex
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioCheatManager::GetCurrentQuickSlotIndex ( )
{
	static UFunction* pFnGetCurrentQuickSlotIndex = NULL;

	if ( ! pFnGetCurrentQuickSlotIndex )
		pFnGetCurrentQuickSlotIndex = (UFunction*) UObject::GObjObjects()->Data[ 51559 ];

	UBioCheatManager_execGetCurrentQuickSlotIndex_Parms GetCurrentQuickSlotIndex_Parms;

	this->ProcessEvent ( pFnGetCurrentQuickSlotIndex, &GetCurrentQuickSlotIndex_Parms, NULL );

	return GetCurrentQuickSlotIndex_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.GetQuickSlot
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class ABioWeapon*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSlot                          ( CPF_Parm )

class ABioWeapon* UBioCheatManager::GetQuickSlot ( int nSlot )
{
	static UFunction* pFnGetQuickSlot = NULL;

	if ( ! pFnGetQuickSlot )
		pFnGetQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 51556 ];

	UBioCheatManager_execGetQuickSlot_Parms GetQuickSlot_Parms;
	GetQuickSlot_Parms.nSlot = nSlot;

	this->ProcessEvent ( pFnGetQuickSlot, &GetQuickSlot_Parms, NULL );

	return GetQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.GetPawn
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPawn* UBioCheatManager::GetPawn ( )
{
	static UFunction* pFnGetPawn = NULL;

	if ( ! pFnGetPawn )
		pFnGetPawn = (UFunction*) UObject::GObjObjects()->Data[ 51553 ];

	UBioCheatManager_execGetPawn_Parms GetPawn_Parms;

	this->ProcessEvent ( pFnGetPawn, &GetPawn_Parms, NULL );

	return GetPawn_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.SDS
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   State                          ( CPF_Parm )
// struct FName                   Trans                          ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::SDS ( struct FName State, struct FName Trans )
{
	static UFunction* pFnSDS = NULL;

	if ( ! pFnSDS )
		pFnSDS = (UFunction*) UObject::GObjObjects()->Data[ 51549 ];

	UBioCheatManager_execSDS_Parms SDS_Parms;
	memcpy ( &SDS_Parms.State, &State, 0x8 );
	memcpy ( &SDS_Parms.Trans, &Trans, 0x8 );

	this->ProcessEvent ( pFnSDS, &SDS_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Movie
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::Movie ( )
{
	static UFunction* pFnMovie = NULL;

	if ( ! pFnMovie )
		pFnMovie = (UFunction*) UObject::GObjObjects()->Data[ 51548 ];

	UBioCheatManager_execMovie_Parms Movie_Parms;

	this->ProcessEvent ( pFnMovie, &Movie_Parms, NULL );
};

// Function SFXGame.BioCheatManager.PopUp
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioCheatManager::PopUp ( struct FString S )
{
	static UFunction* pFnPopUp = NULL;

	if ( ! pFnPopUp )
		pFnPopUp = (UFunction*) UObject::GObjObjects()->Data[ 51546 ];

	UBioCheatManager_execPopUp_Parms PopUp_Parms;
	memcpy ( &PopUp_Parms.S, &S, 0x10 );

	this->ProcessEvent ( pFnPopUp, &PopUp_Parms, NULL );
};

// Function SFXGame.BioCheatManager.View2DA
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Str                            ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::View2DA ( struct FString Str )
{
	static UFunction* pFnView2DA = NULL;

	if ( ! pFnView2DA )
		pFnView2DA = (UFunction*) UObject::GObjObjects()->Data[ 51538 ];

	UBioCheatManager_execView2DA_Parms View2DA_Parms;
	memcpy ( &View2DA_Parms.Str, &Str, 0x10 );

	this->ProcessEvent ( pFnView2DA, &View2DA_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ClearAll
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ClearAll ( )
{
	static UFunction* pFnClearAll = NULL;

	if ( ! pFnClearAll )
		pFnClearAll = (UFunction*) UObject::GObjObjects()->Data[ 51536 ];

	UBioCheatManager_execClearAll_Parms ClearAll_Parms;

	this->ProcessEvent ( pFnClearAll, &ClearAll_Parms, NULL );
};

// Function SFXGame.BioCheatManager.TestConditionals
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::TestConditionals ( )
{
	static UFunction* pFnTestConditionals = NULL;

	if ( ! pFnTestConditionals )
		pFnTestConditionals = (UFunction*) UObject::GObjObjects()->Data[ 51530 ];

	UBioCheatManager_execTestConditionals_Parms TestConditionals_Parms;

	this->ProcessEvent ( pFnTestConditionals, &TestConditionals_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowPathNodes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ShowPathNodes ( )
{
	static UFunction* pFnShowPathNodes = NULL;

	if ( ! pFnShowPathNodes )
		pFnShowPathNodes = (UFunction*) UObject::GObjObjects()->Data[ 51526 ];

	UBioCheatManager_execShowPathNodes_Parms ShowPathNodes_Parms;

	this->ProcessEvent ( pFnShowPathNodes, &ShowPathNodes_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ClearMarkers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ClearMarkers ( )
{
	static UFunction* pFnClearMarkers = NULL;

	if ( ! pFnClearMarkers )
		pFnClearMarkers = (UFunction*) UObject::GObjObjects()->Data[ 51524 ];

	UBioCheatManager_execClearMarkers_Parms ClearMarkers_Parms;

	this->ProcessEvent ( pFnClearMarkers, &ClearMarkers_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Player
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Cmd                            ( CPF_Parm )
// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Player ( struct FName Cmd, struct FString Param )
{
	static UFunction* pFnPlayer = NULL;

	if ( ! pFnPlayer )
		pFnPlayer = (UFunction*) UObject::GObjObjects()->Data[ 51510 ];

	UBioCheatManager_execPlayer_Parms Player_Parms;
	memcpy ( &Player_Parms.Cmd, &Cmd, 0x8 );
	memcpy ( &Player_Parms.Param, &Param, 0x10 );

	this->ProcessEvent ( pFnPlayer, &Player_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioStats
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Cmd                            ( CPF_Parm )
// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::BioStats ( struct FName Cmd, struct FString Param )
{
	static UFunction* pFnBioStats = NULL;

	if ( ! pFnBioStats )
		pFnBioStats = (UFunction*) UObject::GObjObjects()->Data[ 51505 ];

	UBioCheatManager_execBioStats_Parms BioStats_Parms;
	memcpy ( &BioStats_Parms.Cmd, &Cmd, 0x8 );
	memcpy ( &BioStats_Parms.Param, &Param, 0x10 );

	this->ProcessEvent ( pFnBioStats, &BioStats_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Party
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Cmd                            ( CPF_Parm )
// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::Party ( struct FName Cmd, struct FString Param )
{
	static UFunction* pFnParty = NULL;

	if ( ! pFnParty )
		pFnParty = (UFunction*) UObject::GObjObjects()->Data[ 51501 ];

	UBioCheatManager_execParty_Parms Party_Parms;
	memcpy ( &Party_Parms.Cmd, &Cmd, 0x8 );
	memcpy ( &Party_Parms.Param, &Param, 0x10 );

	this->ProcessEvent ( pFnParty, &Party_Parms, NULL );
};

// Function SFXGame.BioCheatManager.BioClearCrossLevelReferences
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// class ULevel*                  pLevel                         ( CPF_Parm )

void UBioCheatManager::BioClearCrossLevelReferences ( class ULevel* pLevel )
{
	static UFunction* pFnBioClearCrossLevelReferences = NULL;

	if ( ! pFnBioClearCrossLevelReferences )
		pFnBioClearCrossLevelReferences = (UFunction*) UObject::GObjObjects()->Data[ 51499 ];

	UBioCheatManager_execBioClearCrossLevelReferences_Parms BioClearCrossLevelReferences_Parms;
	BioClearCrossLevelReferences_Parms.pLevel = pLevel;

	pFnBioClearCrossLevelReferences->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioClearCrossLevelReferences, &BioClearCrossLevelReferences_Parms, NULL );

	pFnBioClearCrossLevelReferences->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.ForceEnableCCD
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UBioCheatManager::ForceEnableCCD ( unsigned long bValue )
{
	static UFunction* pFnForceEnableCCD = NULL;

	if ( ! pFnForceEnableCCD )
		pFnForceEnableCCD = (UFunction*) UObject::GObjObjects()->Data[ 51497 ];

	UBioCheatManager_execForceEnableCCD_Parms ForceEnableCCD_Parms;
	ForceEnableCCD_Parms.bValue = bValue;

	pFnForceEnableCCD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceEnableCCD, &ForceEnableCCD_Parms, NULL );

	pFnForceEnableCCD->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.SetGCDebugPackage
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sPackageName                   ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::SetGCDebugPackage ( struct FString sPackageName )
{
	static UFunction* pFnSetGCDebugPackage = NULL;

	if ( ! pFnSetGCDebugPackage )
		pFnSetGCDebugPackage = (UFunction*) UObject::GObjObjects()->Data[ 51495 ];

	UBioCheatManager_execSetGCDebugPackage_Parms SetGCDebugPackage_Parms;
	memcpy ( &SetGCDebugPackage_Parms.sPackageName, &sPackageName, 0x10 );

	pFnSetGCDebugPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGCDebugPackage, &SetGCDebugPackage_Parms, NULL );

	pFnSetGCDebugPackage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.SetLocation
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 sDestination                   ( CPF_Parm | CPF_NeedCtorLink )

void UBioCheatManager::SetLocation ( struct FString sDestination )
{
	static UFunction* pFnSetLocation = NULL;

	if ( ! pFnSetLocation )
		pFnSetLocation = (UFunction*) UObject::GObjObjects()->Data[ 51493 ];

	UBioCheatManager_execSetLocation_Parms SetLocation_Parms;
	memcpy ( &SetLocation_Parms.sDestination, &sDestination, 0x10 );

	pFnSetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLocation, &SetLocation_Parms, NULL );

	pFnSetLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCheatManager.GetLocation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::GetLocation ( )
{
	static UFunction* pFnGetLocation = NULL;

	if ( ! pFnGetLocation )
		pFnGetLocation = (UFunction*) UObject::GObjObjects()->Data[ 51491 ];

	UBioCheatManager_execGetLocation_Parms GetLocation_Parms;

	this->ProcessEvent ( pFnGetLocation, &GetLocation_Parms, NULL );
};

// Function SFXGame.BioCheatManager.Suicide
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 51487 ];

	UBioCheatManager_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function SFXGame.BioCheatManager.KillCurrentTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::KillCurrentTarget ( )
{
	static UFunction* pFnKillCurrentTarget = NULL;

	if ( ! pFnKillCurrentTarget )
		pFnKillCurrentTarget = (UFunction*) UObject::GObjObjects()->Data[ 51478 ];

	UBioCheatManager_execKillCurrentTarget_Parms KillCurrentTarget_Parms;

	this->ProcessEvent ( pFnKillCurrentTarget, &KillCurrentTarget_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SuperSpeed
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::SuperSpeed ( )
{
	static UFunction* pFnSuperSpeed = NULL;

	if ( ! pFnSuperSpeed )
		pFnSuperSpeed = (UFunction*) UObject::GObjObjects()->Data[ 51476 ];

	UBioCheatManager_execSuperSpeed_Parms SuperSpeed_Parms;

	this->ProcessEvent ( pFnSuperSpeed, &SuperSpeed_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetGroundSpeed
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fSpeed                         ( CPF_Parm )

void UBioCheatManager::SetGroundSpeed ( float fSpeed )
{
	static UFunction* pFnSetGroundSpeed = NULL;

	if ( ! pFnSetGroundSpeed )
		pFnSetGroundSpeed = (UFunction*) UObject::GObjObjects()->Data[ 51474 ];

	UBioCheatManager_execSetGroundSpeed_Parms SetGroundSpeed_Parms;
	SetGroundSpeed_Parms.fSpeed = fSpeed;

	this->ProcessEvent ( pFnSetGroundSpeed, &SetGroundSpeed_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleAnimDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleAnimDebug ( )
{
	static UFunction* pFnToggleAnimDebug = NULL;

	if ( ! pFnToggleAnimDebug )
		pFnToggleAnimDebug = (UFunction*) UObject::GObjObjects()->Data[ 51473 ];

	UBioCheatManager_execToggleAnimDebug_Parms ToggleAnimDebug_Parms;

	this->ProcessEvent ( pFnToggleAnimDebug, &ToggleAnimDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowAnimationDebugInfo
// [0x00020002] 
// Parameters infos:
// class AHUD*                    aHUD                           ( CPF_Parm )

void UBioCheatManager::ShowAnimationDebugInfo ( class AHUD* aHUD )
{
	static UFunction* pFnShowAnimationDebugInfo = NULL;

	if ( ! pFnShowAnimationDebugInfo )
		pFnShowAnimationDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 51448 ];

	UBioCheatManager_execShowAnimationDebugInfo_Parms ShowAnimationDebugInfo_Parms;
	ShowAnimationDebugInfo_Parms.aHUD = aHUD;

	this->ProcessEvent ( pFnShowAnimationDebugInfo, &ShowAnimationDebugInfo_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowDebugMessages
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 aHUD                           ( CPF_Parm )

void UBioCheatManager::ShowDebugMessages ( class ABioHUD* aHUD )
{
	static UFunction* pFnShowDebugMessages = NULL;

	if ( ! pFnShowDebugMessages )
		pFnShowDebugMessages = (UFunction*) UObject::GObjObjects()->Data[ 51433 ];

	UBioCheatManager_execShowDebugMessages_Parms ShowDebugMessages_Parms;
	ShowDebugMessages_Parms.aHUD = aHUD;

	this->ProcessEvent ( pFnShowDebugMessages, &ShowDebugMessages_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DebugMessage
// [0x00024A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// float                          Length                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  Clear                          ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  oActor                         ( CPF_OptionalParm | CPF_Parm )
// int                            nInt                           ( CPF_OptionalParm | CPF_Parm )
// float                          fFloat                         ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nName                          ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::DebugMessage ( struct FString sMessage, float Length, unsigned long Clear, class AActor* oActor, int nInt, float fFloat, struct FName nName )
{
	static UFunction* pFnDebugMessage = NULL;

	if ( ! pFnDebugMessage )
		pFnDebugMessage = (UFunction*) UObject::GObjObjects()->Data[ 51424 ];

	UBioCheatManager_execDebugMessage_Parms DebugMessage_Parms;
	memcpy ( &DebugMessage_Parms.sMessage, &sMessage, 0x10 );
	DebugMessage_Parms.Length = Length;
	DebugMessage_Parms.Clear = Clear;
	DebugMessage_Parms.oActor = oActor;
	DebugMessage_Parms.nInt = nInt;
	DebugMessage_Parms.fFloat = fFloat;
	memcpy ( &DebugMessage_Parms.nName, &nName, 0x8 );

	this->ProcessEvent ( pFnDebugMessage, &DebugMessage_Parms, NULL );
};

// Function SFXGame.BioCheatManager.RenderHUD
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 aHUD                           ( CPF_Parm )

void UBioCheatManager::RenderHUD ( class ABioHUD* aHUD )
{
	static UFunction* pFnRenderHUD = NULL;

	if ( ! pFnRenderHUD )
		pFnRenderHUD = (UFunction*) UObject::GObjObjects()->Data[ 51418 ];

	UBioCheatManager_execRenderHUD_Parms RenderHUD_Parms;
	RenderHUD_Parms.aHUD = aHUD;

	this->ProcessEvent ( pFnRenderHUD, &RenderHUD_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleTacSelDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleTacSelDebug ( )
{
	static UFunction* pFnToggleTacSelDebug = NULL;

	if ( ! pFnToggleTacSelDebug )
		pFnToggleTacSelDebug = (UFunction*) UObject::GObjObjects()->Data[ 51416 ];

	UBioCheatManager_execToggleTacSelDebug_Parms ToggleTacSelDebug_Parms;

	this->ProcessEvent ( pFnToggleTacSelDebug, &ToggleTacSelDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleHesitation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleHesitation ( )
{
	static UFunction* pFnToggleHesitation = NULL;

	if ( ! pFnToggleHesitation )
		pFnToggleHesitation = (UFunction*) UObject::GObjObjects()->Data[ 51415 ];

	UBioCheatManager_execToggleHesitation_Parms ToggleHesitation_Parms;

	this->ProcessEvent ( pFnToggleHesitation, &ToggleHesitation_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ToggleMountFallRules
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ToggleMountFallRules ( )
{
	static UFunction* pFnToggleMountFallRules = NULL;

	if ( ! pFnToggleMountFallRules )
		pFnToggleMountFallRules = (UFunction*) UObject::GObjObjects()->Data[ 51414 ];

	UBioCheatManager_execToggleMountFallRules_Parms ToggleMountFallRules_Parms;

	this->ProcessEvent ( pFnToggleMountFallRules, &ToggleMountFallRules_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DrawConeReticule
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// float                          fRadius                        ( CPF_Parm )

int UBioCheatManager::DrawConeReticule ( struct FVector vLocation, float fRadius )
{
	static UFunction* pFnDrawConeReticule = NULL;

	if ( ! pFnDrawConeReticule )
		pFnDrawConeReticule = (UFunction*) UObject::GObjObjects()->Data[ 51406 ];

	UBioCheatManager_execDrawConeReticule_Parms DrawConeReticule_Parms;
	memcpy ( &DrawConeReticule_Parms.vLocation, &vLocation, 0xC );
	DrawConeReticule_Parms.fRadius = fRadius;

	this->ProcessEvent ( pFnDrawConeReticule, &DrawConeReticule_Parms, NULL );

	return DrawConeReticule_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.ReticuleWeaponRng3Mod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponRng3Mod ( float fVal )
{
	static UFunction* pFnReticuleWeaponRng3Mod = NULL;

	if ( ! pFnReticuleWeaponRng3Mod )
		pFnReticuleWeaponRng3Mod = (UFunction*) UObject::GObjObjects()->Data[ 51404 ];

	UBioCheatManager_execReticuleWeaponRng3Mod_Parms ReticuleWeaponRng3Mod_Parms;
	ReticuleWeaponRng3Mod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponRng3Mod, &ReticuleWeaponRng3Mod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponRng2Mod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponRng2Mod ( float fVal )
{
	static UFunction* pFnReticuleWeaponRng2Mod = NULL;

	if ( ! pFnReticuleWeaponRng2Mod )
		pFnReticuleWeaponRng2Mod = (UFunction*) UObject::GObjObjects()->Data[ 51402 ];

	UBioCheatManager_execReticuleWeaponRng2Mod_Parms ReticuleWeaponRng2Mod_Parms;
	ReticuleWeaponRng2Mod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponRng2Mod, &ReticuleWeaponRng2Mod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponRng1Mod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponRng1Mod ( float fVal )
{
	static UFunction* pFnReticuleWeaponRng1Mod = NULL;

	if ( ! pFnReticuleWeaponRng1Mod )
		pFnReticuleWeaponRng1Mod = (UFunction*) UObject::GObjObjects()->Data[ 51400 ];

	UBioCheatManager_execReticuleWeaponRng1Mod_Parms ReticuleWeaponRng1Mod_Parms;
	ReticuleWeaponRng1Mod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponRng1Mod, &ReticuleWeaponRng1Mod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponRng0Mod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponRng0Mod ( float fVal )
{
	static UFunction* pFnReticuleWeaponRng0Mod = NULL;

	if ( ! pFnReticuleWeaponRng0Mod )
		pFnReticuleWeaponRng0Mod = (UFunction*) UObject::GObjObjects()->Data[ 51398 ];

	UBioCheatManager_execReticuleWeaponRng0Mod_Parms ReticuleWeaponRng0Mod_Parms;
	ReticuleWeaponRng0Mod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponRng0Mod, &ReticuleWeaponRng0Mod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponCARMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponCARMod ( float fVal )
{
	static UFunction* pFnReticuleWeaponCARMod = NULL;

	if ( ! pFnReticuleWeaponCARMod )
		pFnReticuleWeaponCARMod = (UFunction*) UObject::GObjObjects()->Data[ 51396 ];

	UBioCheatManager_execReticuleWeaponCARMod_Parms ReticuleWeaponCARMod_Parms;
	ReticuleWeaponCARMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponCARMod, &ReticuleWeaponCARMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponTARMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponTARMod ( float fVal )
{
	static UFunction* pFnReticuleWeaponTARMod = NULL;

	if ( ! pFnReticuleWeaponTARMod )
		pFnReticuleWeaponTARMod = (UFunction*) UObject::GObjObjects()->Data[ 51394 ];

	UBioCheatManager_execReticuleWeaponTARMod_Parms ReticuleWeaponTARMod_Parms;
	ReticuleWeaponTARMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponTARMod, &ReticuleWeaponTARMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleMobilityMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleMobilityMod ( float fVal )
{
	static UFunction* pFnReticuleMobilityMod = NULL;

	if ( ! pFnReticuleMobilityMod )
		pFnReticuleMobilityMod = (UFunction*) UObject::GObjObjects()->Data[ 51392 ];

	UBioCheatManager_execReticuleMobilityMod_Parms ReticuleMobilityMod_Parms;
	ReticuleMobilityMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleMobilityMod, &ReticuleMobilityMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleArmorMoveMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleArmorMoveMod ( float fVal )
{
	static UFunction* pFnReticuleArmorMoveMod = NULL;

	if ( ! pFnReticuleArmorMoveMod )
		pFnReticuleArmorMoveMod = (UFunction*) UObject::GObjObjects()->Data[ 51390 ];

	UBioCheatManager_execReticuleArmorMoveMod_Parms ReticuleArmorMoveMod_Parms;
	ReticuleArmorMoveMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleArmorMoveMod, &ReticuleArmorMoveMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleWeaponMoveMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleWeaponMoveMod ( float fVal )
{
	static UFunction* pFnReticuleWeaponMoveMod = NULL;

	if ( ! pFnReticuleWeaponMoveMod )
		pFnReticuleWeaponMoveMod = (UFunction*) UObject::GObjObjects()->Data[ 51388 ];

	UBioCheatManager_execReticuleWeaponMoveMod_Parms ReticuleWeaponMoveMod_Parms;
	ReticuleWeaponMoveMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleWeaponMoveMod, &ReticuleWeaponMoveMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleSuppMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleSuppMod ( float fVal )
{
	static UFunction* pFnReticuleSuppMod = NULL;

	if ( ! pFnReticuleSuppMod )
		pFnReticuleSuppMod = (UFunction*) UObject::GObjObjects()->Data[ 51386 ];

	UBioCheatManager_execReticuleSuppMod_Parms ReticuleSuppMod_Parms;
	ReticuleSuppMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleSuppMod, &ReticuleSuppMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleIsSupp
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleIsSupp ( unsigned long bVal )
{
	static UFunction* pFnReticuleIsSupp = NULL;

	if ( ! pFnReticuleIsSupp )
		pFnReticuleIsSupp = (UFunction*) UObject::GObjObjects()->Data[ 51384 ];

	UBioCheatManager_execReticuleIsSupp_Parms ReticuleIsSupp_Parms;
	ReticuleIsSupp_Parms.bVal = bVal;

	this->ProcessEvent ( pFnReticuleIsSupp, &ReticuleIsSupp_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticulePlrAcc
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticulePlrAcc ( float fVal )
{
	static UFunction* pFnReticulePlrAcc = NULL;

	if ( ! pFnReticulePlrAcc )
		pFnReticulePlrAcc = (UFunction*) UObject::GObjObjects()->Data[ 51382 ];

	UBioCheatManager_execReticulePlrAcc_Parms ReticulePlrAcc_Parms;
	ReticulePlrAcc_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticulePlrAcc, &ReticulePlrAcc_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticulePlrLvl
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticulePlrLvl ( float fVal )
{
	static UFunction* pFnReticulePlrLvl = NULL;

	if ( ! pFnReticulePlrLvl )
		pFnReticulePlrLvl = (UFunction*) UObject::GObjObjects()->Data[ 51380 ];

	UBioCheatManager_execReticulePlrLvl_Parms ReticulePlrLvl_Parms;
	ReticulePlrLvl_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticulePlrLvl, &ReticulePlrLvl_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleBaseAR
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleBaseAR ( float fVal )
{
	static UFunction* pFnReticuleBaseAR = NULL;

	if ( ! pFnReticuleBaseAR )
		pFnReticuleBaseAR = (UFunction*) UObject::GObjObjects()->Data[ 51378 ];

	UBioCheatManager_execReticuleBaseAR_Parms ReticuleBaseAR_Parms;
	ReticuleBaseAR_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleBaseAR, &ReticuleBaseAR_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleCMax
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleCMax ( float fVal )
{
	static UFunction* pFnReticuleCMax = NULL;

	if ( ! pFnReticuleCMax )
		pFnReticuleCMax = (UFunction*) UObject::GObjObjects()->Data[ 51376 ];

	UBioCheatManager_execReticuleCMax_Parms ReticuleCMax_Parms;
	ReticuleCMax_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleCMax, &ReticuleCMax_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleCBase
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleCBase ( float fVal )
{
	static UFunction* pFnReticuleCBase = NULL;

	if ( ! pFnReticuleCBase )
		pFnReticuleCBase = (UFunction*) UObject::GObjObjects()->Data[ 51374 ];

	UBioCheatManager_execReticuleCBase_Parms ReticuleCBase_Parms;
	ReticuleCBase_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleCBase, &ReticuleCBase_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleTMax
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleTMax ( float fVal )
{
	static UFunction* pFnReticuleTMax = NULL;

	if ( ! pFnReticuleTMax )
		pFnReticuleTMax = (UFunction*) UObject::GObjObjects()->Data[ 51372 ];

	UBioCheatManager_execReticuleTMax_Parms ReticuleTMax_Parms;
	ReticuleTMax_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleTMax, &ReticuleTMax_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleTBase
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleTBase ( float fVal )
{
	static UFunction* pFnReticuleTBase = NULL;

	if ( ! pFnReticuleTBase )
		pFnReticuleTBase = (UFunction*) UObject::GObjObjects()->Data[ 51370 ];

	UBioCheatManager_execReticuleTBase_Parms ReticuleTBase_Parms;
	ReticuleTBase_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleTBase, &ReticuleTBase_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleDamageMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleDamageMod ( float fVal )
{
	static UFunction* pFnReticuleDamageMod = NULL;

	if ( ! pFnReticuleDamageMod )
		pFnReticuleDamageMod = (UFunction*) UObject::GObjObjects()->Data[ 51367 ];

	UBioCheatManager_execReticuleDamageMod_Parms ReticuleDamageMod_Parms;
	ReticuleDamageMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleDamageMod, &ReticuleDamageMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ReticuleKickbackMod
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          fVal                           ( CPF_Parm )

void UBioCheatManager::ReticuleKickbackMod ( float fVal )
{
	static UFunction* pFnReticuleKickbackMod = NULL;

	if ( ! pFnReticuleKickbackMod )
		pFnReticuleKickbackMod = (UFunction*) UObject::GObjObjects()->Data[ 51365 ];

	UBioCheatManager_execReticuleKickbackMod_Parms ReticuleKickbackMod_Parms;
	ReticuleKickbackMod_Parms.fVal = fVal;

	this->ProcessEvent ( pFnReticuleKickbackMod, &ReticuleKickbackMod_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowReticuleDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::ShowReticuleDebug ( )
{
	static UFunction* pFnShowReticuleDebug = NULL;

	if ( ! pFnShowReticuleDebug )
		pFnShowReticuleDebug = (UFunction*) UObject::GObjObjects()->Data[ 51363 ];

	UBioCheatManager_execShowReticuleDebug_Parms ShowReticuleDebug_Parms;

	this->ProcessEvent ( pFnShowReticuleDebug, &ShowReticuleDebug_Parms, NULL );
};

// Function SFXGame.BioCheatManager.version
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::version ( )
{
	static UFunction* pFnversion = NULL;

	if ( ! pFnversion )
		pFnversion = (UFunction*) UObject::GObjObjects()->Data[ 51360 ];

	UBioCheatManager_execversion_Parms version_Parms;

	this->ProcessEvent ( pFnversion, &version_Parms, NULL );
};

// Function SFXGame.BioCheatManager.ShowReticuleDebugInfo
// [0x00020002] 
// Parameters infos:
// class AHUD*                    aHUD                           ( CPF_Parm )

void UBioCheatManager::ShowReticuleDebugInfo ( class AHUD* aHUD )
{
	static UFunction* pFnShowReticuleDebugInfo = NULL;

	if ( ! pFnShowReticuleDebugInfo )
		pFnShowReticuleDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 51333 ];

	UBioCheatManager_execShowReticuleDebugInfo_Parms ShowReticuleDebugInfo_Parms;
	ShowReticuleDebugInfo_Parms.aHUD = aHUD;

	this->ProcessEvent ( pFnShowReticuleDebugInfo, &ShowReticuleDebugInfo_Parms, NULL );
};

// Function SFXGame.BioCheatManager.SetProfileColumn
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            ColumnIdx                      ( CPF_Parm )

void UBioCheatManager::eventSetProfileColumn ( int ColumnIdx )
{
	static UFunction* pFnSetProfileColumn = NULL;

	if ( ! pFnSetProfileColumn )
		pFnSetProfileColumn = (UFunction*) UObject::GObjObjects()->Data[ 51331 ];

	UBioCheatManager_eventSetProfileColumn_Parms SetProfileColumn_Parms;
	SetProfileColumn_Parms.ColumnIdx = ColumnIdx;

	this->ProcessEvent ( pFnSetProfileColumn, &SetProfileColumn_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetProfileColumnCoord
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioCheatManager::eventGetProfileColumnCoord ( )
{
	static UFunction* pFnGetProfileColumnCoord = NULL;

	if ( ! pFnGetProfileColumnCoord )
		pFnGetProfileColumnCoord = (UFunction*) UObject::GObjObjects()->Data[ 51326 ];

	UBioCheatManager_eventGetProfileColumnCoord_Parms GetProfileColumnCoord_Parms;

	this->ProcessEvent ( pFnGetProfileColumnCoord, &GetProfileColumnCoord_Parms, NULL );

	return GetProfileColumnCoord_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.DrawProfileText
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned long                  Highlight                      ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::eventDrawProfileText ( struct FString Text, unsigned long Highlight )
{
	static UFunction* pFnDrawProfileText = NULL;

	if ( ! pFnDrawProfileText )
		pFnDrawProfileText = (UFunction*) UObject::GObjObjects()->Data[ 50225 ];

	UBioCheatManager_eventDrawProfileText_Parms DrawProfileText_Parms;
	memcpy ( &DrawProfileText_Parms.Text, &Text, 0x10 );
	DrawProfileText_Parms.Highlight = Highlight;

	this->ProcessEvent ( pFnDrawProfileText, &DrawProfileText_Parms, NULL );
};

// Function SFXGame.BioCheatManager.DrawProfileHeaderText
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned long                  Highlight                      ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::eventDrawProfileHeaderText ( struct FString Text, unsigned long Highlight )
{
	static UFunction* pFnDrawProfileHeaderText = NULL;

	if ( ! pFnDrawProfileHeaderText )
		pFnDrawProfileHeaderText = (UFunction*) UObject::GObjObjects()->Data[ 51315 ];

	UBioCheatManager_eventDrawProfileHeaderText_Parms DrawProfileHeaderText_Parms;
	memcpy ( &DrawProfileHeaderText_Parms.Text, &Text, 0x10 );
	DrawProfileHeaderText_Parms.Highlight = Highlight;

	this->ProcessEvent ( pFnDrawProfileHeaderText, &DrawProfileHeaderText_Parms, NULL );
};

// Function SFXGame.BioCheatManager.LockRet
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::LockRet ( )
{
	static UFunction* pFnLockRet = NULL;

	if ( ! pFnLockRet )
		pFnLockRet = (UFunction*) UObject::GObjObjects()->Data[ 51313 ];

	UBioCheatManager_execLockRet_Parms LockRet_Parms;

	this->ProcessEvent ( pFnLockRet, &LockRet_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AddTargetToParty
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioCheatManager::AddTargetToParty ( )
{
	static UFunction* pFnAddTargetToParty = NULL;

	if ( ! pFnAddTargetToParty )
		pFnAddTargetToParty = (UFunction*) UObject::GObjObjects()->Data[ 51311 ];

	UBioCheatManager_execAddTargetToParty_Parms AddTargetToParty_Parms;

	this->ProcessEvent ( pFnAddTargetToParty, &AddTargetToParty_Parms, NULL );
};

// Function SFXGame.BioCheatManager.AT
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   newArea                        ( CPF_Parm )
// struct FName                   StartPoint                     ( CPF_OptionalParm | CPF_Parm )

void UBioCheatManager::AT ( struct FName newArea, struct FName StartPoint )
{
	static UFunction* pFnAT = NULL;

	if ( ! pFnAT )
		pFnAT = (UFunction*) UObject::GObjObjects()->Data[ 51307 ];

	UBioCheatManager_execAT_Parms AT_Parms;
	memcpy ( &AT_Parms.newArea, &newArea, 0x8 );
	memcpy ( &AT_Parms.StartPoint, &StartPoint, 0x8 );

	this->ProcessEvent ( pFnAT, &AT_Parms, NULL );
};

// Function SFXGame.BioCheatManager.GetPlotZoneFromAreaName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   newArea                        ( CPF_Parm )

int UBioCheatManager::GetPlotZoneFromAreaName ( struct FName newArea )
{
	static UFunction* pFnGetPlotZoneFromAreaName = NULL;

	if ( ! pFnGetPlotZoneFromAreaName )
		pFnGetPlotZoneFromAreaName = (UFunction*) UObject::GObjObjects()->Data[ 51304 ];

	UBioCheatManager_execGetPlotZoneFromAreaName_Parms GetPlotZoneFromAreaName_Parms;
	memcpy ( &GetPlotZoneFromAreaName_Parms.newArea, &newArea, 0x8 );

	this->ProcessEvent ( pFnGetPlotZoneFromAreaName, &GetPlotZoneFromAreaName_Parms, NULL );

	return GetPlotZoneFromAreaName_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.GetController
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPlayerController* UBioCheatManager::GetController ( )
{
	static UFunction* pFnGetController = NULL;

	if ( ! pFnGetController )
		pFnGetController = (UFunction*) UObject::GObjObjects()->Data[ 51302 ];

	UBioCheatManager_execGetController_Parms GetController_Parms;

	this->ProcessEvent ( pFnGetController, &GetController_Parms, NULL );

	return GetController_Parms.ReturnValue;
};

// Function SFXGame.BioCheatManager.getWorld
// [0x00020002] 
// Parameters infos:
// class ABioWorldInfo*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioWorldInfo* UBioCheatManager::getWorld ( )
{
	static UFunction* pFngetWorld = NULL;

	if ( ! pFngetWorld )
		pFngetWorld = (UFunction*) UObject::GObjObjects()->Data[ 51300 ];

	UBioCheatManager_execgetWorld_Parms getWorld_Parms;

	this->ProcessEvent ( pFngetWorld, &getWorld_Parms, NULL );

	return getWorld_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.SetFlyCam
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UBioPlayerInput::SetFlyCam ( unsigned long bOn )
{
	static UFunction* pFnSetFlyCam = NULL;

	if ( ! pFnSetFlyCam )
		pFnSetFlyCam = (UFunction*) UObject::GObjObjects()->Data[ 57169 ];

	UBioPlayerInput_execSetFlyCam_Parms SetFlyCam_Parms;
	SetFlyCam_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetFlyCam, &SetFlyCam_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.ToggleFlyCam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UBioPlayerInput::ToggleFlyCam ( )
{
	static UFunction* pFnToggleFlyCam = NULL;

	if ( ! pFnToggleFlyCam )
		pFnToggleFlyCam = (UFunction*) UObject::GObjObjects()->Data[ 57168 ];

	UBioPlayerInput_execToggleFlyCam_Parms ToggleFlyCam_Parms;

	this->ProcessEvent ( pFnToggleFlyCam, &ToggleFlyCam_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.IsCrossCircleSwapped
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPlayerInput::IsCrossCircleSwapped ( )
{
	static UFunction* pFnIsCrossCircleSwapped = NULL;

	if ( ! pFnIsCrossCircleSwapped )
		pFnIsCrossCircleSwapped = (UFunction*) UObject::GObjObjects()->Data[ 56463 ];

	UBioPlayerInput_execIsCrossCircleSwapped_Parms IsCrossCircleSwapped_Parms;

	pFnIsCrossCircleSwapped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCrossCircleSwapped, &IsCrossCircleSwapped_Parms, NULL );

	pFnIsCrossCircleSwapped->FunctionFlags |= 0x400;

	return IsCrossCircleSwapped_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.GetBind
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  Control                        ( CPF_Parm )
// unsigned long                  Shift                          ( CPF_Parm )
// unsigned long                  Alt                            ( CPF_Parm )
// struct FName                   Key                            ( CPF_Const | CPF_Parm | CPF_OutParm )

struct FString UBioPlayerInput::GetBind ( unsigned long Control, unsigned long Shift, unsigned long Alt, struct FName* Key )
{
	static UFunction* pFnGetBind = NULL;

	if ( ! pFnGetBind )
		pFnGetBind = (UFunction*) UObject::GObjObjects()->Data[ 57162 ];

	UBioPlayerInput_execGetBind_Parms GetBind_Parms;
	GetBind_Parms.Control = Control;
	GetBind_Parms.Shift = Shift;
	GetBind_Parms.Alt = Alt;

	pFnGetBind->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBind, &GetBind_Parms, NULL );

	pFnGetBind->FunctionFlags |= 0x400;

	if ( Key )
		memcpy ( Key, &GetBind_Parms.Key, 0x8 );

	return GetBind_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.FlushPressedKeys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPlayerInput::FlushPressedKeys ( )
{
	static UFunction* pFnFlushPressedKeys = NULL;

	if ( ! pFnFlushPressedKeys )
		pFnFlushPressedKeys = (UFunction*) UObject::GObjObjects()->Data[ 57161 ];

	UBioPlayerInput_execFlushPressedKeys_Parms FlushPressedKeys_Parms;

	pFnFlushPressedKeys->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushPressedKeys, &FlushPressedKeys_Parms, NULL );

	pFnFlushPressedKeys->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerInput.IsCombatEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPlayerInput::IsCombatEnabled ( )
{
	static UFunction* pFnIsCombatEnabled = NULL;

	if ( ! pFnIsCombatEnabled )
		pFnIsCombatEnabled = (UFunction*) UObject::GObjObjects()->Data[ 57159 ];

	UBioPlayerInput_execIsCombatEnabled_Parms IsCombatEnabled_Parms;

	pFnIsCombatEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCombatEnabled, &IsCombatEnabled_Parms, NULL );

	pFnIsCombatEnabled->FunctionFlags |= 0x400;

	return IsCombatEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.ActivateEquip
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eWeapon                        ( CPF_Parm )

bool UBioPlayerInput::ActivateEquip ( unsigned char eWeapon )
{
	static UFunction* pFnActivateEquip = NULL;

	if ( ! pFnActivateEquip )
		pFnActivateEquip = (UFunction*) UObject::GObjObjects()->Data[ 57156 ];

	UBioPlayerInput_execActivateEquip_Parms ActivateEquip_Parms;
	ActivateEquip_Parms.eWeapon = eWeapon;

	pFnActivateEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateEquip, &ActivateEquip_Parms, NULL );

	pFnActivateEquip->FunctionFlags |= 0x400;

	return ActivateEquip_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.ActivatePower
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPower                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTargetLocation                ( CPF_OptionalParm | CPF_Parm )

bool UBioPlayerInput::ActivatePower ( struct FName nmPower, class AActor* oTarget, struct FVector vTargetLocation )
{
	static UFunction* pFnActivatePower = NULL;

	if ( ! pFnActivatePower )
		pFnActivatePower = (UFunction*) UObject::GObjObjects()->Data[ 52345 ];

	UBioPlayerInput_execActivatePower_Parms ActivatePower_Parms;
	memcpy ( &ActivatePower_Parms.nmPower, &nmPower, 0x8 );
	ActivatePower_Parms.oTarget = oTarget;
	memcpy ( &ActivatePower_Parms.vTargetLocation, &vTargetLocation, 0xC );

	pFnActivatePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivatePower, &ActivatePower_Parms, NULL );

	pFnActivatePower->FunctionFlags |= 0x400;

	return ActivatePower_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.ActivateGrenade
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPlayerInput::ActivateGrenade ( )
{
	static UFunction* pFnActivateGrenade = NULL;

	if ( ! pFnActivateGrenade )
		pFnActivateGrenade = (UFunction*) UObject::GObjObjects()->Data[ 57152 ];

	UBioPlayerInput_execActivateGrenade_Parms ActivateGrenade_Parms;

	pFnActivateGrenade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateGrenade, &ActivateGrenade_Parms, NULL );

	pFnActivateGrenade->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerInput.RemapControlsByRotation
// [0x00420002] 
// Parameters infos:
// struct FRotator                DeltaRot                       ( CPF_Parm )
// float                          NewRight                       ( CPF_Parm | CPF_OutParm )
// float                          NewUp                          ( CPF_Parm | CPF_OutParm )

void UBioPlayerInput::RemapControlsByRotation ( struct FRotator DeltaRot, float* NewRight, float* NewUp )
{
	static UFunction* pFnRemapControlsByRotation = NULL;

	if ( ! pFnRemapControlsByRotation )
		pFnRemapControlsByRotation = (UFunction*) UObject::GObjObjects()->Data[ 57144 ];

	UBioPlayerInput_execRemapControlsByRotation_Parms RemapControlsByRotation_Parms;
	memcpy ( &RemapControlsByRotation_Parms.DeltaRot, &DeltaRot, 0xC );

	this->ProcessEvent ( pFnRemapControlsByRotation, &RemapControlsByRotation_Parms, NULL );

	if ( NewRight )
		*NewRight = RemapControlsByRotation_Parms.NewRight;

	if ( NewUp )
		*NewUp = RemapControlsByRotation_Parms.NewUp;
};

// Function SFXGame.BioPlayerInput.UpdateViewRotation
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioPlayerInput::UpdateViewRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateViewRotation = NULL;

	if ( ! pFnUpdateViewRotation )
		pFnUpdateViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 57137 ];

	UBioPlayerInput_execUpdateViewRotation_Parms UpdateViewRotation_Parms;
	UpdateViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewRotation, &UpdateViewRotation_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.PlayerInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioPlayerInput::PlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 57127 ];

	UBioPlayerInput_execPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.SmoothGuiMouse
// [0x00420002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          aMouse                         ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// int                            Index                          ( CPF_Parm )
// unsigned char                  SampleCount                    ( CPF_Parm | CPF_OutParm )

float UBioPlayerInput::SmoothGuiMouse ( float aMouse, float DeltaTime, int Index, unsigned char* SampleCount )
{
	static UFunction* pFnSmoothGuiMouse = NULL;

	if ( ! pFnSmoothGuiMouse )
		pFnSmoothGuiMouse = (UFunction*) UObject::GObjObjects()->Data[ 57116 ];

	UBioPlayerInput_execSmoothGuiMouse_Parms SmoothGuiMouse_Parms;
	SmoothGuiMouse_Parms.aMouse = aMouse;
	SmoothGuiMouse_Parms.DeltaTime = DeltaTime;
	SmoothGuiMouse_Parms.Index = Index;

	this->ProcessEvent ( pFnSmoothGuiMouse, &SmoothGuiMouse_Parms, NULL );

	if ( SampleCount )
		*SampleCount = SmoothGuiMouse_Parms.SampleCount;

	return SmoothGuiMouse_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.PostProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioPlayerInput::PostProcessInput ( float DeltaTime )
{
	static UFunction* pFnPostProcessInput = NULL;

	if ( ! pFnPostProcessInput )
		pFnPostProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 57111 ];

	UBioPlayerInput_execPostProcessInput_Parms PostProcessInput_Parms;
	PostProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPostProcessInput, &PostProcessInput_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.AdjustMouseSensitivity
// [0x00020002] 
// Parameters infos:
// float                          FOVScale                       ( CPF_Parm )

void UBioPlayerInput::AdjustMouseSensitivity ( float FOVScale )
{
	static UFunction* pFnAdjustMouseSensitivity = NULL;

	if ( ! pFnAdjustMouseSensitivity )
		pFnAdjustMouseSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 57105 ];

	UBioPlayerInput_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;

	this->ProcessEvent ( pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UBioPlayerInput::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 57083 ];

	UBioPlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function SFXGame.BioPlayerInput.ComputeStickResponse
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          RawStickValue                  ( CPF_Parm )
// class USFXCameraInput*         Input                          ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

float UBioPlayerInput::ComputeStickResponse ( float RawStickValue, class USFXCameraInput* Input, float DeltaTime )
{
	static UFunction* pFnComputeStickResponse = NULL;

	if ( ! pFnComputeStickResponse )
		pFnComputeStickResponse = (UFunction*) UObject::GObjObjects()->Data[ 57070 ];

	UBioPlayerInput_execComputeStickResponse_Parms ComputeStickResponse_Parms;
	ComputeStickResponse_Parms.RawStickValue = RawStickValue;
	ComputeStickResponse_Parms.Input = Input;
	ComputeStickResponse_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnComputeStickResponse, &ComputeStickResponse_Parms, NULL );

	return ComputeStickResponse_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerInput.UpdateMouseSensitivityFromSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void UBioPlayerInput::eventUpdateMouseSensitivityFromSettings ( int Value )
{
	static UFunction* pFnUpdateMouseSensitivityFromSettings = NULL;

	if ( ! pFnUpdateMouseSensitivityFromSettings )
		pFnUpdateMouseSensitivityFromSettings = (UFunction*) UObject::GObjObjects()->Data[ 57066 ];

	UBioPlayerInput_eventUpdateMouseSensitivityFromSettings_Parms UpdateMouseSensitivityFromSettings_Parms;
	UpdateMouseSensitivityFromSettings_Parms.Value = Value;

	this->ProcessEvent ( pFnUpdateMouseSensitivityFromSettings, &UpdateMouseSensitivityFromSettings_Parms, NULL );
};

// Function SFXGame.BioPlayerSelection.IsSelectable
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// class UBioEpicPawnBehavior*    sourcePawnBehavior             ( CPF_Parm )

bool UBioPlayerSelection::IsSelectable ( class AActor* oTarget, class UBioEpicPawnBehavior* sourcePawnBehavior )
{
	static UFunction* pFnIsSelectable = NULL;

	if ( ! pFnIsSelectable )
		pFnIsSelectable = (UFunction*) UObject::GObjObjects()->Data[ 55957 ];

	UBioPlayerSelection_execIsSelectable_Parms IsSelectable_Parms;
	IsSelectable_Parms.oTarget = oTarget;
	IsSelectable_Parms.sourcePawnBehavior = sourcePawnBehavior;

	pFnIsSelectable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSelectable, &IsSelectable_Parms, NULL );

	pFnIsSelectable->FunctionFlags |= 0x400;

	return IsSelectable_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSelection.DrawSelectionReticule
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FColor                  ReticuleColor                  ( CPF_Parm )
// float                          fOffset                        ( CPF_OptionalParm | CPF_Parm )

void UBioPlayerSelection::DrawSelectionReticule ( class AActor* oTarget, struct FColor ReticuleColor, float fOffset )
{
	static UFunction* pFnDrawSelectionReticule = NULL;

	if ( ! pFnDrawSelectionReticule )
		pFnDrawSelectionReticule = (UFunction*) UObject::GObjObjects()->Data[ 55953 ];

	UBioPlayerSelection_execDrawSelectionReticule_Parms DrawSelectionReticule_Parms;
	DrawSelectionReticule_Parms.oTarget = oTarget;
	memcpy ( &DrawSelectionReticule_Parms.ReticuleColor, &ReticuleColor, 0x4 );
	DrawSelectionReticule_Parms.fOffset = fOffset;

	pFnDrawSelectionReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawSelectionReticule, &DrawSelectionReticule_Parms, NULL );

	pFnDrawSelectionReticule->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSelection.IsInLineOfSightFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vSourceLoc                     ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )

bool UBioPlayerSelection::IsInLineOfSightFrom ( struct FVector vSourceLoc, class AActor* oTarget )
{
	static UFunction* pFnIsInLineOfSightFrom = NULL;

	if ( ! pFnIsInLineOfSightFrom )
		pFnIsInLineOfSightFrom = (UFunction*) UObject::GObjObjects()->Data[ 55949 ];

	UBioPlayerSelection_execIsInLineOfSightFrom_Parms IsInLineOfSightFrom_Parms;
	memcpy ( &IsInLineOfSightFrom_Parms.vSourceLoc, &vSourceLoc, 0xC );
	IsInLineOfSightFrom_Parms.oTarget = oTarget;

	pFnIsInLineOfSightFrom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInLineOfSightFrom, &IsInLineOfSightFrom_Parms, NULL );

	pFnIsInLineOfSightFrom->FunctionFlags |= 0x400;

	return IsInLineOfSightFrom_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSelection.Init
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioPlayerSelection::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55948 ];

	UBioPlayerSelection_execInit_Parms Init_Parms;

	pFnInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	pFnInit->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSelection.SetPreviousSelectionMode
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceActive                   ( CPF_OptionalParm | CPF_Parm )

bool UBioPlayerSelection::SetPreviousSelectionMode ( unsigned long bForceActive )
{
	static UFunction* pFnSetPreviousSelectionMode = NULL;

	if ( ! pFnSetPreviousSelectionMode )
		pFnSetPreviousSelectionMode = (UFunction*) UObject::GObjObjects()->Data[ 55945 ];

	UBioPlayerSelection_execSetPreviousSelectionMode_Parms SetPreviousSelectionMode_Parms;
	SetPreviousSelectionMode_Parms.bForceActive = bForceActive;

	pFnSetPreviousSelectionMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviousSelectionMode, &SetPreviousSelectionMode_Parms, NULL );

	pFnSetPreviousSelectionMode->FunctionFlags |= 0x400;

	return SetPreviousSelectionMode_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSelection.SetSelectionMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nSelectionMode                 ( CPF_Parm )

bool UBioPlayerSelection::SetSelectionMode ( unsigned char nSelectionMode )
{
	static UFunction* pFnSetSelectionMode = NULL;

	if ( ! pFnSetSelectionMode )
		pFnSetSelectionMode = (UFunction*) UObject::GObjObjects()->Data[ 55942 ];

	UBioPlayerSelection_execSetSelectionMode_Parms SetSelectionMode_Parms;
	SetSelectionMode_Parms.nSelectionMode = nSelectionMode;

	pFnSetSelectionMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSelectionMode, &SetSelectionMode_Parms, NULL );

	pFnSetSelectionMode->FunctionFlags |= 0x400;

	return SetSelectionMode_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSelection.UpdateSelection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )

bool UBioPlayerSelection::UpdateSelection ( float fDeltaTime )
{
	static UFunction* pFnUpdateSelection = NULL;

	if ( ! pFnUpdateSelection )
		pFnUpdateSelection = (UFunction*) UObject::GObjObjects()->Data[ 55939 ];

	UBioPlayerSelection_execUpdateSelection_Parms UpdateSelection_Parms;
	UpdateSelection_Parms.fDeltaTime = fDeltaTime;

	pFnUpdateSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSelection, &UpdateSelection_Parms, NULL );

	pFnUpdateSelection->FunctionFlags |= 0x400;

	return UpdateSelection_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.DisableCamera
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bDisableCamera                 ( CPF_Parm )

void UBioConversation::eventDisableCamera ( unsigned long bDisableCamera )
{
	static UFunction* pFnDisableCamera = NULL;

	if ( ! pFnDisableCamera )
		pFnDisableCamera = (UFunction*) UObject::GObjObjects()->Data[ 52605 ];

	UBioConversation_eventDisableCamera_Parms DisableCamera_Parms;
	DisableCamera_Parms.bDisableCamera = bDisableCamera;

	this->ProcessEvent ( pFnDisableCamera, &DisableCamera_Parms, NULL );
};

// Function SFXGame.BioConversation.BioVINCE_MapName_MissingLipSync
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioConversation::BioVINCE_MapName_MissingLipSync ( )
{
	static UFunction* pFnBioVINCE_MapName_MissingLipSync = NULL;

	if ( ! pFnBioVINCE_MapName_MissingLipSync )
		pFnBioVINCE_MapName_MissingLipSync = (UFunction*) UObject::GObjObjects()->Data[ 52604 ];

	UBioConversation_execBioVINCE_MapName_MissingLipSync_Parms BioVINCE_MapName_MissingLipSync_Parms;

	pFnBioVINCE_MapName_MissingLipSync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_MissingLipSync, &BioVINCE_MapName_MissingLipSync_Parms, NULL );

	pFnBioVINCE_MapName_MissingLipSync->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.BioVINCE_MapName_MissingVO
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioConversation::BioVINCE_MapName_MissingVO ( )
{
	static UFunction* pFnBioVINCE_MapName_MissingVO = NULL;

	if ( ! pFnBioVINCE_MapName_MissingVO )
		pFnBioVINCE_MapName_MissingVO = (UFunction*) UObject::GObjObjects()->Data[ 52603 ];

	UBioConversation_execBioVINCE_MapName_MissingVO_Parms BioVINCE_MapName_MissingVO_Parms;

	pFnBioVINCE_MapName_MissingVO->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_MissingVO, &BioVINCE_MapName_MissingVO_Parms, NULL );

	pFnBioVINCE_MapName_MissingVO->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.GetReplyGUIStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

unsigned char UBioConversation::GetReplyGUIStyle ( int nIndex )
{
	static UFunction* pFnGetReplyGUIStyle = NULL;

	if ( ! pFnGetReplyGUIStyle )
		pFnGetReplyGUIStyle = (UFunction*) UObject::GObjObjects()->Data[ 52600 ];

	UBioConversation_execGetReplyGUIStyle_Parms GetReplyGUIStyle_Parms;
	GetReplyGUIStyle_Parms.nIndex = nIndex;

	pFnGetReplyGUIStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReplyGUIStyle, &GetReplyGUIStyle_Parms, NULL );

	pFnGetReplyGUIStyle->FunctionFlags |= 0x400;

	return GetReplyGUIStyle_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.FinishEntryNode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nEntryIndex                    ( CPF_Parm )

bool UBioConversation::FinishEntryNode ( int nEntryIndex )
{
	static UFunction* pFnFinishEntryNode = NULL;

	if ( ! pFnFinishEntryNode )
		pFnFinishEntryNode = (UFunction*) UObject::GObjObjects()->Data[ 52597 ];

	UBioConversation_execFinishEntryNode_Parms FinishEntryNode_Parms;
	FinishEntryNode_Parms.nEntryIndex = nEntryIndex;

	pFnFinishEntryNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFinishEntryNode, &FinishEntryNode_Parms, NULL );

	pFnFinishEntryNode->FunctionFlags |= 0x400;

	return FinishEntryNode_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.NeedToDisplayReplies
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConversation::NeedToDisplayReplies ( )
{
	static UFunction* pFnNeedToDisplayReplies = NULL;

	if ( ! pFnNeedToDisplayReplies )
		pFnNeedToDisplayReplies = (UFunction*) UObject::GObjObjects()->Data[ 52595 ];

	UBioConversation_execNeedToDisplayReplies_Parms NeedToDisplayReplies_Parms;

	pFnNeedToDisplayReplies->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNeedToDisplayReplies, &NeedToDisplayReplies_Parms, NULL );

	pFnNeedToDisplayReplies->FunctionFlags |= 0x400;

	return NeedToDisplayReplies_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.StopScript
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Script                         ( CPF_Parm | CPF_NeedCtorLink )

void UBioConversation::StopScript ( struct FString Script )
{
	static UFunction* pFnStopScript = NULL;

	if ( ! pFnStopScript )
		pFnStopScript = (UFunction*) UObject::GObjObjects()->Data[ 52593 ];

	UBioConversation_execStopScript_Parms StopScript_Parms;
	memcpy ( &StopScript_Parms.Script, &Script, 0x10 );

	pFnStopScript->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopScript, &StopScript_Parms, NULL );

	pFnStopScript->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.GetReplyExportID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

int UBioConversation::GetReplyExportID ( int nIndex )
{
	static UFunction* pFnGetReplyExportID = NULL;

	if ( ! pFnGetReplyExportID )
		pFnGetReplyExportID = (UFunction*) UObject::GObjObjects()->Data[ 52590 ];

	UBioConversation_execGetReplyExportID_Parms GetReplyExportID_Parms;
	GetReplyExportID_Parms.nIndex = nIndex;

	pFnGetReplyExportID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReplyExportID, &GetReplyExportID_Parms, NULL );

	pFnGetReplyExportID->FunctionFlags |= 0x400;

	return GetReplyExportID_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetReplyCategory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

int UBioConversation::GetReplyCategory ( int nIndex )
{
	static UFunction* pFnGetReplyCategory = NULL;

	if ( ! pFnGetReplyCategory )
		pFnGetReplyCategory = (UFunction*) UObject::GObjObjects()->Data[ 52587 ];

	UBioConversation_execGetReplyCategory_Parms GetReplyCategory_Parms;
	GetReplyCategory_Parms.nIndex = nIndex;

	pFnGetReplyCategory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReplyCategory, &GetReplyCategory_Parms, NULL );

	pFnGetReplyCategory->FunctionFlags |= 0x400;

	return GetReplyCategory_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetReplyParaphraseText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            nIndex                         ( CPF_Parm )

struct FString UBioConversation::GetReplyParaphraseText ( int nIndex )
{
	static UFunction* pFnGetReplyParaphraseText = NULL;

	if ( ! pFnGetReplyParaphraseText )
		pFnGetReplyParaphraseText = (UFunction*) UObject::GObjObjects()->Data[ 52584 ];

	UBioConversation_execGetReplyParaphraseText_Parms GetReplyParaphraseText_Parms;
	GetReplyParaphraseText_Parms.nIndex = nIndex;

	pFnGetReplyParaphraseText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReplyParaphraseText, &GetReplyParaphraseText_Parms, NULL );

	pFnGetReplyParaphraseText->FunctionFlags |= 0x400;

	return GetReplyParaphraseText_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetReplyText
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bParse                         ( CPF_OptionalParm | CPF_Parm )

struct FString UBioConversation::GetReplyText ( int nIndex, unsigned long bParse )
{
	static UFunction* pFnGetReplyText = NULL;

	if ( ! pFnGetReplyText )
		pFnGetReplyText = (UFunction*) UObject::GObjObjects()->Data[ 52580 ];

	UBioConversation_execGetReplyText_Parms GetReplyText_Parms;
	GetReplyText_Parms.nIndex = nIndex;
	GetReplyText_Parms.bParse = bParse;

	pFnGetReplyText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReplyText, &GetReplyText_Parms, NULL );

	pFnGetReplyText->FunctionFlags |= 0x400;

	return GetReplyText_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetEntryText
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  bParse                         ( CPF_OptionalParm | CPF_Parm )

struct FString UBioConversation::GetEntryText ( unsigned long bParse )
{
	static UFunction* pFnGetEntryText = NULL;

	if ( ! pFnGetEntryText )
		pFnGetEntryText = (UFunction*) UObject::GObjObjects()->Data[ 52577 ];

	UBioConversation_execGetEntryText_Parms GetEntryText_Parms;
	GetEntryText_Parms.bParse = bParse;

	pFnGetEntryText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEntryText, &GetEntryText_Parms, NULL );

	pFnGetEntryText->FunctionFlags |= 0x400;

	return GetEntryText_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetSpeaker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class AActor* UBioConversation::GetSpeaker ( int nIndex )
{
	static UFunction* pFnGetSpeaker = NULL;

	if ( ! pFnGetSpeaker )
		pFnGetSpeaker = (UFunction*) UObject::GObjObjects()->Data[ 52574 ];

	UBioConversation_execGetSpeaker_Parms GetSpeaker_Parms;
	GetSpeaker_Parms.nIndex = nIndex;

	pFnGetSpeaker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpeaker, &GetSpeaker_Parms, NULL );

	pFnGetSpeaker->FunctionFlags |= 0x400;

	return GetSpeaker_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.UpdateFacing
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioConversation::UpdateFacing ( )
{
	static UFunction* pFnUpdateFacing = NULL;

	if ( ! pFnUpdateFacing )
		pFnUpdateFacing = (UFunction*) UObject::GObjObjects()->Data[ 52573 ];

	UBioConversation_execUpdateFacing_Parms UpdateFacing_Parms;

	pFnUpdateFacing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFacing, &UpdateFacing_Parms, NULL );

	pFnUpdateFacing->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.UpdateLookAtTargets
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioConversation::UpdateLookAtTargets ( float fDeltaT )
{
	static UFunction* pFnUpdateLookAtTargets = NULL;

	if ( ! pFnUpdateLookAtTargets )
		pFnUpdateLookAtTargets = (UFunction*) UObject::GObjObjects()->Data[ 52571 ];

	UBioConversation_execUpdateLookAtTargets_Parms UpdateLookAtTargets_Parms;
	UpdateLookAtTargets_Parms.fDeltaT = fDeltaT;

	pFnUpdateLookAtTargets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLookAtTargets, &UpdateLookAtTargets_Parms, NULL );

	pFnUpdateLookAtTargets->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.UpdateLookAtList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pBioPawn                       ( CPF_Parm )

void UBioConversation::UpdateLookAtList ( class ABioPawn* pBioPawn )
{
	static UFunction* pFnUpdateLookAtList = NULL;

	if ( ! pFnUpdateLookAtList )
		pFnUpdateLookAtList = (UFunction*) UObject::GObjObjects()->Data[ 52569 ];

	UBioConversation_execUpdateLookAtList_Parms UpdateLookAtList_Parms;
	UpdateLookAtList_Parms.pBioPawn = pBioPawn;

	pFnUpdateLookAtList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLookAtList, &UpdateLookAtList_Parms, NULL );

	pFnUpdateLookAtList->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.switchToAmbient
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioConversation::switchToAmbient ( )
{
	static UFunction* pFnswitchToAmbient = NULL;

	if ( ! pFnswitchToAmbient )
		pFnswitchToAmbient = (UFunction*) UObject::GObjObjects()->Data[ 52568 ];

	UBioConversation_execswitchToAmbient_Parms switchToAmbient_Parms;

	pFnswitchToAmbient->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnswitchToAmbient, &switchToAmbient_Parms, NULL );

	pFnswitchToAmbient->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.IsAmbient
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConversation::IsAmbient ( )
{
	static UFunction* pFnIsAmbient = NULL;

	if ( ! pFnIsAmbient )
		pFnIsAmbient = (UFunction*) UObject::GObjObjects()->Data[ 52566 ];

	UBioConversation_execIsAmbient_Parms IsAmbient_Parms;

	pFnIsAmbient->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAmbient, &IsAmbient_Parms, NULL );

	pFnIsAmbient->FunctionFlags |= 0x400;

	return IsAmbient_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.WaitingForReply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConversation::WaitingForReply ( )
{
	static UFunction* pFnWaitingForReply = NULL;

	if ( ! pFnWaitingForReply )
		pFnWaitingForReply = (UFunction*) UObject::GObjObjects()->Data[ 52564 ];

	UBioConversation_execWaitingForReply_Parms WaitingForReply_Parms;

	pFnWaitingForReply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWaitingForReply, &WaitingForReply_Parms, NULL );

	pFnWaitingForReply->FunctionFlags |= 0x400;

	return WaitingForReply_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.SkipNode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConversation::SkipNode ( )
{
	static UFunction* pFnSkipNode = NULL;

	if ( ! pFnSkipNode )
		pFnSkipNode = (UFunction*) UObject::GObjObjects()->Data[ 52562 ];

	UBioConversation_execSkipNode_Parms SkipNode_Parms;

	pFnSkipNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkipNode, &SkipNode_Parms, NULL );

	pFnSkipNode->FunctionFlags |= 0x400;

	return SkipNode_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.FinishSelectedReply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConversation::FinishSelectedReply ( )
{
	static UFunction* pFnFinishSelectedReply = NULL;

	if ( ! pFnFinishSelectedReply )
		pFnFinishSelectedReply = (UFunction*) UObject::GObjObjects()->Data[ 52560 ];

	UBioConversation_execFinishSelectedReply_Parms FinishSelectedReply_Parms;

	pFnFinishSelectedReply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFinishSelectedReply, &FinishSelectedReply_Parms, NULL );

	pFnFinishSelectedReply->FunctionFlags |= 0x400;

	return FinishSelectedReply_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.QueueReply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nReply                         ( CPF_Parm )

bool UBioConversation::QueueReply ( int nReply )
{
	static UFunction* pFnQueueReply = NULL;

	if ( ! pFnQueueReply )
		pFnQueueReply = (UFunction*) UObject::GObjObjects()->Data[ 52557 ];

	UBioConversation_execQueueReply_Parms QueueReply_Parms;
	QueueReply_Parms.nReply = nReply;

	pFnQueueReply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueueReply, &QueueReply_Parms, NULL );

	pFnQueueReply->FunctionFlags |= 0x400;

	return QueueReply_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.SelectReply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nReply                         ( CPF_Parm )

bool UBioConversation::SelectReply ( int nReply )
{
	static UFunction* pFnSelectReply = NULL;

	if ( ! pFnSelectReply )
		pFnSelectReply = (UFunction*) UObject::GObjObjects()->Data[ 52554 ];

	UBioConversation_execSelectReply_Parms SelectReply_Parms;
	SelectReply_Parms.nReply = nReply;

	pFnSelectReply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectReply, &SelectReply_Parms, NULL );

	pFnSelectReply->FunctionFlags |= 0x400;

	return SelectReply_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.UpdateConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioConversation::UpdateConversation ( float fDeltaT )
{
	static UFunction* pFnUpdateConversation = NULL;

	if ( ! pFnUpdateConversation )
		pFnUpdateConversation = (UFunction*) UObject::GObjObjects()->Data[ 52551 ];

	UBioConversation_execUpdateConversation_Parms UpdateConversation_Parms;
	UpdateConversation_Parms.fDeltaT = fDeltaT;

	pFnUpdateConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateConversation, &UpdateConversation_Parms, NULL );

	pFnUpdateConversation->FunctionFlags |= 0x400;

	return UpdateConversation_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.EndConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioConversation::EndConversation ( )
{
	static UFunction* pFnEndConversation = NULL;

	if ( ! pFnEndConversation )
		pFnEndConversation = (UFunction*) UObject::GObjObjects()->Data[ 52550 ];

	UBioConversation_execEndConversation_Parms EndConversation_Parms;

	pFnEndConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndConversation, &EndConversation_Parms, NULL );

	pFnEndConversation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioConversation.StartConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  aOwner                         ( CPF_Parm )
// class AActor*                  aPlayer                        ( CPF_Parm )

bool UBioConversation::StartConversation ( class AActor* aOwner, class AActor* aPlayer )
{
	static UFunction* pFnStartConversation = NULL;

	if ( ! pFnStartConversation )
		pFnStartConversation = (UFunction*) UObject::GObjObjects()->Data[ 52546 ];

	UBioConversation_execStartConversation_Parms StartConversation_Parms;
	StartConversation_Parms.aOwner = aOwner;
	StartConversation_Parms.aPlayer = aPlayer;

	pFnStartConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartConversation, &StartConversation_Parms, NULL );

	pFnStartConversation->FunctionFlags |= 0x400;

	return StartConversation_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.GetConversationObject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nObjectIndex                   ( CPF_Parm )
// unsigned long                  bNoisyErrors                   ( CPF_OptionalParm | CPF_Parm )

class AActor* UBioConversation::GetConversationObject ( int nObjectIndex, unsigned long bNoisyErrors )
{
	static UFunction* pFnGetConversationObject = NULL;

	if ( ! pFnGetConversationObject )
		pFnGetConversationObject = (UFunction*) UObject::GObjObjects()->Data[ 52542 ];

	UBioConversation_execGetConversationObject_Parms GetConversationObject_Parms;
	GetConversationObject_Parms.nObjectIndex = nObjectIndex;
	GetConversationObject_Parms.bNoisyErrors = bNoisyErrors;

	pFnGetConversationObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConversationObject, &GetConversationObject_Parms, NULL );

	pFnGetConversationObject->FunctionFlags |= 0x400;

	return GetConversationObject_Parms.ReturnValue;
};

// Function SFXGame.BioConversation.SetPositionRotator
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pActor                         ( CPF_Parm )
// struct FVector                 Position                       ( CPF_Parm )
// struct FRotator                facing                         ( CPF_Parm )

void UBioConversation::SetPositionRotator ( class AActor* pActor, struct FVector Position, struct FRotator facing )
{
	static UFunction* pFnSetPositionRotator = NULL;

	if ( ! pFnSetPositionRotator )
		pFnSetPositionRotator = (UFunction*) UObject::GObjObjects()->Data[ 52538 ];

	UBioConversation_execSetPositionRotator_Parms SetPositionRotator_Parms;
	SetPositionRotator_Parms.pActor = pActor;
	memcpy ( &SetPositionRotator_Parms.Position, &Position, 0xC );
	memcpy ( &SetPositionRotator_Parms.facing, &facing, 0xC );

	pFnSetPositionRotator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPositionRotator, &SetPositionRotator_Parms, NULL );

	pFnSetPositionRotator->FunctionFlags |= 0x400;
};

// Function SFXGame.BioStage.GetBestCameraPosition
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioConversation*        Conv                           ( CPF_Parm )
// unsigned long                  bLineOfActionCheck             ( CPF_Parm )
// int                            nIntimacyLevel                 ( CPF_Parm )
// struct FVector                 vCamLoc                        ( CPF_Parm | CPF_OutParm )
// struct FRotator                vCamRot                        ( CPF_Parm | CPF_OutParm )
// float                          fFov                           ( CPF_Parm | CPF_OutParm )
// float                          fNearPlane                     ( CPF_Parm | CPF_OutParm )
// struct FBioStageDOFData        tDOFData                       ( CPF_Parm | CPF_OutParm )

void ABioStage::GetBestCameraPosition ( class UBioConversation* Conv, unsigned long bLineOfActionCheck, int nIntimacyLevel, struct FVector* vCamLoc, struct FRotator* vCamRot, float* fFov, float* fNearPlane, struct FBioStageDOFData* tDOFData )
{
	static UFunction* pFnGetBestCameraPosition = NULL;

	if ( ! pFnGetBestCameraPosition )
		pFnGetBestCameraPosition = (UFunction*) UObject::GObjObjects()->Data[ 53143 ];

	ABioStage_execGetBestCameraPosition_Parms GetBestCameraPosition_Parms;
	GetBestCameraPosition_Parms.Conv = Conv;
	GetBestCameraPosition_Parms.bLineOfActionCheck = bLineOfActionCheck;
	GetBestCameraPosition_Parms.nIntimacyLevel = nIntimacyLevel;

	pFnGetBestCameraPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBestCameraPosition, &GetBestCameraPosition_Parms, NULL );

	pFnGetBestCameraPosition->FunctionFlags |= 0x400;

	if ( vCamLoc )
		memcpy ( vCamLoc, &GetBestCameraPosition_Parms.vCamLoc, 0xC );

	if ( vCamRot )
		memcpy ( vCamRot, &GetBestCameraPosition_Parms.vCamRot, 0xC );

	if ( fFov )
		*fFov = GetBestCameraPosition_Parms.fFov;

	if ( fNearPlane )
		*fNearPlane = GetBestCameraPosition_Parms.fNearPlane;

	if ( tDOFData )
		memcpy ( tDOFData, &GetBestCameraPosition_Parms.tDOFData, 0xC );
};

// Function SFXGame.BioStage.BioVINCE_MapName_FailedStagePlacement
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioStage::BioVINCE_MapName_FailedStagePlacement ( )
{
	static UFunction* pFnBioVINCE_MapName_FailedStagePlacement = NULL;

	if ( ! pFnBioVINCE_MapName_FailedStagePlacement )
		pFnBioVINCE_MapName_FailedStagePlacement = (UFunction*) UObject::GObjObjects()->Data[ 53142 ];

	ABioStage_execBioVINCE_MapName_FailedStagePlacement_Parms BioVINCE_MapName_FailedStagePlacement_Parms;

	pFnBioVINCE_MapName_FailedStagePlacement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_FailedStagePlacement, &BioVINCE_MapName_FailedStagePlacement_Parms, NULL );

	pFnBioVINCE_MapName_FailedStagePlacement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioStage.CameraSpeaker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

int ABioStage::CameraSpeaker ( struct FString sLabel )
{
	static UFunction* pFnCameraSpeaker = NULL;

	if ( ! pFnCameraSpeaker )
		pFnCameraSpeaker = (UFunction*) UObject::GObjObjects()->Data[ 53139 ];

	ABioStage_execCameraSpeaker_Parms CameraSpeaker_Parms;
	memcpy ( &CameraSpeaker_Parms.sLabel, &sLabel, 0x10 );

	pFnCameraSpeaker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCameraSpeaker, &CameraSpeaker_Parms, NULL );

	pFnCameraSpeaker->FunctionFlags |= 0x400;

	return CameraSpeaker_Parms.ReturnValue;
};

// Function SFXGame.BioStage.CameraListener
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

int ABioStage::CameraListener ( struct FString sLabel )
{
	static UFunction* pFnCameraListener = NULL;

	if ( ! pFnCameraListener )
		pFnCameraListener = (UFunction*) UObject::GObjObjects()->Data[ 53136 ];

	ABioStage_execCameraListener_Parms CameraListener_Parms;
	memcpy ( &CameraListener_Parms.sLabel, &sLabel, 0x10 );

	pFnCameraListener->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCameraListener, &CameraListener_Parms, NULL );

	pFnCameraListener->FunctionFlags |= 0x400;

	return CameraListener_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetActorByNode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eNode                          ( CPF_Parm )

class AActor* ABioStage::GetActorByNode ( unsigned char eNode )
{
	static UFunction* pFnGetActorByNode = NULL;

	if ( ! pFnGetActorByNode )
		pFnGetActorByNode = (UFunction*) UObject::GObjObjects()->Data[ 53133 ];

	ABioStage_execGetActorByNode_Parms GetActorByNode_Parms;
	GetActorByNode_Parms.eNode = eNode;

	pFnGetActorByNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorByNode, &GetActorByNode_Parms, NULL );

	pFnGetActorByNode->FunctionFlags |= 0x400;

	return GetActorByNode_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetActorOnNode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nNode                          ( CPF_Parm )

class AActor* ABioStage::GetActorOnNode ( int nNode )
{
	static UFunction* pFnGetActorOnNode = NULL;

	if ( ! pFnGetActorOnNode )
		pFnGetActorOnNode = (UFunction*) UObject::GObjObjects()->Data[ 53130 ];

	ABioStage_execGetActorOnNode_Parms GetActorOnNode_Parms;
	GetActorOnNode_Parms.nNode = nNode;

	pFnGetActorOnNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorOnNode, &GetActorOnNode_Parms, NULL );

	pFnGetActorOnNode->FunctionFlags |= 0x400;

	return GetActorOnNode_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetActorStageNodePosition
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pActor                         ( CPF_Parm )
// unsigned long                  bPuppetsUseParentNode          ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm | CPF_OutParm )

void ABioStage::GetActorStageNodePosition ( class AActor* pActor, unsigned long bPuppetsUseParentNode, struct FVector* vPosition )
{
	static UFunction* pFnGetActorStageNodePosition = NULL;

	if ( ! pFnGetActorStageNodePosition )
		pFnGetActorStageNodePosition = (UFunction*) UObject::GObjObjects()->Data[ 53126 ];

	ABioStage_execGetActorStageNodePosition_Parms GetActorStageNodePosition_Parms;
	GetActorStageNodePosition_Parms.pActor = pActor;
	GetActorStageNodePosition_Parms.bPuppetsUseParentNode = bPuppetsUseParentNode;

	pFnGetActorStageNodePosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorStageNodePosition, &GetActorStageNodePosition_Parms, NULL );

	pFnGetActorStageNodePosition->FunctionFlags |= 0x400;

	if ( vPosition )
		memcpy ( vPosition, &GetActorStageNodePosition_Parms.vPosition, 0xC );
};

// Function SFXGame.BioStage.GetStageCamName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eNode                          ( CPF_Parm )

struct FName ABioStage::GetStageCamName ( unsigned char eNode )
{
	static UFunction* pFnGetStageCamName = NULL;

	if ( ! pFnGetStageCamName )
		pFnGetStageCamName = (UFunction*) UObject::GObjObjects()->Data[ 53123 ];

	ABioStage_execGetStageCamName_Parms GetStageCamName_Parms;
	GetStageCamName_Parms.eNode = eNode;

	pFnGetStageCamName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamName, &GetStageCamName_Parms, NULL );

	pFnGetStageCamName->FunctionFlags |= 0x400;

	return GetStageCamName_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetStageCamLocRot
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eNode                          ( CPF_Parm )
// struct FVector                 vCamLoc                        ( CPF_Parm | CPF_OutParm )
// struct FRotator                vCamRot                        ( CPF_Parm | CPF_OutParm )

void ABioStage::GetStageCamLocRot ( unsigned char eNode, struct FVector* vCamLoc, struct FRotator* vCamRot )
{
	static UFunction* pFnGetStageCamLocRot = NULL;

	if ( ! pFnGetStageCamLocRot )
		pFnGetStageCamLocRot = (UFunction*) UObject::GObjObjects()->Data[ 53119 ];

	ABioStage_execGetStageCamLocRot_Parms GetStageCamLocRot_Parms;
	GetStageCamLocRot_Parms.eNode = eNode;

	pFnGetStageCamLocRot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamLocRot, &GetStageCamLocRot_Parms, NULL );

	pFnGetStageCamLocRot->FunctionFlags |= 0x400;

	if ( vCamLoc )
		memcpy ( vCamLoc, &GetStageCamLocRot_Parms.vCamLoc, 0xC );

	if ( vCamRot )
		memcpy ( vCamRot, &GetStageCamLocRot_Parms.vCamRot, 0xC );
};

// Function SFXGame.BioStage.GetStageCamDOFData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            nCamIndex                      ( CPF_Parm )
// struct FBioStageDOFData        tDOFData                       ( CPF_Parm | CPF_OutParm )

void ABioStage::GetStageCamDOFData ( int nCamIndex, struct FBioStageDOFData* tDOFData )
{
	static UFunction* pFnGetStageCamDOFData = NULL;

	if ( ! pFnGetStageCamDOFData )
		pFnGetStageCamDOFData = (UFunction*) UObject::GObjObjects()->Data[ 53116 ];

	ABioStage_execGetStageCamDOFData_Parms GetStageCamDOFData_Parms;
	GetStageCamDOFData_Parms.nCamIndex = nCamIndex;

	pFnGetStageCamDOFData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamDOFData, &GetStageCamDOFData_Parms, NULL );

	pFnGetStageCamDOFData->FunctionFlags |= 0x400;

	if ( tDOFData )
		memcpy ( tDOFData, &GetStageCamDOFData_Parms.tDOFData, 0xC );
};

// Function SFXGame.BioStage.GetStageCamNearPlane
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nCamIndex                      ( CPF_Parm )

float ABioStage::GetStageCamNearPlane ( int nCamIndex )
{
	static UFunction* pFnGetStageCamNearPlane = NULL;

	if ( ! pFnGetStageCamNearPlane )
		pFnGetStageCamNearPlane = (UFunction*) UObject::GObjObjects()->Data[ 53113 ];

	ABioStage_execGetStageCamNearPlane_Parms GetStageCamNearPlane_Parms;
	GetStageCamNearPlane_Parms.nCamIndex = nCamIndex;

	pFnGetStageCamNearPlane->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamNearPlane, &GetStageCamNearPlane_Parms, NULL );

	pFnGetStageCamNearPlane->FunctionFlags |= 0x400;

	return GetStageCamNearPlane_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetStageCamFov
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nCamIndex                      ( CPF_Parm )

float ABioStage::GetStageCamFov ( int nCamIndex )
{
	static UFunction* pFnGetStageCamFov = NULL;

	if ( ! pFnGetStageCamFov )
		pFnGetStageCamFov = (UFunction*) UObject::GObjObjects()->Data[ 53110 ];

	ABioStage_execGetStageCamFov_Parms GetStageCamFov_Parms;
	GetStageCamFov_Parms.nCamIndex = nCamIndex;

	pFnGetStageCamFov->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamFov, &GetStageCamFov_Parms, NULL );

	pFnGetStageCamFov->FunctionFlags |= 0x400;

	return GetStageCamFov_Parms.ReturnValue;
};

// Function SFXGame.BioStage.GetStageCamIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmCamName                      ( CPF_Parm )

int ABioStage::GetStageCamIndex ( struct FName nmCamName )
{
	static UFunction* pFnGetStageCamIndex = NULL;

	if ( ! pFnGetStageCamIndex )
		pFnGetStageCamIndex = (UFunction*) UObject::GObjObjects()->Data[ 53107 ];

	ABioStage_execGetStageCamIndex_Parms GetStageCamIndex_Parms;
	memcpy ( &GetStageCamIndex_Parms.nmCamName, &nmCamName, 0x8 );

	pFnGetStageCamIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStageCamIndex, &GetStageCamIndex_Parms, NULL );

	pFnGetStageCamIndex->FunctionFlags |= 0x400;

	return GetStageCamIndex_Parms.ReturnValue;
};

// Function SFXGame.BioStage.PlaceActors
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioConversation*        Conv                           ( CPF_Parm )

void ABioStage::PlaceActors ( class UBioConversation* Conv )
{
	static UFunction* pFnPlaceActors = NULL;

	if ( ! pFnPlaceActors )
		pFnPlaceActors = (UFunction*) UObject::GObjObjects()->Data[ 53105 ];

	ABioStage_execPlaceActors_Parms PlaceActors_Parms;
	PlaceActors_Parms.Conv = Conv;

	pFnPlaceActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceActors, &PlaceActors_Parms, NULL );

	pFnPlaceActors->FunctionFlags |= 0x400;
};

// Function SFXGame.BioStage.EndConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioStage::EndConversation ( )
{
	static UFunction* pFnEndConversation = NULL;

	if ( ! pFnEndConversation )
		pFnEndConversation = (UFunction*) UObject::GObjObjects()->Data[ 53103 ];

	ABioStage_execEndConversation_Parms EndConversation_Parms;

	pFnEndConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndConversation, &EndConversation_Parms, NULL );

	pFnEndConversation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioDeathVFXCore.IsValidVFXSpec
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioDeathVFXSpec        deathVFXSpec                   ( CPF_Parm )

bool UBioDeathVFXCore::IsValidVFXSpec ( struct FBioDeathVFXSpec deathVFXSpec )
{
	static UFunction* pFnIsValidVFXSpec = NULL;

	if ( ! pFnIsValidVFXSpec )
		pFnIsValidVFXSpec = (UFunction*) UObject::GObjObjects()->Data[ 40170 ];

	UBioDeathVFXCore_execIsValidVFXSpec_Parms IsValidVFXSpec_Parms;
	memcpy ( &IsValidVFXSpec_Parms.deathVFXSpec, &deathVFXSpec, 0x30 );

	this->ProcessEvent ( pFnIsValidVFXSpec, &IsValidVFXSpec_Parms, NULL );

	return IsValidVFXSpec_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.AppendConditionalVFX
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper      ( CPF_Parm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )
// struct FName                   nmConditionalVFX               ( CPF_Const | CPF_Parm )

bool UBioDeathVFXControl::AppendConditionalVFX ( class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper, class UBioDeathVFXGameState* pGameState, struct FName nmConditionalVFX )
{
	static UFunction* pFnAppendConditionalVFX = NULL;

	if ( ! pFnAppendConditionalVFX )
		pFnAppendConditionalVFX = (UFunction*) UObject::GObjObjects()->Data[ 40198 ];

	UBioDeathVFXControl_execAppendConditionalVFX_Parms AppendConditionalVFX_Parms;
	AppendConditionalVFX_Parms.pDeathVFXSpecArrayWrapper = pDeathVFXSpecArrayWrapper;
	AppendConditionalVFX_Parms.pGameState = pGameState;
	memcpy ( &AppendConditionalVFX_Parms.nmConditionalVFX, &nmConditionalVFX, 0x8 );

	this->ProcessEvent ( pFnAppendConditionalVFX, &AppendConditionalVFX_Parms, NULL );

	return AppendConditionalVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.AppendDamageVFX
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper      ( CPF_Parm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControl::AppendDamageVFX ( class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper, class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnAppendDamageVFX = NULL;

	if ( ! pFnAppendDamageVFX )
		pFnAppendDamageVFX = (UFunction*) UObject::GObjObjects()->Data[ 40194 ];

	UBioDeathVFXControl_execAppendDamageVFX_Parms AppendDamageVFX_Parms;
	AppendDamageVFX_Parms.pDeathVFXSpecArrayWrapper = pDeathVFXSpecArrayWrapper;
	AppendDamageVFX_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnAppendDamageVFX, &AppendDamageVFX_Parms, NULL );

	return AppendDamageVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.AppendAppearanceVFX
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper      ( CPF_Parm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControl::AppendAppearanceVFX ( class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper, class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnAppendAppearanceVFX = NULL;

	if ( ! pFnAppendAppearanceVFX )
		pFnAppendAppearanceVFX = (UFunction*) UObject::GObjObjects()->Data[ 40189 ];

	UBioDeathVFXControl_execAppendAppearanceVFX_Parms AppendAppearanceVFX_Parms;
	AppendAppearanceVFX_Parms.pDeathVFXSpecArrayWrapper = pDeathVFXSpecArrayWrapper;
	AppendAppearanceVFX_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnAppendAppearanceVFX, &AppendAppearanceVFX_Parms, NULL );

	return AppendAppearanceVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.IsValidDamageVFX
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControl::IsValidDamageVFX ( class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnIsValidDamageVFX = NULL;

	if ( ! pFnIsValidDamageVFX )
		pFnIsValidDamageVFX = (UFunction*) UObject::GObjObjects()->Data[ 40182 ];

	UBioDeathVFXControl_execIsValidDamageVFX_Parms IsValidDamageVFX_Parms;
	IsValidDamageVFX_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnIsValidDamageVFX, &IsValidDamageVFX_Parms, NULL );

	return IsValidDamageVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.IsValidAppearanceVFX
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControl::IsValidAppearanceVFX ( class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnIsValidAppearanceVFX = NULL;

	if ( ! pFnIsValidAppearanceVFX )
		pFnIsValidAppearanceVFX = (UFunction*) UObject::GObjObjects()->Data[ 40176 ];

	UBioDeathVFXControl_execIsValidAppearanceVFX_Parms IsValidAppearanceVFX_Parms;
	IsValidAppearanceVFX_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnIsValidAppearanceVFX, &IsValidAppearanceVFX_Parms, NULL );

	return IsValidAppearanceVFX_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControl.Evaluate
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper      ( CPF_Parm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

void UBioDeathVFXControl::eventEvaluate ( class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper, class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnEvaluate = NULL;

	if ( ! pFnEvaluate )
		pFnEvaluate = (UFunction*) UObject::GObjObjects()->Data[ 40173 ];

	UBioDeathVFXControl_eventEvaluate_Parms Evaluate_Parms;
	Evaluate_Parms.pDeathVFXSpecArrayWrapper = pDeathVFXSpecArrayWrapper;
	Evaluate_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnEvaluate, &Evaluate_Parms, NULL );
};

// Function SFXGame.BioEquipment.TickEquipment
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioEquipment::eventTickEquipment ( float fDeltaTime )
{
	static UFunction* pFnTickEquipment = NULL;

	if ( ! pFnTickEquipment )
		pFnTickEquipment = (UFunction*) UObject::GObjObjects()->Data[ 44818 ];

	UBioEquipment_eventTickEquipment_Parms TickEquipment_Parms;
	TickEquipment_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickEquipment, &TickEquipment_Parms, NULL );
};

// Function SFXGame.BioEquipment.OnHide
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void UBioEquipment::OnHide ( unsigned long bHide )
{
	static UFunction* pFnOnHide = NULL;

	if ( ! pFnOnHide )
		pFnOnHide = (UFunction*) UObject::GObjObjects()->Data[ 44816 ];

	UBioEquipment_execOnHide_Parms OnHide_Parms;
	OnHide_Parms.bHide = bHide;

	pFnOnHide->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnHide, &OnHide_Parms, NULL );

	pFnOnHide->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.SetScalerMaterialParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void UBioEquipment::SetScalerMaterialParameter ( struct FName ParameterName, float Value )
{
	static UFunction* pFnSetScalerMaterialParameter = NULL;

	if ( ! pFnSetScalerMaterialParameter )
		pFnSetScalerMaterialParameter = (UFunction*) UObject::GObjObjects()->Data[ 44813 ];

	UBioEquipment_execSetScalerMaterialParameter_Parms SetScalerMaterialParameter_Parms;
	memcpy ( &SetScalerMaterialParameter_Parms.ParameterName, &ParameterName, 0x8 );
	SetScalerMaterialParameter_Parms.Value = Value;

	pFnSetScalerMaterialParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalerMaterialParameter, &SetScalerMaterialParameter_Parms, NULL );

	pFnSetScalerMaterialParameter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.SetHiddenForAllWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  shouldHide                     ( CPF_Parm )

void UBioEquipment::SetHiddenForAllWeapons ( unsigned long shouldHide )
{
	static UFunction* pFnSetHiddenForAllWeapons = NULL;

	if ( ! pFnSetHiddenForAllWeapons )
		pFnSetHiddenForAllWeapons = (UFunction*) UObject::GObjObjects()->Data[ 44811 ];

	UBioEquipment_execSetHiddenForAllWeapons_Parms SetHiddenForAllWeapons_Parms;
	SetHiddenForAllWeapons_Parms.shouldHide = shouldHide;

	pFnSetHiddenForAllWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHiddenForAllWeapons, &SetHiddenForAllWeapons_Parms, NULL );

	pFnSetHiddenForAllWeapons->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.ReattachAllWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                Pawn                           ( CPF_Parm )

bool UBioEquipment::ReattachAllWeapons ( class ABioPawn* Pawn )
{
	static UFunction* pFnReattachAllWeapons = NULL;

	if ( ! pFnReattachAllWeapons )
		pFnReattachAllWeapons = (UFunction*) UObject::GObjObjects()->Data[ 44808 ];

	UBioEquipment_execReattachAllWeapons_Parms ReattachAllWeapons_Parms;
	ReattachAllWeapons_Parms.Pawn = Pawn;

	pFnReattachAllWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReattachAllWeapons, &ReattachAllWeapons_Parms, NULL );

	pFnReattachAllWeapons->FunctionFlags |= 0x400;

	return ReattachAllWeapons_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.ChangeToQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Slot                           ( CPF_Parm )

void UBioEquipment::ChangeToQuickSlot ( unsigned char Slot )
{
	static UFunction* pFnChangeToQuickSlot = NULL;

	if ( ! pFnChangeToQuickSlot )
		pFnChangeToQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44806 ];

	UBioEquipment_execChangeToQuickSlot_Parms ChangeToQuickSlot_Parms;
	ChangeToQuickSlot_Parms.Slot = Slot;

	pFnChangeToQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeToQuickSlot, &ChangeToQuickSlot_Parms, NULL );

	pFnChangeToQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.ComputePrevQuickSlot
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  fromslot                       ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  Slot                           ( CPF_Parm | CPF_OutParm )

bool UBioEquipment::ComputePrevQuickSlot ( unsigned char fromslot, unsigned char* Slot )
{
	static UFunction* pFnComputePrevQuickSlot = NULL;

	if ( ! pFnComputePrevQuickSlot )
		pFnComputePrevQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44802 ];

	UBioEquipment_execComputePrevQuickSlot_Parms ComputePrevQuickSlot_Parms;
	ComputePrevQuickSlot_Parms.fromslot = fromslot;

	pFnComputePrevQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputePrevQuickSlot, &ComputePrevQuickSlot_Parms, NULL );

	pFnComputePrevQuickSlot->FunctionFlags |= 0x400;

	if ( Slot )
		*Slot = ComputePrevQuickSlot_Parms.Slot;

	return ComputePrevQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.ComputeNextQuickSlot
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  fromslot                       ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  Slot                           ( CPF_Parm | CPF_OutParm )

bool UBioEquipment::ComputeNextQuickSlot ( unsigned char fromslot, unsigned char* Slot )
{
	static UFunction* pFnComputeNextQuickSlot = NULL;

	if ( ! pFnComputeNextQuickSlot )
		pFnComputeNextQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44798 ];

	UBioEquipment_execComputeNextQuickSlot_Parms ComputeNextQuickSlot_Parms;
	ComputeNextQuickSlot_Parms.fromslot = fromslot;

	pFnComputeNextQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNextQuickSlot, &ComputeNextQuickSlot_Parms, NULL );

	pFnComputeNextQuickSlot->FunctionFlags |= 0x400;

	if ( Slot )
		*Slot = ComputeNextQuickSlot_Parms.Slot;

	return ComputeNextQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.PrevQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEquipment::PrevQuickSlot ( )
{
	static UFunction* pFnPrevQuickSlot = NULL;

	if ( ! pFnPrevQuickSlot )
		pFnPrevQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44796 ];

	UBioEquipment_execPrevQuickSlot_Parms PrevQuickSlot_Parms;

	pFnPrevQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrevQuickSlot, &PrevQuickSlot_Parms, NULL );

	pFnPrevQuickSlot->FunctionFlags |= 0x400;

	return PrevQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.NextQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEquipment::NextQuickSlot ( )
{
	static UFunction* pFnNextQuickSlot = NULL;

	if ( ! pFnNextQuickSlot )
		pFnNextQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44794 ];

	UBioEquipment_execNextQuickSlot_Parms NextQuickSlot_Parms;

	pFnNextQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNextQuickSlot, &NextQuickSlot_Parms, NULL );

	pFnNextQuickSlot->FunctionFlags |= 0x400;

	return NextQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.DeactivateCurrentQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEquipment::DeactivateCurrentQuickSlot ( )
{
	static UFunction* pFnDeactivateCurrentQuickSlot = NULL;

	if ( ! pFnDeactivateCurrentQuickSlot )
		pFnDeactivateCurrentQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44793 ];

	UBioEquipment_execDeactivateCurrentQuickSlot_Parms DeactivateCurrentQuickSlot_Parms;

	pFnDeactivateCurrentQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateCurrentQuickSlot, &DeactivateCurrentQuickSlot_Parms, NULL );

	pFnDeactivateCurrentQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.ActivateCurrentQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEquipment::ActivateCurrentQuickSlot ( )
{
	static UFunction* pFnActivateCurrentQuickSlot = NULL;

	if ( ! pFnActivateCurrentQuickSlot )
		pFnActivateCurrentQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44792 ];

	UBioEquipment_execActivateCurrentQuickSlot_Parms ActivateCurrentQuickSlot_Parms;

	pFnActivateCurrentQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateCurrentQuickSlot, &ActivateCurrentQuickSlot_Parms, NULL );

	pFnActivateCurrentQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEquipment.ClearQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemWeapon*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )

class UBioItemWeapon* UBioEquipment::ClearQuickSlot ( unsigned char Slot )
{
	static UFunction* pFnClearQuickSlot = NULL;

	if ( ! pFnClearQuickSlot )
		pFnClearQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44789 ];

	UBioEquipment_execClearQuickSlot_Parms ClearQuickSlot_Parms;
	ClearQuickSlot_Parms.Slot = Slot;

	pFnClearQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearQuickSlot, &ClearQuickSlot_Parms, NULL );

	pFnClearQuickSlot->FunctionFlags |= 0x400;

	return ClearQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.SetQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemWeapon*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )
// class ABioPawn*                Pawn                           ( CPF_Parm )
// class UBioItemWeapon*          itemWeapon                     ( CPF_Parm )

class UBioItemWeapon* UBioEquipment::SetQuickSlot ( unsigned char Slot, class ABioPawn* Pawn, class UBioItemWeapon* itemWeapon )
{
	static UFunction* pFnSetQuickSlot = NULL;

	if ( ! pFnSetQuickSlot )
		pFnSetQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44784 ];

	UBioEquipment_execSetQuickSlot_Parms SetQuickSlot_Parms;
	SetQuickSlot_Parms.Slot = Slot;
	SetQuickSlot_Parms.Pawn = Pawn;
	SetQuickSlot_Parms.itemWeapon = itemWeapon;

	pFnSetQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetQuickSlot, &SetQuickSlot_Parms, NULL );

	pFnSetQuickSlot->FunctionFlags |= 0x400;

	return SetQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.IsActiveQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )

bool UBioEquipment::IsActiveQuickSlot ( unsigned char Slot )
{
	static UFunction* pFnIsActiveQuickSlot = NULL;

	if ( ! pFnIsActiveQuickSlot )
		pFnIsActiveQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44781 ];

	UBioEquipment_execIsActiveQuickSlot_Parms IsActiveQuickSlot_Parms;
	IsActiveQuickSlot_Parms.Slot = Slot;

	pFnIsActiveQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActiveQuickSlot, &IsActiveQuickSlot_Parms, NULL );

	pFnIsActiveQuickSlot->FunctionFlags |= 0x400;

	return IsActiveQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.IsQuickSlotEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )

bool UBioEquipment::IsQuickSlotEmpty ( unsigned char Slot )
{
	static UFunction* pFnIsQuickSlotEmpty = NULL;

	if ( ! pFnIsQuickSlotEmpty )
		pFnIsQuickSlotEmpty = (UFunction*) UObject::GObjObjects()->Data[ 44778 ];

	UBioEquipment_execIsQuickSlotEmpty_Parms IsQuickSlotEmpty_Parms;
	IsQuickSlotEmpty_Parms.Slot = Slot;

	pFnIsQuickSlotEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsQuickSlotEmpty, &IsQuickSlotEmpty_Parms, NULL );

	pFnIsQuickSlotEmpty->FunctionFlags |= 0x400;

	return IsQuickSlotEmpty_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.GetCurrentQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioWeapon*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioWeapon* UBioEquipment::GetCurrentQuickSlot ( )
{
	static UFunction* pFnGetCurrentQuickSlot = NULL;

	if ( ! pFnGetCurrentQuickSlot )
		pFnGetCurrentQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44776 ];

	UBioEquipment_execGetCurrentQuickSlot_Parms GetCurrentQuickSlot_Parms;

	pFnGetCurrentQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentQuickSlot, &GetCurrentQuickSlot_Parms, NULL );

	pFnGetCurrentQuickSlot->FunctionFlags |= 0x400;

	return GetCurrentQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.IsEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemEquippable*      Item                           ( CPF_Parm )

bool UBioEquipment::IsEquipped ( class UBioItemEquippable* Item )
{
	static UFunction* pFnIsEquipped = NULL;

	if ( ! pFnIsEquipped )
		pFnIsEquipped = (UFunction*) UObject::GObjObjects()->Data[ 44773 ];

	UBioEquipment_execIsEquipped_Parms IsEquipped_Parms;
	IsEquipped_Parms.Item = Item;

	pFnIsEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEquipped, &IsEquipped_Parms, NULL );

	pFnIsEquipped->FunctionFlags |= 0x400;

	return IsEquipped_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.Unequip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemEquippable*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )

class UBioItemEquippable* UBioEquipment::Unequip ( unsigned char Slot )
{
	static UFunction* pFnUnequip = NULL;

	if ( ! pFnUnequip )
		pFnUnequip = (UFunction*) UObject::GObjObjects()->Data[ 44770 ];

	UBioEquipment_execUnequip_Parms Unequip_Parms;
	Unequip_Parms.Slot = Slot;

	pFnUnequip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnequip, &Unequip_Parms, NULL );

	pFnUnequip->FunctionFlags |= 0x400;

	return Unequip_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemEquippable*      Item                           ( CPF_Parm )

bool UBioEquipment::Equip ( class UBioItemEquippable* Item )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 44767 ];

	UBioEquipment_execEquip_Parms Equip_Parms;
	Equip_Parms.Item = Item;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;

	return Equip_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.GetEquipmentType
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Slot                           ( CPF_Parm )
// unsigned char                  Type                           ( CPF_Parm | CPF_OutParm )

bool UBioEquipment::GetEquipmentType ( unsigned char Slot, unsigned char* Type )
{
	static UFunction* pFnGetEquipmentType = NULL;

	if ( ! pFnGetEquipmentType )
		pFnGetEquipmentType = (UFunction*) UObject::GObjObjects()->Data[ 44763 ];

	UBioEquipment_execGetEquipmentType_Parms GetEquipmentType_Parms;
	GetEquipmentType_Parms.Slot = Slot;

	pFnGetEquipmentType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipmentType, &GetEquipmentType_Parms, NULL );

	pFnGetEquipmentType->FunctionFlags |= 0x400;

	if ( Type )
		*Type = GetEquipmentType_Parms.Type;

	return GetEquipmentType_Parms.ReturnValue;
};

// Function SFXGame.BioEquipment.GetEquipmentSlot
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )
// unsigned char                  Slot                           ( CPF_Parm | CPF_OutParm )

bool UBioEquipment::GetEquipmentSlot ( unsigned char Type, unsigned char* Slot )
{
	static UFunction* pFnGetEquipmentSlot = NULL;

	if ( ! pFnGetEquipmentSlot )
		pFnGetEquipmentSlot = (UFunction*) UObject::GObjObjects()->Data[ 44759 ];

	UBioEquipment_execGetEquipmentSlot_Parms GetEquipmentSlot_Parms;
	GetEquipmentSlot_Parms.Type = Type;

	pFnGetEquipmentSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipmentSlot, &GetEquipmentSlot_Parms, NULL );

	pFnGetEquipmentSlot->FunctionFlags |= 0x400;

	if ( Slot )
		*Slot = GetEquipmentSlot_Parms.Slot;

	return GetEquipmentSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.ScaleEquipment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSophisticationLevel           ( CPF_Parm )

bool UBioEquipmentBase::ScaleEquipment ( int nSophisticationLevel )
{
	static UFunction* pFnScaleEquipment = NULL;

	if ( ! pFnScaleEquipment )
		pFnScaleEquipment = (UFunction*) UObject::GObjObjects()->Data[ 49904 ];

	UBioEquipmentBase_execScaleEquipment_Parms ScaleEquipment_Parms;
	ScaleEquipment_Parms.nSophisticationLevel = nSophisticationLevel;

	pFnScaleEquipment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleEquipment, &ScaleEquipment_Parms, NULL );

	pFnScaleEquipment->FunctionFlags |= 0x400;

	return ScaleEquipment_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.GetEquippedSlotID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oItem                          ( CPF_Parm )

int UBioEquipmentBase::GetEquippedSlotID ( class UBioItem* oItem )
{
	static UFunction* pFnGetEquippedSlotID = NULL;

	if ( ! pFnGetEquippedSlotID )
		pFnGetEquippedSlotID = (UFunction*) UObject::GObjObjects()->Data[ 49901 ];

	UBioEquipmentBase_execGetEquippedSlotID_Parms GetEquippedSlotID_Parms;
	GetEquippedSlotID_Parms.oItem = oItem;

	pFnGetEquippedSlotID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquippedSlotID, &GetEquippedSlotID_Parms, NULL );

	pFnGetEquippedSlotID->FunctionFlags |= 0x400;

	return GetEquippedSlotID_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.UnequipSlot
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSlot                          ( CPF_Parm )
// class UBioItem*                oOldItem                       ( CPF_Parm | CPF_OutParm )

bool UBioEquipmentBase::UnequipSlot ( int nSlot, class UBioItem** oOldItem )
{
	static UFunction* pFnUnequipSlot = NULL;

	if ( ! pFnUnequipSlot )
		pFnUnequipSlot = (UFunction*) UObject::GObjObjects()->Data[ 49897 ];

	UBioEquipmentBase_execUnequipSlot_Parms UnequipSlot_Parms;
	UnequipSlot_Parms.nSlot = nSlot;

	pFnUnequipSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnequipSlot, &UnequipSlot_Parms, NULL );

	pFnUnequipSlot->FunctionFlags |= 0x400;

	if ( oOldItem )
		*oOldItem = UnequipSlot_Parms.oOldItem;

	return UnequipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.EquipSlot
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oNewItem                       ( CPF_Parm )
// int                            nSlot                          ( CPF_Parm )
// class UBioItem*                oOldItem                       ( CPF_Parm | CPF_OutParm )

bool UBioEquipmentBase::EquipSlot ( class UBioItem* oNewItem, int nSlot, class UBioItem** oOldItem )
{
	static UFunction* pFnEquipSlot = NULL;

	if ( ! pFnEquipSlot )
		pFnEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 49892 ];

	UBioEquipmentBase_execEquipSlot_Parms EquipSlot_Parms;
	EquipSlot_Parms.oNewItem = oNewItem;
	EquipSlot_Parms.nSlot = nSlot;

	pFnEquipSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipSlot, &EquipSlot_Parms, NULL );

	pFnEquipSlot->FunctionFlags |= 0x400;

	if ( oOldItem )
		*oOldItem = EquipSlot_Parms.oOldItem;

	return EquipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.ClearAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEquipmentBase::ClearAll ( )
{
	static UFunction* pFnClearAll = NULL;

	if ( ! pFnClearAll )
		pFnClearAll = (UFunction*) UObject::GObjObjects()->Data[ 49890 ];

	UBioEquipmentBase_execClearAll_Parms ClearAll_Parms;

	pFnClearAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearAll, &ClearAll_Parms, NULL );

	pFnClearAll->FunctionFlags |= 0x400;

	return ClearAll_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oOwner                         ( CPF_Parm )
// class UObject*                 oDelegateObj                   ( CPF_Parm )

bool UBioEquipmentBase::Initialize ( class AActor* oOwner, class UObject* oDelegateObj )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 49886 ];

	UBioEquipmentBase_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.oOwner = oOwner;
	Initialize_Parms.oDelegateObj = oDelegateObj;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;

	return Initialize_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.OnUnEquipAction
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEquipmentBase::OnUnEquipAction ( )
{
	static UFunction* pFnOnUnEquipAction = NULL;

	if ( ! pFnOnUnEquipAction )
		pFnOnUnEquipAction = (UFunction*) UObject::GObjObjects()->Data[ 49880 ];

	UBioEquipmentBase_execOnUnEquipAction_Parms OnUnEquipAction_Parms;

	this->ProcessEvent ( pFnOnUnEquipAction, &OnUnEquipAction_Parms, NULL );

	return OnUnEquipAction_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentBase.OnEquipAction
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oNewItem                       ( CPF_Parm )

bool UBioEquipmentBase::OnEquipAction ( class UBioItem* oNewItem )
{
	static UFunction* pFnOnEquipAction = NULL;

	if ( ! pFnOnEquipAction )
		pFnOnEquipAction = (UFunction*) UObject::GObjObjects()->Data[ 49882 ];

	UBioEquipmentBase_execOnEquipAction_Parms OnEquipAction_Parms;
	OnEquipAction_Parms.oNewItem = oNewItem;

	this->ProcessEvent ( pFnOnEquipAction, &OnEquipAction_Parms, NULL );

	return OnEquipAction_Parms.ReturnValue;
};

// Function SFXGame.BioEquipmentVehicle.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oOwner                         ( CPF_Parm )
// class UObject*                 oDelegateObj                   ( CPF_Parm )

bool UBioEquipmentVehicle::Initialize ( class AActor* oOwner, class UObject* oDelegateObj )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 49912 ];

	UBioEquipmentVehicle_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.oOwner = oOwner;
	Initialize_Parms.oDelegateObj = oDelegateObj;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;

	return Initialize_Parms.ReturnValue;
};

// Function SFXGame.BioFSM.GetStateByIndex
// [0x00020002] 
// Parameters infos:
// class UBioState*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class UBioState* UBioFSM::GetStateByIndex ( int Index )
{
	static UFunction* pFnGetStateByIndex = NULL;

	if ( ! pFnGetStateByIndex )
		pFnGetStateByIndex = (UFunction*) UObject::GObjObjects()->Data[ 53361 ];

	UBioFSM_execGetStateByIndex_Parms GetStateByIndex_Parms;
	GetStateByIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnGetStateByIndex, &GetStateByIndex_Parms, NULL );

	return GetStateByIndex_Parms.ReturnValue;
};

// Function SFXGame.BioFSM.DEBUG_DumpStates
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    BPC                            ( CPF_Parm )

void UBioFSM::DEBUG_DumpStates ( class ABioPlayerController* BPC )
{
	static UFunction* pFnDEBUG_DumpStates = NULL;

	if ( ! pFnDEBUG_DumpStates )
		pFnDEBUG_DumpStates = (UFunction*) UObject::GObjObjects()->Data[ 53352 ];

	UBioFSM_execDEBUG_DumpStates_Parms DEBUG_DumpStates_Parms;
	DEBUG_DumpStates_Parms.BPC = BPC;

	this->ProcessEvent ( pFnDEBUG_DumpStates, &DEBUG_DumpStates_Parms, NULL );
};

// Function SFXGame.BioFSM.GetState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioState*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   RequestedState                 ( CPF_Parm )

class UBioState* UBioFSM::eventGetState ( struct FName RequestedState )
{
	static UFunction* pFnGetState = NULL;

	if ( ! pFnGetState )
		pFnGetState = (UFunction*) UObject::GObjObjects()->Data[ 48695 ];

	UBioFSM_eventGetState_Parms GetState_Parms;
	memcpy ( &GetState_Parms.RequestedState, &RequestedState, 0x8 );

	this->ProcessEvent ( pFnGetState, &GetState_Parms, NULL );

	return GetState_Parms.ReturnValue;
};

// Function SFXGame.BioFSMComponent.IsTransitioning
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioFSMComponent::eventIsTransitioning ( )
{
	static UFunction* pFnIsTransitioning = NULL;

	if ( ! pFnIsTransitioning )
		pFnIsTransitioning = (UFunction*) UObject::GObjObjects()->Data[ 48702 ];

	UBioFSMComponent_eventIsTransitioning_Parms IsTransitioning_Parms;

	this->ProcessEvent ( pFnIsTransitioning, &IsTransitioning_Parms, NULL );

	return IsTransitioning_Parms.ReturnValue;
};

// Function SFXGame.BioFSMComponent.CallTransitionDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   From                           ( CPF_Parm )
// struct FName                   To                             ( CPF_Parm )

void UBioFSMComponent::eventCallTransitionDelegate ( struct FName From, struct FName To )
{
	static UFunction* pFnCallTransitionDelegate = NULL;

	if ( ! pFnCallTransitionDelegate )
		pFnCallTransitionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48698 ];

	UBioFSMComponent_eventCallTransitionDelegate_Parms CallTransitionDelegate_Parms;
	memcpy ( &CallTransitionDelegate_Parms.From, &From, 0x8 );
	memcpy ( &CallTransitionDelegate_Parms.To, &To, 0x8 );

	this->ProcessEvent ( pFnCallTransitionDelegate, &CallTransitionDelegate_Parms, NULL );
};

// Function SFXGame.BioFSMComponent.TransitionStarted
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UBioFSMComponent::eventTransitionStarted ( )
{
	static UFunction* pFnTransitionStarted = NULL;

	if ( ! pFnTransitionStarted )
		pFnTransitionStarted = (UFunction*) UObject::GObjObjects()->Data[ 48697 ];

	UBioFSMComponent_eventTransitionStarted_Parms TransitionStarted_Parms;

	this->ProcessEvent ( pFnTransitionStarted, &TransitionStarted_Parms, NULL );
};

// Function SFXGame.BioFSMComponent.HasState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )

bool UBioFSMComponent::eventHasState ( struct FName ToState )
{
	static UFunction* pFnHasState = NULL;

	if ( ! pFnHasState )
		pFnHasState = (UFunction*) UObject::GObjObjects()->Data[ 48692 ];

	UBioFSMComponent_eventHasState_Parms HasState_Parms;
	memcpy ( &HasState_Parms.ToState, &ToState, 0x8 );

	this->ProcessEvent ( pFnHasState, &HasState_Parms, NULL );

	return HasState_Parms.ReturnValue;
};

// Function SFXGame.BioFSMComponent.SetState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioState*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   NamedTransition                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  IgnoreTransition               ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForceStateNow                 ( CPF_OptionalParm | CPF_Parm )

class UBioState* UBioFSMComponent::SetState ( struct FName ToState, struct FName NamedTransition, unsigned long IgnoreTransition, unsigned long bForceStateNow )
{
	static UFunction* pFnSetState = NULL;

	if ( ! pFnSetState )
		pFnSetState = (UFunction*) UObject::GObjObjects()->Data[ 48686 ];

	UBioFSMComponent_execSetState_Parms SetState_Parms;
	memcpy ( &SetState_Parms.ToState, &ToState, 0x8 );
	memcpy ( &SetState_Parms.NamedTransition, &NamedTransition, 0x8 );
	SetState_Parms.IgnoreTransition = IgnoreTransition;
	SetState_Parms.bForceStateNow = bForceStateNow;

	pFnSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetState, &SetState_Parms, NULL );

	pFnSetState->FunctionFlags |= 0x400;

	return SetState_Parms.ReturnValue;
};

// Function SFXGame.BioFSMComponent.GetTransition
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UBioTransition*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   NamedTransition                ( CPF_OptionalParm | CPF_Parm )

class UBioTransition* UBioFSMComponent::eventGetTransition ( struct FName ToState, struct FName NamedTransition )
{
	static UFunction* pFnGetTransition = NULL;

	if ( ! pFnGetTransition )
		pFnGetTransition = (UFunction*) UObject::GObjObjects()->Data[ 48678 ];

	UBioFSMComponent_eventGetTransition_Parms GetTransition_Parms;
	memcpy ( &GetTransition_Parms.ToState, &ToState, 0x8 );
	memcpy ( &GetTransition_Parms.NamedTransition, &NamedTransition, 0x8 );

	this->ProcessEvent ( pFnGetTransition, &GetTransition_Parms, NULL );

	return GetTransition_Parms.ReturnValue;
};

// Function SFXGame.BioFSMComponent.TransitionComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioFSMComponent::TransitionComplete ( )
{
	static UFunction* pFnTransitionComplete = NULL;

	if ( ! pFnTransitionComplete )
		pFnTransitionComplete = (UFunction*) UObject::GObjObjects()->Data[ 48677 ];

	UBioFSMComponent_execTransitionComplete_Parms TransitionComplete_Parms;

	pFnTransitionComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTransitionComplete, &TransitionComplete_Parms, NULL );

	pFnTransitionComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioFSMComponent.OnTransitionDelegate
// [0x00120000] 
// Parameters infos:
// struct FName                   FromState                      ( CPF_Parm )
// struct FName                   ToState                        ( CPF_Parm )
// unsigned long                  bCallCPP                       ( CPF_Parm )

void UBioFSMComponent::OnTransitionDelegate ( struct FName FromState, struct FName ToState, unsigned long bCallCPP )
{
	static UFunction* pFnOnTransitionDelegate = NULL;

	if ( ! pFnOnTransitionDelegate )
		pFnOnTransitionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48673 ];

	UBioFSMComponent_execOnTransitionDelegate_Parms OnTransitionDelegate_Parms;
	memcpy ( &OnTransitionDelegate_Parms.FromState, &FromState, 0x8 );
	memcpy ( &OnTransitionDelegate_Parms.ToState, &ToState, 0x8 );
	OnTransitionDelegate_Parms.bCallCPP = bCallCPP;

	this->ProcessEvent ( pFnOnTransitionDelegate, &OnTransitionDelegate_Parms, NULL );
};

// Function SFXGame.BioState.GetTransition
// [0x00024002] 
// Parameters infos:
// class UBioTransition*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   NamedTransition                ( CPF_OptionalParm | CPF_Parm )

class UBioTransition* UBioState::GetTransition ( struct FName ToState, struct FName NamedTransition )
{
	static UFunction* pFnGetTransition = NULL;

	if ( ! pFnGetTransition )
		pFnGetTransition = (UFunction*) UObject::GObjObjects()->Data[ 48684 ];

	UBioState_execGetTransition_Parms GetTransition_Parms;
	memcpy ( &GetTransition_Parms.ToState, &ToState, 0x8 );
	memcpy ( &GetTransition_Parms.NamedTransition, &NamedTransition, 0x8 );

	this->ProcessEvent ( pFnGetTransition, &GetTransition_Parms, NULL );

	return GetTransition_Parms.ReturnValue;
};

// Function SFXGame.BioState.HasTransitionTo
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ToState                        ( CPF_Parm )
// struct FName                   NamedTransition                ( CPF_OptionalParm | CPF_Parm )

bool UBioState::HasTransitionTo ( struct FName ToState, struct FName NamedTransition )
{
	static UFunction* pFnHasTransitionTo = NULL;

	if ( ! pFnHasTransitionTo )
		pFnHasTransitionTo = (UFunction*) UObject::GObjObjects()->Data[ 64812 ];

	UBioState_execHasTransitionTo_Parms HasTransitionTo_Parms;
	memcpy ( &HasTransitionTo_Parms.ToState, &ToState, 0x8 );
	memcpy ( &HasTransitionTo_Parms.NamedTransition, &NamedTransition, 0x8 );

	this->ProcessEvent ( pFnHasTransitionTo, &HasTransitionTo_Parms, NULL );

	return HasTransitionTo_Parms.ReturnValue;
};

// Function SFXGame.BioEventNotifier.RemoveTalentNotify
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioPawn*                oCharacter                     ( CPF_Parm )

void UBioEventNotifier::RemoveTalentNotify ( class ABioPawn* oCharacter )
{
	static UFunction* pFnRemoveTalentNotify = NULL;

	if ( ! pFnRemoveTalentNotify )
		pFnRemoveTalentNotify = (UFunction*) UObject::GObjObjects()->Data[ 52935 ];

	UBioEventNotifier_execRemoveTalentNotify_Parms RemoveTalentNotify_Parms;
	RemoveTalentNotify_Parms.oCharacter = oCharacter;

	pFnRemoveTalentNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveTalentNotify, &RemoveTalentNotify_Parms, NULL );

	pFnRemoveTalentNotify->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.OnTalentNoticeInput
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioEventNotifier::OnTalentNoticeInput ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnOnTalentNoticeInput = NULL;

	if ( ! pFnOnTalentNoticeInput )
		pFnOnTalentNoticeInput = (UFunction*) UObject::GObjObjects()->Data[ 52932 ];

	UBioEventNotifier_execOnTalentNoticeInput_Parms OnTalentNoticeInput_Parms;
	OnTalentNoticeInput_Parms.bAPressed = bAPressed;
	OnTalentNoticeInput_Parms.nContext = nContext;

	pFnOnTalentNoticeInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTalentNoticeInput, &OnTalentNoticeInput_Parms, NULL );

	pFnOnTalentNoticeInput->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.PendingTalentNotify
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oCharacter                     ( CPF_Parm )

bool UBioEventNotifier::PendingTalentNotify ( class ABioPawn* oCharacter )
{
	static UFunction* pFnPendingTalentNotify = NULL;

	if ( ! pFnPendingTalentNotify )
		pFnPendingTalentNotify = (UFunction*) UObject::GObjObjects()->Data[ 52929 ];

	UBioEventNotifier_execPendingTalentNotify_Parms PendingTalentNotify_Parms;
	PendingTalentNotify_Parms.oCharacter = oCharacter;

	pFnPendingTalentNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPendingTalentNotify, &PendingTalentNotify_Parms, NULL );

	pFnPendingTalentNotify->FunctionFlags |= 0x400;

	return PendingTalentNotify_Parms.ReturnValue;
};

// Function SFXGame.BioEventNotifier.ShowTalentNotify
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioPawn*                oCharacter                     ( CPF_Parm )

void UBioEventNotifier::ShowTalentNotify ( class ABioPawn* oCharacter )
{
	static UFunction* pFnShowTalentNotify = NULL;

	if ( ! pFnShowTalentNotify )
		pFnShowTalentNotify = (UFunction*) UObject::GObjObjects()->Data[ 52927 ];

	UBioEventNotifier_execShowTalentNotify_Parms ShowTalentNotify_Parms;
	ShowTalentNotify_Parms.oCharacter = oCharacter;

	pFnShowTalentNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowTalentNotify, &ShowTalentNotify_Parms, NULL );

	pFnShowTalentNotify->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.AddNotice
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nType                          ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// int                            nTimeToLive                    ( CPF_Parm )
// int                            nIconIndex                     ( CPF_Parm )
// int                            srTitle                        ( CPF_Parm )
// struct FString                 strTitle                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            nQuantity                      ( CPF_OptionalParm | CPF_Parm )
// int                            nQuantMin                      ( CPF_OptionalParm | CPF_Parm )
// int                            nQuantMax                      ( CPF_OptionalParm | CPF_Parm )

void UBioEventNotifier::AddNotice ( int nType, int nContext, int nTimeToLive, int nIconIndex, int srTitle, struct FString strTitle, int nQuantity, int nQuantMin, int nQuantMax )
{
	static UFunction* pFnAddNotice = NULL;

	if ( ! pFnAddNotice )
		pFnAddNotice = (UFunction*) UObject::GObjObjects()->Data[ 52917 ];

	UBioEventNotifier_execAddNotice_Parms AddNotice_Parms;
	AddNotice_Parms.nType = nType;
	AddNotice_Parms.nContext = nContext;
	AddNotice_Parms.nTimeToLive = nTimeToLive;
	AddNotice_Parms.nIconIndex = nIconIndex;
	AddNotice_Parms.srTitle = srTitle;
	memcpy ( &AddNotice_Parms.strTitle, &strTitle, 0x10 );
	AddNotice_Parms.nQuantity = nQuantity;
	AddNotice_Parms.nQuantMin = nQuantMin;
	AddNotice_Parms.nQuantMax = nQuantMax;

	pFnAddNotice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddNotice, &AddNotice_Parms, NULL );

	pFnAddNotice->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.NotarizeNotices
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEventNotifier::NotarizeNotices ( )
{
	static UFunction* pFnNotarizeNotices = NULL;

	if ( ! pFnNotarizeNotices )
		pFnNotarizeNotices = (UFunction*) UObject::GObjObjects()->Data[ 52916 ];

	UBioEventNotifier_execNotarizeNotices_Parms NotarizeNotices_Parms;

	pFnNotarizeNotices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotarizeNotices, &NotarizeNotices_Parms, NULL );

	pFnNotarizeNotices->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.HasListChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioEventNotifier::HasListChanged ( )
{
	static UFunction* pFnHasListChanged = NULL;

	if ( ! pFnHasListChanged )
		pFnHasListChanged = (UFunction*) UObject::GObjObjects()->Data[ 52915 ];

	UBioEventNotifier_execHasListChanged_Parms HasListChanged_Parms;

	pFnHasListChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasListChanged, &HasListChanged_Parms, NULL );

	pFnHasListChanged->FunctionFlags |= 0x400;
};

// Function SFXGame.BioEventNotifier.RetrieveNotices
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FBioDisplayNotice> lstNotices                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioEventNotifier::RetrieveNotices ( struct TArray<struct FBioDisplayNotice>* lstNotices )
{
	static UFunction* pFnRetrieveNotices = NULL;

	if ( ! pFnRetrieveNotices )
		pFnRetrieveNotices = (UFunction*) UObject::GObjObjects()->Data[ 52912 ];

	UBioEventNotifier_execRetrieveNotices_Parms RetrieveNotices_Parms;

	pFnRetrieveNotices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRetrieveNotices, &RetrieveNotices_Parms, NULL );

	pFnRetrieveNotices->FunctionFlags |= 0x400;

	if ( lstNotices )
		memcpy ( lstNotices, &RetrieveNotices_Parms.lstNotices, 0x10 );
};

// Function SFXGame.BioWorldInfo.SetPlayersControllerId
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ULocalPlayer*            Player                         ( CPF_Parm )
// int                            ControllerId                   ( CPF_Parm )

void ABioWorldInfo::eventSetPlayersControllerId ( class ULocalPlayer* Player, int ControllerId )
{
	static UFunction* pFnSetPlayersControllerId = NULL;

	if ( ! pFnSetPlayersControllerId )
		pFnSetPlayersControllerId = (UFunction*) UObject::GObjObjects()->Data[ 66159 ];

	ABioWorldInfo_eventSetPlayersControllerId_Parms SetPlayersControllerId_Parms;
	SetPlayersControllerId_Parms.Player = Player;
	SetPlayersControllerId_Parms.ControllerId = ControllerId;

	this->ProcessEvent ( pFnSetPlayersControllerId, &SetPlayersControllerId_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.StartNoBrowserWheelTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWorldInfo::eventStartNoBrowserWheelTimer ( )
{
	static UFunction* pFnStartNoBrowserWheelTimer = NULL;

	if ( ! pFnStartNoBrowserWheelTimer )
		pFnStartNoBrowserWheelTimer = (UFunction*) UObject::GObjObjects()->Data[ 66158 ];

	ABioWorldInfo_eventStartNoBrowserWheelTimer_Parms StartNoBrowserWheelTimer_Parms;

	this->ProcessEvent ( pFnStartNoBrowserWheelTimer, &StartNoBrowserWheelTimer_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.SaveGamesExist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::SaveGamesExist ( )
{
	static UFunction* pFnSaveGamesExist = NULL;

	if ( ! pFnSaveGamesExist )
		pFnSaveGamesExist = (UFunction*) UObject::GObjObjects()->Data[ 62541 ];

	ABioWorldInfo_execSaveGamesExist_Parms SaveGamesExist_Parms;

	pFnSaveGamesExist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveGamesExist, &SaveGamesExist_Parms, NULL );

	pFnSaveGamesExist->FunctionFlags |= 0x400;

	return SaveGamesExist_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.UpdateLowestCombatDifficulty
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWorldInfo::eventUpdateLowestCombatDifficulty ( )
{
	static UFunction* pFnUpdateLowestCombatDifficulty = NULL;

	if ( ! pFnUpdateLowestCombatDifficulty )
		pFnUpdateLowestCombatDifficulty = (UFunction*) UObject::GObjObjects()->Data[ 66154 ];

	ABioWorldInfo_eventUpdateLowestCombatDifficulty_Parms UpdateLowestCombatDifficulty_Parms;

	this->ProcessEvent ( pFnUpdateLowestCombatDifficulty, &UpdateLowestCombatDifficulty_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.BioStartMatch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioWorldInfo::eventBioStartMatch ( )
{
	static UFunction* pFnBioStartMatch = NULL;

	if ( ! pFnBioStartMatch )
		pFnBioStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 66143 ];

	ABioWorldInfo_eventBioStartMatch_Parms BioStartMatch_Parms;

	this->ProcessEvent ( pFnBioStartMatch, &BioStartMatch_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioWorldInfo::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 66141 ];

	ABioWorldInfo_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.OnPlayerSquadDeath
// [0x00020002] 
// Parameters infos:

void ABioWorldInfo::OnPlayerSquadDeath ( )
{
	static UFunction* pFnOnPlayerSquadDeath = NULL;

	if ( ! pFnOnPlayerSquadDeath )
		pFnOnPlayerSquadDeath = (UFunction*) UObject::GObjObjects()->Data[ 66140 ];

	ABioWorldInfo_execOnPlayerSquadDeath_Parms OnPlayerSquadDeath_Parms;

	this->ProcessEvent ( pFnOnPlayerSquadDeath, &OnPlayerSquadDeath_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.EndGame
// [0x00024002] 
// Parameters infos:
// int                            srGameOverString               ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::EndGame ( int srGameOverString )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 66135 ];

	ABioWorldInfo_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.srGameOverString = srGameOverString;

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.OnSaveGameNotFound
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oDelegateObject                ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmDelegateFunctionName         ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::OnSaveGameNotFound ( class UObject* oDelegateObject, struct FName nmDelegateFunctionName )
{
	static UFunction* pFnOnSaveGameNotFound = NULL;

	if ( ! pFnOnSaveGameNotFound )
		pFnOnSaveGameNotFound = (UFunction*) UObject::GObjObjects()->Data[ 66132 ];

	ABioWorldInfo_execOnSaveGameNotFound_Parms OnSaveGameNotFound_Parms;
	OnSaveGameNotFound_Parms.oDelegateObject = oDelegateObject;
	memcpy ( &OnSaveGameNotFound_Parms.nmDelegateFunctionName, &nmDelegateFunctionName, 0x8 );

	pFnOnSaveGameNotFound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnSaveGameNotFound, &OnSaveGameNotFound_Parms, NULL );

	pFnOnSaveGameNotFound->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetGlobalEvents
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  EventClass                     ( CPF_Parm )
// struct TArray<class USequenceEvent*> aEvents                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioWorldInfo::GetGlobalEvents ( class UClass* EventClass, struct TArray<class USequenceEvent*>* aEvents )
{
	static UFunction* pFnGetGlobalEvents = NULL;

	if ( ! pFnGetGlobalEvents )
		pFnGetGlobalEvents = (UFunction*) UObject::GObjObjects()->Data[ 66128 ];

	ABioWorldInfo_execGetGlobalEvents_Parms GetGlobalEvents_Parms;
	GetGlobalEvents_Parms.EventClass = EventClass;

	pFnGetGlobalEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGlobalEvents, &GetGlobalEvents_Parms, NULL );

	pFnGetGlobalEvents->FunctionFlags |= 0x400;

	if ( aEvents )
		memcpy ( aEvents, &GetGlobalEvents_Parms.aEvents, 0x10 );
};

// Function SFXGame.BioWorldInfo.SetSoundGroupPitch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SoundGroupName                 ( CPF_Parm )
// float                          fPitch                         ( CPF_Parm )

void ABioWorldInfo::SetSoundGroupPitch ( struct FName SoundGroupName, float fPitch )
{
	static UFunction* pFnSetSoundGroupPitch = NULL;

	if ( ! pFnSetSoundGroupPitch )
		pFnSetSoundGroupPitch = (UFunction*) UObject::GObjObjects()->Data[ 66125 ];

	ABioWorldInfo_execSetSoundGroupPitch_Parms SetSoundGroupPitch_Parms;
	memcpy ( &SetSoundGroupPitch_Parms.SoundGroupName, &SoundGroupName, 0x8 );
	SetSoundGroupPitch_Parms.fPitch = fPitch;

	pFnSetSoundGroupPitch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundGroupPitch, &SetSoundGroupPitch_Parms, NULL );

	pFnSetSoundGroupPitch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetSoundGroupPitch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SoundGroupName                 ( CPF_Parm )

float ABioWorldInfo::GetSoundGroupPitch ( struct FName SoundGroupName )
{
	static UFunction* pFnGetSoundGroupPitch = NULL;

	if ( ! pFnGetSoundGroupPitch )
		pFnGetSoundGroupPitch = (UFunction*) UObject::GObjObjects()->Data[ 66122 ];

	ABioWorldInfo_execGetSoundGroupPitch_Parms GetSoundGroupPitch_Parms;
	memcpy ( &GetSoundGroupPitch_Parms.SoundGroupName, &SoundGroupName, 0x8 );

	pFnGetSoundGroupPitch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSoundGroupPitch, &GetSoundGroupPitch_Parms, NULL );

	pFnGetSoundGroupPitch->FunctionFlags |= 0x400;

	return GetSoundGroupPitch_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetSoundGroupPriority
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SoundGroupName                 ( CPF_Parm )
// float                          fPriority                      ( CPF_Parm )

void ABioWorldInfo::SetSoundGroupPriority ( struct FName SoundGroupName, float fPriority )
{
	static UFunction* pFnSetSoundGroupPriority = NULL;

	if ( ! pFnSetSoundGroupPriority )
		pFnSetSoundGroupPriority = (UFunction*) UObject::GObjObjects()->Data[ 66119 ];

	ABioWorldInfo_execSetSoundGroupPriority_Parms SetSoundGroupPriority_Parms;
	memcpy ( &SetSoundGroupPriority_Parms.SoundGroupName, &SoundGroupName, 0x8 );
	SetSoundGroupPriority_Parms.fPriority = fPriority;

	pFnSetSoundGroupPriority->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundGroupPriority, &SetSoundGroupPriority_Parms, NULL );

	pFnSetSoundGroupPriority->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetSoundGroupPriority
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SoundGroupName                 ( CPF_Parm )

float ABioWorldInfo::GetSoundGroupPriority ( struct FName SoundGroupName )
{
	static UFunction* pFnGetSoundGroupPriority = NULL;

	if ( ! pFnGetSoundGroupPriority )
		pFnGetSoundGroupPriority = (UFunction*) UObject::GObjObjects()->Data[ 66116 ];

	ABioWorldInfo_execGetSoundGroupPriority_Parms GetSoundGroupPriority_Parms;
	memcpy ( &GetSoundGroupPriority_Parms.SoundGroupName, &SoundGroupName, 0x8 );

	pFnGetSoundGroupPriority->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSoundGroupPriority, &GetSoundGroupPriority_Parms, NULL );

	pFnGetSoundGroupPriority->FunctionFlags |= 0x400;

	return GetSoundGroupPriority_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetSoundGroupVolume
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SoundGroupName                 ( CPF_Parm )
// float                          fVolume                        ( CPF_Parm )
// float                          fFadeDuration                  ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::SetSoundGroupVolume ( struct FName SoundGroupName, float fVolume, float fFadeDuration )
{
	static UFunction* pFnSetSoundGroupVolume = NULL;

	if ( ! pFnSetSoundGroupVolume )
		pFnSetSoundGroupVolume = (UFunction*) UObject::GObjObjects()->Data[ 66112 ];

	ABioWorldInfo_execSetSoundGroupVolume_Parms SetSoundGroupVolume_Parms;
	memcpy ( &SetSoundGroupVolume_Parms.SoundGroupName, &SoundGroupName, 0x8 );
	SetSoundGroupVolume_Parms.fVolume = fVolume;
	SetSoundGroupVolume_Parms.fFadeDuration = fFadeDuration;

	pFnSetSoundGroupVolume->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundGroupVolume, &SetSoundGroupVolume_Parms, NULL );

	pFnSetSoundGroupVolume->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetSoundGroupVolume
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SoundGroupName                 ( CPF_Parm )

float ABioWorldInfo::GetSoundGroupVolume ( struct FName SoundGroupName )
{
	static UFunction* pFnGetSoundGroupVolume = NULL;

	if ( ! pFnGetSoundGroupVolume )
		pFnGetSoundGroupVolume = (UFunction*) UObject::GObjObjects()->Data[ 66109 ];

	ABioWorldInfo_execGetSoundGroupVolume_Parms GetSoundGroupVolume_Parms;
	memcpy ( &GetSoundGroupVolume_Parms.SoundGroupName, &SoundGroupName, 0x8 );

	pFnGetSoundGroupVolume->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSoundGroupVolume, &GetSoundGroupVolume_Parms, NULL );

	pFnGetSoundGroupVolume->FunctionFlags |= 0x400;

	return GetSoundGroupVolume_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetIsOriginalFileCreator
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::GetIsOriginalFileCreator ( )
{
	static UFunction* pFnGetIsOriginalFileCreator = NULL;

	if ( ! pFnGetIsOriginalFileCreator )
		pFnGetIsOriginalFileCreator = (UFunction*) UObject::GObjObjects()->Data[ 56424 ];

	ABioWorldInfo_execGetIsOriginalFileCreator_Parms GetIsOriginalFileCreator_Parms;

	pFnGetIsOriginalFileCreator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsOriginalFileCreator, &GetIsOriginalFileCreator_Parms, NULL );

	pFnGetIsOriginalFileCreator->FunctionFlags |= 0x400;

	return GetIsOriginalFileCreator_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetInvalidSaveFileCreator
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nSaveFileType                  ( CPF_Parm )
// unsigned long                  bInvalid                       ( CPF_Parm )

void ABioWorldInfo::SetInvalidSaveFileCreator ( unsigned char nSaveFileType, unsigned long bInvalid )
{
	static UFunction* pFnSetInvalidSaveFileCreator = NULL;

	if ( ! pFnSetInvalidSaveFileCreator )
		pFnSetInvalidSaveFileCreator = (UFunction*) UObject::GObjObjects()->Data[ 66106 ];

	ABioWorldInfo_execSetInvalidSaveFileCreator_Parms SetInvalidSaveFileCreator_Parms;
	SetInvalidSaveFileCreator_Parms.nSaveFileType = nSaveFileType;
	SetInvalidSaveFileCreator_Parms.bInvalid = bInvalid;

	pFnSetInvalidSaveFileCreator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetInvalidSaveFileCreator, &SetInvalidSaveFileCreator_Parms, NULL );

	pFnSetInvalidSaveFileCreator->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.SetDisplayRealSaveGameNames
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  i_bValue                       ( CPF_Parm )

void ABioWorldInfo::SetDisplayRealSaveGameNames ( unsigned long i_bValue )
{
	static UFunction* pFnSetDisplayRealSaveGameNames = NULL;

	if ( ! pFnSetDisplayRealSaveGameNames )
		pFnSetDisplayRealSaveGameNames = (UFunction*) UObject::GObjObjects()->Data[ 66104 ];

	ABioWorldInfo_execSetDisplayRealSaveGameNames_Parms SetDisplayRealSaveGameNames_Parms;
	SetDisplayRealSaveGameNames_Parms.i_bValue = i_bValue;

	pFnSetDisplayRealSaveGameNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDisplayRealSaveGameNames, &SetDisplayRealSaveGameNames_Parms, NULL );

	pFnSetDisplayRealSaveGameNames->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetDisplayRealSaveGameNames
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::GetDisplayRealSaveGameNames ( )
{
	static UFunction* pFnGetDisplayRealSaveGameNames = NULL;

	if ( ! pFnGetDisplayRealSaveGameNames )
		pFnGetDisplayRealSaveGameNames = (UFunction*) UObject::GObjObjects()->Data[ 51634 ];

	ABioWorldInfo_execGetDisplayRealSaveGameNames_Parms GetDisplayRealSaveGameNames_Parms;

	pFnGetDisplayRealSaveGameNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayRealSaveGameNames, &GetDisplayRealSaveGameNames_Parms, NULL );

	pFnGetDisplayRealSaveGameNames->FunctionFlags |= 0x400;

	return GetDisplayRealSaveGameNames_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetGuiStartupSystemsInitialized
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  i_bValue                       ( CPF_Parm )

void ABioWorldInfo::SetGuiStartupSystemsInitialized ( unsigned long i_bValue )
{
	static UFunction* pFnSetGuiStartupSystemsInitialized = NULL;

	if ( ! pFnSetGuiStartupSystemsInitialized )
		pFnSetGuiStartupSystemsInitialized = (UFunction*) UObject::GObjObjects()->Data[ 66102 ];

	ABioWorldInfo_execSetGuiStartupSystemsInitialized_Parms SetGuiStartupSystemsInitialized_Parms;
	SetGuiStartupSystemsInitialized_Parms.i_bValue = i_bValue;

	pFnSetGuiStartupSystemsInitialized->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGuiStartupSystemsInitialized, &SetGuiStartupSystemsInitialized_Parms, NULL );

	pFnSetGuiStartupSystemsInitialized->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetGuiStartupSystemsInitialized
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::GetGuiStartupSystemsInitialized ( )
{
	static UFunction* pFnGetGuiStartupSystemsInitialized = NULL;

	if ( ! pFnGetGuiStartupSystemsInitialized )
		pFnGetGuiStartupSystemsInitialized = (UFunction*) UObject::GObjObjects()->Data[ 60443 ];

	ABioWorldInfo_execGetGuiStartupSystemsInitialized_Parms GetGuiStartupSystemsInitialized_Parms;

	pFnGetGuiStartupSystemsInitialized->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuiStartupSystemsInitialized, &GetGuiStartupSystemsInitialized_Parms, NULL );

	pFnGetGuiStartupSystemsInitialized->FunctionFlags |= 0x400;

	return GetGuiStartupSystemsInitialized_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetRenderStateOfPlayerToDefault
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  RenderState                    ( CPF_Parm )

void ABioWorldInfo::SetRenderStateOfPlayerToDefault ( unsigned char RenderState )
{
	static UFunction* pFnSetRenderStateOfPlayerToDefault = NULL;

	if ( ! pFnSetRenderStateOfPlayerToDefault )
		pFnSetRenderStateOfPlayerToDefault = (UFunction*) UObject::GObjObjects()->Data[ 66100 ];

	ABioWorldInfo_execSetRenderStateOfPlayerToDefault_Parms SetRenderStateOfPlayerToDefault_Parms;
	SetRenderStateOfPlayerToDefault_Parms.RenderState = RenderState;

	pFnSetRenderStateOfPlayerToDefault->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRenderStateOfPlayerToDefault, &SetRenderStateOfPlayerToDefault_Parms, NULL );

	pFnSetRenderStateOfPlayerToDefault->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.SetRenderStateOfPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  RenderState                    ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void ABioWorldInfo::SetRenderStateOfPlayer ( unsigned char RenderState, float fValue )
{
	static UFunction* pFnSetRenderStateOfPlayer = NULL;

	if ( ! pFnSetRenderStateOfPlayer )
		pFnSetRenderStateOfPlayer = (UFunction*) UObject::GObjObjects()->Data[ 66097 ];

	ABioWorldInfo_execSetRenderStateOfPlayer_Parms SetRenderStateOfPlayer_Parms;
	SetRenderStateOfPlayer_Parms.RenderState = RenderState;
	SetRenderStateOfPlayer_Parms.fValue = fValue;

	pFnSetRenderStateOfPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRenderStateOfPlayer, &SetRenderStateOfPlayer_Parms, NULL );

	pFnSetRenderStateOfPlayer->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetRenderStateOfPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RenderState                    ( CPF_Parm )

float ABioWorldInfo::GetRenderStateOfPlayer ( unsigned char RenderState )
{
	static UFunction* pFnGetRenderStateOfPlayer = NULL;

	if ( ! pFnGetRenderStateOfPlayer )
		pFnGetRenderStateOfPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52247 ];

	ABioWorldInfo_execGetRenderStateOfPlayer_Parms GetRenderStateOfPlayer_Parms;
	GetRenderStateOfPlayer_Parms.RenderState = RenderState;

	pFnGetRenderStateOfPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRenderStateOfPlayer, &GetRenderStateOfPlayer_Parms, NULL );

	pFnGetRenderStateOfPlayer->FunctionFlags |= 0x400;

	return GetRenderStateOfPlayer_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.UpdateEnvironmentEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::UpdateEnvironmentEffects ( float fDeltaT )
{
	static UFunction* pFnUpdateEnvironmentEffects = NULL;

	if ( ! pFnUpdateEnvironmentEffects )
		pFnUpdateEnvironmentEffects = (UFunction*) UObject::GObjObjects()->Data[ 66094 ];

	ABioWorldInfo_execUpdateEnvironmentEffects_Parms UpdateEnvironmentEffects_Parms;
	UpdateEnvironmentEffects_Parms.fDeltaT = fDeltaT;

	pFnUpdateEnvironmentEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateEnvironmentEffects, &UpdateEnvironmentEffects_Parms, NULL );

	pFnUpdateEnvironmentEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.UpdateSubtitles
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::UpdateSubtitles ( float fDeltaT )
{
	static UFunction* pFnUpdateSubtitles = NULL;

	if ( ! pFnUpdateSubtitles )
		pFnUpdateSubtitles = (UFunction*) UObject::GObjObjects()->Data[ 66091 ];

	ABioWorldInfo_execUpdateSubtitles_Parms UpdateSubtitles_Parms;
	UpdateSubtitles_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateSubtitles, &UpdateSubtitles_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.GetSubtitles
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSubtitles*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioSubtitles* ABioWorldInfo::GetSubtitles ( )
{
	static UFunction* pFnGetSubtitles = NULL;

	if ( ! pFnGetSubtitles )
		pFnGetSubtitles = (UFunction*) UObject::GObjObjects()->Data[ 61408 ];

	ABioWorldInfo_execGetSubtitles_Parms GetSubtitles_Parms;

	pFnGetSubtitles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSubtitles, &GetSubtitles_Parms, NULL );

	pFnGetSubtitles->FunctionFlags |= 0x400;

	return GetSubtitles_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.ApplyWind
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::ApplyWind ( float fDeltaT )
{
	static UFunction* pFnApplyWind = NULL;

	if ( ! pFnApplyWind )
		pFnApplyWind = (UFunction*) UObject::GObjObjects()->Data[ 66084 ];

	ABioWorldInfo_execApplyWind_Parms ApplyWind_Parms;
	ApplyWind_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnApplyWind, &ApplyWind_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.AdjustWind
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::AdjustWind ( float fDeltaT )
{
	static UFunction* pFnAdjustWind = NULL;

	if ( ! pFnAdjustWind )
		pFnAdjustWind = (UFunction*) UObject::GObjObjects()->Data[ 66072 ];

	ABioWorldInfo_execAdjustWind_Parms AdjustWind_Parms;
	AdjustWind_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnAdjustWind, &AdjustWind_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.DoFakeWind
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::DoFakeWind ( float fDeltaT )
{
	static UFunction* pFnDoFakeWind = NULL;

	if ( ! pFnDoFakeWind )
		pFnDoFakeWind = (UFunction*) UObject::GObjObjects()->Data[ 66070 ];

	ABioWorldInfo_execDoFakeWind_Parms DoFakeWind_Parms;
	DoFakeWind_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnDoFakeWind, &DoFakeWind_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.PrintSlowMotionQ
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::PrintSlowMotionQ ( )
{
	static UFunction* pFnPrintSlowMotionQ = NULL;

	if ( ! pFnPrintSlowMotionQ )
		pFnPrintSlowMotionQ = (UFunction*) UObject::GObjObjects()->Data[ 66069 ];

	ABioWorldInfo_execPrintSlowMotionQ_Parms PrintSlowMotionQ_Parms;

	pFnPrintSlowMotionQ->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrintSlowMotionQ, &PrintSlowMotionQ_Parms, NULL );

	pFnPrintSlowMotionQ->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.ClearAllSlowMotion
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::ClearAllSlowMotion ( )
{
	static UFunction* pFnClearAllSlowMotion = NULL;

	if ( ! pFnClearAllSlowMotion )
		pFnClearAllSlowMotion = (UFunction*) UObject::GObjObjects()->Data[ 66068 ];

	ABioWorldInfo_execClearAllSlowMotion_Parms ClearAllSlowMotion_Parms;

	pFnClearAllSlowMotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearAllSlowMotion, &ClearAllSlowMotion_Parms, NULL );

	pFnClearAllSlowMotion->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.EndSlowMoRequest
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nReqID                         ( CPF_Parm )
// float                          fExpireTime                    ( CPF_Parm )

bool ABioWorldInfo::EndSlowMoRequest ( int nReqID, float fExpireTime )
{
	static UFunction* pFnEndSlowMoRequest = NULL;

	if ( ! pFnEndSlowMoRequest )
		pFnEndSlowMoRequest = (UFunction*) UObject::GObjObjects()->Data[ 45501 ];

	ABioWorldInfo_execEndSlowMoRequest_Parms EndSlowMoRequest_Parms;
	EndSlowMoRequest_Parms.nReqID = nReqID;
	EndSlowMoRequest_Parms.fExpireTime = fExpireTime;

	pFnEndSlowMoRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndSlowMoRequest, &EndSlowMoRequest_Parms, NULL );

	pFnEndSlowMoRequest->FunctionFlags |= 0x400;

	return EndSlowMoRequest_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.RequestSlowMotion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fSpeed                         ( CPF_Parm )
// float                          fLifeTime                      ( CPF_Parm )
// int                            nPriority                      ( CPF_Parm )

int ABioWorldInfo::RequestSlowMotion ( float fSpeed, float fLifeTime, int nPriority )
{
	static UFunction* pFnRequestSlowMotion = NULL;

	if ( ! pFnRequestSlowMotion )
		pFnRequestSlowMotion = (UFunction*) UObject::GObjObjects()->Data[ 45505 ];

	ABioWorldInfo_execRequestSlowMotion_Parms RequestSlowMotion_Parms;
	RequestSlowMotion_Parms.fSpeed = fSpeed;
	RequestSlowMotion_Parms.fLifeTime = fLifeTime;
	RequestSlowMotion_Parms.nPriority = nPriority;

	pFnRequestSlowMotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestSlowMotion, &RequestSlowMotion_Parms, NULL );

	pFnRequestSlowMotion->FunctionFlags |= 0x400;

	return RequestSlowMotion_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.UpdateSlowMotionQ
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ABioWorldInfo::UpdateSlowMotionQ ( float fDeltaTime )
{
	static UFunction* pFnUpdateSlowMotionQ = NULL;

	if ( ! pFnUpdateSlowMotionQ )
		pFnUpdateSlowMotionQ = (UFunction*) UObject::GObjObjects()->Data[ 66061 ];

	ABioWorldInfo_execUpdateSlowMotionQ_Parms UpdateSlowMotionQ_Parms;
	UpdateSlowMotionQ_Parms.fDeltaTime = fDeltaTime;

	pFnUpdateSlowMotionQ->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSlowMotionQ, &UpdateSlowMotionQ_Parms, NULL );

	pFnUpdateSlowMotionQ->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.SetGlobalTlk
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bMale                          ( CPF_Parm )
// unsigned long                  bPurge                         ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::SetGlobalTlk ( unsigned long bMale, unsigned long bPurge )
{
	static UFunction* pFnSetGlobalTlk = NULL;

	if ( ! pFnSetGlobalTlk )
		pFnSetGlobalTlk = (UFunction*) UObject::GObjObjects()->Data[ 66058 ];

	ABioWorldInfo_execSetGlobalTlk_Parms SetGlobalTlk_Parms;
	SetGlobalTlk_Parms.bMale = bMale;
	SetGlobalTlk_Parms.bPurge = bPurge;

	pFnSetGlobalTlk->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGlobalTlk, &SetGlobalTlk_Parms, NULL );

	pFnSetGlobalTlk->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.LoadDLCTlkFiles
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bMale                          ( CPF_Parm )
// unsigned long                  bFemale                        ( CPF_Parm )
// unsigned long                  bAddMale                       ( CPF_Parm )
// unsigned long                  bAddFemale                     ( CPF_Parm )

void ABioWorldInfo::LoadDLCTlkFiles ( unsigned long bMale, unsigned long bFemale, unsigned long bAddMale, unsigned long bAddFemale )
{
	static UFunction* pFnLoadDLCTlkFiles = NULL;

	if ( ! pFnLoadDLCTlkFiles )
		pFnLoadDLCTlkFiles = (UFunction*) UObject::GObjObjects()->Data[ 66053 ];

	ABioWorldInfo_execLoadDLCTlkFiles_Parms LoadDLCTlkFiles_Parms;
	LoadDLCTlkFiles_Parms.bMale = bMale;
	LoadDLCTlkFiles_Parms.bFemale = bFemale;
	LoadDLCTlkFiles_Parms.bAddMale = bAddMale;
	LoadDLCTlkFiles_Parms.bAddFemale = bAddFemale;

	pFnLoadDLCTlkFiles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadDLCTlkFiles, &LoadDLCTlkFiles_Parms, NULL );

	pFnLoadDLCTlkFiles->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.LoadTlkFiles
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bMale                          ( CPF_Parm )
// unsigned long                  bFemale                        ( CPF_Parm )
// unsigned long                  bAddMale                       ( CPF_Parm )
// unsigned long                  bAddFemale                     ( CPF_Parm )

void ABioWorldInfo::LoadTlkFiles ( unsigned long bMale, unsigned long bFemale, unsigned long bAddMale, unsigned long bAddFemale )
{
	static UFunction* pFnLoadTlkFiles = NULL;

	if ( ! pFnLoadTlkFiles )
		pFnLoadTlkFiles = (UFunction*) UObject::GObjObjects()->Data[ 66048 ];

	ABioWorldInfo_execLoadTlkFiles_Parms LoadTlkFiles_Parms;
	LoadTlkFiles_Parms.bMale = bMale;
	LoadTlkFiles_Parms.bFemale = bFemale;
	LoadTlkFiles_Parms.bAddMale = bAddMale;
	LoadTlkFiles_Parms.bAddFemale = bAddFemale;

	pFnLoadTlkFiles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadTlkFiles, &LoadTlkFiles_Parms, NULL );

	pFnLoadTlkFiles->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.BioBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ABioWorldInfo::eventBioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 66047 ];

	ABioWorldInfo_eventBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.IsAbleToSave
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sReason                        ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ABioWorldInfo::IsAbleToSave ( struct FString* sReason )
{
	static UFunction* pFnIsAbleToSave = NULL;

	if ( ! pFnIsAbleToSave )
		pFnIsAbleToSave = (UFunction*) UObject::GObjObjects()->Data[ 50109 ];

	ABioWorldInfo_execIsAbleToSave_Parms IsAbleToSave_Parms;

	pFnIsAbleToSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAbleToSave, &IsAbleToSave_Parms, NULL );

	pFnIsAbleToSave->FunctionFlags |= 0x400;

	if ( sReason )
		memcpy ( sReason, &IsAbleToSave_Parms.sReason, 0x10 );

	return IsAbleToSave_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.CheckState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nState                         ( CPF_Parm )

bool ABioWorldInfo::eventCheckState ( int nState )
{
	static UFunction* pFnCheckState = NULL;

	if ( ! pFnCheckState )
		pFnCheckState = (UFunction*) UObject::GObjObjects()->Data[ 66042 ];

	ABioWorldInfo_eventCheckState_Parms CheckState_Parms;
	CheckState_Parms.nState = nState;

	this->ProcessEvent ( pFnCheckState, &CheckState_Parms, NULL );

	return CheckState_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.InterruptConversation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioConversation*        oConv                          ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::InterruptConversation ( class UBioConversation* oConv )
{
	static UFunction* pFnInterruptConversation = NULL;

	if ( ! pFnInterruptConversation )
		pFnInterruptConversation = (UFunction*) UObject::GObjObjects()->Data[ 66040 ];

	ABioWorldInfo_execInterruptConversation_Parms InterruptConversation_Parms;
	InterruptConversation_Parms.oConv = oConv;

	pFnInterruptConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterruptConversation, &InterruptConversation_Parms, NULL );

	pFnInterruptConversation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.UpdateConversation
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::UpdateConversation ( float fDeltaT )
{
	static UFunction* pFnUpdateConversation = NULL;

	if ( ! pFnUpdateConversation )
		pFnUpdateConversation = (UFunction*) UObject::GObjObjects()->Data[ 66038 ];

	ABioWorldInfo_execUpdateConversation_Parms UpdateConversation_Parms;
	UpdateConversation_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateConversation, &UpdateConversation_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.EndCurrentFaceOnlyVO
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioSeqAct_FaceOnlyVO*   pFOVO                          ( CPF_Parm )

void ABioWorldInfo::EndCurrentFaceOnlyVO ( class UBioSeqAct_FaceOnlyVO* pFOVO )
{
	static UFunction* pFnEndCurrentFaceOnlyVO = NULL;

	if ( ! pFnEndCurrentFaceOnlyVO )
		pFnEndCurrentFaceOnlyVO = (UFunction*) UObject::GObjObjects()->Data[ 66036 ];

	ABioWorldInfo_execEndCurrentFaceOnlyVO_Parms EndCurrentFaceOnlyVO_Parms;
	EndCurrentFaceOnlyVO_Parms.pFOVO = pFOVO;

	pFnEndCurrentFaceOnlyVO->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndCurrentFaceOnlyVO, &EndCurrentFaceOnlyVO_Parms, NULL );

	pFnEndCurrentFaceOnlyVO->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.EndCurrentConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::EndCurrentConversation ( )
{
	static UFunction* pFnEndCurrentConversation = NULL;

	if ( ! pFnEndCurrentConversation )
		pFnEndCurrentConversation = (UFunction*) UObject::GObjObjects()->Data[ 66035 ];

	ABioWorldInfo_execEndCurrentConversation_Parms EndCurrentConversation_Parms;

	pFnEndCurrentConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndCurrentConversation, &EndCurrentConversation_Parms, NULL );

	pFnEndCurrentConversation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.StartConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioConversation*        oConv                          ( CPF_Parm )
// class AActor*                  Owner_                         ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )

bool ABioWorldInfo::StartConversation ( class UBioConversation* oConv, class AActor* Owner_, class AActor* Target )
{
	static UFunction* pFnStartConversation = NULL;

	if ( ! pFnStartConversation )
		pFnStartConversation = (UFunction*) UObject::GObjObjects()->Data[ 66030 ];

	ABioWorldInfo_execStartConversation_Parms StartConversation_Parms;
	StartConversation_Parms.oConv = oConv;
	StartConversation_Parms.Owner_ = Owner_;
	StartConversation_Parms.Target = Target;

	pFnStartConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartConversation, &StartConversation_Parms, NULL );

	pFnStartConversation->FunctionFlags |= 0x400;

	return StartConversation_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetConversation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioConversation*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioConversation* ABioWorldInfo::eventGetConversation ( )
{
	static UFunction* pFnGetConversation = NULL;

	if ( ! pFnGetConversation )
		pFnGetConversation = (UFunction*) UObject::GObjObjects()->Data[ 59451 ];

	ABioWorldInfo_eventGetConversation_Parms GetConversation_Parms;

	this->ProcessEvent ( pFnGetConversation, &GetConversation_Parms, NULL );

	return GetConversation_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.ClearCurrentGame
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bRestorGamerProfilePlotManagerVariables ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::eventClearCurrentGame ( unsigned long bRestorGamerProfilePlotManagerVariables )
{
	static UFunction* pFnClearCurrentGame = NULL;

	if ( ! pFnClearCurrentGame )
		pFnClearCurrentGame = (UFunction*) UObject::GObjObjects()->Data[ 66025 ];

	ABioWorldInfo_eventClearCurrentGame_Parms ClearCurrentGame_Parms;
	ClearCurrentGame_Parms.bRestorGamerProfilePlotManagerVariables = bRestorGamerProfilePlotManagerVariables;

	this->ProcessEvent ( pFnClearCurrentGame, &ClearCurrentGame_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.GetGlobalVariables
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGlobalVariableTable* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioGlobalVariableTable* ABioWorldInfo::GetGlobalVariables ( )
{
	static UFunction* pFnGetGlobalVariables = NULL;

	if ( ! pFnGetGlobalVariables )
		pFnGetGlobalVariables = (UFunction*) UObject::GObjObjects()->Data[ 50600 ];

	ABioWorldInfo_execGetGlobalVariables_Parms GetGlobalVariables_Parms;

	pFnGetGlobalVariables->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGlobalVariables, &GetGlobalVariables_Parms, NULL );

	pFnGetGlobalVariables->FunctionFlags |= 0x400;

	return GetGlobalVariables_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetBioGamerProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGamerProfile*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioGamerProfile* ABioWorldInfo::GetBioGamerProfile ( )
{
	static UFunction* pFnGetBioGamerProfile = NULL;

	if ( ! pFnGetBioGamerProfile )
		pFnGetBioGamerProfile = (UFunction*) UObject::GObjObjects()->Data[ 45380 ];

	ABioWorldInfo_execGetBioGamerProfile_Parms GetBioGamerProfile_Parms;

	pFnGetBioGamerProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBioGamerProfile, &GetBioGamerProfile_Parms, NULL );

	pFnGetBioGamerProfile->FunctionFlags |= 0x400;

	return GetBioGamerProfile_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.InitDownloadableContent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioWorldInfo::InitDownloadableContent ( )
{
	static UFunction* pFnInitDownloadableContent = NULL;

	if ( ! pFnInitDownloadableContent )
		pFnInitDownloadableContent = (UFunction*) UObject::GObjObjects()->Data[ 66024 ];

	ABioWorldInfo_execInitDownloadableContent_Parms InitDownloadableContent_Parms;

	pFnInitDownloadableContent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitDownloadableContent, &InitDownloadableContent_Parms, NULL );

	pFnInitDownloadableContent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.InitGUIDependentStartupSystems
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSFPanel*             i_oPanel                       ( CPF_Parm )

void ABioWorldInfo::InitGUIDependentStartupSystems ( class UBioSFPanel* i_oPanel )
{
	static UFunction* pFnInitGUIDependentStartupSystems = NULL;

	if ( ! pFnInitGUIDependentStartupSystems )
		pFnInitGUIDependentStartupSystems = (UFunction*) UObject::GObjObjects()->Data[ 60445 ];

	ABioWorldInfo_execInitGUIDependentStartupSystems_Parms InitGUIDependentStartupSystems_Parms;
	InitGUIDependentStartupSystems_Parms.i_oPanel = i_oPanel;

	pFnInitGUIDependentStartupSystems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGUIDependentStartupSystems, &InitGUIDependentStartupSystems_Parms, NULL );

	pFnInitGUIDependentStartupSystems->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::Tick ( float fDeltaT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66016 ];

	ABioWorldInfo_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.HasFocus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::HasFocus ( )
{
	static UFunction* pFnHasFocus = NULL;

	if ( ! pFnHasFocus )
		pFnHasFocus = (UFunction*) UObject::GObjObjects()->Data[ 66014 ];

	ABioWorldInfo_execHasFocus_Parms HasFocus_Parms;

	pFnHasFocus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasFocus, &HasFocus_Parms, NULL );

	pFnHasFocus->FunctionFlags |= 0x400;

	return HasFocus_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.LootBagActivated
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::LootBagActivated ( )
{
	static UFunction* pFnLootBagActivated = NULL;

	if ( ! pFnLootBagActivated )
		pFnLootBagActivated = (UFunction*) UObject::GObjObjects()->Data[ 66012 ];

	ABioWorldInfo_execLootBagActivated_Parms LootBagActivated_Parms;

	pFnLootBagActivated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLootBagActivated, &LootBagActivated_Parms, NULL );

	pFnLootBagActivated->FunctionFlags |= 0x400;

	return LootBagActivated_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.CreateLootBag
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ULevel*                  spawnLevel                     ( CPF_Parm )
// struct FString                 actorTypeString                ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 SpawnLocation                  ( CPF_Const | CPF_Parm | CPF_OutParm )

bool ABioWorldInfo::CreateLootBag ( class ULevel* spawnLevel, struct FString actorTypeString, struct FVector* SpawnLocation )
{
	static UFunction* pFnCreateLootBag = NULL;

	if ( ! pFnCreateLootBag )
		pFnCreateLootBag = (UFunction*) UObject::GObjObjects()->Data[ 66007 ];

	ABioWorldInfo_execCreateLootBag_Parms CreateLootBag_Parms;
	CreateLootBag_Parms.spawnLevel = spawnLevel;
	memcpy ( &CreateLootBag_Parms.actorTypeString, &actorTypeString, 0x10 );

	pFnCreateLootBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateLootBag, &CreateLootBag_Parms, NULL );

	pFnCreateLootBag->FunctionFlags |= 0x400;

	if ( SpawnLocation )
		memcpy ( SpawnLocation, &CreateLootBag_Parms.SpawnLocation, 0xC );

	return CreateLootBag_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetLocalPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioPlayerController* ABioWorldInfo::GetLocalPlayerController ( )
{
	static UFunction* pFnGetLocalPlayerController = NULL;

	if ( ! pFnGetLocalPlayerController )
		pFnGetLocalPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 41603 ];

	ABioWorldInfo_execGetLocalPlayerController_Parms GetLocalPlayerController_Parms;

	pFnGetLocalPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalPlayerController, &GetLocalPlayerController_Parms, NULL );

	pFnGetLocalPlayerController->FunctionFlags |= 0x400;

	return GetLocalPlayerController_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.TutorialCompletionCallback
// [0x00120000] 
// Parameters infos:

void ABioWorldInfo::TutorialCompletionCallback ( )
{
	static UFunction* pFnTutorialCompletionCallback = NULL;

	if ( ! pFnTutorialCompletionCallback )
		pFnTutorialCompletionCallback = (UFunction*) UObject::GObjObjects()->Data[ 66006 ];

	ABioWorldInfo_execTutorialCompletionCallback_Parms TutorialCompletionCallback_Parms;

	this->ProcessEvent ( pFnTutorialCompletionCallback, &TutorialCompletionCallback_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.BioVINCE_MapName_PlayerDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::BioVINCE_MapName_PlayerDeath ( )
{
	static UFunction* pFnBioVINCE_MapName_PlayerDeath = NULL;

	if ( ! pFnBioVINCE_MapName_PlayerDeath )
		pFnBioVINCE_MapName_PlayerDeath = (UFunction*) UObject::GObjObjects()->Data[ 66005 ];

	ABioWorldInfo_execBioVINCE_MapName_PlayerDeath_Parms BioVINCE_MapName_PlayerDeath_Parms;

	pFnBioVINCE_MapName_PlayerDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_PlayerDeath, &BioVINCE_MapName_PlayerDeath_Parms, NULL );

	pFnBioVINCE_MapName_PlayerDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.PlayEndGameMusic
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioWorldInfo::PlayEndGameMusic ( )
{
	static UFunction* pFnPlayEndGameMusic = NULL;

	if ( ! pFnPlayEndGameMusic )
		pFnPlayEndGameMusic = (UFunction*) UObject::GObjObjects()->Data[ 66004 ];

	ABioWorldInfo_execPlayEndGameMusic_Parms PlayEndGameMusic_Parms;

	pFnPlayEndGameMusic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayEndGameMusic, &PlayEndGameMusic_Parms, NULL );

	pFnPlayEndGameMusic->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.OnBioMatchStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::OnBioMatchStart ( )
{
	static UFunction* pFnOnBioMatchStart = NULL;

	if ( ! pFnOnBioMatchStart )
		pFnOnBioMatchStart = (UFunction*) UObject::GObjObjects()->Data[ 66003 ];

	ABioWorldInfo_execOnBioMatchStart_Parms OnBioMatchStart_Parms;

	pFnOnBioMatchStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnBioMatchStart, &OnBioMatchStart_Parms, NULL );

	pFnOnBioMatchStart->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetCharacterImporter
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UBioCharacterImporter*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioCharacterImporter* ABioWorldInfo::GetCharacterImporter ( )
{
	static UFunction* pFnGetCharacterImporter = NULL;

	if ( ! pFnGetCharacterImporter )
		pFnGetCharacterImporter = (UFunction*) UObject::GObjObjects()->Data[ 51522 ];

	ABioWorldInfo_execGetCharacterImporter_Parms GetCharacterImporter_Parms;

	pFnGetCharacterImporter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterImporter, &GetCharacterImporter_Parms, NULL );

	pFnGetCharacterImporter->FunctionFlags |= 0x400;

	return GetCharacterImporter_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.UpdateVFXPools
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::UpdateVFXPools ( float fDeltaT )
{
	static UFunction* pFnUpdateVFXPools = NULL;

	if ( ! pFnUpdateVFXPools )
		pFnUpdateVFXPools = (UFunction*) UObject::GObjObjects()->Data[ 66001 ];

	ABioWorldInfo_execUpdateVFXPools_Parms UpdateVFXPools_Parms;
	UpdateVFXPools_Parms.fDeltaT = fDeltaT;

	pFnUpdateVFXPools->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVFXPools, &UpdateVFXPools_Parms, NULL );

	pFnUpdateVFXPools->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.UpdateVFXStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfo::UpdateVFXStats ( float fDeltaT )
{
	static UFunction* pFnUpdateVFXStats = NULL;

	if ( ! pFnUpdateVFXStats )
		pFnUpdateVFXStats = (UFunction*) UObject::GObjObjects()->Data[ 65999 ];

	ABioWorldInfo_execUpdateVFXStats_Parms UpdateVFXStats_Parms;
	UpdateVFXStats_Parms.fDeltaT = fDeltaT;

	pFnUpdateVFXStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVFXStats, &UpdateVFXStats_Parms, NULL );

	pFnUpdateVFXStats->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.CheckResetBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        pBehavior                      ( CPF_Parm )

bool ABioWorldInfo::CheckResetBehavior ( class UBioPawnBehavior* pBehavior )
{
	static UFunction* pFnCheckResetBehavior = NULL;

	if ( ! pFnCheckResetBehavior )
		pFnCheckResetBehavior = (UFunction*) UObject::GObjObjects()->Data[ 65996 ];

	ABioWorldInfo_execCheckResetBehavior_Parms CheckResetBehavior_Parms;
	CheckResetBehavior_Parms.pBehavior = pBehavior;

	pFnCheckResetBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckResetBehavior, &CheckResetBehavior_Parms, NULL );

	pFnCheckResetBehavior->FunctionFlags |= 0x400;

	return CheckResetBehavior_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.ClearResetBehaviors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::ClearResetBehaviors ( )
{
	static UFunction* pFnClearResetBehaviors = NULL;

	if ( ! pFnClearResetBehaviors )
		pFnClearResetBehaviors = (UFunction*) UObject::GObjObjects()->Data[ 65995 ];

	ABioWorldInfo_execClearResetBehaviors_Parms ClearResetBehaviors_Parms;

	pFnClearResetBehaviors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearResetBehaviors, &ClearResetBehaviors_Parms, NULL );

	pFnClearResetBehaviors->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.OverrideVFXPoolSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVFXTemplate*         a_pEffect                      ( CPF_Parm )
// int                            a_nMaxPoolSize                 ( CPF_Parm )
// int                            a_nMinPoolSize                 ( CPF_Parm )

void ABioWorldInfo::OverrideVFXPoolSize ( class UBioVFXTemplate* a_pEffect, int a_nMaxPoolSize, int a_nMinPoolSize )
{
	static UFunction* pFnOverrideVFXPoolSize = NULL;

	if ( ! pFnOverrideVFXPoolSize )
		pFnOverrideVFXPoolSize = (UFunction*) UObject::GObjObjects()->Data[ 65991 ];

	ABioWorldInfo_execOverrideVFXPoolSize_Parms OverrideVFXPoolSize_Parms;
	OverrideVFXPoolSize_Parms.a_pEffect = a_pEffect;
	OverrideVFXPoolSize_Parms.a_nMaxPoolSize = a_nMaxPoolSize;
	OverrideVFXPoolSize_Parms.a_nMinPoolSize = a_nMinPoolSize;

	pFnOverrideVFXPoolSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOverrideVFXPoolSize, &OverrideVFXPoolSize_Parms, NULL );

	pFnOverrideVFXPoolSize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetDefaultVFXPoolSize
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioVFXTemplate*         a_pEffect                      ( CPF_Parm )
// int                            a_rnMaxPoolSize                ( CPF_Parm | CPF_OutParm )
// int                            a_rnMinPoolSize                ( CPF_Parm | CPF_OutParm )

void ABioWorldInfo::GetDefaultVFXPoolSize ( class UBioVFXTemplate* a_pEffect, int* a_rnMaxPoolSize, int* a_rnMinPoolSize )
{
	static UFunction* pFnGetDefaultVFXPoolSize = NULL;

	if ( ! pFnGetDefaultVFXPoolSize )
		pFnGetDefaultVFXPoolSize = (UFunction*) UObject::GObjObjects()->Data[ 65987 ];

	ABioWorldInfo_execGetDefaultVFXPoolSize_Parms GetDefaultVFXPoolSize_Parms;
	GetDefaultVFXPoolSize_Parms.a_pEffect = a_pEffect;

	pFnGetDefaultVFXPoolSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultVFXPoolSize, &GetDefaultVFXPoolSize_Parms, NULL );

	pFnGetDefaultVFXPoolSize->FunctionFlags |= 0x400;

	if ( a_rnMaxPoolSize )
		*a_rnMaxPoolSize = GetDefaultVFXPoolSize_Parms.a_rnMaxPoolSize;

	if ( a_rnMinPoolSize )
		*a_rnMinPoolSize = GetDefaultVFXPoolSize_Parms.a_rnMinPoolSize;
};

// Function SFXGame.BioWorldInfo.GetVFXPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVisualEffectPool*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioVFXTemplate*         pEffect                        ( CPF_Parm )

class UBioVisualEffectPool* ABioWorldInfo::GetVFXPool ( class UBioVFXTemplate* pEffect )
{
	static UFunction* pFnGetVFXPool = NULL;

	if ( ! pFnGetVFXPool )
		pFnGetVFXPool = (UFunction*) UObject::GObjObjects()->Data[ 65984 ];

	ABioWorldInfo_execGetVFXPool_Parms GetVFXPool_Parms;
	GetVFXPool_Parms.pEffect = pEffect;

	pFnGetVFXPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVFXPool, &GetVFXPool_Parms, NULL );

	pFnGetVFXPool->FunctionFlags |= 0x400;

	return GetVFXPool_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.OnGameLoaded
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioWorldInfo::OnGameLoaded ( )
{
	static UFunction* pFnOnGameLoaded = NULL;

	if ( ! pFnOnGameLoaded )
		pFnOnGameLoaded = (UFunction*) UObject::GObjObjects()->Data[ 65983 ];

	ABioWorldInfo_execOnGameLoaded_Parms OnGameLoaded_Parms;

	pFnOnGameLoaded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGameLoaded, &OnGameLoaded_Parms, NULL );

	pFnOnGameLoaded->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.InitializeForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioWorldInfo::InitializeForPlay ( )
{
	static UFunction* pFnInitializeForPlay = NULL;

	if ( ! pFnInitializeForPlay )
		pFnInitializeForPlay = (UFunction*) UObject::GObjObjects()->Data[ 65982 ];

	ABioWorldInfo_execInitializeForPlay_Parms InitializeForPlay_Parms;

	pFnInitializeForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForPlay, &InitializeForPlay_Parms, NULL );

	pFnInitializeForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetDetailedVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ABioWorldInfo::GetDetailedVersionString ( )
{
	static UFunction* pFnGetDetailedVersionString = NULL;

	if ( ! pFnGetDetailedVersionString )
		pFnGetDetailedVersionString = (UFunction*) UObject::GObjObjects()->Data[ 51361 ];

	ABioWorldInfo_execGetDetailedVersionString_Parms GetDetailedVersionString_Parms;

	pFnGetDetailedVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDetailedVersionString, &GetDetailedVersionString_Parms, NULL );

	pFnGetDetailedVersionString->FunctionFlags |= 0x400;

	return GetDetailedVersionString_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetEpicVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ABioWorldInfo::GetEpicVersionString ( )
{
	static UFunction* pFnGetEpicVersionString = NULL;

	if ( ! pFnGetEpicVersionString )
		pFnGetEpicVersionString = (UFunction*) UObject::GObjObjects()->Data[ 65980 ];

	ABioWorldInfo_execGetEpicVersionString_Parms GetEpicVersionString_Parms;

	pFnGetEpicVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEpicVersionString, &GetEpicVersionString_Parms, NULL );

	pFnGetEpicVersionString->FunctionFlags |= 0x400;

	return GetEpicVersionString_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ABioWorldInfo::GetVersionString ( )
{
	static UFunction* pFnGetVersionString = NULL;

	if ( ! pFnGetVersionString )
		pFnGetVersionString = (UFunction*) UObject::GObjObjects()->Data[ 65978 ];

	ABioWorldInfo_execGetVersionString_Parms GetVersionString_Parms;

	pFnGetVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVersionString, &GetVersionString_Parms, NULL );

	pFnGetVersionString->FunctionFlags |= 0x400;

	return GetVersionString_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.MoveToArea
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   sAreaName                      ( CPF_Parm )
// struct FName                   sNextAreaStartPoint            ( CPF_Parm )

void ABioWorldInfo::MoveToArea ( struct FName sAreaName, struct FName sNextAreaStartPoint )
{
	static UFunction* pFnMoveToArea = NULL;

	if ( ! pFnMoveToArea )
		pFnMoveToArea = (UFunction*) UObject::GObjObjects()->Data[ 48667 ];

	ABioWorldInfo_execMoveToArea_Parms MoveToArea_Parms;
	memcpy ( &MoveToArea_Parms.sAreaName, &sAreaName, 0x8 );
	memcpy ( &MoveToArea_Parms.sNextAreaStartPoint, &sNextAreaStartPoint, 0x8 );

	pFnMoveToArea->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMoveToArea, &MoveToArea_Parms, NULL );

	pFnMoveToArea->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.AllBioActors
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   MatchTag                       ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  Actor                          ( CPF_Parm | CPF_OutParm )

void ABioWorldInfo::AllBioActors ( struct FName MatchTag, class AActor** Actor )
{
	static UFunction* pFnAllBioActors = NULL;

	if ( ! pFnAllBioActors )
		pFnAllBioActors = (UFunction*) UObject::GObjObjects()->Data[ 51768 ];

	ABioWorldInfo_execAllBioActors_Parms AllBioActors_Parms;
	memcpy ( &AllBioActors_Parms.MatchTag, &MatchTag, 0x8 );

	pFnAllBioActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllBioActors, &AllBioActors_Parms, NULL );

	pFnAllBioActors->FunctionFlags |= 0x400;

	if ( Actor )
		*Actor = AllBioActors_Parms.Actor;
};

// Function SFXGame.BioWorldInfo.GetLocalBoolVariable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eObjectType                    ( CPF_Parm )
// struct FName                   GetFunctionName                ( CPF_Parm )
// struct FName                   sTag                           ( CPF_OptionalParm | CPF_Parm )

bool ABioWorldInfo::GetLocalBoolVariable ( unsigned char eObjectType, struct FName GetFunctionName, struct FName sTag )
{
	static UFunction* pFnGetLocalBoolVariable = NULL;

	if ( ! pFnGetLocalBoolVariable )
		pFnGetLocalBoolVariable = (UFunction*) UObject::GObjObjects()->Data[ 65969 ];

	ABioWorldInfo_execGetLocalBoolVariable_Parms GetLocalBoolVariable_Parms;
	GetLocalBoolVariable_Parms.eObjectType = eObjectType;
	memcpy ( &GetLocalBoolVariable_Parms.GetFunctionName, &GetFunctionName, 0x8 );
	memcpy ( &GetLocalBoolVariable_Parms.sTag, &sTag, 0x8 );

	pFnGetLocalBoolVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalBoolVariable, &GetLocalBoolVariable_Parms, NULL );

	pFnGetLocalBoolVariable->FunctionFlags |= 0x400;

	return GetLocalBoolVariable_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetLocalFloatVariable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eObjectType                    ( CPF_Parm )
// struct FName                   GetFunctionName                ( CPF_Parm )
// struct FName                   sTag                           ( CPF_OptionalParm | CPF_Parm )

float ABioWorldInfo::GetLocalFloatVariable ( unsigned char eObjectType, struct FName GetFunctionName, struct FName sTag )
{
	static UFunction* pFnGetLocalFloatVariable = NULL;

	if ( ! pFnGetLocalFloatVariable )
		pFnGetLocalFloatVariable = (UFunction*) UObject::GObjObjects()->Data[ 65964 ];

	ABioWorldInfo_execGetLocalFloatVariable_Parms GetLocalFloatVariable_Parms;
	GetLocalFloatVariable_Parms.eObjectType = eObjectType;
	memcpy ( &GetLocalFloatVariable_Parms.GetFunctionName, &GetFunctionName, 0x8 );
	memcpy ( &GetLocalFloatVariable_Parms.sTag, &sTag, 0x8 );

	pFnGetLocalFloatVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalFloatVariable, &GetLocalFloatVariable_Parms, NULL );

	pFnGetLocalFloatVariable->FunctionFlags |= 0x400;

	return GetLocalFloatVariable_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetLocalIntegerVariable
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eObjectType                    ( CPF_Parm )
// struct FName                   GetFunctionName                ( CPF_Parm )
// struct FName                   sTag                           ( CPF_OptionalParm | CPF_Parm )

int ABioWorldInfo::GetLocalIntegerVariable ( unsigned char eObjectType, struct FName GetFunctionName, struct FName sTag )
{
	static UFunction* pFnGetLocalIntegerVariable = NULL;

	if ( ! pFnGetLocalIntegerVariable )
		pFnGetLocalIntegerVariable = (UFunction*) UObject::GObjObjects()->Data[ 65959 ];

	ABioWorldInfo_execGetLocalIntegerVariable_Parms GetLocalIntegerVariable_Parms;
	GetLocalIntegerVariable_Parms.eObjectType = eObjectType;
	memcpy ( &GetLocalIntegerVariable_Parms.GetFunctionName, &GetFunctionName, 0x8 );
	memcpy ( &GetLocalIntegerVariable_Parms.sTag, &sTag, 0x8 );

	pFnGetLocalIntegerVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalIntegerVariable, &GetLocalIntegerVariable_Parms, NULL );

	pFnGetLocalIntegerVariable->FunctionFlags |= 0x400;

	return GetLocalIntegerVariable_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.ExecuteConsequence
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nConsequence                   ( CPF_Parm )
// int                            nParam                         ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::ExecuteConsequence ( int nConsequence, int nParam )
{
	static UFunction* pFnExecuteConsequence = NULL;

	if ( ! pFnExecuteConsequence )
		pFnExecuteConsequence = (UFunction*) UObject::GObjObjects()->Data[ 65956 ];

	ABioWorldInfo_execExecuteConsequence_Parms ExecuteConsequence_Parms;
	ExecuteConsequence_Parms.nConsequence = nConsequence;
	ExecuteConsequence_Parms.nParam = nParam;

	pFnExecuteConsequence->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExecuteConsequence, &ExecuteConsequence_Parms, NULL );

	pFnExecuteConsequence->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.ExecuteStateTransition
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nTransition                    ( CPF_Parm )
// int                            nParam                         ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::ExecuteStateTransition ( int nTransition, int nParam )
{
	static UFunction* pFnExecuteStateTransition = NULL;

	if ( ! pFnExecuteStateTransition )
		pFnExecuteStateTransition = (UFunction*) UObject::GObjObjects()->Data[ 65953 ];

	ABioWorldInfo_execExecuteStateTransition_Parms ExecuteStateTransition_Parms;
	ExecuteStateTransition_Parms.nTransition = nTransition;
	ExecuteStateTransition_Parms.nParam = nParam;

	pFnExecuteStateTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExecuteStateTransition, &ExecuteStateTransition_Parms, NULL );

	pFnExecuteStateTransition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.CheckConditional
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nConditional                   ( CPF_Parm )
// int                            nParam                         ( CPF_OptionalParm | CPF_Parm )

bool ABioWorldInfo::CheckConditional ( int nConditional, int nParam )
{
	static UFunction* pFnCheckConditional = NULL;

	if ( ! pFnCheckConditional )
		pFnCheckConditional = (UFunction*) UObject::GObjObjects()->Data[ 51534 ];

	ABioWorldInfo_execCheckConditional_Parms CheckConditional_Parms;
	CheckConditional_Parms.nConditional = nConditional;
	CheckConditional_Parms.nParam = nParam;

	pFnCheckConditional->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckConditional, &CheckConditional_Parms, NULL );

	pFnCheckConditional->FunctionFlags |= 0x400;

	return CheckConditional_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.CauseEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )

void ABioWorldInfo::eventCauseEvent ( struct FName EventName )
{
	static UFunction* pFnCauseEvent = NULL;

	if ( ! pFnCauseEvent )
		pFnCauseEvent = (UFunction*) UObject::GObjObjects()->Data[ 65949 ];

	ABioWorldInfo_eventCauseEvent_Parms CauseEvent_Parms;
	memcpy ( &CauseEvent_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnCauseEvent, &CauseEvent_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.TutorialDismissed
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAButtonPressed                ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void ABioWorldInfo::TutorialDismissed ( unsigned long bAButtonPressed, int nContext )
{
	static UFunction* pFnTutorialDismissed = NULL;

	if ( ! pFnTutorialDismissed )
		pFnTutorialDismissed = (UFunction*) UObject::GObjObjects()->Data[ 65943 ];

	ABioWorldInfo_execTutorialDismissed_Parms TutorialDismissed_Parms;
	TutorialDismissed_Parms.bAButtonPressed = bAButtonPressed;
	TutorialDismissed_Parms.nContext = nContext;

	this->ProcessEvent ( pFnTutorialDismissed, &TutorialDismissed_Parms, NULL );
};

// Function SFXGame.BioWorldInfo.GetGuiInputPermission
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nEvent                         ( CPF_Parm )

bool ABioWorldInfo::GetGuiInputPermission ( unsigned char nEvent )
{
	static UFunction* pFnGetGuiInputPermission = NULL;

	if ( ! pFnGetGuiInputPermission )
		pFnGetGuiInputPermission = (UFunction*) UObject::GObjObjects()->Data[ 61233 ];

	ABioWorldInfo_execGetGuiInputPermission_Parms GetGuiInputPermission_Parms;
	GetGuiInputPermission_Parms.nEvent = nEvent;

	pFnGetGuiInputPermission->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuiInputPermission, &GetGuiInputPermission_Parms, NULL );

	pFnGetGuiInputPermission->FunctionFlags |= 0x400;

	return GetGuiInputPermission_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.CancelTutorial
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bFadeOut                       ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmTutorial                     ( CPF_OptionalParm | CPF_Parm )

void ABioWorldInfo::CancelTutorial ( unsigned long bFadeOut, struct FName nmTutorial )
{
	static UFunction* pFnCancelTutorial = NULL;

	if ( ! pFnCancelTutorial )
		pFnCancelTutorial = (UFunction*) UObject::GObjObjects()->Data[ 59301 ];

	ABioWorldInfo_execCancelTutorial_Parms CancelTutorial_Parms;
	CancelTutorial_Parms.bFadeOut = bFadeOut;
	memcpy ( &CancelTutorial_Parms.nmTutorial, &nmTutorial, 0x8 );

	pFnCancelTutorial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTutorial, &CancelTutorial_Parms, NULL );

	pFnCancelTutorial->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.ClearTutorialsViewed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioWorldInfo::ClearTutorialsViewed ( )
{
	static UFunction* pFnClearTutorialsViewed = NULL;

	if ( ! pFnClearTutorialsViewed )
		pFnClearTutorialsViewed = (UFunction*) UObject::GObjObjects()->Data[ 65939 ];

	ABioWorldInfo_execClearTutorialsViewed_Parms ClearTutorialsViewed_Parms;

	pFnClearTutorialsViewed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearTutorialsViewed, &ClearTutorialsViewed_Parms, NULL );

	pFnClearTutorialsViewed->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.IsTutorialRunning
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTutorial                     ( CPF_OptionalParm | CPF_Parm )

bool ABioWorldInfo::IsTutorialRunning ( struct FName nmTutorial )
{
	static UFunction* pFnIsTutorialRunning = NULL;

	if ( ! pFnIsTutorialRunning )
		pFnIsTutorialRunning = (UFunction*) UObject::GObjObjects()->Data[ 60428 ];

	ABioWorldInfo_execIsTutorialRunning_Parms IsTutorialRunning_Parms;
	memcpy ( &IsTutorialRunning_Parms.nmTutorial, &nmTutorial, 0x8 );

	pFnIsTutorialRunning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTutorialRunning, &IsTutorialRunning_Parms, NULL );

	pFnIsTutorialRunning->FunctionFlags |= 0x400;

	return IsTutorialRunning_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetTutorialViewed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTutorial                     ( CPF_Parm )

bool ABioWorldInfo::GetTutorialViewed ( struct FName nmTutorial )
{
	static UFunction* pFnGetTutorialViewed = NULL;

	if ( ! pFnGetTutorialViewed )
		pFnGetTutorialViewed = (UFunction*) UObject::GObjObjects()->Data[ 59899 ];

	ABioWorldInfo_execGetTutorialViewed_Parms GetTutorialViewed_Parms;
	memcpy ( &GetTutorialViewed_Parms.nmTutorial, &nmTutorial, 0x8 );

	pFnGetTutorialViewed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTutorialViewed, &GetTutorialViewed_Parms, NULL );

	pFnGetTutorialViewed->FunctionFlags |= 0x400;

	return GetTutorialViewed_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.SetTutorialViewed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   nmTutorial                     ( CPF_Parm )

void ABioWorldInfo::SetTutorialViewed ( struct FName nmTutorial )
{
	static UFunction* pFnSetTutorialViewed = NULL;

	if ( ! pFnSetTutorialViewed )
		pFnSetTutorialViewed = (UFunction*) UObject::GObjObjects()->Data[ 60376 ];

	ABioWorldInfo_execSetTutorialViewed_Parms SetTutorialViewed_Parms;
	memcpy ( &SetTutorialViewed_Parms.nmTutorial, &nmTutorial, 0x8 );

	pFnSetTutorialViewed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTutorialViewed, &SetTutorialViewed_Parms, NULL );

	pFnSetTutorialViewed->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.ShowTutorialMessageBox
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 pCallbackObject                ( CPF_Parm )
// struct FName                   nmCallbackFunction             ( CPF_Parm )
// int                            srTutorial                     ( CPF_Parm )

void ABioWorldInfo::ShowTutorialMessageBox ( class UObject* pCallbackObject, struct FName nmCallbackFunction, int srTutorial )
{
	static UFunction* pFnShowTutorialMessageBox = NULL;

	if ( ! pFnShowTutorialMessageBox )
		pFnShowTutorialMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 65932 ];

	ABioWorldInfo_execShowTutorialMessageBox_Parms ShowTutorialMessageBox_Parms;
	ShowTutorialMessageBox_Parms.pCallbackObject = pCallbackObject;
	memcpy ( &ShowTutorialMessageBox_Parms.nmCallbackFunction, &nmCallbackFunction, 0x8 );
	ShowTutorialMessageBox_Parms.srTutorial = srTutorial;

	pFnShowTutorialMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowTutorialMessageBox, &ShowTutorialMessageBox_Parms, NULL );

	pFnShowTutorialMessageBox->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.ShowTutorial
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTutorial                     ( CPF_Parm )
// unsigned long                  bSetViewed                     ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 oCallbackObject                ( CPF_OptionalParm | CPF_Parm )
// struct FName                   oCallbackFunction              ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  i_bIgnoreDesignerSuppression   ( CPF_OptionalParm | CPF_Parm )

bool ABioWorldInfo::ShowTutorial ( struct FName nmTutorial, unsigned long bSetViewed, class UObject* oCallbackObject, struct FName oCallbackFunction, unsigned long i_bIgnoreDesignerSuppression )
{
	static UFunction* pFnShowTutorial = NULL;

	if ( ! pFnShowTutorial )
		pFnShowTutorial = (UFunction*) UObject::GObjObjects()->Data[ 60421 ];

	ABioWorldInfo_execShowTutorial_Parms ShowTutorial_Parms;
	memcpy ( &ShowTutorial_Parms.nmTutorial, &nmTutorial, 0x8 );
	ShowTutorial_Parms.bSetViewed = bSetViewed;
	ShowTutorial_Parms.oCallbackObject = oCallbackObject;
	memcpy ( &ShowTutorial_Parms.oCallbackFunction, &oCallbackFunction, 0x8 );
	ShowTutorial_Parms.i_bIgnoreDesignerSuppression = i_bIgnoreDesignerSuppression;

	pFnShowTutorial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowTutorial, &ShowTutorial_Parms, NULL );

	pFnShowTutorial->FunctionFlags |= 0x400;

	return ShowTutorial_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.ShowTutorialOverride
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            srTutorialId                   ( CPF_Parm )

void ABioWorldInfo::ShowTutorialOverride ( int srTutorialId )
{
	static UFunction* pFnShowTutorialOverride = NULL;

	if ( ! pFnShowTutorialOverride )
		pFnShowTutorialOverride = (UFunction*) UObject::GObjObjects()->Data[ 60547 ];

	ABioWorldInfo_execShowTutorialOverride_Parms ShowTutorialOverride_Parms;
	ShowTutorialOverride_Parms.srTutorialId = srTutorialId;

	pFnShowTutorialOverride->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowTutorialOverride, &ShowTutorialOverride_Parms, NULL );

	pFnShowTutorialOverride->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.SetHasShownPRCMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  i_bValue                       ( CPF_Parm )

void ABioWorldInfo::SetHasShownPRCMessage ( unsigned long i_bValue )
{
	static UFunction* pFnSetHasShownPRCMessage = NULL;

	if ( ! pFnSetHasShownPRCMessage )
		pFnSetHasShownPRCMessage = (UFunction*) UObject::GObjObjects()->Data[ 65924 ];

	ABioWorldInfo_execSetHasShownPRCMessage_Parms SetHasShownPRCMessage_Parms;
	SetHasShownPRCMessage_Parms.i_bValue = i_bValue;

	pFnSetHasShownPRCMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHasShownPRCMessage, &SetHasShownPRCMessage_Parms, NULL );

	pFnSetHasShownPRCMessage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.GetHasShownPRCMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::GetHasShownPRCMessage ( )
{
	static UFunction* pFnGetHasShownPRCMessage = NULL;

	if ( ! pFnGetHasShownPRCMessage )
		pFnGetHasShownPRCMessage = (UFunction*) UObject::GObjObjects()->Data[ 62558 ];

	ABioWorldInfo_execGetHasShownPRCMessage_Parms GetHasShownPRCMessage_Parms;

	pFnGetHasShownPRCMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHasShownPRCMessage, &GetHasShownPRCMessage_Parms, NULL );

	pFnGetHasShownPRCMessage->FunctionFlags |= 0x400;

	return GetHasShownPRCMessage_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetChallengeLevel
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            challengeLevel                 ( CPF_Parm | CPF_OutParm )

bool ABioWorldInfo::GetChallengeLevel ( int* challengeLevel )
{
	static UFunction* pFnGetChallengeLevel = NULL;

	if ( ! pFnGetChallengeLevel )
		pFnGetChallengeLevel = (UFunction*) UObject::GObjObjects()->Data[ 41569 ];

	ABioWorldInfo_execGetChallengeLevel_Parms GetChallengeLevel_Parms;

	pFnGetChallengeLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChallengeLevel, &GetChallengeLevel_Parms, NULL );

	pFnGetChallengeLevel->FunctionFlags |= 0x400;

	if ( challengeLevel )
		*challengeLevel = GetChallengeLevel_Parms.challengeLevel;

	return GetChallengeLevel_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.GetBuybackItemPriceAtIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

float ABioWorldInfo::GetBuybackItemPriceAtIndex ( int Index )
{
	static UFunction* pFnGetBuybackItemPriceAtIndex = NULL;

	if ( ! pFnGetBuybackItemPriceAtIndex )
		pFnGetBuybackItemPriceAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 65920 ];

	ABioWorldInfo_execGetBuybackItemPriceAtIndex_Parms GetBuybackItemPriceAtIndex_Parms;
	GetBuybackItemPriceAtIndex_Parms.Index = Index;

	pFnGetBuybackItemPriceAtIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBuybackItemPriceAtIndex, &GetBuybackItemPriceAtIndex_Parms, NULL );

	pFnGetBuybackItemPriceAtIndex->FunctionFlags |= 0x400;

	return GetBuybackItemPriceAtIndex_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.RemoveBuybackItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class UBioItem* ABioWorldInfo::RemoveBuybackItem ( int Index )
{
	static UFunction* pFnRemoveBuybackItem = NULL;

	if ( ! pFnRemoveBuybackItem )
		pFnRemoveBuybackItem = (UFunction*) UObject::GObjObjects()->Data[ 65917 ];

	ABioWorldInfo_execRemoveBuybackItem_Parms RemoveBuybackItem_Parms;
	RemoveBuybackItem_Parms.Index = Index;

	pFnRemoveBuybackItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveBuybackItem, &RemoveBuybackItem_Parms, NULL );

	pFnRemoveBuybackItem->FunctionFlags |= 0x400;

	return RemoveBuybackItem_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfo.AppendBuybackItemsToInventory
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioInventory*           Inventory                      ( CPF_Parm | CPF_OutParm )

void ABioWorldInfo::AppendBuybackItemsToInventory ( class UBioInventory** Inventory )
{
	static UFunction* pFnAppendBuybackItemsToInventory = NULL;

	if ( ! pFnAppendBuybackItemsToInventory )
		pFnAppendBuybackItemsToInventory = (UFunction*) UObject::GObjObjects()->Data[ 65915 ];

	ABioWorldInfo_execAppendBuybackItemsToInventory_Parms AppendBuybackItemsToInventory_Parms;

	pFnAppendBuybackItemsToInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppendBuybackItemsToInventory, &AppendBuybackItemsToInventory_Parms, NULL );

	pFnAppendBuybackItemsToInventory->FunctionFlags |= 0x400;

	if ( Inventory )
		*Inventory = AppendBuybackItemsToInventory_Parms.Inventory;
};

// Function SFXGame.BioWorldInfo.AddBuybackItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                Item                           ( CPF_Parm )

void ABioWorldInfo::AddBuybackItem ( class UBioItem* Item )
{
	static UFunction* pFnAddBuybackItem = NULL;

	if ( ! pFnAddBuybackItem )
		pFnAddBuybackItem = (UFunction*) UObject::GObjObjects()->Data[ 65913 ];

	ABioWorldInfo_execAddBuybackItem_Parms AddBuybackItem_Parms;
	AddBuybackItem_Parms.Item = Item;

	pFnAddBuybackItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBuybackItem, &AddBuybackItem_Parms, NULL );

	pFnAddBuybackItem->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.SetDebugSave
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nSet                           ( CPF_Parm )

void ABioWorldInfo::SetDebugSave ( int nSet )
{
	static UFunction* pFnSetDebugSave = NULL;

	if ( ! pFnSetDebugSave )
		pFnSetDebugSave = (UFunction*) UObject::GObjObjects()->Data[ 65911 ];

	ABioWorldInfo_execSetDebugSave_Parms SetDebugSave_Parms;
	SetDebugSave_Parms.nSet = nSet;

	pFnSetDebugSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDebugSave, &SetDebugSave_Parms, NULL );

	pFnSetDebugSave->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.BioDeleteGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )

void ABioWorldInfo::BioDeleteGame ( int nSaveGameSlot )
{
	static UFunction* pFnBioDeleteGame = NULL;

	if ( ! pFnBioDeleteGame )
		pFnBioDeleteGame = (UFunction*) UObject::GObjObjects()->Data[ 65909 ];

	ABioWorldInfo_execBioDeleteGame_Parms BioDeleteGame_Parms;
	BioDeleteGame_Parms.nSaveGameSlot = nSaveGameSlot;

	pFnBioDeleteGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioDeleteGame, &BioDeleteGame_Parms, NULL );

	pFnBioDeleteGame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.BioLoadGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )

void ABioWorldInfo::BioLoadGame ( int nSaveGameSlot )
{
	static UFunction* pFnBioLoadGame = NULL;

	if ( ! pFnBioLoadGame )
		pFnBioLoadGame = (UFunction*) UObject::GObjObjects()->Data[ 65907 ];

	ABioWorldInfo_execBioLoadGame_Parms BioLoadGame_Parms;
	BioLoadGame_Parms.nSaveGameSlot = nSaveGameSlot;

	pFnBioLoadGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioLoadGame, &BioLoadGame_Parms, NULL );

	pFnBioLoadGame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.BioSaveGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nSaveGameSlot                  ( CPF_Parm )
// struct FName                   sArea                          ( CPF_Parm )
// unsigned long                  bStartFromCurrentPosition      ( CPF_Parm )
// struct FName                   sNextAreaStartPoint            ( CPF_Parm )

void ABioWorldInfo::BioSaveGame ( int nSaveGameSlot, struct FName sArea, unsigned long bStartFromCurrentPosition, struct FName sNextAreaStartPoint )
{
	static UFunction* pFnBioSaveGame = NULL;

	if ( ! pFnBioSaveGame )
		pFnBioSaveGame = (UFunction*) UObject::GObjObjects()->Data[ 65902 ];

	ABioWorldInfo_execBioSaveGame_Parms BioSaveGame_Parms;
	BioSaveGame_Parms.nSaveGameSlot = nSaveGameSlot;
	memcpy ( &BioSaveGame_Parms.sArea, &sArea, 0x8 );
	BioSaveGame_Parms.bStartFromCurrentPosition = bStartFromCurrentPosition;
	memcpy ( &BioSaveGame_Parms.sNextAreaStartPoint, &sNextAreaStartPoint, 0x8 );

	pFnBioSaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioSaveGame, &BioSaveGame_Parms, NULL );

	pFnBioSaveGame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.OnNewGameStartRequest
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioWorldInfo::OnNewGameStartRequest ( )
{
	static UFunction* pFnOnNewGameStartRequest = NULL;

	if ( ! pFnOnNewGameStartRequest )
		pFnOnNewGameStartRequest = (UFunction*) UObject::GObjObjects()->Data[ 65901 ];

	ABioWorldInfo_execOnNewGameStartRequest_Parms OnNewGameStartRequest_Parms;

	pFnOnNewGameStartRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnNewGameStartRequest, &OnNewGameStartRequest_Parms, NULL );

	pFnOnNewGameStartRequest->FunctionFlags |= 0x400;
};

// Function SFXGame.BioWorldInfo.TriggerCinematicSkippedEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWorldInfo::TriggerCinematicSkippedEvent ( )
{
	static UFunction* pFnTriggerCinematicSkippedEvent = NULL;

	if ( ! pFnTriggerCinematicSkippedEvent )
		pFnTriggerCinematicSkippedEvent = (UFunction*) UObject::GObjObjects()->Data[ 65899 ];

	ABioWorldInfo_execTriggerCinematicSkippedEvent_Parms TriggerCinematicSkippedEvent_Parms;

	pFnTriggerCinematicSkippedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerCinematicSkippedEvent, &TriggerCinematicSkippedEvent_Parms, NULL );

	pFnTriggerCinematicSkippedEvent->FunctionFlags |= 0x400;

	return TriggerCinematicSkippedEvent_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.SpawnGameOverGUI
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioSPGame::SpawnGameOverGUI ( )
{
	static UFunction* pFnSpawnGameOverGUI = NULL;

	if ( ! pFnSpawnGameOverGUI )
		pFnSpawnGameOverGUI = (UFunction*) UObject::GObjObjects()->Data[ 64745 ];

	ABioSPGame_execSpawnGameOverGUI_Parms SpawnGameOverGUI_Parms;

	this->ProcessEvent ( pFnSpawnGameOverGUI, &SpawnGameOverGUI_Parms, NULL );
};

// Function SFXGame.BioSPGame.AdjustHeightOfPawnSpawnedAtNavigationPoint
// [0x00020002] 
// Parameters infos:
// class APawn*                   Pawn                           ( CPF_Parm )
// class ANavigationPoint*        SpawnPoint                     ( CPF_Parm )

void ABioSPGame::AdjustHeightOfPawnSpawnedAtNavigationPoint ( class APawn* Pawn, class ANavigationPoint* SpawnPoint )
{
	static UFunction* pFnAdjustHeightOfPawnSpawnedAtNavigationPoint = NULL;

	if ( ! pFnAdjustHeightOfPawnSpawnedAtNavigationPoint )
		pFnAdjustHeightOfPawnSpawnedAtNavigationPoint = (UFunction*) UObject::GObjObjects()->Data[ 64741 ];

	ABioSPGame_execAdjustHeightOfPawnSpawnedAtNavigationPoint_Parms AdjustHeightOfPawnSpawnedAtNavigationPoint_Parms;
	AdjustHeightOfPawnSpawnedAtNavigationPoint_Parms.Pawn = Pawn;
	AdjustHeightOfPawnSpawnedAtNavigationPoint_Parms.SpawnPoint = SpawnPoint;

	this->ProcessEvent ( pFnAdjustHeightOfPawnSpawnedAtNavigationPoint, &AdjustHeightOfPawnSpawnedAtNavigationPoint_Parms, NULL );
};

// Function SFXGame.BioSPGame.SpawnPawn
// [0x00020002] 
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 TheActorType                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )
// unsigned long                  bIsPlayer                      ( CPF_Parm )

class ABioPawn* ABioSPGame::SpawnPawn ( struct FString TheActorType, struct FVector SpawnLocation, struct FRotator SpawnRotation, unsigned long bIsPlayer )
{
	static UFunction* pFnSpawnPawn = NULL;

	if ( ! pFnSpawnPawn )
		pFnSpawnPawn = (UFunction*) UObject::GObjObjects()->Data[ 64728 ];

	ABioSPGame_execSpawnPawn_Parms SpawnPawn_Parms;
	memcpy ( &SpawnPawn_Parms.TheActorType, &TheActorType, 0x10 );
	memcpy ( &SpawnPawn_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &SpawnPawn_Parms.SpawnRotation, &SpawnRotation, 0xC );
	SpawnPawn_Parms.bIsPlayer = bIsPlayer;

	this->ProcessEvent ( pFnSpawnPawn, &SpawnPawn_Parms, NULL );

	return SpawnPawn_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.SpawnHenchman
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   pawnTag                        ( CPF_Parm )
// class AActor*                  Player                         ( CPF_Parm )
// float                          backOffset                     ( CPF_Parm )
// float                          sideOffset                     ( CPF_Parm )
// unsigned long                  spawnLeft                      ( CPF_Parm )

class ABioPawn* ABioSPGame::eventSpawnHenchman ( struct FName pawnTag, class AActor* Player, float backOffset, float sideOffset, unsigned long spawnLeft )
{
	static UFunction* pFnSpawnHenchman = NULL;

	if ( ! pFnSpawnHenchman )
		pFnSpawnHenchman = (UFunction*) UObject::GObjObjects()->Data[ 64712 ];

	ABioSPGame_eventSpawnHenchman_Parms SpawnHenchman_Parms;
	memcpy ( &SpawnHenchman_Parms.pawnTag, &pawnTag, 0x8 );
	SpawnHenchman_Parms.Player = Player;
	SpawnHenchman_Parms.backOffset = backOffset;
	SpawnHenchman_Parms.sideOffset = sideOffset;
	SpawnHenchman_Parms.spawnLeft = spawnLeft;

	this->ProcessEvent ( pFnSpawnHenchman, &SpawnHenchman_Parms, NULL );

	return SpawnHenchman_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.SpawnPlayer
// [0x00020002] 
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    PlayerController               ( CPF_Parm )
// class ANavigationPoint*        playerSpawnPoint               ( CPF_Parm )

class ABioPawn* ABioSPGame::SpawnPlayer ( class ABioPlayerController* PlayerController, class ANavigationPoint* playerSpawnPoint )
{
	static UFunction* pFnSpawnPlayer = NULL;

	if ( ! pFnSpawnPlayer )
		pFnSpawnPlayer = (UFunction*) UObject::GObjObjects()->Data[ 64700 ];

	ABioSPGame_execSpawnPlayer_Parms SpawnPlayer_Parms;
	SpawnPlayer_Parms.PlayerController = PlayerController;
	SpawnPlayer_Parms.playerSpawnPoint = playerSpawnPoint;

	this->ProcessEvent ( pFnSpawnPlayer, &SpawnPlayer_Parms, NULL );

	return SpawnPlayer_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.SpawnPlayerSquadMembers
// [0x00020002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    PlayerController               ( CPF_Parm )
// class ANavigationPoint*        SpawnPoint                     ( CPF_Parm )

class APawn* ABioSPGame::SpawnPlayerSquadMembers ( class ABioPlayerController* PlayerController, class ANavigationPoint* SpawnPoint )
{
	static UFunction* pFnSpawnPlayerSquadMembers = NULL;

	if ( ! pFnSpawnPlayerSquadMembers )
		pFnSpawnPlayerSquadMembers = (UFunction*) UObject::GObjObjects()->Data[ 64689 ];

	ABioSPGame_execSpawnPlayerSquadMembers_Parms SpawnPlayerSquadMembers_Parms;
	SpawnPlayerSquadMembers_Parms.PlayerController = PlayerController;
	SpawnPlayerSquadMembers_Parms.SpawnPoint = SpawnPoint;

	this->ProcessEvent ( pFnSpawnPlayerSquadMembers, &SpawnPlayerSquadMembers_Parms, NULL );

	return SpawnPlayerSquadMembers_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.LoadPackage
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 PackageName                    ( CPF_Parm | CPF_NeedCtorLink )

void ABioSPGame::LoadPackage ( struct FString PackageName )
{
	static UFunction* pFnLoadPackage = NULL;

	if ( ! pFnLoadPackage )
		pFnLoadPackage = (UFunction*) UObject::GObjObjects()->Data[ 58426 ];

	ABioSPGame_execLoadPackage_Parms LoadPackage_Parms;
	memcpy ( &LoadPackage_Parms.PackageName, &PackageName, 0x10 );

	pFnLoadPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPackage, &LoadPackage_Parms, NULL );

	pFnLoadPackage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSPGame.SpawnDefaultPawnFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewPlayer                      ( CPF_Parm )
// class ANavigationPoint*        SpawnPoint                     ( CPF_Parm )

class APawn* ABioSPGame::SpawnDefaultPawnFor ( class AController* NewPlayer, class ANavigationPoint* SpawnPoint )
{
	static UFunction* pFnSpawnDefaultPawnFor = NULL;

	if ( ! pFnSpawnDefaultPawnFor )
		pFnSpawnDefaultPawnFor = (UFunction*) UObject::GObjObjects()->Data[ 64682 ];

	ABioSPGame_execSpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;
	SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
	SpawnDefaultPawnFor_Parms.SpawnPoint = SpawnPoint;

	this->ProcessEvent ( pFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Parms, NULL );

	return SpawnDefaultPawnFor_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.SetPlayerDefaults
// [0x00020002] 
// Parameters infos:
// class APawn*                   PlayerPawn                     ( CPF_Parm )

void ABioSPGame::SetPlayerDefaults ( class APawn* PlayerPawn )
{
	static UFunction* pFnSetPlayerDefaults = NULL;

	if ( ! pFnSetPlayerDefaults )
		pFnSetPlayerDefaults = (UFunction*) UObject::GObjObjects()->Data[ 64680 ];

	ABioSPGame_execSetPlayerDefaults_Parms SetPlayerDefaults_Parms;
	SetPlayerDefaults_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnSetPlayerDefaults, &SetPlayerDefaults_Parms, NULL );
};

// Function SFXGame.BioSPGame.PreventDeath
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Killed_                        ( CPF_Parm )
// class AController*             Killer_                        ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ABioSPGame::PreventDeath ( class APawn* Killed_, class AController* Killer_, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnPreventDeath = NULL;

	if ( ! pFnPreventDeath )
		pFnPreventDeath = (UFunction*) UObject::GObjObjects()->Data[ 64674 ];

	ABioSPGame_execPreventDeath_Parms PreventDeath_Parms;
	PreventDeath_Parms.Killed_ = Killed_;
	PreventDeath_Parms.Killer_ = Killer_;
	PreventDeath_Parms.DamageType = DamageType;
	memcpy ( &PreventDeath_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPreventDeath, &PreventDeath_Parms, NULL );

	return PreventDeath_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.Reset
// [0x00020002] 
// Parameters infos:

void ABioSPGame::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 64672 ];

	ABioSPGame_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function SFXGame.BioSPGame.FindPlayerStart
// [0x00024002] 
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )
// struct FString                 IncomingName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class ANavigationPoint* ABioSPGame::FindPlayerStart ( class AController* Player, unsigned char InTeam, struct FString IncomingName )
{
	static UFunction* pFnFindPlayerStart = NULL;

	if ( ! pFnFindPlayerStart )
		pFnFindPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 64665 ];

	ABioSPGame_execFindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy ( &FindPlayerStart_Parms.IncomingName, &IncomingName, 0x10 );

	this->ProcessEvent ( pFnFindPlayerStart, &FindPlayerStart_Parms, NULL );

	return FindPlayerStart_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.FindStartingNavPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmStartPoint                   ( CPF_Parm )

class ANavigationPoint* ABioSPGame::FindStartingNavPoint ( struct FName nmStartPoint )
{
	static UFunction* pFnFindStartingNavPoint = NULL;

	if ( ! pFnFindStartingNavPoint )
		pFnFindStartingNavPoint = (UFunction*) UObject::GObjObjects()->Data[ 64662 ];

	ABioSPGame_execFindStartingNavPoint_Parms FindStartingNavPoint_Parms;
	memcpy ( &FindStartingNavPoint_Parms.nmStartPoint, &nmStartPoint, 0x8 );

	pFnFindStartingNavPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindStartingNavPoint, &FindStartingNavPoint_Parms, NULL );

	pFnFindStartingNavPoint->FunctionFlags |= 0x400;

	return FindStartingNavPoint_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.PreloadPackage
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 TheActorType                   ( CPF_Parm | CPF_NeedCtorLink )

void ABioSPGame::PreloadPackage ( struct FString TheActorType )
{
	static UFunction* pFnPreloadPackage = NULL;

	if ( ! pFnPreloadPackage )
		pFnPreloadPackage = (UFunction*) UObject::GObjObjects()->Data[ 64660 ];

	ABioSPGame_execPreloadPackage_Parms PreloadPackage_Parms;
	memcpy ( &PreloadPackage_Parms.TheActorType, &TheActorType, 0x10 );

	pFnPreloadPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreloadPackage, &PreloadPackage_Parms, NULL );

	pFnPreloadPackage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSPGame.GetSimpleString
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            StrRef                         ( CPF_Parm )
// unsigned long                  bParse                         ( CPF_OptionalParm | CPF_Parm )

struct FString ABioSPGame::GetSimpleString ( int StrRef, unsigned long bParse )
{
	static UFunction* pFnGetSimpleString = NULL;

	if ( ! pFnGetSimpleString )
		pFnGetSimpleString = (UFunction*) UObject::GObjObjects()->Data[ 50824 ];

	ABioSPGame_execGetSimpleString_Parms GetSimpleString_Parms;
	GetSimpleString_Parms.StrRef = StrRef;
	GetSimpleString_Parms.bParse = bParse;

	pFnGetSimpleString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSimpleString, &GetSimpleString_Parms, NULL );

	pFnGetSimpleString->FunctionFlags |= 0x400;

	return GetSimpleString_Parms.ReturnValue;
};

// Function SFXGame.BioSPGame.CalculateHenchmanSpawn
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Player                         ( CPF_Parm )
// float                          backOffset                     ( CPF_Parm )
// float                          sideOffset                     ( CPF_Parm )
// unsigned long                  spawnLeft                      ( CPF_Parm )
// struct FVector                 SpawnPoint                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                SpawnRotation                  ( CPF_Parm | CPF_OutParm )

void ABioSPGame::CalculateHenchmanSpawn ( class AActor* Player, float backOffset, float sideOffset, unsigned long spawnLeft, struct FVector* SpawnPoint, struct FRotator* SpawnRotation )
{
	static UFunction* pFnCalculateHenchmanSpawn = NULL;

	if ( ! pFnCalculateHenchmanSpawn )
		pFnCalculateHenchmanSpawn = (UFunction*) UObject::GObjObjects()->Data[ 64651 ];

	ABioSPGame_execCalculateHenchmanSpawn_Parms CalculateHenchmanSpawn_Parms;
	CalculateHenchmanSpawn_Parms.Player = Player;
	CalculateHenchmanSpawn_Parms.backOffset = backOffset;
	CalculateHenchmanSpawn_Parms.sideOffset = sideOffset;
	CalculateHenchmanSpawn_Parms.spawnLeft = spawnLeft;

	pFnCalculateHenchmanSpawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateHenchmanSpawn, &CalculateHenchmanSpawn_Parms, NULL );

	pFnCalculateHenchmanSpawn->FunctionFlags |= 0x400;

	if ( SpawnPoint )
		memcpy ( SpawnPoint, &CalculateHenchmanSpawn_Parms.SpawnPoint, 0xC );

	if ( SpawnRotation )
		memcpy ( SpawnRotation, &CalculateHenchmanSpawn_Parms.SpawnRotation, 0xC );
};

// Function SFXGame.BioSPGame.SetupPartyMemberAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPawnBehavior*        Behavior                       ( CPF_Parm )
// class UClass*                  attributesClass                ( CPF_Parm )

void ABioSPGame::SetupPartyMemberAttributes ( class UBioPawnBehavior* Behavior, class UClass* attributesClass )
{
	static UFunction* pFnSetupPartyMemberAttributes = NULL;

	if ( ! pFnSetupPartyMemberAttributes )
		pFnSetupPartyMemberAttributes = (UFunction*) UObject::GObjObjects()->Data[ 64648 ];

	ABioSPGame_execSetupPartyMemberAttributes_Parms SetupPartyMemberAttributes_Parms;
	SetupPartyMemberAttributes_Parms.Behavior = Behavior;
	SetupPartyMemberAttributes_Parms.attributesClass = attributesClass;

	pFnSetupPartyMemberAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupPartyMemberAttributes, &SetupPartyMemberAttributes_Parms, NULL );

	pFnSetupPartyMemberAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSPGame.ChallengeScalePersistentLevelPawns
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioSPGame::ChallengeScalePersistentLevelPawns ( )
{
	static UFunction* pFnChallengeScalePersistentLevelPawns = NULL;

	if ( ! pFnChallengeScalePersistentLevelPawns )
		pFnChallengeScalePersistentLevelPawns = (UFunction*) UObject::GObjObjects()->Data[ 64647 ];

	ABioSPGame_execChallengeScalePersistentLevelPawns_Parms ChallengeScalePersistentLevelPawns_Parms;

	pFnChallengeScalePersistentLevelPawns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChallengeScalePersistentLevelPawns, &ChallengeScalePersistentLevelPawns_Parms, NULL );

	pFnChallengeScalePersistentLevelPawns->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffect.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffect::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53385 ];

	UBioGameEffect_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffect.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffect::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53382 ];

	UBioGameEffect_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffect.GetActorFromTarget
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class AActor* UBioGameEffect::GetActorFromTarget ( class UObject* oTarget )
{
	static UFunction* pFnGetActorFromTarget = NULL;

	if ( ! pFnGetActorFromTarget )
		pFnGetActorFromTarget = (UFunction*) UObject::GObjObjects()->Data[ 53379 ];

	UBioGameEffect_execGetActorFromTarget_Parms GetActorFromTarget_Parms;
	GetActorFromTarget_Parms.oTarget = oTarget;

	pFnGetActorFromTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorFromTarget, &GetActorFromTarget_Parms, NULL );

	pFnGetActorFromTarget->FunctionFlags |= 0x400;

	return GetActorFromTarget_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffect.Scale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nRank                          ( CPF_Parm )

void UBioGameEffect::Scale ( int nRank )
{
	static UFunction* pFnScale = NULL;

	if ( ! pFnScale )
		pFnScale = (UFunction*) UObject::GObjObjects()->Data[ 53377 ];

	UBioGameEffect_execScale_Parms Scale_Parms;
	Scale_Parms.nRank = nRank;

	pFnScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScale, &Scale_Parms, NULL );

	pFnScale->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffect.SetScalingData
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBio2DA*                 pEffectLevels2DA               ( CPF_Parm )
// struct TArray<int>             aEffectLevelRows               ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            maxRanks                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioGameEffect::SetScalingData ( class UBio2DA* pEffectLevels2DA, struct TArray<int>* aEffectLevelRows, int* maxRanks )
{
	static UFunction* pFnSetScalingData = NULL;

	if ( ! pFnSetScalingData )
		pFnSetScalingData = (UFunction*) UObject::GObjObjects()->Data[ 53372 ];

	UBioGameEffect_execSetScalingData_Parms SetScalingData_Parms;
	SetScalingData_Parms.pEffectLevels2DA = pEffectLevels2DA;

	pFnSetScalingData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalingData, &SetScalingData_Parms, NULL );

	pFnSetScalingData->FunctionFlags |= 0x400;

	if ( aEffectLevelRows )
		memcpy ( aEffectLevelRows, &SetScalingData_Parms.aEffectLevelRows, 0x10 );

	if ( maxRanks )
		*maxRanks = SetScalingData_Parms.maxRanks;
};

// Function SFXGame.BioGameEffect.Update
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_OptionalParm | CPF_Parm )

void UBioGameEffect::eventUpdate ( class UObject* oTarget )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53370 ];

	UBioGameEffect_eventUpdate_Parms Update_Parms;
	Update_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioGameEffect.Tick
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGameEffect::eventTick ( class UObject* oTarget, float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53367 ];

	UBioGameEffect_eventTick_Parms Tick_Parms;
	Tick_Parms.oTarget = oTarget;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioGameEffectAddForce.GetClosestBone
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

struct FName UBioGameEffectAddForce::GetClosestBone ( class AActor* oTarget )
{
	static UFunction* pFnGetClosestBone = NULL;

	if ( ! pFnGetClosestBone )
		pFnGetClosestBone = (UFunction*) UObject::GObjObjects()->Data[ 53423 ];

	UBioGameEffectAddForce_execGetClosestBone_Parms GetClosestBone_Parms;
	GetClosestBone_Parms.oTarget = oTarget;

	pFnGetClosestBone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClosestBone, &GetClosestBone_Parms, NULL );

	pFnGetClosestBone->FunctionFlags |= 0x400;

	return GetClosestBone_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAddForce.Decelerate
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )

void UBioGameEffectAddForce::Decelerate ( class AActor* oActor )
{
	static UFunction* pFnDecelerate = NULL;

	if ( ! pFnDecelerate )
		pFnDecelerate = (UFunction*) UObject::GObjObjects()->Data[ 53421 ];

	UBioGameEffectAddForce_execDecelerate_Parms Decelerate_Parms;
	Decelerate_Parms.oActor = oActor;

	pFnDecelerate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecelerate, &Decelerate_Parms, NULL );

	pFnDecelerate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAddForce.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGameEffectAddForce::Tick ( class UObject* oTarget, float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53418 ];

	UBioGameEffectAddForce_execTick_Parms Tick_Parms;
	Tick_Parms.oTarget = oTarget;
	Tick_Parms.fDeltaTime = fDeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAddForce.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAddForce::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53416 ];

	UBioGameEffectAddForce_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAddForce.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAddForce::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53413 ];

	UBioGameEffectAddForce_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAddForce.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// struct FVector                 vForce                         ( CPF_Parm )
// struct FName                   nmBoneName                     ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm )
// struct FVector                 vDestination                   ( CPF_Parm )
// unsigned long                  bDecelerateAtDestination       ( CPF_Parm )
// struct FVector                 vDeceleration                  ( CPF_Parm )
// float                          fMinVelocity                   ( CPF_Parm )
// class AActor*                  oInstigator                    ( CPF_Parm )
// unsigned long                  bApplyToAllBones               ( CPF_Parm )

void UBioGameEffectAddForce::eventCreate ( class UBioGameProperty* oProperty, struct FVector vForce, struct FName nmBoneName, struct FVector vPosition, struct FVector vDestination, unsigned long bDecelerateAtDestination, struct FVector vDeceleration, float fMinVelocity, class AActor* oInstigator, unsigned long bApplyToAllBones )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53392 ];

	UBioGameEffectAddForce_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	memcpy ( &Create_Parms.vForce, &vForce, 0xC );
	memcpy ( &Create_Parms.nmBoneName, &nmBoneName, 0x8 );
	memcpy ( &Create_Parms.vPosition, &vPosition, 0xC );
	memcpy ( &Create_Parms.vDestination, &vDestination, 0xC );
	Create_Parms.bDecelerateAtDestination = bDecelerateAtDestination;
	memcpy ( &Create_Parms.vDeceleration, &vDeceleration, 0xC );
	Create_Parms.fMinVelocity = fMinVelocity;
	Create_Parms.oInstigator = oInstigator;
	Create_Parms.bApplyToAllBones = bApplyToAllBones;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAddItemProperty.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAddItemProperty::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53432 ];

	UBioGameEffectAddItemProperty_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAddItemProperty.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAddItemProperty::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53429 ];

	UBioGameEffectAddItemProperty_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAdjustStability.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAdjustStability::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53440 ];

	UBioGameEffectAdjustStability_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAdjustStability.Create
// [0x00022002] 
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fAmount                        ( CPF_Parm )

void UBioGameEffectAdjustStability::Create ( class UBioGameProperty* oProperty, float fAmount )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53435 ];

	UBioGameEffectAdjustStability_execCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fAmount = fAmount;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttribute.GetPowerName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioGameEffectAttribute::eventGetPowerName ( )
{
	static UFunction* pFnGetPowerName = NULL;

	if ( ! pFnGetPowerName )
		pFnGetPowerName = (UFunction*) UObject::GObjObjects()->Data[ 53452 ];

	UBioGameEffectAttribute_eventGetPowerName_Parms GetPowerName_Parms;

	this->ProcessEvent ( pFnGetPowerName, &GetPowerName_Parms, NULL );

	return GetPowerName_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttribute.GetAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributes*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UBioAttributes* UBioGameEffectAttribute::GetAttributes ( class UObject* oTarget )
{
	static UFunction* pFnGetAttributes = NULL;

	if ( ! pFnGetAttributes )
		pFnGetAttributes = (UFunction*) UObject::GObjObjects()->Data[ 53449 ];

	UBioGameEffectAttribute_execGetAttributes_Parms GetAttributes_Parms;
	GetAttributes_Parms.oTarget = oTarget;

	pFnGetAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributes, &GetAttributes_Parms, NULL );

	pFnGetAttributes->FunctionFlags |= 0x400;

	return GetAttributes_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttribute.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttribute::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53447 ];

	UBioGameEffectAttribute_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttribute.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttribute::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53444 ];

	UBioGameEffectAttribute_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeBool.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// unsigned long                  bValue                         ( CPF_Parm )
// struct FName                   nmAttributeName                ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// unsigned long                  bSetToOppositeOnUnapply        ( CPF_Parm )

void UBioGameEffectAttributeBool::eventCreate ( class UBioGameProperty* oProperty, unsigned long bValue, struct FName nmAttributeName, unsigned char eType, unsigned long bSetToOppositeOnUnapply )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53459 ];

	UBioGameEffectAttributeBool_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.bValue = bValue;
	memcpy ( &Create_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	Create_Parms.eType = eType;
	Create_Parms.bSetToOppositeOnUnapply = bSetToOppositeOnUnapply;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttributeBool.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeBool::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53457 ];

	UBioGameEffectAttributeBool_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeBool.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeBool::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53454 ];

	UBioGameEffectAttributeBool_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerAttributeBool.GetPowerName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioGameEffectPowerAttributeBool::eventGetPowerName ( )
{
	static UFunction* pFnGetPowerName = NULL;

	if ( ! pFnGetPowerName )
		pFnGetPowerName = (UFunction*) UObject::GObjObjects()->Data[ 53649 ];

	UBioGameEffectPowerAttributeBool_eventGetPowerName_Parms GetPowerName_Parms;

	this->ProcessEvent ( pFnGetPowerName, &GetPowerName_Parms, NULL );

	return GetPowerName_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerAttributeBool.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectPowerAttributeBool::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53647 ];

	UBioGameEffectPowerAttributeBool_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerAttributeBool.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerAttributeBool::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53644 ];

	UBioGameEffectPowerAttributeBool_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeByte.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// unsigned char                  Value                          ( CPF_Parm )
// struct FName                   nmAttributeName                ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// unsigned long                  bZeroOnUnapply                 ( CPF_Parm )

void UBioGameEffectAttributeByte::eventCreate ( class UBioGameProperty* oProperty, unsigned char Value, struct FName nmAttributeName, unsigned char eType, unsigned long bZeroOnUnapply )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53473 ];

	UBioGameEffectAttributeByte_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.Value = Value;
	memcpy ( &Create_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	Create_Parms.eType = eType;
	Create_Parms.bZeroOnUnapply = bZeroOnUnapply;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttributeByte.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeByte::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53471 ];

	UBioGameEffectAttributeByte_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeByte.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeByte::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53468 ];

	UBioGameEffectAttributeByte_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeName.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// struct FName                   nmValue                        ( CPF_Parm )
// struct FName                   nmAttributeName                ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// unsigned long                  bSetToNoneOnUnapply            ( CPF_Parm )

void UBioGameEffectAttributeName::eventCreate ( class UBioGameProperty* oProperty, struct FName nmValue, struct FName nmAttributeName, unsigned char eType, unsigned long bSetToNoneOnUnapply )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53536 ];

	UBioGameEffectAttributeName_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	memcpy ( &Create_Parms.nmValue, &nmValue, 0x8 );
	memcpy ( &Create_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	Create_Parms.eType = eType;
	Create_Parms.bSetToNoneOnUnapply = bSetToNoneOnUnapply;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttributeName.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeName::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53534 ];

	UBioGameEffectAttributeName_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeName.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeName::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53531 ];

	UBioGameEffectAttributeName_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeNumeric.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeNumeric::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53494 ];

	UBioGameEffectAttributeNumeric_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeNumeric.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeNumeric::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53491 ];

	UBioGameEffectAttributeNumeric_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeFloat.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        GP                             ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )
// struct FName                   nmAttributeName                ( CPF_Parm )
// unsigned char                  eAspect                        ( CPF_Parm )
// unsigned char                  eModifier                      ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// int                            nIndex                         ( CPF_Parm )

void UBioGameEffectAttributeFloat::eventCreate ( class UBioGameProperty* GP, float fValue, struct FName nmAttributeName, unsigned char eAspect, unsigned char eModifier, unsigned char eType, int nIndex )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53502 ];

	UBioGameEffectAttributeFloat_eventCreate_Parms Create_Parms;
	Create_Parms.GP = GP;
	Create_Parms.fValue = fValue;
	memcpy ( &Create_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	Create_Parms.eAspect = eAspect;
	Create_Parms.eModifier = eModifier;
	Create_Parms.eType = eType;
	Create_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttributeFloat.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeFloat::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53500 ];

	UBioGameEffectAttributeFloat_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeFloat.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeFloat::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53497 ];

	UBioGameEffectAttributeFloat_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerAttributeFloat.GetPowerName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioGameEffectPowerAttributeFloat::eventGetPowerName ( )
{
	static UFunction* pFnGetPowerName = NULL;

	if ( ! pFnGetPowerName )
		pFnGetPowerName = (UFunction*) UObject::GObjObjects()->Data[ 53657 ];

	UBioGameEffectPowerAttributeFloat_eventGetPowerName_Parms GetPowerName_Parms;

	this->ProcessEvent ( pFnGetPowerName, &GetPowerName_Parms, NULL );

	return GetPowerName_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerAttributeFloat.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectPowerAttributeFloat::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53655 ];

	UBioGameEffectPowerAttributeFloat_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerAttributeFloat.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerAttributeFloat::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53652 ];

	UBioGameEffectPowerAttributeFloat_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerParameter.GetPowerName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioGameEffectPowerParameter::eventGetPowerName ( )
{
	static UFunction* pFnGetPowerName = NULL;

	if ( ! pFnGetPowerName )
		pFnGetPowerName = (UFunction*) UObject::GObjObjects()->Data[ 53688 ];

	UBioGameEffectPowerParameter_eventGetPowerName_Parms GetPowerName_Parms;

	this->ProcessEvent ( pFnGetPowerName, &GetPowerName_Parms, NULL );

	return GetPowerName_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerParameter.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectPowerParameter::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53686 ];

	UBioGameEffectPowerParameter_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerParameter.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerParameter::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53683 ];

	UBioGameEffectPowerParameter_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeInt.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        GP                             ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )
// struct FName                   nmAttributeName                ( CPF_Parm )
// unsigned char                  eAspect                        ( CPF_Parm )
// unsigned char                  eModifier                      ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bSetToZeroOnUnapply            ( CPF_Parm )

void UBioGameEffectAttributeInt::eventCreate ( class UBioGameProperty* GP, int nValue, struct FName nmAttributeName, unsigned char eAspect, unsigned char eModifier, unsigned char eType, int nIndex, unsigned long bSetToZeroOnUnapply )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53519 ];

	UBioGameEffectAttributeInt_eventCreate_Parms Create_Parms;
	Create_Parms.GP = GP;
	Create_Parms.nValue = nValue;
	memcpy ( &Create_Parms.nmAttributeName, &nmAttributeName, 0x8 );
	Create_Parms.eAspect = eAspect;
	Create_Parms.eModifier = eModifier;
	Create_Parms.eType = eType;
	Create_Parms.nIndex = nIndex;
	Create_Parms.bSetToZeroOnUnapply = bSetToZeroOnUnapply;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectAttributeInt.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeInt::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53517 ];

	UBioGameEffectAttributeInt_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeInt.RemoveModifier
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributes*          attribs                        ( CPF_Parm )

void UBioGameEffectAttributeInt::RemoveModifier ( class UBioAttributes* attribs )
{
	static UFunction* pFnRemoveModifier = NULL;

	if ( ! pFnRemoveModifier )
		pFnRemoveModifier = (UFunction*) UObject::GObjObjects()->Data[ 53515 ];

	UBioGameEffectAttributeInt_execRemoveModifier_Parms RemoveModifier_Parms;
	RemoveModifier_Parms.attribs = attribs;

	pFnRemoveModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveModifier, &RemoveModifier_Parms, NULL );

	pFnRemoveModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeInt.AddModifier
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributes*          attribs                        ( CPF_Parm )

void UBioGameEffectAttributeInt::AddModifier ( class UBioAttributes* attribs )
{
	static UFunction* pFnAddModifier = NULL;

	if ( ! pFnAddModifier )
		pFnAddModifier = (UFunction*) UObject::GObjObjects()->Data[ 53513 ];

	UBioGameEffectAttributeInt_execAddModifier_Parms AddModifier_Parms;
	AddModifier_Parms.attribs = attribs;

	pFnAddModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddModifier, &AddModifier_Parms, NULL );

	pFnAddModifier->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeInt.SetBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributes*          attribs                        ( CPF_Parm )

void UBioGameEffectAttributeInt::SetBase ( class UBioAttributes* attribs )
{
	static UFunction* pFnSetBase = NULL;

	if ( ! pFnSetBase )
		pFnSetBase = (UFunction*) UObject::GObjObjects()->Data[ 53511 ];

	UBioGameEffectAttributeInt_execSetBase_Parms SetBase_Parms;
	SetBase_Parms.attribs = attribs;

	pFnSetBase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBase, &SetBase_Parms, NULL );

	pFnSetBase->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeString.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectAttributeString::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53485 ];

	UBioGameEffectAttributeString_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectAttributeString.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeString::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53482 ];

	UBioGameEffectAttributeString_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectAttributeEnum.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectAttributeEnum::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53487 ];

	UBioGameEffectAttributeEnum_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectDisableAI.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectDisableAI::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53555 ];

	UBioGameEffectDisableAI_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectDisableAI.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectDisableAI::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53552 ];

	UBioGameEffectDisableAI_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectDisableAI.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void UBioGameEffectDisableAI::eventCreate ( class UBioGameProperty* oProperty, unsigned char eType, struct FName nmSubType )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53545 ];

	UBioGameEffectDisableAI_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.eType = eType;
	memcpy ( &Create_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectDmgVulnerability.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectDmgVulnerability::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53566 ];

	UBioGameEffectDmgVulnerability_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectDmgVulnerability.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectDmgVulnerability::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53563 ];

	UBioGameEffectDmgVulnerability_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectDmgVulnerability.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fDamageVulnerability           ( CPF_Parm )

void UBioGameEffectDmgVulnerability::eventCreate ( class UBioGameProperty* oProperty, float fDamageVulnerability )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53558 ];

	UBioGameEffectDmgVulnerability_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fDamageVulnerability = fDamageVulnerability;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectGiveGP.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectGiveGP::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53574 ];

	UBioGameEffectGiveGP_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectGiveGP.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectGiveGP::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53571 ];

	UBioGameEffectGiveGP_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectGiveGP.SetGP
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioGameProperty*        pGP                            ( CPF_Parm )

void UBioGameEffectGiveGP::SetGP ( class UBioGameProperty* pGP )
{
	static UFunction* pFnSetGP = NULL;

	if ( ! pFnSetGP )
		pFnSetGP = (UFunction*) UObject::GObjObjects()->Data[ 53568 ];

	UBioGameEffectGiveGP_execSetGP_Parms SetGP_Parms;
	SetGP_Parms.pGP = pGP;

	this->ProcessEvent ( pFnSetGP, &SetGP_Parms, NULL );
};

// Function SFXGame.BioGameEffectHackAI.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// class UBioEpicPawnBehavior*    oHacker                        ( CPF_Parm )

void UBioGameEffectHackAI::eventCreate ( class UBioGameProperty* oProperty, class UBioEpicPawnBehavior* oHacker )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53584 ];

	UBioGameEffectHackAI_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.oHacker = oHacker;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectHackAI.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGameEffectHackAI::Unapply ( class UObject* pTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53582 ];

	UBioGameEffectHackAI_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.pTarget = pTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectHackAI.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pTarget                        ( CPF_Parm )

class UObject* UBioGameEffectHackAI::Apply ( class UObject* pTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53579 ];

	UBioGameEffectHackAI_execApply_Parms Apply_Parms;
	Apply_Parms.pTarget = pTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectHackAI.InitializeHackAI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioEpicPawnBehavior*    pSourceBehavior                ( CPF_Parm )

void UBioGameEffectHackAI::eventInitializeHackAI ( class UBioEpicPawnBehavior* pSourceBehavior )
{
	static UFunction* pFnInitializeHackAI = NULL;

	if ( ! pFnInitializeHackAI )
		pFnInitializeHackAI = (UFunction*) UObject::GObjObjects()->Data[ 53576 ];

	UBioGameEffectHackAI_eventInitializeHackAI_Parms InitializeHackAI_Parms;
	InitializeHackAI_Parms.pSourceBehavior = pSourceBehavior;

	this->ProcessEvent ( pFnInitializeHackAI, &InitializeHackAI_Parms, NULL );
};

// Function SFXGame.BioGameEffectHeadExplode.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectHeadExplode::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53592 ];

	UBioGameEffectHeadExplode_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectHeadExplode.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectHeadExplode::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53589 ];

	UBioGameEffectHeadExplode_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectHeal.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectHeal::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53603 ];

	UBioGameEffectHeal_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectHeal.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fHealthAmount                  ( CPF_Parm )
// float                          fToxicAmount                   ( CPF_Parm )
// float                          fResourcesRequired             ( CPF_Parm )

void UBioGameEffectHeal::eventCreate ( class UBioGameProperty* oProperty, float fHealthAmount, float fToxicAmount, float fResourcesRequired )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53594 ];

	UBioGameEffectHeal_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fHealthAmount = fHealthAmount;
	Create_Parms.fToxicAmount = fToxicAmount;
	Create_Parms.fResourcesRequired = fResourcesRequired;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectItemAddXModSlots.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 Target                         ( CPF_Parm )

void UBioGameEffectItemAddXModSlots::Unapply ( class UObject* Target )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53615 ];

	UBioGameEffectItemAddXModSlots_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.Target = Target;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectItemAddXModSlots.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 Target                         ( CPF_Parm )

class UObject* UBioGameEffectItemAddXModSlots::Apply ( class UObject* Target )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53612 ];

	UBioGameEffectItemAddXModSlots_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectItemPopXModSlots.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 Target                         ( CPF_Parm )

void UBioGameEffectItemPopXModSlots::Unapply ( class UObject* Target )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53622 ];

	UBioGameEffectItemPopXModSlots_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.Target = Target;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectItemPopXModSlots.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 Target                         ( CPF_Parm )

class UObject* UBioGameEffectItemPopXModSlots::Apply ( class UObject* Target )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53619 ];

	UBioGameEffectItemPopXModSlots_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectItemRemoveXModSlot.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 Target                         ( CPF_Parm )

void UBioGameEffectItemRemoveXModSlot::Unapply ( class UObject* Target )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53629 ];

	UBioGameEffectItemRemoveXModSlot_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.Target = Target;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectItemRemoveXModSlot.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 Target                         ( CPF_Parm )

class UObject* UBioGameEffectItemRemoveXModSlot::Apply ( class UObject* Target )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53626 ];

	UBioGameEffectItemRemoveXModSlot_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectModifyGravity.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectModifyGravity::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53641 ];

	UBioGameEffectModifyGravity_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectModifyGravity.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectModifyGravity::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53638 ];

	UBioGameEffectModifyGravity_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectModifyGravity.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fScalingValue                  ( CPF_Parm )

void UBioGameEffectModifyGravity::eventCreate ( class UBioGameProperty* oProperty, float fScalingValue )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53633 ];

	UBioGameEffectModifyGravity_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fScalingValue = fScalingValue;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectPowerBuildUp.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGameEffectPowerBuildUp::Tick ( class UObject* oTarget, float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53671 ];

	UBioGameEffectPowerBuildUp_execTick_Parms Tick_Parms;
	Tick_Parms.oTarget = oTarget;
	Tick_Parms.fDeltaTime = fDeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerBuildUp.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectPowerBuildUp::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53669 ];

	UBioGameEffectPowerBuildUp_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerBuildUp.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerBuildUp::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53666 ];

	UBioGameEffectPowerBuildUp_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerBuildUp.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )

void UBioGameEffectPowerBuildUp::eventCreate ( class UBioGameProperty* oProperty, class UBioPower* oPower, float fTimeOut )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53659 ];

	UBioGameEffectPowerBuildUp_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.oPower = oPower;
	Create_Parms.fTimeOut = fTimeOut;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectPowerGive.Create
// [0x00022002] 
// Parameters infos:
// class UBioGameProperty*        GP                             ( CPF_Parm )
// struct FName                   powerName                      ( CPF_Parm )

void UBioGameEffectPowerGive::Create ( class UBioGameProperty* GP, struct FName powerName )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53678 ];

	UBioGameEffectPowerGive_execCreate_Parms Create_Parms;
	Create_Parms.GP = GP;
	memcpy ( &Create_Parms.powerName, &powerName, 0x8 );

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectPowerGive.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerGive::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53675 ];

	UBioGameEffectPowerGive_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerText.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectPowerText::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53699 ];

	UBioGameEffectPowerText_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectPowerText.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectPowerText::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53696 ];

	UBioGameEffectPowerText_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectPowerText.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// int                            srText                         ( CPF_Parm )

void UBioGameEffectPowerText::eventCreate ( class UBioGameProperty* oProperty, int srText )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53691 ];

	UBioGameEffectPowerText_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.srText = srText;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectRagdoll.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectRagdoll::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53707 ];

	UBioGameEffectRagdoll_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectRagdoll.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectRagdoll::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53704 ];

	UBioGameEffectRagdoll_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectRagdoll.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )

void UBioGameEffectRagdoll::eventCreate ( class UBioGameProperty* oProperty )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53701 ];

	UBioGameEffectRagdoll_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectRegenerateShield.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectRegenerateShield::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53715 ];

	UBioGameEffectRegenerateShield_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectRegenerateShield.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fAmount                        ( CPF_Parm )

void UBioGameEffectRegenerateShield::eventCreate ( class UBioGameProperty* oProperty, float fAmount )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53710 ];

	UBioGameEffectRegenerateShield_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fAmount = fAmount;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectSetMaterialParameterColor.Apply
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSetMaterialParameterColor::eventApply ( class UObject* pTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53719 ];

	UBioGameEffectSetMaterialParameterColor_eventApply_Parms Apply_Parms;
	Apply_Parms.pTarget = pTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSetMaterialParameterScalar.Apply
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSetMaterialParameterScalar::eventApply ( class UObject* pTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53726 ];

	UBioGameEffectSetMaterialParameterScalar_eventApply_Parms Apply_Parms;
	Apply_Parms.pTarget = pTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSetMaterialParameterTexture.Apply
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSetMaterialParameterTexture::eventApply ( class UObject* pTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53730 ];

	UBioGameEffectSetMaterialParameterTexture_eventApply_Parms Apply_Parms;
	Apply_Parms.pTarget = pTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSetProperty.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGameEffectSetProperty::Unapply ( class UObject* pTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53737 ];

	UBioGameEffectSetProperty_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.pTarget = pTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectSetProperty.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSetProperty::Apply ( class UObject* pTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53734 ];

	UBioGameEffectSetProperty_execApply_Parms Apply_Parms;
	Apply_Parms.pTarget = pTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSingularity.MoveActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )

void UBioGameEffectSingularity::MoveActor ( class AActor* oActor )
{
	static UFunction* pFnMoveActor = NULL;

	if ( ! pFnMoveActor )
		pFnMoveActor = (UFunction*) UObject::GObjObjects()->Data[ 53773 ];

	UBioGameEffectSingularity_execMoveActor_Parms MoveActor_Parms;
	MoveActor_Parms.oActor = oActor;

	pFnMoveActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMoveActor, &MoveActor_Parms, NULL );

	pFnMoveActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectSingularity.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGameEffectSingularity::Tick ( class UObject* oTarget, float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53770 ];

	UBioGameEffectSingularity_execTick_Parms Tick_Parms;
	Tick_Parms.oTarget = oTarget;
	Tick_Parms.fDeltaTime = fDeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectSingularity.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectSingularity::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53768 ];

	UBioGameEffectSingularity_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectSingularity.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSingularity::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53765 ];

	UBioGameEffectSingularity_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSingularity.Create
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// struct FVector                 vSingularityLocation           ( CPF_Parm )
// float                          fForce                         ( CPF_Parm )
// struct FName                   nmBoneName                     ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm )
// float                          fForceInterval                 ( CPF_Parm )
// float                          fOuterBubbleRange              ( CPF_Parm )
// float                          fVelocityThresholdOuterBubble  ( CPF_Parm )
// float                          fInnerBubbleRange              ( CPF_Parm )
// float                          fBubbleForce                   ( CPF_Parm )

void UBioGameEffectSingularity::eventCreate ( class UBioGameProperty* oProperty, struct FVector vSingularityLocation, float fForce, struct FName nmBoneName, struct FVector vPosition, float fForceInterval, float fOuterBubbleRange, float fVelocityThresholdOuterBubble, float fInnerBubbleRange, float fBubbleForce )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53744 ];

	UBioGameEffectSingularity_eventCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	memcpy ( &Create_Parms.vSingularityLocation, &vSingularityLocation, 0xC );
	Create_Parms.fForce = fForce;
	memcpy ( &Create_Parms.nmBoneName, &nmBoneName, 0x8 );
	memcpy ( &Create_Parms.vPosition, &vPosition, 0xC );
	Create_Parms.fForceInterval = fForceInterval;
	Create_Parms.fOuterBubbleRange = fOuterBubbleRange;
	Create_Parms.fVelocityThresholdOuterBubble = fVelocityThresholdOuterBubble;
	Create_Parms.fInnerBubbleRange = fInnerBubbleRange;
	Create_Parms.fBubbleForce = fBubbleForce;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectSuppression.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameEffectSuppression::Unapply ( class UObject* oTarget )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53783 ];

	UBioGameEffectSuppression_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.oTarget = oTarget;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameEffectSuppression.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectSuppression::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53780 ];

	UBioGameEffectSuppression_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectSuppression.Create
// [0x00022002] 
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )

void UBioGameEffectSuppression::Create ( class UBioGameProperty* oProperty )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53777 ];

	UBioGameEffectSuppression_execCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectTakeDamage.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UObject* UBioGameEffectTakeDamage::Apply ( class UObject* oTarget )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 53799 ];

	UBioGameEffectTakeDamage_execApply_Parms Apply_Parms;
	Apply_Parms.oTarget = oTarget;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;

	return Apply_Parms.ReturnValue;
};

// Function SFXGame.BioGameEffectTakeDamage.Create
// [0x00022002] 
// Parameters infos:
// class UBioGameProperty*        oProperty                      ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )
// class AController*             oInstigatorController          ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vMomentum                      ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

void UBioGameEffectTakeDamage::Create ( class UBioGameProperty* oProperty, float fDamage, class AController* oInstigatorController, struct FVector vHitLocation, struct FVector vMomentum, class UBioDamageType* pDamage )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 53786 ];

	UBioGameEffectTakeDamage_execCreate_Parms Create_Parms;
	Create_Parms.oProperty = oProperty;
	Create_Parms.fDamage = fDamage;
	Create_Parms.oInstigatorController = oInstigatorController;
	memcpy ( &Create_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &Create_Parms.vMomentum, &vMomentum, 0xC );
	Create_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SFXGame.BioGameEffectImporter.CreateGameEffect
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UBioGameEffect*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 _outer                         ( CPF_Parm )
// class UBio2DA*                 gameEffectTable                ( CPF_Parm )
// int                            nGameEffectID                  ( CPF_Parm )

class UBioGameEffect* UBioGameEffectImporter::CreateGameEffect ( class UObject* _outer, class UBio2DA* gameEffectTable, int nGameEffectID )
{
	static UFunction* pFnCreateGameEffect = NULL;

	if ( ! pFnCreateGameEffect )
		pFnCreateGameEffect = (UFunction*) UObject::GObjObjects()->Data[ 53606 ];

	UBioGameEffectImporter_execCreateGameEffect_Parms CreateGameEffect_Parms;
	CreateGameEffect_Parms._outer = _outer;
	CreateGameEffect_Parms.gameEffectTable = gameEffectTable;
	CreateGameEffect_Parms.nGameEffectID = nGameEffectID;

	pFnCreateGameEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateGameEffect, &CreateGameEffect_Parms, NULL );

	pFnCreateGameEffect->FunctionFlags |= 0x400;

	return CreateGameEffect_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.HasEffect
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  GameEffectClass                ( CPF_Parm )

bool UBioGameProperty::HasEffect ( class UClass* GameEffectClass )
{
	static UFunction* pFnHasEffect = NULL;

	if ( ! pFnHasEffect )
		pFnHasEffect = (UFunction*) UObject::GObjObjects()->Data[ 53874 ];

	UBioGameProperty_execHasEffect_Parms HasEffect_Parms;
	HasEffect_Parms.GameEffectClass = GameEffectClass;

	pFnHasEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasEffect, &HasEffect_Parms, NULL );

	pFnHasEffect->FunctionFlags |= 0x400;

	return HasEffect_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.Unapply
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 pTargetObject                  ( CPF_Parm )

void UBioGameProperty::Unapply ( class UObject* pTargetObject )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 53872 ];

	UBioGameProperty_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.pTargetObject = pTargetObject;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.Apply
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 pTargetObject                  ( CPF_Parm )

void UBioGameProperty::Apply ( class UObject* pTargetObject )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 51998 ];

	UBioGameProperty_execApply_Parms Apply_Parms;
	Apply_Parms.pTargetObject = pTargetObject;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.ToLine
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioGameProperty::eventToLine ( )
{
	static UFunction* pFnToLine = NULL;

	if ( ! pFnToLine )
		pFnToLine = (UFunction*) UObject::GObjObjects()->Data[ 41241 ];

	UBioGameProperty_eventToLine_Parms ToLine_Parms;

	this->ProcessEvent ( pFnToLine, &ToLine_Parms, NULL );

	return ToLine_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.ToString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sIndent                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UBioGameProperty::eventToString ( struct FString sIndent )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 53862 ];

	UBioGameProperty_eventToString_Parms ToString_Parms;
	memcpy ( &ToString_Parms.sIndent, &sIndent, 0x10 );

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.CreateInstant
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioGameProperty* UBioGameProperty::eventCreateInstant ( )
{
	static UFunction* pFnCreateInstant = NULL;

	if ( ! pFnCreateInstant )
		pFnCreateInstant = (UFunction*) UObject::GObjObjects()->Data[ 52009 ];

	UBioGameProperty_eventCreateInstant_Parms CreateInstant_Parms;

	this->ProcessEvent ( pFnCreateInstant, &CreateInstant_Parms, NULL );

	return CreateInstant_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.CreateGameProperty
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGamePropertyContainer* oGPContainer                   ( CPF_Parm )
// class UObject*                 oOwner                         ( CPF_Parm )
// unsigned char                  ePropertyType                  ( CPF_Parm )
// float                          fTimedDuration                 ( CPF_Parm )
// float                          fCoolDownTime                  ( CPF_Parm )
// unsigned long                  bTicked                        ( CPF_Parm )
// float                          fTickInterval                  ( CPF_Parm )
// int                            nGamePropertyGroup             ( CPF_Parm )
// float                          fPower                         ( CPF_Parm )
// unsigned long                  bFireAndForget                 ( CPF_Parm )

class UBioGameProperty* UBioGameProperty::eventCreateGameProperty ( class UBioGamePropertyContainer* oGPContainer, class UObject* oOwner, unsigned char ePropertyType, float fTimedDuration, float fCoolDownTime, unsigned long bTicked, float fTickInterval, int nGamePropertyGroup, float fPower, unsigned long bFireAndForget )
{
	static UFunction* pFnCreateGameProperty = NULL;

	if ( ! pFnCreateGameProperty )
		pFnCreateGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 51995 ];

	UBioGameProperty_eventCreateGameProperty_Parms CreateGameProperty_Parms;
	CreateGameProperty_Parms.oGPContainer = oGPContainer;
	CreateGameProperty_Parms.oOwner = oOwner;
	CreateGameProperty_Parms.ePropertyType = ePropertyType;
	CreateGameProperty_Parms.fTimedDuration = fTimedDuration;
	CreateGameProperty_Parms.fCoolDownTime = fCoolDownTime;
	CreateGameProperty_Parms.bTicked = bTicked;
	CreateGameProperty_Parms.fTickInterval = fTickInterval;
	CreateGameProperty_Parms.nGamePropertyGroup = nGamePropertyGroup;
	CreateGameProperty_Parms.fPower = fPower;
	CreateGameProperty_Parms.bFireAndForget = bFireAndForget;

	this->ProcessEvent ( pFnCreateGameProperty, &CreateGameProperty_Parms, NULL );

	return CreateGameProperty_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.RunTests
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioGameProperty::RunTests ( class ABioPawn* oPawn )
{
	static UFunction* pFnRunTests = NULL;

	if ( ! pFnRunTests )
		pFnRunTests = (UFunction*) UObject::GObjObjects()->Data[ 53840 ];

	UBioGameProperty_execRunTests_Parms RunTests_Parms;
	RunTests_Parms.oPawn = oPawn;

	pFnRunTests->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRunTests, &RunTests_Parms, NULL );

	pFnRunTests->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.ScaleToLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nPowerLevel                    ( CPF_Parm )

void UBioGameProperty::ScaleToLevel ( int nPowerLevel )
{
	static UFunction* pFnScaleToLevel = NULL;

	if ( ! pFnScaleToLevel )
		pFnScaleToLevel = (UFunction*) UObject::GObjObjects()->Data[ 53838 ];

	UBioGameProperty_execScaleToLevel_Parms ScaleToLevel_Parms;
	ScaleToLevel_Parms.nPowerLevel = nPowerLevel;

	pFnScaleToLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleToLevel, &ScaleToLevel_Parms, NULL );

	pFnScaleToLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.RemoveEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )

void UBioGameProperty::RemoveEffects ( class UObject* oTarget )
{
	static UFunction* pFnRemoveEffects = NULL;

	if ( ! pFnRemoveEffects )
		pFnRemoveEffects = (UFunction*) UObject::GObjObjects()->Data[ 53836 ];

	UBioGameProperty_execRemoveEffects_Parms RemoveEffects_Parms;
	RemoveEffects_Parms.oTarget = oTarget;

	pFnRemoveEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveEffects, &RemoveEffects_Parms, NULL );

	pFnRemoveEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.ApplyEffects
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 oTarget                        ( CPF_Parm )
// unsigned long                  bIsInstant                     ( CPF_OptionalParm | CPF_Parm )

void UBioGameProperty::ApplyEffects ( class UObject* oTarget, unsigned long bIsInstant )
{
	static UFunction* pFnApplyEffects = NULL;

	if ( ! pFnApplyEffects )
		pFnApplyEffects = (UFunction*) UObject::GObjObjects()->Data[ 53833 ];

	UBioGameProperty_execApplyEffects_Parms ApplyEffects_Parms;
	ApplyEffects_Parms.oTarget = oTarget;
	ApplyEffects_Parms.bIsInstant = bIsInstant;

	pFnApplyEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyEffects, &ApplyEffects_Parms, NULL );

	pFnApplyEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.TickEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGameProperty::TickEffects ( float fDeltaTime )
{
	static UFunction* pFnTickEffects = NULL;

	if ( ! pFnTickEffects )
		pFnTickEffects = (UFunction*) UObject::GObjObjects()->Data[ 53831 ];

	UBioGameProperty_execTickEffects_Parms TickEffects_Parms;
	TickEffects_Parms.fDeltaTime = fDeltaTime;

	pFnTickEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickEffects, &TickEffects_Parms, NULL );

	pFnTickEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGameProperty.TestConditionals
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

bool UBioGameProperty::TestConditionals ( class UObject* oTarget )
{
	static UFunction* pFnTestConditionals = NULL;

	if ( ! pFnTestConditionals )
		pFnTestConditionals = (UFunction*) UObject::GObjObjects()->Data[ 53828 ];

	UBioGameProperty_execTestConditionals_Parms TestConditionals_Parms;
	TestConditionals_Parms.oTarget = oTarget;

	pFnTestConditionals->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestConditionals, &TestConditionals_Parms, NULL );

	pFnTestConditionals->FunctionFlags |= 0x400;

	return TestConditionals_Parms.ReturnValue;
};

// Function SFXGame.BioGameProperty.AddConditionalToProperty
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioGamePropertyConditional* oConditional                   ( CPF_Parm )

void UBioGameProperty::eventAddConditionalToProperty ( class UBioGamePropertyConditional* oConditional )
{
	static UFunction* pFnAddConditionalToProperty = NULL;

	if ( ! pFnAddConditionalToProperty )
		pFnAddConditionalToProperty = (UFunction*) UObject::GObjObjects()->Data[ 53826 ];

	UBioGameProperty_eventAddConditionalToProperty_Parms AddConditionalToProperty_Parms;
	AddConditionalToProperty_Parms.oConditional = oConditional;

	this->ProcessEvent ( pFnAddConditionalToProperty, &AddConditionalToProperty_Parms, NULL );
};

// Function SFXGame.BioGameProperty.AddGameEffectToProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGameEffect*          oEffect                        ( CPF_Parm )

void UBioGameProperty::AddGameEffectToProperty ( class UBioGameEffect* oEffect )
{
	static UFunction* pFnAddGameEffectToProperty = NULL;

	if ( ! pFnAddGameEffectToProperty )
		pFnAddGameEffectToProperty = (UFunction*) UObject::GObjObjects()->Data[ 53824 ];

	UBioGameProperty_execAddGameEffectToProperty_Parms AddGameEffectToProperty_Parms;
	AddGameEffectToProperty_Parms.oEffect = oEffect;

	pFnAddGameEffectToProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddGameEffectToProperty, &AddGameEffectToProperty_Parms, NULL );

	pFnAddGameEffectToProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyConditional.Uninitialize
// [0x00020000] 
// Parameters infos:

void UBioGamePropertyConditional::Uninitialize ( )
{
	static UFunction* pFnUninitialize = NULL;

	if ( ! pFnUninitialize )
		pFnUninitialize = (UFunction*) UObject::GObjObjects()->Data[ 53884 ];

	UBioGamePropertyConditional_execUninitialize_Parms Uninitialize_Parms;

	this->ProcessEvent ( pFnUninitialize, &Uninitialize_Parms, NULL );
};

// Function SFXGame.BioGamePropertyConditional.Initialize
// [0x00020000] 
// Parameters infos:

void UBioGamePropertyConditional::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 53883 ];

	UBioGamePropertyConditional_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioGamePropertyConditionalIsActorType.SetActorType
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   nmActorType                    ( CPF_Parm )

void UBioGamePropertyConditionalIsActorType::SetActorType ( struct FName nmActorType )
{
	static UFunction* pFnSetActorType = NULL;

	if ( ! pFnSetActorType )
		pFnSetActorType = (UFunction*) UObject::GObjObjects()->Data[ 53892 ];

	UBioGamePropertyConditionalIsActorType_execSetActorType_Parms SetActorType_Parms;
	memcpy ( &SetActorType_Parms.nmActorType, &nmActorType, 0x8 );

	this->ProcessEvent ( pFnSetActorType, &SetActorType_Parms, NULL );
};

// Function SFXGame.BioGamePropertyConditionalWeapon.TestRangedWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeapon*          pWeaponItem                    ( CPF_Parm )

bool UBioGamePropertyConditionalWeapon::TestRangedWeapon ( class UBioItemWeapon* pWeaponItem )
{
	static UFunction* pFnTestRangedWeapon = NULL;

	if ( ! pFnTestRangedWeapon )
		pFnTestRangedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53902 ];

	UBioGamePropertyConditionalWeapon_execTestRangedWeapon_Parms TestRangedWeapon_Parms;
	TestRangedWeapon_Parms.pWeaponItem = pWeaponItem;

	pFnTestRangedWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestRangedWeapon, &TestRangedWeapon_Parms, NULL );

	pFnTestRangedWeapon->FunctionFlags |= 0x400;

	return TestRangedWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyConditionalWeapon.TestMeleeWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeapon*          pWeaponItem                    ( CPF_Parm )

bool UBioGamePropertyConditionalWeapon::TestMeleeWeapon ( class UBioItemWeapon* pWeaponItem )
{
	static UFunction* pFnTestMeleeWeapon = NULL;

	if ( ! pFnTestMeleeWeapon )
		pFnTestMeleeWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53899 ];

	UBioGamePropertyConditionalWeapon_execTestMeleeWeapon_Parms TestMeleeWeapon_Parms;
	TestMeleeWeapon_Parms.pWeaponItem = pWeaponItem;

	pFnTestMeleeWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestMeleeWeapon, &TestMeleeWeapon_Parms, NULL );

	pFnTestMeleeWeapon->FunctionFlags |= 0x400;

	return TestMeleeWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyConditionalWeapon.TestWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemWeapon*          pWeaponItem                    ( CPF_Parm )

bool UBioGamePropertyConditionalWeapon::TestWeapon ( class UBioItemWeapon* pWeaponItem )
{
	static UFunction* pFnTestWeapon = NULL;

	if ( ! pFnTestWeapon )
		pFnTestWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53896 ];

	UBioGamePropertyConditionalWeapon_execTestWeapon_Parms TestWeapon_Parms;
	TestWeapon_Parms.pWeaponItem = pWeaponItem;

	pFnTestWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestWeapon, &TestWeapon_Parms, NULL );

	pFnTestWeapon->FunctionFlags |= 0x400;

	return TestWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyConditionalImporter.LoadGamePropertyConditional
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UBioGamePropertyConditional* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// int                            nConditionalId                 ( CPF_Parm )
// class UBioGameProperty*        oOwner                         ( CPF_Parm )

class UBioGamePropertyConditional* UBioGamePropertyConditionalImporter::LoadGamePropertyConditional ( class UBio2DA* o2DA, int nConditionalId, class UBioGameProperty* oOwner )
{
	static UFunction* pFnLoadGamePropertyConditional = NULL;

	if ( ! pFnLoadGamePropertyConditional )
		pFnLoadGamePropertyConditional = (UFunction*) UObject::GObjObjects()->Data[ 53887 ];

	UBioGamePropertyConditionalImporter_execLoadGamePropertyConditional_Parms LoadGamePropertyConditional_Parms;
	LoadGamePropertyConditional_Parms.o2DA = o2DA;
	LoadGamePropertyConditional_Parms.nConditionalId = nConditionalId;
	LoadGamePropertyConditional_Parms.oOwner = oOwner;

	pFnLoadGamePropertyConditional->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGamePropertyConditional, &LoadGamePropertyConditional_Parms, NULL );

	pFnLoadGamePropertyConditional->FunctionFlags |= 0x400;

	return LoadGamePropertyConditional_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyContainer.ToString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sIndent                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UBioGamePropertyContainer::eventToString ( struct FString sIndent )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 41342 ];

	UBioGamePropertyContainer_eventToString_Parms ToString_Parms;
	memcpy ( &ToString_Parms.sIndent, &sIndent, 0x10 );

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyContainer.OnGPEvent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyContainer::OnGPEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnGPEvent = NULL;

	if ( ! pFnOnGPEvent )
		pFnOnGPEvent = (UFunction*) UObject::GObjObjects()->Data[ 41339 ];

	UBioGamePropertyContainer_execOnGPEvent_Parms OnGPEvent_Parms;
	OnGPEvent_Parms.eEvent = eEvent;
	OnGPEvent_Parms.pTarget = pTarget;

	pFnOnGPEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGPEvent, &OnGPEvent_Parms, NULL );

	pFnOnGPEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyContainer.ScaleToLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nLevel                         ( CPF_Parm )

void UBioGamePropertyContainer::eventScaleToLevel ( int nLevel )
{
	static UFunction* pFnScaleToLevel = NULL;

	if ( ! pFnScaleToLevel )
		pFnScaleToLevel = (UFunction*) UObject::GObjObjects()->Data[ 41336 ];

	UBioGamePropertyContainer_eventScaleToLevel_Parms ScaleToLevel_Parms;
	ScaleToLevel_Parms.nLevel = nLevel;

	this->ProcessEvent ( pFnScaleToLevel, &ScaleToLevel_Parms, NULL );
};

// Function SFXGame.BioGamePropertyContainer.ProcessCooldown
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGamePropertyContainer::eventProcessCooldown ( float fDeltaTime )
{
	static UFunction* pFnProcessCooldown = NULL;

	if ( ! pFnProcessCooldown )
		pFnProcessCooldown = (UFunction*) UObject::GObjObjects()->Data[ 41334 ];

	UBioGamePropertyContainer_eventProcessCooldown_Parms ProcessCooldown_Parms;
	ProcessCooldown_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnProcessCooldown, &ProcessCooldown_Parms, NULL );
};

// Function SFXGame.BioGamePropertyContainer.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioGamePropertyContainer::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 41332 ];

	UBioGamePropertyContainer_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyContainer.OnGamePropCooldownEnd
// [0x00020002] 
// Parameters infos:
// class UBioGameProperty*        pGameProperty                  ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// float                          fDeltaTimeRemaining            ( CPF_Parm )

void UBioGamePropertyContainer::OnGamePropCooldownEnd ( class UBioGameProperty* pGameProperty, unsigned char eTimingType, float fDeltaTimeRemaining )
{
	static UFunction* pFnOnGamePropCooldownEnd = NULL;

	if ( ! pFnOnGamePropCooldownEnd )
		pFnOnGamePropCooldownEnd = (UFunction*) UObject::GObjObjects()->Data[ 41328 ];

	UBioGamePropertyContainer_execOnGamePropCooldownEnd_Parms OnGamePropCooldownEnd_Parms;
	OnGamePropCooldownEnd_Parms.pGameProperty = pGameProperty;
	OnGamePropCooldownEnd_Parms.eTimingType = eTimingType;
	OnGamePropCooldownEnd_Parms.fDeltaTimeRemaining = fDeltaTimeRemaining;

	this->ProcessEvent ( pFnOnGamePropCooldownEnd, &OnGamePropCooldownEnd_Parms, NULL );
};

// Function SFXGame.BioGamePropertyContainer.AddGamePropertyToCountdown
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioGameProperty*        oGameProp                      ( CPF_Parm )
// float                          fCountdown                     ( CPF_Parm )

void UBioGamePropertyContainer::eventAddGamePropertyToCountdown ( class UBioGameProperty* oGameProp, float fCountdown )
{
	static UFunction* pFnAddGamePropertyToCountdown = NULL;

	if ( ! pFnAddGamePropertyToCountdown )
		pFnAddGamePropertyToCountdown = (UFunction*) UObject::GObjObjects()->Data[ 41323 ];

	UBioGamePropertyContainer_eventAddGamePropertyToCountdown_Parms AddGamePropertyToCountdown_Parms;
	AddGamePropertyToCountdown_Parms.oGameProp = oGameProp;
	AddGamePropertyToCountdown_Parms.fCountdown = fCountdown;

	this->ProcessEvent ( pFnAddGamePropertyToCountdown, &AddGamePropertyToCountdown_Parms, NULL );
};

// Function SFXGame.BioGamePropertyEffectLevelIterator.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBio2DA*                 o2DA                           ( CPF_Parm )
// int                            nKeyColumn                     ( CPF_Parm )
// int                            nKey                           ( CPF_Parm )

void UBioGamePropertyEffectLevelIterator::Initialize ( class UBio2DA* o2DA, int nKeyColumn, int nKey )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 53915 ];

	UBioGamePropertyEffectLevelIterator_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.o2DA = o2DA;
	Initialize_Parms.nKeyColumn = nKeyColumn;
	Initialize_Parms.nKey = nKey;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventDispatcher.ProcessQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioGamePropertyEventDispatcher::ProcessQueue ( )
{
	static UFunction* pFnProcessQueue = NULL;

	if ( ! pFnProcessQueue )
		pFnProcessQueue = (UFunction*) UObject::GObjObjects()->Data[ 41318 ];

	UBioGamePropertyEventDispatcher_execProcessQueue_Parms ProcessQueue_Parms;

	pFnProcessQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessQueue, &ProcessQueue_Parms, NULL );

	pFnProcessQueue->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventDispatcher.UnregisterGameProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        oGameProp                      ( CPF_Parm )

void UBioGamePropertyEventDispatcher::UnregisterGameProperty ( class UBioGameProperty* oGameProp )
{
	static UFunction* pFnUnregisterGameProperty = NULL;

	if ( ! pFnUnregisterGameProperty )
		pFnUnregisterGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41316 ];

	UBioGamePropertyEventDispatcher_execUnregisterGameProperty_Parms UnregisterGameProperty_Parms;
	UnregisterGameProperty_Parms.oGameProp = oGameProp;

	pFnUnregisterGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnregisterGameProperty, &UnregisterGameProperty_Parms, NULL );

	pFnUnregisterGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventDispatcher.RegisterGameProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        oGameProp                      ( CPF_Parm )

void UBioGamePropertyEventDispatcher::RegisterGameProperty ( class UBioGameProperty* oGameProp )
{
	static UFunction* pFnRegisterGameProperty = NULL;

	if ( ! pFnRegisterGameProperty )
		pFnRegisterGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41314 ];

	UBioGamePropertyEventDispatcher_execRegisterGameProperty_Parms RegisterGameProperty_Parms;
	RegisterGameProperty_Parms.oGameProp = oGameProp;

	pFnRegisterGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterGameProperty, &RegisterGameProperty_Parms, NULL );

	pFnRegisterGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventDispatcher.OnEvent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyEventDispatcher::OnEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnEvent = NULL;

	if ( ! pFnOnEvent )
		pFnOnEvent = (UFunction*) UObject::GObjObjects()->Data[ 41311 ];

	UBioGamePropertyEventDispatcher_execOnEvent_Parms OnEvent_Parms;
	OnEvent_Parms.eEvent = eEvent;
	OnEvent_Parms.pTarget = pTarget;

	pFnOnEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnEvent, &OnEvent_Parms, NULL );

	pFnOnEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventDispatcher.LogDebugInfo
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGamePropertyEventSet* pEvents                        ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyEventDispatcher::LogDebugInfo ( class UBioGamePropertyEventSet* pEvents, class UObject* pTarget )
{
	static UFunction* pFnLogDebugInfo = NULL;

	if ( ! pFnLogDebugInfo )
		pFnLogDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 41308 ];

	UBioGamePropertyEventDispatcher_execLogDebugInfo_Parms LogDebugInfo_Parms;
	LogDebugInfo_Parms.pEvents = pEvents;
	LogDebugInfo_Parms.pTarget = pTarget;

	pFnLogDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogDebugInfo, &LogDebugInfo_Parms, NULL );

	pFnLogDebugInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.Create3
// [0x00026802] ( FUNC_Event )
// Parameters infos:
// class UBioGamePropertyEventSet* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEvent1                        ( CPF_Parm )
// unsigned char                  eEvent2                        ( CPF_Parm )
// unsigned char                  eEvent3                        ( CPF_Parm )
// class UObject*                 oSource                        ( CPF_OptionalParm | CPF_Parm )

class UBioGamePropertyEventSet* UBioGamePropertyEventSet::eventCreate3 ( unsigned char eEvent1, unsigned char eEvent2, unsigned char eEvent3, class UObject* oSource )
{
	static UFunction* pFnCreate3 = NULL;

	if ( ! pFnCreate3 )
		pFnCreate3 = (UFunction*) UObject::GObjObjects()->Data[ 41014 ];

	UBioGamePropertyEventSet_eventCreate3_Parms Create3_Parms;
	Create3_Parms.eEvent1 = eEvent1;
	Create3_Parms.eEvent2 = eEvent2;
	Create3_Parms.eEvent3 = eEvent3;
	Create3_Parms.oSource = oSource;

	this->ProcessEvent ( pFnCreate3, &Create3_Parms, NULL );

	return Create3_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.Create2
// [0x00026802] ( FUNC_Event )
// Parameters infos:
// class UBioGamePropertyEventSet* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEvent1                        ( CPF_Parm )
// unsigned char                  eEvent2                        ( CPF_Parm )
// class UObject*                 oSource                        ( CPF_OptionalParm | CPF_Parm )

class UBioGamePropertyEventSet* UBioGamePropertyEventSet::eventCreate2 ( unsigned char eEvent1, unsigned char eEvent2, class UObject* oSource )
{
	static UFunction* pFnCreate2 = NULL;

	if ( ! pFnCreate2 )
		pFnCreate2 = (UFunction*) UObject::GObjObjects()->Data[ 41008 ];

	UBioGamePropertyEventSet_eventCreate2_Parms Create2_Parms;
	Create2_Parms.eEvent1 = eEvent1;
	Create2_Parms.eEvent2 = eEvent2;
	Create2_Parms.oSource = oSource;

	this->ProcessEvent ( pFnCreate2, &Create2_Parms, NULL );

	return Create2_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.Create1
// [0x00026802] ( FUNC_Event )
// Parameters infos:
// class UBioGamePropertyEventSet* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEvent1                        ( CPF_Parm )
// class UObject*                 oSource                        ( CPF_OptionalParm | CPF_Parm )

class UBioGamePropertyEventSet* UBioGamePropertyEventSet::eventCreate1 ( unsigned char eEvent1, class UObject* oSource )
{
	static UFunction* pFnCreate1 = NULL;

	if ( ! pFnCreate1 )
		pFnCreate1 = (UFunction*) UObject::GObjObjects()->Data[ 41003 ];

	UBioGamePropertyEventSet_eventCreate1_Parms Create1_Parms;
	Create1_Parms.eEvent1 = eEvent1;
	Create1_Parms.oSource = oSource;

	this->ProcessEvent ( pFnCreate1, &Create1_Parms, NULL );

	return Create1_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.CheckForAnyEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGamePropertyEventSet* oEvents                        ( CPF_Parm )

bool UBioGamePropertyEventSet::CheckForAnyEvents ( class UBioGamePropertyEventSet* oEvents )
{
	static UFunction* pFnCheckForAnyEvents = NULL;

	if ( ! pFnCheckForAnyEvents )
		pFnCheckForAnyEvents = (UFunction*) UObject::GObjObjects()->Data[ 41000 ];

	UBioGamePropertyEventSet_execCheckForAnyEvents_Parms CheckForAnyEvents_Parms;
	CheckForAnyEvents_Parms.oEvents = oEvents;

	pFnCheckForAnyEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForAnyEvents, &CheckForAnyEvents_Parms, NULL );

	pFnCheckForAnyEvents->FunctionFlags |= 0x400;

	return CheckForAnyEvents_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.CheckForAllEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGamePropertyEventSet* oEvents                        ( CPF_Parm )

bool UBioGamePropertyEventSet::CheckForAllEvents ( class UBioGamePropertyEventSet* oEvents )
{
	static UFunction* pFnCheckForAllEvents = NULL;

	if ( ! pFnCheckForAllEvents )
		pFnCheckForAllEvents = (UFunction*) UObject::GObjObjects()->Data[ 40997 ];

	UBioGamePropertyEventSet_execCheckForAllEvents_Parms CheckForAllEvents_Parms;
	CheckForAllEvents_Parms.oEvents = oEvents;

	pFnCheckForAllEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForAllEvents, &CheckForAllEvents_Parms, NULL );

	pFnCheckForAllEvents->FunctionFlags |= 0x400;

	return CheckForAllEvents_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.CheckForEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eEvent                         ( CPF_Parm )

bool UBioGamePropertyEventSet::CheckForEvent ( unsigned char eEvent )
{
	static UFunction* pFnCheckForEvent = NULL;

	if ( ! pFnCheckForEvent )
		pFnCheckForEvent = (UFunction*) UObject::GObjObjects()->Data[ 40994 ];

	UBioGamePropertyEventSet_execCheckForEvent_Parms CheckForEvent_Parms;
	CheckForEvent_Parms.eEvent = eEvent;

	pFnCheckForEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForEvent, &CheckForEvent_Parms, NULL );

	pFnCheckForEvent->FunctionFlags |= 0x400;

	return CheckForEvent_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyEventSet.RemoveEventSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGamePropertyEventSet* oEvents                        ( CPF_Parm )

void UBioGamePropertyEventSet::RemoveEventSet ( class UBioGamePropertyEventSet* oEvents )
{
	static UFunction* pFnRemoveEventSet = NULL;

	if ( ! pFnRemoveEventSet )
		pFnRemoveEventSet = (UFunction*) UObject::GObjObjects()->Data[ 40992 ];

	UBioGamePropertyEventSet_execRemoveEventSet_Parms RemoveEventSet_Parms;
	RemoveEventSet_Parms.oEvents = oEvents;

	pFnRemoveEventSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveEventSet, &RemoveEventSet_Parms, NULL );

	pFnRemoveEventSet->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.RemoveEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<unsigned char>   aEvents                        ( CPF_Parm | CPF_NeedCtorLink )

void UBioGamePropertyEventSet::RemoveEvents ( struct TArray<unsigned char> aEvents )
{
	static UFunction* pFnRemoveEvents = NULL;

	if ( ! pFnRemoveEvents )
		pFnRemoveEvents = (UFunction*) UObject::GObjObjects()->Data[ 40989 ];

	UBioGamePropertyEventSet_execRemoveEvents_Parms RemoveEvents_Parms;
	memcpy ( &RemoveEvents_Parms.aEvents, &aEvents, 0x10 );

	pFnRemoveEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveEvents, &RemoveEvents_Parms, NULL );

	pFnRemoveEvents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.RemoveEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )

void UBioGamePropertyEventSet::RemoveEvent ( unsigned char eEvent )
{
	static UFunction* pFnRemoveEvent = NULL;

	if ( ! pFnRemoveEvent )
		pFnRemoveEvent = (UFunction*) UObject::GObjObjects()->Data[ 40987 ];

	UBioGamePropertyEventSet_execRemoveEvent_Parms RemoveEvent_Parms;
	RemoveEvent_Parms.eEvent = eEvent;

	pFnRemoveEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveEvent, &RemoveEvent_Parms, NULL );

	pFnRemoveEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.AddEventSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGamePropertyEventSet* oEvents                        ( CPF_Parm )

void UBioGamePropertyEventSet::AddEventSet ( class UBioGamePropertyEventSet* oEvents )
{
	static UFunction* pFnAddEventSet = NULL;

	if ( ! pFnAddEventSet )
		pFnAddEventSet = (UFunction*) UObject::GObjObjects()->Data[ 40985 ];

	UBioGamePropertyEventSet_execAddEventSet_Parms AddEventSet_Parms;
	AddEventSet_Parms.oEvents = oEvents;

	pFnAddEventSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddEventSet, &AddEventSet_Parms, NULL );

	pFnAddEventSet->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.AddEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<unsigned char>   aEvents                        ( CPF_Parm | CPF_NeedCtorLink )

void UBioGamePropertyEventSet::AddEvents ( struct TArray<unsigned char> aEvents )
{
	static UFunction* pFnAddEvents = NULL;

	if ( ! pFnAddEvents )
		pFnAddEvents = (UFunction*) UObject::GObjObjects()->Data[ 40982 ];

	UBioGamePropertyEventSet_execAddEvents_Parms AddEvents_Parms;
	memcpy ( &AddEvents_Parms.aEvents, &aEvents, 0x10 );

	pFnAddEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddEvents, &AddEvents_Parms, NULL );

	pFnAddEvents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.AddEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )

void UBioGamePropertyEventSet::AddEvent ( unsigned char eEvent )
{
	static UFunction* pFnAddEvent = NULL;

	if ( ! pFnAddEvent )
		pFnAddEvent = (UFunction*) UObject::GObjObjects()->Data[ 40980 ];

	UBioGamePropertyEventSet_execAddEvent_Parms AddEvent_Parms;
	AddEvent_Parms.eEvent = eEvent;

	pFnAddEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddEvent, &AddEvent_Parms, NULL );

	pFnAddEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyEventSet.Clear
// [0x00020002] 
// Parameters infos:

void UBioGamePropertyEventSet::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 40979 ];

	UBioGamePropertyEventSet_execClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function SFXGame.BioGamePropertyHolderTraits.GetGPContainer
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioGamePropertyContainer* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pObject                        ( CPF_Parm )

class UBioGamePropertyContainer* UBioGamePropertyHolderTraits::eventGetGPContainer ( class UObject* pObject )
{
	static UFunction* pFnGetGPContainer = NULL;

	if ( ! pFnGetGPContainer )
		pFnGetGPContainer = (UFunction*) UObject::GObjObjects()->Data[ 53924 ];

	UBioGamePropertyHolderTraits_eventGetGPContainer_Parms GetGPContainer_Parms;
	GetGPContainer_Parms.pObject = pObject;

	this->ProcessEvent ( pFnGetGPContainer, &GetGPContainer_Parms, NULL );

	return GetGPContainer_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyHolderTraits.GetGPManager
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioGamePropertyManager* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oTarget                        ( CPF_Parm )

class UBioGamePropertyManager* UBioGamePropertyHolderTraits::eventGetGPManager ( class UObject* oTarget )
{
	static UFunction* pFnGetGPManager = NULL;

	if ( ! pFnGetGPManager )
		pFnGetGPManager = (UFunction*) UObject::GObjObjects()->Data[ 53919 ];

	UBioGamePropertyHolderTraits_eventGetGPManager_Parms GetGPManager_Parms;
	GetGPManager_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnGetGPManager, &GetGPManager_Parms, NULL );

	return GetGPManager_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyImporter.LoadGameProperty
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBioGPLoadData          oGPData                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class UBioGameProperty* UBioGamePropertyImporter::LoadGameProperty ( struct FBioGPLoadData* oGPData )
{
	static UFunction* pFnLoadGameProperty = NULL;

	if ( ! pFnLoadGameProperty )
		pFnLoadGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 53939 ];

	UBioGamePropertyImporter_execLoadGameProperty_Parms LoadGameProperty_Parms;

	pFnLoadGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameProperty, &LoadGameProperty_Parms, NULL );

	pFnLoadGameProperty->FunctionFlags |= 0x400;

	if ( oGPData )
		memcpy ( oGPData, &LoadGameProperty_Parms.oGPData, 0x34 );

	return LoadGameProperty_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.ToString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sIndent                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UBioGamePropertyManager::eventToString ( struct FString sIndent )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 41301 ];

	UBioGamePropertyManager_eventToString_Parms ToString_Parms;
	memcpy ( &ToString_Parms.sIndent, &sIndent, 0x10 );

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.IsGameEffectApplied
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  GameEffectClass                ( CPF_Parm )

bool UBioGamePropertyManager::IsGameEffectApplied ( class UClass* GameEffectClass )
{
	static UFunction* pFnIsGameEffectApplied = NULL;

	if ( ! pFnIsGameEffectApplied )
		pFnIsGameEffectApplied = (UFunction*) UObject::GObjObjects()->Data[ 41298 ];

	UBioGamePropertyManager_execIsGameEffectApplied_Parms IsGameEffectApplied_Parms;
	IsGameEffectApplied_Parms.GameEffectClass = GameEffectClass;

	pFnIsGameEffectApplied->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsGameEffectApplied, &IsGameEffectApplied_Parms, NULL );

	pFnIsGameEffectApplied->FunctionFlags |= 0x400;

	return IsGameEffectApplied_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.FindGamePropertyByEffectType
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  GameEffectClass                ( CPF_Parm )
// int                            nGamePropertyGroup             ( CPF_Parm )
// struct TArray<class UBioGameProperty*> aProperties                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioGamePropertyManager::FindGamePropertyByEffectType ( class UClass* GameEffectClass, int nGamePropertyGroup, struct TArray<class UBioGameProperty*>* aProperties )
{
	static UFunction* pFnFindGamePropertyByEffectType = NULL;

	if ( ! pFnFindGamePropertyByEffectType )
		pFnFindGamePropertyByEffectType = (UFunction*) UObject::GObjObjects()->Data[ 41292 ];

	UBioGamePropertyManager_execFindGamePropertyByEffectType_Parms FindGamePropertyByEffectType_Parms;
	FindGamePropertyByEffectType_Parms.GameEffectClass = GameEffectClass;
	FindGamePropertyByEffectType_Parms.nGamePropertyGroup = nGamePropertyGroup;

	pFnFindGamePropertyByEffectType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindGamePropertyByEffectType, &FindGamePropertyByEffectType_Parms, NULL );

	pFnFindGamePropertyByEffectType->FunctionFlags |= 0x400;

	if ( aProperties )
		memcpy ( aProperties, &FindGamePropertyByEffectType_Parms.aProperties, 0x10 );

	return FindGamePropertyByEffectType_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.FindGamePropertyByGroup
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nGamePropertyGroup             ( CPF_Parm )
// struct TArray<class UBioGameProperty*> aProperties                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioGamePropertyManager::FindGamePropertyByGroup ( int nGamePropertyGroup, struct TArray<class UBioGameProperty*>* aProperties )
{
	static UFunction* pFnFindGamePropertyByGroup = NULL;

	if ( ! pFnFindGamePropertyByGroup )
		pFnFindGamePropertyByGroup = (UFunction*) UObject::GObjObjects()->Data[ 41287 ];

	UBioGamePropertyManager_execFindGamePropertyByGroup_Parms FindGamePropertyByGroup_Parms;
	FindGamePropertyByGroup_Parms.nGamePropertyGroup = nGamePropertyGroup;

	pFnFindGamePropertyByGroup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindGamePropertyByGroup, &FindGamePropertyByGroup_Parms, NULL );

	pFnFindGamePropertyByGroup->FunctionFlags |= 0x400;

	if ( aProperties )
		memcpy ( aProperties, &FindGamePropertyByGroup_Parms.aProperties, 0x10 );

	return FindGamePropertyByGroup_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.FindGamePropertyByOwner
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oOwner                         ( CPF_Parm )
// int                            nGamePropertyGroup             ( CPF_Parm )
// struct TArray<class UBioGameProperty*> aProperties                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioGamePropertyManager::FindGamePropertyByOwner ( class AActor* oOwner, int nGamePropertyGroup, struct TArray<class UBioGameProperty*>* aProperties )
{
	static UFunction* pFnFindGamePropertyByOwner = NULL;

	if ( ! pFnFindGamePropertyByOwner )
		pFnFindGamePropertyByOwner = (UFunction*) UObject::GObjObjects()->Data[ 41281 ];

	UBioGamePropertyManager_execFindGamePropertyByOwner_Parms FindGamePropertyByOwner_Parms;
	FindGamePropertyByOwner_Parms.oOwner = oOwner;
	FindGamePropertyByOwner_Parms.nGamePropertyGroup = nGamePropertyGroup;

	pFnFindGamePropertyByOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindGamePropertyByOwner, &FindGamePropertyByOwner_Parms, NULL );

	pFnFindGamePropertyByOwner->FunctionFlags |= 0x400;

	if ( aProperties )
		memcpy ( aProperties, &FindGamePropertyByOwner_Parms.aProperties, 0x10 );

	return FindGamePropertyByOwner_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.FindGamePropertyByName
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmName                         ( CPF_Parm )
// int                            nGamePropertyGroup             ( CPF_Parm )
// struct TArray<class UBioGameProperty*> aProperties                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioGamePropertyManager::FindGamePropertyByName ( struct FName nmName, int nGamePropertyGroup, struct TArray<class UBioGameProperty*>* aProperties )
{
	static UFunction* pFnFindGamePropertyByName = NULL;

	if ( ! pFnFindGamePropertyByName )
		pFnFindGamePropertyByName = (UFunction*) UObject::GObjObjects()->Data[ 41275 ];

	UBioGamePropertyManager_execFindGamePropertyByName_Parms FindGamePropertyByName_Parms;
	memcpy ( &FindGamePropertyByName_Parms.nmName, &nmName, 0x8 );
	FindGamePropertyByName_Parms.nGamePropertyGroup = nGamePropertyGroup;

	pFnFindGamePropertyByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindGamePropertyByName, &FindGamePropertyByName_Parms, NULL );

	pFnFindGamePropertyByName->FunctionFlags |= 0x400;

	if ( aProperties )
		memcpy ( aProperties, &FindGamePropertyByName_Parms.aProperties, 0x10 );

	return FindGamePropertyByName_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.GetOwnerObject
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UObject* UBioGamePropertyManager::GetOwnerObject ( )
{
	static UFunction* pFnGetOwnerObject = NULL;

	if ( ! pFnGetOwnerObject )
		pFnGetOwnerObject = (UFunction*) UObject::GObjObjects()->Data[ 41270 ];

	UBioGamePropertyManager_execGetOwnerObject_Parms GetOwnerObject_Parms;

	pFnGetOwnerObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOwnerObject, &GetOwnerObject_Parms, NULL );

	pFnGetOwnerObject->FunctionFlags |= 0x400;

	return GetOwnerObject_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyManager.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDelta                         ( CPF_Parm )

void UBioGamePropertyManager::Tick ( float fDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 41272 ];

	UBioGamePropertyManager_execTick_Parms Tick_Parms;
	Tick_Parms.fDelta = fDelta;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyManager.TickInternal
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// float                          fDelta                         ( CPF_Parm )

void UBioGamePropertyManager::eventTickInternal ( float fDelta )
{
	static UFunction* pFnTickInternal = NULL;

	if ( ! pFnTickInternal )
		pFnTickInternal = (UFunction*) UObject::GObjObjects()->Data[ 41265 ];

	UBioGamePropertyManager_eventTickInternal_Parms TickInternal_Parms;
	TickInternal_Parms.fDelta = fDelta;

	this->ProcessEvent ( pFnTickInternal, &TickInternal_Parms, NULL );
};

// Function SFXGame.BioGamePropertyManager.OnGPTimeOut
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UBioGameProperty*        pGameProperty                  ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// float                          fDeltaTimeRemaining            ( CPF_Parm )

void UBioGamePropertyManager::OnGPTimeOut ( class UBioGameProperty* pGameProperty, unsigned char eTimingType, float fDeltaTimeRemaining )
{
	static UFunction* pFnOnGPTimeOut = NULL;

	if ( ! pFnOnGPTimeOut )
		pFnOnGPTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 41261 ];

	UBioGamePropertyManager_execOnGPTimeOut_Parms OnGPTimeOut_Parms;
	OnGPTimeOut_Parms.pGameProperty = pGameProperty;
	OnGPTimeOut_Parms.eTimingType = eTimingType;
	OnGPTimeOut_Parms.fDeltaTimeRemaining = fDeltaTimeRemaining;

	this->ProcessEvent ( pFnOnGPTimeOut, &OnGPTimeOut_Parms, NULL );
};

// Function SFXGame.BioGamePropertyManager.UnapplyGameProperty
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        pGP                            ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyManager::UnapplyGameProperty ( class UBioGameProperty* pGP, class UObject* pTarget )
{
	static UFunction* pFnUnapplyGameProperty = NULL;

	if ( ! pFnUnapplyGameProperty )
		pFnUnapplyGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41258 ];

	UBioGamePropertyManager_execUnapplyGameProperty_Parms UnapplyGameProperty_Parms;
	UnapplyGameProperty_Parms.pGP = pGP;
	UnapplyGameProperty_Parms.pTarget = pTarget;

	pFnUnapplyGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapplyGameProperty, &UnapplyGameProperty_Parms, NULL );

	pFnUnapplyGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyManager.ApplyGameProperty
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        pGP                            ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyManager::ApplyGameProperty ( class UBioGameProperty* pGP, class UObject* pTarget )
{
	static UFunction* pFnApplyGameProperty = NULL;

	if ( ! pFnApplyGameProperty )
		pFnApplyGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41255 ];

	UBioGamePropertyManager_execApplyGameProperty_Parms ApplyGameProperty_Parms;
	ApplyGameProperty_Parms.pGP = pGP;
	ApplyGameProperty_Parms.pTarget = pTarget;

	pFnApplyGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyGameProperty, &ApplyGameProperty_Parms, NULL );

	pFnApplyGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyManager.EvaluateGameProperty
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        pGP                            ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioGamePropertyManager::EvaluateGameProperty ( class UBioGameProperty* pGP, class UObject* pTarget )
{
	static UFunction* pFnEvaluateGameProperty = NULL;

	if ( ! pFnEvaluateGameProperty )
		pFnEvaluateGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41252 ];

	UBioGamePropertyManager_execEvaluateGameProperty_Parms EvaluateGameProperty_Parms;
	EvaluateGameProperty_Parms.pGP = pGP;
	EvaluateGameProperty_Parms.pTarget = pTarget;

	pFnEvaluateGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEvaluateGameProperty, &EvaluateGameProperty_Parms, NULL );

	pFnEvaluateGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyScalingData.ScaleProperties
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nLevel                         ( CPF_Parm )

void UBioGamePropertyScalingData::ScaleProperties ( int nLevel )
{
	static UFunction* pFnScaleProperties = NULL;

	if ( ! pFnScaleProperties )
		pFnScaleProperties = (UFunction*) UObject::GObjObjects()->Data[ 53946 ];

	UBioGamePropertyScalingData_execScaleProperties_Parms ScaleProperties_Parms;
	ScaleProperties_Parms.nLevel = nLevel;

	pFnScaleProperties->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleProperties, &ScaleProperties_Parms, NULL );

	pFnScaleProperties->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.ToString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sIndent                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UBioGamePropertyTimer::eventToString ( struct FString sIndent )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 41235 ];

	UBioGamePropertyTimer_eventToString_Parms ToString_Parms;
	memcpy ( &ToString_Parms.sIndent, &sIndent, 0x10 );

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyTimer.InvokeDelegate
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )
// class UBioGameProperty*        pGP                            ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// float                          fDeltaTimeRemaining            ( CPF_Parm )

void UBioGamePropertyTimer::eventInvokeDelegate ( struct FScriptDelegate pDelegate, class UBioGameProperty* pGP, unsigned char eTimingType, float fDeltaTimeRemaining )
{
	static UFunction* pFnInvokeDelegate = NULL;

	if ( ! pFnInvokeDelegate )
		pFnInvokeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 41229 ];

	UBioGamePropertyTimer_eventInvokeDelegate_Parms InvokeDelegate_Parms;
	memcpy ( &InvokeDelegate_Parms.pDelegate, &pDelegate, 0x10 );
	InvokeDelegate_Parms.pGP = pGP;
	InvokeDelegate_Parms.eTimingType = eTimingType;
	InvokeDelegate_Parms.fDeltaTimeRemaining = fDeltaTimeRemaining;

	this->ProcessEvent ( pFnInvokeDelegate, &InvokeDelegate_Parms, NULL );
};

// Function SFXGame.BioGamePropertyTimer.RemoveAllNonStatic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         pDelegate                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioGamePropertyTimer::RemoveAllNonStatic ( struct FScriptDelegate pDelegate )
{
	static UFunction* pFnRemoveAllNonStatic = NULL;

	if ( ! pFnRemoveAllNonStatic )
		pFnRemoveAllNonStatic = (UFunction*) UObject::GObjObjects()->Data[ 41227 ];

	UBioGamePropertyTimer_execRemoveAllNonStatic_Parms RemoveAllNonStatic_Parms;
	memcpy ( &RemoveAllNonStatic_Parms.pDelegate, &pDelegate, 0x10 );

	pFnRemoveAllNonStatic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveAllNonStatic, &RemoveAllNonStatic_Parms, NULL );

	pFnRemoveAllNonStatic->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.GetTimeForGamePropertyByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmGamePropertyName             ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// class UBioGameProperty*        oGameProperty                  ( CPF_Parm | CPF_OutParm )

float UBioGamePropertyTimer::GetTimeForGamePropertyByName ( struct FName nmGamePropertyName, unsigned char eTimingType, class UBioGameProperty** oGameProperty )
{
	static UFunction* pFnGetTimeForGamePropertyByName = NULL;

	if ( ! pFnGetTimeForGamePropertyByName )
		pFnGetTimeForGamePropertyByName = (UFunction*) UObject::GObjObjects()->Data[ 41222 ];

	UBioGamePropertyTimer_execGetTimeForGamePropertyByName_Parms GetTimeForGamePropertyByName_Parms;
	memcpy ( &GetTimeForGamePropertyByName_Parms.nmGamePropertyName, &nmGamePropertyName, 0x8 );
	GetTimeForGamePropertyByName_Parms.eTimingType = eTimingType;

	pFnGetTimeForGamePropertyByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimeForGamePropertyByName, &GetTimeForGamePropertyByName_Parms, NULL );

	pFnGetTimeForGamePropertyByName->FunctionFlags |= 0x400;

	if ( oGameProperty )
		*oGameProperty = GetTimeForGamePropertyByName_Parms.oGameProperty;

	return GetTimeForGamePropertyByName_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyTimer.GetTimeForGameProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGameProperty*        oGameProp                      ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )

float UBioGamePropertyTimer::GetTimeForGameProperty ( class UBioGameProperty* oGameProp, unsigned char eTimingType )
{
	static UFunction* pFnGetTimeForGameProperty = NULL;

	if ( ! pFnGetTimeForGameProperty )
		pFnGetTimeForGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41218 ];

	UBioGamePropertyTimer_execGetTimeForGameProperty_Parms GetTimeForGameProperty_Parms;
	GetTimeForGameProperty_Parms.oGameProp = oGameProp;
	GetTimeForGameProperty_Parms.eTimingType = eTimingType;

	pFnGetTimeForGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimeForGameProperty, &GetTimeForGameProperty_Parms, NULL );

	pFnGetTimeForGameProperty->FunctionFlags |= 0x400;

	return GetTimeForGameProperty_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyTimer.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )
// struct FScriptDelegate         oOnRemoveGameProperty          ( CPF_Parm | CPF_NeedCtorLink )

void UBioGamePropertyTimer::Tick ( float fDeltaTime, struct FScriptDelegate oOnRemoveGameProperty )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 41215 ];

	UBioGamePropertyTimer_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;
	memcpy ( &Tick_Parms.oOnRemoveGameProperty, &oOnRemoveGameProperty, 0x10 );

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.AppendStaticGameProperty
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        oGP                            ( CPF_Parm )

void UBioGamePropertyTimer::AppendStaticGameProperty ( class UBioGameProperty* oGP )
{
	static UFunction* pFnAppendStaticGameProperty = NULL;

	if ( ! pFnAppendStaticGameProperty )
		pFnAppendStaticGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41213 ];

	UBioGamePropertyTimer_execAppendStaticGameProperty_Parms AppendStaticGameProperty_Parms;
	AppendStaticGameProperty_Parms.oGP = oGP;

	pFnAppendStaticGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppendStaticGameProperty, &AppendStaticGameProperty_Parms, NULL );

	pFnAppendStaticGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.FindGamePropertyIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGameProperty*        oGP                            ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )

int UBioGamePropertyTimer::FindGamePropertyIndex ( class UBioGameProperty* oGP, unsigned char eTimingType )
{
	static UFunction* pFnFindGamePropertyIndex = NULL;

	if ( ! pFnFindGamePropertyIndex )
		pFnFindGamePropertyIndex = (UFunction*) UObject::GObjObjects()->Data[ 41209 ];

	UBioGamePropertyTimer_execFindGamePropertyIndex_Parms FindGamePropertyIndex_Parms;
	FindGamePropertyIndex_Parms.oGP = oGP;
	FindGamePropertyIndex_Parms.eTimingType = eTimingType;

	pFnFindGamePropertyIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindGamePropertyIndex, &FindGamePropertyIndex_Parms, NULL );

	pFnFindGamePropertyIndex->FunctionFlags |= 0x400;

	return FindGamePropertyIndex_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyTimer.RemoveGamePropertyAtIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void UBioGamePropertyTimer::RemoveGamePropertyAtIndex ( int nIndex )
{
	static UFunction* pFnRemoveGamePropertyAtIndex = NULL;

	if ( ! pFnRemoveGamePropertyAtIndex )
		pFnRemoveGamePropertyAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 41207 ];

	UBioGamePropertyTimer_execRemoveGamePropertyAtIndex_Parms RemoveGamePropertyAtIndex_Parms;
	RemoveGamePropertyAtIndex_Parms.nIndex = nIndex;

	pFnRemoveGamePropertyAtIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveGamePropertyAtIndex, &RemoveGamePropertyAtIndex_Parms, NULL );

	pFnRemoveGamePropertyAtIndex->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.RemoveGameProperty
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioGameProperty*        oGP                            ( CPF_Parm )

bool UBioGamePropertyTimer::RemoveGameProperty ( class UBioGameProperty* oGP )
{
	static UFunction* pFnRemoveGameProperty = NULL;

	if ( ! pFnRemoveGameProperty )
		pFnRemoveGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41204 ];

	UBioGamePropertyTimer_execRemoveGameProperty_Parms RemoveGameProperty_Parms;
	RemoveGameProperty_Parms.oGP = oGP;

	pFnRemoveGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveGameProperty, &RemoveGameProperty_Parms, NULL );

	pFnRemoveGameProperty->FunctionFlags |= 0x400;

	return RemoveGameProperty_Parms.ReturnValue;
};

// Function SFXGame.BioGamePropertyTimer.InsertGameProperty
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        oGP                            ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// unsigned long                  bFrameTicked                   ( CPF_OptionalParm | CPF_Parm )

void UBioGamePropertyTimer::InsertGameProperty ( class UBioGameProperty* oGP, float fTime, unsigned char eTimingType, unsigned long bFrameTicked )
{
	static UFunction* pFnInsertGameProperty = NULL;

	if ( ! pFnInsertGameProperty )
		pFnInsertGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41199 ];

	UBioGamePropertyTimer_execInsertGameProperty_Parms InsertGameProperty_Parms;
	InsertGameProperty_Parms.oGP = oGP;
	InsertGameProperty_Parms.fTime = fTime;
	InsertGameProperty_Parms.eTimingType = eTimingType;
	InsertGameProperty_Parms.bFrameTicked = bFrameTicked;

	pFnInsertGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInsertGameProperty, &InsertGameProperty_Parms, NULL );

	pFnInsertGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGamePropertyTimer.OnRemoveGameProperty
// [0x00120000] 
// Parameters infos:
// class UBioGameProperty*        pGP                            ( CPF_Parm )
// unsigned char                  eTimingType                    ( CPF_Parm )
// float                          fDeltaTimeRemaining            ( CPF_Parm )

void UBioGamePropertyTimer::OnRemoveGameProperty ( class UBioGameProperty* pGP, unsigned char eTimingType, float fDeltaTimeRemaining )
{
	static UFunction* pFnOnRemoveGameProperty = NULL;

	if ( ! pFnOnRemoveGameProperty )
		pFnOnRemoveGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 41195 ];

	UBioGamePropertyTimer_execOnRemoveGameProperty_Parms OnRemoveGameProperty_Parms;
	OnRemoveGameProperty_Parms.pGP = pGP;
	OnRemoveGameProperty_Parms.eTimingType = eTimingType;
	OnRemoveGameProperty_Parms.fDeltaTimeRemaining = fDeltaTimeRemaining;

	this->ProcessEvent ( pFnOnRemoveGameProperty, &OnRemoveGameProperty_Parms, NULL );
};

// Function SFXGame.BioGUIBox.Draw
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioGUIBox::Draw ( class UCanvas* oCanvas )
{
	static UFunction* pFnDraw = NULL;

	if ( ! pFnDraw )
		pFnDraw = (UFunction*) UObject::GObjObjects()->Data[ 54246 ];

	UBioGUIBox_execDraw_Parms Draw_Parms;
	Draw_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnDraw, &Draw_Parms, NULL );
};

// Function SFXGame.BioGUIBox.SetFont
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UFont*                   Font                           ( CPF_Parm )

void UBioGUIBox::SetFont ( class UFont* Font )
{
	static UFunction* pFnSetFont = NULL;

	if ( ! pFnSetFont )
		pFnSetFont = (UFunction*) UObject::GObjObjects()->Data[ 54244 ];

	UBioGUIBox_execSetFont_Parms SetFont_Parms;
	SetFont_Parms.Font = Font;

	pFnSetFont->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFont, &SetFont_Parms, NULL );

	pFnSetFont->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGUIBox.PopCanvasProperties
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioGUIBox::PopCanvasProperties ( class UCanvas* oCanvas )
{
	static UFunction* pFnPopCanvasProperties = NULL;

	if ( ! pFnPopCanvasProperties )
		pFnPopCanvasProperties = (UFunction*) UObject::GObjObjects()->Data[ 54242 ];

	UBioGUIBox_execPopCanvasProperties_Parms PopCanvasProperties_Parms;
	PopCanvasProperties_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnPopCanvasProperties, &PopCanvasProperties_Parms, NULL );
};

// Function SFXGame.BioGUIBox.PushCanvasProperties
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioGUIBox::PushCanvasProperties ( class UCanvas* oCanvas )
{
	static UFunction* pFnPushCanvasProperties = NULL;

	if ( ! pFnPushCanvasProperties )
		pFnPushCanvasProperties = (UFunction*) UObject::GObjObjects()->Data[ 54239 ];

	UBioGUIBox_execPushCanvasProperties_Parms PushCanvasProperties_Parms;
	PushCanvasProperties_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnPushCanvasProperties, &PushCanvasProperties_Parms, NULL );
};

// Function SFXGame.BioGUIBox.RenderContent
// [0x00080000] 
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioGUIBox::RenderContent ( class UCanvas* oCanvas )
{
	static UFunction* pFnRenderContent = NULL;

	if ( ! pFnRenderContent )
		pFnRenderContent = (UFunction*) UObject::GObjObjects()->Data[ 54237 ];

	UBioGUIBox_execRenderContent_Parms RenderContent_Parms;
	RenderContent_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnRenderContent, &RenderContent_Parms, NULL );
};

// Function SFXGame.BioGUIBox.ComputeDrawParameters
// [0x00080000] 
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioGUIBox::ComputeDrawParameters ( class UCanvas* oCanvas )
{
	static UFunction* pFnComputeDrawParameters = NULL;

	if ( ! pFnComputeDrawParameters )
		pFnComputeDrawParameters = (UFunction*) UObject::GObjObjects()->Data[ 54235 ];

	UBioGUIBox_execComputeDrawParameters_Parms ComputeDrawParameters_Parms;
	ComputeDrawParameters_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnComputeDrawParameters, &ComputeDrawParameters_Parms, NULL );
};

// Function SFXGame.BioGUIBox.ShouldRender
// [0x00080000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioGUIBox::ShouldRender ( )
{
	static UFunction* pFnShouldRender = NULL;

	if ( ! pFnShouldRender )
		pFnShouldRender = (UFunction*) UObject::GObjObjects()->Data[ 54233 ];

	UBioGUIBox_execShouldRender_Parms ShouldRender_Parms;

	this->ProcessEvent ( pFnShouldRender, &ShouldRender_Parms, NULL );

	return ShouldRender_Parms.ReturnValue;
};

// Function SFXGame.BioMessageBox.PageUp
// [0x00020002] 
// Parameters infos:

void UBioMessageBox::PageUp ( )
{
	static UFunction* pFnPageUp = NULL;

	if ( ! pFnPageUp )
		pFnPageUp = (UFunction*) UObject::GObjObjects()->Data[ 54288 ];

	UBioMessageBox_execPageUp_Parms PageUp_Parms;

	this->ProcessEvent ( pFnPageUp, &PageUp_Parms, NULL );
};

// Function SFXGame.BioMessageBox.PageDown
// [0x00020002] 
// Parameters infos:

void UBioMessageBox::PageDown ( )
{
	static UFunction* pFnPageDown = NULL;

	if ( ! pFnPageDown )
		pFnPageDown = (UFunction*) UObject::GObjObjects()->Data[ 54287 ];

	UBioMessageBox_execPageDown_Parms PageDown_Parms;

	this->ProcessEvent ( pFnPageDown, &PageDown_Parms, NULL );
};

// Function SFXGame.BioMessageBox.ScrollUp
// [0x00020002] 
// Parameters infos:

void UBioMessageBox::ScrollUp ( )
{
	static UFunction* pFnScrollUp = NULL;

	if ( ! pFnScrollUp )
		pFnScrollUp = (UFunction*) UObject::GObjObjects()->Data[ 54286 ];

	UBioMessageBox_execScrollUp_Parms ScrollUp_Parms;

	this->ProcessEvent ( pFnScrollUp, &ScrollUp_Parms, NULL );
};

// Function SFXGame.BioMessageBox.ScrollDown
// [0x00020002] 
// Parameters infos:

void UBioMessageBox::ScrollDown ( )
{
	static UFunction* pFnScrollDown = NULL;

	if ( ! pFnScrollDown )
		pFnScrollDown = (UFunction*) UObject::GObjObjects()->Data[ 54285 ];

	UBioMessageBox_execScrollDown_Parms ScrollDown_Parms;

	this->ProcessEvent ( pFnScrollDown, &ScrollDown_Parms, NULL );
};

// Function SFXGame.BioMessageBox.RenderContent
// [0x00080002] 
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioMessageBox::RenderContent ( class UCanvas* oCanvas )
{
	static UFunction* pFnRenderContent = NULL;

	if ( ! pFnRenderContent )
		pFnRenderContent = (UFunction*) UObject::GObjObjects()->Data[ 54282 ];

	UBioMessageBox_execRenderContent_Parms RenderContent_Parms;
	RenderContent_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnRenderContent, &RenderContent_Parms, NULL );
};

// Function SFXGame.BioMessageBox.HasText
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioMessageBox::eventHasText ( )
{
	static UFunction* pFnHasText = NULL;

	if ( ! pFnHasText )
		pFnHasText = (UFunction*) UObject::GObjObjects()->Data[ 54279 ];

	UBioMessageBox_eventHasText_Parms HasText_Parms;

	this->ProcessEvent ( pFnHasText, &HasText_Parms, NULL );

	return HasText_Parms.ReturnValue;
};

// Function SFXGame.BioMessageBox.SetTextArray
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FString>  aText                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioMessageBox::SetTextArray ( struct TArray<struct FString>* aText )
{
	static UFunction* pFnSetTextArray = NULL;

	if ( ! pFnSetTextArray )
		pFnSetTextArray = (UFunction*) UObject::GObjObjects()->Data[ 54276 ];

	UBioMessageBox_execSetTextArray_Parms SetTextArray_Parms;

	pFnSetTextArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTextArray, &SetTextArray_Parms, NULL );

	pFnSetTextArray->FunctionFlags |= 0x400;

	if ( aText )
		memcpy ( aText, &SetTextArray_Parms.aText, 0x10 );
};

// Function SFXGame.BioMessageBox.SetText
// [0x00020002] 
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UBioMessageBox::SetText ( struct FString S )
{
	static UFunction* pFnSetText = NULL;

	if ( ! pFnSetText )
		pFnSetText = (UFunction*) UObject::GObjObjects()->Data[ 54274 ];

	UBioMessageBox_execSetText_Parms SetText_Parms;
	memcpy ( &SetText_Parms.S, &S, 0x10 );

	this->ProcessEvent ( pFnSetText, &SetText_Parms, NULL );
};

// Function SFXGame.BioMessageBox.ShouldRender
// [0x00080002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioMessageBox::ShouldRender ( )
{
	static UFunction* pFnShouldRender = NULL;

	if ( ! pFnShouldRender )
		pFnShouldRender = (UFunction*) UObject::GObjObjects()->Data[ 54272 ];

	UBioMessageBox_execShouldRender_Parms ShouldRender_Parms;

	this->ProcessEvent ( pFnShouldRender, &ShouldRender_Parms, NULL );

	return ShouldRender_Parms.ReturnValue;
};

// Function SFXGame.BioMessageBox.ComputeDrawParameters
// [0x00080002] 
// Parameters infos:
// class UCanvas*                 oCanvas                        ( CPF_Parm )

void UBioMessageBox::ComputeDrawParameters ( class UCanvas* oCanvas )
{
	static UFunction* pFnComputeDrawParameters = NULL;

	if ( ! pFnComputeDrawParameters )
		pFnComputeDrawParameters = (UFunction*) UObject::GObjObjects()->Data[ 54262 ];

	UBioMessageBox_execComputeDrawParameters_Parms ComputeDrawParameters_Parms;
	ComputeDrawParameters_Parms.oCanvas = oCanvas;

	this->ProcessEvent ( pFnComputeDrawParameters, &ComputeDrawParameters_Parms, NULL );
};

// Function SFXGame.BioHUD.ProfileCamera
// [0x00020002] 
// Parameters infos:

void ABioHUD::ProfileCamera ( )
{
	static UFunction* pFnProfileCamera = NULL;

	if ( ! pFnProfileCamera )
		pFnProfileCamera = (UFunction*) UObject::GObjObjects()->Data[ 54639 ];

	ABioHUD_execProfileCamera_Parms ProfileCamera_Parms;

	this->ProcessEvent ( pFnProfileCamera, &ProfileCamera_Parms, NULL );
};

// Function SFXGame.BioHUD.ShowPawnAnimNodeDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )
// struct FName                   nmStartingPoint                ( CPF_Parm )

void ABioHUD::ShowPawnAnimNodeDebug ( class UClass* aClass, struct FName nmStartingPoint )
{
	static UFunction* pFnShowPawnAnimNodeDebug = NULL;

	if ( ! pFnShowPawnAnimNodeDebug )
		pFnShowPawnAnimNodeDebug = (UFunction*) UObject::GObjObjects()->Data[ 54632 ];

	ABioHUD_execShowPawnAnimNodeDebug_Parms ShowPawnAnimNodeDebug_Parms;
	ShowPawnAnimNodeDebug_Parms.aClass = aClass;
	memcpy ( &ShowPawnAnimNodeDebug_Parms.nmStartingPoint, &nmStartingPoint, 0x8 );

	this->ProcessEvent ( pFnShowPawnAnimNodeDebug, &ShowPawnAnimNodeDebug_Parms, NULL );
};

// Function SFXGame.BioHUD.ShowWeapAnimNodeDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmStartingPoint                ( CPF_Parm )

void ABioHUD::ShowWeapAnimNodeDebug ( struct FName nmStartingPoint )
{
	static UFunction* pFnShowWeapAnimNodeDebug = NULL;

	if ( ! pFnShowWeapAnimNodeDebug )
		pFnShowWeapAnimNodeDebug = (UFunction*) UObject::GObjObjects()->Data[ 54630 ];

	ABioHUD_execShowWeapAnimNodeDebug_Parms ShowWeapAnimNodeDebug_Parms;
	memcpy ( &ShowWeapAnimNodeDebug_Parms.nmStartingPoint, &nmStartingPoint, 0x8 );

	this->ProcessEvent ( pFnShowWeapAnimNodeDebug, &ShowWeapAnimNodeDebug_Parms, NULL );
};

// Function SFXGame.BioHUD.ShowAnimNodeDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   nmStartingPoint                ( CPF_Parm )

void ABioHUD::ShowAnimNodeDebug ( struct FName nmStartingPoint )
{
	static UFunction* pFnShowAnimNodeDebug = NULL;

	if ( ! pFnShowAnimNodeDebug )
		pFnShowAnimNodeDebug = (UFunction*) UObject::GObjObjects()->Data[ 54625 ];

	ABioHUD_execShowAnimNodeDebug_Parms ShowAnimNodeDebug_Parms;
	memcpy ( &ShowAnimNodeDebug_Parms.nmStartingPoint, &nmStartingPoint, 0x8 );

	this->ProcessEvent ( pFnShowAnimNodeDebug, &ShowAnimNodeDebug_Parms, NULL );
};

// Function SFXGame.BioHUD.UpdateActorInfo
// [0x00020002] 
// Parameters infos:

void ABioHUD::UpdateActorInfo ( )
{
	static UFunction* pFnUpdateActorInfo = NULL;

	if ( ! pFnUpdateActorInfo )
		pFnUpdateActorInfo = (UFunction*) UObject::GObjObjects()->Data[ 54612 ];

	ABioHUD_execUpdateActorInfo_Parms UpdateActorInfo_Parms;

	this->ProcessEvent ( pFnUpdateActorInfo, &UpdateActorInfo_Parms, NULL );
};

// Function SFXGame.BioHUD.HideLocation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioHUD::HideLocation ( )
{
	static UFunction* pFnHideLocation = NULL;

	if ( ! pFnHideLocation )
		pFnHideLocation = (UFunction*) UObject::GObjObjects()->Data[ 54611 ];

	ABioHUD_execHideLocation_Parms HideLocation_Parms;

	this->ProcessEvent ( pFnHideLocation, &HideLocation_Parms, NULL );
};

// Function SFXGame.BioHUD.ShowLocation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioHUD::ShowLocation ( )
{
	static UFunction* pFnShowLocation = NULL;

	if ( ! pFnShowLocation )
		pFnShowLocation = (UFunction*) UObject::GObjObjects()->Data[ 54610 ];

	ABioHUD_execShowLocation_Parms ShowLocation_Parms;

	this->ProcessEvent ( pFnShowLocation, &ShowLocation_Parms, NULL );
};

// Function SFXGame.BioHUD.LockActorInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioHUD::LockActorInfo ( )
{
	static UFunction* pFnLockActorInfo = NULL;

	if ( ! pFnLockActorInfo )
		pFnLockActorInfo = (UFunction*) UObject::GObjObjects()->Data[ 54604 ];

	ABioHUD_execLockActorInfo_Parms LockActorInfo_Parms;

	this->ProcessEvent ( pFnLockActorInfo, &LockActorInfo_Parms, NULL );
};

// Function SFXGame.BioHUD.DisplayActorInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioHUD::DisplayActorInfo ( )
{
	static UFunction* pFnDisplayActorInfo = NULL;

	if ( ! pFnDisplayActorInfo )
		pFnDisplayActorInfo = (UFunction*) UObject::GObjObjects()->Data[ 54603 ];

	ABioHUD_execDisplayActorInfo_Parms DisplayActorInfo_Parms;

	this->ProcessEvent ( pFnDisplayActorInfo, &DisplayActorInfo_Parms, NULL );
};

// Function SFXGame.BioHUD.LoadGUIResources
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioHUD::LoadGUIResources ( )
{
	static UFunction* pFnLoadGUIResources = NULL;

	if ( ! pFnLoadGUIResources )
		pFnLoadGUIResources = (UFunction*) UObject::GObjObjects()->Data[ 54602 ];

	ABioHUD_execLoadGUIResources_Parms LoadGUIResources_Parms;

	pFnLoadGUIResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGUIResources, &LoadGUIResources_Parms, NULL );

	pFnLoadGUIResources->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.SetGUITexture
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 sMaterial                      ( CPF_Parm | CPF_NeedCtorLink )

void ABioHUD::SetGUITexture ( struct FString sMaterial )
{
	static UFunction* pFnSetGUITexture = NULL;

	if ( ! pFnSetGUITexture )
		pFnSetGUITexture = (UFunction*) UObject::GObjObjects()->Data[ 54600 ];

	ABioHUD_execSetGUITexture_Parms SetGUITexture_Parms;
	memcpy ( &SetGUITexture_Parms.sMaterial, &sMaterial, 0x10 );

	this->ProcessEvent ( pFnSetGUITexture, &SetGUITexture_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawTextWithColor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 valuename                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FColor                  LabelColor                     ( CPF_Parm )
// struct FColor                  DataColor                      ( CPF_Parm )

void ABioHUD::eventDrawTextWithColor ( struct FString valuename, struct FString Value, struct FColor LabelColor, struct FColor DataColor )
{
	static UFunction* pFnDrawTextWithColor = NULL;

	if ( ! pFnDrawTextWithColor )
		pFnDrawTextWithColor = (UFunction*) UObject::GObjObjects()->Data[ 54588 ];

	ABioHUD_eventDrawTextWithColor_Parms DrawTextWithColor_Parms;
	memcpy ( &DrawTextWithColor_Parms.valuename, &valuename, 0x10 );
	memcpy ( &DrawTextWithColor_Parms.Value, &Value, 0x10 );
	memcpy ( &DrawTextWithColor_Parms.LabelColor, &LabelColor, 0x4 );
	memcpy ( &DrawTextWithColor_Parms.DataColor, &DataColor, 0x4 );

	this->ProcessEvent ( pFnDrawTextWithColor, &DrawTextWithColor_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawText
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 valuename                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FColor                  LabelColor                     ( CPF_OptionalParm | CPF_Parm )
// struct FColor                  DataColor                      ( CPF_OptionalParm | CPF_Parm )

void ABioHUD::eventDrawText ( struct FString valuename, struct FString Value, struct FColor LabelColor, struct FColor DataColor )
{
	static UFunction* pFnDrawText = NULL;

	if ( ! pFnDrawText )
		pFnDrawText = (UFunction*) UObject::GObjObjects()->Data[ 54583 ];

	ABioHUD_eventDrawText_Parms DrawText_Parms;
	memcpy ( &DrawText_Parms.valuename, &valuename, 0x10 );
	memcpy ( &DrawText_Parms.Value, &Value, 0x10 );
	memcpy ( &DrawText_Parms.LabelColor, &LabelColor, 0x4 );
	memcpy ( &DrawText_Parms.DataColor, &DataColor, 0x4 );

	this->ProcessEvent ( pFnDrawText, &DrawText_Parms, NULL );
};

// Function SFXGame.BioHUD.DisplayProfiling
// [0x00020002] 
// Parameters infos:

void ABioHUD::DisplayProfiling ( )
{
	static UFunction* pFnDisplayProfiling = NULL;

	if ( ! pFnDisplayProfiling )
		pFnDisplayProfiling = (UFunction*) UObject::GObjObjects()->Data[ 54581 ];

	ABioHUD_execDisplayProfiling_Parms DisplayProfiling_Parms;

	this->ProcessEvent ( pFnDisplayProfiling, &DisplayProfiling_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawCircle
// [0x00020002] 
// Parameters infos:
// float                          fX                             ( CPF_Parm )
// float                          fY                             ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )

void ABioHUD::DrawCircle ( float fX, float fY, float Radius )
{
	static UFunction* pFnDrawCircle = NULL;

	if ( ! pFnDrawCircle )
		pFnDrawCircle = (UFunction*) UObject::GObjObjects()->Data[ 54570 ];

	ABioHUD_execDrawCircle_Parms DrawCircle_Parms;
	DrawCircle_Parms.fX = fX;
	DrawCircle_Parms.fY = fY;
	DrawCircle_Parms.Radius = Radius;

	this->ProcessEvent ( pFnDrawCircle, &DrawCircle_Parms, NULL );
};

// Function SFXGame.BioHUD.PointInsideBox
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          CX                             ( CPF_Parm )
// float                          CY                             ( CPF_Parm )
// float                          nSize                          ( CPF_Parm )

bool ABioHUD::PointInsideBox ( float X, float Y, float CX, float CY, float nSize )
{
	static UFunction* pFnPointInsideBox = NULL;

	if ( ! pFnPointInsideBox )
		pFnPointInsideBox = (UFunction*) UObject::GObjObjects()->Data[ 54563 ];

	ABioHUD_execPointInsideBox_Parms PointInsideBox_Parms;
	PointInsideBox_Parms.X = X;
	PointInsideBox_Parms.Y = Y;
	PointInsideBox_Parms.CX = CX;
	PointInsideBox_Parms.CY = CY;
	PointInsideBox_Parms.nSize = nSize;

	this->ProcessEvent ( pFnPointInsideBox, &PointInsideBox_Parms, NULL );

	return PointInsideBox_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.GetBoxCoordsFromAngle
// [0x00420002] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Size                           ( CPF_Parm )
// float                          Angle                          ( CPF_Parm )
// float                          XSt                            ( CPF_Parm | CPF_OutParm )
// float                          YSt                            ( CPF_Parm | CPF_OutParm )

void ABioHUD::GetBoxCoordsFromAngle ( float X, float Y, float Size, float Angle, float* XSt, float* YSt )
{
	static UFunction* pFnGetBoxCoordsFromAngle = NULL;

	if ( ! pFnGetBoxCoordsFromAngle )
		pFnGetBoxCoordsFromAngle = (UFunction*) UObject::GObjObjects()->Data[ 54556 ];

	ABioHUD_execGetBoxCoordsFromAngle_Parms GetBoxCoordsFromAngle_Parms;
	GetBoxCoordsFromAngle_Parms.X = X;
	GetBoxCoordsFromAngle_Parms.Y = Y;
	GetBoxCoordsFromAngle_Parms.Size = Size;
	GetBoxCoordsFromAngle_Parms.Angle = Angle;

	this->ProcessEvent ( pFnGetBoxCoordsFromAngle, &GetBoxCoordsFromAngle_Parms, NULL );

	if ( XSt )
		*XSt = GetBoxCoordsFromAngle_Parms.XSt;

	if ( YSt )
		*YSt = GetBoxCoordsFromAngle_Parms.YSt;
};

// Function SFXGame.BioHUD.BoxesIntersecting
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X1                             ( CPF_Parm )
// int                            Y1                             ( CPF_Parm )
// int                            nSize1                         ( CPF_Parm )
// int                            X2                             ( CPF_Parm )
// int                            Y2                             ( CPF_Parm )
// int                            nSize2                         ( CPF_Parm )

bool ABioHUD::BoxesIntersecting ( int X1, int Y1, int nSize1, int X2, int Y2, int nSize2 )
{
	static UFunction* pFnBoxesIntersecting = NULL;

	if ( ! pFnBoxesIntersecting )
		pFnBoxesIntersecting = (UFunction*) UObject::GObjObjects()->Data[ 54545 ];

	ABioHUD_execBoxesIntersecting_Parms BoxesIntersecting_Parms;
	BoxesIntersecting_Parms.X1 = X1;
	BoxesIntersecting_Parms.Y1 = Y1;
	BoxesIntersecting_Parms.nSize1 = nSize1;
	BoxesIntersecting_Parms.X2 = X2;
	BoxesIntersecting_Parms.Y2 = Y2;
	BoxesIntersecting_Parms.nSize2 = nSize2;

	this->ProcessEvent ( pFnBoxesIntersecting, &BoxesIntersecting_Parms, NULL );

	return BoxesIntersecting_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.CDrawVertLine
// [0x00020002] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y1                             ( CPF_Parm )
// float                          Y2                             ( CPF_Parm )

void ABioHUD::CDrawVertLine ( float X, float Y1, float Y2 )
{
	static UFunction* pFnCDrawVertLine = NULL;

	if ( ! pFnCDrawVertLine )
		pFnCDrawVertLine = (UFunction*) UObject::GObjObjects()->Data[ 54541 ];

	ABioHUD_execCDrawVertLine_Parms CDrawVertLine_Parms;
	CDrawVertLine_Parms.X = X;
	CDrawVertLine_Parms.Y1 = Y1;
	CDrawVertLine_Parms.Y2 = Y2;

	this->ProcessEvent ( pFnCDrawVertLine, &CDrawVertLine_Parms, NULL );
};

// Function SFXGame.BioHUD.CDrawHorzLine
// [0x00020002] 
// Parameters infos:
// float                          X1                             ( CPF_Parm )
// float                          X2                             ( CPF_Parm )
// float                          Y                              ( CPF_Parm )

void ABioHUD::CDrawHorzLine ( float X1, float X2, float Y )
{
	static UFunction* pFnCDrawHorzLine = NULL;

	if ( ! pFnCDrawHorzLine )
		pFnCDrawHorzLine = (UFunction*) UObject::GObjObjects()->Data[ 54537 ];

	ABioHUD_execCDrawHorzLine_Parms CDrawHorzLine_Parms;
	CDrawHorzLine_Parms.X1 = X1;
	CDrawHorzLine_Parms.X2 = X2;
	CDrawHorzLine_Parms.Y = Y;

	this->ProcessEvent ( pFnCDrawHorzLine, &CDrawHorzLine_Parms, NULL );
};

// Function SFXGame.BioHUD.ConnectBoxes
// [0x00020002] 
// Parameters infos:
// float                          X1                             ( CPF_Parm )
// float                          Y1                             ( CPF_Parm )
// float                          nSize1                         ( CPF_Parm )
// float                          X2                             ( CPF_Parm )
// float                          Y2                             ( CPF_Parm )
// float                          nSize2                         ( CPF_Parm )

void ABioHUD::ConnectBoxes ( float X1, float Y1, float nSize1, float X2, float Y2, float nSize2 )
{
	static UFunction* pFnConnectBoxes = NULL;

	if ( ! pFnConnectBoxes )
		pFnConnectBoxes = (UFunction*) UObject::GObjObjects()->Data[ 54524 ];

	ABioHUD_execConnectBoxes_Parms ConnectBoxes_Parms;
	ConnectBoxes_Parms.X1 = X1;
	ConnectBoxes_Parms.Y1 = Y1;
	ConnectBoxes_Parms.nSize1 = nSize1;
	ConnectBoxes_Parms.X2 = X2;
	ConnectBoxes_Parms.Y2 = Y2;
	ConnectBoxes_Parms.nSize2 = nSize2;

	this->ProcessEvent ( pFnConnectBoxes, &ConnectBoxes_Parms, NULL );
};

// Function SFXGame.BioHUD.GetStabilityColor
// [0x00020002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fCurrentStability              ( CPF_Parm )

struct FColor ABioHUD::GetStabilityColor ( float fCurrentStability )
{
	static UFunction* pFnGetStabilityColor = NULL;

	if ( ! pFnGetStabilityColor )
		pFnGetStabilityColor = (UFunction*) UObject::GObjObjects()->Data[ 54513 ];

	ABioHUD_execGetStabilityColor_Parms GetStabilityColor_Parms;
	GetStabilityColor_Parms.fCurrentStability = fCurrentStability;

	this->ProcessEvent ( pFnGetStabilityColor, &GetStabilityColor_Parms, NULL );

	return GetStabilityColor_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.SmartWrapStringToArray
// [0x00420002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            nTextWidth                     ( CPF_Parm )
// struct TArray<struct FString>  OutArray                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

float ABioHUD::SmartWrapStringToArray ( struct FString sText, int nTextWidth, struct TArray<struct FString>* OutArray )
{
	static UFunction* pFnSmartWrapStringToArray = NULL;

	if ( ! pFnSmartWrapStringToArray )
		pFnSmartWrapStringToArray = (UFunction*) UObject::GObjObjects()->Data[ 51446 ];

	ABioHUD_execSmartWrapStringToArray_Parms SmartWrapStringToArray_Parms;
	memcpy ( &SmartWrapStringToArray_Parms.sText, &sText, 0x10 );
	SmartWrapStringToArray_Parms.nTextWidth = nTextWidth;

	this->ProcessEvent ( pFnSmartWrapStringToArray, &SmartWrapStringToArray_Parms, NULL );

	if ( OutArray )
		memcpy ( OutArray, &SmartWrapStringToArray_Parms.OutArray, 0x10 );

	return SmartWrapStringToArray_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DrawFakeShadowText
// [0x00020002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// struct FColor                  DrawColor                      ( CPF_Parm )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )

void ABioHUD::DrawFakeShadowText ( int X, int Y, struct FColor DrawColor, struct FString sText )
{
	static UFunction* pFnDrawFakeShadowText = NULL;

	if ( ! pFnDrawFakeShadowText )
		pFnDrawFakeShadowText = (UFunction*) UObject::GObjObjects()->Data[ 54498 ];

	ABioHUD_execDrawFakeShadowText_Parms DrawFakeShadowText_Parms;
	DrawFakeShadowText_Parms.X = X;
	DrawFakeShadowText_Parms.Y = Y;
	memcpy ( &DrawFakeShadowText_Parms.DrawColor, &DrawColor, 0x4 );
	memcpy ( &DrawFakeShadowText_Parms.sText, &sText, 0x10 );

	this->ProcessEvent ( pFnDrawFakeShadowText, &DrawFakeShadowText_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawEngineHUD
// [0x00020000] 
// Parameters infos:

void ABioHUD::DrawEngineHUD ( )
{
	static UFunction* pFnDrawEngineHUD = NULL;

	if ( ! pFnDrawEngineHUD )
		pFnDrawEngineHUD = (UFunction*) UObject::GObjObjects()->Data[ 54497 ];

	ABioHUD_execDrawEngineHUD_Parms DrawEngineHUD_Parms;

	this->ProcessEvent ( pFnDrawEngineHUD, &DrawEngineHUD_Parms, NULL );
};

// Function SFXGame.BioHUD.IsDrawing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FScriptDelegate         DebugDrawFunc                  ( CPF_Parm | CPF_NeedCtorLink )

bool ABioHUD::IsDrawing ( struct FScriptDelegate DebugDrawFunc )
{
	static UFunction* pFnIsDrawing = NULL;

	if ( ! pFnIsDrawing )
		pFnIsDrawing = (UFunction*) UObject::GObjObjects()->Data[ 52271 ];

	ABioHUD_execIsDrawing_Parms IsDrawing_Parms;
	memcpy ( &IsDrawing_Parms.DebugDrawFunc, &DebugDrawFunc, 0x10 );

	this->ProcessEvent ( pFnIsDrawing, &IsDrawing_Parms, NULL );

	return IsDrawing_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.ToggleDebugDraw
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DebugDrawFunc                  ( CPF_Parm | CPF_NeedCtorLink )

void ABioHUD::ToggleDebugDraw ( struct FScriptDelegate DebugDrawFunc )
{
	static UFunction* pFnToggleDebugDraw = NULL;

	if ( ! pFnToggleDebugDraw )
		pFnToggleDebugDraw = (UFunction*) UObject::GObjObjects()->Data[ 54492 ];

	ABioHUD_execToggleDebugDraw_Parms ToggleDebugDraw_Parms;
	memcpy ( &ToggleDebugDraw_Parms.DebugDrawFunc, &DebugDrawFunc, 0x10 );

	this->ProcessEvent ( pFnToggleDebugDraw, &ToggleDebugDraw_Parms, NULL );
};

// Function SFXGame.BioHUD.DebugDraw
// [0x00120000] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void ABioHUD::DebugDraw ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw = NULL;

	if ( ! pFnDebugDraw )
		pFnDebugDraw = (UFunction*) UObject::GObjObjects()->Data[ 54291 ];

	ABioHUD_execDebugDraw_Parms DebugDraw_Parms;
	DebugDraw_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw, &DebugDraw_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawHUD
// [0x00020002] 
// Parameters infos:

void ABioHUD::DrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 54488 ];

	ABioHUD_execDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SFXGame.BioHUD.PostRender
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ABioHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 54464 ];

	ABioHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function SFXGame.BioHUD.DrawTestFont
// [0x00024002] 
// Parameters infos:
// int                            Y                              ( CPF_Parm )
// struct FString                 sFontName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            nPoint                         ( CPF_Parm )
// unsigned long                  bScaled                        ( CPF_OptionalParm | CPF_Parm )
// float                          fScale                         ( CPF_OptionalParm | CPF_Parm )

void ABioHUD::DrawTestFont ( int Y, struct FString sFontName, int nPoint, unsigned long bScaled, float fScale )
{
	static UFunction* pFnDrawTestFont = NULL;

	if ( ! pFnDrawTestFont )
		pFnDrawTestFont = (UFunction*) UObject::GObjObjects()->Data[ 54456 ];

	ABioHUD_execDrawTestFont_Parms DrawTestFont_Parms;
	DrawTestFont_Parms.Y = Y;
	memcpy ( &DrawTestFont_Parms.sFontName, &sFontName, 0x10 );
	DrawTestFont_Parms.nPoint = nPoint;
	DrawTestFont_Parms.bScaled = bScaled;
	DrawTestFont_Parms.fScale = fScale;

	this->ProcessEvent ( pFnDrawTestFont, &DrawTestFont_Parms, NULL );
};

// Function SFXGame.BioHUD.ToggleSafeArea
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ABioHUD::ToggleSafeArea ( )
{
	static UFunction* pFnToggleSafeArea = NULL;

	if ( ! pFnToggleSafeArea )
		pFnToggleSafeArea = (UFunction*) UObject::GObjObjects()->Data[ 54455 ];

	ABioHUD_execToggleSafeArea_Parms ToggleSafeArea_Parms;

	this->ProcessEvent ( pFnToggleSafeArea, &ToggleSafeArea_Parms, NULL );
};

// Function SFXGame.BioHUD.DisplaySafeArea
// [0x00020002] 
// Parameters infos:

void ABioHUD::DisplaySafeArea ( )
{
	static UFunction* pFnDisplaySafeArea = NULL;

	if ( ! pFnDisplaySafeArea )
		pFnDisplaySafeArea = (UFunction*) UObject::GObjObjects()->Data[ 54450 ];

	ABioHUD_execDisplaySafeArea_Parms DisplaySafeArea_Parms;

	this->ProcessEvent ( pFnDisplaySafeArea, &DisplaySafeArea_Parms, NULL );
};

// Function SFXGame.BioHUD.ProfileConversationExtra
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioConversation*        oCurConv                       ( CPF_Parm )

void ABioHUD::eventProfileConversationExtra ( class UBioConversation* oCurConv )
{
	static UFunction* pFnProfileConversationExtra = NULL;

	if ( ! pFnProfileConversationExtra )
		pFnProfileConversationExtra = (UFunction*) UObject::GObjObjects()->Data[ 54438 ];

	ABioHUD_eventProfileConversationExtra_Parms ProfileConversationExtra_Parms;
	ProfileConversationExtra_Parms.oCurConv = oCurConv;

	this->ProcessEvent ( pFnProfileConversationExtra, &ProfileConversationExtra_Parms, NULL );
};

// Function SFXGame.BioHUD.ProxyCanvasProject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 V                              ( CPF_Parm )

struct FVector ABioHUD::eventProxyCanvasProject ( struct FVector V )
{
	static UFunction* pFnProxyCanvasProject = NULL;

	if ( ! pFnProxyCanvasProject )
		pFnProxyCanvasProject = (UFunction*) UObject::GObjObjects()->Data[ 54435 ];

	ABioHUD_eventProxyCanvasProject_Parms ProxyCanvasProject_Parms;
	memcpy ( &ProxyCanvasProject_Parms.V, &V, 0xC );

	this->ProcessEvent ( pFnProxyCanvasProject, &ProxyCanvasProject_Parms, NULL );

	return ProxyCanvasProject_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.ProxyCanvasDrawMaterialTile
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* Mat                            ( CPF_Parm )
// float                          XL                             ( CPF_Parm )
// float                          YL                             ( CPF_Parm )

void ABioHUD::eventProxyCanvasDrawMaterialTile ( class UMaterialInstanceConstant* Mat, float XL, float YL )
{
	static UFunction* pFnProxyCanvasDrawMaterialTile = NULL;

	if ( ! pFnProxyCanvasDrawMaterialTile )
		pFnProxyCanvasDrawMaterialTile = (UFunction*) UObject::GObjObjects()->Data[ 54431 ];

	ABioHUD_eventProxyCanvasDrawMaterialTile_Parms ProxyCanvasDrawMaterialTile_Parms;
	ProxyCanvasDrawMaterialTile_Parms.Mat = Mat;
	ProxyCanvasDrawMaterialTile_Parms.XL = XL;
	ProxyCanvasDrawMaterialTile_Parms.YL = YL;

	this->ProcessEvent ( pFnProxyCanvasDrawMaterialTile, &ProxyCanvasDrawMaterialTile_Parms, NULL );
};

// Function SFXGame.BioHUD.ProxyCanvasSetPos
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )

void ABioHUD::eventProxyCanvasSetPos ( float X, float Y )
{
	static UFunction* pFnProxyCanvasSetPos = NULL;

	if ( ! pFnProxyCanvasSetPos )
		pFnProxyCanvasSetPos = (UFunction*) UObject::GObjObjects()->Data[ 54428 ];

	ABioHUD_eventProxyCanvasSetPos_Parms ProxyCanvasSetPos_Parms;
	ProxyCanvasSetPos_Parms.X = X;
	ProxyCanvasSetPos_Parms.Y = Y;

	this->ProcessEvent ( pFnProxyCanvasSetPos, &ProxyCanvasSetPos_Parms, NULL );
};

// Function SFXGame.BioHUD.ProxyMakeLinearColor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FLinearColor            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          R                              ( CPF_Parm )
// float                          G                              ( CPF_Parm )
// float                          B                              ( CPF_Parm )
// float                          A                              ( CPF_Parm )

struct FLinearColor ABioHUD::eventProxyMakeLinearColor ( float R, float G, float B, float A )
{
	static UFunction* pFnProxyMakeLinearColor = NULL;

	if ( ! pFnProxyMakeLinearColor )
		pFnProxyMakeLinearColor = (UFunction*) UObject::GObjObjects()->Data[ 54422 ];

	ABioHUD_eventProxyMakeLinearColor_Parms ProxyMakeLinearColor_Parms;
	ProxyMakeLinearColor_Parms.R = R;
	ProxyMakeLinearColor_Parms.G = G;
	ProxyMakeLinearColor_Parms.B = B;
	ProxyMakeLinearColor_Parms.A = A;

	this->ProcessEvent ( pFnProxyMakeLinearColor, &ProxyMakeLinearColor_Parms, NULL );

	return ProxyMakeLinearColor_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayCapability
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// int                            Idx                            ( CPF_Parm )
// class UBioCapability*          oCap                           ( CPF_Parm )
// unsigned long                  bShowOwner                     ( CPF_Parm )

void ABioHUD::DisplayCapability ( int X, int Y, int Idx, class UBioCapability* oCap, unsigned long bShowOwner )
{
	static UFunction* pFnDisplayCapability = NULL;

	if ( ! pFnDisplayCapability )
		pFnDisplayCapability = (UFunction*) UObject::GObjObjects()->Data[ 54416 ];

	ABioHUD_execDisplayCapability_Parms DisplayCapability_Parms;
	DisplayCapability_Parms.X = X;
	DisplayCapability_Parms.Y = Y;
	DisplayCapability_Parms.Idx = Idx;
	DisplayCapability_Parms.oCap = oCap;
	DisplayCapability_Parms.bShowOwner = bShowOwner;

	pFnDisplayCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayCapability, &DisplayCapability_Parms, NULL );

	pFnDisplayCapability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.DisplaySquadMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class UBioPawnBehavior*        targetBehavior                 ( CPF_Parm )
// class ABioPawn*                oBP                            ( CPF_Parm )

int ABioHUD::DisplaySquadMember ( int X, int Y, class UBioPawnBehavior* targetBehavior, class ABioPawn* oBP )
{
	static UFunction* pFnDisplaySquadMember = NULL;

	if ( ! pFnDisplaySquadMember )
		pFnDisplaySquadMember = (UFunction*) UObject::GObjObjects()->Data[ 54410 ];

	ABioHUD_execDisplaySquadMember_Parms DisplaySquadMember_Parms;
	DisplaySquadMember_Parms.X = X;
	DisplaySquadMember_Parms.Y = Y;
	DisplaySquadMember_Parms.targetBehavior = targetBehavior;
	DisplaySquadMember_Parms.oBP = oBP;

	pFnDisplaySquadMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplaySquadMember, &DisplaySquadMember_Parms, NULL );

	pFnDisplaySquadMember->FunctionFlags |= 0x400;

	return DisplaySquadMember_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayStreaming
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class ABioPawn*                oBP                            ( CPF_Parm )
// class UBioPawnBehavior*        targetBehavior                 ( CPF_Parm )

int ABioHUD::DisplayStreaming ( int X, int Y, class ABioPawn* oBP, class UBioPawnBehavior* targetBehavior )
{
	static UFunction* pFnDisplayStreaming = NULL;

	if ( ! pFnDisplayStreaming )
		pFnDisplayStreaming = (UFunction*) UObject::GObjObjects()->Data[ 54404 ];

	ABioHUD_execDisplayStreaming_Parms DisplayStreaming_Parms;
	DisplayStreaming_Parms.X = X;
	DisplayStreaming_Parms.Y = Y;
	DisplayStreaming_Parms.oBP = oBP;
	DisplayStreaming_Parms.targetBehavior = targetBehavior;

	pFnDisplayStreaming->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayStreaming, &DisplayStreaming_Parms, NULL );

	pFnDisplayStreaming->FunctionFlags |= 0x400;

	return DisplayStreaming_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplaySquad_QA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class UBioPawnBehavior*        targetBehavior                 ( CPF_Parm )

int ABioHUD::DisplaySquad_QA ( int X, int Y, class UBioPawnBehavior* targetBehavior )
{
	static UFunction* pFnDisplaySquad_QA = NULL;

	if ( ! pFnDisplaySquad_QA )
		pFnDisplaySquad_QA = (UFunction*) UObject::GObjObjects()->Data[ 54399 ];

	ABioHUD_execDisplaySquad_QA_Parms DisplaySquad_QA_Parms;
	DisplaySquad_QA_Parms.X = X;
	DisplaySquad_QA_Parms.Y = Y;
	DisplaySquad_QA_Parms.targetBehavior = targetBehavior;

	pFnDisplaySquad_QA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplaySquad_QA, &DisplaySquad_QA_Parms, NULL );

	pFnDisplaySquad_QA->FunctionFlags |= 0x400;

	return DisplaySquad_QA_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplaySquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class UBioPawnBehavior*        targetBehavior                 ( CPF_Parm )

int ABioHUD::DisplaySquad ( int X, int Y, class UBioPawnBehavior* targetBehavior )
{
	static UFunction* pFnDisplaySquad = NULL;

	if ( ! pFnDisplaySquad )
		pFnDisplaySquad = (UFunction*) UObject::GObjObjects()->Data[ 54394 ];

	ABioHUD_execDisplaySquad_Parms DisplaySquad_Parms;
	DisplaySquad_Parms.X = X;
	DisplaySquad_Parms.Y = Y;
	DisplaySquad_Parms.targetBehavior = targetBehavior;

	pFnDisplaySquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplaySquad, &DisplaySquad_Parms, NULL );

	pFnDisplaySquad->FunctionFlags |= 0x400;

	return DisplaySquad_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayPerceptionList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class ABioPawn*                oBP                            ( CPF_Parm )

int ABioHUD::DisplayPerceptionList ( int X, int Y, class ABioPawn* oBP )
{
	static UFunction* pFnDisplayPerceptionList = NULL;

	if ( ! pFnDisplayPerceptionList )
		pFnDisplayPerceptionList = (UFunction*) UObject::GObjObjects()->Data[ 54389 ];

	ABioHUD_execDisplayPerceptionList_Parms DisplayPerceptionList_Parms;
	DisplayPerceptionList_Parms.X = X;
	DisplayPerceptionList_Parms.Y = Y;
	DisplayPerceptionList_Parms.oBP = oBP;

	pFnDisplayPerceptionList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayPerceptionList, &DisplayPerceptionList_Parms, NULL );

	pFnDisplayPerceptionList->FunctionFlags |= 0x400;

	return DisplayPerceptionList_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayActionQueue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class ABioAiController*        oAIC                           ( CPF_Parm )

int ABioHUD::DisplayActionQueue ( int X, int Y, class ABioAiController* oAIC )
{
	static UFunction* pFnDisplayActionQueue = NULL;

	if ( ! pFnDisplayActionQueue )
		pFnDisplayActionQueue = (UFunction*) UObject::GObjObjects()->Data[ 54384 ];

	ABioHUD_execDisplayActionQueue_Parms DisplayActionQueue_Parms;
	DisplayActionQueue_Parms.X = X;
	DisplayActionQueue_Parms.Y = Y;
	DisplayActionQueue_Parms.oAIC = oAIC;

	pFnDisplayActionQueue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayActionQueue, &DisplayActionQueue_Parms, NULL );

	pFnDisplayActionQueue->FunctionFlags |= 0x400;

	return DisplayActionQueue_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayActionStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// class ABioAiController*        oAIC                           ( CPF_Parm )

int ABioHUD::DisplayActionStack ( int X, int Y, class ABioAiController* oAIC )
{
	static UFunction* pFnDisplayActionStack = NULL;

	if ( ! pFnDisplayActionStack )
		pFnDisplayActionStack = (UFunction*) UObject::GObjObjects()->Data[ 54379 ];

	ABioHUD_execDisplayActionStack_Parms DisplayActionStack_Parms;
	DisplayActionStack_Parms.X = X;
	DisplayActionStack_Parms.Y = Y;
	DisplayActionStack_Parms.oAIC = oAIC;

	pFnDisplayActionStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayActionStack, &DisplayActionStack_Parms, NULL );

	pFnDisplayActionStack->FunctionFlags |= 0x400;

	return DisplayActionStack_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.GetNameOfEnumEntry
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FString                 EnumName                       ( CPF_Parm | CPF_NeedCtorLink )

struct FName ABioHUD::GetNameOfEnumEntry ( int nIndex, struct FString EnumName )
{
	static UFunction* pFnGetNameOfEnumEntry = NULL;

	if ( ! pFnGetNameOfEnumEntry )
		pFnGetNameOfEnumEntry = (UFunction*) UObject::GObjObjects()->Data[ 54375 ];

	ABioHUD_execGetNameOfEnumEntry_Parms GetNameOfEnumEntry_Parms;
	GetNameOfEnumEntry_Parms.nIndex = nIndex;
	memcpy ( &GetNameOfEnumEntry_Parms.EnumName, &EnumName, 0x10 );

	pFnGetNameOfEnumEntry->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNameOfEnumEntry, &GetNameOfEnumEntry_Parms, NULL );

	pFnGetNameOfEnumEntry->FunctionFlags |= 0x400;

	return GetNameOfEnumEntry_Parms.ReturnValue;
};

// Function SFXGame.BioHUD.DisplayIcon
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstanceConstant* oMatInstance                   ( CPF_Parm )
// struct FVector                 vWorldLocation                 ( CPF_Parm )
// unsigned long                  bScaleWithDistance             ( CPF_OptionalParm | CPF_Parm )
// float                          fMinTextureSize                ( CPF_OptionalParm | CPF_Parm )
// float                          fMaxTextureSize                ( CPF_OptionalParm | CPF_Parm )
// float                          fScaleRange                    ( CPF_OptionalParm | CPF_Parm )

void ABioHUD::DisplayIcon ( class UMaterialInstanceConstant* oMatInstance, struct FVector vWorldLocation, unsigned long bScaleWithDistance, float fMinTextureSize, float fMaxTextureSize, float fScaleRange )
{
	static UFunction* pFnDisplayIcon = NULL;

	if ( ! pFnDisplayIcon )
		pFnDisplayIcon = (UFunction*) UObject::GObjObjects()->Data[ 54368 ];

	ABioHUD_execDisplayIcon_Parms DisplayIcon_Parms;
	DisplayIcon_Parms.oMatInstance = oMatInstance;
	memcpy ( &DisplayIcon_Parms.vWorldLocation, &vWorldLocation, 0xC );
	DisplayIcon_Parms.bScaleWithDistance = bScaleWithDistance;
	DisplayIcon_Parms.fMinTextureSize = fMinTextureSize;
	DisplayIcon_Parms.fMaxTextureSize = fMaxTextureSize;
	DisplayIcon_Parms.fScaleRange = fScaleRange;

	pFnDisplayIcon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayIcon, &DisplayIcon_Parms, NULL );

	pFnDisplayIcon->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.DisplayWeaponAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioWeapon*              oWeapon                        ( CPF_Parm )

void ABioHUD::DisplayWeaponAttributes ( class ABioWeapon* oWeapon )
{
	static UFunction* pFnDisplayWeaponAttributes = NULL;

	if ( ! pFnDisplayWeaponAttributes )
		pFnDisplayWeaponAttributes = (UFunction*) UObject::GObjObjects()->Data[ 54366 ];

	ABioHUD_execDisplayWeaponAttributes_Parms DisplayWeaponAttributes_Parms;
	DisplayWeaponAttributes_Parms.oWeapon = oWeapon;

	pFnDisplayWeaponAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayWeaponAttributes, &DisplayWeaponAttributes_Parms, NULL );

	pFnDisplayWeaponAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.DisplaySquadPlaypen
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )
// unsigned long                  bShowPlaypen                   ( CPF_OptionalParm | CPF_Parm )

void ABioHUD::DisplaySquadPlaypen ( class UBioActorBehavior* targetActorBehavior, unsigned long bShowPlaypen )
{
	static UFunction* pFnDisplaySquadPlaypen = NULL;

	if ( ! pFnDisplaySquadPlaypen )
		pFnDisplaySquadPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 54363 ];

	ABioHUD_execDisplaySquadPlaypen_Parms DisplaySquadPlaypen_Parms;
	DisplaySquadPlaypen_Parms.targetActorBehavior = targetActorBehavior;
	DisplaySquadPlaypen_Parms.bShowPlaypen = bShowPlaypen;

	pFnDisplaySquadPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplaySquadPlaypen, &DisplaySquadPlaypen_Parms, NULL );

	pFnDisplaySquadPlaypen->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileTrilogy
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioHUD::ProfileTrilogy ( )
{
	static UFunction* pFnProfileTrilogy = NULL;

	if ( ! pFnProfileTrilogy )
		pFnProfileTrilogy = (UFunction*) UObject::GObjObjects()->Data[ 54362 ];

	ABioHUD_execProfileTrilogy_Parms ProfileTrilogy_Parms;

	pFnProfileTrilogy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileTrilogy, &ProfileTrilogy_Parms, NULL );

	pFnProfileTrilogy->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileComponents ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileComponents = NULL;

	if ( ! pFnProfileComponents )
		pFnProfileComponents = (UFunction*) UObject::GObjObjects()->Data[ 54360 ];

	ABioHUD_execProfileComponents_Parms ProfileComponents_Parms;
	ProfileComponents_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileComponents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileComponents, &ProfileComponents_Parms, NULL );

	pFnProfileComponents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileStasis
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileStasis ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileStasis = NULL;

	if ( ! pFnProfileStasis )
		pFnProfileStasis = (UFunction*) UObject::GObjObjects()->Data[ 54358 ];

	ABioHUD_execProfileStasis_Parms ProfileStasis_Parms;
	ProfileStasis_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileStasis->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileStasis, &ProfileStasis_Parms, NULL );

	pFnProfileStasis->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfilePerception
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfilePerception ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfilePerception = NULL;

	if ( ! pFnProfilePerception )
		pFnProfilePerception = (UFunction*) UObject::GObjObjects()->Data[ 54356 ];

	ABioHUD_execProfilePerception_Parms ProfilePerception_Parms;
	ProfilePerception_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfilePerception->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfilePerception, &ProfilePerception_Parms, NULL );

	pFnProfilePerception->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileSquadCaps
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileSquadCaps ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileSquadCaps = NULL;

	if ( ! pFnProfileSquadCaps )
		pFnProfileSquadCaps = (UFunction*) UObject::GObjObjects()->Data[ 54354 ];

	ABioHUD_execProfileSquadCaps_Parms ProfileSquadCaps_Parms;
	ProfileSquadCaps_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileSquadCaps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileSquadCaps, &ProfileSquadCaps_Parms, NULL );

	pFnProfileSquadCaps->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileCaps
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileCaps ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileCaps = NULL;

	if ( ! pFnProfileCaps )
		pFnProfileCaps = (UFunction*) UObject::GObjObjects()->Data[ 54352 ];

	ABioHUD_execProfileCaps_Parms ProfileCaps_Parms;
	ProfileCaps_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileCaps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileCaps, &ProfileCaps_Parms, NULL );

	pFnProfileCaps->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileGestures
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileGestures ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileGestures = NULL;

	if ( ! pFnProfileGestures )
		pFnProfileGestures = (UFunction*) UObject::GObjObjects()->Data[ 54350 ];

	ABioHUD_execProfileGestures_Parms ProfileGestures_Parms;
	ProfileGestures_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileGestures->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileGestures, &ProfileGestures_Parms, NULL );

	pFnProfileGestures->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileSave
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioHUD::ProfileSave ( )
{
	static UFunction* pFnProfileSave = NULL;

	if ( ! pFnProfileSave )
		pFnProfileSave = (UFunction*) UObject::GObjObjects()->Data[ 54349 ];

	ABioHUD_execProfileSave_Parms ProfileSave_Parms;

	pFnProfileSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileSave, &ProfileSave_Parms, NULL );

	pFnProfileSave->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileAnim ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileAnim = NULL;

	if ( ! pFnProfileAnim )
		pFnProfileAnim = (UFunction*) UObject::GObjObjects()->Data[ 54347 ];

	ABioHUD_execProfileAnim_Parms ProfileAnim_Parms;
	ProfileAnim_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileAnim, &ProfileAnim_Parms, NULL );

	pFnProfileAnim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileSquadFollow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileSquadFollow ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileSquadFollow = NULL;

	if ( ! pFnProfileSquadFollow )
		pFnProfileSquadFollow = (UFunction*) UObject::GObjObjects()->Data[ 54345 ];

	ABioHUD_execProfileSquadFollow_Parms ProfileSquadFollow_Parms;
	ProfileSquadFollow_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileSquadFollow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileSquadFollow, &ProfileSquadFollow_Parms, NULL );

	pFnProfileSquadFollow->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileQAAI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileQAAI ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileQAAI = NULL;

	if ( ! pFnProfileQAAI )
		pFnProfileQAAI = (UFunction*) UObject::GObjObjects()->Data[ 54343 ];

	ABioHUD_execProfileQAAI_Parms ProfileQAAI_Parms;
	ProfileQAAI_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileQAAI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileQAAI, &ProfileQAAI_Parms, NULL );

	pFnProfileQAAI->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileVehicleWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileVehicleWeapons ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileVehicleWeapons = NULL;

	if ( ! pFnProfileVehicleWeapons )
		pFnProfileVehicleWeapons = (UFunction*) UObject::GObjObjects()->Data[ 54341 ];

	ABioHUD_execProfileVehicleWeapons_Parms ProfileVehicleWeapons_Parms;
	ProfileVehicleWeapons_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileVehicleWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileVehicleWeapons, &ProfileVehicleWeapons_Parms, NULL );

	pFnProfileVehicleWeapons->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileVehicle ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileVehicle = NULL;

	if ( ! pFnProfileVehicle )
		pFnProfileVehicle = (UFunction*) UObject::GObjObjects()->Data[ 54339 ];

	ABioHUD_execProfileVehicle_Parms ProfileVehicle_Parms;
	ProfileVehicle_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileVehicle, &ProfileVehicle_Parms, NULL );

	pFnProfileVehicle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileGrenade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileGrenade ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileGrenade = NULL;

	if ( ! pFnProfileGrenade )
		pFnProfileGrenade = (UFunction*) UObject::GObjObjects()->Data[ 54337 ];

	ABioHUD_execProfileGrenade_Parms ProfileGrenade_Parms;
	ProfileGrenade_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileGrenade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileGrenade, &ProfileGrenade_Parms, NULL );

	pFnProfileGrenade->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileRagdoll ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileRagdoll = NULL;

	if ( ! pFnProfileRagdoll )
		pFnProfileRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 54335 ];

	ABioHUD_execProfileRagdoll_Parms ProfileRagdoll_Parms;
	ProfileRagdoll_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileRagdoll, &ProfileRagdoll_Parms, NULL );

	pFnProfileRagdoll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileConversation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileConversation ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileConversation = NULL;

	if ( ! pFnProfileConversation )
		pFnProfileConversation = (UFunction*) UObject::GObjObjects()->Data[ 54333 ];

	ABioHUD_execProfileConversation_Parms ProfileConversation_Parms;
	ProfileConversation_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileConversation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileConversation, &ProfileConversation_Parms, NULL );

	pFnProfileConversation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileConversationBug
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileConversationBug ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileConversationBug = NULL;

	if ( ! pFnProfileConversationBug )
		pFnProfileConversationBug = (UFunction*) UObject::GObjObjects()->Data[ 54331 ];

	ABioHUD_execProfileConversationBug_Parms ProfileConversationBug_Parms;
	ProfileConversationBug_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileConversationBug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileConversationBug, &ProfileConversationBug_Parms, NULL );

	pFnProfileConversationBug->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileNoise
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileNoise ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileNoise = NULL;

	if ( ! pFnProfileNoise )
		pFnProfileNoise = (UFunction*) UObject::GObjObjects()->Data[ 54329 ];

	ABioHUD_execProfileNoise_Parms ProfileNoise_Parms;
	ProfileNoise_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileNoise->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileNoise, &ProfileNoise_Parms, NULL );

	pFnProfileNoise->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfilePath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfilePath ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfilePath = NULL;

	if ( ! pFnProfilePath )
		pFnProfilePath = (UFunction*) UObject::GObjObjects()->Data[ 54327 ];

	ABioHUD_execProfilePath_Parms ProfilePath_Parms;
	ProfilePath_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfilePath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfilePath, &ProfilePath_Parms, NULL );

	pFnProfilePath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileAvoid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileAvoid ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileAvoid = NULL;

	if ( ! pFnProfileAvoid )
		pFnProfileAvoid = (UFunction*) UObject::GObjObjects()->Data[ 54325 ];

	ABioHUD_execProfileAvoid_Parms ProfileAvoid_Parms;
	ProfileAvoid_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileAvoid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileAvoid, &ProfileAvoid_Parms, NULL );

	pFnProfileAvoid->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileSquad ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileSquad = NULL;

	if ( ! pFnProfileSquad )
		pFnProfileSquad = (UFunction*) UObject::GObjObjects()->Data[ 54323 ];

	ABioHUD_execProfileSquad_Parms ProfileSquad_Parms;
	ProfileSquad_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileSquad, &ProfileSquad_Parms, NULL );

	pFnProfileSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileLookAt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileLookAt ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileLookAt = NULL;

	if ( ! pFnProfileLookAt )
		pFnProfileLookAt = (UFunction*) UObject::GObjObjects()->Data[ 54321 ];

	ABioHUD_execProfileLookAt_Parms ProfileLookAt_Parms;
	ProfileLookAt_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileLookAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileLookAt, &ProfileLookAt_Parms, NULL );

	pFnProfileLookAt->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileMovement
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileMovement ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileMovement = NULL;

	if ( ! pFnProfileMovement )
		pFnProfileMovement = (UFunction*) UObject::GObjObjects()->Data[ 54319 ];

	ABioHUD_execProfileMovement_Parms ProfileMovement_Parms;
	ProfileMovement_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileMovement, &ProfileMovement_Parms, NULL );

	pFnProfileMovement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileCover
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileCover ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileCover = NULL;

	if ( ! pFnProfileCover )
		pFnProfileCover = (UFunction*) UObject::GObjObjects()->Data[ 54317 ];

	ABioHUD_execProfileCover_Parms ProfileCover_Parms;
	ProfileCover_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileCover, &ProfileCover_Parms, NULL );

	pFnProfileCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileAI_Player
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileAI_Player ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileAI_Player = NULL;

	if ( ! pFnProfileAI_Player )
		pFnProfileAI_Player = (UFunction*) UObject::GObjObjects()->Data[ 54315 ];

	ABioHUD_execProfileAI_Player_Parms ProfileAI_Player_Parms;
	ProfileAI_Player_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileAI_Player->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileAI_Player, &ProfileAI_Player_Parms, NULL );

	pFnProfileAI_Player->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileAI_AI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileAI_AI ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileAI_AI = NULL;

	if ( ! pFnProfileAI_AI )
		pFnProfileAI_AI = (UFunction*) UObject::GObjObjects()->Data[ 54313 ];

	ABioHUD_execProfileAI_AI_Parms ProfileAI_AI_Parms;
	ProfileAI_AI_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileAI_AI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileAI_AI, &ProfileAI_AI_Parms, NULL );

	pFnProfileAI_AI->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileAI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileAI ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileAI = NULL;

	if ( ! pFnProfileAI )
		pFnProfileAI = (UFunction*) UObject::GObjObjects()->Data[ 54311 ];

	ABioHUD_execProfileAI_Parms ProfileAI_Parms;
	ProfileAI_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileAI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileAI, &ProfileAI_Parms, NULL );

	pFnProfileAI->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileHopper
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileHopper ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileHopper = NULL;

	if ( ! pFnProfileHopper )
		pFnProfileHopper = (UFunction*) UObject::GObjObjects()->Data[ 54309 ];

	ABioHUD_execProfileHopper_Parms ProfileHopper_Parms;
	ProfileHopper_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileHopper->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileHopper, &ProfileHopper_Parms, NULL );

	pFnProfileHopper->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileInventory ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileInventory = NULL;

	if ( ! pFnProfileInventory )
		pFnProfileInventory = (UFunction*) UObject::GObjObjects()->Data[ 54307 ];

	ABioHUD_execProfileInventory_Parms ProfileInventory_Parms;
	ProfileInventory_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileInventory, &ProfileInventory_Parms, NULL );

	pFnProfileInventory->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfilePower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioHUD::ProfilePower ( class UBioActorBehavior* targetActorBehavior, struct FName nmPower )
{
	static UFunction* pFnProfilePower = NULL;

	if ( ! pFnProfilePower )
		pFnProfilePower = (UFunction*) UObject::GObjObjects()->Data[ 54304 ];

	ABioHUD_execProfilePower_Parms ProfilePower_Parms;
	ProfilePower_Parms.targetActorBehavior = targetActorBehavior;
	memcpy ( &ProfilePower_Parms.nmPower, &nmPower, 0x8 );

	pFnProfilePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfilePower, &ProfilePower_Parms, NULL );

	pFnProfilePower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfilePowers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioHUD::ProfilePowers ( class UBioActorBehavior* targetActorBehavior, struct FName nmPower )
{
	static UFunction* pFnProfilePowers = NULL;

	if ( ! pFnProfilePowers )
		pFnProfilePowers = (UFunction*) UObject::GObjObjects()->Data[ 54301 ];

	ABioHUD_execProfilePowers_Parms ProfilePowers_Parms;
	ProfilePowers_Parms.targetActorBehavior = targetActorBehavior;
	memcpy ( &ProfilePowers_Parms.nmPower, &nmPower, 0x8 );

	pFnProfilePowers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfilePowers, &ProfilePowers_Parms, NULL );

	pFnProfilePowers->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileWeaponAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileWeaponAttributes ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileWeaponAttributes = NULL;

	if ( ! pFnProfileWeaponAttributes )
		pFnProfileWeaponAttributes = (UFunction*) UObject::GObjObjects()->Data[ 54299 ];

	ABioHUD_execProfileWeaponAttributes_Parms ProfileWeaponAttributes_Parms;
	ProfileWeaponAttributes_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileWeaponAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileWeaponAttributes, &ProfileWeaponAttributes_Parms, NULL );

	pFnProfileWeaponAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfilePawnAttributes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfilePawnAttributes ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfilePawnAttributes = NULL;

	if ( ! pFnProfilePawnAttributes )
		pFnProfilePawnAttributes = (UFunction*) UObject::GObjObjects()->Data[ 54297 ];

	ABioHUD_execProfilePawnAttributes_Parms ProfilePawnAttributes_Parms;
	ProfilePawnAttributes_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfilePawnAttributes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfilePawnAttributes, &ProfilePawnAttributes_Parms, NULL );

	pFnProfilePawnAttributes->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileTalents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileTalents ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileTalents = NULL;

	if ( ! pFnProfileTalents )
		pFnProfileTalents = (UFunction*) UObject::GObjObjects()->Data[ 54295 ];

	ABioHUD_execProfileTalents_Parms ProfileTalents_Parms;
	ProfileTalents_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileTalents, &ProfileTalents_Parms, NULL );

	pFnProfileTalents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioHUD.ProfileCombat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioActorBehavior*       targetActorBehavior            ( CPF_Parm )

void ABioHUD::ProfileCombat ( class UBioActorBehavior* targetActorBehavior )
{
	static UFunction* pFnProfileCombat = NULL;

	if ( ! pFnProfileCombat )
		pFnProfileCombat = (UFunction*) UObject::GObjObjects()->Data[ 54293 ];

	ABioHUD_execProfileCombat_Parms ProfileCombat_Parms;
	ProfileCombat_Parms.targetActorBehavior = targetActorBehavior;

	pFnProfileCombat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileCombat, &ProfileCombat_Parms, NULL );

	pFnProfileCombat->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMoviePlayer.ShutdownMovie
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioMoviePlayer::eventShutdownMovie ( )
{
	static UFunction* pFnShutdownMovie = NULL;

	if ( ! pFnShutdownMovie )
		pFnShutdownMovie = (UFunction*) UObject::GObjObjects()->Data[ 55746 ];

	UBioMoviePlayer_eventShutdownMovie_Parms ShutdownMovie_Parms;

	this->ProcessEvent ( pFnShutdownMovie, &ShutdownMovie_Parms, NULL );
};

// Function SFXGame.BioMoviePlayer.Draw
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UBioMoviePlayer::Draw ( class UCanvas* Canvas )
{
	static UFunction* pFnDraw = NULL;

	if ( ! pFnDraw )
		pFnDraw = (UFunction*) UObject::GObjObjects()->Data[ 55744 ];

	UBioMoviePlayer_execDraw_Parms Draw_Parms;
	Draw_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnDraw, &Draw_Parms, NULL );
};

// Function SFXGame.BioMoviePlayer.SetMaterial
// [0x00020002] 
// Parameters infos:
// class UMaterial*               Material                       ( CPF_Parm )

void UBioMoviePlayer::SetMaterial ( class UMaterial* Material )
{
	static UFunction* pFnSetMaterial = NULL;

	if ( ! pFnSetMaterial )
		pFnSetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 55741 ];

	UBioMoviePlayer_execSetMaterial_Parms SetMaterial_Parms;
	SetMaterial_Parms.Material = Material;

	this->ProcessEvent ( pFnSetMaterial, &SetMaterial_Parms, NULL );
};

// Function SFXGame.BioMoviePlayer.SetTextureMovie
// [0x00020002] 
// Parameters infos:
// class UTextureMovie*           TextureMovie                   ( CPF_Parm )

void UBioMoviePlayer::SetTextureMovie ( class UTextureMovie* TextureMovie )
{
	static UFunction* pFnSetTextureMovie = NULL;

	if ( ! pFnSetTextureMovie )
		pFnSetTextureMovie = (UFunction*) UObject::GObjObjects()->Data[ 55737 ];

	UBioMoviePlayer_execSetTextureMovie_Parms SetTextureMovie_Parms;
	SetTextureMovie_Parms.TextureMovie = TextureMovie;

	this->ProcessEvent ( pFnSetTextureMovie, &SetTextureMovie_Parms, NULL );
};

// Function SFXGame.BioMoviePlayer.InitializeMovie
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioMoviePlayer::InitializeMovie ( )
{
	static UFunction* pFnInitializeMovie = NULL;

	if ( ! pFnInitializeMovie )
		pFnInitializeMovie = (UFunction*) UObject::GObjObjects()->Data[ 55735 ];

	UBioMoviePlayer_execInitializeMovie_Parms InitializeMovie_Parms;

	this->ProcessEvent ( pFnInitializeMovie, &InitializeMovie_Parms, NULL );
};

// Function SFXGame.BioMoviePlayer.OnMovieFinished
// [0x00120000] 
// Parameters infos:
// class UTextureMovie*           TextureMovie                   ( CPF_Parm )

void UBioMoviePlayer::OnMovieFinished ( class UTextureMovie* TextureMovie )
{
	static UFunction* pFnOnMovieFinished = NULL;

	if ( ! pFnOnMovieFinished )
		pFnOnMovieFinished = (UFunction*) UObject::GObjObjects()->Data[ 55733 ];

	UBioMoviePlayer_execOnMovieFinished_Parms OnMovieFinished_Parms;
	OnMovieFinished_Parms.TextureMovie = TextureMovie;

	this->ProcessEvent ( pFnOnMovieFinished, &OnMovieFinished_Parms, NULL );
};

// Function SFXGame.BioSubtitles.UpdateSubtitles
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSubtitles::UpdateSubtitles ( float fDeltaT )
{
	static UFunction* pFnUpdateSubtitles = NULL;

	if ( ! pFnUpdateSubtitles )
		pFnUpdateSubtitles = (UFunction*) UObject::GObjObjects()->Data[ 64833 ];

	UBioSubtitles_execUpdateSubtitles_Parms UpdateSubtitles_Parms;
	UpdateSubtitles_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateSubtitles, &UpdateSubtitles_Parms, NULL );
};

// Function SFXGame.BioSubtitles.ClearHistory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSubtitles::ClearHistory ( )
{
	static UFunction* pFnClearHistory = NULL;

	if ( ! pFnClearHistory )
		pFnClearHistory = (UFunction*) UObject::GObjObjects()->Data[ 64832 ];

	UBioSubtitles_execClearHistory_Parms ClearHistory_Parms;

	pFnClearHistory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearHistory, &ClearHistory_Parms, NULL );

	pFnClearHistory->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSubtitles.SetRenderMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RenderMode                     ( CPF_Parm )
// unsigned long                  bForceDisplay                  ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioSubtitles::SetRenderMode ( unsigned char RenderMode, unsigned long bForceDisplay )
{
	static UFunction* pFnSetRenderMode = NULL;

	if ( ! pFnSetRenderMode )
		pFnSetRenderMode = (UFunction*) UObject::GObjObjects()->Data[ 64828 ];

	UBioSubtitles_execSetRenderMode_Parms SetRenderMode_Parms;
	SetRenderMode_Parms.RenderMode = RenderMode;
	SetRenderMode_Parms.bForceDisplay = bForceDisplay;

	pFnSetRenderMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRenderMode, &SetRenderMode_Parms, NULL );

	pFnSetRenderMode->FunctionFlags |= 0x400;

	return SetRenderMode_Parms.ReturnValue;
};

// Function SFXGame.BioSubtitles.GetRenderMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioSubtitles::GetRenderMode ( )
{
	static UFunction* pFnGetRenderMode = NULL;

	if ( ! pFnGetRenderMode )
		pFnGetRenderMode = (UFunction*) UObject::GObjObjects()->Data[ 61415 ];

	UBioSubtitles_execGetRenderMode_Parms GetRenderMode_Parms;

	pFnGetRenderMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRenderMode, &GetRenderMode_Parms, NULL );

	pFnGetRenderMode->FunctionFlags |= 0x400;

	return GetRenderMode_Parms.ReturnValue;
};

// Function SFXGame.BioSubtitles.HasSubtitle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSubtitles::HasSubtitle ( )
{
	static UFunction* pFnHasSubtitle = NULL;

	if ( ! pFnHasSubtitle )
		pFnHasSubtitle = (UFunction*) UObject::GObjObjects()->Data[ 61413 ];

	UBioSubtitles_execHasSubtitle_Parms HasSubtitle_Parms;

	pFnHasSubtitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasSubtitle, &HasSubtitle_Parms, NULL );

	pFnHasSubtitle->FunctionFlags |= 0x400;

	return HasSubtitle_Parms.ReturnValue;
};

// Function SFXGame.BioSubtitles.DisplaySubtitle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sSubtitle                      ( CPF_Parm | CPF_NeedCtorLink )
// float                          fDuration                      ( CPF_Parm )

void UBioSubtitles::DisplaySubtitle ( struct FString sSubtitle, float fDuration )
{
	static UFunction* pFnDisplaySubtitle = NULL;

	if ( ! pFnDisplaySubtitle )
		pFnDisplaySubtitle = (UFunction*) UObject::GObjObjects()->Data[ 64825 ];

	UBioSubtitles_execDisplaySubtitle_Parms DisplaySubtitle_Parms;
	memcpy ( &DisplaySubtitle_Parms.sSubtitle, &sSubtitle, 0x10 );
	DisplaySubtitle_Parms.fDuration = fDuration;

	pFnDisplaySubtitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplaySubtitle, &DisplaySubtitle_Parms, NULL );

	pFnDisplaySubtitle->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.HidePawn
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pOriginalPawn                ( CPF_Parm )
// unsigned long                  bHidden                        ( CPF_OptionalParm | CPF_Parm )

void UBioUIWorld::HidePawn ( class ABioPawn* a_pOriginalPawn, unsigned long bHidden )
{
	static UFunction* pFnHidePawn = NULL;

	if ( ! pFnHidePawn )
		pFnHidePawn = (UFunction*) UObject::GObjObjects()->Data[ 65162 ];

	UBioUIWorld_execHidePawn_Parms HidePawn_Parms;
	HidePawn_Parms.a_pOriginalPawn = a_pOriginalPawn;
	HidePawn_Parms.bHidden = bHidden;

	pFnHidePawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHidePawn, &HidePawn_Parms, NULL );

	pFnHidePawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.AttachOmnitool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pSourcePawn                  ( CPF_Parm )
// unsigned long                  a_fnClassName                  ( CPF_Parm )

void UBioUIWorld::AttachOmnitool ( class ABioPawn* a_pSourcePawn, unsigned long a_fnClassName )
{
	static UFunction* pFnAttachOmnitool = NULL;

	if ( ! pFnAttachOmnitool )
		pFnAttachOmnitool = (UFunction*) UObject::GObjObjects()->Data[ 65159 ];

	UBioUIWorld_execAttachOmnitool_Parms AttachOmnitool_Parms;
	AttachOmnitool_Parms.a_pSourcePawn = a_pSourcePawn;
	AttachOmnitool_Parms.a_fnClassName = a_fnClassName;

	pFnAttachOmnitool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachOmnitool, &AttachOmnitool_Parms, NULL );

	pFnAttachOmnitool->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.PrimeTextures
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pSourcePawn                  ( CPF_Parm )

void UBioUIWorld::PrimeTextures ( class ABioPawn* a_pSourcePawn )
{
	static UFunction* pFnPrimeTextures = NULL;

	if ( ! pFnPrimeTextures )
		pFnPrimeTextures = (UFunction*) UObject::GObjObjects()->Data[ 65157 ];

	UBioUIWorld_execPrimeTextures_Parms PrimeTextures_Parms;
	PrimeTextures_Parms.a_pSourcePawn = a_pSourcePawn;

	pFnPrimeTextures->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrimeTextures, &PrimeTextures_Parms, NULL );

	pFnPrimeTextures->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.AttachBioticsAndTech
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pSourcePawn                  ( CPF_Parm )
// struct FName                   a_fnClassName                  ( CPF_Parm )

void UBioUIWorld::AttachBioticsAndTech ( class ABioPawn* a_pSourcePawn, struct FName a_fnClassName )
{
	static UFunction* pFnAttachBioticsAndTech = NULL;

	if ( ! pFnAttachBioticsAndTech )
		pFnAttachBioticsAndTech = (UFunction*) UObject::GObjObjects()->Data[ 65154 ];

	UBioUIWorld_execAttachBioticsAndTech_Parms AttachBioticsAndTech_Parms;
	AttachBioticsAndTech_Parms.a_pSourcePawn = a_pSourcePawn;
	memcpy ( &AttachBioticsAndTech_Parms.a_fnClassName, &a_fnClassName, 0x8 );

	pFnAttachBioticsAndTech->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachBioticsAndTech, &AttachBioticsAndTech_Parms, NULL );

	pFnAttachBioticsAndTech->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.MovePawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pOriginalPawn                ( CPF_Parm )
// struct FName                   a_fnNewLocation                ( CPF_Parm )

void UBioUIWorld::MovePawn ( class ABioPawn* a_pOriginalPawn, struct FName a_fnNewLocation )
{
	static UFunction* pFnMovePawn = NULL;

	if ( ! pFnMovePawn )
		pFnMovePawn = (UFunction*) UObject::GObjObjects()->Data[ 65151 ];

	UBioUIWorld_execMovePawn_Parms MovePawn_Parms;
	MovePawn_Parms.a_pOriginalPawn = a_pOriginalPawn;
	memcpy ( &MovePawn_Parms.a_fnNewLocation, &a_fnNewLocation, 0x8 );

	pFnMovePawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMovePawn, &MovePawn_Parms, NULL );

	pFnMovePawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.SwapPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pSourcePawn                  ( CPF_Parm )
// struct FName                   a_fnSourceVarName              ( CPF_Parm )
// class ABioPawn*                a_pOtherPawn                   ( CPF_Parm )
// struct FName                   a_fnOtherVarName               ( CPF_Parm )

void UBioUIWorld::SwapPawn ( class ABioPawn* a_pSourcePawn, struct FName a_fnSourceVarName, class ABioPawn* a_pOtherPawn, struct FName a_fnOtherVarName )
{
	static UFunction* pFnSwapPawn = NULL;

	if ( ! pFnSwapPawn )
		pFnSwapPawn = (UFunction*) UObject::GObjObjects()->Data[ 65146 ];

	UBioUIWorld_execSwapPawn_Parms SwapPawn_Parms;
	SwapPawn_Parms.a_pSourcePawn = a_pSourcePawn;
	memcpy ( &SwapPawn_Parms.a_fnSourceVarName, &a_fnSourceVarName, 0x8 );
	SwapPawn_Parms.a_pOtherPawn = a_pOtherPawn;
	memcpy ( &SwapPawn_Parms.a_fnOtherVarName, &a_fnOtherVarName, 0x8 );

	pFnSwapPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapPawn, &SwapPawn_Parms, NULL );

	pFnSwapPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.ResetActors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioUIWorld::ResetActors ( )
{
	static UFunction* pFnResetActors = NULL;

	if ( ! pFnResetActors )
		pFnResetActors = (UFunction*) UObject::GObjObjects()->Data[ 65145 ];

	UBioUIWorld_execResetActors_Parms ResetActors_Parms;

	pFnResetActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetActors, &ResetActors_Parms, NULL );

	pFnResetActors->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.SetNameVariable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   a_fnVariableName               ( CPF_Parm )
// struct FName                   a_nmValue                      ( CPF_Parm )

void UBioUIWorld::SetNameVariable ( struct FName a_fnVariableName, struct FName a_nmValue )
{
	static UFunction* pFnSetNameVariable = NULL;

	if ( ! pFnSetNameVariable )
		pFnSetNameVariable = (UFunction*) UObject::GObjObjects()->Data[ 65142 ];

	UBioUIWorld_execSetNameVariable_Parms SetNameVariable_Parms;
	memcpy ( &SetNameVariable_Parms.a_fnVariableName, &a_fnVariableName, 0x8 );
	memcpy ( &SetNameVariable_Parms.a_nmValue, &a_nmValue, 0x8 );

	pFnSetNameVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNameVariable, &SetNameVariable_Parms, NULL );

	pFnSetNameVariable->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.SetPawnVariable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   a_fnVariableName               ( CPF_Parm )
// class ABioPawn*                a_pSourcePawn                  ( CPF_Parm )

void UBioUIWorld::SetPawnVariable ( struct FName a_fnVariableName, class ABioPawn* a_pSourcePawn )
{
	static UFunction* pFnSetPawnVariable = NULL;

	if ( ! pFnSetPawnVariable )
		pFnSetPawnVariable = (UFunction*) UObject::GObjObjects()->Data[ 65139 ];

	UBioUIWorld_execSetPawnVariable_Parms SetPawnVariable_Parms;
	memcpy ( &SetPawnVariable_Parms.a_fnVariableName, &a_fnVariableName, 0x8 );
	SetPawnVariable_Parms.a_pSourcePawn = a_pSourcePawn;

	pFnSetPawnVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPawnVariable, &SetPawnVariable_Parms, NULL );

	pFnSetPawnVariable->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.SetObjectVariable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   a_fnVariableName               ( CPF_Parm )
// class UObject*                 a_pValue                       ( CPF_Parm )

void UBioUIWorld::SetObjectVariable ( struct FName a_fnVariableName, class UObject* a_pValue )
{
	static UFunction* pFnSetObjectVariable = NULL;

	if ( ! pFnSetObjectVariable )
		pFnSetObjectVariable = (UFunction*) UObject::GObjObjects()->Data[ 65136 ];

	UBioUIWorld_execSetObjectVariable_Parms SetObjectVariable_Parms;
	memcpy ( &SetObjectVariable_Parms.a_fnVariableName, &a_fnVariableName, 0x8 );
	SetObjectVariable_Parms.a_pValue = a_pValue;

	pFnSetObjectVariable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetObjectVariable, &SetObjectVariable_Parms, NULL );

	pFnSetObjectVariable->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.UpdateHeadGearVisibility
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioPawn*                pOriginalPawn                  ( CPF_Parm )

void UBioUIWorld::UpdateHeadGearVisibility ( class ABioPawn* pOriginalPawn )
{
	static UFunction* pFnUpdateHeadGearVisibility = NULL;

	if ( ! pFnUpdateHeadGearVisibility )
		pFnUpdateHeadGearVisibility = (UFunction*) UObject::GObjObjects()->Data[ 61251 ];

	UBioUIWorld_execUpdateHeadGearVisibility_Parms UpdateHeadGearVisibility_Parms;
	UpdateHeadGearVisibility_Parms.pOriginalPawn = pOriginalPawn;

	pFnUpdateHeadGearVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHeadGearVisibility, &UpdateHeadGearVisibility_Parms, NULL );

	pFnUpdateHeadGearVisibility->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.UpdateAppearance
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pOriginalPawn                ( CPF_Parm )
// struct FName                   a_fnClassAnimSet               ( CPF_OptionalParm | CPF_Parm )

void UBioUIWorld::UpdateAppearance ( class ABioPawn* a_pOriginalPawn, struct FName a_fnClassAnimSet )
{
	static UFunction* pFnUpdateAppearance = NULL;

	if ( ! pFnUpdateAppearance )
		pFnUpdateAppearance = (UFunction*) UObject::GObjObjects()->Data[ 65132 ];

	UBioUIWorld_execUpdateAppearance_Parms UpdateAppearance_Parms;
	UpdateAppearance_Parms.a_pOriginalPawn = a_pOriginalPawn;
	memcpy ( &UpdateAppearance_Parms.a_fnClassAnimSet, &a_fnClassAnimSet, 0x8 );

	pFnUpdateAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAppearance, &UpdateAppearance_Parms, NULL );

	pFnUpdateAppearance->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.DestroyPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pOriginalPawn                ( CPF_Parm )

void UBioUIWorld::DestroyPawn ( class ABioPawn* a_pOriginalPawn )
{
	static UFunction* pFnDestroyPawn = NULL;

	if ( ! pFnDestroyPawn )
		pFnDestroyPawn = (UFunction*) UObject::GObjObjects()->Data[ 65130 ];

	UBioUIWorld_execDestroyPawn_Parms DestroyPawn_Parms;
	DestroyPawn_Parms.a_pOriginalPawn = a_pOriginalPawn;

	pFnDestroyPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyPawn, &DestroyPawn_Parms, NULL );

	pFnDestroyPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.SpawnPawn
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                a_pOriginalPawn                ( CPF_Parm )
// struct FName                   a_fnSpawnLocation              ( CPF_Parm )
// struct FName                   a_fnSpawnVariable              ( CPF_Parm )
// struct FName                   a_fnClassAnimSet               ( CPF_OptionalParm | CPF_Parm )
// struct FName                   a_fnRemoteEvent                ( CPF_OptionalParm | CPF_Parm )

void UBioUIWorld::SpawnPawn ( class ABioPawn* a_pOriginalPawn, struct FName a_fnSpawnLocation, struct FName a_fnSpawnVariable, struct FName a_fnClassAnimSet, struct FName a_fnRemoteEvent )
{
	static UFunction* pFnSpawnPawn = NULL;

	if ( ! pFnSpawnPawn )
		pFnSpawnPawn = (UFunction*) UObject::GObjObjects()->Data[ 65124 ];

	UBioUIWorld_execSpawnPawn_Parms SpawnPawn_Parms;
	SpawnPawn_Parms.a_pOriginalPawn = a_pOriginalPawn;
	memcpy ( &SpawnPawn_Parms.a_fnSpawnLocation, &a_fnSpawnLocation, 0x8 );
	memcpy ( &SpawnPawn_Parms.a_fnSpawnVariable, &a_fnSpawnVariable, 0x8 );
	memcpy ( &SpawnPawn_Parms.a_fnClassAnimSet, &a_fnClassAnimSet, 0x8 );
	memcpy ( &SpawnPawn_Parms.a_fnRemoteEvent, &a_fnRemoteEvent, 0x8 );

	pFnSpawnPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnPawn, &SpawnPawn_Parms, NULL );

	pFnSpawnPawn->FunctionFlags |= 0x400;
};

// Function SFXGame.BioUIWorld.TriggerEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   a_fnEventName                  ( CPF_Parm )
// class AActor*                  a_pCaller                      ( CPF_Parm )

void UBioUIWorld::TriggerEvent ( struct FName a_fnEventName, class AActor* a_pCaller )
{
	static UFunction* pFnTriggerEvent = NULL;

	if ( ! pFnTriggerEvent )
		pFnTriggerEvent = (UFunction*) UObject::GObjObjects()->Data[ 65121 ];

	UBioUIWorld_execTriggerEvent_Parms TriggerEvent_Parms;
	memcpy ( &TriggerEvent_Parms.a_fnEventName, &a_fnEventName, 0x8 );
	TriggerEvent_Parms.a_pCaller = a_pCaller;

	pFnTriggerEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerEvent, &TriggerEvent_Parms, NULL );

	pFnTriggerEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInGamePropertyEditor.filterString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Input                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UBioInGamePropertyEditor::filterString ( struct FString Input )
{
	static UFunction* pFnfilterString = NULL;

	if ( ! pFnfilterString )
		pFnfilterString = (UFunction*) UObject::GObjObjects()->Data[ 54728 ];

	UBioInGamePropertyEditor_execfilterString_Parms filterString_Parms;
	memcpy ( &filterString_Parms.Input, &Input, 0x10 );

	this->ProcessEvent ( pFnfilterString, &filterString_Parms, NULL );

	return filterString_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.DrawToHUD
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 oHUD                           ( CPF_Parm )

void UBioInGamePropertyEditor::DrawToHUD ( class ABioHUD* oHUD )
{
	static UFunction* pFnDrawToHUD = NULL;

	if ( ! pFnDrawToHUD )
		pFnDrawToHUD = (UFunction*) UObject::GObjObjects()->Data[ 54697 ];

	UBioInGamePropertyEditor_execDrawToHUD_Parms DrawToHUD_Parms;
	DrawToHUD_Parms.oHUD = oHUD;

	this->ProcessEvent ( pFnDrawToHUD, &DrawToHUD_Parms, NULL );
};

// Function SFXGame.BioInGamePropertyEditor.DrawBones
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioHUD*                 oHUD                           ( CPF_Parm )

void UBioInGamePropertyEditor::DrawBones ( class ABioHUD* oHUD )
{
	static UFunction* pFnDrawBones = NULL;

	if ( ! pFnDrawBones )
		pFnDrawBones = (UFunction*) UObject::GObjObjects()->Data[ 54695 ];

	UBioInGamePropertyEditor_execDrawBones_Parms DrawBones_Parms;
	DrawBones_Parms.oHUD = oHUD;

	pFnDrawBones->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawBones, &DrawBones_Parms, NULL );

	pFnDrawBones->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInGamePropertyEditor.PerformRightShoulderAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformRightShoulderAction ( )
{
	static UFunction* pFnPerformRightShoulderAction = NULL;

	if ( ! pFnPerformRightShoulderAction )
		pFnPerformRightShoulderAction = (UFunction*) UObject::GObjObjects()->Data[ 54693 ];

	UBioInGamePropertyEditor_execPerformRightShoulderAction_Parms PerformRightShoulderAction_Parms;

	pFnPerformRightShoulderAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformRightShoulderAction, &PerformRightShoulderAction_Parms, NULL );

	pFnPerformRightShoulderAction->FunctionFlags |= 0x400;

	return PerformRightShoulderAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformLeftShoulderAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformLeftShoulderAction ( )
{
	static UFunction* pFnPerformLeftShoulderAction = NULL;

	if ( ! pFnPerformLeftShoulderAction )
		pFnPerformLeftShoulderAction = (UFunction*) UObject::GObjObjects()->Data[ 54691 ];

	UBioInGamePropertyEditor_execPerformLeftShoulderAction_Parms PerformLeftShoulderAction_Parms;

	pFnPerformLeftShoulderAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformLeftShoulderAction, &PerformLeftShoulderAction_Parms, NULL );

	pFnPerformLeftShoulderAction->FunctionFlags |= 0x400;

	return PerformLeftShoulderAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformRightTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformRightTriggerAction ( )
{
	static UFunction* pFnPerformRightTriggerAction = NULL;

	if ( ! pFnPerformRightTriggerAction )
		pFnPerformRightTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 54689 ];

	UBioInGamePropertyEditor_execPerformRightTriggerAction_Parms PerformRightTriggerAction_Parms;

	pFnPerformRightTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformRightTriggerAction, &PerformRightTriggerAction_Parms, NULL );

	pFnPerformRightTriggerAction->FunctionFlags |= 0x400;

	return PerformRightTriggerAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformLeftTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformLeftTriggerAction ( )
{
	static UFunction* pFnPerformLeftTriggerAction = NULL;

	if ( ! pFnPerformLeftTriggerAction )
		pFnPerformLeftTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 54687 ];

	UBioInGamePropertyEditor_execPerformLeftTriggerAction_Parms PerformLeftTriggerAction_Parms;

	pFnPerformLeftTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformLeftTriggerAction, &PerformLeftTriggerAction_Parms, NULL );

	pFnPerformLeftTriggerAction->FunctionFlags |= 0x400;

	return PerformLeftTriggerAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.ActivateMainMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::ActivateMainMenu ( )
{
	static UFunction* pFnActivateMainMenu = NULL;

	if ( ! pFnActivateMainMenu )
		pFnActivateMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 54685 ];

	UBioInGamePropertyEditor_execActivateMainMenu_Parms ActivateMainMenu_Parms;

	pFnActivateMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateMainMenu, &ActivateMainMenu_Parms, NULL );

	pFnActivateMainMenu->FunctionFlags |= 0x400;

	return ActivateMainMenu_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformLeftAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformLeftAction ( )
{
	static UFunction* pFnPerformLeftAction = NULL;

	if ( ! pFnPerformLeftAction )
		pFnPerformLeftAction = (UFunction*) UObject::GObjObjects()->Data[ 54683 ];

	UBioInGamePropertyEditor_execPerformLeftAction_Parms PerformLeftAction_Parms;

	pFnPerformLeftAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformLeftAction, &PerformLeftAction_Parms, NULL );

	pFnPerformLeftAction->FunctionFlags |= 0x400;

	return PerformLeftAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformRightAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformRightAction ( )
{
	static UFunction* pFnPerformRightAction = NULL;

	if ( ! pFnPerformRightAction )
		pFnPerformRightAction = (UFunction*) UObject::GObjObjects()->Data[ 54681 ];

	UBioInGamePropertyEditor_execPerformRightAction_Parms PerformRightAction_Parms;

	pFnPerformRightAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformRightAction, &PerformRightAction_Parms, NULL );

	pFnPerformRightAction->FunctionFlags |= 0x400;

	return PerformRightAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformDownAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformDownAction ( )
{
	static UFunction* pFnPerformDownAction = NULL;

	if ( ! pFnPerformDownAction )
		pFnPerformDownAction = (UFunction*) UObject::GObjObjects()->Data[ 54679 ];

	UBioInGamePropertyEditor_execPerformDownAction_Parms PerformDownAction_Parms;

	pFnPerformDownAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformDownAction, &PerformDownAction_Parms, NULL );

	pFnPerformDownAction->FunctionFlags |= 0x400;

	return PerformDownAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformUpAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformUpAction ( )
{
	static UFunction* pFnPerformUpAction = NULL;

	if ( ! pFnPerformUpAction )
		pFnPerformUpAction = (UFunction*) UObject::GObjObjects()->Data[ 54677 ];

	UBioInGamePropertyEditor_execPerformUpAction_Parms PerformUpAction_Parms;

	pFnPerformUpAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformUpAction, &PerformUpAction_Parms, NULL );

	pFnPerformUpAction->FunctionFlags |= 0x400;

	return PerformUpAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformDeactivateAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformDeactivateAction ( )
{
	static UFunction* pFnPerformDeactivateAction = NULL;

	if ( ! pFnPerformDeactivateAction )
		pFnPerformDeactivateAction = (UFunction*) UObject::GObjObjects()->Data[ 54675 ];

	UBioInGamePropertyEditor_execPerformDeactivateAction_Parms PerformDeactivateAction_Parms;

	pFnPerformDeactivateAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformDeactivateAction, &PerformDeactivateAction_Parms, NULL );

	pFnPerformDeactivateAction->FunctionFlags |= 0x400;

	return PerformDeactivateAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.PerformActivateAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::PerformActivateAction ( )
{
	static UFunction* pFnPerformActivateAction = NULL;

	if ( ! pFnPerformActivateAction )
		pFnPerformActivateAction = (UFunction*) UObject::GObjObjects()->Data[ 54673 ];

	UBioInGamePropertyEditor_execPerformActivateAction_Parms PerformActivateAction_Parms;

	pFnPerformActivateAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformActivateAction, &PerformActivateAction_Parms, NULL );

	pFnPerformActivateAction->FunctionFlags |= 0x400;

	return PerformActivateAction_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.CreateNodeTestData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::CreateNodeTestData ( )
{
	static UFunction* pFnCreateNodeTestData = NULL;

	if ( ! pFnCreateNodeTestData )
		pFnCreateNodeTestData = (UFunction*) UObject::GObjObjects()->Data[ 54671 ];

	UBioInGamePropertyEditor_execCreateNodeTestData_Parms CreateNodeTestData_Parms;

	pFnCreateNodeTestData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateNodeTestData, &CreateNodeTestData_Parms, NULL );

	pFnCreateNodeTestData->FunctionFlags |= 0x400;

	return CreateNodeTestData_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.WriteTreeDataToHUD
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioHUD*                 oHUD                           ( CPF_Parm )

bool UBioInGamePropertyEditor::WriteTreeDataToHUD ( class ABioHUD* oHUD )
{
	static UFunction* pFnWriteTreeDataToHUD = NULL;

	if ( ! pFnWriteTreeDataToHUD )
		pFnWriteTreeDataToHUD = (UFunction*) UObject::GObjObjects()->Data[ 54668 ];

	UBioInGamePropertyEditor_execWriteTreeDataToHUD_Parms WriteTreeDataToHUD_Parms;
	WriteTreeDataToHUD_Parms.oHUD = oHUD;

	pFnWriteTreeDataToHUD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteTreeDataToHUD, &WriteTreeDataToHUD_Parms, NULL );

	pFnWriteTreeDataToHUD->FunctionFlags |= 0x400;

	return WriteTreeDataToHUD_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.UpdateSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )

bool UBioInGamePropertyEditor::UpdateSystem ( float fDeltaTime )
{
	static UFunction* pFnUpdateSystem = NULL;

	if ( ! pFnUpdateSystem )
		pFnUpdateSystem = (UFunction*) UObject::GObjObjects()->Data[ 54665 ];

	UBioInGamePropertyEditor_execUpdateSystem_Parms UpdateSystem_Parms;
	UpdateSystem_Parms.fDeltaTime = fDeltaTime;

	pFnUpdateSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSystem, &UpdateSystem_Parms, NULL );

	pFnUpdateSystem->FunctionFlags |= 0x400;

	return UpdateSystem_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.DeactivateSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::DeactivateSystem ( )
{
	static UFunction* pFnDeactivateSystem = NULL;

	if ( ! pFnDeactivateSystem )
		pFnDeactivateSystem = (UFunction*) UObject::GObjObjects()->Data[ 54663 ];

	UBioInGamePropertyEditor_execDeactivateSystem_Parms DeactivateSystem_Parms;

	pFnDeactivateSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateSystem, &DeactivateSystem_Parms, NULL );

	pFnDeactivateSystem->FunctionFlags |= 0x400;

	return DeactivateSystem_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.ActivateSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::ActivateSystem ( )
{
	static UFunction* pFnActivateSystem = NULL;

	if ( ! pFnActivateSystem )
		pFnActivateSystem = (UFunction*) UObject::GObjObjects()->Data[ 54661 ];

	UBioInGamePropertyEditor_execActivateSystem_Parms ActivateSystem_Parms;

	pFnActivateSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateSystem, &ActivateSystem_Parms, NULL );

	pFnActivateSystem->FunctionFlags |= 0x400;

	return ActivateSystem_Parms.ReturnValue;
};

// Function SFXGame.BioInGamePropertyEditor.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInGamePropertyEditor::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 54659 ];

	UBioInGamePropertyEditor_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;

	return Initialize_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.getTop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioInGamePropertyEditor* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioInGamePropertyEditor* UBioPropertyEditorBaseNode::getTop ( )
{
	static UFunction* pFngetTop = NULL;

	if ( ! pFngetTop )
		pFngetTop = (UFunction*) UObject::GObjObjects()->Data[ 57599 ];

	UBioPropertyEditorBaseNode_execgetTop_Parms getTop_Parms;

	pFngetTop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTop, &getTop_Parms, NULL );

	pFngetTop->FunctionFlags |= 0x400;

	return getTop_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.getDisplayText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  selectable                     ( CPF_Parm )

struct FString UBioPropertyEditorBaseNode::getDisplayText ( unsigned long selectable )
{
	static UFunction* pFngetDisplayText = NULL;

	if ( ! pFngetDisplayText )
		pFngetDisplayText = (UFunction*) UObject::GObjObjects()->Data[ 54721 ];

	UBioPropertyEditorBaseNode_execgetDisplayText_Parms getDisplayText_Parms;
	getDisplayText_Parms.selectable = selectable;

	pFngetDisplayText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetDisplayText, &getDisplayText_Parms, NULL );

	pFngetDisplayText->FunctionFlags |= 0x400;

	return getDisplayText_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.getColour
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FColor UBioPropertyEditorBaseNode::getColour ( )
{
	static UFunction* pFngetColour = NULL;

	if ( ! pFngetColour )
		pFngetColour = (UFunction*) UObject::GObjObjects()->Data[ 54719 ];

	UBioPropertyEditorBaseNode_execgetColour_Parms getColour_Parms;

	pFngetColour->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetColour, &getColour_Parms, NULL );

	pFngetColour->FunctionFlags |= 0x400;

	return getColour_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.setColour
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FColor                  Col                            ( CPF_Parm )

void UBioPropertyEditorBaseNode::setColour ( struct FColor Col )
{
	static UFunction* pFnsetColour = NULL;

	if ( ! pFnsetColour )
		pFnsetColour = (UFunction*) UObject::GObjObjects()->Data[ 57596 ];

	UBioPropertyEditorBaseNode_execsetColour_Parms setColour_Parms;
	memcpy ( &setColour_Parms.Col, &Col, 0x4 );

	pFnsetColour->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsetColour, &setColour_Parms, NULL );

	pFnsetColour->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.RightShoulderAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::RightShoulderAction ( )
{
	static UFunction* pFnRightShoulderAction = NULL;

	if ( ! pFnRightShoulderAction )
		pFnRightShoulderAction = (UFunction*) UObject::GObjObjects()->Data[ 57595 ];

	UBioPropertyEditorBaseNode_execRightShoulderAction_Parms RightShoulderAction_Parms;

	pFnRightShoulderAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRightShoulderAction, &RightShoulderAction_Parms, NULL );

	pFnRightShoulderAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.LeftShoulderAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::LeftShoulderAction ( )
{
	static UFunction* pFnLeftShoulderAction = NULL;

	if ( ! pFnLeftShoulderAction )
		pFnLeftShoulderAction = (UFunction*) UObject::GObjObjects()->Data[ 57594 ];

	UBioPropertyEditorBaseNode_execLeftShoulderAction_Parms LeftShoulderAction_Parms;

	pFnLeftShoulderAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeftShoulderAction, &LeftShoulderAction_Parms, NULL );

	pFnLeftShoulderAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.RightTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::RightTriggerAction ( )
{
	static UFunction* pFnRightTriggerAction = NULL;

	if ( ! pFnRightTriggerAction )
		pFnRightTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57593 ];

	UBioPropertyEditorBaseNode_execRightTriggerAction_Parms RightTriggerAction_Parms;

	pFnRightTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRightTriggerAction, &RightTriggerAction_Parms, NULL );

	pFnRightTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.LeftTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::LeftTriggerAction ( )
{
	static UFunction* pFnLeftTriggerAction = NULL;

	if ( ! pFnLeftTriggerAction )
		pFnLeftTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57592 ];

	UBioPropertyEditorBaseNode_execLeftTriggerAction_Parms LeftTriggerAction_Parms;

	pFnLeftTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeftTriggerAction, &LeftTriggerAction_Parms, NULL );

	pFnLeftTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.DecrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::DecrementCurrentSelection ( )
{
	static UFunction* pFnDecrementCurrentSelection = NULL;

	if ( ! pFnDecrementCurrentSelection )
		pFnDecrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57591 ];

	UBioPropertyEditorBaseNode_execDecrementCurrentSelection_Parms DecrementCurrentSelection_Parms;

	pFnDecrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementCurrentSelection, &DecrementCurrentSelection_Parms, NULL );

	pFnDecrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.IncrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorBaseNode::IncrementCurrentSelection ( )
{
	static UFunction* pFnIncrementCurrentSelection = NULL;

	if ( ! pFnIncrementCurrentSelection )
		pFnIncrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57590 ];

	UBioPropertyEditorBaseNode_execIncrementCurrentSelection_Parms IncrementCurrentSelection_Parms;

	pFnIncrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementCurrentSelection, &IncrementCurrentSelection_Parms, NULL );

	pFnIncrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorBaseNode.GetSelectablesParent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPropertyEditorBaseNode* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioPropertyEditorBaseNode* UBioPropertyEditorBaseNode::GetSelectablesParent ( )
{
	static UFunction* pFnGetSelectablesParent = NULL;

	if ( ! pFnGetSelectablesParent )
		pFnGetSelectablesParent = (UFunction*) UObject::GObjObjects()->Data[ 54723 ];

	UBioPropertyEditorBaseNode_execGetSelectablesParent_Parms GetSelectablesParent_Parms;

	pFnGetSelectablesParent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectablesParent, &GetSelectablesParent_Parms, NULL );

	pFnGetSelectablesParent->FunctionFlags |= 0x400;

	return GetSelectablesParent_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.GetSelectedChildOnStackTop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPropertyEditorBaseNode* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioPropertyEditorBaseNode* UBioPropertyEditorBaseNode::GetSelectedChildOnStackTop ( )
{
	static UFunction* pFnGetSelectedChildOnStackTop = NULL;

	if ( ! pFnGetSelectedChildOnStackTop )
		pFnGetSelectedChildOnStackTop = (UFunction*) UObject::GObjObjects()->Data[ 57588 ];

	UBioPropertyEditorBaseNode_execGetSelectedChildOnStackTop_Parms GetSelectedChildOnStackTop_Parms;

	pFnGetSelectedChildOnStackTop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectedChildOnStackTop, &GetSelectedChildOnStackTop_Parms, NULL );

	pFnGetSelectedChildOnStackTop->FunctionFlags |= 0x400;

	return GetSelectedChildOnStackTop_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.GetSelectedChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioPropertyEditorBaseNode* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioPropertyEditorBaseNode* UBioPropertyEditorBaseNode::GetSelectedChild ( )
{
	static UFunction* pFnGetSelectedChild = NULL;

	if ( ! pFnGetSelectedChild )
		pFnGetSelectedChild = (UFunction*) UObject::GObjObjects()->Data[ 57586 ];

	UBioPropertyEditorBaseNode_execGetSelectedChild_Parms GetSelectedChild_Parms;

	pFnGetSelectedChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSelectedChild, &GetSelectedChild_Parms, NULL );

	pFnGetSelectedChild->FunctionFlags |= 0x400;

	return GetSelectedChild_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBaseNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorBaseNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57584 ];

	UBioPropertyEditorBaseNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorBoneNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorBoneNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57627 ];

	UBioPropertyEditorBoneNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorLevelNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorLevelNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57660 ];

	UBioPropertyEditorLevelNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorLoadNode.DecrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorLoadNode::DecrementCurrentSelection ( )
{
	static UFunction* pFnDecrementCurrentSelection = NULL;

	if ( ! pFnDecrementCurrentSelection )
		pFnDecrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57666 ];

	UBioPropertyEditorLoadNode_execDecrementCurrentSelection_Parms DecrementCurrentSelection_Parms;

	pFnDecrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementCurrentSelection, &DecrementCurrentSelection_Parms, NULL );

	pFnDecrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorLoadNode.IncrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorLoadNode::IncrementCurrentSelection ( )
{
	static UFunction* pFnIncrementCurrentSelection = NULL;

	if ( ! pFnIncrementCurrentSelection )
		pFnIncrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57665 ];

	UBioPropertyEditorLoadNode_execIncrementCurrentSelection_Parms IncrementCurrentSelection_Parms;

	pFnIncrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementCurrentSelection, &IncrementCurrentSelection_Parms, NULL );

	pFnIncrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorLoadNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorLoadNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57663 ];

	UBioPropertyEditorLoadNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorPropertyNode.DecrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorPropertyNode::DecrementCurrentSelection ( )
{
	static UFunction* pFnDecrementCurrentSelection = NULL;

	if ( ! pFnDecrementCurrentSelection )
		pFnDecrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57620 ];

	UBioPropertyEditorPropertyNode_execDecrementCurrentSelection_Parms DecrementCurrentSelection_Parms;

	pFnDecrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementCurrentSelection, &DecrementCurrentSelection_Parms, NULL );

	pFnDecrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorPropertyNode.IncrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorPropertyNode::IncrementCurrentSelection ( )
{
	static UFunction* pFnIncrementCurrentSelection = NULL;

	if ( ! pFnIncrementCurrentSelection )
		pFnIncrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57619 ];

	UBioPropertyEditorPropertyNode_execIncrementCurrentSelection_Parms IncrementCurrentSelection_Parms;

	pFnIncrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementCurrentSelection, &IncrementCurrentSelection_Parms, NULL );

	pFnIncrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorPropertyNode.RightTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorPropertyNode::RightTriggerAction ( )
{
	static UFunction* pFnRightTriggerAction = NULL;

	if ( ! pFnRightTriggerAction )
		pFnRightTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57618 ];

	UBioPropertyEditorPropertyNode_execRightTriggerAction_Parms RightTriggerAction_Parms;

	pFnRightTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRightTriggerAction, &RightTriggerAction_Parms, NULL );

	pFnRightTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorPropertyNode.LeftTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorPropertyNode::LeftTriggerAction ( )
{
	static UFunction* pFnLeftTriggerAction = NULL;

	if ( ! pFnLeftTriggerAction )
		pFnLeftTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57617 ];

	UBioPropertyEditorPropertyNode_execLeftTriggerAction_Parms LeftTriggerAction_Parms;

	pFnLeftTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeftTriggerAction, &LeftTriggerAction_Parms, NULL );

	pFnLeftTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorPropertyNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorPropertyNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57615 ];

	UBioPropertyEditorPropertyNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorPropertyNode.getDisplayText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  selectable                     ( CPF_Parm )

struct FString UBioPropertyEditorPropertyNode::getDisplayText ( unsigned long selectable )
{
	static UFunction* pFngetDisplayText = NULL;

	if ( ! pFngetDisplayText )
		pFngetDisplayText = (UFunction*) UObject::GObjObjects()->Data[ 57612 ];

	UBioPropertyEditorPropertyNode_execgetDisplayText_Parms getDisplayText_Parms;
	getDisplayText_Parms.selectable = selectable;

	pFngetDisplayText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetDisplayText, &getDisplayText_Parms, NULL );

	pFngetDisplayText->FunctionFlags |= 0x400;

	return getDisplayText_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorPropertyNode.MakeNodes
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 thisOneOnly                    ( CPF_Parm | CPF_NeedCtorLink )

bool UBioPropertyEditorPropertyNode::MakeNodes ( struct FString thisOneOnly )
{
	static UFunction* pFnMakeNodes = NULL;

	if ( ! pFnMakeNodes )
		pFnMakeNodes = (UFunction*) UObject::GObjObjects()->Data[ 57609 ];

	UBioPropertyEditorPropertyNode_execMakeNodes_Parms MakeNodes_Parms;
	memcpy ( &MakeNodes_Parms.thisOneOnly, &thisOneOnly, 0x10 );

	pFnMakeNodes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMakeNodes, &MakeNodes_Parms, NULL );

	pFnMakeNodes->FunctionFlags |= 0x400;

	return MakeNodes_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorPropertyNode.SetObject
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 Obj                            ( CPF_Parm )

void UBioPropertyEditorPropertyNode::SetObject ( class UObject* Obj )
{
	static UFunction* pFnSetObject = NULL;

	if ( ! pFnSetObject )
		pFnSetObject = (UFunction*) UObject::GObjObjects()->Data[ 57607 ];

	UBioPropertyEditorPropertyNode_execSetObject_Parms SetObject_Parms;
	SetObject_Parms.Obj = Obj;

	pFnSetObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetObject, &SetObject_Parms, NULL );

	pFnSetObject->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorArrayNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorArrayNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57624 ];

	UBioPropertyEditorArrayNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorEditNode.getDisplayText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  selectable                     ( CPF_Parm )

struct FString UBioPropertyEditorEditNode::getDisplayText ( unsigned long selectable )
{
	static UFunction* pFngetDisplayText = NULL;

	if ( ! pFngetDisplayText )
		pFngetDisplayText = (UFunction*) UObject::GObjObjects()->Data[ 57653 ];

	UBioPropertyEditorEditNode_execgetDisplayText_Parms getDisplayText_Parms;
	getDisplayText_Parms.selectable = selectable;

	pFngetDisplayText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetDisplayText, &getDisplayText_Parms, NULL );

	pFngetDisplayText->FunctionFlags |= 0x400;

	return getDisplayText_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorEditNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorEditNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57651 ];

	UBioPropertyEditorEditNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorEditableNode.AcceptNewValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorEditableNode::AcceptNewValue ( )
{
	static UFunction* pFnAcceptNewValue = NULL;

	if ( ! pFnAcceptNewValue )
		pFnAcceptNewValue = (UFunction*) UObject::GObjObjects()->Data[ 57640 ];

	UBioPropertyEditorEditableNode_execAcceptNewValue_Parms AcceptNewValue_Parms;

	pFnAcceptNewValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptNewValue, &AcceptNewValue_Parms, NULL );

	pFnAcceptNewValue->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.DoChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          Delta                          ( CPF_Parm )

void UBioPropertyEditorEditableNode::DoChange ( float Delta )
{
	static UFunction* pFnDoChange = NULL;

	if ( ! pFnDoChange )
		pFnDoChange = (UFunction*) UObject::GObjObjects()->Data[ 57638 ];

	UBioPropertyEditorEditableNode_execDoChange_Parms DoChange_Parms;
	DoChange_Parms.Delta = Delta;

	pFnDoChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoChange, &DoChange_Parms, NULL );

	pFnDoChange->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.RightTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorEditableNode::RightTriggerAction ( )
{
	static UFunction* pFnRightTriggerAction = NULL;

	if ( ! pFnRightTriggerAction )
		pFnRightTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57637 ];

	UBioPropertyEditorEditableNode_execRightTriggerAction_Parms RightTriggerAction_Parms;

	pFnRightTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRightTriggerAction, &RightTriggerAction_Parms, NULL );

	pFnRightTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.LeftTriggerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorEditableNode::LeftTriggerAction ( )
{
	static UFunction* pFnLeftTriggerAction = NULL;

	if ( ! pFnLeftTriggerAction )
		pFnLeftTriggerAction = (UFunction*) UObject::GObjObjects()->Data[ 57636 ];

	UBioPropertyEditorEditableNode_execLeftTriggerAction_Parms LeftTriggerAction_Parms;

	pFnLeftTriggerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeftTriggerAction, &LeftTriggerAction_Parms, NULL );

	pFnLeftTriggerAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.DecrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorEditableNode::DecrementCurrentSelection ( )
{
	static UFunction* pFnDecrementCurrentSelection = NULL;

	if ( ! pFnDecrementCurrentSelection )
		pFnDecrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57635 ];

	UBioPropertyEditorEditableNode_execDecrementCurrentSelection_Parms DecrementCurrentSelection_Parms;

	pFnDecrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementCurrentSelection, &DecrementCurrentSelection_Parms, NULL );

	pFnDecrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.IncrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorEditableNode::IncrementCurrentSelection ( )
{
	static UFunction* pFnIncrementCurrentSelection = NULL;

	if ( ! pFnIncrementCurrentSelection )
		pFnIncrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57634 ];

	UBioPropertyEditorEditableNode_execIncrementCurrentSelection_Parms IncrementCurrentSelection_Parms;

	pFnIncrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementCurrentSelection, &IncrementCurrentSelection_Parms, NULL );

	pFnIncrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorEditableNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorEditableNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57632 ];

	UBioPropertyEditorEditableNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorReadOnlyNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorReadOnlyNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57668 ];

	UBioPropertyEditorReadOnlyNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorSaveNode.DecrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorSaveNode::DecrementCurrentSelection ( )
{
	static UFunction* pFnDecrementCurrentSelection = NULL;

	if ( ! pFnDecrementCurrentSelection )
		pFnDecrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57674 ];

	UBioPropertyEditorSaveNode_execDecrementCurrentSelection_Parms DecrementCurrentSelection_Parms;

	pFnDecrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementCurrentSelection, &DecrementCurrentSelection_Parms, NULL );

	pFnDecrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorSaveNode.IncrementCurrentSelection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPropertyEditorSaveNode::IncrementCurrentSelection ( )
{
	static UFunction* pFnIncrementCurrentSelection = NULL;

	if ( ! pFnIncrementCurrentSelection )
		pFnIncrementCurrentSelection = (UFunction*) UObject::GObjObjects()->Data[ 57673 ];

	UBioPropertyEditorSaveNode_execIncrementCurrentSelection_Parms IncrementCurrentSelection_Parms;

	pFnIncrementCurrentSelection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementCurrentSelection, &IncrementCurrentSelection_Parms, NULL );

	pFnIncrementCurrentSelection->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPropertyEditorSaveNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorSaveNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57671 ];

	UBioPropertyEditorSaveNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioPropertyEditorVolatileNode.SelectionAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPropertyEditorVolatileNode::SelectionAction ( )
{
	static UFunction* pFnSelectionAction = NULL;

	if ( ! pFnSelectionAction )
		pFnSelectionAction = (UFunction*) UObject::GObjObjects()->Data[ 57676 ];

	UBioPropertyEditorVolatileNode_execSelectionAction_Parms SelectionAction_Parms;

	pFnSelectionAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectionAction, &SelectionAction_Parms, NULL );

	pFnSelectionAction->FunctionFlags |= 0x400;

	return SelectionAction_Parms.ReturnValue;
};

// Function SFXGame.BioConvNodeTrackDebug.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioConvNodeTrackDebug::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 52692 ];

	UBioConvNodeTrackDebug_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioConvNodeTrackDebug.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioConvNodeTrackDebug::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 52690 ];

	UBioConvNodeTrackDebug_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioConvNodeTrackDebug.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioConvNodeTrackDebug::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 52688 ];

	UBioConvNodeTrackDebug_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioConvNodeTrackDebug.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioConvNodeTrackDebug::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 52686 ];

	UBioConvNodeTrackDebug_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackDOF.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackDOF::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 52982 ];

	UBioEvtSysTrackDOF_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackDOF.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackDOF::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 52980 ];

	UBioEvtSysTrackDOF_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackDOF.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackDOF::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 52978 ];

	UBioEvtSysTrackDOF_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackDOF.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackDOF::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 52976 ];

	UBioEvtSysTrackDOF_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackDOF.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackDOF::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 52974 ];

	UBioEvtSysTrackDOF_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackFuncShot.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackFuncShot::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53021 ];

	UBioEvtSysTrackFuncShot_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackFuncShot.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackFuncShot::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53019 ];

	UBioEvtSysTrackFuncShot_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackFuncShot.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackFuncShot::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53017 ];

	UBioEvtSysTrackFuncShot_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackFuncShot.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackFuncShot::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53015 ];

	UBioEvtSysTrackFuncShot_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackFuncShot.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackFuncShot::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53013 ];

	UBioEvtSysTrackFuncShot_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGesture.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackGesture::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53044 ];

	UBioEvtSysTrackGesture_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGesture.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackGesture::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53042 ];

	UBioEvtSysTrackGesture_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGesture.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackGesture::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53040 ];

	UBioEvtSysTrackGesture_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGesture.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackGesture::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53038 ];

	UBioEvtSysTrackGesture_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGesture.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackGesture::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53036 ];

	UBioEvtSysTrackGesture_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackGestureInst.FindActorByTagForScript
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTagToFind                    ( CPF_Parm )
// class UInterpTrackInst*        pTrackInst                     ( CPF_Parm )

class AActor* UBioEvtSysTrackGestureInst::FindActorByTagForScript ( struct FName nmTagToFind, class UInterpTrackInst* pTrackInst )
{
	static UFunction* pFnFindActorByTagForScript = NULL;

	if ( ! pFnFindActorByTagForScript )
		pFnFindActorByTagForScript = (UFunction*) UObject::GObjObjects()->Data[ 51766 ];

	UBioEvtSysTrackGestureInst_execFindActorByTagForScript_Parms FindActorByTagForScript_Parms;
	memcpy ( &FindActorByTagForScript_Parms.nmTagToFind, &nmTagToFind, 0x8 );
	FindActorByTagForScript_Parms.pTrackInst = pTrackInst;

	pFnFindActorByTagForScript->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindActorByTagForScript, &FindActorByTagForScript_Parms, NULL );

	pFnFindActorByTagForScript->FunctionFlags |= 0x400;

	return FindActorByTagForScript_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackLookAt.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackLookAt::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53087 ];

	UBioEvtSysTrackLookAt_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackLookAt.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackLookAt::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53085 ];

	UBioEvtSysTrackLookAt_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackLookAt.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackLookAt::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53083 ];

	UBioEvtSysTrackLookAt_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackLookAt.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackLookAt::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53081 ];

	UBioEvtSysTrackLookAt_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackLookAt.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackLookAt::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53079 ];

	UBioEvtSysTrackLookAt_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSetFacing.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSetFacing::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53193 ];

	UBioEvtSysTrackSetFacing_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSetFacing.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSetFacing::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53191 ];

	UBioEvtSysTrackSetFacing_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSetFacing.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSetFacing::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53189 ];

	UBioEvtSysTrackSetFacing_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSetFacing.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSetFacing::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53187 ];

	UBioEvtSysTrackSetFacing_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSetFacing.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackSetFacing::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53185 ];

	UBioEvtSysTrackSetFacing_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSubtitles.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSubtitles::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53212 ];

	UBioEvtSysTrackSubtitles_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSubtitles.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSubtitles::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53210 ];

	UBioEvtSysTrackSubtitles_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSubtitles.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSubtitles::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53208 ];

	UBioEvtSysTrackSubtitles_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSubtitles.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSubtitles::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53206 ];

	UBioEvtSysTrackSubtitles_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSubtitles.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackSubtitles::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53204 ];

	UBioEvtSysTrackSubtitles_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSwitchCamera.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSwitchCamera::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53249 ];

	UBioEvtSysTrackSwitchCamera_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSwitchCamera.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSwitchCamera::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53247 ];

	UBioEvtSysTrackSwitchCamera_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSwitchCamera.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSwitchCamera::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53245 ];

	UBioEvtSysTrackSwitchCamera_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSwitchCamera.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackSwitchCamera::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53243 ];

	UBioEvtSysTrackSwitchCamera_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackSwitchCamera.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackSwitchCamera::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53241 ];

	UBioEvtSysTrackSwitchCamera_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackVOElements.GetNewTrackSubMenuName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackVOElements::eventGetNewTrackSubMenuName ( )
{
	static UFunction* pFnGetNewTrackSubMenuName = NULL;

	if ( ! pFnGetNewTrackSubMenuName )
		pFnGetNewTrackSubMenuName = (UFunction*) UObject::GObjObjects()->Data[ 53267 ];

	UBioEvtSysTrackVOElements_eventGetNewTrackSubMenuName_Parms GetNewTrackSubMenuName_Parms;

	this->ProcessEvent ( pFnGetNewTrackSubMenuName, &GetNewTrackSubMenuName_Parms, NULL );

	return GetNewTrackSubMenuName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackVOElements.KeyDataDisplayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackVOElements::eventKeyDataDisplayName ( )
{
	static UFunction* pFnKeyDataDisplayName = NULL;

	if ( ! pFnKeyDataDisplayName )
		pFnKeyDataDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 53265 ];

	UBioEvtSysTrackVOElements_eventKeyDataDisplayName_Parms KeyDataDisplayName_Parms;

	this->ProcessEvent ( pFnKeyDataDisplayName, &KeyDataDisplayName_Parms, NULL );

	return KeyDataDisplayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackVOElements.KeyDataArrayName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackVOElements::eventKeyDataArrayName ( )
{
	static UFunction* pFnKeyDataArrayName = NULL;

	if ( ! pFnKeyDataArrayName )
		pFnKeyDataArrayName = (UFunction*) UObject::GObjObjects()->Data[ 53263 ];

	UBioEvtSysTrackVOElements_eventKeyDataArrayName_Parms KeyDataArrayName_Parms;

	this->ProcessEvent ( pFnKeyDataArrayName, &KeyDataArrayName_Parms, NULL );

	return KeyDataArrayName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackVOElements.NewKeyDefaultName
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioEvtSysTrackVOElements::eventNewKeyDefaultName ( )
{
	static UFunction* pFnNewKeyDefaultName = NULL;

	if ( ! pFnNewKeyDefaultName )
		pFnNewKeyDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 53261 ];

	UBioEvtSysTrackVOElements_eventNewKeyDefaultName_Parms NewKeyDefaultName_Parms;

	this->ProcessEvent ( pFnNewKeyDefaultName, &NewKeyDefaultName_Parms, NULL );

	return NewKeyDefaultName_Parms.ReturnValue;
};

// Function SFXGame.BioEvtSysTrackVOElements.AllowKeyNaming
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioEvtSysTrackVOElements::eventAllowKeyNaming ( )
{
	static UFunction* pFnAllowKeyNaming = NULL;

	if ( ! pFnAllowKeyNaming )
		pFnAllowKeyNaming = (UFunction*) UObject::GObjObjects()->Data[ 53259 ];

	UBioEvtSysTrackVOElements_eventAllowKeyNaming_Parms AllowKeyNaming_Parms;

	this->ProcessEvent ( pFnAllowKeyNaming, &AllowKeyNaming_Parms, NULL );

	return AllowKeyNaming_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffectTrackInst.Create
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        Base                           ( CPF_Parm )

void UBioVisualEffectTrackInst::Create ( class ABioVisualEffect* Base )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 65768 ];

	UBioVisualEffectTrackInst_execCreate_Parms Create_Parms;
	Create_Parms.Base = Base;

	pFnCreate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );

	pFnCreate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInterpolator.InterpolateFloatCurve
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          Source                         ( CPF_Parm )
// float                          Target                         ( CPF_Parm )
// float                          normalizedDisplacement         ( CPF_Parm )
// float                          Output                         ( CPF_Parm | CPF_OutParm )
// struct FInterpCurveFloat       Curve                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInterpolator::InterpolateFloatCurve ( float Source, float Target, float normalizedDisplacement, float* Output, struct FInterpCurveFloat* Curve )
{
	static UFunction* pFnInterpolateFloatCurve = NULL;

	if ( ! pFnInterpolateFloatCurve )
		pFnInterpolateFloatCurve = (UFunction*) UObject::GObjObjects()->Data[ 54785 ];

	UBioInterpolator_execInterpolateFloatCurve_Parms InterpolateFloatCurve_Parms;
	InterpolateFloatCurve_Parms.Source = Source;
	InterpolateFloatCurve_Parms.Target = Target;
	InterpolateFloatCurve_Parms.normalizedDisplacement = normalizedDisplacement;

	pFnInterpolateFloatCurve->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterpolateFloatCurve, &InterpolateFloatCurve_Parms, NULL );

	pFnInterpolateFloatCurve->FunctionFlags |= 0x400;

	if ( Output )
		*Output = InterpolateFloatCurve_Parms.Output;

	if ( Curve )
		memcpy ( Curve, &InterpolateFloatCurve_Parms.Curve, 0x14 );
};

// Function SFXGame.BioInterpolator.InterpolateFloat
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  InterpolationMethod            ( CPF_Parm )
// float                          Source                         ( CPF_Parm )
// float                          Target                         ( CPF_Parm )
// float                          normalizedDisplacement         ( CPF_Parm )
// float                          Output                         ( CPF_Parm | CPF_OutParm )

void UBioInterpolator::InterpolateFloat ( unsigned char InterpolationMethod, float Source, float Target, float normalizedDisplacement, float* Output )
{
	static UFunction* pFnInterpolateFloat = NULL;

	if ( ! pFnInterpolateFloat )
		pFnInterpolateFloat = (UFunction*) UObject::GObjObjects()->Data[ 54779 ];

	UBioInterpolator_execInterpolateFloat_Parms InterpolateFloat_Parms;
	InterpolateFloat_Parms.InterpolationMethod = InterpolationMethod;
	InterpolateFloat_Parms.Source = Source;
	InterpolateFloat_Parms.Target = Target;
	InterpolateFloat_Parms.normalizedDisplacement = normalizedDisplacement;

	pFnInterpolateFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterpolateFloat, &InterpolateFloat_Parms, NULL );

	pFnInterpolateFloat->FunctionFlags |= 0x400;

	if ( Output )
		*Output = InterpolateFloat_Parms.Output;
};

// Function SFXGame.BioInterpolator.InterpolateVector
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  InterpolationMethod            ( CPF_Parm )
// struct FVector                 Source                         ( CPF_Parm )
// struct FVector                 Target                         ( CPF_Parm )
// float                          normalizedDisplacement         ( CPF_Parm )
// struct FVector                 Output                         ( CPF_Parm | CPF_OutParm )

void UBioInterpolator::InterpolateVector ( unsigned char InterpolationMethod, struct FVector Source, struct FVector Target, float normalizedDisplacement, struct FVector* Output )
{
	static UFunction* pFnInterpolateVector = NULL;

	if ( ! pFnInterpolateVector )
		pFnInterpolateVector = (UFunction*) UObject::GObjObjects()->Data[ 54773 ];

	UBioInterpolator_execInterpolateVector_Parms InterpolateVector_Parms;
	InterpolateVector_Parms.InterpolationMethod = InterpolationMethod;
	memcpy ( &InterpolateVector_Parms.Source, &Source, 0xC );
	memcpy ( &InterpolateVector_Parms.Target, &Target, 0xC );
	InterpolateVector_Parms.normalizedDisplacement = normalizedDisplacement;

	pFnInterpolateVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterpolateVector, &InterpolateVector_Parms, NULL );

	pFnInterpolateVector->FunctionFlags |= 0x400;

	if ( Output )
		memcpy ( Output, &InterpolateVector_Parms.Output, 0xC );
};

// Function SFXGame.BioInterpolator.InterpolateRotator
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  InterpolationMethod            ( CPF_Parm )
// struct FRotator                Source                         ( CPF_Parm )
// struct FRotator                Target                         ( CPF_Parm )
// float                          normalizedDisplacement         ( CPF_Parm )
// struct FRotator                Output                         ( CPF_Parm | CPF_OutParm )

void UBioInterpolator::InterpolateRotator ( unsigned char InterpolationMethod, struct FRotator Source, struct FRotator Target, float normalizedDisplacement, struct FRotator* Output )
{
	static UFunction* pFnInterpolateRotator = NULL;

	if ( ! pFnInterpolateRotator )
		pFnInterpolateRotator = (UFunction*) UObject::GObjObjects()->Data[ 54767 ];

	UBioInterpolator_execInterpolateRotator_Parms InterpolateRotator_Parms;
	InterpolateRotator_Parms.InterpolationMethod = InterpolationMethod;
	memcpy ( &InterpolateRotator_Parms.Source, &Source, 0xC );
	memcpy ( &InterpolateRotator_Parms.Target, &Target, 0xC );
	InterpolateRotator_Parms.normalizedDisplacement = normalizedDisplacement;

	pFnInterpolateRotator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterpolateRotator, &InterpolateRotator_Parms, NULL );

	pFnInterpolateRotator->FunctionFlags |= 0x400;

	if ( Output )
		memcpy ( Output, &InterpolateRotator_Parms.Output, 0xC );
};

// Function SFXGame.BioInventory.GetMaxMedigel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInventory::GetMaxMedigel ( )
{
	static UFunction* pFnGetMaxMedigel = NULL;

	if ( ! pFnGetMaxMedigel )
		pFnGetMaxMedigel = (UFunction*) UObject::GObjObjects()->Data[ 41163 ];

	UBioInventory_execGetMaxMedigel_Parms GetMaxMedigel_Parms;

	pFnGetMaxMedigel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxMedigel, &GetMaxMedigel_Parms, NULL );

	pFnGetMaxMedigel->FunctionFlags |= 0x400;

	return GetMaxMedigel_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetMaxGrenades
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioInventory::GetMaxGrenades ( )
{
	static UFunction* pFnGetMaxGrenades = NULL;

	if ( ! pFnGetMaxGrenades )
		pFnGetMaxGrenades = (UFunction*) UObject::GObjObjects()->Data[ 41161 ];

	UBioInventory_execGetMaxGrenades_Parms GetMaxGrenades_Parms;

	pFnGetMaxGrenades->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxGrenades, &GetMaxGrenades_Parms, NULL );

	pFnGetMaxGrenades->FunctionFlags |= 0x400;

	return GetMaxGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.Sort
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UBioInventory::Sort ( )
{
	static UFunction* pFnSort = NULL;

	if ( ! pFnSort )
		pFnSort = (UFunction*) UObject::GObjObjects()->Data[ 41160 ];

	UBioInventory_execSort_Parms Sort_Parms;

	pFnSort->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSort, &Sort_Parms, NULL );

	pFnSort->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.ClearNewItemFlags
// [0x00020002] 
// Parameters infos:

void UBioInventory::ClearNewItemFlags ( )
{
	static UFunction* pFnClearNewItemFlags = NULL;

	if ( ! pFnClearNewItemFlags )
		pFnClearNewItemFlags = (UFunction*) UObject::GObjObjects()->Data[ 41156 ];

	UBioInventory_execClearNewItemFlags_Parms ClearNewItemFlags_Parms;

	this->ProcessEvent ( pFnClearNewItemFlags, &ClearNewItemFlags_Parms, NULL );
};

// Function SFXGame.BioInventory.IsPlotItem
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oItem                          ( CPF_Parm )

bool UBioInventory::IsPlotItem ( class UBioItem* oItem )
{
	static UFunction* pFnIsPlotItem = NULL;

	if ( ! pFnIsPlotItem )
		pFnIsPlotItem = (UFunction*) UObject::GObjObjects()->Data[ 41151 ];

	UBioInventory_execIsPlotItem_Parms IsPlotItem_Parms;
	IsPlotItem_Parms.oItem = oItem;

	this->ProcessEvent ( pFnIsPlotItem, &IsPlotItem_Parms, NULL );

	return IsPlotItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioInventory::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 41149 ];

	UBioInventory_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.ReadSaveObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioBaseSaveObject*      Save                           ( CPF_Parm )

void UBioInventory::eventReadSaveObject ( class UBioBaseSaveObject* Save )
{
	static UFunction* pFnReadSaveObject = NULL;

	if ( ! pFnReadSaveObject )
		pFnReadSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 41147 ];

	UBioInventory_eventReadSaveObject_Parms ReadSaveObject_Parms;
	ReadSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnReadSaveObject, &ReadSaveObject_Parms, NULL );
};

// Function SFXGame.BioInventory.WriteSaveObject
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UBioBaseSaveObject*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 InOuter                        ( CPF_Parm )
// class UBioBaseSaveObject*      Save                           ( CPF_OptionalParm | CPF_Parm )

class UBioBaseSaveObject* UBioInventory::eventWriteSaveObject ( class UObject* InOuter, class UBioBaseSaveObject* Save )
{
	static UFunction* pFnWriteSaveObject = NULL;

	if ( ! pFnWriteSaveObject )
		pFnWriteSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 41143 ];

	UBioInventory_eventWriteSaveObject_Parms WriteSaveObject_Parms;
	WriteSaveObject_Parms.InOuter = InOuter;
	WriteSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnWriteSaveObject, &WriteSaveObject_Parms, NULL );

	return WriteSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GrantScaledCredits
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSize                          ( CPF_Parm )
// unsigned long                  i_bTickResource                ( CPF_OptionalParm | CPF_Parm )

bool UBioInventory::GrantScaledCredits ( int nSize, unsigned long i_bTickResource )
{
	static UFunction* pFnGrantScaledCredits = NULL;

	if ( ! pFnGrantScaledCredits )
		pFnGrantScaledCredits = (UFunction*) UObject::GObjObjects()->Data[ 41139 ];

	UBioInventory_execGrantScaledCredits_Parms GrantScaledCredits_Parms;
	GrantScaledCredits_Parms.nSize = nSize;
	GrantScaledCredits_Parms.i_bTickResource = i_bTickResource;

	pFnGrantScaledCredits->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGrantScaledCredits, &GrantScaledCredits_Parms, NULL );

	pFnGrantScaledCredits->FunctionFlags |= 0x400;

	return GrantScaledCredits_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetInventoryResourceFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eInvResType                    ( CPF_Parm )

float UBioInventory::GetInventoryResourceFloat ( unsigned char eInvResType )
{
	static UFunction* pFnGetInventoryResourceFloat = NULL;

	if ( ! pFnGetInventoryResourceFloat )
		pFnGetInventoryResourceFloat = (UFunction*) UObject::GObjObjects()->Data[ 41136 ];

	UBioInventory_execGetInventoryResourceFloat_Parms GetInventoryResourceFloat_Parms;
	GetInventoryResourceFloat_Parms.eInvResType = eInvResType;

	pFnGetInventoryResourceFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryResourceFloat, &GetInventoryResourceFloat_Parms, NULL );

	pFnGetInventoryResourceFloat->FunctionFlags |= 0x400;

	return GetInventoryResourceFloat_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetAttributeAdjustedAmountFloat
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eInvResType                    ( CPF_Parm )
// float                          fAmt                           ( CPF_Parm | CPF_OutParm )

void UBioInventory::GetAttributeAdjustedAmountFloat ( unsigned char eInvResType, float* fAmt )
{
	static UFunction* pFnGetAttributeAdjustedAmountFloat = NULL;

	if ( ! pFnGetAttributeAdjustedAmountFloat )
		pFnGetAttributeAdjustedAmountFloat = (UFunction*) UObject::GObjObjects()->Data[ 41133 ];

	UBioInventory_execGetAttributeAdjustedAmountFloat_Parms GetAttributeAdjustedAmountFloat_Parms;
	GetAttributeAdjustedAmountFloat_Parms.eInvResType = eInvResType;

	pFnGetAttributeAdjustedAmountFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributeAdjustedAmountFloat, &GetAttributeAdjustedAmountFloat_Parms, NULL );

	pFnGetAttributeAdjustedAmountFloat->FunctionFlags |= 0x400;

	if ( fAmt )
		*fAmt = GetAttributeAdjustedAmountFloat_Parms.fAmt;
};

// Function SFXGame.BioInventory.GetAttributeAdjustedAmountInt
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eInvResType                    ( CPF_Parm )
// int                            nAmt                           ( CPF_Parm | CPF_OutParm )

void UBioInventory::GetAttributeAdjustedAmountInt ( unsigned char eInvResType, int* nAmt )
{
	static UFunction* pFnGetAttributeAdjustedAmountInt = NULL;

	if ( ! pFnGetAttributeAdjustedAmountInt )
		pFnGetAttributeAdjustedAmountInt = (UFunction*) UObject::GObjObjects()->Data[ 41130 ];

	UBioInventory_execGetAttributeAdjustedAmountInt_Parms GetAttributeAdjustedAmountInt_Parms;
	GetAttributeAdjustedAmountInt_Parms.eInvResType = eInvResType;

	pFnGetAttributeAdjustedAmountInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributeAdjustedAmountInt, &GetAttributeAdjustedAmountInt_Parms, NULL );

	pFnGetAttributeAdjustedAmountInt->FunctionFlags |= 0x400;

	if ( nAmt )
		*nAmt = GetAttributeAdjustedAmountInt_Parms.nAmt;
};

// Function SFXGame.BioInventory.GetInventoryResourceInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eInvResType                    ( CPF_Parm )

int UBioInventory::GetInventoryResourceInt ( unsigned char eInvResType )
{
	static UFunction* pFnGetInventoryResourceInt = NULL;

	if ( ! pFnGetInventoryResourceInt )
		pFnGetInventoryResourceInt = (UFunction*) UObject::GObjObjects()->Data[ 41127 ];

	UBioInventory_execGetInventoryResourceInt_Parms GetInventoryResourceInt_Parms;
	GetInventoryResourceInt_Parms.eInvResType = eInvResType;

	pFnGetInventoryResourceInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryResourceInt, &GetInventoryResourceInt_Parms, NULL );

	pFnGetInventoryResourceInt->FunctionFlags |= 0x400;

	return GetInventoryResourceInt_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.AdjustInventoryResourceFloat
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eInvResType                    ( CPF_Parm )
// float                          fAmt                           ( CPF_Parm )
// unsigned long                  bUseTalentAdjustedResources    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTickerResource                ( CPF_OptionalParm | CPF_Parm )

void UBioInventory::AdjustInventoryResourceFloat ( unsigned char eInvResType, float fAmt, unsigned long bUseTalentAdjustedResources, unsigned long bTickerResource )
{
	static UFunction* pFnAdjustInventoryResourceFloat = NULL;

	if ( ! pFnAdjustInventoryResourceFloat )
		pFnAdjustInventoryResourceFloat = (UFunction*) UObject::GObjObjects()->Data[ 41122 ];

	UBioInventory_execAdjustInventoryResourceFloat_Parms AdjustInventoryResourceFloat_Parms;
	AdjustInventoryResourceFloat_Parms.eInvResType = eInvResType;
	AdjustInventoryResourceFloat_Parms.fAmt = fAmt;
	AdjustInventoryResourceFloat_Parms.bUseTalentAdjustedResources = bUseTalentAdjustedResources;
	AdjustInventoryResourceFloat_Parms.bTickerResource = bTickerResource;

	pFnAdjustInventoryResourceFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustInventoryResourceFloat, &AdjustInventoryResourceFloat_Parms, NULL );

	pFnAdjustInventoryResourceFloat->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.AdjustInventoryResourceInt
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eInvResType                    ( CPF_Parm )
// int                            nAmt                           ( CPF_Parm )
// unsigned long                  bUseTalentAdjustedResources    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTickerResource                ( CPF_OptionalParm | CPF_Parm )

void UBioInventory::AdjustInventoryResourceInt ( unsigned char eInvResType, int nAmt, unsigned long bUseTalentAdjustedResources, unsigned long bTickerResource )
{
	static UFunction* pFnAdjustInventoryResourceInt = NULL;

	if ( ! pFnAdjustInventoryResourceInt )
		pFnAdjustInventoryResourceInt = (UFunction*) UObject::GObjObjects()->Data[ 41117 ];

	UBioInventory_execAdjustInventoryResourceInt_Parms AdjustInventoryResourceInt_Parms;
	AdjustInventoryResourceInt_Parms.eInvResType = eInvResType;
	AdjustInventoryResourceInt_Parms.nAmt = nAmt;
	AdjustInventoryResourceInt_Parms.bUseTalentAdjustedResources = bUseTalentAdjustedResources;
	AdjustInventoryResourceInt_Parms.bTickerResource = bTickerResource;

	pFnAdjustInventoryResourceInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustInventoryResourceInt, &AdjustInventoryResourceInt_Parms, NULL );

	pFnAdjustInventoryResourceInt->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.Empty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventory::Empty ( )
{
	static UFunction* pFnEmpty = NULL;

	if ( ! pFnEmpty )
		pFnEmpty = (UFunction*) UObject::GObjObjects()->Data[ 41116 ];

	UBioInventory_execEmpty_Parms Empty_Parms;

	pFnEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEmpty, &Empty_Parms, NULL );

	pFnEmpty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.IsEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventory::IsEmpty ( )
{
	static UFunction* pFnIsEmpty = NULL;

	if ( ! pFnIsEmpty )
		pFnIsEmpty = (UFunction*) UObject::GObjObjects()->Data[ 41114 ];

	UBioInventory_execIsEmpty_Parms IsEmpty_Parms;

	pFnIsEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEmpty, &IsEmpty_Parms, NULL );

	pFnIsEmpty->FunctionFlags |= 0x400;

	return IsEmpty_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.TickerResources
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEventNotifier*       notifier                       ( CPF_Parm )

void UBioInventory::TickerResources ( class UBioEventNotifier* notifier )
{
	static UFunction* pFnTickerResources = NULL;

	if ( ! pFnTickerResources )
		pFnTickerResources = (UFunction*) UObject::GObjObjects()->Data[ 41112 ];

	UBioInventory_execTickerResources_Parms TickerResources_Parms;
	TickerResources_Parms.notifier = notifier;

	pFnTickerResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickerResources, &TickerResources_Parms, NULL );

	pFnTickerResources->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.TickerItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEventNotifier*       notifier                       ( CPF_Parm )

void UBioInventory::TickerItems ( class UBioEventNotifier* notifier )
{
	static UFunction* pFnTickerItems = NULL;

	if ( ! pFnTickerItems )
		pFnTickerItems = (UFunction*) UObject::GObjObjects()->Data[ 41110 ];

	UBioInventory_execTickerItems_Parms TickerItems_Parms;
	TickerItems_Parms.notifier = notifier;

	pFnTickerItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickerItems, &TickerItems_Parms, NULL );

	pFnTickerItems->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.SubsumePlotItems
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           Other                          ( CPF_Parm )
// unsigned long                  bFlagAsNew                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventory::SubsumePlotItems ( class UBioInventory* Other, unsigned long bFlagAsNew )
{
	static UFunction* pFnSubsumePlotItems = NULL;

	if ( ! pFnSubsumePlotItems )
		pFnSubsumePlotItems = (UFunction*) UObject::GObjObjects()->Data[ 41106 ];

	UBioInventory_execSubsumePlotItems_Parms SubsumePlotItems_Parms;
	SubsumePlotItems_Parms.Other = Other;
	SubsumePlotItems_Parms.bFlagAsNew = bFlagAsNew;

	pFnSubsumePlotItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSubsumePlotItems, &SubsumePlotItems_Parms, NULL );

	pFnSubsumePlotItems->FunctionFlags |= 0x400;

	return SubsumePlotItems_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.SubsumeResources
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           Other                          ( CPF_Parm )
// class UBioEventNotifier*       notifier                       ( CPF_Parm )
// unsigned long                  bUseTalentAdjustedResources    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFlagAsNew                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventory::SubsumeResources ( class UBioInventory* Other, class UBioEventNotifier* notifier, unsigned long bUseTalentAdjustedResources, unsigned long bFlagAsNew )
{
	static UFunction* pFnSubsumeResources = NULL;

	if ( ! pFnSubsumeResources )
		pFnSubsumeResources = (UFunction*) UObject::GObjObjects()->Data[ 41100 ];

	UBioInventory_execSubsumeResources_Parms SubsumeResources_Parms;
	SubsumeResources_Parms.Other = Other;
	SubsumeResources_Parms.notifier = notifier;
	SubsumeResources_Parms.bUseTalentAdjustedResources = bUseTalentAdjustedResources;
	SubsumeResources_Parms.bFlagAsNew = bFlagAsNew;

	pFnSubsumeResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSubsumeResources, &SubsumeResources_Parms, NULL );

	pFnSubsumeResources->FunctionFlags |= 0x400;

	return SubsumeResources_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.SubsumeItems
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           Other                          ( CPF_Parm )
// unsigned long                  bFlagAsNew                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventory::SubsumeItems ( class UBioInventory* Other, unsigned long bFlagAsNew )
{
	static UFunction* pFnSubsumeItems = NULL;

	if ( ! pFnSubsumeItems )
		pFnSubsumeItems = (UFunction*) UObject::GObjObjects()->Data[ 41096 ];

	UBioInventory_execSubsumeItems_Parms SubsumeItems_Parms;
	SubsumeItems_Parms.Other = Other;
	SubsumeItems_Parms.bFlagAsNew = bFlagAsNew;

	pFnSubsumeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSubsumeItems, &SubsumeItems_Parms, NULL );

	pFnSubsumeItems->FunctionFlags |= 0x400;

	return SubsumeItems_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.Subsume
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           Other                          ( CPF_Parm )
// unsigned long                  bFlagAsNew                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventory::Subsume ( class UBioInventory* Other, unsigned long bFlagAsNew )
{
	static UFunction* pFnSubsume = NULL;

	if ( ! pFnSubsume )
		pFnSubsume = (UFunction*) UObject::GObjObjects()->Data[ 41092 ];

	UBioInventory_execSubsume_Parms Subsume_Parms;
	Subsume_Parms.Other = Other;
	Subsume_Parms.bFlagAsNew = bFlagAsNew;

	pFnSubsume->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSubsume, &Subsume_Parms, NULL );

	pFnSubsume->FunctionFlags |= 0x400;

	return Subsume_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GenerateTreasure
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            treasureID                     ( CPF_Const | CPF_Parm )
// int                            challengeLevel                 ( CPF_Const | CPF_Parm )
// unsigned long                  shouldFilterItemsByConditional ( CPF_Const | CPF_Parm )

void UBioInventory::GenerateTreasure ( int treasureID, int challengeLevel, unsigned long shouldFilterItemsByConditional )
{
	static UFunction* pFnGenerateTreasure = NULL;

	if ( ! pFnGenerateTreasure )
		pFnGenerateTreasure = (UFunction*) UObject::GObjObjects()->Data[ 41088 ];

	UBioInventory_execGenerateTreasure_Parms GenerateTreasure_Parms;
	GenerateTreasure_Parms.treasureID = treasureID;
	GenerateTreasure_Parms.challengeLevel = challengeLevel;
	GenerateTreasure_Parms.shouldFilterItemsByConditional = shouldFilterItemsByConditional;

	pFnGenerateTreasure->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateTreasure, &GenerateTreasure_Parms, NULL );

	pFnGenerateTreasure->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventory.Swap
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// class UBioItem*                pItem                          ( CPF_Parm )

class UBioItem* UBioInventory::eventSwap ( int nIndex, class UBioItem* pItem )
{
	static UFunction* pFnSwap = NULL;

	if ( ! pFnSwap )
		pFnSwap = (UFunction*) UObject::GObjObjects()->Data[ 41083 ];

	UBioInventory_eventSwap_Parms Swap_Parms;
	Swap_Parms.nIndex = nIndex;
	Swap_Parms.pItem = pItem;

	this->ProcessEvent ( pFnSwap, &Swap_Parms, NULL );

	return Swap_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.Appraise
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// unsigned char                  eResource                      ( CPF_Parm )

float UBioInventory::Appraise ( int nIndex, unsigned char eResource )
{
	static UFunction* pFnAppraise = NULL;

	if ( ! pFnAppraise )
		pFnAppraise = (UFunction*) UObject::GObjObjects()->Data[ 41079 ];

	UBioInventory_execAppraise_Parms Appraise_Parms;
	Appraise_Parms.nIndex = nIndex;
	Appraise_Parms.eResource = eResource;

	pFnAppraise->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppraise, &Appraise_Parms, NULL );

	pFnAppraise->FunctionFlags |= 0x400;

	return Appraise_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.Remove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class UBioItem* UBioInventory::Remove ( int nIndex )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 41076 ];

	UBioInventory_execRemove_Parms Remove_Parms;
	Remove_Parms.nIndex = nIndex;

	pFnRemove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );

	pFnRemove->FunctionFlags |= 0x400;

	return Remove_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.Add
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                Item                           ( CPF_Parm )

int UBioInventory::Add ( class UBioItem* Item )
{
	static UFunction* pFnAdd = NULL;

	if ( ! pFnAdd )
		pFnAdd = (UFunction*) UObject::GObjObjects()->Data[ 41073 ];

	UBioInventory_execAdd_Parms Add_Parms;
	Add_Parms.Item = Item;

	pFnAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdd, &Add_Parms, NULL );

	pFnAdd->FunctionFlags |= 0x400;

	return Add_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetMaxSophistication
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioInventory::GetMaxSophistication ( )
{
	static UFunction* pFnGetMaxSophistication = NULL;

	if ( ! pFnGetMaxSophistication )
		pFnGetMaxSophistication = (UFunction*) UObject::GObjObjects()->Data[ 41071 ];

	UBioInventory_execGetMaxSophistication_Parms GetMaxSophistication_Parms;

	pFnGetMaxSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxSophistication, &GetMaxSophistication_Parms, NULL );

	pFnGetMaxSophistication->FunctionFlags |= 0x400;

	return GetMaxSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetMinSophistication
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioInventory::GetMinSophistication ( )
{
	static UFunction* pFnGetMinSophistication = NULL;

	if ( ! pFnGetMinSophistication )
		pFnGetMinSophistication = (UFunction*) UObject::GObjObjects()->Data[ 41069 ];

	UBioInventory_execGetMinSophistication_Parms GetMinSophistication_Parms;

	pFnGetMinSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinSophistication, &GetMinSophistication_Parms, NULL );

	pFnGetMinSophistication->FunctionFlags |= 0x400;

	return GetMinSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioInventory.GetStringRepresentation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioInventory::eventGetStringRepresentation ( )
{
	static UFunction* pFnGetStringRepresentation = NULL;

	if ( ! pFnGetStringRepresentation )
		pFnGetStringRepresentation = (UFunction*) UObject::GObjObjects()->Data[ 41057 ];

	UBioInventory_eventGetStringRepresentation_Parms GetStringRepresentation_Parms;

	this->ProcessEvent ( pFnGetStringRepresentation, &GetStringRepresentation_Parms, NULL );

	return GetStringRepresentation_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SetShieldRatio
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ratio                          ( CPF_Parm )

void UBioInventoryView::SetShieldRatio ( float ratio )
{
	static UFunction* pFnSetShieldRatio = NULL;

	if ( ! pFnSetShieldRatio )
		pFnSetShieldRatio = (UFunction*) UObject::GObjObjects()->Data[ 50704 ];

	UBioInventoryView_execSetShieldRatio_Parms SetShieldRatio_Parms;
	SetShieldRatio_Parms.ratio = ratio;

	pFnSetShieldRatio->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetShieldRatio, &SetShieldRatio_Parms, NULL );

	pFnSetShieldRatio->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryView.GetShieldRatio
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioInventoryView::GetShieldRatio ( )
{
	static UFunction* pFnGetShieldRatio = NULL;

	if ( ! pFnGetShieldRatio )
		pFnGetShieldRatio = (UFunction*) UObject::GObjObjects()->Data[ 50702 ];

	UBioInventoryView_execGetShieldRatio_Parms GetShieldRatio_Parms;

	pFnGetShieldRatio->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShieldRatio, &GetShieldRatio_Parms, NULL );

	pFnGetShieldRatio->FunctionFlags |= 0x400;

	return GetShieldRatio_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.ReplaceSelectedItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventoryView::ReplaceSelectedItem ( )
{
	static UFunction* pFnReplaceSelectedItem = NULL;

	if ( ! pFnReplaceSelectedItem )
		pFnReplaceSelectedItem = (UFunction*) UObject::GObjObjects()->Data[ 50701 ];

	UBioInventoryView_execReplaceSelectedItem_Parms ReplaceSelectedItem_Parms;

	pFnReplaceSelectedItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReplaceSelectedItem, &ReplaceSelectedItem_Parms, NULL );

	pFnReplaceSelectedItem->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryView.RemoveSelectedItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventoryView::RemoveSelectedItem ( )
{
	static UFunction* pFnRemoveSelectedItem = NULL;

	if ( ! pFnRemoveSelectedItem )
		pFnRemoveSelectedItem = (UFunction*) UObject::GObjObjects()->Data[ 50700 ];

	UBioInventoryView_execRemoveSelectedItem_Parms RemoveSelectedItem_Parms;

	pFnRemoveSelectedItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveSelectedItem, &RemoveSelectedItem_Parms, NULL );

	pFnRemoveSelectedItem->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryView.IsSelectedItemVolatile
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryView::IsSelectedItemVolatile ( )
{
	static UFunction* pFnIsSelectedItemVolatile = NULL;

	if ( ! pFnIsSelectedItemVolatile )
		pFnIsSelectedItemVolatile = (UFunction*) UObject::GObjObjects()->Data[ 50697 ];

	UBioInventoryView_execIsSelectedItemVolatile_Parms IsSelectedItemVolatile_Parms;

	this->ProcessEvent ( pFnIsSelectedItemVolatile, &IsSelectedItemVolatile_Parms, NULL );

	return IsSelectedItemVolatile_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.GetSelectedItem
// [0x00020002] 
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioItem* UBioInventoryView::GetSelectedItem ( )
{
	static UFunction* pFnGetSelectedItem = NULL;

	if ( ! pFnGetSelectedItem )
		pFnGetSelectedItem = (UFunction*) UObject::GObjObjects()->Data[ 50693 ];

	UBioInventoryView_execGetSelectedItem_Parms GetSelectedItem_Parms;

	this->ProcessEvent ( pFnGetSelectedItem, &GetSelectedItem_Parms, NULL );

	return GetSelectedItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.UninstallXMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            xModType                       ( CPF_Parm )
// int                            xModIndexInItem                ( CPF_Parm )

bool UBioInventoryView::UninstallXMod ( int xModType, int xModIndexInItem )
{
	static UFunction* pFnUninstallXMod = NULL;

	if ( ! pFnUninstallXMod )
		pFnUninstallXMod = (UFunction*) UObject::GObjObjects()->Data[ 50689 ];

	UBioInventoryView_execUninstallXMod_Parms UninstallXMod_Parms;
	UninstallXMod_Parms.xModType = xModType;
	UninstallXMod_Parms.xModIndexInItem = xModIndexInItem;

	pFnUninstallXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUninstallXMod, &UninstallXMod_Parms, NULL );

	pFnUninstallXMod->FunctionFlags |= 0x400;

	return UninstallXMod_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.InstallXMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            filteredIndex                  ( CPF_Parm )
// int                            xModTypeUsedForFilter          ( CPF_Parm )

bool UBioInventoryView::InstallXMod ( int filteredIndex, int xModTypeUsedForFilter )
{
	static UFunction* pFnInstallXMod = NULL;

	if ( ! pFnInstallXMod )
		pFnInstallXMod = (UFunction*) UObject::GObjObjects()->Data[ 50685 ];

	UBioInventoryView_execInstallXMod_Parms InstallXMod_Parms;
	InstallXMod_Parms.filteredIndex = filteredIndex;
	InstallXMod_Parms.xModTypeUsedForFilter = xModTypeUsedForFilter;

	pFnInstallXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInstallXMod, &InstallXMod_Parms, NULL );

	pFnInstallXMod->FunctionFlags |= 0x400;

	return InstallXMod_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.Drop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryView::Drop ( )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 50683 ];

	UBioInventoryView_execDrop_Parms Drop_Parms;

	pFnDrop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );

	pFnDrop->FunctionFlags |= 0x400;

	return Drop_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.Equip
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            filteredIndex                  ( CPF_Parm )
// unsigned long                  bXferXMods                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventoryView::Equip ( int filteredIndex, unsigned long bXferXMods )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50679 ];

	UBioInventoryView_execEquip_Parms Equip_Parms;
	Equip_Parms.filteredIndex = filteredIndex;
	Equip_Parms.bXferXMods = bXferXMods;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;

	return Equip_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.Unequip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryView::Unequip ( )
{
	static UFunction* pFnUnequip = NULL;

	if ( ! pFnUnequip )
		pFnUnequip = (UFunction*) UObject::GObjObjects()->Data[ 50677 ];

	UBioInventoryView_execUnequip_Parms Unequip_Parms;

	pFnUnequip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnequip, &Unequip_Parms, NULL );

	pFnUnequip->FunctionFlags |= 0x400;

	return Unequip_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SetTargetInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           pInv                           ( CPF_Parm )

bool UBioInventoryView::SetTargetInventory ( class UBioInventory* pInv )
{
	static UFunction* pFnSetTargetInventory = NULL;

	if ( ! pFnSetTargetInventory )
		pFnSetTargetInventory = (UFunction*) UObject::GObjObjects()->Data[ 50674 ];

	UBioInventoryView_execSetTargetInventory_Parms SetTargetInventory_Parms;
	SetTargetInventory_Parms.pInv = pInv;

	pFnSetTargetInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetInventory, &SetTargetInventory_Parms, NULL );

	pFnSetTargetInventory->FunctionFlags |= 0x400;

	return SetTargetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SetTargetEquipment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioEquipment*           pEqp                           ( CPF_Parm )

bool UBioInventoryView::SetTargetEquipment ( class UBioEquipment* pEqp )
{
	static UFunction* pFnSetTargetEquipment = NULL;

	if ( ! pFnSetTargetEquipment )
		pFnSetTargetEquipment = (UFunction*) UObject::GObjObjects()->Data[ 50671 ];

	UBioInventoryView_execSetTargetEquipment_Parms SetTargetEquipment_Parms;
	SetTargetEquipment_Parms.pEqp = pEqp;

	pFnSetTargetEquipment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetEquipment, &SetTargetEquipment_Parms, NULL );

	pFnSetTargetEquipment->FunctionFlags |= 0x400;

	return SetTargetEquipment_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool UBioInventoryView::SetTarget ( class ABioPawn* pPawn )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 50668 ];

	UBioInventoryView_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.pPawn = pPawn;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;

	return SetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.ResetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryView::ResetTarget ( )
{
	static UFunction* pFnResetTarget = NULL;

	if ( ! pFnResetTarget )
		pFnResetTarget = (UFunction*) UObject::GObjObjects()->Data[ 50666 ];

	UBioInventoryView_execResetTarget_Parms ResetTarget_Parms;

	pFnResetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetTarget, &ResetTarget_Parms, NULL );

	pFnResetTarget->FunctionFlags |= 0x400;

	return ResetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SelectQuickslotItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eType                          ( CPF_Parm )

bool UBioInventoryView::SelectQuickslotItem ( unsigned char eType )
{
	static UFunction* pFnSelectQuickslotItem = NULL;

	if ( ! pFnSelectQuickslotItem )
		pFnSelectQuickslotItem = (UFunction*) UObject::GObjObjects()->Data[ 50663 ];

	UBioInventoryView_execSelectQuickslotItem_Parms SelectQuickslotItem_Parms;
	SelectQuickslotItem_Parms.eType = eType;

	pFnSelectQuickslotItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectQuickslotItem, &SelectQuickslotItem_Parms, NULL );

	pFnSelectQuickslotItem->FunctionFlags |= 0x400;

	return SelectQuickslotItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SelectEquipmentItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSlot                          ( CPF_Parm )

bool UBioInventoryView::SelectEquipmentItem ( unsigned char eSlot )
{
	static UFunction* pFnSelectEquipmentItem = NULL;

	if ( ! pFnSelectEquipmentItem )
		pFnSelectEquipmentItem = (UFunction*) UObject::GObjObjects()->Data[ 50660 ];

	UBioInventoryView_execSelectEquipmentItem_Parms SelectEquipmentItem_Parms;
	SelectEquipmentItem_Parms.eSlot = eSlot;

	pFnSelectEquipmentItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectEquipmentItem, &SelectEquipmentItem_Parms, NULL );

	pFnSelectEquipmentItem->FunctionFlags |= 0x400;

	return SelectEquipmentItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.SelectInventoryItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UBioInventoryView::SelectInventoryItem ( int Index )
{
	static UFunction* pFnSelectInventoryItem = NULL;

	if ( ! pFnSelectInventoryItem )
		pFnSelectInventoryItem = (UFunction*) UObject::GObjObjects()->Data[ 50657 ];

	UBioInventoryView_execSelectInventoryItem_Parms SelectInventoryItem_Parms;
	SelectInventoryItem_Parms.Index = Index;

	pFnSelectInventoryItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectInventoryItem, &SelectInventoryItem_Parms, NULL );

	pFnSelectInventoryItem->FunctionFlags |= 0x400;

	return SelectInventoryItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryView.ExtractXModIndices
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// int                            nXModTypeID                    ( CPF_OptionalParm | CPF_Parm )
// struct TArray<int>             aIndices                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryView::ExtractXModIndices ( int nXModTypeID, struct TArray<int>* aIndices )
{
	static UFunction* pFnExtractXModIndices = NULL;

	if ( ! pFnExtractXModIndices )
		pFnExtractXModIndices = (UFunction*) UObject::GObjObjects()->Data[ 50653 ];

	UBioInventoryView_execExtractXModIndices_Parms ExtractXModIndices_Parms;
	ExtractXModIndices_Parms.nXModTypeID = nXModTypeID;

	pFnExtractXModIndices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractXModIndices, &ExtractXModIndices_Parms, NULL );

	pFnExtractXModIndices->FunctionFlags |= 0x400;

	if ( aIndices )
		memcpy ( aIndices, &ExtractXModIndices_Parms.aIndices, 0x10 );
};

// Function SFXGame.BioInventoryView.ExtractXModIndicesByEquipmentType
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEquipType                     ( CPF_Parm )
// int                            xModTypeUsedForFilter          ( CPF_OptionalParm | CPF_Parm )
// struct TArray<int>             aIndices                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryView::ExtractXModIndicesByEquipmentType ( unsigned char eEquipType, int xModTypeUsedForFilter, struct TArray<int>* aIndices )
{
	static UFunction* pFnExtractXModIndicesByEquipmentType = NULL;

	if ( ! pFnExtractXModIndicesByEquipmentType )
		pFnExtractXModIndicesByEquipmentType = (UFunction*) UObject::GObjObjects()->Data[ 50648 ];

	UBioInventoryView_execExtractXModIndicesByEquipmentType_Parms ExtractXModIndicesByEquipmentType_Parms;
	ExtractXModIndicesByEquipmentType_Parms.eEquipType = eEquipType;
	ExtractXModIndicesByEquipmentType_Parms.xModTypeUsedForFilter = xModTypeUsedForFilter;

	pFnExtractXModIndicesByEquipmentType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractXModIndicesByEquipmentType, &ExtractXModIndicesByEquipmentType_Parms, NULL );

	pFnExtractXModIndicesByEquipmentType->FunctionFlags |= 0x400;

	if ( aIndices )
		memcpy ( aIndices, &ExtractXModIndicesByEquipmentType_Parms.aIndices, 0x10 );
};

// Function SFXGame.BioInventoryView.ExtractEquippableIndices
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEquipType                     ( CPF_Parm )
// struct TArray<int>             aEquipIndices                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryView::ExtractEquippableIndices ( unsigned char eEquipType, struct TArray<int>* aEquipIndices )
{
	static UFunction* pFnExtractEquippableIndices = NULL;

	if ( ! pFnExtractEquippableIndices )
		pFnExtractEquippableIndices = (UFunction*) UObject::GObjObjects()->Data[ 50644 ];

	UBioInventoryView_execExtractEquippableIndices_Parms ExtractEquippableIndices_Parms;
	ExtractEquippableIndices_Parms.eEquipType = eEquipType;

	pFnExtractEquippableIndices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractEquippableIndices, &ExtractEquippableIndices_Parms, NULL );

	pFnExtractEquippableIndices->FunctionFlags |= 0x400;

	if ( aEquipIndices )
		memcpy ( aEquipIndices, &ExtractEquippableIndices_Parms.aEquipIndices, 0x10 );
};

// Function SFXGame.BioInventoryView.ExtractWeaponIndices
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eWeaponRangedType              ( CPF_Parm )
// struct TArray<int>             aEquipIndices                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryView::ExtractWeaponIndices ( unsigned char eWeaponRangedType, struct TArray<int>* aEquipIndices )
{
	static UFunction* pFnExtractWeaponIndices = NULL;

	if ( ! pFnExtractWeaponIndices )
		pFnExtractWeaponIndices = (UFunction*) UObject::GObjObjects()->Data[ 50640 ];

	UBioInventoryView_execExtractWeaponIndices_Parms ExtractWeaponIndices_Parms;
	ExtractWeaponIndices_Parms.eWeaponRangedType = eWeaponRangedType;

	pFnExtractWeaponIndices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractWeaponIndices, &ExtractWeaponIndices_Parms, NULL );

	pFnExtractWeaponIndices->FunctionFlags |= 0x400;

	if ( aEquipIndices )
		memcpy ( aEquipIndices, &ExtractWeaponIndices_Parms.aEquipIndices, 0x10 );
};

// Function SFXGame.BioInventoryView.ClearObjectRefs
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventoryView::ClearObjectRefs ( )
{
	static UFunction* pFnClearObjectRefs = NULL;

	if ( ! pFnClearObjectRefs )
		pFnClearObjectRefs = (UFunction*) UObject::GObjObjects()->Data[ 50639 ];

	UBioInventoryView_execClearObjectRefs_Parms ClearObjectRefs_Parms;

	pFnClearObjectRefs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearObjectRefs, &ClearObjectRefs_Parms, NULL );

	pFnClearObjectRefs->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryGuiInterface.BuildEquippableXModList
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nXModSlotType                  ( CPF_Parm )

void UBioInventoryGuiInterface::BuildEquippableXModList ( int nXModSlotType )
{
	static UFunction* pFnBuildEquippableXModList = NULL;

	if ( ! pFnBuildEquippableXModList )
		pFnBuildEquippableXModList = (UFunction*) UObject::GObjObjects()->Data[ 51269 ];

	UBioInventoryGuiInterface_execBuildEquippableXModList_Parms BuildEquippableXModList_Parms;
	BuildEquippableXModList_Parms.nXModSlotType = nXModSlotType;

	this->ProcessEvent ( pFnBuildEquippableXModList, &BuildEquippableXModList_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.Appraise
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// unsigned char                  eResource                      ( CPF_Parm )

float UBioInventoryGuiInterface::Appraise ( int nIndex, unsigned char eResource )
{
	static UFunction* pFnAppraise = NULL;

	if ( ! pFnAppraise )
		pFnAppraise = (UFunction*) UObject::GObjObjects()->Data[ 51265 ];

	UBioInventoryGuiInterface_execAppraise_Parms Appraise_Parms;
	Appraise_Parms.nIndex = nIndex;
	Appraise_Parms.eResource = eResource;

	this->ProcessEvent ( pFnAppraise, &Appraise_Parms, NULL );

	return Appraise_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.ConvertItemIntoResource
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// int                            nFilteredIndex                 ( CPF_Parm )
// unsigned char                  eResource                      ( CPF_Parm )
// unsigned long                  SellAllJunked                  ( CPF_OptionalParm | CPF_Parm )

void UBioInventoryGuiInterface::ConvertItemIntoResource ( int nFilteredIndex, unsigned char eResource, unsigned long SellAllJunked )
{
	static UFunction* pFnConvertItemIntoResource = NULL;

	if ( ! pFnConvertItemIntoResource )
		pFnConvertItemIntoResource = (UFunction*) UObject::GObjObjects()->Data[ 51257 ];

	UBioInventoryGuiInterface_execConvertItemIntoResource_Parms ConvertItemIntoResource_Parms;
	ConvertItemIntoResource_Parms.nFilteredIndex = nFilteredIndex;
	ConvertItemIntoResource_Parms.eResource = eResource;
	ConvertItemIntoResource_Parms.SellAllJunked = SellAllJunked;

	this->ProcessEvent ( pFnConvertItemIntoResource, &ConvertItemIntoResource_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.GetStatLabel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eStat                          ( CPF_Parm )

int UBioInventoryGuiInterface::GetStatLabel ( unsigned char eStat )
{
	static UFunction* pFnGetStatLabel = NULL;

	if ( ! pFnGetStatLabel )
		pFnGetStatLabel = (UFunction*) UObject::GObjObjects()->Data[ 51254 ];

	UBioInventoryGuiInterface_execGetStatLabel_Parms GetStatLabel_Parms;
	GetStatLabel_Parms.eStat = eStat;

	this->ProcessEvent ( pFnGetStatLabel, &GetStatLabel_Parms, NULL );

	return GetStatLabel_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.GetPrevEquipSlot
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eCompareSlot                   ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioInventoryGuiInterface::GetPrevEquipSlot ( unsigned char eCompareSlot )
{
	static UFunction* pFnGetPrevEquipSlot = NULL;

	if ( ! pFnGetPrevEquipSlot )
		pFnGetPrevEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 51249 ];

	UBioInventoryGuiInterface_execGetPrevEquipSlot_Parms GetPrevEquipSlot_Parms;
	GetPrevEquipSlot_Parms.eCompareSlot = eCompareSlot;

	this->ProcessEvent ( pFnGetPrevEquipSlot, &GetPrevEquipSlot_Parms, NULL );

	return GetPrevEquipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.GetNextEquipSlot
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eCompareSlot                   ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioInventoryGuiInterface::GetNextEquipSlot ( unsigned char eCompareSlot )
{
	static UFunction* pFnGetNextEquipSlot = NULL;

	if ( ! pFnGetNextEquipSlot )
		pFnGetNextEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 51244 ];

	UBioInventoryGuiInterface_execGetNextEquipSlot_Parms GetNextEquipSlot_Parms;
	GetNextEquipSlot_Parms.eCompareSlot = eCompareSlot;

	this->ProcessEvent ( pFnGetNextEquipSlot, &GetNextEquipSlot_Parms, NULL );

	return GetNextEquipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.GetFirstEquipSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UBioInventoryGuiInterface::GetFirstEquipSlot ( )
{
	static UFunction* pFnGetFirstEquipSlot = NULL;

	if ( ! pFnGetFirstEquipSlot )
		pFnGetFirstEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 51241 ];

	UBioInventoryGuiInterface_execGetFirstEquipSlot_Parms GetFirstEquipSlot_Parms;

	this->ProcessEvent ( pFnGetFirstEquipSlot, &GetFirstEquipSlot_Parms, NULL );

	return GetFirstEquipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.HasEquipSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSlot                          ( CPF_Parm )

bool UBioInventoryGuiInterface::HasEquipSlot ( unsigned char eSlot )
{
	static UFunction* pFnHasEquipSlot = NULL;

	if ( ! pFnHasEquipSlot )
		pFnHasEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 51236 ];

	UBioInventoryGuiInterface_execHasEquipSlot_Parms HasEquipSlot_Parms;
	HasEquipSlot_Parms.eSlot = eSlot;

	this->ProcessEvent ( pFnHasEquipSlot, &HasEquipSlot_Parms, NULL );

	return HasEquipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.DescribeGuiItemStats
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FBioInventoryGuiInterfaceItemStats Stats                          ( CPF_Const | CPF_Parm | CPF_NeedCtorLink )

void UBioInventoryGuiInterface::DescribeGuiItemStats ( struct FBioInventoryGuiInterfaceItemStats Stats )
{
	static UFunction* pFnDescribeGuiItemStats = NULL;

	if ( ! pFnDescribeGuiItemStats )
		pFnDescribeGuiItemStats = (UFunction*) UObject::GObjObjects()->Data[ 51234 ];

	UBioInventoryGuiInterface_execDescribeGuiItemStats_Parms DescribeGuiItemStats_Parms;
	memcpy ( &DescribeGuiItemStats_Parms.Stats, &Stats, 0x34 );

	this->ProcessEvent ( pFnDescribeGuiItemStats, &DescribeGuiItemStats_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.DescribeGuiItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FItemInfo               ItemToDescribe                 ( CPF_Parm | CPF_NeedCtorLink )

void UBioInventoryGuiInterface::DescribeGuiItem ( struct FItemInfo ItemToDescribe )
{
	static UFunction* pFnDescribeGuiItem = NULL;

	if ( ! pFnDescribeGuiItem )
		pFnDescribeGuiItem = (UFunction*) UObject::GObjObjects()->Data[ 51121 ];

	UBioInventoryGuiInterface_execDescribeGuiItem_Parms DescribeGuiItem_Parms;
	memcpy ( &DescribeGuiItem_Parms.ItemToDescribe, &ItemToDescribe, 0xA0 );

	this->ProcessEvent ( pFnDescribeGuiItem, &DescribeGuiItem_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.ComplementAndScale
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// float                          FMax                           ( CPF_Parm )
// float                          fValue                         ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::ComplementAndScale ( float FMax, float* fValue )
{
	static UFunction* pFnComplementAndScale = NULL;

	if ( ! pFnComplementAndScale )
		pFnComplementAndScale = (UFunction*) UObject::GObjObjects()->Data[ 51184 ];

	UBioInventoryGuiInterface_execComplementAndScale_Parms ComplementAndScale_Parms;
	ComplementAndScale_Parms.FMax = FMax;

	this->ProcessEvent ( pFnComplementAndScale, &ComplementAndScale_Parms, NULL );

	if ( fValue )
		*fValue = ComplementAndScale_Parms.fValue;
};

// Function SFXGame.BioInventoryGuiInterface.Scale
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// float                          FMax                           ( CPF_Parm )
// float                          fValue                         ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::Scale ( float FMax, float* fValue )
{
	static UFunction* pFnScale = NULL;

	if ( ! pFnScale )
		pFnScale = (UFunction*) UObject::GObjObjects()->Data[ 51178 ];

	UBioInventoryGuiInterface_execScale_Parms Scale_Parms;
	Scale_Parms.FMax = FMax;

	this->ProcessEvent ( pFnScale, &Scale_Parms, NULL );

	if ( fValue )
		*fValue = Scale_Parms.fValue;
};

// Function SFXGame.BioInventoryGuiInterface.Drop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryGuiInterface::Drop ( )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 51225 ];

	UBioInventoryGuiInterface_execDrop_Parms Drop_Parms;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );

	return Drop_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.Equip
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            filteredIndex                  ( CPF_Parm )
// unsigned long                  bXferXMods                     ( CPF_OptionalParm | CPF_Parm )

bool UBioInventoryGuiInterface::Equip ( int filteredIndex, unsigned long bXferXMods )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 51220 ];

	UBioInventoryGuiInterface_execEquip_Parms Equip_Parms;
	Equip_Parms.filteredIndex = filteredIndex;
	Equip_Parms.bXferXMods = bXferXMods;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	return Equip_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.Unequip
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioInventoryGuiInterface::Unequip ( )
{
	static UFunction* pFnUnequip = NULL;

	if ( ! pFnUnequip )
		pFnUnequip = (UFunction*) UObject::GObjObjects()->Data[ 51217 ];

	UBioInventoryGuiInterface_execUnequip_Parms Unequip_Parms;

	this->ProcessEvent ( pFnUnequip, &Unequip_Parms, NULL );

	return Unequip_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.DirectSetTargetInventory
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           pInv                           ( CPF_Parm )

bool UBioInventoryGuiInterface::DirectSetTargetInventory ( class UBioInventory* pInv )
{
	static UFunction* pFnDirectSetTargetInventory = NULL;

	if ( ! pFnDirectSetTargetInventory )
		pFnDirectSetTargetInventory = (UFunction*) UObject::GObjObjects()->Data[ 51214 ];

	UBioInventoryGuiInterface_execDirectSetTargetInventory_Parms DirectSetTargetInventory_Parms;
	DirectSetTargetInventory_Parms.pInv = pInv;

	this->ProcessEvent ( pFnDirectSetTargetInventory, &DirectSetTargetInventory_Parms, NULL );

	return DirectSetTargetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.SetTargetInventory
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInventory*           pInv                           ( CPF_Parm )

bool UBioInventoryGuiInterface::SetTargetInventory ( class UBioInventory* pInv )
{
	static UFunction* pFnSetTargetInventory = NULL;

	if ( ! pFnSetTargetInventory )
		pFnSetTargetInventory = (UFunction*) UObject::GObjObjects()->Data[ 51210 ];

	UBioInventoryGuiInterface_execSetTargetInventory_Parms SetTargetInventory_Parms;
	SetTargetInventory_Parms.pInv = pInv;

	this->ProcessEvent ( pFnSetTargetInventory, &SetTargetInventory_Parms, NULL );

	return SetTargetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.DirectSetTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool UBioInventoryGuiInterface::DirectSetTarget ( class ABioPawn* pPawn )
{
	static UFunction* pFnDirectSetTarget = NULL;

	if ( ! pFnDirectSetTarget )
		pFnDirectSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 51207 ];

	UBioInventoryGuiInterface_execDirectSetTarget_Parms DirectSetTarget_Parms;
	DirectSetTarget_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnDirectSetTarget, &DirectSetTarget_Parms, NULL );

	return DirectSetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.SetTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool UBioInventoryGuiInterface::SetTarget ( class ABioPawn* pPawn )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 51203 ];

	UBioInventoryGuiInterface_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	return SetTarget_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.GetEquippedItem
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FItemInfo               stEquippedItem                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioInventoryGuiInterface::GetEquippedItem ( struct FItemInfo* stEquippedItem )
{
	static UFunction* pFnGetEquippedItem = NULL;

	if ( ! pFnGetEquippedItem )
		pFnGetEquippedItem = (UFunction*) UObject::GObjObjects()->Data[ 51199 ];

	UBioInventoryGuiInterface_execGetEquippedItem_Parms GetEquippedItem_Parms;

	this->ProcessEvent ( pFnGetEquippedItem, &GetEquippedItem_Parms, NULL );

	if ( stEquippedItem )
		memcpy ( stEquippedItem, &GetEquippedItem_Parms.stEquippedItem, 0xA0 );

	return GetEquippedItem_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.SelectItemSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eSlot                          ( CPF_Parm )

void UBioInventoryGuiInterface::SelectItemSlot ( unsigned char eSlot )
{
	static UFunction* pFnSelectItemSlot = NULL;

	if ( ! pFnSelectItemSlot )
		pFnSelectItemSlot = (UFunction*) UObject::GObjObjects()->Data[ 51194 ];

	UBioInventoryGuiInterface_execSelectItemSlot_Parms SelectItemSlot_Parms;
	SelectItemSlot_Parms.eSlot = eSlot;

	this->ProcessEvent ( pFnSelectItemSlot, &SelectItemSlot_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.MapSlotToType
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eSlot                          ( CPF_Parm )
// int                            nWeapon                        ( CPF_Parm | CPF_OutParm )
// int                            nEquipment                     ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::MapSlotToType ( unsigned char eSlot, int* nWeapon, int* nEquipment )
{
	static UFunction* pFnMapSlotToType = NULL;

	if ( ! pFnMapSlotToType )
		pFnMapSlotToType = (UFunction*) UObject::GObjObjects()->Data[ 51190 ];

	UBioInventoryGuiInterface_execMapSlotToType_Parms MapSlotToType_Parms;
	MapSlotToType_Parms.eSlot = eSlot;

	this->ProcessEvent ( pFnMapSlotToType, &MapSlotToType_Parms, NULL );

	if ( nWeapon )
		*nWeapon = MapSlotToType_Parms.nWeapon;

	if ( nEquipment )
		*nEquipment = MapSlotToType_Parms.nEquipment;
};

// Function SFXGame.BioInventoryGuiInterface.ItemStatValue
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// class UBioItem*                oItem                          ( CPF_Parm )
// unsigned char                  eItemStatType                  ( CPF_Parm )
// struct FBioInventoryGuiInterfaceItemStat Stat                           ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::ItemStatValue ( class UBioItem* oItem, unsigned char eItemStatType, struct FBioInventoryGuiInterfaceItemStat* Stat )
{
	static UFunction* pFnItemStatValue = NULL;

	if ( ! pFnItemStatValue )
		pFnItemStatValue = (UFunction*) UObject::GObjObjects()->Data[ 51036 ];

	UBioInventoryGuiInterface_execItemStatValue_Parms ItemStatValue_Parms;
	ItemStatValue_Parms.oItem = oItem;
	ItemStatValue_Parms.eItemStatType = eItemStatType;

	this->ProcessEvent ( pFnItemStatValue, &ItemStatValue_Parms, NULL );

	if ( Stat )
		memcpy ( Stat, &ItemStatValue_Parms.Stat, 0xC );
};

// Function SFXGame.BioInventoryGuiInterface.CanBearArmorWeight
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oPawn                          ( CPF_Parm )
// class UBioItemArmor*           oArmor                         ( CPF_Parm )

bool UBioInventoryGuiInterface::CanBearArmorWeight ( class ABioPawn* oPawn, class UBioItemArmor* oArmor )
{
	static UFunction* pFnCanBearArmorWeight = NULL;

	if ( ! pFnCanBearArmorWeight )
		pFnCanBearArmorWeight = (UFunction*) UObject::GObjObjects()->Data[ 51149 ];

	UBioInventoryGuiInterface_execCanBearArmorWeight_Parms CanBearArmorWeight_Parms;
	CanBearArmorWeight_Parms.oPawn = oPawn;
	CanBearArmorWeight_Parms.oArmor = oArmor;

	this->ProcessEvent ( pFnCanBearArmorWeight, &CanBearArmorWeight_Parms, NULL );

	return CanBearArmorWeight_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.PrepareSlotList
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  Slot                           ( CPF_Parm )
// struct TArray<unsigned char>   SlotList                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryGuiInterface::PrepareSlotList ( unsigned char Slot, struct TArray<unsigned char>* SlotList )
{
	static UFunction* pFnPrepareSlotList = NULL;

	if ( ! pFnPrepareSlotList )
		pFnPrepareSlotList = (UFunction*) UObject::GObjObjects()->Data[ 51148 ];

	UBioInventoryGuiInterface_execPrepareSlotList_Parms PrepareSlotList_Parms;
	PrepareSlotList_Parms.Slot = Slot;

	this->ProcessEvent ( pFnPrepareSlotList, &PrepareSlotList_Parms, NULL );

	if ( SlotList )
		memcpy ( SlotList, &PrepareSlotList_Parms.SlotList, 0x10 );
};

// Function SFXGame.BioInventoryGuiInterface.BuildResourcesList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioInventoryGuiInterface::BuildResourcesList ( )
{
	static UFunction* pFnBuildResourcesList = NULL;

	if ( ! pFnBuildResourcesList )
		pFnBuildResourcesList = (UFunction*) UObject::GObjObjects()->Data[ 51150 ];

	UBioInventoryGuiInterface_execBuildResourcesList_Parms BuildResourcesList_Parms;

	this->ProcessEvent ( pFnBuildResourcesList, &BuildResourcesList_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.BuildEquippableItemList
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioInventoryGuiInterface::BuildEquippableItemList ( )
{
	static UFunction* pFnBuildEquippableItemList = NULL;

	if ( ! pFnBuildEquippableItemList )
		pFnBuildEquippableItemList = (UFunction*) UObject::GObjObjects()->Data[ 51132 ];

	UBioInventoryGuiInterface_execBuildEquippableItemList_Parms BuildEquippableItemList_Parms;

	this->ProcessEvent ( pFnBuildEquippableItemList, &BuildEquippableItemList_Parms, NULL );
};

// Function SFXGame.BioInventoryGuiInterface.BuildResourceInfo
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eResource                      ( CPF_Parm )
// float                          fQty                           ( CPF_Parm )
// struct FResourceInfo           oResourceInfo                  ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::BuildResourceInfo ( unsigned char eResource, float fQty, struct FResourceInfo* oResourceInfo )
{
	static UFunction* pFnBuildResourceInfo = NULL;

	if ( ! pFnBuildResourceInfo )
		pFnBuildResourceInfo = (UFunction*) UObject::GObjObjects()->Data[ 51128 ];

	UBioInventoryGuiInterface_execBuildResourceInfo_Parms BuildResourceInfo_Parms;
	BuildResourceInfo_Parms.eResource = eResource;
	BuildResourceInfo_Parms.fQty = fQty;

	this->ProcessEvent ( pFnBuildResourceInfo, &BuildResourceInfo_Parms, NULL );

	if ( oResourceInfo )
		memcpy ( oResourceInfo, &BuildResourceInfo_Parms.oResourceInfo, 0x8 );
};

// Function SFXGame.BioInventoryGuiInterface.IsMerchandisable
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eItemsSlot                     ( CPF_Parm )

bool UBioInventoryGuiInterface::IsMerchandisable ( unsigned char eItemsSlot )
{
	static UFunction* pFnIsMerchandisable = NULL;

	if ( ! pFnIsMerchandisable )
		pFnIsMerchandisable = (UFunction*) UObject::GObjObjects()->Data[ 51113 ];

	UBioInventoryGuiInterface_execIsMerchandisable_Parms IsMerchandisable_Parms;
	IsMerchandisable_Parms.eItemsSlot = eItemsSlot;

	this->ProcessEvent ( pFnIsMerchandisable, &IsMerchandisable_Parms, NULL );

	return IsMerchandisable_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.CreateXModInfo
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FXModInfo               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UBioItemXMod*            oItem                          ( CPF_Parm )
// int                            nXModType                      ( CPF_Parm )

struct FXModInfo UBioInventoryGuiInterface::eventCreateXModInfo ( class UBioItemXMod* oItem, int nXModType )
{
	static UFunction* pFnCreateXModInfo = NULL;

	if ( ! pFnCreateXModInfo )
		pFnCreateXModInfo = (UFunction*) UObject::GObjObjects()->Data[ 51120 ];

	UBioInventoryGuiInterface_eventCreateXModInfo_Parms CreateXModInfo_Parms;
	CreateXModInfo_Parms.oItem = oItem;
	CreateXModInfo_Parms.nXModType = nXModType;

	this->ProcessEvent ( pFnCreateXModInfo, &CreateXModInfo_Parms, NULL );

	return CreateXModInfo_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.CreateItemInfo
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FItemInfo               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UBioItem*                oItem                          ( CPF_Parm )
// unsigned char                  slotType                       ( CPF_Parm )
// int                            nOverrideIndex                 ( CPF_Parm )

struct FItemInfo UBioInventoryGuiInterface::eventCreateItemInfo ( class UBioItem* oItem, unsigned char slotType, int nOverrideIndex )
{
	static UFunction* pFnCreateItemInfo = NULL;

	if ( ! pFnCreateItemInfo )
		pFnCreateItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 51096 ];

	UBioInventoryGuiInterface_eventCreateItemInfo_Parms CreateItemInfo_Parms;
	CreateItemInfo_Parms.oItem = oItem;
	CreateItemInfo_Parms.slotType = slotType;
	CreateItemInfo_Parms.nOverrideIndex = nOverrideIndex;

	this->ProcessEvent ( pFnCreateItemInfo, &CreateItemInfo_Parms, NULL );

	return CreateItemInfo_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.FullReset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventoryGuiInterface::FullReset ( )
{
	static UFunction* pFnFullReset = NULL;

	if ( ! pFnFullReset )
		pFnFullReset = (UFunction*) UObject::GObjObjects()->Data[ 51088 ];

	UBioInventoryGuiInterface_execFullReset_Parms FullReset_Parms;

	pFnFullReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFullReset, &FullReset_Parms, NULL );

	pFnFullReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryGuiInterface.ClearCachedItemInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioInventoryGuiInterface::ClearCachedItemInfo ( )
{
	static UFunction* pFnClearCachedItemInfo = NULL;

	if ( ! pFnClearCachedItemInfo )
		pFnClearCachedItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 51087 ];

	UBioInventoryGuiInterface_execClearCachedItemInfo_Parms ClearCachedItemInfo_Parms;

	pFnClearCachedItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearCachedItemInfo, &ClearCachedItemInfo_Parms, NULL );

	pFnClearCachedItemInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryGuiInterface.CacheItemInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                oItem                          ( CPF_Parm )
// struct FItemInfo               rItemInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioInventoryGuiInterface::CacheItemInfo ( class UBioItem* oItem, struct FItemInfo* rItemInfo )
{
	static UFunction* pFnCacheItemInfo = NULL;

	if ( ! pFnCacheItemInfo )
		pFnCacheItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 51084 ];

	UBioInventoryGuiInterface_execCacheItemInfo_Parms CacheItemInfo_Parms;
	CacheItemInfo_Parms.oItem = oItem;

	pFnCacheItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCacheItemInfo, &CacheItemInfo_Parms, NULL );

	pFnCacheItemInfo->FunctionFlags |= 0x400;

	if ( rItemInfo )
		memcpy ( rItemInfo, &CacheItemInfo_Parms.rItemInfo, 0xA0 );
};

// Function SFXGame.BioInventoryGuiInterface.FindCachedItemInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItem*                oItem                          ( CPF_Parm )
// unsigned char                  slotType                       ( CPF_Parm )
// struct FItemInfo               rItemInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioInventoryGuiInterface::FindCachedItemInfo ( class UBioItem* oItem, unsigned char slotType, struct FItemInfo* rItemInfo )
{
	static UFunction* pFnFindCachedItemInfo = NULL;

	if ( ! pFnFindCachedItemInfo )
		pFnFindCachedItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 51050 ];

	UBioInventoryGuiInterface_execFindCachedItemInfo_Parms FindCachedItemInfo_Parms;
	FindCachedItemInfo_Parms.oItem = oItem;
	FindCachedItemInfo_Parms.slotType = slotType;

	pFnFindCachedItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCachedItemInfo, &FindCachedItemInfo_Parms, NULL );

	pFnFindCachedItemInfo->FunctionFlags |= 0x400;

	if ( rItemInfo )
		memcpy ( rItemInfo, &FindCachedItemInfo_Parms.rItemInfo, 0xA0 );

	return FindCachedItemInfo_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.ExtractRawItemStats
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FBioInventoryGuiInterfaceItemStats ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UBioItemSophisticated*   oItem                          ( CPF_Parm )
// unsigned char                  ePrimaryStatType               ( CPF_Parm )
// unsigned char                  eSecondaryStatType             ( CPF_Parm )
// unsigned char                  eTertiaryStatType              ( CPF_Parm )

struct FBioInventoryGuiInterfaceItemStats UBioInventoryGuiInterface::ExtractRawItemStats ( class UBioItemSophisticated* oItem, unsigned char ePrimaryStatType, unsigned char eSecondaryStatType, unsigned char eTertiaryStatType )
{
	static UFunction* pFnExtractRawItemStats = NULL;

	if ( ! pFnExtractRawItemStats )
		pFnExtractRawItemStats = (UFunction*) UObject::GObjObjects()->Data[ 51018 ];

	UBioInventoryGuiInterface_execExtractRawItemStats_Parms ExtractRawItemStats_Parms;
	ExtractRawItemStats_Parms.oItem = oItem;
	ExtractRawItemStats_Parms.ePrimaryStatType = ePrimaryStatType;
	ExtractRawItemStats_Parms.eSecondaryStatType = eSecondaryStatType;
	ExtractRawItemStats_Parms.eTertiaryStatType = eTertiaryStatType;

	this->ProcessEvent ( pFnExtractRawItemStats, &ExtractRawItemStats_Parms, NULL );

	return ExtractRawItemStats_Parms.ReturnValue;
};

// Function SFXGame.BioInventoryGuiInterface.GetStatTypes
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eSlot                          ( CPF_Parm )
// unsigned char                  ePrimaryStatType               ( CPF_Parm | CPF_OutParm )
// unsigned char                  eSecondaryStatType             ( CPF_Parm | CPF_OutParm )
// unsigned char                  eTertiaryStatType              ( CPF_Parm | CPF_OutParm )

void UBioInventoryGuiInterface::GetStatTypes ( unsigned char eSlot, unsigned char* ePrimaryStatType, unsigned char* eSecondaryStatType, unsigned char* eTertiaryStatType )
{
	static UFunction* pFnGetStatTypes = NULL;

	if ( ! pFnGetStatTypes )
		pFnGetStatTypes = (UFunction*) UObject::GObjObjects()->Data[ 51013 ];

	UBioInventoryGuiInterface_execGetStatTypes_Parms GetStatTypes_Parms;
	GetStatTypes_Parms.eSlot = eSlot;

	this->ProcessEvent ( pFnGetStatTypes, &GetStatTypes_Parms, NULL );

	if ( ePrimaryStatType )
		*ePrimaryStatType = GetStatTypes_Parms.ePrimaryStatType;

	if ( eSecondaryStatType )
		*eSecondaryStatType = GetStatTypes_Parms.eSecondaryStatType;

	if ( eTertiaryStatType )
		*eTertiaryStatType = GetStatTypes_Parms.eTertiaryStatType;
};

// Function SFXGame.BioInventoryGuiInterface.FilterEquippableItemsByPlotConditional
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )

void UBioInventoryGuiInterface::FilterEquippableItemsByPlotConditional ( class ABioWorldInfo* WorldInfo )
{
	static UFunction* pFnFilterEquippableItemsByPlotConditional = NULL;

	if ( ! pFnFilterEquippableItemsByPlotConditional )
		pFnFilterEquippableItemsByPlotConditional = (UFunction*) UObject::GObjObjects()->Data[ 51011 ];

	UBioInventoryGuiInterface_execFilterEquippableItemsByPlotConditional_Parms FilterEquippableItemsByPlotConditional_Parms;
	FilterEquippableItemsByPlotConditional_Parms.WorldInfo = WorldInfo;

	pFnFilterEquippableItemsByPlotConditional->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterEquippableItemsByPlotConditional, &FilterEquippableItemsByPlotConditional_Parms, NULL );

	pFnFilterEquippableItemsByPlotConditional->FunctionFlags |= 0x400;
};

// Function SFXGame.BioInventoryGuiInterface.SortEquippableItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nSortMode                      ( CPF_Parm )

void UBioInventoryGuiInterface::SortEquippableItems ( int nSortMode )
{
	static UFunction* pFnSortEquippableItems = NULL;

	if ( ! pFnSortEquippableItems )
		pFnSortEquippableItems = (UFunction*) UObject::GObjObjects()->Data[ 51009 ];

	UBioInventoryGuiInterface_execSortEquippableItems_Parms SortEquippableItems_Parms;
	SortEquippableItems_Parms.nSortMode = nSortMode;

	pFnSortEquippableItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSortEquippableItems, &SortEquippableItems_Parms, NULL );

	pFnSortEquippableItems->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItem.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioItem::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 54852 ];

	UBioItem_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioItem.ComputeCategoryDisplayInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryNameRef                ( CPF_Parm | CPF_OutParm )
// int                            categoryDescRef                ( CPF_Parm | CPF_OutParm )
// int                            categoryGuiIcon                ( CPF_Parm | CPF_OutParm )

bool UBioItem::ComputeCategoryDisplayInfo ( int* categoryNameRef, int* categoryDescRef, int* categoryGuiIcon )
{
	static UFunction* pFnComputeCategoryDisplayInfo = NULL;

	if ( ! pFnComputeCategoryDisplayInfo )
		pFnComputeCategoryDisplayInfo = (UFunction*) UObject::GObjObjects()->Data[ 51108 ];

	UBioItem_execComputeCategoryDisplayInfo_Parms ComputeCategoryDisplayInfo_Parms;

	pFnComputeCategoryDisplayInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeCategoryDisplayInfo, &ComputeCategoryDisplayInfo_Parms, NULL );

	pFnComputeCategoryDisplayInfo->FunctionFlags |= 0x400;

	if ( categoryNameRef )
		*categoryNameRef = ComputeCategoryDisplayInfo_Parms.categoryNameRef;

	if ( categoryDescRef )
		*categoryDescRef = ComputeCategoryDisplayInfo_Parms.categoryDescRef;

	if ( categoryGuiIcon )
		*categoryGuiIcon = ComputeCategoryDisplayInfo_Parms.categoryGuiIcon;

	return ComputeCategoryDisplayInfo_Parms.ReturnValue;
};

// Function SFXGame.BioItem.GenerateName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioItem::GenerateName ( struct FString* sName )
{
	static UFunction* pFnGenerateName = NULL;

	if ( ! pFnGenerateName )
		pFnGenerateName = (UFunction*) UObject::GObjObjects()->Data[ 54847 ];

	UBioItem_execGenerateName_Parms GenerateName_Parms;

	pFnGenerateName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateName, &GenerateName_Parms, NULL );

	pFnGenerateName->FunctionFlags |= 0x400;

	if ( sName )
		memcpy ( sName, &GenerateName_Parms.sName, 0x10 );
};

// Function SFXGame.BioItem.GetItemPropertyInfo
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nItemPropertyIndex             ( CPF_Parm )
// struct FBioItemPropertyInfo    stPropInfo                     ( CPF_Parm | CPF_OutParm )

bool UBioItem::GetItemPropertyInfo ( int nItemPropertyIndex, struct FBioItemPropertyInfo* stPropInfo )
{
	static UFunction* pFnGetItemPropertyInfo = NULL;

	if ( ! pFnGetItemPropertyInfo )
		pFnGetItemPropertyInfo = (UFunction*) UObject::GObjObjects()->Data[ 51041 ];

	UBioItem_execGetItemPropertyInfo_Parms GetItemPropertyInfo_Parms;
	GetItemPropertyInfo_Parms.nItemPropertyIndex = nItemPropertyIndex;

	this->ProcessEvent ( pFnGetItemPropertyInfo, &GetItemPropertyInfo_Parms, NULL );

	if ( stPropInfo )
		memcpy ( stPropInfo, &GetItemPropertyInfo_Parms.stPropInfo, 0xC );

	return GetItemPropertyInfo_Parms.ReturnValue;
};

// Function SFXGame.BioItem.GetNumItemProperties
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioItem::GetNumItemProperties ( )
{
	static UFunction* pFnGetNumItemProperties = NULL;

	if ( ! pFnGetNumItemProperties )
		pFnGetNumItemProperties = (UFunction*) UObject::GObjObjects()->Data[ 51038 ];

	UBioItem_execGetNumItemProperties_Parms GetNumItemProperties_Parms;

	this->ProcessEvent ( pFnGetNumItemProperties, &GetNumItemProperties_Parms, NULL );

	return GetNumItemProperties_Parms.ReturnValue;
};

// Function SFXGame.BioItem.GetMaxItemPropertyCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioItem::GetMaxItemPropertyCount ( )
{
	static UFunction* pFnGetMaxItemPropertyCount = NULL;

	if ( ! pFnGetMaxItemPropertyCount )
		pFnGetMaxItemPropertyCount = (UFunction*) UObject::GObjObjects()->Data[ 54838 ];

	UBioItem_execGetMaxItemPropertyCount_Parms GetMaxItemPropertyCount_Parms;

	this->ProcessEvent ( pFnGetMaxItemPropertyCount, &GetMaxItemPropertyCount_Parms, NULL );

	return GetMaxItemPropertyCount_Parms.ReturnValue;
};

// Function SFXGame.BioItem.GetItemGuiClassIcon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioItem::GetItemGuiClassIcon ( )
{
	static UFunction* pFnGetItemGuiClassIcon = NULL;

	if ( ! pFnGetItemGuiClassIcon )
		pFnGetItemGuiClassIcon = (UFunction*) UObject::GObjObjects()->Data[ 54832 ];

	UBioItem_execGetItemGuiClassIcon_Parms GetItemGuiClassIcon_Parms;

	this->ProcessEvent ( pFnGetItemGuiClassIcon, &GetItemGuiClassIcon_Parms, NULL );

	return GetItemGuiClassIcon_Parms.ReturnValue;
};

// Function SFXGame.BioItem.RemoveItemProperty
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nItemPropertyID                ( CPF_Parm )

void UBioItem::eventRemoveItemProperty ( int nItemPropertyID )
{
	static UFunction* pFnRemoveItemProperty = NULL;

	if ( ! pFnRemoveItemProperty )
		pFnRemoveItemProperty = (UFunction*) UObject::GObjObjects()->Data[ 54829 ];

	UBioItem_eventRemoveItemProperty_Parms RemoveItemProperty_Parms;
	RemoveItemProperty_Parms.nItemPropertyID = nItemPropertyID;

	this->ProcessEvent ( pFnRemoveItemProperty, &RemoveItemProperty_Parms, NULL );
};

// Function SFXGame.BioItem.AddItemProperty
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nItemPropertyID                ( CPF_Parm )

void UBioItem::eventAddItemProperty ( int nItemPropertyID )
{
	static UFunction* pFnAddItemProperty = NULL;

	if ( ! pFnAddItemProperty )
		pFnAddItemProperty = (UFunction*) UObject::GObjObjects()->Data[ 54826 ];

	UBioItem_eventAddItemProperty_Parms AddItemProperty_Parms;
	AddItemProperty_Parms.nItemPropertyID = nItemPropertyID;

	this->ProcessEvent ( pFnAddItemProperty, &AddItemProperty_Parms, NULL );
};

// Function SFXGame.BioItem.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItem::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 54825 ];

	UBioItem_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItem.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItem::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 47090 ];

	UBioItem_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItem.CalculateSalvageValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItem::CalculateSalvageValue ( )
{
	static UFunction* pFnCalculateSalvageValue = NULL;

	if ( ! pFnCalculateSalvageValue )
		pFnCalculateSalvageValue = (UFunction*) UObject::GObjObjects()->Data[ 54822 ];

	UBioItem_execCalculateSalvageValue_Parms CalculateSalvageValue_Parms;

	pFnCalculateSalvageValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateSalvageValue, &CalculateSalvageValue_Parms, NULL );

	pFnCalculateSalvageValue->FunctionFlags |= 0x400;

	return CalculateSalvageValue_Parms.ReturnValue;
};

// Function SFXGame.BioItem.CalculatePrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItem::CalculatePrice ( )
{
	static UFunction* pFnCalculatePrice = NULL;

	if ( ! pFnCalculatePrice )
		pFnCalculatePrice = (UFunction*) UObject::GObjObjects()->Data[ 51114 ];

	UBioItem_execCalculatePrice_Parms CalculatePrice_Parms;

	pFnCalculatePrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculatePrice, &CalculatePrice_Parms, NULL );

	pFnCalculatePrice->FunctionFlags |= 0x400;

	return CalculatePrice_Parms.ReturnValue;
};

// Function SFXGame.BioItem.CalculateBasePrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItem::CalculateBasePrice ( )
{
	static UFunction* pFnCalculateBasePrice = NULL;

	if ( ! pFnCalculateBasePrice )
		pFnCalculateBasePrice = (UFunction*) UObject::GObjObjects()->Data[ 54820 ];

	UBioItem_execCalculateBasePrice_Parms CalculateBasePrice_Parms;

	pFnCalculateBasePrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateBasePrice, &CalculateBasePrice_Parms, NULL );

	pFnCalculateBasePrice->FunctionFlags |= 0x400;

	return CalculateBasePrice_Parms.ReturnValue;
};

// Function SFXGame.BioItem.ValidateItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioItem::ValidateItem ( )
{
	static UFunction* pFnValidateItem = NULL;

	if ( ! pFnValidateItem )
		pFnValidateItem = (UFunction*) UObject::GObjObjects()->Data[ 54818 ];

	UBioItem_execValidateItem_Parms ValidateItem_Parms;

	pFnValidateItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidateItem, &ValidateItem_Parms, NULL );

	pFnValidateItem->FunctionFlags |= 0x400;

	return ValidateItem_Parms.ReturnValue;
};

// Function SFXGame.BioItem.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItem::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 54816 ];

	UBioItem_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemSophisticated.GetMaterialParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioMaterialOverride*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioMaterialOverride* UBioItemSophisticated::GetMaterialParameters ( )
{
	static UFunction* pFnGetMaterialParameters = NULL;

	if ( ! pFnGetMaterialParameters )
		pFnGetMaterialParameters = (UFunction*) UObject::GObjObjects()->Data[ 54883 ];

	UBioItemSophisticated_execGetMaterialParameters_Parms GetMaterialParameters_Parms;

	pFnGetMaterialParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialParameters, &GetMaterialParameters_Parms, NULL );

	pFnGetMaterialParameters->FunctionFlags |= 0x400;

	return GetMaterialParameters_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.GenerateName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioItemSophisticated::GenerateName ( struct FString* sName )
{
	static UFunction* pFnGenerateName = NULL;

	if ( ! pFnGenerateName )
		pFnGenerateName = (UFunction*) UObject::GObjObjects()->Data[ 54881 ];

	UBioItemSophisticated_execGenerateName_Parms GenerateName_Parms;

	pFnGenerateName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateName, &GenerateName_Parms, NULL );

	pFnGenerateName->FunctionFlags |= 0x400;

	if ( sName )
		memcpy ( sName, &GenerateName_Parms.sName, 0x10 );
};

// Function SFXGame.BioItemSophisticated.GetManufacturerInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FBioManufacturerDetails stManufacturerDetails          ( CPF_Parm | CPF_OutParm )

void UBioItemSophisticated::GetManufacturerInfo ( struct FBioManufacturerDetails* stManufacturerDetails )
{
	static UFunction* pFnGetManufacturerInfo = NULL;

	if ( ! pFnGetManufacturerInfo )
		pFnGetManufacturerInfo = (UFunction*) UObject::GObjObjects()->Data[ 54879 ];

	UBioItemSophisticated_execGetManufacturerInfo_Parms GetManufacturerInfo_Parms;

	pFnGetManufacturerInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetManufacturerInfo, &GetManufacturerInfo_Parms, NULL );

	pFnGetManufacturerInfo->FunctionFlags |= 0x400;

	if ( stManufacturerDetails )
		memcpy ( stManufacturerDetails, &GetManufacturerInfo_Parms.stManufacturerDetails, 0xC );
};

// Function SFXGame.BioItemSophisticated.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItemSophisticated::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 54878 ];

	UBioItemSophisticated_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemSophisticated.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemSophisticated::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 54876 ];

	UBioItemSophisticated_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemSophisticated.TickItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioItemSophisticated::eventTickItem ( float fDeltaTime )
{
	static UFunction* pFnTickItem = NULL;

	if ( ! pFnTickItem )
		pFnTickItem = (UFunction*) UObject::GObjObjects()->Data[ 54874 ];

	UBioItemSophisticated_eventTickItem_Parms TickItem_Parms;
	TickItem_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickItem, &TickItem_Parms, NULL );
};

// Function SFXGame.BioItemSophisticated.GetPhysicsAsset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPhysicsAsset*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPhysicsAsset* UBioItemSophisticated::GetPhysicsAsset ( )
{
	static UFunction* pFnGetPhysicsAsset = NULL;

	if ( ! pFnGetPhysicsAsset )
		pFnGetPhysicsAsset = (UFunction*) UObject::GObjObjects()->Data[ 54872 ];

	UBioItemSophisticated_execGetPhysicsAsset_Parms GetPhysicsAsset_Parms;

	pFnGetPhysicsAsset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPhysicsAsset, &GetPhysicsAsset_Parms, NULL );

	pFnGetPhysicsAsset->FunctionFlags |= 0x400;

	return GetPhysicsAsset_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.GetAnimationTree
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAnimTree*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAnimTree* UBioItemSophisticated::GetAnimationTree ( )
{
	static UFunction* pFnGetAnimationTree = NULL;

	if ( ! pFnGetAnimationTree )
		pFnGetAnimationTree = (UFunction*) UObject::GObjObjects()->Data[ 54870 ];

	UBioItemSophisticated_execGetAnimationTree_Parms GetAnimationTree_Parms;

	pFnGetAnimationTree->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationTree, &GetAnimationTree_Parms, NULL );

	pFnGetAnimationTree->FunctionFlags |= 0x400;

	return GetAnimationTree_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.GetAnimationSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAnimSet*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAnimSet* UBioItemSophisticated::GetAnimationSet ( )
{
	static UFunction* pFnGetAnimationSet = NULL;

	if ( ! pFnGetAnimationSet )
		pFnGetAnimationSet = (UFunction*) UObject::GObjObjects()->Data[ 54868 ];

	UBioItemSophisticated_execGetAnimationSet_Parms GetAnimationSet_Parms;

	pFnGetAnimationSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimationSet, &GetAnimationSet_Parms, NULL );

	pFnGetAnimationSet->FunctionFlags |= 0x400;

	return GetAnimationSet_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.ApplyMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMeshComponent*  oSkelMesh                      ( CPF_Parm | CPF_EditInline )

void UBioItemSophisticated::ApplyMaterials ( class USkeletalMeshComponent* oSkelMesh )
{
	static UFunction* pFnApplyMaterials = NULL;

	if ( ! pFnApplyMaterials )
		pFnApplyMaterials = (UFunction*) UObject::GObjObjects()->Data[ 54866 ];

	UBioItemSophisticated_execApplyMaterials_Parms ApplyMaterials_Parms;
	ApplyMaterials_Parms.oSkelMesh = oSkelMesh;

	pFnApplyMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyMaterials, &ApplyMaterials_Parms, NULL );

	pFnApplyMaterials->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemSophisticated.GetSkeletalMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* UBioItemSophisticated::GetSkeletalMesh ( )
{
	static UFunction* pFnGetSkeletalMesh = NULL;

	if ( ! pFnGetSkeletalMesh )
		pFnGetSkeletalMesh = (UFunction*) UObject::GObjObjects()->Data[ 54864 ];

	UBioItemSophisticated_execGetSkeletalMesh_Parms GetSkeletalMesh_Parms;

	pFnGetSkeletalMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkeletalMesh, &GetSkeletalMesh_Parms, NULL );

	pFnGetSkeletalMesh->FunctionFlags |= 0x400;

	return GetSkeletalMesh_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.ComputeSophistication
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_OptionalParm | CPF_Parm )

int UBioItemSophisticated::ComputeSophistication ( class UBioPawnBehavior* oBehavior )
{
	static UFunction* pFnComputeSophistication = NULL;

	if ( ! pFnComputeSophistication )
		pFnComputeSophistication = (UFunction*) UObject::GObjObjects()->Data[ 51111 ];

	UBioItemSophisticated_execComputeSophistication_Parms ComputeSophistication_Parms;
	ComputeSophistication_Parms.oBehavior = oBehavior;

	pFnComputeSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeSophistication, &ComputeSophistication_Parms, NULL );

	pFnComputeSophistication->FunctionFlags |= 0x400;

	return ComputeSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioItemSophisticated.SetSophistication
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  sophistication                 ( CPF_Parm )

void UBioItemSophisticated::SetSophistication ( unsigned char sophistication )
{
	static UFunction* pFnSetSophistication = NULL;

	if ( ! pFnSetSophistication )
		pFnSetSophistication = (UFunction*) UObject::GObjObjects()->Data[ 54861 ];

	UBioItemSophisticated_execSetSophistication_Parms SetSophistication_Parms;
	SetSophistication_Parms.sophistication = sophistication;

	pFnSetSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSophistication, &SetSophistication_Parms, NULL );

	pFnSetSophistication->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemSophisticated.ComputeNonWeaponSophistication
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_Parm )
// unsigned char                  eEquipmentSlot                 ( CPF_Parm )

int UBioItemSophisticated::ComputeNonWeaponSophistication ( class UBioPawnBehavior* oBehavior, unsigned char eEquipmentSlot )
{
	static UFunction* pFnComputeNonWeaponSophistication = NULL;

	if ( ! pFnComputeNonWeaponSophistication )
		pFnComputeNonWeaponSophistication = (UFunction*) UObject::GObjObjects()->Data[ 54857 ];

	UBioItemSophisticated_execComputeNonWeaponSophistication_Parms ComputeNonWeaponSophistication_Parms;
	ComputeNonWeaponSophistication_Parms.oBehavior = oBehavior;
	ComputeNonWeaponSophistication_Parms.eEquipmentSlot = eEquipmentSlot;

	pFnComputeNonWeaponSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNonWeaponSophistication, &ComputeNonWeaponSophistication_Parms, NULL );

	pFnComputeNonWeaponSophistication->FunctionFlags |= 0x400;

	return ComputeNonWeaponSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioItemEquippable.OnGPEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioItemEquippable::OnGPEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnGPEvent = NULL;

	if ( ! pFnOnGPEvent )
		pFnOnGPEvent = (UFunction*) UObject::GObjObjects()->Data[ 54902 ];

	UBioItemEquippable_execOnGPEvent_Parms OnGPEvent_Parms;
	OnGPEvent_Parms.eEvent = eEvent;
	OnGPEvent_Parms.pTarget = pTarget;

	pFnOnGPEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGPEvent, &OnGPEvent_Parms, NULL );

	pFnOnGPEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemEquippable.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemEquippable::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 54900 ];

	UBioItemEquippable_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemEquippable.OnUnequipInternal
// [0x00080000] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemEquippable::OnUnequipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnUnequipInternal = NULL;

	if ( ! pFnOnUnequipInternal )
		pFnOnUnequipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54898 ];

	UBioItemEquippable_execOnUnequipInternal_Parms OnUnequipInternal_Parms;
	OnUnequipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnUnequipInternal, &OnUnequipInternal_Parms, NULL );
};

// Function SFXGame.BioItemEquippable.OnUnequip
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemEquippable::eventOnUnequip ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnUnequip = NULL;

	if ( ! pFnOnUnequip )
		pFnOnUnequip = (UFunction*) UObject::GObjObjects()->Data[ 54896 ];

	UBioItemEquippable_eventOnUnequip_Parms OnUnequip_Parms;
	OnUnequip_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnUnequip, &OnUnequip_Parms, NULL );
};

// Function SFXGame.BioItemEquippable.OnEquipInternal
// [0x00080000] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemEquippable::OnEquipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnEquipInternal = NULL;

	if ( ! pFnOnEquipInternal )
		pFnOnEquipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54894 ];

	UBioItemEquippable_execOnEquipInternal_Parms OnEquipInternal_Parms;
	OnEquipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnEquipInternal, &OnEquipInternal_Parms, NULL );
};

// Function SFXGame.BioItemEquippable.OnEquip
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemEquippable::eventOnEquip ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnEquip = NULL;

	if ( ! pFnOnEquip )
		pFnOnEquip = (UFunction*) UObject::GObjObjects()->Data[ 54892 ];

	UBioItemEquippable_eventOnEquip_Parms OnEquip_Parms;
	OnEquip_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnEquip, &OnEquip_Parms, NULL );
};

// Function SFXGame.BioItemXModdable.OnGPEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioItemXModdable::OnGPEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnGPEvent = NULL;

	if ( ! pFnOnGPEvent )
		pFnOnGPEvent = (UFunction*) UObject::GObjObjects()->Data[ 54964 ];

	UBioItemXModdable_execOnGPEvent_Parms OnGPEvent_Parms;
	OnGPEvent_Parms.eEvent = eEvent;
	OnGPEvent_Parms.pTarget = pTarget;

	pFnOnGPEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGPEvent, &OnGPEvent_Parms, NULL );

	pFnOnGPEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemXModdable.Load
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioItemXModdableSaveObject* pData                          ( CPF_Parm )

void UBioItemXModdable::Load ( class UBioItemXModdableSaveObject* pData )
{
	static UFunction* pFnLoad = NULL;

	if ( ! pFnLoad )
		pFnLoad = (UFunction*) UObject::GObjObjects()->Data[ 54956 ];

	UBioItemXModdable_execLoad_Parms Load_Parms;
	Load_Parms.pData = pData;

	this->ProcessEvent ( pFnLoad, &Load_Parms, NULL );
};

// Function SFXGame.BioItemXModdable.Save
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioItemXModdableSaveObject* pData                          ( CPF_Parm )

void UBioItemXModdable::Save ( class UBioItemXModdableSaveObject* pData )
{
	static UFunction* pFnSave = NULL;

	if ( ! pFnSave )
		pFnSave = (UFunction*) UObject::GObjObjects()->Data[ 54945 ];

	UBioItemXModdable_execSave_Parms Save_Parms;
	Save_Parms.pData = pData;

	this->ProcessEvent ( pFnSave, &Save_Parms, NULL );
};

// Function SFXGame.BioItemXModdable.GetXMod
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioItemXMod*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nType                          ( CPF_Parm )
// int                            nIndex                         ( CPF_Parm )

class UBioItemXMod* UBioItemXModdable::GetXMod ( int nType, int nIndex )
{
	static UFunction* pFnGetXMod = NULL;

	if ( ! pFnGetXMod )
		pFnGetXMod = (UFunction*) UObject::GObjObjects()->Data[ 54941 ];

	UBioItemXModdable_execGetXMod_Parms GetXMod_Parms;
	GetXMod_Parms.nType = nType;
	GetXMod_Parms.nIndex = nIndex;

	pFnGetXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetXMod, &GetXMod_Parms, NULL );

	pFnGetXMod->FunctionFlags |= 0x400;

	return GetXMod_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.FindXMod
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemXMod*            pXMod                          ( CPF_Parm )

int UBioItemXModdable::FindXMod ( class UBioItemXMod* pXMod )
{
	static UFunction* pFnFindXMod = NULL;

	if ( ! pFnFindXMod )
		pFnFindXMod = (UFunction*) UObject::GObjObjects()->Data[ 54938 ];

	UBioItemXModdable_execFindXMod_Parms FindXMod_Parms;
	FindXMod_Parms.pXMod = pXMod;

	pFnFindXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindXMod, &FindXMod_Parms, NULL );

	pFnFindXMod->FunctionFlags |= 0x400;

	return FindXMod_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.UninstallXMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioItemXMod*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Type                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

class UBioItemXMod* UBioItemXModdable::UninstallXMod ( int Type, int Index )
{
	static UFunction* pFnUninstallXMod = NULL;

	if ( ! pFnUninstallXMod )
		pFnUninstallXMod = (UFunction*) UObject::GObjObjects()->Data[ 54934 ];

	UBioItemXModdable_execUninstallXMod_Parms UninstallXMod_Parms;
	UninstallXMod_Parms.Type = Type;
	UninstallXMod_Parms.Index = Index;

	pFnUninstallXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUninstallXMod, &UninstallXMod_Parms, NULL );

	pFnUninstallXMod->FunctionFlags |= 0x400;

	return UninstallXMod_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.InstallXMod
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioItemXMod*            xMod                           ( CPF_Parm )
// int                            Index                          ( CPF_OptionalParm | CPF_Parm )

int UBioItemXModdable::InstallXMod ( class UBioItemXMod* xMod, int Index )
{
	static UFunction* pFnInstallXMod = NULL;

	if ( ! pFnInstallXMod )
		pFnInstallXMod = (UFunction*) UObject::GObjObjects()->Data[ 54930 ];

	UBioItemXModdable_execInstallXMod_Parms InstallXMod_Parms;
	InstallXMod_Parms.xMod = xMod;
	InstallXMod_Parms.Index = Index;

	pFnInstallXMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInstallXMod, &InstallXMod_Parms, NULL );

	pFnInstallXMod->FunctionFlags |= 0x400;

	return InstallXMod_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioItemXModdable::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 54928 ];

	UBioItemXModdable_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.RetrieveXModAtVirtualSlot
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSlot                          ( CPF_Parm )
// struct FBioItemXModVirtualSlot strVSlot                       ( CPF_Parm | CPF_OutParm )

bool UBioItemXModdable::RetrieveXModAtVirtualSlot ( int nSlot, struct FBioItemXModVirtualSlot* strVSlot )
{
	static UFunction* pFnRetrieveXModAtVirtualSlot = NULL;

	if ( ! pFnRetrieveXModAtVirtualSlot )
		pFnRetrieveXModAtVirtualSlot = (UFunction*) UObject::GObjObjects()->Data[ 51118 ];

	UBioItemXModdable_execRetrieveXModAtVirtualSlot_Parms RetrieveXModAtVirtualSlot_Parms;
	RetrieveXModAtVirtualSlot_Parms.nSlot = nSlot;

	this->ProcessEvent ( pFnRetrieveXModAtVirtualSlot, &RetrieveXModAtVirtualSlot_Parms, NULL );

	if ( strVSlot )
		memcpy ( strVSlot, &RetrieveXModAtVirtualSlot_Parms.strVSlot, 0xC );

	return RetrieveXModAtVirtualSlot_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.TotalVirtualXModSlots
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioItemXModdable::TotalVirtualXModSlots ( )
{
	static UFunction* pFnTotalVirtualXModSlots = NULL;

	if ( ! pFnTotalVirtualXModSlots )
		pFnTotalVirtualXModSlots = (UFunction*) UObject::GObjObjects()->Data[ 51116 ];

	UBioItemXModdable_execTotalVirtualXModSlots_Parms TotalVirtualXModSlots_Parms;

	this->ProcessEvent ( pFnTotalVirtualXModSlots, &TotalVirtualXModSlots_Parms, NULL );

	return TotalVirtualXModSlots_Parms.ReturnValue;
};

// Function SFXGame.BioItemXModdable.TickItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UBioItemXModdable::eventTickItem ( float fDeltaTime )
{
	static UFunction* pFnTickItem = NULL;

	if ( ! pFnTickItem )
		pFnTickItem = (UFunction*) UObject::GObjObjects()->Data[ 54918 ];

	UBioItemXModdable_eventTickItem_Parms TickItem_Parms;
	TickItem_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickItem, &TickItem_Parms, NULL );
};

// Function SFXGame.BioItemXModdable.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemXModdable::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 54915 ];

	UBioItemXModdable_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemXModdable.AddPriceOfAllXMods
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemXModdable::AddPriceOfAllXMods ( )
{
	static UFunction* pFnAddPriceOfAllXMods = NULL;

	if ( ! pFnAddPriceOfAllXMods )
		pFnAddPriceOfAllXMods = (UFunction*) UObject::GObjObjects()->Data[ 54913 ];

	UBioItemXModdable_execAddPriceOfAllXMods_Parms AddPriceOfAllXMods_Parms;

	pFnAddPriceOfAllXMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPriceOfAllXMods, &AddPriceOfAllXMods_Parms, NULL );

	pFnAddPriceOfAllXMods->FunctionFlags |= 0x400;

	return AddPriceOfAllXMods_Parms.ReturnValue;
};

// Function SFXGame.BioItemArmor.OnUnequipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemArmor::OnUnequipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnUnequipInternal = NULL;

	if ( ! pFnOnUnequipInternal )
		pFnOnUnequipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54981 ];

	UBioItemArmor_execOnUnequipInternal_Parms OnUnequipInternal_Parms;
	OnUnequipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnUnequipInternal, &OnUnequipInternal_Parms, NULL );
};

// Function SFXGame.BioItemArmor.OnEquipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemArmor::OnEquipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnEquipInternal = NULL;

	if ( ! pFnOnEquipInternal )
		pFnOnEquipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54979 ];

	UBioItemArmor_execOnEquipInternal_Parms OnEquipInternal_Parms;
	OnEquipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnEquipInternal, &OnEquipInternal_Parms, NULL );
};

// Function SFXGame.BioItemArmor.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemArmor::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 54978 ];

	UBioItemArmor_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemArmor.ComputeSophistication
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_OptionalParm | CPF_Parm )

int UBioItemArmor::ComputeSophistication ( class UBioPawnBehavior* oBehavior )
{
	static UFunction* pFnComputeSophistication = NULL;

	if ( ! pFnComputeSophistication )
		pFnComputeSophistication = (UFunction*) UObject::GObjObjects()->Data[ 54975 ];

	UBioItemArmor_execComputeSophistication_Parms ComputeSophistication_Parms;
	ComputeSophistication_Parms.oBehavior = oBehavior;

	pFnComputeSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeSophistication, &ComputeSophistication_Parms, NULL );

	pFnComputeSophistication->FunctionFlags |= 0x400;

	return ComputeSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioItemArmor.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemArmor::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 54973 ];

	UBioItemArmor_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemArmorShielded.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItemArmorShielded::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55001 ];

	UBioItemArmorShielded_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemArmorShielded.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemArmorShielded::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55000 ];

	UBioItemArmorShielded_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemArmorShielded.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemArmorShielded::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 54998 ];

	UBioItemArmorShielded_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemArmorShielded.OnUnequipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemArmorShielded::OnUnequipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnUnequipInternal = NULL;

	if ( ! pFnOnUnequipInternal )
		pFnOnUnequipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54995 ];

	UBioItemArmorShielded_execOnUnequipInternal_Parms OnUnequipInternal_Parms;
	OnUnequipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnUnequipInternal, &OnUnequipInternal_Parms, NULL );
};

// Function SFXGame.BioItemArmorShielded.OnEquipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemArmorShielded::OnEquipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnEquipInternal = NULL;

	if ( ! pFnOnEquipInternal )
		pFnOnEquipInternal = (UFunction*) UObject::GObjObjects()->Data[ 54993 ];

	UBioItemArmorShielded_execOnEquipInternal_Parms OnEquipInternal_Parms;
	OnEquipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnEquipInternal, &OnEquipInternal_Parms, NULL );
};

// Function SFXGame.BioItemArmorShielded.InitializeShields
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemArmorShielded::InitializeShields ( class ABioPawn* oPawn )
{
	static UFunction* pFnInitializeShields = NULL;

	if ( ! pFnInitializeShields )
		pFnInitializeShields = (UFunction*) UObject::GObjObjects()->Data[ 54990 ];

	UBioItemArmorShielded_execInitializeShields_Parms InitializeShields_Parms;
	InitializeShields_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnInitializeShields, &InitializeShields_Parms, NULL );
};

// Function SFXGame.BioItemBioAmp.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemBioAmp::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55010 ];

	UBioItemBioAmp_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemBioAmp.ComputeSophistication
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_OptionalParm | CPF_Parm )

int UBioItemBioAmp::ComputeSophistication ( class UBioPawnBehavior* oBehavior )
{
	static UFunction* pFnComputeSophistication = NULL;

	if ( ! pFnComputeSophistication )
		pFnComputeSophistication = (UFunction*) UObject::GObjObjects()->Data[ 55007 ];

	UBioItemBioAmp_execComputeSophistication_Parms ComputeSophistication_Parms;
	ComputeSophistication_Parms.oBehavior = oBehavior;

	pFnComputeSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeSophistication, &ComputeSophistication_Parms, NULL );

	pFnComputeSophistication->FunctionFlags |= 0x400;

	return ComputeSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.GenerateName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioItemGrenade::GenerateName ( struct FString* sName )
{
	static UFunction* pFnGenerateName = NULL;

	if ( ! pFnGenerateName )
		pFnGenerateName = (UFunction*) UObject::GObjObjects()->Data[ 55062 ];

	UBioItemGrenade_execGenerateName_Parms GenerateName_Parms;

	pFnGenerateName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateName, &GenerateName_Parms, NULL );

	pFnGenerateName->FunctionFlags |= 0x400;

	if ( sName )
		memcpy ( sName, &GenerateName_Parms.sName, 0x10 );
};

// Function SFXGame.BioItemGrenade.SetDeathVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioDeathVFX*            oDeathVFX                      ( CPF_Parm )

void UBioItemGrenade::SetDeathVFX ( class UBioDeathVFX* oDeathVFX )
{
	static UFunction* pFnSetDeathVFX = NULL;

	if ( ! pFnSetDeathVFX )
		pFnSetDeathVFX = (UFunction*) UObject::GObjObjects()->Data[ 55060 ];

	UBioItemGrenade_execSetDeathVFX_Parms SetDeathVFX_Parms;
	SetDeathVFX_Parms.oDeathVFX = oDeathVFX;

	pFnSetDeathVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDeathVFX, &SetDeathVFX_Parms, NULL );

	pFnSetDeathVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemGrenade.GetDeathVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioDeathVFX*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioDeathVFX* UBioItemGrenade::GetDeathVFX ( )
{
	static UFunction* pFnGetDeathVFX = NULL;

	if ( ! pFnGetDeathVFX )
		pFnGetDeathVFX = (UFunction*) UObject::GObjObjects()->Data[ 54065 ];

	UBioItemGrenade_execGetDeathVFX_Parms GetDeathVFX_Parms;

	pFnGetDeathVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDeathVFX, &GetDeathVFX_Parms, NULL );

	pFnGetDeathVFX->FunctionFlags |= 0x400;

	return GetDeathVFX_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.SetPhysicsAsset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPhysicsAsset*           oPhysicsAsset                  ( CPF_Parm )

void UBioItemGrenade::SetPhysicsAsset ( class UPhysicsAsset* oPhysicsAsset )
{
	static UFunction* pFnSetPhysicsAsset = NULL;

	if ( ! pFnSetPhysicsAsset )
		pFnSetPhysicsAsset = (UFunction*) UObject::GObjObjects()->Data[ 55058 ];

	UBioItemGrenade_execSetPhysicsAsset_Parms SetPhysicsAsset_Parms;
	SetPhysicsAsset_Parms.oPhysicsAsset = oPhysicsAsset;

	pFnSetPhysicsAsset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPhysicsAsset, &SetPhysicsAsset_Parms, NULL );

	pFnSetPhysicsAsset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemGrenade.GetPhysicsAsset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPhysicsAsset*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPhysicsAsset* UBioItemGrenade::GetPhysicsAsset ( )
{
	static UFunction* pFnGetPhysicsAsset = NULL;

	if ( ! pFnGetPhysicsAsset )
		pFnGetPhysicsAsset = (UFunction*) UObject::GObjObjects()->Data[ 55056 ];

	UBioItemGrenade_execGetPhysicsAsset_Parms GetPhysicsAsset_Parms;

	pFnGetPhysicsAsset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPhysicsAsset, &GetPhysicsAsset_Parms, NULL );

	pFnGetPhysicsAsset->FunctionFlags |= 0x400;

	return GetPhysicsAsset_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.SetMesh
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           oMesh                          ( CPF_Parm )

void UBioItemGrenade::SetMesh ( class USkeletalMesh* oMesh )
{
	static UFunction* pFnSetMesh = NULL;

	if ( ! pFnSetMesh )
		pFnSetMesh = (UFunction*) UObject::GObjObjects()->Data[ 55054 ];

	UBioItemGrenade_execSetMesh_Parms SetMesh_Parms;
	SetMesh_Parms.oMesh = oMesh;

	pFnSetMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMesh, &SetMesh_Parms, NULL );

	pFnSetMesh->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemGrenade.GetMesh
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* UBioItemGrenade::GetMesh ( )
{
	static UFunction* pFnGetMesh = NULL;

	if ( ! pFnGetMesh )
		pFnGetMesh = (UFunction*) UObject::GObjObjects()->Data[ 54067 ];

	UBioItemGrenade_execGetMesh_Parms GetMesh_Parms;

	pFnGetMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMesh, &GetMesh_Parms, NULL );

	pFnGetMesh->FunctionFlags |= 0x400;

	return GetMesh_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.SetVisualImpactSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioVISGrenade*          oVisualImpactSet               ( CPF_Parm )

void UBioItemGrenade::SetVisualImpactSet ( class UBioVISGrenade* oVisualImpactSet )
{
	static UFunction* pFnSetVisualImpactSet = NULL;

	if ( ! pFnSetVisualImpactSet )
		pFnSetVisualImpactSet = (UFunction*) UObject::GObjObjects()->Data[ 55052 ];

	UBioItemGrenade_execSetVisualImpactSet_Parms SetVisualImpactSet_Parms;
	SetVisualImpactSet_Parms.oVisualImpactSet = oVisualImpactSet;

	pFnSetVisualImpactSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVisualImpactSet, &SetVisualImpactSet_Parms, NULL );

	pFnSetVisualImpactSet->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemGrenade.GetVisualImpactSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioVISGrenade*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioVISGrenade* UBioItemGrenade::GetVisualImpactSet ( )
{
	static UFunction* pFnGetVisualImpactSet = NULL;

	if ( ! pFnGetVisualImpactSet )
		pFnGetVisualImpactSet = (UFunction*) UObject::GObjObjects()->Data[ 54127 ];

	UBioItemGrenade_execGetVisualImpactSet_Parms GetVisualImpactSet_Parms;

	pFnGetVisualImpactSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualImpactSet, &GetVisualImpactSet_Parms, NULL );

	pFnGetVisualImpactSet->FunctionFlags |= 0x400;

	return GetVisualImpactSet_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.CalculatePrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemGrenade::CalculatePrice ( )
{
	static UFunction* pFnCalculatePrice = NULL;

	if ( ! pFnCalculatePrice )
		pFnCalculatePrice = (UFunction*) UObject::GObjObjects()->Data[ 55050 ];

	UBioItemGrenade_execCalculatePrice_Parms CalculatePrice_Parms;

	pFnCalculatePrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculatePrice, &CalculatePrice_Parms, NULL );

	pFnCalculatePrice->FunctionFlags |= 0x400;

	return CalculatePrice_Parms.ReturnValue;
};

// Function SFXGame.BioItemGrenade.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItemGrenade::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55049 ];

	UBioItemGrenade_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemGrenade.OnUnequipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemGrenade::OnUnequipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnUnequipInternal = NULL;

	if ( ! pFnOnUnequipInternal )
		pFnOnUnequipInternal = (UFunction*) UObject::GObjObjects()->Data[ 55047 ];

	UBioItemGrenade_execOnUnequipInternal_Parms OnUnequipInternal_Parms;
	OnUnequipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnUnequipInternal, &OnUnequipInternal_Parms, NULL );
};

// Function SFXGame.BioItemGrenade.OnEquipInternal
// [0x00080002] 
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )

void UBioItemGrenade::OnEquipInternal ( class ABioPawn* oPawn )
{
	static UFunction* pFnOnEquipInternal = NULL;

	if ( ! pFnOnEquipInternal )
		pFnOnEquipInternal = (UFunction*) UObject::GObjObjects()->Data[ 55045 ];

	UBioItemGrenade_execOnEquipInternal_Parms OnEquipInternal_Parms;
	OnEquipInternal_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnOnEquipInternal, &OnEquipInternal_Parms, NULL );
};

// Function SFXGame.BioItemGrenade.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemGrenade::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 55043 ];

	UBioItemGrenade_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemVehicleBase.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemVehicleBase::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55111 ];

	UBioItemVehicleBase_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemWeapon.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemWeapon::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55118 ];

	UBioItemWeapon_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemWeapon.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemWeapon::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 47089 ];

	UBioItemWeapon_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeapon.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItemWeapon::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55116 ];

	UBioItemWeapon_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemWeaponMelee.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemWeaponMelee::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55134 ];

	UBioItemWeaponMelee_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemWeaponMelee.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemWeaponMelee::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 55131 ];

	UBioItemWeaponMelee_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.GetRoundsPerSecond
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemWeaponRanged::GetRoundsPerSecond ( )
{
	static UFunction* pFnGetRoundsPerSecond = NULL;

	if ( ! pFnGetRoundsPerSecond )
		pFnGetRoundsPerSecond = (UFunction*) UObject::GObjObjects()->Data[ 55156 ];

	UBioItemWeaponRanged_execGetRoundsPerSecond_Parms GetRoundsPerSecond_Parms;

	pFnGetRoundsPerSecond->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRoundsPerSecond, &GetRoundsPerSecond_Parms, NULL );

	pFnGetRoundsPerSecond->FunctionFlags |= 0x400;

	return GetRoundsPerSecond_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.GetKickback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemWeaponRanged::GetKickback ( )
{
	static UFunction* pFnGetKickback = NULL;

	if ( ! pFnGetKickback )
		pFnGetKickback = (UFunction*) UObject::GObjObjects()->Data[ 46083 ];

	UBioItemWeaponRanged_execGetKickback_Parms GetKickback_Parms;

	pFnGetKickback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKickback, &GetKickback_Parms, NULL );

	pFnGetKickback->FunctionFlags |= 0x400;

	return GetKickback_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.GetDriftAngleMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemWeaponRanged::GetDriftAngleMax ( )
{
	static UFunction* pFnGetDriftAngleMax = NULL;

	if ( ! pFnGetDriftAngleMax )
		pFnGetDriftAngleMax = (UFunction*) UObject::GObjObjects()->Data[ 55154 ];

	UBioItemWeaponRanged_execGetDriftAngleMax_Parms GetDriftAngleMax_Parms;

	pFnGetDriftAngleMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDriftAngleMax, &GetDriftAngleMax_Parms, NULL );

	pFnGetDriftAngleMax->FunctionFlags |= 0x400;

	return GetDriftAngleMax_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.GetDriftAngleMin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UBioItemWeaponRanged::GetDriftAngleMin ( )
{
	static UFunction* pFnGetDriftAngleMin = NULL;

	if ( ! pFnGetDriftAngleMin )
		pFnGetDriftAngleMin = (UFunction*) UObject::GObjObjects()->Data[ 55152 ];

	UBioItemWeaponRanged_execGetDriftAngleMin_Parms GetDriftAngleMin_Parms;

	pFnGetDriftAngleMin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDriftAngleMin, &GetDriftAngleMin_Parms, NULL );

	pFnGetDriftAngleMin->FunctionFlags |= 0x400;

	return GetDriftAngleMin_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemWeaponRanged::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55151 ];

	UBioItemWeaponRanged_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemWeaponRanged.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioItemWeaponRanged::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55150 ];

	UBioItemWeaponRanged_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemWeaponRanged.WeaponRanges
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          MinRange                       ( CPF_Parm | CPF_OutParm )
// float                          BestRange                      ( CPF_Parm | CPF_OutParm )
// float                          MaxRange                       ( CPF_Parm | CPF_OutParm )

void UBioItemWeaponRanged::WeaponRanges ( float* MinRange, float* BestRange, float* MaxRange )
{
	static UFunction* pFnWeaponRanges = NULL;

	if ( ! pFnWeaponRanges )
		pFnWeaponRanges = (UFunction*) UObject::GObjObjects()->Data[ 55146 ];

	UBioItemWeaponRanged_execWeaponRanges_Parms WeaponRanges_Parms;

	pFnWeaponRanges->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWeaponRanges, &WeaponRanges_Parms, NULL );

	pFnWeaponRanges->FunctionFlags |= 0x400;

	if ( MinRange )
		*MinRange = WeaponRanges_Parms.MinRange;

	if ( BestRange )
		*BestRange = WeaponRanges_Parms.BestRange;

	if ( MaxRange )
		*MaxRange = WeaponRanges_Parms.MaxRange;
};

// Function SFXGame.BioItemWeaponRanged.ComputeSophistication
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oBehavior                      ( CPF_OptionalParm | CPF_Parm )

int UBioItemWeaponRanged::ComputeSophistication ( class UBioPawnBehavior* oBehavior )
{
	static UFunction* pFnComputeSophistication = NULL;

	if ( ! pFnComputeSophistication )
		pFnComputeSophistication = (UFunction*) UObject::GObjObjects()->Data[ 55143 ];

	UBioItemWeaponRanged_execComputeSophistication_Parms ComputeSophistication_Parms;
	ComputeSophistication_Parms.oBehavior = oBehavior;

	pFnComputeSophistication->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeSophistication, &ComputeSophistication_Parms, NULL );

	pFnComputeSophistication->FunctionFlags |= 0x400;

	return ComputeSophistication_Parms.ReturnValue;
};

// Function SFXGame.BioItemWeaponRanged.GetItemTypeName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UBioItemWeaponRanged::eventGetItemTypeName ( )
{
	static UFunction* pFnGetItemTypeName = NULL;

	if ( ! pFnGetItemTypeName )
		pFnGetItemTypeName = (UFunction*) UObject::GObjObjects()->Data[ 55141 ];

	UBioItemWeaponRanged_eventGetItemTypeName_Parms GetItemTypeName_Parms;

	this->ProcessEvent ( pFnGetItemTypeName, &GetItemTypeName_Parms, NULL );

	return GetItemTypeName_Parms.ReturnValue;
};

// Function SFXGame.BioItemXMod.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioItemXMod::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 55171 ];

	UBioItemXMod_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioItemXMod.OnGPEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class UObject*                 pTarget                        ( CPF_Parm )

void UBioItemXMod::OnGPEvent ( unsigned char eEvent, class UObject* pTarget )
{
	static UFunction* pFnOnGPEvent = NULL;

	if ( ! pFnOnGPEvent )
		pFnOnGPEvent = (UFunction*) UObject::GObjObjects()->Data[ 55168 ];

	UBioItemXMod_execOnGPEvent_Parms OnGPEvent_Parms;
	OnGPEvent_Parms.eEvent = eEvent;
	OnGPEvent_Parms.pTarget = pTarget;

	pFnOnGPEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGPEvent, &OnGPEvent_Parms, NULL );

	pFnOnGPEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioItemXMod.DescribeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioItemXMod::eventDescribeItem ( )
{
	static UFunction* pFnDescribeItem = NULL;

	if ( ! pFnDescribeItem )
		pFnDescribeItem = (UFunction*) UObject::GObjObjects()->Data[ 55166 ];

	UBioItemXMod_eventDescribeItem_Parms DescribeItem_Parms;

	this->ProcessEvent ( pFnDescribeItem, &DescribeItem_Parms, NULL );
};

// Function SFXGame.BioItemImporter.LoadGameItemByLabel
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  sophistication                 ( CPF_Parm )
// struct FName                   nmPackage                      ( CPF_Parm )
// class UObject*                 InOuter                        ( CPF_Parm )
// int                            manuID                         ( CPF_OptionalParm | CPF_Parm )

class UBioItem* UBioItemImporter::LoadGameItemByLabel ( struct FString sLabel, unsigned char sophistication, struct FName nmPackage, class UObject* InOuter, int manuID )
{
	static UFunction* pFnLoadGameItemByLabel = NULL;

	if ( ! pFnLoadGameItemByLabel )
		pFnLoadGameItemByLabel = (UFunction*) UObject::GObjObjects()->Data[ 45317 ];

	UBioItemImporter_execLoadGameItemByLabel_Parms LoadGameItemByLabel_Parms;
	memcpy ( &LoadGameItemByLabel_Parms.sLabel, &sLabel, 0x10 );
	LoadGameItemByLabel_Parms.sophistication = sophistication;
	memcpy ( &LoadGameItemByLabel_Parms.nmPackage, &nmPackage, 0x8 );
	LoadGameItemByLabel_Parms.InOuter = InOuter;
	LoadGameItemByLabel_Parms.manuID = manuID;

	pFnLoadGameItemByLabel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameItemByLabel, &LoadGameItemByLabel_Parms, NULL );

	pFnLoadGameItemByLabel->FunctionFlags |= 0x400;

	return LoadGameItemByLabel_Parms.ReturnValue;
};

// Function SFXGame.BioItemImporter.LoadGameItem
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nID                            ( CPF_Parm )
// unsigned char                  sophistication                 ( CPF_Parm )
// struct FName                   nmPackage                      ( CPF_Parm )
// class UObject*                 InOuter                        ( CPF_Parm )
// int                            manuID                         ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 InExistingObject               ( CPF_OptionalParm | CPF_Parm )

class UBioItem* UBioItemImporter::LoadGameItem ( int nID, unsigned char sophistication, struct FName nmPackage, class UObject* InOuter, int manuID, class UObject* InExistingObject )
{
	static UFunction* pFnLoadGameItem = NULL;

	if ( ! pFnLoadGameItem )
		pFnLoadGameItem = (UFunction*) UObject::GObjObjects()->Data[ 51034 ];

	UBioItemImporter_execLoadGameItem_Parms LoadGameItem_Parms;
	LoadGameItem_Parms.nID = nID;
	LoadGameItem_Parms.sophistication = sophistication;
	memcpy ( &LoadGameItem_Parms.nmPackage, &nmPackage, 0x8 );
	LoadGameItem_Parms.InOuter = InOuter;
	LoadGameItem_Parms.manuID = manuID;
	LoadGameItem_Parms.InExistingObject = InExistingObject;

	pFnLoadGameItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameItem, &LoadGameItem_Parms, NULL );

	pFnLoadGameItem->FunctionFlags |= 0x400;

	return LoadGameItem_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.AutoLevelUp
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioTalentContainer*     talents                        ( CPF_Parm )
// int                            templateID                     ( CPF_Parm )

bool UBioLevelUpSystem::AutoLevelUp ( class UBioTalentContainer* talents, int templateID )
{
	static UFunction* pFnAutoLevelUp = NULL;

	if ( ! pFnAutoLevelUp )
		pFnAutoLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 55231 ];

	UBioLevelUpSystem_execAutoLevelUp_Parms AutoLevelUp_Parms;
	AutoLevelUp_Parms.talents = talents;
	AutoLevelUp_Parms.templateID = templateID;

	pFnAutoLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoLevelUp, &AutoLevelUp_Parms, NULL );

	pFnAutoLevelUp->FunctionFlags |= 0x400;

	return AutoLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.ImmediateAutoLevelUp
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        Target                         ( CPF_Parm )

bool UBioLevelUpSystem::ImmediateAutoLevelUp ( class UBioPawnBehavior* Target )
{
	static UFunction* pFnImmediateAutoLevelUp = NULL;

	if ( ! pFnImmediateAutoLevelUp )
		pFnImmediateAutoLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 55228 ];

	UBioLevelUpSystem_execImmediateAutoLevelUp_Parms ImmediateAutoLevelUp_Parms;
	ImmediateAutoLevelUp_Parms.Target = Target;

	pFnImmediateAutoLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnImmediateAutoLevelUp, &ImmediateAutoLevelUp_Parms, NULL );

	pFnImmediateAutoLevelUp->FunctionFlags |= 0x400;

	return ImmediateAutoLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.LoadAutoLevelUpInformation
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            templateID                     ( CPF_Parm )
// int                            classID                        ( CPF_Parm | CPF_OutParm )
// int                            DisplayName                    ( CPF_Parm | CPF_OutParm )
// int                            DisplayDescription             ( CPF_Parm | CPF_OutParm )

bool UBioLevelUpSystem::LoadAutoLevelUpInformation ( int templateID, int* classID, int* DisplayName, int* DisplayDescription )
{
	static UFunction* pFnLoadAutoLevelUpInformation = NULL;

	if ( ! pFnLoadAutoLevelUpInformation )
		pFnLoadAutoLevelUpInformation = (UFunction*) UObject::GObjObjects()->Data[ 55222 ];

	UBioLevelUpSystem_execLoadAutoLevelUpInformation_Parms LoadAutoLevelUpInformation_Parms;
	LoadAutoLevelUpInformation_Parms.templateID = templateID;

	pFnLoadAutoLevelUpInformation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAutoLevelUpInformation, &LoadAutoLevelUpInformation_Parms, NULL );

	pFnLoadAutoLevelUpInformation->FunctionFlags |= 0x400;

	if ( classID )
		*classID = LoadAutoLevelUpInformation_Parms.classID;

	if ( DisplayName )
		*DisplayName = LoadAutoLevelUpInformation_Parms.DisplayName;

	if ( DisplayDescription )
		*DisplayDescription = LoadAutoLevelUpInformation_Parms.DisplayDescription;

	return LoadAutoLevelUpInformation_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.ExperienceNeededForLevel
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Level                          ( CPF_Parm )
// int                            experience                     ( CPF_Parm | CPF_OutParm )

bool UBioLevelUpSystem::ExperienceNeededForLevel ( int Level, int* experience )
{
	static UFunction* pFnExperienceNeededForLevel = NULL;

	if ( ! pFnExperienceNeededForLevel )
		pFnExperienceNeededForLevel = (UFunction*) UObject::GObjObjects()->Data[ 55218 ];

	UBioLevelUpSystem_execExperienceNeededForLevel_Parms ExperienceNeededForLevel_Parms;
	ExperienceNeededForLevel_Parms.Level = Level;

	pFnExperienceNeededForLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExperienceNeededForLevel, &ExperienceNeededForLevel_Parms, NULL );

	pFnExperienceNeededForLevel->FunctionFlags |= 0x400;

	if ( experience )
		*experience = ExperienceNeededForLevel_Parms.experience;

	return ExperienceNeededForLevel_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.LevelUpPawn
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                Pawn                           ( CPF_Parm )
// int                            newLevel                       ( CPF_Parm )

bool UBioLevelUpSystem::LevelUpPawn ( class ABioPawn* Pawn, int newLevel )
{
	static UFunction* pFnLevelUpPawn = NULL;

	if ( ! pFnLevelUpPawn )
		pFnLevelUpPawn = (UFunction*) UObject::GObjObjects()->Data[ 50602 ];

	UBioLevelUpSystem_execLevelUpPawn_Parms LevelUpPawn_Parms;
	LevelUpPawn_Parms.Pawn = Pawn;
	LevelUpPawn_Parms.newLevel = newLevel;

	pFnLevelUpPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLevelUpPawn, &LevelUpPawn_Parms, NULL );

	pFnLevelUpPawn->FunctionFlags |= 0x400;

	return LevelUpPawn_Parms.ReturnValue;
};

// Function SFXGame.BioLevelUpSystem.AttemptLevelUp
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerSquad*         PlayerSquad                    ( CPF_Parm )

bool UBioLevelUpSystem::AttemptLevelUp ( class ABioPlayerSquad* PlayerSquad )
{
	static UFunction* pFnAttemptLevelUp = NULL;

	if ( ! pFnAttemptLevelUp )
		pFnAttemptLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 55213 ];

	UBioLevelUpSystem_execAttemptLevelUp_Parms AttemptLevelUp_Parms;
	AttemptLevelUp_Parms.PlayerSquad = PlayerSquad;

	pFnAttemptLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttemptLevelUp, &AttemptLevelUp_Parms, NULL );

	pFnAttemptLevelUp->FunctionFlags |= 0x400;

	return AttemptLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioMaterialOverride.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioMaterialOverride::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 45073 ];

	UBioMaterialOverride_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFace.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UBioMorphFace::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 55461 ];

	UBioMorphFace_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFace.SetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Buffer                         ( CPF_Parm )
// int                            vert                           ( CPF_Parm )
// struct FVector                 V                              ( CPF_Parm )

void UBioMorphFace::SetPosition ( int Buffer, int vert, struct FVector V )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 55457 ];

	UBioMorphFace_execSetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.Buffer = Buffer;
	SetPosition_Parms.vert = vert;
	memcpy ( &SetPosition_Parms.V, &V, 0xC );

	pFnSetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );

	pFnSetPosition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFace.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Buffer                         ( CPF_Parm )
// int                            vert                           ( CPF_Parm )

struct FVector UBioMorphFace::GetPosition ( int Buffer, int vert )
{
	static UFunction* pFnGetPosition = NULL;

	if ( ! pFnGetPosition )
		pFnGetPosition = (UFunction*) UObject::GObjObjects()->Data[ 55453 ];

	UBioMorphFace_execGetPosition_Parms GetPosition_Parms;
	GetPosition_Parms.Buffer = Buffer;
	GetPosition_Parms.vert = vert;

	pFnGetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPosition, &GetPosition_Parms, NULL );

	pFnGetPosition->FunctionFlags |= 0x400;

	return GetPosition_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFace.GetNumVerts
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Buffer                         ( CPF_Parm )

int UBioMorphFace::GetNumVerts ( int Buffer )
{
	static UFunction* pFnGetNumVerts = NULL;

	if ( ! pFnGetNumVerts )
		pFnGetNumVerts = (UFunction*) UObject::GObjObjects()->Data[ 55450 ];

	UBioMorphFace_execGetNumVerts_Parms GetNumVerts_Parms;
	GetNumVerts_Parms.Buffer = Buffer;

	pFnGetNumVerts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumVerts, &GetNumVerts_Parms, NULL );

	pFnGetNumVerts->FunctionFlags |= 0x400;

	return GetNumVerts_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFace.GetNumVertexBuffers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioMorphFace::GetNumVertexBuffers ( )
{
	static UFunction* pFnGetNumVertexBuffers = NULL;

	if ( ! pFnGetNumVertexBuffers )
		pFnGetNumVertexBuffers = (UFunction*) UObject::GObjObjects()->Data[ 55448 ];

	UBioMorphFace_execGetNumVertexBuffers_Parms GetNumVertexBuffers_Parms;

	pFnGetNumVertexBuffers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumVertexBuffers, &GetNumVertexBuffers_Parms, NULL );

	pFnGetNumVertexBuffers->FunctionFlags |= 0x400;

	return GetNumVertexBuffers_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFace.ScriptUpdateMorph
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFace::ScriptUpdateMorph ( )
{
	static UFunction* pFnScriptUpdateMorph = NULL;

	if ( ! pFnScriptUpdateMorph )
		pFnScriptUpdateMorph = (UFunction*) UObject::GObjObjects()->Data[ 55447 ];

	UBioMorphFace_execScriptUpdateMorph_Parms ScriptUpdateMorph_Parms;

	pFnScriptUpdateMorph->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScriptUpdateMorph, &ScriptUpdateMorph_Parms, NULL );

	pFnScriptUpdateMorph->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFace.RefreshBuffers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct TArray<int>             BufferIndices                  ( CPF_Parm | CPF_NeedCtorLink )

void UBioMorphFace::RefreshBuffers ( struct TArray<int> BufferIndices )
{
	static UFunction* pFnRefreshBuffers = NULL;

	if ( ! pFnRefreshBuffers )
		pFnRefreshBuffers = (UFunction*) UObject::GObjObjects()->Data[ 55444 ];

	UBioMorphFace_execRefreshBuffers_Parms RefreshBuffers_Parms;
	memcpy ( &RefreshBuffers_Parms.BufferIndices, &BufferIndices, 0x10 );

	pFnRefreshBuffers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefreshBuffers, &RefreshBuffers_Parms, NULL );

	pFnRefreshBuffers->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.LogSliders
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::LogSliders ( )
{
	static UFunction* pFnLogSliders = NULL;

	if ( ! pFnLogSliders )
		pFnLogSliders = (UFunction*) UObject::GObjObjects()->Data[ 55662 ];

	UBioMorphFaceFrontEnd_execLogSliders_Parms LogSliders_Parms;

	pFnLogSliders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogSliders, &LogSliders_Parms, NULL );

	pFnLogSliders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.SelectPreviousBaseHead
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::SelectPreviousBaseHead ( )
{
	static UFunction* pFnSelectPreviousBaseHead = NULL;

	if ( ! pFnSelectPreviousBaseHead )
		pFnSelectPreviousBaseHead = (UFunction*) UObject::GObjObjects()->Data[ 55661 ];

	UBioMorphFaceFrontEnd_execSelectPreviousBaseHead_Parms SelectPreviousBaseHead_Parms;

	pFnSelectPreviousBaseHead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectPreviousBaseHead, &SelectPreviousBaseHead_Parms, NULL );

	pFnSelectPreviousBaseHead->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.SelectNextBaseHead
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::SelectNextBaseHead ( )
{
	static UFunction* pFnSelectNextBaseHead = NULL;

	if ( ! pFnSelectNextBaseHead )
		pFnSelectNextBaseHead = (UFunction*) UObject::GObjObjects()->Data[ 55660 ];

	UBioMorphFaceFrontEnd_execSelectNextBaseHead_Parms SelectNextBaseHead_Parms;

	pFnSelectNextBaseHead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectNextBaseHead, &SelectNextBaseHead_Parms, NULL );

	pFnSelectNextBaseHead->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.SetPlayerName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPlayerName                    ( CPF_Parm | CPF_NeedCtorLink )

void UBioMorphFaceFrontEnd::SetPlayerName ( struct FString sPlayerName )
{
	static UFunction* pFnSetPlayerName = NULL;

	if ( ! pFnSetPlayerName )
		pFnSetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 55658 ];

	UBioMorphFaceFrontEnd_execSetPlayerName_Parms SetPlayerName_Parms;
	memcpy ( &SetPlayerName_Parms.sPlayerName, &sPlayerName, 0x10 );

	pFnSetPlayerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );

	pFnSetPlayerName->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.CheckEverythingPreloaded
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::CheckEverythingPreloaded ( )
{
	static UFunction* pFnCheckEverythingPreloaded = NULL;

	if ( ! pFnCheckEverythingPreloaded )
		pFnCheckEverythingPreloaded = (UFunction*) UObject::GObjObjects()->Data[ 55657 ];

	UBioMorphFaceFrontEnd_execCheckEverythingPreloaded_Parms CheckEverythingPreloaded_Parms;

	pFnCheckEverythingPreloaded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckEverythingPreloaded, &CheckEverythingPreloaded_Parms, NULL );

	pFnCheckEverythingPreloaded->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.Preload2DAPackage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bPlayerIsMale                  ( CPF_Parm )

void UBioMorphFaceFrontEnd::Preload2DAPackage ( unsigned long bPlayerIsMale )
{
	static UFunction* pFnPreload2DAPackage = NULL;

	if ( ! pFnPreload2DAPackage )
		pFnPreload2DAPackage = (UFunction*) UObject::GObjObjects()->Data[ 55655 ];

	UBioMorphFaceFrontEnd_execPreload2DAPackage_Parms Preload2DAPackage_Parms;
	Preload2DAPackage_Parms.bPlayerIsMale = bPlayerIsMale;

	pFnPreload2DAPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreload2DAPackage, &Preload2DAPackage_Parms, NULL );

	pFnPreload2DAPackage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.Cleanup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 55654 ];

	UBioMorphFaceFrontEnd_execCleanup_Parms Cleanup_Parms;

	pFnCleanup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );

	pFnCleanup->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.HandleSliderChange
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )
// int                            SliderValue                    ( CPF_Parm )
// unsigned long                  bUpdate                        ( CPF_OptionalParm | CPF_Parm )

void UBioMorphFaceFrontEnd::HandleSliderChange ( int categoryIndex, int sliderIndex, int SliderValue, unsigned long bUpdate )
{
	static UFunction* pFnHandleSliderChange = NULL;

	if ( ! pFnHandleSliderChange )
		pFnHandleSliderChange = (UFunction*) UObject::GObjObjects()->Data[ 55649 ];

	UBioMorphFaceFrontEnd_execHandleSliderChange_Parms HandleSliderChange_Parms;
	HandleSliderChange_Parms.categoryIndex = categoryIndex;
	HandleSliderChange_Parms.sliderIndex = sliderIndex;
	HandleSliderChange_Parms.SliderValue = SliderValue;
	HandleSliderChange_Parms.bUpdate = bUpdate;

	pFnHandleSliderChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleSliderChange, &HandleSliderChange_Parms, NULL );

	pFnHandleSliderChange->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderNotched
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

bool UBioMorphFaceFrontEnd::GetSliderNotched ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderNotched = NULL;

	if ( ! pFnGetSliderNotched )
		pFnGetSliderNotched = (UFunction*) UObject::GObjObjects()->Data[ 55645 ];

	UBioMorphFaceFrontEnd_execGetSliderNotched_Parms GetSliderNotched_Parms;
	GetSliderNotched_Parms.categoryIndex = categoryIndex;
	GetSliderNotched_Parms.sliderIndex = sliderIndex;

	pFnGetSliderNotched->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderNotched, &GetSliderNotched_Parms, NULL );

	pFnGetSliderNotched->FunctionFlags |= 0x400;

	return GetSliderNotched_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderValue ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderValue = NULL;

	if ( ! pFnGetSliderValue )
		pFnGetSliderValue = (UFunction*) UObject::GObjObjects()->Data[ 55641 ];

	UBioMorphFaceFrontEnd_execGetSliderValue_Parms GetSliderValue_Parms;
	GetSliderValue_Parms.categoryIndex = categoryIndex;
	GetSliderValue_Parms.sliderIndex = sliderIndex;

	pFnGetSliderValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderValue, &GetSliderValue_Parms, NULL );

	pFnGetSliderValue->FunctionFlags |= 0x400;

	return GetSliderValue_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderStep ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderStep = NULL;

	if ( ! pFnGetSliderStep )
		pFnGetSliderStep = (UFunction*) UObject::GObjObjects()->Data[ 55637 ];

	UBioMorphFaceFrontEnd_execGetSliderStep_Parms GetSliderStep_Parms;
	GetSliderStep_Parms.categoryIndex = categoryIndex;
	GetSliderStep_Parms.sliderIndex = sliderIndex;

	pFnGetSliderStep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderStep, &GetSliderStep_Parms, NULL );

	pFnGetSliderStep->FunctionFlags |= 0x400;

	return GetSliderStep_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderMax ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderMax = NULL;

	if ( ! pFnGetSliderMax )
		pFnGetSliderMax = (UFunction*) UObject::GObjObjects()->Data[ 55633 ];

	UBioMorphFaceFrontEnd_execGetSliderMax_Parms GetSliderMax_Parms;
	GetSliderMax_Parms.categoryIndex = categoryIndex;
	GetSliderMax_Parms.sliderIndex = sliderIndex;

	pFnGetSliderMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderMax, &GetSliderMax_Parms, NULL );

	pFnGetSliderMax->FunctionFlags |= 0x400;

	return GetSliderMax_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderMin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderMin ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderMin = NULL;

	if ( ! pFnGetSliderMin )
		pFnGetSliderMin = (UFunction*) UObject::GObjObjects()->Data[ 55629 ];

	UBioMorphFaceFrontEnd_execGetSliderMin_Parms GetSliderMin_Parms;
	GetSliderMin_Parms.categoryIndex = categoryIndex;
	GetSliderMin_Parms.sliderIndex = sliderIndex;

	pFnGetSliderMin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderMin, &GetSliderMin_Parms, NULL );

	pFnGetSliderMin->FunctionFlags |= 0x400;

	return GetSliderMin_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderDesc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderDesc ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderDesc = NULL;

	if ( ! pFnGetSliderDesc )
		pFnGetSliderDesc = (UFunction*) UObject::GObjObjects()->Data[ 55625 ];

	UBioMorphFaceFrontEnd_execGetSliderDesc_Parms GetSliderDesc_Parms;
	GetSliderDesc_Parms.categoryIndex = categoryIndex;
	GetSliderDesc_Parms.sliderIndex = sliderIndex;

	pFnGetSliderDesc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderDesc, &GetSliderDesc_Parms, NULL );

	pFnGetSliderDesc->FunctionFlags |= 0x400;

	return GetSliderDesc_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetSliderLabel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )
// int                            sliderIndex                    ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetSliderLabel ( int categoryIndex, int sliderIndex )
{
	static UFunction* pFnGetSliderLabel = NULL;

	if ( ! pFnGetSliderLabel )
		pFnGetSliderLabel = (UFunction*) UObject::GObjObjects()->Data[ 55621 ];

	UBioMorphFaceFrontEnd_execGetSliderLabel_Parms GetSliderLabel_Parms;
	GetSliderLabel_Parms.categoryIndex = categoryIndex;
	GetSliderLabel_Parms.sliderIndex = sliderIndex;

	pFnGetSliderLabel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSliderLabel, &GetSliderLabel_Parms, NULL );

	pFnGetSliderLabel->FunctionFlags |= 0x400;

	return GetSliderLabel_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetNumSlidersInCategory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetNumSlidersInCategory ( int categoryIndex )
{
	static UFunction* pFnGetNumSlidersInCategory = NULL;

	if ( ! pFnGetNumSlidersInCategory )
		pFnGetNumSlidersInCategory = (UFunction*) UObject::GObjObjects()->Data[ 55618 ];

	UBioMorphFaceFrontEnd_execGetNumSlidersInCategory_Parms GetNumSlidersInCategory_Parms;
	GetNumSlidersInCategory_Parms.categoryIndex = categoryIndex;

	pFnGetNumSlidersInCategory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumSlidersInCategory, &GetNumSlidersInCategory_Parms, NULL );

	pFnGetNumSlidersInCategory->FunctionFlags |= 0x400;

	return GetNumSlidersInCategory_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetCategoryDescription
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetCategoryDescription ( int categoryIndex )
{
	static UFunction* pFnGetCategoryDescription = NULL;

	if ( ! pFnGetCategoryDescription )
		pFnGetCategoryDescription = (UFunction*) UObject::GObjObjects()->Data[ 55615 ];

	UBioMorphFaceFrontEnd_execGetCategoryDescription_Parms GetCategoryDescription_Parms;
	GetCategoryDescription_Parms.categoryIndex = categoryIndex;

	pFnGetCategoryDescription->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCategoryDescription, &GetCategoryDescription_Parms, NULL );

	pFnGetCategoryDescription->FunctionFlags |= 0x400;

	return GetCategoryDescription_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetCategoryString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            categoryIndex                  ( CPF_Parm )

int UBioMorphFaceFrontEnd::GetCategoryString ( int categoryIndex )
{
	static UFunction* pFnGetCategoryString = NULL;

	if ( ! pFnGetCategoryString )
		pFnGetCategoryString = (UFunction*) UObject::GObjObjects()->Data[ 55612 ];

	UBioMorphFaceFrontEnd_execGetCategoryString_Parms GetCategoryString_Parms;
	GetCategoryString_Parms.categoryIndex = categoryIndex;

	pFnGetCategoryString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCategoryString, &GetCategoryString_Parms, NULL );

	pFnGetCategoryString->FunctionFlags |= 0x400;

	return GetCategoryString_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.GetNumberOfFeatureCategories
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioMorphFaceFrontEnd::GetNumberOfFeatureCategories ( )
{
	static UFunction* pFnGetNumberOfFeatureCategories = NULL;

	if ( ! pFnGetNumberOfFeatureCategories )
		pFnGetNumberOfFeatureCategories = (UFunction*) UObject::GObjObjects()->Data[ 55610 ];

	UBioMorphFaceFrontEnd_execGetNumberOfFeatureCategories_Parms GetNumberOfFeatureCategories_Parms;

	pFnGetNumberOfFeatureCategories->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumberOfFeatureCategories, &GetNumberOfFeatureCategories_Parms, NULL );

	pFnGetNumberOfFeatureCategories->FunctionFlags |= 0x400;

	return GetNumberOfFeatureCategories_Parms.ReturnValue;
};

// Function SFXGame.BioMorphFaceFrontEnd.ResetCategory
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nCategory                      ( CPF_Parm )
// unsigned long                  bUpdate                        ( CPF_OptionalParm | CPF_Parm )

void UBioMorphFaceFrontEnd::ResetCategory ( int nCategory, unsigned long bUpdate )
{
	static UFunction* pFnResetCategory = NULL;

	if ( ! pFnResetCategory )
		pFnResetCategory = (UFunction*) UObject::GObjObjects()->Data[ 55607 ];

	UBioMorphFaceFrontEnd_execResetCategory_Parms ResetCategory_Parms;
	ResetCategory_Parms.nCategory = nCategory;
	ResetCategory_Parms.bUpdate = bUpdate;

	pFnResetCategory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetCategory, &ResetCategory_Parms, NULL );

	pFnResetCategory->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.ResetAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::ResetAll ( )
{
	static UFunction* pFnResetAll = NULL;

	if ( ! pFnResetAll )
		pFnResetAll = (UFunction*) UObject::GObjObjects()->Data[ 55606 ];

	UBioMorphFaceFrontEnd_execResetAll_Parms ResetAll_Parms;

	pFnResetAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetAll, &ResetAll_Parms, NULL );

	pFnResetAll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.Load2DAs
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bPlayerIsMale                  ( CPF_Parm )
// struct FString                 sPlayerName                    ( CPF_Parm | CPF_NeedCtorLink )

void UBioMorphFaceFrontEnd::Load2DAs ( unsigned long bPlayerIsMale, struct FString sPlayerName )
{
	static UFunction* pFnLoad2DAs = NULL;

	if ( ! pFnLoad2DAs )
		pFnLoad2DAs = (UFunction*) UObject::GObjObjects()->Data[ 55603 ];

	UBioMorphFaceFrontEnd_execLoad2DAs_Parms Load2DAs_Parms;
	Load2DAs_Parms.bPlayerIsMale = bPlayerIsMale;
	memcpy ( &Load2DAs_Parms.sPlayerName, &sPlayerName, 0x10 );

	pFnLoad2DAs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad2DAs, &Load2DAs_Parms, NULL );

	pFnLoad2DAs->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.RandomizeCategory
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nCategory                      ( CPF_Parm )
// unsigned long                  bUpdate                        ( CPF_OptionalParm | CPF_Parm )

void UBioMorphFaceFrontEnd::RandomizeCategory ( int nCategory, unsigned long bUpdate )
{
	static UFunction* pFnRandomizeCategory = NULL;

	if ( ! pFnRandomizeCategory )
		pFnRandomizeCategory = (UFunction*) UObject::GObjObjects()->Data[ 55600 ];

	UBioMorphFaceFrontEnd_execRandomizeCategory_Parms RandomizeCategory_Parms;
	RandomizeCategory_Parms.nCategory = nCategory;
	RandomizeCategory_Parms.bUpdate = bUpdate;

	pFnRandomizeCategory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRandomizeCategory, &RandomizeCategory_Parms, NULL );

	pFnRandomizeCategory->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.RandomizeAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioMorphFaceFrontEnd::RandomizeAll ( )
{
	static UFunction* pFnRandomizeAll = NULL;

	if ( ! pFnRandomizeAll )
		pFnRandomizeAll = (UFunction*) UObject::GObjObjects()->Data[ 55599 ];

	UBioMorphFaceFrontEnd_execRandomizeAll_Parms RandomizeAll_Parms;

	pFnRandomizeAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRandomizeAll, &RandomizeAll_Parms, NULL );

	pFnRandomizeAll->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMorphFaceFrontEnd.Initialize
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pThePlayer                     ( CPF_Parm )
// unsigned long                  bPlayerIsMale                  ( CPF_Parm )
// unsigned long                  bReset                         ( CPF_OptionalParm | CPF_Parm )

void UBioMorphFaceFrontEnd::Initialize ( class ABioPawn* pThePlayer, unsigned long bPlayerIsMale, unsigned long bReset )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55595 ];

	UBioMorphFaceFrontEnd_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.pThePlayer = pThePlayer;
	Initialize_Parms.bPlayerIsMale = bPlayerIsMale;
	Initialize_Parms.bReset = bReset;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.UpdatePrimaryAndSecondaryWeapons
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventUpdatePrimaryAndSecondaryWeapons ( )
{
	static UFunction* pFnUpdatePrimaryAndSecondaryWeapons = NULL;

	if ( ! pFnUpdatePrimaryAndSecondaryWeapons )
		pFnUpdatePrimaryAndSecondaryWeapons = (UFunction*) UObject::GObjObjects()->Data[ 46469 ];

	ABioPawn_eventUpdatePrimaryAndSecondaryWeapons_Parms UpdatePrimaryAndSecondaryWeapons_Parms;

	this->ProcessEvent ( pFnUpdatePrimaryAndSecondaryWeapons, &UpdatePrimaryAndSecondaryWeapons_Parms, NULL );
};

// Function SFXGame.BioPawn.DrawPrimaryWeapon
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventDrawPrimaryWeapon ( )
{
	static UFunction* pFnDrawPrimaryWeapon = NULL;

	if ( ! pFnDrawPrimaryWeapon )
		pFnDrawPrimaryWeapon = (UFunction*) UObject::GObjObjects()->Data[ 46468 ];

	ABioPawn_eventDrawPrimaryWeapon_Parms DrawPrimaryWeapon_Parms;

	this->ProcessEvent ( pFnDrawPrimaryWeapon, &DrawPrimaryWeapon_Parms, NULL );
};

// Function SFXGame.BioPawn.OutsideWorldBounds
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventOutsideWorldBounds ( )
{
	static UFunction* pFnOutsideWorldBounds = NULL;

	if ( ! pFnOutsideWorldBounds )
		pFnOutsideWorldBounds = (UFunction*) UObject::GObjObjects()->Data[ 46467 ];

	ABioPawn_eventOutsideWorldBounds_Parms OutsideWorldBounds_Parms;

	this->ProcessEvent ( pFnOutsideWorldBounds, &OutsideWorldBounds_Parms, NULL );
};

// Function SFXGame.BioPawn.IsHostile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool ABioPawn::IsHostile ( class APawn* Other )
{
	static UFunction* pFnIsHostile = NULL;

	if ( ! pFnIsHostile )
		pFnIsHostile = (UFunction*) UObject::GObjObjects()->Data[ 46464 ];

	ABioPawn_execIsHostile_Parms IsHostile_Parms;
	IsHostile_Parms.Other = Other;

	pFnIsHostile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsHostile, &IsHostile_Parms, NULL );

	pFnIsHostile->FunctionFlags |= 0x400;

	return IsHostile_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetDesiredLeanState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioPawn::GetDesiredLeanState ( )
{
	static UFunction* pFnGetDesiredLeanState = NULL;

	if ( ! pFnGetDesiredLeanState )
		pFnGetDesiredLeanState = (UFunction*) UObject::GObjObjects()->Data[ 46462 ];

	ABioPawn_execGetDesiredLeanState_Parms GetDesiredLeanState_Parms;

	pFnGetDesiredLeanState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDesiredLeanState, &GetDesiredLeanState_Parms, NULL );

	pFnGetDesiredLeanState->FunctionFlags |= 0x400;

	return GetDesiredLeanState_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.StopMovement
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bStopRotation                  ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::StopMovement ( unsigned long bStopRotation )
{
	static UFunction* pFnStopMovement = NULL;

	if ( ! pFnStopMovement )
		pFnStopMovement = (UFunction*) UObject::GObjObjects()->Data[ 44161 ];

	ABioPawn_execStopMovement_Parms StopMovement_Parms;
	StopMovement_Parms.bStopRotation = bStopRotation;

	pFnStopMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopMovement, &StopMovement_Parms, NULL );

	pFnStopMovement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.ApplyFemaleSkinToneOverride
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventApplyFemaleSkinToneOverride ( )
{
	static UFunction* pFnApplyFemaleSkinToneOverride = NULL;

	if ( ! pFnApplyFemaleSkinToneOverride )
		pFnApplyFemaleSkinToneOverride = (UFunction*) UObject::GObjObjects()->Data[ 46452 ];

	ABioPawn_eventApplyFemaleSkinToneOverride_Parms ApplyFemaleSkinToneOverride_Parms;

	this->ProcessEvent ( pFnApplyFemaleSkinToneOverride, &ApplyFemaleSkinToneOverride_Parms, NULL );
};

// Function SFXGame.BioPawn.OnFaceFXAnimStopped
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventOnFaceFXAnimStopped ( )
{
	static UFunction* pFnOnFaceFXAnimStopped = NULL;

	if ( ! pFnOnFaceFXAnimStopped )
		pFnOnFaceFXAnimStopped = (UFunction*) UObject::GObjObjects()->Data[ 46451 ];

	ABioPawn_eventOnFaceFXAnimStopped_Parms OnFaceFXAnimStopped_Parms;

	this->ProcessEvent ( pFnOnFaceFXAnimStopped, &OnFaceFXAnimStopped_Parms, NULL );
};

// Function SFXGame.BioPawn.OnFaceFXAnimStarted
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventOnFaceFXAnimStarted ( )
{
	static UFunction* pFnOnFaceFXAnimStarted = NULL;

	if ( ! pFnOnFaceFXAnimStarted )
		pFnOnFaceFXAnimStarted = (UFunction*) UObject::GObjObjects()->Data[ 46449 ];

	ABioPawn_eventOnFaceFXAnimStarted_Parms OnFaceFXAnimStarted_Parms;

	this->ProcessEvent ( pFnOnFaceFXAnimStarted, &OnFaceFXAnimStarted_Parms, NULL );
};

// Function SFXGame.BioPawn.EnableEyeBlinks
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioPawn::EnableEyeBlinks ( )
{
	static UFunction* pFnEnableEyeBlinks = NULL;

	if ( ! pFnEnableEyeBlinks )
		pFnEnableEyeBlinks = (UFunction*) UObject::GObjObjects()->Data[ 46444 ];

	ABioPawn_execEnableEyeBlinks_Parms EnableEyeBlinks_Parms;

	this->ProcessEvent ( pFnEnableEyeBlinks, &EnableEyeBlinks_Parms, NULL );
};

// Function SFXGame.BioPawn.DisableEyeBlinks
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioPawn::DisableEyeBlinks ( )
{
	static UFunction* pFnDisableEyeBlinks = NULL;

	if ( ! pFnDisableEyeBlinks )
		pFnDisableEyeBlinks = (UFunction*) UObject::GObjObjects()->Data[ 46436 ];

	ABioPawn_execDisableEyeBlinks_Parms DisableEyeBlinks_Parms;

	this->ProcessEvent ( pFnDisableEyeBlinks, &DisableEyeBlinks_Parms, NULL );
};

// Function SFXGame.BioPawn.GetWalkingSpeedMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioPawn::GetWalkingSpeedMode ( )
{
	static UFunction* pFnGetWalkingSpeedMode = NULL;

	if ( ! pFnGetWalkingSpeedMode )
		pFnGetWalkingSpeedMode = (UFunction*) UObject::GObjObjects()->Data[ 46434 ];

	ABioPawn_execGetWalkingSpeedMode_Parms GetWalkingSpeedMode_Parms;

	pFnGetWalkingSpeedMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWalkingSpeedMode, &GetWalkingSpeedMode_Parms, NULL );

	pFnGetWalkingSpeedMode->FunctionFlags |= 0x400;

	return GetWalkingSpeedMode_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetShouldCrouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bCrouch                        ( CPF_Parm )

void ABioPawn::eventSetShouldCrouch ( unsigned long bCrouch )
{
	static UFunction* pFnSetShouldCrouch = NULL;

	if ( ! pFnSetShouldCrouch )
		pFnSetShouldCrouch = (UFunction*) UObject::GObjObjects()->Data[ 46432 ];

	ABioPawn_eventSetShouldCrouch_Parms SetShouldCrouch_Parms;
	SetShouldCrouch_Parms.bCrouch = bCrouch;

	this->ProcessEvent ( pFnSetShouldCrouch, &SetShouldCrouch_Parms, NULL );
};

// Function SFXGame.BioPawn.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ABioPawn::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 46421 ];

	ABioPawn_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function SFXGame.BioPawn.UnsuppressChatter
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioPawn::UnsuppressChatter ( )
{
	static UFunction* pFnUnsuppressChatter = NULL;

	if ( ! pFnUnsuppressChatter )
		pFnUnsuppressChatter = (UFunction*) UObject::GObjObjects()->Data[ 46420 ];

	ABioPawn_execUnsuppressChatter_Parms UnsuppressChatter_Parms;

	this->ProcessEvent ( pFnUnsuppressChatter, &UnsuppressChatter_Parms, NULL );
};

// Function SFXGame.BioPawn.OnChatterLinePlayed
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned char                  SoundSet                       ( CPF_Parm )

void ABioPawn::eventOnChatterLinePlayed ( unsigned char SoundSet )
{
	static UFunction* pFnOnChatterLinePlayed = NULL;

	if ( ! pFnOnChatterLinePlayed )
		pFnOnChatterLinePlayed = (UFunction*) UObject::GObjObjects()->Data[ 46418 ];

	ABioPawn_eventOnChatterLinePlayed_Parms OnChatterLinePlayed_Parms;
	OnChatterLinePlayed_Parms.SoundSet = SoundSet;

	this->ProcessEvent ( pFnOnChatterLinePlayed, &OnChatterLinePlayed_Parms, NULL );
};

// Function SFXGame.BioPawn.HandleChatterEvent
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned char                  eSoundSet                      ( CPF_Parm )
// unsigned long                  bForceChatter                  ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::eventHandleChatterEvent ( unsigned char eSoundSet, unsigned long bForceChatter )
{
	static UFunction* pFnHandleChatterEvent = NULL;

	if ( ! pFnHandleChatterEvent )
		pFnHandleChatterEvent = (UFunction*) UObject::GObjObjects()->Data[ 43188 ];

	ABioPawn_eventHandleChatterEvent_Parms HandleChatterEvent_Parms;
	HandleChatterEvent_Parms.eSoundSet = eSoundSet;
	HandleChatterEvent_Parms.bForceChatter = bForceChatter;

	this->ProcessEvent ( pFnHandleChatterEvent, &HandleChatterEvent_Parms, NULL );
};

// Function SFXGame.BioPawn.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioPawn::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 46411 ];

	ABioPawn_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsCombatActionState
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  EActionState                   ( CPF_Parm )

bool ABioPawn::IsCombatActionState ( unsigned char EActionState )
{
	static UFunction* pFnIsCombatActionState = NULL;

	if ( ! pFnIsCombatActionState )
		pFnIsCombatActionState = (UFunction*) UObject::GObjObjects()->Data[ 46408 ];

	ABioPawn_execIsCombatActionState_Parms IsCombatActionState_Parms;
	IsCombatActionState_Parms.EActionState = EActionState;

	pFnIsCombatActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCombatActionState, &IsCombatActionState_Parms, NULL );

	pFnIsCombatActionState->FunctionFlags |= 0x400;

	return IsCombatActionState_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.MakeVulnerable
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioPawn::MakeVulnerable ( )
{
	static UFunction* pFnMakeVulnerable = NULL;

	if ( ! pFnMakeVulnerable )
		pFnMakeVulnerable = (UFunction*) UObject::GObjObjects()->Data[ 46407 ];

	ABioPawn_execMakeVulnerable_Parms MakeVulnerable_Parms;

	this->ProcessEvent ( pFnMakeVulnerable, &MakeVulnerable_Parms, NULL );
};

// Function SFXGame.BioPawn.CorpseCleanupTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventCorpseCleanupTimer ( )
{
	static UFunction* pFnCorpseCleanupTimer = NULL;

	if ( ! pFnCorpseCleanupTimer )
		pFnCorpseCleanupTimer = (UFunction*) UObject::GObjObjects()->Data[ 46396 ];

	ABioPawn_eventCorpseCleanupTimer_Parms CorpseCleanupTimer_Parms;

	this->ProcessEvent ( pFnCorpseCleanupTimer, &CorpseCleanupTimer_Parms, NULL );
};

// Function SFXGame.BioPawn.SpawnDefaultController
// [0x00020002] 
// Parameters infos:

void ABioPawn::SpawnDefaultController ( )
{
	static UFunction* pFnSpawnDefaultController = NULL;

	if ( ! pFnSpawnDefaultController )
		pFnSpawnDefaultController = (UFunction*) UObject::GObjObjects()->Data[ 46392 ];

	ABioPawn_execSpawnDefaultController_Parms SpawnDefaultController_Parms;

	this->ProcessEvent ( pFnSpawnDefaultController, &SpawnDefaultController_Parms, NULL );
};

// Function SFXGame.BioPawn.SetBaseEyeheight
// [0x00020102] 
// Parameters infos:

void ABioPawn::SetBaseEyeheight ( )
{
	static UFunction* pFnSetBaseEyeheight = NULL;

	if ( ! pFnSetBaseEyeheight )
		pFnSetBaseEyeheight = (UFunction*) UObject::GObjObjects()->Data[ 46391 ];

	ABioPawn_execSetBaseEyeheight_Parms SetBaseEyeheight_Parms;

	this->ProcessEvent ( pFnSetBaseEyeheight, &SetBaseEyeheight_Parms, NULL );
};

// Function SFXGame.BioPawn.UpdateSkelWhenNotRendered
// [0x00020002] 
// Parameters infos:

void ABioPawn::UpdateSkelWhenNotRendered ( )
{
	static UFunction* pFnUpdateSkelWhenNotRendered = NULL;

	if ( ! pFnUpdateSkelWhenNotRendered )
		pFnUpdateSkelWhenNotRendered = (UFunction*) UObject::GObjObjects()->Data[ 46389 ];

	ABioPawn_execUpdateSkelWhenNotRendered_Parms UpdateSkelWhenNotRendered_Parms;

	this->ProcessEvent ( pFnUpdateSkelWhenNotRendered, &UpdateSkelWhenNotRendered_Parms, NULL );
};

// Function SFXGame.BioPawn.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 46387 ];

	ABioPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioPawn.Resurrect
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fPercentOfHealthRegained       ( CPF_Parm )
// unsigned long                  bIsInstantaneous               ( CPF_Parm )

bool ABioPawn::Resurrect ( float fPercentOfHealthRegained, unsigned long bIsInstantaneous )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 43222 ];

	ABioPawn_execResurrect_Parms Resurrect_Parms;
	Resurrect_Parms.fPercentOfHealthRegained = fPercentOfHealthRegained;
	Resurrect_Parms.bIsInstantaneous = bIsInstantaneous;

	pFnResurrect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );

	pFnResurrect->FunctionFlags |= 0x400;

	return Resurrect_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.KillAttachedVFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::KillAttachedVFX ( )
{
	static UFunction* pFnKillAttachedVFX = NULL;

	if ( ! pFnKillAttachedVFX )
		pFnKillAttachedVFX = (UFunction*) UObject::GObjObjects()->Data[ 46384 ];

	ABioPawn_execKillAttachedVFX_Parms KillAttachedVFX_Parms;

	pFnKillAttachedVFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKillAttachedVFX, &KillAttachedVFX_Parms, NULL );

	pFnKillAttachedVFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.FadeLifeCrust
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::FadeLifeCrust ( )
{
	static UFunction* pFnFadeLifeCrust = NULL;

	if ( ! pFnFadeLifeCrust )
		pFnFadeLifeCrust = (UFunction*) UObject::GObjObjects()->Data[ 46383 ];

	ABioPawn_execFadeLifeCrust_Parms FadeLifeCrust_Parms;

	pFnFadeLifeCrust->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFadeLifeCrust, &FadeLifeCrust_Parms, NULL );

	pFnFadeLifeCrust->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetXLASTClassContextID
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPawn::GetXLASTClassContextID ( )
{
	static UFunction* pFnGetXLASTClassContextID = NULL;

	if ( ! pFnGetXLASTClassContextID )
		pFnGetXLASTClassContextID = (UFunction*) UObject::GObjObjects()->Data[ 46379 ];

	ABioPawn_execGetXLASTClassContextID_Parms GetXLASTClassContextID_Parms;

	this->ProcessEvent ( pFnGetXLASTClassContextID, &GetXLASTClassContextID_Parms, NULL );

	return GetXLASTClassContextID_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetRichPresence
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventSetRichPresence ( )
{
	static UFunction* pFnSetRichPresence = NULL;

	if ( ! pFnSetRichPresence )
		pFnSetRichPresence = (UFunction*) UObject::GObjObjects()->Data[ 46377 ];

	ABioPawn_eventSetRichPresence_Parms SetRichPresence_Parms;

	this->ProcessEvent ( pFnSetRichPresence, &SetRichPresence_Parms, NULL );
};

// Function SFXGame.BioPawn.Died
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ABioPawn::eventDied ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 46371 ];

	ABioPawn_eventDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.PostTeleport
// [0x00020002] 
// Parameters infos:
// class ATeleporter*             OutTeleporter                  ( CPF_Parm )

void ABioPawn::PostTeleport ( class ATeleporter* OutTeleporter )
{
	static UFunction* pFnPostTeleport = NULL;

	if ( ! pFnPostTeleport )
		pFnPostTeleport = (UFunction*) UObject::GObjObjects()->Data[ 46367 ];

	ABioPawn_execPostTeleport_Parms PostTeleport_Parms;
	PostTeleport_Parms.OutTeleporter = OutTeleporter;

	this->ProcessEvent ( pFnPostTeleport, &PostTeleport_Parms, NULL );
};

// Function SFXGame.BioPawn.PreTeleport
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATeleporter*             InTeleporter                   ( CPF_Parm )

bool ABioPawn::PreTeleport ( class ATeleporter* InTeleporter )
{
	static UFunction* pFnPreTeleport = NULL;

	if ( ! pFnPreTeleport )
		pFnPreTeleport = (UFunction*) UObject::GObjObjects()->Data[ 46362 ];

	ABioPawn_execPreTeleport_Parms PreTeleport_Parms;
	PreTeleport_Parms.InTeleporter = InTeleporter;

	this->ProcessEvent ( pFnPreTeleport, &PreTeleport_Parms, NULL );

	return PreTeleport_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.MoveWeaponToRightHand
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventMoveWeaponToRightHand ( )
{
	static UFunction* pFnMoveWeaponToRightHand = NULL;

	if ( ! pFnMoveWeaponToRightHand )
		pFnMoveWeaponToRightHand = (UFunction*) UObject::GObjObjects()->Data[ 46360 ];

	ABioPawn_eventMoveWeaponToRightHand_Parms MoveWeaponToRightHand_Parms;

	this->ProcessEvent ( pFnMoveWeaponToRightHand, &MoveWeaponToRightHand_Parms, NULL );
};

// Function SFXGame.BioPawn.MoveWeaponToLeftHand
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventMoveWeaponToLeftHand ( )
{
	static UFunction* pFnMoveWeaponToLeftHand = NULL;

	if ( ! pFnMoveWeaponToLeftHand )
		pFnMoveWeaponToLeftHand = (UFunction*) UObject::GObjObjects()->Data[ 46358 ];

	ABioPawn_eventMoveWeaponToLeftHand_Parms MoveWeaponToLeftHand_Parms;

	this->ProcessEvent ( pFnMoveWeaponToLeftHand, &MoveWeaponToLeftHand_Parms, NULL );
};

// Function SFXGame.BioPawn.GetFaceFXAudioComponent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAudioComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class UAudioComponent* ABioPawn::eventGetFaceFXAudioComponent ( )
{
	static UFunction* pFnGetFaceFXAudioComponent = NULL;

	if ( ! pFnGetFaceFXAudioComponent )
		pFnGetFaceFXAudioComponent = (UFunction*) UObject::GObjObjects()->Data[ 46355 ];

	ABioPawn_eventGetFaceFXAudioComponent_Parms GetFaceFXAudioComponent_Parms;

	this->ProcessEvent ( pFnGetFaceFXAudioComponent, &GetFaceFXAudioComponent_Parms, NULL );

	return GetFaceFXAudioComponent_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.KillSoundSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::KillSoundSet ( )
{
	static UFunction* pFnKillSoundSet = NULL;

	if ( ! pFnKillSoundSet )
		pFnKillSoundSet = (UFunction*) UObject::GObjObjects()->Data[ 46354 ];

	ABioPawn_execKillSoundSet_Parms KillSoundSet_Parms;

	pFnKillSoundSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKillSoundSet, &KillSoundSet_Parms, NULL );

	pFnKillSoundSet->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.PlaySoundSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eType                          ( CPF_Parm )

bool ABioPawn::PlaySoundSet ( unsigned char eType )
{
	static UFunction* pFnPlaySoundSet = NULL;

	if ( ! pFnPlaySoundSet )
		pFnPlaySoundSet = (UFunction*) UObject::GObjObjects()->Data[ 46351 ];

	ABioPawn_execPlaySoundSet_Parms PlaySoundSet_Parms;
	PlaySoundSet_Parms.eType = eType;

	pFnPlaySoundSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaySoundSet, &PlaySoundSet_Parms, NULL );

	pFnPlaySoundSet->FunctionFlags |= 0x400;

	return PlaySoundSet_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.gibbedBy
// [0x00020000] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioPawn::gibbedBy ( class AActor* Other )
{
	static UFunction* pFngibbedBy = NULL;

	if ( ! pFngibbedBy )
		pFngibbedBy = (UFunction*) UObject::GObjObjects()->Data[ 46349 ];

	ABioPawn_execgibbedBy_Parms gibbedBy_Parms;
	gibbedBy_Parms.Other = Other;

	this->ProcessEvent ( pFngibbedBy, &gibbedBy_Parms, NULL );
};

// Function SFXGame.BioPawn.OnTeleportArrived
// [0x00020002] 
// Parameters infos:

void ABioPawn::OnTeleportArrived ( )
{
	static UFunction* pFnOnTeleportArrived = NULL;

	if ( ! pFnOnTeleportArrived )
		pFnOnTeleportArrived = (UFunction*) UObject::GObjObjects()->Data[ 46347 ];

	ABioPawn_execOnTeleportArrived_Parms OnTeleportArrived_Parms;

	this->ProcessEvent ( pFnOnTeleportArrived, &OnTeleportArrived_Parms, NULL );
};

// Function SFXGame.BioPawn.ReleasePowersCamera
// [0x00020002] 
// Parameters infos:

void ABioPawn::ReleasePowersCamera ( )
{
	static UFunction* pFnReleasePowersCamera = NULL;

	if ( ! pFnReleasePowersCamera )
		pFnReleasePowersCamera = (UFunction*) UObject::GObjObjects()->Data[ 46345 ];

	ABioPawn_execReleasePowersCamera_Parms ReleasePowersCamera_Parms;

	this->ProcessEvent ( pFnReleasePowersCamera, &ReleasePowersCamera_Parms, NULL );
};

// Function SFXGame.BioPawn.RigidBodyCollision
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioPawn::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 46337 ];

	ABioPawn_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x28 );
};

// Function SFXGame.BioPawn.OnTeleport
// [0x00020102] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void ABioPawn::OnTeleport ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleport = NULL;

	if ( ! pFnOnTeleport )
		pFnOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 46328 ];

	ABioPawn_execOnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleport, &OnTeleport_Parms, NULL );
};

// Function SFXGame.BioPawn.PlayFootStepSound
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void ABioPawn::eventPlayFootStepSound ( int FootDown )
{
	static UFunction* pFnPlayFootStepSound = NULL;

	if ( ! pFnPlayFootStepSound )
		pFnPlayFootStepSound = (UFunction*) UObject::GObjObjects()->Data[ 46326 ];

	ABioPawn_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;

	pFnPlayFootStepSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL );

	pFnPlayFootStepSound->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.setHeadFaceFX
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void ABioPawn::eventsetHeadFaceFX ( )
{
	static UFunction* pFnsetHeadFaceFX = NULL;

	if ( ! pFnsetHeadFaceFX )
		pFnsetHeadFaceFX = (UFunction*) UObject::GObjObjects()->Data[ 46325 ];

	ABioPawn_eventsetHeadFaceFX_Parms setHeadFaceFX_Parms;

	pFnsetHeadFaceFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsetHeadFaceFX, &setHeadFaceFX_Parms, NULL );

	pFnsetHeadFaceFX->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.OnPlayFaceFXAnim
// [0x00020102] 
// Parameters infos:
// class USeqAct_PlayFaceFXAnim*  inAction                       ( CPF_Parm )

void ABioPawn::OnPlayFaceFXAnim ( class USeqAct_PlayFaceFXAnim* inAction )
{
	static UFunction* pFnOnPlayFaceFXAnim = NULL;

	if ( ! pFnOnPlayFaceFXAnim )
		pFnOnPlayFaceFXAnim = (UFunction*) UObject::GObjObjects()->Data[ 46322 ];

	ABioPawn_execOnPlayFaceFXAnim_Parms OnPlayFaceFXAnim_Parms;
	OnPlayFaceFXAnim_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnPlayFaceFXAnim, &OnPlayFaceFXAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.SetScale
// [0x00020002] 
// Parameters infos:
// float                          fScale                         ( CPF_Parm )

void ABioPawn::SetScale ( float fScale )
{
	static UFunction* pFnSetScale = NULL;

	if ( ! pFnSetScale )
		pFnSetScale = (UFunction*) UObject::GObjObjects()->Data[ 46320 ];

	ABioPawn_execSetScale_Parms SetScale_Parms;
	SetScale_Parms.fScale = fScale;

	this->ProcessEvent ( pFnSetScale, &SetScale_Parms, NULL );
};

// Function SFXGame.BioPawn.OnEffectsMaterial
// [0x00020002] 
// Parameters infos:
// class UBioSeqAct_EffectsMaterial* Action                         ( CPF_Parm )

void ABioPawn::OnEffectsMaterial ( class UBioSeqAct_EffectsMaterial* Action )
{
	static UFunction* pFnOnEffectsMaterial = NULL;

	if ( ! pFnOnEffectsMaterial )
		pFnOnEffectsMaterial = (UFunction*) UObject::GObjObjects()->Data[ 46318 ];

	ABioPawn_execOnEffectsMaterial_Parms OnEffectsMaterial_Parms;
	OnEffectsMaterial_Parms.Action = Action;

	this->ProcessEvent ( pFnOnEffectsMaterial, &OnEffectsMaterial_Parms, NULL );
};

// Function SFXGame.BioPawn.ReleasePower
// [0x00020002] 
// Parameters infos:

void ABioPawn::ReleasePower ( )
{
	static UFunction* pFnReleasePower = NULL;

	if ( ! pFnReleasePower )
		pFnReleasePower = (UFunction*) UObject::GObjObjects()->Data[ 46317 ];

	ABioPawn_execReleasePower_Parms ReleasePower_Parms;

	this->ProcessEvent ( pFnReleasePower, &ReleasePower_Parms, NULL );
};

// Function SFXGame.BioPawn.LeaveCover
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventLeaveCover ( )
{
	static UFunction* pFnLeaveCover = NULL;

	if ( ! pFnLeaveCover )
		pFnLeaveCover = (UFunction*) UObject::GObjObjects()->Data[ 46314 ];

	ABioPawn_eventLeaveCover_Parms LeaveCover_Parms;

	this->ProcessEvent ( pFnLeaveCover, &LeaveCover_Parms, NULL );
};

// Function SFXGame.BioPawn.IsPoppingUp
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsPoppingUp ( )
{
	static UFunction* pFnIsPoppingUp = NULL;

	if ( ! pFnIsPoppingUp )
		pFnIsPoppingUp = (UFunction*) UObject::GObjObjects()->Data[ 46312 ];

	ABioPawn_execIsPoppingUp_Parms IsPoppingUp_Parms;

	this->ProcessEvent ( pFnIsPoppingUp, &IsPoppingUp_Parms, NULL );

	return IsPoppingUp_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsPeeking
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsPeeking ( )
{
	static UFunction* pFnIsPeeking = NULL;

	if ( ! pFnIsPeeking )
		pFnIsPeeking = (UFunction*) UObject::GObjObjects()->Data[ 46310 ];

	ABioPawn_execIsPeeking_Parms IsPeeking_Parms;

	this->ProcessEvent ( pFnIsPeeking, &IsPeeking_Parms, NULL );

	return IsPeeking_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsBlindFiring
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsBlindFiring ( )
{
	static UFunction* pFnIsBlindFiring = NULL;

	if ( ! pFnIsBlindFiring )
		pFnIsBlindFiring = (UFunction*) UObject::GObjObjects()->Data[ 46308 ];

	ABioPawn_execIsBlindFiring_Parms IsBlindFiring_Parms;

	this->ProcessEvent ( pFnIsBlindFiring, &IsBlindFiring_Parms, NULL );

	return IsBlindFiring_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsLeaning
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsLeaning ( )
{
	static UFunction* pFnIsLeaning = NULL;

	if ( ! pFnIsLeaning )
		pFnIsLeaning = (UFunction*) UObject::GObjObjects()->Data[ 46305 ];

	ABioPawn_execIsLeaning_Parms IsLeaning_Parms;

	this->ProcessEvent ( pFnIsLeaning, &IsLeaning_Parms, NULL );

	return IsLeaning_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetCoverLeanBias
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  NewLeanBias                    ( CPF_Parm )

void ABioPawn::SetCoverLeanBias ( unsigned char NewLeanBias )
{
	static UFunction* pFnSetCoverLeanBias = NULL;

	if ( ! pFnSetCoverLeanBias )
		pFnSetCoverLeanBias = (UFunction*) UObject::GObjObjects()->Data[ 46297 ];

	ABioPawn_execSetCoverLeanBias_Parms SetCoverLeanBias_Parms;
	SetCoverLeanBias_Parms.NewLeanBias = NewLeanBias;

	this->ProcessEvent ( pFnSetCoverLeanBias, &SetCoverLeanBias_Parms, NULL );
};

// Function SFXGame.BioPawn.SetCoverAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  NewCoverAction                 ( CPF_Parm )

void ABioPawn::SetCoverAction ( unsigned char NewCoverAction )
{
	static UFunction* pFnSetCoverAction = NULL;

	if ( ! pFnSetCoverAction )
		pFnSetCoverAction = (UFunction*) UObject::GObjObjects()->Data[ 46292 ];

	ABioPawn_execSetCoverAction_Parms SetCoverAction_Parms;
	SetCoverAction_Parms.NewCoverAction = NewCoverAction;

	pFnSetCoverAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCoverAction, &SetCoverAction_Parms, NULL );

	pFnSetCoverAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.NotifyFinishedCoverAlign
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventNotifyFinishedCoverAlign ( )
{
	static UFunction* pFnNotifyFinishedCoverAlign = NULL;

	if ( ! pFnNotifyFinishedCoverAlign )
		pFnNotifyFinishedCoverAlign = (UFunction*) UObject::GObjObjects()->Data[ 46300 ];

	ABioPawn_eventNotifyFinishedCoverAlign_Parms NotifyFinishedCoverAlign_Parms;

	this->ProcessEvent ( pFnNotifyFinishedCoverAlign, &NotifyFinishedCoverAlign_Parms, NULL );
};

// Function SFXGame.BioPawn.OnExitedAimback
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bReturningToCover              ( CPF_Parm )

void ABioPawn::OnExitedAimback ( unsigned long bReturningToCover )
{
	static UFunction* pFnOnExitedAimback = NULL;

	if ( ! pFnOnExitedAimback )
		pFnOnExitedAimback = (UFunction*) UObject::GObjObjects()->Data[ 46293 ];

	ABioPawn_execOnExitedAimback_Parms OnExitedAimback_Parms;
	OnExitedAimback_Parms.bReturningToCover = bReturningToCover;

	this->ProcessEvent ( pFnOnExitedAimback, &OnExitedAimback_Parms, NULL );
};

// Function SFXGame.BioPawn.OnEnteredAimback
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ABioPawn::OnEnteredAimback ( )
{
	static UFunction* pFnOnEnteredAimback = NULL;

	if ( ! pFnOnEnteredAimback )
		pFnOnEnteredAimback = (UFunction*) UObject::GObjObjects()->Data[ 46289 ];

	ABioPawn_execOnEnteredAimback_Parms OnEnteredAimback_Parms;

	this->ProcessEvent ( pFnOnEnteredAimback, &OnEnteredAimback_Parms, NULL );
};

// Function SFXGame.BioPawn.PlayerAcquiredCover
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventPlayerAcquiredCover ( )
{
	static UFunction* pFnPlayerAcquiredCover = NULL;

	if ( ! pFnPlayerAcquiredCover )
		pFnPlayerAcquiredCover = (UFunction*) UObject::GObjObjects()->Data[ 46288 ];

	ABioPawn_eventPlayerAcquiredCover_Parms PlayerAcquiredCover_Parms;

	this->ProcessEvent ( pFnPlayerAcquiredCover, &PlayerAcquiredCover_Parms, NULL );
};

// Function SFXGame.BioPawn.DoesCoverStateAllowFiring
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::DoesCoverStateAllowFiring ( )
{
	static UFunction* pFnDoesCoverStateAllowFiring = NULL;

	if ( ! pFnDoesCoverStateAllowFiring )
		pFnDoesCoverStateAllowFiring = (UFunction*) UObject::GObjObjects()->Data[ 46286 ];

	ABioPawn_execDoesCoverStateAllowFiring_Parms DoesCoverStateAllowFiring_Parms;

	pFnDoesCoverStateAllowFiring->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoesCoverStateAllowFiring, &DoesCoverStateAllowFiring_Parms, NULL );

	pFnDoesCoverStateAllowFiring->FunctionFlags |= 0x400;

	return DoesCoverStateAllowFiring_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CanDoCoverAction
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  CovAction                      ( CPF_Parm )
// unsigned long                  bPrecise                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bTestCamera                    ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::CanDoCoverAction ( unsigned char CovAction, unsigned long bPrecise, unsigned long bTestCamera )
{
	static UFunction* pFnCanDoCoverAction = NULL;

	if ( ! pFnCanDoCoverAction )
		pFnCanDoCoverAction = (UFunction*) UObject::GObjObjects()->Data[ 46281 ];

	ABioPawn_execCanDoCoverAction_Parms CanDoCoverAction_Parms;
	CanDoCoverAction_Parms.CovAction = CovAction;
	CanDoCoverAction_Parms.bPrecise = bPrecise;
	CanDoCoverAction_Parms.bTestCamera = bTestCamera;

	pFnCanDoCoverAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanDoCoverAction, &CanDoCoverAction_Parms, NULL );

	pFnCanDoCoverAction->FunctionFlags |= 0x400;

	return CanDoCoverAction_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetDefaultCoverAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioPawn::GetDefaultCoverAction ( )
{
	static UFunction* pFnGetDefaultCoverAction = NULL;

	if ( ! pFnGetDefaultCoverAction )
		pFnGetDefaultCoverAction = (UFunction*) UObject::GObjObjects()->Data[ 46279 ];

	ABioPawn_execGetDefaultCoverAction_Parms GetDefaultCoverAction_Parms;

	pFnGetDefaultCoverAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultCoverAction, &GetDefaultCoverAction_Parms, NULL );

	pFnGetDefaultCoverAction->FunctionFlags |= 0x400;

	return GetDefaultCoverAction_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsInAnimatedLeanTransition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsInAnimatedLeanTransition ( )
{
	static UFunction* pFnIsInAnimatedLeanTransition = NULL;

	if ( ! pFnIsInAnimatedLeanTransition )
		pFnIsInAnimatedLeanTransition = (UFunction*) UObject::GObjObjects()->Data[ 46277 ];

	ABioPawn_execIsInAnimatedLeanTransition_Parms IsInAnimatedLeanTransition_Parms;

	pFnIsInAnimatedLeanTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInAnimatedLeanTransition, &IsInAnimatedLeanTransition_Parms, NULL );

	pFnIsInAnimatedLeanTransition->FunctionFlags |= 0x400;

	return IsInAnimatedLeanTransition_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsInCoverLeaning
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsInCoverLeaning ( )
{
	static UFunction* pFnIsInCoverLeaning = NULL;

	if ( ! pFnIsInCoverLeaning )
		pFnIsInCoverLeaning = (UFunction*) UObject::GObjObjects()->Data[ 45389 ];

	ABioPawn_execIsInCoverLeaning_Parms IsInCoverLeaning_Parms;

	pFnIsInCoverLeaning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCoverLeaning, &IsInCoverLeaning_Parms, NULL );

	pFnIsInCoverLeaning->FunctionFlags |= 0x400;

	return IsInCoverLeaning_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetPawnViewLocation
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioPawn::GetPawnViewLocation ( )
{
	static UFunction* pFnGetPawnViewLocation = NULL;

	if ( ! pFnGetPawnViewLocation )
		pFnGetPawnViewLocation = (UFunction*) UObject::GObjObjects()->Data[ 46275 ];

	ABioPawn_execGetPawnViewLocation_Parms GetPawnViewLocation_Parms;

	pFnGetPawnViewLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawnViewLocation, &GetPawnViewLocation_Parms, NULL );

	pFnGetPawnViewLocation->FunctionFlags |= 0x400;

	return GetPawnViewLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsInCombatActionState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsInCombatActionState ( )
{
	static UFunction* pFnIsInCombatActionState = NULL;

	if ( ! pFnIsInCombatActionState )
		pFnIsInCombatActionState = (UFunction*) UObject::GObjObjects()->Data[ 44391 ];

	ABioPawn_execIsInCombatActionState_Parms IsInCombatActionState_Parms;

	pFnIsInCombatActionState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCombatActionState, &IsInCombatActionState_Parms, NULL );

	pFnIsInCombatActionState->FunctionFlags |= 0x400;

	return IsInCombatActionState_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsThrowingGrenade
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsThrowingGrenade ( )
{
	static UFunction* pFnIsThrowingGrenade = NULL;

	if ( ! pFnIsThrowingGrenade )
		pFnIsThrowingGrenade = (UFunction*) UObject::GObjObjects()->Data[ 46273 ];

	ABioPawn_execIsThrowingGrenade_Parms IsThrowingGrenade_Parms;

	pFnIsThrowingGrenade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsThrowingGrenade, &IsThrowingGrenade_Parms, NULL );

	pFnIsThrowingGrenade->FunctionFlags |= 0x400;

	return IsThrowingGrenade_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsUsingPower
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIgnoreWeaponPowers            ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::IsUsingPower ( unsigned long bIgnoreWeaponPowers )
{
	static UFunction* pFnIsUsingPower = NULL;

	if ( ! pFnIsUsingPower )
		pFnIsUsingPower = (UFunction*) UObject::GObjObjects()->Data[ 43786 ];

	ABioPawn_execIsUsingPower_Parms IsUsingPower_Parms;
	IsUsingPower_Parms.bIgnoreWeaponPowers = bIgnoreWeaponPowers;

	pFnIsUsingPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsUsingPower, &IsUsingPower_Parms, NULL );

	pFnIsUsingPower->FunctionFlags |= 0x400;

	return IsUsingPower_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsSwitchingWeapons
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsSwitchingWeapons ( )
{
	static UFunction* pFnIsSwitchingWeapons = NULL;

	if ( ! pFnIsSwitchingWeapons )
		pFnIsSwitchingWeapons = (UFunction*) UObject::GObjObjects()->Data[ 46270 ];

	ABioPawn_execIsSwitchingWeapons_Parms IsSwitchingWeapons_Parms;

	pFnIsSwitchingWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSwitchingWeapons, &IsSwitchingWeapons_Parms, NULL );

	pFnIsSwitchingWeapons->FunctionFlags |= 0x400;

	return IsSwitchingWeapons_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsInCover
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsInCover ( )
{
	static UFunction* pFnIsInCover = NULL;

	if ( ! pFnIsInCover )
		pFnIsInCover = (UFunction*) UObject::GObjObjects()->Data[ 43186 ];

	ABioPawn_execIsInCover_Parms IsInCover_Parms;

	pFnIsInCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCover, &IsInCover_Parms, NULL );

	pFnIsInCover->FunctionFlags |= 0x400;

	return IsInCover_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.DecreaseWeaponPowerCount
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::DecreaseWeaponPowerCount ( )
{
	static UFunction* pFnDecreaseWeaponPowerCount = NULL;

	if ( ! pFnDecreaseWeaponPowerCount )
		pFnDecreaseWeaponPowerCount = (UFunction*) UObject::GObjObjects()->Data[ 46269 ];

	ABioPawn_execDecreaseWeaponPowerCount_Parms DecreaseWeaponPowerCount_Parms;

	pFnDecreaseWeaponPowerCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecreaseWeaponPowerCount, &DecreaseWeaponPowerCount_Parms, NULL );

	pFnDecreaseWeaponPowerCount->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetWeaponPowerName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ABioPawn::GetWeaponPowerName ( )
{
	static UFunction* pFnGetWeaponPowerName = NULL;

	if ( ! pFnGetWeaponPowerName )
		pFnGetWeaponPowerName = (UFunction*) UObject::GObjObjects()->Data[ 46267 ];

	ABioPawn_execGetWeaponPowerName_Parms GetWeaponPowerName_Parms;

	pFnGetWeaponPowerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponPowerName, &GetWeaponPowerName_Parms, NULL );

	pFnGetWeaponPowerName->FunctionFlags |= 0x400;

	return GetWeaponPowerName_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsPastRightEdgeSlot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsPastRightEdgeSlot ( )
{
	static UFunction* pFnIsPastRightEdgeSlot = NULL;

	if ( ! pFnIsPastRightEdgeSlot )
		pFnIsPastRightEdgeSlot = (UFunction*) UObject::GObjObjects()->Data[ 46265 ];

	ABioPawn_execIsPastRightEdgeSlot_Parms IsPastRightEdgeSlot_Parms;

	pFnIsPastRightEdgeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPastRightEdgeSlot, &IsPastRightEdgeSlot_Parms, NULL );

	pFnIsPastRightEdgeSlot->FunctionFlags |= 0x400;

	return IsPastRightEdgeSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsPastLeftEdgeSlot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsPastLeftEdgeSlot ( )
{
	static UFunction* pFnIsPastLeftEdgeSlot = NULL;

	if ( ! pFnIsPastLeftEdgeSlot )
		pFnIsPastLeftEdgeSlot = (UFunction*) UObject::GObjObjects()->Data[ 46263 ];

	ABioPawn_execIsPastLeftEdgeSlot_Parms IsPastLeftEdgeSlot_Parms;

	pFnIsPastLeftEdgeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPastLeftEdgeSlot, &IsPastLeftEdgeSlot_Parms, NULL );

	pFnIsPastLeftEdgeSlot->FunctionFlags |= 0x400;

	return IsPastLeftEdgeSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsAtRightEdgeSlot
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Tolerance                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bMustLean                      ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::IsAtRightEdgeSlot ( float Tolerance, unsigned long bMustLean )
{
	static UFunction* pFnIsAtRightEdgeSlot = NULL;

	if ( ! pFnIsAtRightEdgeSlot )
		pFnIsAtRightEdgeSlot = (UFunction*) UObject::GObjObjects()->Data[ 46259 ];

	ABioPawn_execIsAtRightEdgeSlot_Parms IsAtRightEdgeSlot_Parms;
	IsAtRightEdgeSlot_Parms.Tolerance = Tolerance;
	IsAtRightEdgeSlot_Parms.bMustLean = bMustLean;

	pFnIsAtRightEdgeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAtRightEdgeSlot, &IsAtRightEdgeSlot_Parms, NULL );

	pFnIsAtRightEdgeSlot->FunctionFlags |= 0x400;

	return IsAtRightEdgeSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsAtLeftEdgeSlot
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Tolerance                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bMustLean                      ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::IsAtLeftEdgeSlot ( float Tolerance, unsigned long bMustLean )
{
	static UFunction* pFnIsAtLeftEdgeSlot = NULL;

	if ( ! pFnIsAtLeftEdgeSlot )
		pFnIsAtLeftEdgeSlot = (UFunction*) UObject::GObjObjects()->Data[ 46255 ];

	ABioPawn_execIsAtLeftEdgeSlot_Parms IsAtLeftEdgeSlot_Parms;
	IsAtLeftEdgeSlot_Parms.Tolerance = Tolerance;
	IsAtLeftEdgeSlot_Parms.bMustLean = bMustLean;

	pFnIsAtLeftEdgeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAtLeftEdgeSlot, &IsAtLeftEdgeSlot_Parms, NULL );

	pFnIsAtLeftEdgeSlot->FunctionFlags |= 0x400;

	return IsAtLeftEdgeSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.RestoreCollisionFromCover
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::RestoreCollisionFromCover ( )
{
	static UFunction* pFnRestoreCollisionFromCover = NULL;

	if ( ! pFnRestoreCollisionFromCover )
		pFnRestoreCollisionFromCover = (UFunction*) UObject::GObjObjects()->Data[ 46254 ];

	ABioPawn_execRestoreCollisionFromCover_Parms RestoreCollisionFromCover_Parms;

	pFnRestoreCollisionFromCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreCollisionFromCover, &RestoreCollisionFromCover_Parms, NULL );

	pFnRestoreCollisionFromCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.ShrinkCollisionForCover
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::ShrinkCollisionForCover ( )
{
	static UFunction* pFnShrinkCollisionForCover = NULL;

	if ( ! pFnShrinkCollisionForCover )
		pFnShrinkCollisionForCover = (UFunction*) UObject::GObjObjects()->Data[ 46253 ];

	ABioPawn_execShrinkCollisionForCover_Parms ShrinkCollisionForCover_Parms;

	pFnShrinkCollisionForCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShrinkCollisionForCover, &ShrinkCollisionForCover_Parms, NULL );

	pFnShrinkCollisionForCover->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetAnimatedTransitionPending
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::SetAnimatedTransitionPending ( )
{
	static UFunction* pFnSetAnimatedTransitionPending = NULL;

	if ( ! pFnSetAnimatedTransitionPending )
		pFnSetAnimatedTransitionPending = (UFunction*) UObject::GObjObjects()->Data[ 46252 ];

	ABioPawn_execSetAnimatedTransitionPending_Parms SetAnimatedTransitionPending_Parms;

	pFnSetAnimatedTransitionPending->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAnimatedTransitionPending, &SetAnimatedTransitionPending_Parms, NULL );

	pFnSetAnimatedTransitionPending->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.IsAnimatedTransitionPending
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsAnimatedTransitionPending ( )
{
	static UFunction* pFnIsAnimatedTransitionPending = NULL;

	if ( ! pFnIsAnimatedTransitionPending )
		pFnIsAnimatedTransitionPending = (UFunction*) UObject::GObjObjects()->Data[ 46250 ];

	ABioPawn_execIsAnimatedTransitionPending_Parms IsAnimatedTransitionPending_Parms;

	pFnIsAnimatedTransitionPending->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAnimatedTransitionPending, &IsAnimatedTransitionPending_Parms, NULL );

	pFnIsAnimatedTransitionPending->FunctionFlags |= 0x400;

	return IsAnimatedTransitionPending_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetAimNodeLocation
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  AimNode                        ( CPF_Parm )
// unsigned long                  bLogError                      ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 AimLocation                    ( CPF_Parm | CPF_OutParm )

bool ABioPawn::GetAimNodeLocation ( unsigned char AimNode, unsigned long bLogError, struct FVector* AimLocation )
{
	static UFunction* pFnGetAimNodeLocation = NULL;

	if ( ! pFnGetAimNodeLocation )
		pFnGetAimNodeLocation = (UFunction*) UObject::GObjObjects()->Data[ 46245 ];

	ABioPawn_execGetAimNodeLocation_Parms GetAimNodeLocation_Parms;
	GetAimNodeLocation_Parms.AimNode = AimNode;
	GetAimNodeLocation_Parms.bLogError = bLogError;

	pFnGetAimNodeLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAimNodeLocation, &GetAimNodeLocation_Parms, NULL );

	pFnGetAimNodeLocation->FunctionFlags |= 0x400;

	if ( AimLocation )
		memcpy ( AimLocation, &GetAimNodeLocation_Parms.AimLocation, 0xC );

	return GetAimNodeLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.EndAnimatedTransition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::EndAnimatedTransition ( )
{
	static UFunction* pFnEndAnimatedTransition = NULL;

	if ( ! pFnEndAnimatedTransition )
		pFnEndAnimatedTransition = (UFunction*) UObject::GObjObjects()->Data[ 46244 ];

	ABioPawn_execEndAnimatedTransition_Parms EndAnimatedTransition_Parms;

	pFnEndAnimatedTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndAnimatedTransition, &EndAnimatedTransition_Parms, NULL );

	pFnEndAnimatedTransition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.BeginAnimatedTransition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::BeginAnimatedTransition ( )
{
	static UFunction* pFnBeginAnimatedTransition = NULL;

	if ( ! pFnBeginAnimatedTransition )
		pFnBeginAnimatedTransition = (UFunction*) UObject::GObjObjects()->Data[ 46243 ];

	ABioPawn_execBeginAnimatedTransition_Parms BeginAnimatedTransition_Parms;

	pFnBeginAnimatedTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBeginAnimatedTransition, &BeginAnimatedTransition_Parms, NULL );

	pFnBeginAnimatedTransition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.IsInAnimatedTransition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsInAnimatedTransition ( )
{
	static UFunction* pFnIsInAnimatedTransition = NULL;

	if ( ! pFnIsInAnimatedTransition )
		pFnIsInAnimatedTransition = (UFunction*) UObject::GObjObjects()->Data[ 46241 ];

	ABioPawn_execIsInAnimatedTransition_Parms IsInAnimatedTransition_Parms;

	pFnIsInAnimatedTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInAnimatedTransition, &IsInAnimatedTransition_Parms, NULL );

	pFnIsInAnimatedTransition->FunctionFlags |= 0x400;

	return IsInAnimatedTransition_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CanMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::eventCanMount ( )
{
	static UFunction* pFnCanMount = NULL;

	if ( ! pFnCanMount )
		pFnCanMount = (UFunction*) UObject::GObjObjects()->Data[ 46236 ];

	ABioPawn_eventCanMount_Parms CanMount_Parms;

	this->ProcessEvent ( pFnCanMount, &CanMount_Parms, NULL );

	return CanMount_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.FactionRelationship
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oOtherPawn                     ( CPF_Parm )

unsigned char ABioPawn::FactionRelationship ( class APawn* oOtherPawn )
{
	static UFunction* pFnFactionRelationship = NULL;

	if ( ! pFnFactionRelationship )
		pFnFactionRelationship = (UFunction*) UObject::GObjObjects()->Data[ 45450 ];

	ABioPawn_execFactionRelationship_Parms FactionRelationship_Parms;
	FactionRelationship_Parms.oOtherPawn = oOtherPawn;

	pFnFactionRelationship->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFactionRelationship, &FactionRelationship_Parms, NULL );

	pFnFactionRelationship->FunctionFlags |= 0x400;

	return FactionRelationship_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GenerateTakeDamageEvent
// [0x00020002] 
// Parameters infos:
// float                          fPreMitigationDamage           ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ABioPawn::GenerateTakeDamageEvent ( float fPreMitigationDamage, float Damage, class AController* InstigatedBy, class UClass* DamageType )
{
	static UFunction* pFnGenerateTakeDamageEvent = NULL;

	if ( ! pFnGenerateTakeDamageEvent )
		pFnGenerateTakeDamageEvent = (UFunction*) UObject::GObjObjects()->Data[ 46228 ];

	ABioPawn_execGenerateTakeDamageEvent_Parms GenerateTakeDamageEvent_Parms;
	GenerateTakeDamageEvent_Parms.fPreMitigationDamage = fPreMitigationDamage;
	GenerateTakeDamageEvent_Parms.Damage = Damage;
	GenerateTakeDamageEvent_Parms.InstigatedBy = InstigatedBy;
	GenerateTakeDamageEvent_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnGenerateTakeDamageEvent, &GenerateTakeDamageEvent_Parms, NULL );
};

// Function SFXGame.BioPawn.DoReachedWaypointEvent
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPathPoint*           oPoint                         ( CPF_Parm )

bool ABioPawn::DoReachedWaypointEvent ( class ABioPathPoint* oPoint )
{
	static UFunction* pFnDoReachedWaypointEvent = NULL;

	if ( ! pFnDoReachedWaypointEvent )
		pFnDoReachedWaypointEvent = (UFunction*) UObject::GObjObjects()->Data[ 44019 ];

	ABioPawn_execDoReachedWaypointEvent_Parms DoReachedWaypointEvent_Parms;
	DoReachedWaypointEvent_Parms.oPoint = oPoint;

	this->ProcessEvent ( pFnDoReachedWaypointEvent, &DoReachedWaypointEvent_Parms, NULL );

	return DoReachedWaypointEvent_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UInterpGroup*            InInterpGroup                  ( CPF_Parm )

void ABioPawn::eventFinishAnimControl ( class UInterpGroup* InInterpGroup )
{
	static UFunction* pFnFinishAnimControl = NULL;

	if ( ! pFnFinishAnimControl )
		pFnFinishAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 46220 ];

	ABioPawn_eventFinishAnimControl_Parms FinishAnimControl_Parms;
	FinishAnimControl_Parms.InInterpGroup = InInterpGroup;

	this->ProcessEvent ( pFnFinishAnimControl, &FinishAnimControl_Parms, NULL );
};

// Function SFXGame.BioPawn.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   SlotName                       ( CPF_Parm )
// int                            ChannelIndex                   ( CPF_Parm )
// struct FName                   InAnimSeqName                  ( CPF_Parm )
// float                          InPosition                     ( CPF_Parm )
// unsigned long                  bFireNotifies                  ( CPF_Parm )
// unsigned long                  bLooping                       ( CPF_Parm )

void ABioPawn::eventSetAnimPosition ( struct FName SlotName, int ChannelIndex, struct FName InAnimSeqName, float InPosition, unsigned long bFireNotifies, unsigned long bLooping )
{
	static UFunction* pFnSetAnimPosition = NULL;

	if ( ! pFnSetAnimPosition )
		pFnSetAnimPosition = (UFunction*) UObject::GObjObjects()->Data[ 46212 ];

	ABioPawn_eventSetAnimPosition_Parms SetAnimPosition_Parms;
	memcpy ( &SetAnimPosition_Parms.SlotName, &SlotName, 0x8 );
	SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy ( &SetAnimPosition_Parms.InAnimSeqName, &InAnimSeqName, 0x8 );
	SetAnimPosition_Parms.InPosition = InPosition;
	SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	SetAnimPosition_Parms.bLooping = bLooping;

	this->ProcessEvent ( pFnSetAnimPosition, &SetAnimPosition_Parms, NULL );
};

// Function SFXGame.BioPawn.BeginAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UInterpGroup*            InInterpGroup                  ( CPF_Parm )

void ABioPawn::eventBeginAnimControl ( class UInterpGroup* InInterpGroup )
{
	static UFunction* pFnBeginAnimControl = NULL;

	if ( ! pFnBeginAnimControl )
		pFnBeginAnimControl = (UFunction*) UObject::GObjObjects()->Data[ 46206 ];

	ABioPawn_eventBeginAnimControl_Parms BeginAnimControl_Parms;
	BeginAnimControl_Parms.InInterpGroup = InInterpGroup;

	this->ProcessEvent ( pFnBeginAnimControl, &BeginAnimControl_Parms, NULL );
};

// Function SFXGame.BioPawn.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void ABioPawn::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 46203 ];

	ABioPawn_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function SFXGame.BioPawn.ClearUnregisteredAnimsets
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::ClearUnregisteredAnimsets ( )
{
	static UFunction* pFnClearUnregisteredAnimsets = NULL;

	if ( ! pFnClearUnregisteredAnimsets )
		pFnClearUnregisteredAnimsets = (UFunction*) UObject::GObjObjects()->Data[ 46202 ];

	ABioPawn_execClearUnregisteredAnimsets_Parms ClearUnregisteredAnimsets_Parms;

	pFnClearUnregisteredAnimsets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearUnregisteredAnimsets, &ClearUnregisteredAnimsets_Parms, NULL );

	pFnClearUnregisteredAnimsets->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.ClearRegisteredCustomAnimsets
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmSetGroupName                 ( CPF_Parm )

void ABioPawn::ClearRegisteredCustomAnimsets ( struct FName nmSetGroupName )
{
	static UFunction* pFnClearRegisteredCustomAnimsets = NULL;

	if ( ! pFnClearRegisteredCustomAnimsets )
		pFnClearRegisteredCustomAnimsets = (UFunction*) UObject::GObjObjects()->Data[ 46200 ];

	ABioPawn_execClearRegisteredCustomAnimsets_Parms ClearRegisteredCustomAnimsets_Parms;
	memcpy ( &ClearRegisteredCustomAnimsets_Parms.nmSetGroupName, &nmSetGroupName, 0x8 );

	pFnClearRegisteredCustomAnimsets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearRegisteredCustomAnimsets, &ClearRegisteredCustomAnimsets_Parms, NULL );

	pFnClearRegisteredCustomAnimsets->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.RegisterCustomAnimset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmSetGroupName                 ( CPF_Parm )
// class UAnimSet*                oAnim                          ( CPF_Parm )

void ABioPawn::RegisterCustomAnimset ( struct FName nmSetGroupName, class UAnimSet* oAnim )
{
	static UFunction* pFnRegisterCustomAnimset = NULL;

	if ( ! pFnRegisterCustomAnimset )
		pFnRegisterCustomAnimset = (UFunction*) UObject::GObjObjects()->Data[ 46197 ];

	ABioPawn_execRegisterCustomAnimset_Parms RegisterCustomAnimset_Parms;
	memcpy ( &RegisterCustomAnimset_Parms.nmSetGroupName, &nmSetGroupName, 0x8 );
	RegisterCustomAnimset_Parms.oAnim = oAnim;

	pFnRegisterCustomAnimset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterCustomAnimset, &RegisterCustomAnimset_Parms, NULL );

	pFnRegisterCustomAnimset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CustomAnimFinished
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAnimName                     ( CPF_Parm )
// unsigned long                  bIsLooping                     ( CPF_Parm )

void ABioPawn::eventCustomAnimFinished ( struct FName nmAnimName, unsigned long bIsLooping )
{
	static UFunction* pFnCustomAnimFinished = NULL;

	if ( ! pFnCustomAnimFinished )
		pFnCustomAnimFinished = (UFunction*) UObject::GObjObjects()->Data[ 46194 ];

	ABioPawn_eventCustomAnimFinished_Parms CustomAnimFinished_Parms;
	memcpy ( &CustomAnimFinished_Parms.nmAnimName, &nmAnimName, 0x8 );
	CustomAnimFinished_Parms.bIsLooping = bIsLooping;

	this->ProcessEvent ( pFnCustomAnimFinished, &CustomAnimFinished_Parms, NULL );
};

// Function SFXGame.BioPawn.PlayCustomAnimOneShotAnim
// [0x00020002] 
// Parameters infos:
// struct FName                   nmAnimName                     ( CPF_Parm )

void ABioPawn::PlayCustomAnimOneShotAnim ( struct FName nmAnimName )
{
	static UFunction* pFnPlayCustomAnimOneShotAnim = NULL;

	if ( ! pFnPlayCustomAnimOneShotAnim )
		pFnPlayCustomAnimOneShotAnim = (UFunction*) UObject::GObjObjects()->Data[ 46192 ];

	ABioPawn_execPlayCustomAnimOneShotAnim_Parms PlayCustomAnimOneShotAnim_Parms;
	memcpy ( &PlayCustomAnimOneShotAnim_Parms.nmAnimName, &nmAnimName, 0x8 );

	this->ProcessEvent ( pFnPlayCustomAnimOneShotAnim, &PlayCustomAnimOneShotAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.PlayCustomAnimLoopAnim
// [0x00020002] 
// Parameters infos:
// struct FName                   nmAnimName                     ( CPF_Parm )

void ABioPawn::PlayCustomAnimLoopAnim ( struct FName nmAnimName )
{
	static UFunction* pFnPlayCustomAnimLoopAnim = NULL;

	if ( ! pFnPlayCustomAnimLoopAnim )
		pFnPlayCustomAnimLoopAnim = (UFunction*) UObject::GObjObjects()->Data[ 46190 ];

	ABioPawn_execPlayCustomAnimLoopAnim_Parms PlayCustomAnimLoopAnim_Parms;
	memcpy ( &PlayCustomAnimLoopAnim_Parms.nmAnimName, &nmAnimName, 0x8 );

	this->ProcessEvent ( pFnPlayCustomAnimLoopAnim, &PlayCustomAnimLoopAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.SetCustomAnimState
// [0x00020002] 
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )

void ABioPawn::SetCustomAnimState ( unsigned long bState )
{
	static UFunction* pFnSetCustomAnimState = NULL;

	if ( ! pFnSetCustomAnimState )
		pFnSetCustomAnimState = (UFunction*) UObject::GObjObjects()->Data[ 46185 ];

	ABioPawn_execSetCustomAnimState_Parms SetCustomAnimState_Parms;
	SetCustomAnimState_Parms.bState = bState;

	this->ProcessEvent ( pFnSetCustomAnimState, &SetCustomAnimState_Parms, NULL );
};

// Function SFXGame.BioPawn.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioPawn::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 46183 ];

	ABioPawn_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function SFXGame.BioPawn.RanInto
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioPawn::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 46176 ];

	ABioPawn_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function SFXGame.BioPawn.GetWeaponStartTraceLocation
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ABioPawn::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 46173 ];

	ABioPawn_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	pFnGetWeaponStartTraceLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	pFnGetWeaponStartTraceLocation->FunctionFlags |= 0x400;

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetPulledInMuzzleLocation
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioWeaponRanged*        Wpn                            ( CPF_Parm )
// struct FVector                 AimDir                         ( CPF_Parm )

struct FVector ABioPawn::eventGetPulledInMuzzleLocation ( class ABioWeaponRanged* Wpn, struct FVector AimDir )
{
	static UFunction* pFnGetPulledInMuzzleLocation = NULL;

	if ( ! pFnGetPulledInMuzzleLocation )
		pFnGetPulledInMuzzleLocation = (UFunction*) UObject::GObjObjects()->Data[ 46158 ];

	ABioPawn_eventGetPulledInMuzzleLocation_Parms GetPulledInMuzzleLocation_Parms;
	GetPulledInMuzzleLocation_Parms.Wpn = Wpn;
	memcpy ( &GetPulledInMuzzleLocation_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPulledInMuzzleLocation, &GetPulledInMuzzleLocation_Parms, NULL );

	return GetPulledInMuzzleLocation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.StartCrouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          HeightAdjust                   ( CPF_Parm )

void ABioPawn::eventStartCrouch ( float HeightAdjust )
{
	static UFunction* pFnStartCrouch = NULL;

	if ( ! pFnStartCrouch )
		pFnStartCrouch = (UFunction*) UObject::GObjObjects()->Data[ 46155 ];

	ABioPawn_eventStartCrouch_Parms StartCrouch_Parms;
	StartCrouch_Parms.HeightAdjust = HeightAdjust;

	this->ProcessEvent ( pFnStartCrouch, &StartCrouch_Parms, NULL );
};

// Function SFXGame.BioPawn.EndCrouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          HeightAdjust                   ( CPF_Parm )

void ABioPawn::eventEndCrouch ( float HeightAdjust )
{
	static UFunction* pFnEndCrouch = NULL;

	if ( ! pFnEndCrouch )
		pFnEndCrouch = (UFunction*) UObject::GObjObjects()->Data[ 46152 ];

	ABioPawn_eventEndCrouch_Parms EndCrouch_Parms;
	EndCrouch_Parms.HeightAdjust = HeightAdjust;

	this->ProcessEvent ( pFnEndCrouch, &EndCrouch_Parms, NULL );
};

// Function SFXGame.BioPawn.HopperAnimLand
// [0x00020002] 
// Parameters infos:

void ABioPawn::HopperAnimLand ( )
{
	static UFunction* pFnHopperAnimLand = NULL;

	if ( ! pFnHopperAnimLand )
		pFnHopperAnimLand = (UFunction*) UObject::GObjObjects()->Data[ 46151 ];

	ABioPawn_execHopperAnimLand_Parms HopperAnimLand_Parms;

	this->ProcessEvent ( pFnHopperAnimLand, &HopperAnimLand_Parms, NULL );
};

// Function SFXGame.BioPawn.HopperAnimJump
// [0x00020002] 
// Parameters infos:

void ABioPawn::HopperAnimJump ( )
{
	static UFunction* pFnHopperAnimJump = NULL;

	if ( ! pFnHopperAnimJump )
		pFnHopperAnimJump = (UFunction*) UObject::GObjObjects()->Data[ 46150 ];

	ABioPawn_execHopperAnimJump_Parms HopperAnimJump_Parms;

	this->ProcessEvent ( pFnHopperAnimJump, &HopperAnimJump_Parms, NULL );
};

// Function SFXGame.BioPawn.StopThrowGrenade
// [0x00020002] 
// Parameters infos:

void ABioPawn::StopThrowGrenade ( )
{
	static UFunction* pFnStopThrowGrenade = NULL;

	if ( ! pFnStopThrowGrenade )
		pFnStopThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 46149 ];

	ABioPawn_execStopThrowGrenade_Parms StopThrowGrenade_Parms;

	this->ProcessEvent ( pFnStopThrowGrenade, &StopThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioPawn.ThrowGrenade
// [0x00020002] 
// Parameters infos:

void ABioPawn::ThrowGrenade ( )
{
	static UFunction* pFnThrowGrenade = NULL;

	if ( ! pFnThrowGrenade )
		pFnThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 46148 ];

	ABioPawn_execThrowGrenade_Parms ThrowGrenade_Parms;

	this->ProcessEvent ( pFnThrowGrenade, &ThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioPawn.CreateGrenade
// [0x00020002] 
// Parameters infos:

void ABioPawn::CreateGrenade ( )
{
	static UFunction* pFnCreateGrenade = NULL;

	if ( ! pFnCreateGrenade )
		pFnCreateGrenade = (UFunction*) UObject::GObjObjects()->Data[ 46147 ];

	ABioPawn_execCreateGrenade_Parms CreateGrenade_Parms;

	this->ProcessEvent ( pFnCreateGrenade, &CreateGrenade_Parms, NULL );
};

// Function SFXGame.BioPawn.StartThrowGrenade
// [0x00020002] 
// Parameters infos:

void ABioPawn::StartThrowGrenade ( )
{
	static UFunction* pFnStartThrowGrenade = NULL;

	if ( ! pFnStartThrowGrenade )
		pFnStartThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 46145 ];

	ABioPawn_execStartThrowGrenade_Parms StartThrowGrenade_Parms;

	this->ProcessEvent ( pFnStartThrowGrenade, &StartThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioPawn.FinishDrawAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFinishDrawAnim ( )
{
	static UFunction* pFnFinishDrawAnim = NULL;

	if ( ! pFnFinishDrawAnim )
		pFnFinishDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 46143 ];

	ABioPawn_eventFinishDrawAnim_Parms FinishDrawAnim_Parms;

	this->ProcessEvent ( pFnFinishDrawAnim, &FinishDrawAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutDrawAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutDrawAnim ( )
{
	static UFunction* pFnFadeOutDrawAnim = NULL;

	if ( ! pFnFadeOutDrawAnim )
		pFnFadeOutDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 46141 ];

	ABioPawn_eventFadeOutDrawAnim_Parms FadeOutDrawAnim_Parms;

	this->ProcessEvent ( pFnFadeOutDrawAnim, &FadeOutDrawAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.SwapDrawAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventSwapDrawAnim ( )
{
	static UFunction* pFnSwapDrawAnim = NULL;

	if ( ! pFnSwapDrawAnim )
		pFnSwapDrawAnim = (UFunction*) UObject::GObjObjects()->Data[ 46139 ];

	ABioPawn_eventSwapDrawAnim_Parms SwapDrawAnim_Parms;

	this->ProcessEvent ( pFnSwapDrawAnim, &SwapDrawAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FinishHolsterAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFinishHolsterAnim ( )
{
	static UFunction* pFnFinishHolsterAnim = NULL;

	if ( ! pFnFinishHolsterAnim )
		pFnFinishHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 46137 ];

	ABioPawn_eventFinishHolsterAnim_Parms FinishHolsterAnim_Parms;

	this->ProcessEvent ( pFnFinishHolsterAnim, &FinishHolsterAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutHolsterAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutHolsterAnim ( )
{
	static UFunction* pFnFadeOutHolsterAnim = NULL;

	if ( ! pFnFadeOutHolsterAnim )
		pFnFadeOutHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 46135 ];

	ABioPawn_eventFadeOutHolsterAnim_Parms FadeOutHolsterAnim_Parms;

	this->ProcessEvent ( pFnFadeOutHolsterAnim, &FadeOutHolsterAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.SwapHolsterAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventSwapHolsterAnim ( )
{
	static UFunction* pFnSwapHolsterAnim = NULL;

	if ( ! pFnSwapHolsterAnim )
		pFnSwapHolsterAnim = (UFunction*) UObject::GObjObjects()->Data[ 46133 ];

	ABioPawn_eventSwapHolsterAnim_Parms SwapHolsterAnim_Parms;

	this->ProcessEvent ( pFnSwapHolsterAnim, &SwapHolsterAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutExitCombatAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutExitCombatAnim ( )
{
	static UFunction* pFnFadeOutExitCombatAnim = NULL;

	if ( ! pFnFadeOutExitCombatAnim )
		pFnFadeOutExitCombatAnim = (UFunction*) UObject::GObjObjects()->Data[ 46132 ];

	ABioPawn_eventFadeOutExitCombatAnim_Parms FadeOutExitCombatAnim_Parms;

	this->ProcessEvent ( pFnFadeOutExitCombatAnim, &FadeOutExitCombatAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutEnterCombatAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutEnterCombatAnim ( )
{
	static UFunction* pFnFadeOutEnterCombatAnim = NULL;

	if ( ! pFnFadeOutEnterCombatAnim )
		pFnFadeOutEnterCombatAnim = (UFunction*) UObject::GObjObjects()->Data[ 46131 ];

	ABioPawn_eventFadeOutEnterCombatAnim_Parms FadeOutEnterCombatAnim_Parms;

	this->ProcessEvent ( pFnFadeOutEnterCombatAnim, &FadeOutEnterCombatAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutStopAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutStopAnim ( )
{
	static UFunction* pFnFadeOutStopAnim = NULL;

	if ( ! pFnFadeOutStopAnim )
		pFnFadeOutStopAnim = (UFunction*) UObject::GObjObjects()->Data[ 46130 ];

	ABioPawn_eventFadeOutStopAnim_Parms FadeOutStopAnim_Parms;

	this->ProcessEvent ( pFnFadeOutStopAnim, &FadeOutStopAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutSkidAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutSkidAnim ( )
{
	static UFunction* pFnFadeOutSkidAnim = NULL;

	if ( ! pFnFadeOutSkidAnim )
		pFnFadeOutSkidAnim = (UFunction*) UObject::GObjObjects()->Data[ 46128 ];

	ABioPawn_eventFadeOutSkidAnim_Parms FadeOutSkidAnim_Parms;

	this->ProcessEvent ( pFnFadeOutSkidAnim, &FadeOutSkidAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.FadeOutStartAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventFadeOutStartAnim ( )
{
	static UFunction* pFnFadeOutStartAnim = NULL;

	if ( ! pFnFadeOutStartAnim )
		pFnFadeOutStartAnim = (UFunction*) UObject::GObjObjects()->Data[ 46125 ];

	ABioPawn_eventFadeOutStartAnim_Parms FadeOutStartAnim_Parms;

	this->ProcessEvent ( pFnFadeOutStartAnim, &FadeOutStartAnim_Parms, NULL );
};

// Function SFXGame.BioPawn.UnlockAnimRotation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPawn::eventUnlockAnimRotation ( )
{
	static UFunction* pFnUnlockAnimRotation = NULL;

	if ( ! pFnUnlockAnimRotation )
		pFnUnlockAnimRotation = (UFunction*) UObject::GObjObjects()->Data[ 46124 ];

	ABioPawn_eventUnlockAnimRotation_Parms UnlockAnimRotation_Parms;

	this->ProcessEvent ( pFnUnlockAnimRotation, &UnlockAnimRotation_Parms, NULL );
};

// Function SFXGame.BioPawn.SetCombatState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eState                         ( CPF_Parm )

void ABioPawn::eventSetCombatState ( unsigned char eState )
{
	static UFunction* pFnSetCombatState = NULL;

	if ( ! pFnSetCombatState )
		pFnSetCombatState = (UFunction*) UObject::GObjObjects()->Data[ 46122 ];

	ABioPawn_eventSetCombatState_Parms SetCombatState_Parms;
	SetCombatState_Parms.eState = eState;

	this->ProcessEvent ( pFnSetCombatState, &SetCombatState_Parms, NULL );
};

// Function SFXGame.BioPawn.RagdollRecoverTimer
// [0x00020002] 
// Parameters infos:

void ABioPawn::RagdollRecoverTimer ( )
{
	static UFunction* pFnRagdollRecoverTimer = NULL;

	if ( ! pFnRagdollRecoverTimer )
		pFnRagdollRecoverTimer = (UFunction*) UObject::GObjObjects()->Data[ 46119 ];

	ABioPawn_execRagdollRecoverTimer_Parms RagdollRecoverTimer_Parms;

	this->ProcessEvent ( pFnRagdollRecoverTimer, &RagdollRecoverTimer_Parms, NULL );
};

// Function SFXGame.BioPawn.PostInitAnimTree
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ABioPawn::PostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 46117 ];

	ABioPawn_execPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	pFnPostInitAnimTree->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );

	pFnPostInitAnimTree->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.StandardDeviation
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<float>           Data                           ( CPF_Parm | CPF_NeedCtorLink )
// float                          M                              ( CPF_Parm )

float ABioPawn::StandardDeviation ( struct TArray<float> Data, float M )
{
	static UFunction* pFnStandardDeviation = NULL;

	if ( ! pFnStandardDeviation )
		pFnStandardDeviation = (UFunction*) UObject::GObjObjects()->Data[ 46110 ];

	ABioPawn_execStandardDeviation_Parms StandardDeviation_Parms;
	memcpy ( &StandardDeviation_Parms.Data, &Data, 0x10 );
	StandardDeviation_Parms.M = M;

	this->ProcessEvent ( pFnStandardDeviation, &StandardDeviation_Parms, NULL );

	return StandardDeviation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.UpdateDefaultSpeeds
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::UpdateDefaultSpeeds ( )
{
	static UFunction* pFnUpdateDefaultSpeeds = NULL;

	if ( ! pFnUpdateDefaultSpeeds )
		pFnUpdateDefaultSpeeds = (UFunction*) UObject::GObjObjects()->Data[ 46109 ];

	ABioPawn_execUpdateDefaultSpeeds_Parms UpdateDefaultSpeeds_Parms;

	pFnUpdateDefaultSpeeds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDefaultSpeeds, &UpdateDefaultSpeeds_Parms, NULL );

	pFnUpdateDefaultSpeeds->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetBaseSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPawn::GetBaseSpeed ( )
{
	static UFunction* pFnGetBaseSpeed = NULL;

	if ( ! pFnGetBaseSpeed )
		pFnGetBaseSpeed = (UFunction*) UObject::GObjObjects()->Data[ 46107 ];

	ABioPawn_execGetBaseSpeed_Parms GetBaseSpeed_Parms;

	pFnGetBaseSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBaseSpeed, &GetBaseSpeed_Parms, NULL );

	pFnGetBaseSpeed->FunctionFlags |= 0x400;

	return GetBaseSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.InPlayerParty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::InPlayerParty ( )
{
	static UFunction* pFnInPlayerParty = NULL;

	if ( ! pFnInPlayerParty )
		pFnInPlayerParty = (UFunction*) UObject::GObjObjects()->Data[ 45454 ];

	ABioPawn_execInPlayerParty_Parms InPlayerParty_Parms;

	pFnInPlayerParty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInPlayerParty, &InPlayerParty_Parms, NULL );

	pFnInPlayerParty->FunctionFlags |= 0x400;

	return InPlayerParty_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.ClearAllActions
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sClearLabel                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ABioPawn::eventClearAllActions ( struct FString sClearLabel )
{
	static UFunction* pFnClearAllActions = NULL;

	if ( ! pFnClearAllActions )
		pFnClearAllActions = (UFunction*) UObject::GObjObjects()->Data[ 46105 ];

	ABioPawn_eventClearAllActions_Parms ClearAllActions_Parms;
	memcpy ( &ClearAllActions_Parms.sClearLabel, &sClearLabel, 0x10 );

	this->ProcessEvent ( pFnClearAllActions, &ClearAllActions_Parms, NULL );
};

// Function SFXGame.BioPawn.FindWaypointPathLength
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   List                           ( CPF_Parm )

int ABioPawn::FindWaypointPathLength ( struct FName List )
{
	static UFunction* pFnFindWaypointPathLength = NULL;

	if ( ! pFnFindWaypointPathLength )
		pFnFindWaypointPathLength = (UFunction*) UObject::GObjObjects()->Data[ 46102 ];

	ABioPawn_execFindWaypointPathLength_Parms FindWaypointPathLength_Parms;
	memcpy ( &FindWaypointPathLength_Parms.List, &List, 0x8 );

	this->ProcessEvent ( pFnFindWaypointPathLength, &FindWaypointPathLength_Parms, NULL );

	return FindWaypointPathLength_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.FindWaypointName
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   List                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

class AActor* ABioPawn::FindWaypointName ( struct FName List, int Index )
{
	static UFunction* pFnFindWaypointName = NULL;

	if ( ! pFnFindWaypointName )
		pFnFindWaypointName = (UFunction*) UObject::GObjObjects()->Data[ 46098 ];

	ABioPawn_execFindWaypointName_Parms FindWaypointName_Parms;
	memcpy ( &FindWaypointName_Parms.List, &List, 0x8 );
	FindWaypointName_Parms.Index = Index;

	this->ProcessEvent ( pFnFindWaypointName, &FindWaypointName_Parms, NULL );

	return FindWaypointName_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CacheWayPointSet
// [0x00020002] 
// Parameters infos:
// struct FName                   WaypointSetTag                 ( CPF_Parm )

void ABioPawn::CacheWayPointSet ( struct FName WaypointSetTag )
{
	static UFunction* pFnCacheWayPointSet = NULL;

	if ( ! pFnCacheWayPointSet )
		pFnCacheWayPointSet = (UFunction*) UObject::GObjObjects()->Data[ 46096 ];

	ABioPawn_execCacheWayPointSet_Parms CacheWayPointSet_Parms;
	memcpy ( &CacheWayPointSet_Parms.WaypointSetTag, &WaypointSetTag, 0x8 );

	this->ProcessEvent ( pFnCacheWayPointSet, &CacheWayPointSet_Parms, NULL );
};

// Function SFXGame.BioPawn.PlayDying
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )

void ABioPawn::eventPlayDying ( class UClass* DamageType, struct FVector HitLoc )
{
	static UFunction* pFnPlayDying = NULL;

	if ( ! pFnPlayDying )
		pFnPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 46093 ];

	ABioPawn_eventPlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy ( &PlayDying_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnPlayDying, &PlayDying_Parms, NULL );
};

// Function SFXGame.BioPawn.ShouldCrouch
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCrouch                        ( CPF_Parm )

void ABioPawn::ShouldCrouch ( unsigned long bCrouch )
{
	static UFunction* pFnShouldCrouch = NULL;

	if ( ! pFnShouldCrouch )
		pFnShouldCrouch = (UFunction*) UObject::GObjObjects()->Data[ 46091 ];

	ABioPawn_execShouldCrouch_Parms ShouldCrouch_Parms;
	ShouldCrouch_Parms.bCrouch = bCrouch;

	this->ProcessEvent ( pFnShouldCrouch, &ShouldCrouch_Parms, NULL );
};

// Function SFXGame.BioPawn.IsMetaActionInProgress
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsMetaActionInProgress ( )
{
	static UFunction* pFnIsMetaActionInProgress = NULL;

	if ( ! pFnIsMetaActionInProgress )
		pFnIsMetaActionInProgress = (UFunction*) UObject::GObjObjects()->Data[ 46089 ];

	ABioPawn_execIsMetaActionInProgress_Parms IsMetaActionInProgress_Parms;

	this->ProcessEvent ( pFnIsMetaActionInProgress, &IsMetaActionInProgress_Parms, NULL );

	return IsMetaActionInProgress_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46085 ];

	ABioPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioPawn.OnWeaponFired
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioWeaponRanged*        InWeapon                       ( CPF_Parm )

void ABioPawn::eventOnWeaponFired ( class ABioWeaponRanged* InWeapon )
{
	static UFunction* pFnOnWeaponFired = NULL;

	if ( ! pFnOnWeaponFired )
		pFnOnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 46080 ];

	ABioPawn_eventOnWeaponFired_Parms OnWeaponFired_Parms;
	OnWeaponFired_Parms.InWeapon = InWeapon;

	this->ProcessEvent ( pFnOnWeaponFired, &OnWeaponFired_Parms, NULL );
};

// Function SFXGame.BioPawn.IsFiring
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsFiring ( )
{
	static UFunction* pFnIsFiring = NULL;

	if ( ! pFnIsFiring )
		pFnIsFiring = (UFunction*) UObject::GObjObjects()->Data[ 46077 ];

	ABioPawn_execIsFiring_Parms IsFiring_Parms;

	this->ProcessEvent ( pFnIsFiring, &IsFiring_Parms, NULL );

	return IsFiring_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CanFireWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::CanFireWeapon ( )
{
	static UFunction* pFnCanFireWeapon = NULL;

	if ( ! pFnCanFireWeapon )
		pFnCanFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 46075 ];

	ABioPawn_execCanFireWeapon_Parms CanFireWeapon_Parms;

	pFnCanFireWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanFireWeapon, &CanFireWeapon_Parms, NULL );

	pFnCanFireWeapon->FunctionFlags |= 0x400;

	return CanFireWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.Destroyed
// [0x00020102] 
// Parameters infos:

void ABioPawn::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 46071 ];

	ABioPawn_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function SFXGame.BioPawn.BioBeginPlay
// [0x00020102] 
// Parameters infos:

void ABioPawn::BioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 46070 ];

	ABioPawn_execBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioPawn.GetCurrentMoveTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oMoveTarget                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 vTarget                        ( CPF_Parm | CPF_OutParm )

bool ABioPawn::GetCurrentMoveTarget ( class AActor** oMoveTarget, struct FVector* vTarget )
{
	static UFunction* pFnGetCurrentMoveTarget = NULL;

	if ( ! pFnGetCurrentMoveTarget )
		pFnGetCurrentMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 46066 ];

	ABioPawn_execGetCurrentMoveTarget_Parms GetCurrentMoveTarget_Parms;

	pFnGetCurrentMoveTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentMoveTarget, &GetCurrentMoveTarget_Parms, NULL );

	pFnGetCurrentMoveTarget->FunctionFlags |= 0x400;

	if ( oMoveTarget )
		*oMoveTarget = GetCurrentMoveTarget_Parms.oMoveTarget;

	if ( vTarget )
		memcpy ( vTarget, &GetCurrentMoveTarget_Parms.vTarget, 0xC );

	return GetCurrentMoveTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.BioProcessDamageIndicator
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )

void ABioPawn::BioProcessDamageIndicator ( class AController* InstigatedBy )
{
	static UFunction* pFnBioProcessDamageIndicator = NULL;

	if ( ! pFnBioProcessDamageIndicator )
		pFnBioProcessDamageIndicator = (UFunction*) UObject::GObjObjects()->Data[ 46064 ];

	ABioPawn_execBioProcessDamageIndicator_Parms BioProcessDamageIndicator_Parms;
	BioProcessDamageIndicator_Parms.InstigatedBy = InstigatedBy;

	pFnBioProcessDamageIndicator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioProcessDamageIndicator, &BioProcessDamageIndicator_Parms, NULL );

	pFnBioProcessDamageIndicator->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetClassification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioPawn::GetClassification ( )
{
	static UFunction* pFnGetClassification = NULL;

	if ( ! pFnGetClassification )
		pFnGetClassification = (UFunction*) UObject::GObjObjects()->Data[ 43448 ];

	ABioPawn_execGetClassification_Parms GetClassification_Parms;

	pFnGetClassification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassification, &GetClassification_Parms, NULL );

	pFnGetClassification->FunctionFlags |= 0x400;

	return GetClassification_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetClassification
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  a_eClassification              ( CPF_Parm )
// unsigned long                  a_bAsDefault                   ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::SetClassification ( unsigned char a_eClassification, unsigned long a_bAsDefault )
{
	static UFunction* pFnSetClassification = NULL;

	if ( ! pFnSetClassification )
		pFnSetClassification = (UFunction*) UObject::GObjObjects()->Data[ 46061 ];

	ABioPawn_execSetClassification_Parms SetClassification_Parms;
	SetClassification_Parms.a_eClassification = a_eClassification;
	SetClassification_Parms.a_bAsDefault = a_bAsDefault;

	pFnSetClassification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetClassification, &SetClassification_Parms, NULL );

	pFnSetClassification->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.DroneStartLanding
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::DroneStartLanding ( )
{
	static UFunction* pFnDroneStartLanding = NULL;

	if ( ! pFnDroneStartLanding )
		pFnDroneStartLanding = (UFunction*) UObject::GObjObjects()->Data[ 46060 ];

	ABioPawn_execDroneStartLanding_Parms DroneStartLanding_Parms;

	pFnDroneStartLanding->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDroneStartLanding, &DroneStartLanding_Parms, NULL );

	pFnDroneStartLanding->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.DroneFinishedTakingOff
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::DroneFinishedTakingOff ( )
{
	static UFunction* pFnDroneFinishedTakingOff = NULL;

	if ( ! pFnDroneFinishedTakingOff )
		pFnDroneFinishedTakingOff = (UFunction*) UObject::GObjObjects()->Data[ 46059 ];

	ABioPawn_execDroneFinishedTakingOff_Parms DroneFinishedTakingOff_Parms;

	pFnDroneFinishedTakingOff->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDroneFinishedTakingOff, &DroneFinishedTakingOff_Parms, NULL );

	pFnDroneFinishedTakingOff->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.UpdateGrimeGrimeLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          a_fGrimeValue                  ( CPF_Parm )

void ABioPawn::UpdateGrimeGrimeLevel ( float a_fGrimeValue )
{
	static UFunction* pFnUpdateGrimeGrimeLevel = NULL;

	if ( ! pFnUpdateGrimeGrimeLevel )
		pFnUpdateGrimeGrimeLevel = (UFunction*) UObject::GObjObjects()->Data[ 46057 ];

	ABioPawn_execUpdateGrimeGrimeLevel_Parms UpdateGrimeGrimeLevel_Parms;
	UpdateGrimeGrimeLevel_Parms.a_fGrimeValue = a_fGrimeValue;

	pFnUpdateGrimeGrimeLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGrimeGrimeLevel, &UpdateGrimeGrimeLevel_Parms, NULL );

	pFnUpdateGrimeGrimeLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.UpdateGrimeDirtLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          a_fDirtValue                   ( CPF_Parm )

void ABioPawn::UpdateGrimeDirtLevel ( float a_fDirtValue )
{
	static UFunction* pFnUpdateGrimeDirtLevel = NULL;

	if ( ! pFnUpdateGrimeDirtLevel )
		pFnUpdateGrimeDirtLevel = (UFunction*) UObject::GObjObjects()->Data[ 46055 ];

	ABioPawn_execUpdateGrimeDirtLevel_Parms UpdateGrimeDirtLevel_Parms;
	UpdateGrimeDirtLevel_Parms.a_fDirtValue = a_fDirtValue;

	pFnUpdateGrimeDirtLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGrimeDirtLevel, &UpdateGrimeDirtLevel_Parms, NULL );

	pFnUpdateGrimeDirtLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.UpdateGrimeCombatLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          a_fCombatValue                 ( CPF_Parm )

void ABioPawn::UpdateGrimeCombatLevel ( float a_fCombatValue )
{
	static UFunction* pFnUpdateGrimeCombatLevel = NULL;

	if ( ! pFnUpdateGrimeCombatLevel )
		pFnUpdateGrimeCombatLevel = (UFunction*) UObject::GObjObjects()->Data[ 46053 ];

	ABioPawn_execUpdateGrimeCombatLevel_Parms UpdateGrimeCombatLevel_Parms;
	UpdateGrimeCombatLevel_Parms.a_fCombatValue = a_fCombatValue;

	pFnUpdateGrimeCombatLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGrimeCombatLevel, &UpdateGrimeCombatLevel_Parms, NULL );

	pFnUpdateGrimeCombatLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.IsShowingHelmet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsShowingHelmet ( )
{
	static UFunction* pFnIsShowingHelmet = NULL;

	if ( ! pFnIsShowingHelmet )
		pFnIsShowingHelmet = (UFunction*) UObject::GObjObjects()->Data[ 46051 ];

	ABioPawn_execIsShowingHelmet_Parms IsShowingHelmet_Parms;

	pFnIsShowingHelmet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsShowingHelmet, &IsShowingHelmet_Parms, NULL );

	pFnIsShowingHelmet->FunctionFlags |= 0x400;

	return IsShowingHelmet_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsShowingFacePlate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsShowingFacePlate ( )
{
	static UFunction* pFnIsShowingFacePlate = NULL;

	if ( ! pFnIsShowingFacePlate )
		pFnIsShowingFacePlate = (UFunction*) UObject::GObjObjects()->Data[ 46049 ];

	ABioPawn_execIsShowingFacePlate_Parms IsShowingFacePlate_Parms;

	pFnIsShowingFacePlate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsShowingFacePlate, &IsShowingFacePlate_Parms, NULL );

	pFnIsShowingFacePlate->FunctionFlags |= 0x400;

	return IsShowingFacePlate_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsShowingVisor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsShowingVisor ( )
{
	static UFunction* pFnIsShowingVisor = NULL;

	if ( ! pFnIsShowingVisor )
		pFnIsShowingVisor = (UFunction*) UObject::GObjObjects()->Data[ 46047 ];

	ABioPawn_execIsShowingVisor_Parms IsShowingVisor_Parms;

	pFnIsShowingVisor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsShowingVisor, &IsShowingVisor_Parms, NULL );

	pFnIsShowingVisor->FunctionFlags |= 0x400;

	return IsShowingVisor_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.RequestHelmetVisible
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void ABioPawn::RequestHelmetVisible ( unsigned long B )
{
	static UFunction* pFnRequestHelmetVisible = NULL;

	if ( ! pFnRequestHelmetVisible )
		pFnRequestHelmetVisible = (UFunction*) UObject::GObjObjects()->Data[ 46045 ];

	ABioPawn_execRequestHelmetVisible_Parms RequestHelmetVisible_Parms;
	RequestHelmetVisible_Parms.B = B;

	pFnRequestHelmetVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestHelmetVisible, &RequestHelmetVisible_Parms, NULL );

	pFnRequestHelmetVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.RequestFacePlateVisible
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void ABioPawn::RequestFacePlateVisible ( unsigned long B )
{
	static UFunction* pFnRequestFacePlateVisible = NULL;

	if ( ! pFnRequestFacePlateVisible )
		pFnRequestFacePlateVisible = (UFunction*) UObject::GObjObjects()->Data[ 46043 ];

	ABioPawn_execRequestFacePlateVisible_Parms RequestFacePlateVisible_Parms;
	RequestFacePlateVisible_Parms.B = B;

	pFnRequestFacePlateVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestFacePlateVisible, &RequestFacePlateVisible_Parms, NULL );

	pFnRequestFacePlateVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.RequestVisorVisible
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void ABioPawn::RequestVisorVisible ( unsigned long B )
{
	static UFunction* pFnRequestVisorVisible = NULL;

	if ( ! pFnRequestVisorVisible )
		pFnRequestVisorVisible = (UFunction*) UObject::GObjObjects()->Data[ 46041 ];

	ABioPawn_execRequestVisorVisible_Parms RequestVisorVisible_Parms;
	RequestVisorVisible_Parms.B = B;

	pFnRequestVisorVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestVisorVisible, &RequestVisorVisible_Parms, NULL );

	pFnRequestVisorVisible->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.OverrideHeadGearVisibility
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void ABioPawn::OverrideHeadGearVisibility ( unsigned long B )
{
	static UFunction* pFnOverrideHeadGearVisibility = NULL;

	if ( ! pFnOverrideHeadGearVisibility )
		pFnOverrideHeadGearVisibility = (UFunction*) UObject::GObjObjects()->Data[ 46039 ];

	ABioPawn_execOverrideHeadGearVisibility_Parms OverrideHeadGearVisibility_Parms;
	OverrideHeadGearVisibility_Parms.B = B;

	pFnOverrideHeadGearVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOverrideHeadGearVisibility, &OverrideHeadGearVisibility_Parms, NULL );

	pFnOverrideHeadGearVisibility->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.IsHeadGearVisiblePreferenceRelevant
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsHeadGearVisiblePreferenceRelevant ( )
{
	static UFunction* pFnIsHeadGearVisiblePreferenceRelevant = NULL;

	if ( ! pFnIsHeadGearVisiblePreferenceRelevant )
		pFnIsHeadGearVisiblePreferenceRelevant = (UFunction*) UObject::GObjObjects()->Data[ 46037 ];

	ABioPawn_execIsHeadGearVisiblePreferenceRelevant_Parms IsHeadGearVisiblePreferenceRelevant_Parms;

	pFnIsHeadGearVisiblePreferenceRelevant->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsHeadGearVisiblePreferenceRelevant, &IsHeadGearVisiblePreferenceRelevant_Parms, NULL );

	pFnIsHeadGearVisiblePreferenceRelevant->FunctionFlags |= 0x400;

	return IsHeadGearVisiblePreferenceRelevant_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetHeadGearVisiblePreference
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::GetHeadGearVisiblePreference ( )
{
	static UFunction* pFnGetHeadGearVisiblePreference = NULL;

	if ( ! pFnGetHeadGearVisiblePreference )
		pFnGetHeadGearVisiblePreference = (UFunction*) UObject::GObjObjects()->Data[ 46035 ];

	ABioPawn_execGetHeadGearVisiblePreference_Parms GetHeadGearVisiblePreference_Parms;

	pFnGetHeadGearVisiblePreference->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHeadGearVisiblePreference, &GetHeadGearVisiblePreference_Parms, NULL );

	pFnGetHeadGearVisiblePreference->FunctionFlags |= 0x400;

	return GetHeadGearVisiblePreference_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetHeadGearVisiblePreference
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void ABioPawn::SetHeadGearVisiblePreference ( unsigned long B )
{
	static UFunction* pFnSetHeadGearVisiblePreference = NULL;

	if ( ! pFnSetHeadGearVisiblePreference )
		pFnSetHeadGearVisiblePreference = (UFunction*) UObject::GObjObjects()->Data[ 46033 ];

	ABioPawn_execSetHeadGearVisiblePreference_Parms SetHeadGearVisiblePreference_Parms;
	SetHeadGearVisiblePreference_Parms.B = B;

	pFnSetHeadGearVisiblePreference->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHeadGearVisiblePreference, &SetHeadGearVisiblePreference_Parms, NULL );

	pFnSetHeadGearVisiblePreference->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.RestoreCachedHeadGearVisibilityOverride
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::RestoreCachedHeadGearVisibilityOverride ( )
{
	static UFunction* pFnRestoreCachedHeadGearVisibilityOverride = NULL;

	if ( ! pFnRestoreCachedHeadGearVisibilityOverride )
		pFnRestoreCachedHeadGearVisibilityOverride = (UFunction*) UObject::GObjObjects()->Data[ 46032 ];

	ABioPawn_execRestoreCachedHeadGearVisibilityOverride_Parms RestoreCachedHeadGearVisibilityOverride_Parms;

	pFnRestoreCachedHeadGearVisibilityOverride->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreCachedHeadGearVisibilityOverride, &RestoreCachedHeadGearVisibilityOverride_Parms, NULL );

	pFnRestoreCachedHeadGearVisibilityOverride->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CacheHeadGearVisibilityOverride
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::CacheHeadGearVisibilityOverride ( )
{
	static UFunction* pFnCacheHeadGearVisibilityOverride = NULL;

	if ( ! pFnCacheHeadGearVisibilityOverride )
		pFnCacheHeadGearVisibilityOverride = (UFunction*) UObject::GObjObjects()->Data[ 46031 ];

	ABioPawn_execCacheHeadGearVisibilityOverride_Parms CacheHeadGearVisibilityOverride_Parms;

	pFnCacheHeadGearVisibilityOverride->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCacheHeadGearVisibilityOverride, &CacheHeadGearVisibilityOverride_Parms, NULL );

	pFnCacheHeadGearVisibilityOverride->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CleanUpHopState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::CleanUpHopState ( )
{
	static UFunction* pFnCleanUpHopState = NULL;

	if ( ! pFnCleanUpHopState )
		pFnCleanUpHopState = (UFunction*) UObject::GObjObjects()->Data[ 46030 ];

	ABioPawn_execCleanUpHopState_Parms CleanUpHopState_Parms;

	pFnCleanUpHopState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCleanUpHopState, &CleanUpHopState_Parms, NULL );

	pFnCleanUpHopState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetPhysHopState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eNewPhysHopState               ( CPF_Parm )

void ABioPawn::SetPhysHopState ( unsigned char eNewPhysHopState )
{
	static UFunction* pFnSetPhysHopState = NULL;

	if ( ! pFnSetPhysHopState )
		pFnSetPhysHopState = (UFunction*) UObject::GObjObjects()->Data[ 46028 ];

	ABioPawn_execSetPhysHopState_Parms SetPhysHopState_Parms;
	SetPhysHopState_Parms.eNewPhysHopState = eNewPhysHopState;

	pFnSetPhysHopState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPhysHopState, &SetPhysHopState_Parms, NULL );

	pFnSetPhysHopState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SafeSetLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vDest                          ( CPF_Parm )

void ABioPawn::SafeSetLocation ( struct FVector vDest )
{
	static UFunction* pFnSafeSetLocation = NULL;

	if ( ! pFnSafeSetLocation )
		pFnSafeSetLocation = (UFunction*) UObject::GObjObjects()->Data[ 46026 ];

	ABioPawn_execSafeSetLocation_Parms SafeSetLocation_Parms;
	memcpy ( &SafeSetLocation_Parms.vDest, &vDest, 0xC );

	pFnSafeSetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSafeSetLocation, &SafeSetLocation_Parms, NULL );

	pFnSafeSetLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.PlayFaceFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 AnimGroup                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 AnimSeq                        ( CPF_Parm | CPF_NeedCtorLink )

bool ABioPawn::PlayFaceFX ( struct FString AnimGroup, struct FString AnimSeq )
{
	static UFunction* pFnPlayFaceFX = NULL;

	if ( ! pFnPlayFaceFX )
		pFnPlayFaceFX = (UFunction*) UObject::GObjObjects()->Data[ 46022 ];

	ABioPawn_execPlayFaceFX_Parms PlayFaceFX_Parms;
	memcpy ( &PlayFaceFX_Parms.AnimGroup, &AnimGroup, 0x10 );
	memcpy ( &PlayFaceFX_Parms.AnimSeq, &AnimSeq, 0x10 );

	pFnPlayFaceFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayFaceFX, &PlayFaceFX_Parms, NULL );

	pFnPlayFaceFX->FunctionFlags |= 0x400;

	return PlayFaceFX_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetDefaultFaceFXAsset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::SetDefaultFaceFXAsset ( )
{
	static UFunction* pFnSetDefaultFaceFXAsset = NULL;

	if ( ! pFnSetDefaultFaceFXAsset )
		pFnSetDefaultFaceFXAsset = (UFunction*) UObject::GObjObjects()->Data[ 46020 ];

	ABioPawn_execSetDefaultFaceFXAsset_Parms SetDefaultFaceFXAsset_Parms;

	pFnSetDefaultFaceFXAsset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDefaultFaceFXAsset, &SetDefaultFaceFXAsset_Parms, NULL );

	pFnSetDefaultFaceFXAsset->FunctionFlags |= 0x400;

	return SetDefaultFaceFXAsset_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.RequestHidden
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Const | CPF_Parm )

void ABioPawn::RequestHidden ( unsigned long B )
{
	static UFunction* pFnRequestHidden = NULL;

	if ( ! pFnRequestHidden )
		pFnRequestHidden = (UFunction*) UObject::GObjObjects()->Data[ 46018 ];

	ABioPawn_execRequestHidden_Parms RequestHidden_Parms;
	RequestHidden_Parms.B = B;

	pFnRequestHidden->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestHidden, &RequestHidden_Parms, NULL );

	pFnRequestHidden->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetLookAtTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned char                  a_eTransition                  ( CPF_OptionalParm | CPF_Parm )
// int                            nRank                          ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::SetLookAtTarget ( class AActor* oTarget, unsigned char a_eTransition, int nRank )
{
	static UFunction* pFnSetLookAtTarget = NULL;

	if ( ! pFnSetLookAtTarget )
		pFnSetLookAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 46014 ];

	ABioPawn_execSetLookAtTarget_Parms SetLookAtTarget_Parms;
	SetLookAtTarget_Parms.oTarget = oTarget;
	SetLookAtTarget_Parms.a_eTransition = a_eTransition;
	SetLookAtTarget_Parms.nRank = nRank;

	pFnSetLookAtTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLookAtTarget, &SetLookAtTarget_Parms, NULL );

	pFnSetLookAtTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetAmbientLookAtTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRank                          ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::SetAmbientLookAtTarget ( class AActor* oTarget, int nRank )
{
	static UFunction* pFnSetAmbientLookAtTarget = NULL;

	if ( ! pFnSetAmbientLookAtTarget )
		pFnSetAmbientLookAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 46011 ];

	ABioPawn_execSetAmbientLookAtTarget_Parms SetAmbientLookAtTarget_Parms;
	SetAmbientLookAtTarget_Parms.oTarget = oTarget;
	SetAmbientLookAtTarget_Parms.nRank = nRank;

	pFnSetAmbientLookAtTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAmbientLookAtTarget, &SetAmbientLookAtTarget_Parms, NULL );

	pFnSetAmbientLookAtTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.ExploreMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDelaySeconds                  ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::ExploreMode ( float fDelaySeconds )
{
	static UFunction* pFnExploreMode = NULL;

	if ( ! pFnExploreMode )
		pFnExploreMode = (UFunction*) UObject::GObjObjects()->Data[ 46008 ];

	ABioPawn_execExploreMode_Parms ExploreMode_Parms;
	ExploreMode_Parms.fDelaySeconds = fDelaySeconds;

	pFnExploreMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExploreMode, &ExploreMode_Parms, NULL );

	pFnExploreMode->FunctionFlags |= 0x400;

	return ExploreMode_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.ReadyMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDelaySeconds                  ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::ReadyMode ( float fDelaySeconds )
{
	static UFunction* pFnReadyMode = NULL;

	if ( ! pFnReadyMode )
		pFnReadyMode = (UFunction*) UObject::GObjObjects()->Data[ 46005 ];

	ABioPawn_execReadyMode_Parms ReadyMode_Parms;
	ReadyMode_Parms.fDelaySeconds = fDelaySeconds;

	pFnReadyMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadyMode, &ReadyMode_Parms, NULL );

	pFnReadyMode->FunctionFlags |= 0x400;

	return ReadyMode_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.UnlockTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::UnlockTarget ( )
{
	static UFunction* pFnUnlockTarget = NULL;

	if ( ! pFnUnlockTarget )
		pFnUnlockTarget = (UFunction*) UObject::GObjObjects()->Data[ 45456 ];

	ABioPawn_execUnlockTarget_Parms UnlockTarget_Parms;

	pFnUnlockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnlockTarget, &UnlockTarget_Parms, NULL );

	pFnUnlockTarget->FunctionFlags |= 0x400;

	return UnlockTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.LockTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )

bool ABioPawn::LockTarget ( class AActor* oTarget )
{
	static UFunction* pFnLockTarget = NULL;

	if ( ! pFnLockTarget )
		pFnLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 46002 ];

	ABioPawn_execLockTarget_Parms LockTarget_Parms;
	LockTarget_Parms.oTarget = oTarget;

	pFnLockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLockTarget, &LockTarget_Parms, NULL );

	pFnLockTarget->FunctionFlags |= 0x400;

	return LockTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetFractionOfEffectsMaterialEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPawn::GetFractionOfEffectsMaterialEnabled ( )
{
	static UFunction* pFnGetFractionOfEffectsMaterialEnabled = NULL;

	if ( ! pFnGetFractionOfEffectsMaterialEnabled )
		pFnGetFractionOfEffectsMaterialEnabled = (UFunction*) UObject::GObjObjects()->Data[ 46000 ];

	ABioPawn_execGetFractionOfEffectsMaterialEnabled_Parms GetFractionOfEffectsMaterialEnabled_Parms;

	pFnGetFractionOfEffectsMaterialEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFractionOfEffectsMaterialEnabled, &GetFractionOfEffectsMaterialEnabled_Parms, NULL );

	pFnGetFractionOfEffectsMaterialEnabled->FunctionFlags |= 0x400;

	return GetFractionOfEffectsMaterialEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetFractionOfEffectsMaterialEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          FractionEnabled                ( CPF_Parm )

void ABioPawn::SetFractionOfEffectsMaterialEnabled ( float FractionEnabled )
{
	static UFunction* pFnSetFractionOfEffectsMaterialEnabled = NULL;

	if ( ! pFnSetFractionOfEffectsMaterialEnabled )
		pFnSetFractionOfEffectsMaterialEnabled = (UFunction*) UObject::GObjObjects()->Data[ 45998 ];

	ABioPawn_execSetFractionOfEffectsMaterialEnabled_Parms SetFractionOfEffectsMaterialEnabled_Parms;
	SetFractionOfEffectsMaterialEnabled_Parms.FractionEnabled = FractionEnabled;

	pFnSetFractionOfEffectsMaterialEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFractionOfEffectsMaterialEnabled, &SetFractionOfEffectsMaterialEnabled_Parms, NULL );

	pFnSetFractionOfEffectsMaterialEnabled->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetEffectsMaterialType
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  Component                      ( CPF_OptionalParm | CPF_Parm | CPF_EditInline )

unsigned char ABioPawn::GetEffectsMaterialType ( class USkeletalMeshComponent* Component )
{
	static UFunction* pFnGetEffectsMaterialType = NULL;

	if ( ! pFnGetEffectsMaterialType )
		pFnGetEffectsMaterialType = (UFunction*) UObject::GObjObjects()->Data[ 45995 ];

	ABioPawn_execGetEffectsMaterialType_Parms GetEffectsMaterialType_Parms;
	GetEffectsMaterialType_Parms.Component = Component;

	pFnGetEffectsMaterialType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEffectsMaterialType, &GetEffectsMaterialType_Parms, NULL );

	pFnGetEffectsMaterialType->FunctionFlags |= 0x400;

	return GetEffectsMaterialType_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetEffectsMaterialType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  EffectsMaterialType            ( CPF_Parm )

void ABioPawn::SetEffectsMaterialType ( unsigned char EffectsMaterialType )
{
	static UFunction* pFnSetEffectsMaterialType = NULL;

	if ( ! pFnSetEffectsMaterialType )
		pFnSetEffectsMaterialType = (UFunction*) UObject::GObjObjects()->Data[ 45993 ];

	ABioPawn_execSetEffectsMaterialType_Parms SetEffectsMaterialType_Parms;
	SetEffectsMaterialType_Parms.EffectsMaterialType = EffectsMaterialType;

	pFnSetEffectsMaterialType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEffectsMaterialType, &SetEffectsMaterialType_Parms, NULL );

	pFnSetEffectsMaterialType->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.InitializeForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::InitializeForPlay ( )
{
	static UFunction* pFnInitializeForPlay = NULL;

	if ( ! pFnInitializeForPlay )
		pFnInitializeForPlay = (UFunction*) UObject::GObjObjects()->Data[ 45992 ];

	ABioPawn_execInitializeForPlay_Parms InitializeForPlay_Parms;

	pFnInitializeForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForPlay, &InitializeForPlay_Parms, NULL );

	pFnInitializeForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CancelCapability
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioCapability*          oCapability                    ( CPF_Parm )

void ABioPawn::CancelCapability ( class UBioCapability* oCapability )
{
	static UFunction* pFnCancelCapability = NULL;

	if ( ! pFnCancelCapability )
		pFnCancelCapability = (UFunction*) UObject::GObjObjects()->Data[ 45990 ];

	ABioPawn_execCancelCapability_Parms CancelCapability_Parms;
	CancelCapability_Parms.oCapability = oCapability;

	pFnCancelCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelCapability, &CancelCapability_Parms, NULL );

	pFnCancelCapability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.GetCapabilityPowerBuildUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioPawn::GetCapabilityPowerBuildUp ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityPowerBuildUp = NULL;

	if ( ! pFnGetCapabilityPowerBuildUp )
		pFnGetCapabilityPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 45987 ];

	ABioPawn_execGetCapabilityPowerBuildUp_Parms GetCapabilityPowerBuildUp_Parms;
	GetCapabilityPowerBuildUp_Parms.oCapability = oCapability;

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityPowerBuildUp, &GetCapabilityPowerBuildUp_Parms, NULL );

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= 0x400;

	return GetCapabilityPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetCapabilityImpactRadius
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioPawn::GetCapabilityImpactRadius ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityImpactRadius = NULL;

	if ( ! pFnGetCapabilityImpactRadius )
		pFnGetCapabilityImpactRadius = (UFunction*) UObject::GObjObjects()->Data[ 45984 ];

	ABioPawn_execGetCapabilityImpactRadius_Parms GetCapabilityImpactRadius_Parms;
	GetCapabilityImpactRadius_Parms.oCapability = oCapability;

	pFnGetCapabilityImpactRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityImpactRadius, &GetCapabilityImpactRadius_Parms, NULL );

	pFnGetCapabilityImpactRadius->FunctionFlags |= 0x400;

	return GetCapabilityImpactRadius_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetCapabilityIsEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

bool ABioPawn::GetCapabilityIsEnabled ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityIsEnabled = NULL;

	if ( ! pFnGetCapabilityIsEnabled )
		pFnGetCapabilityIsEnabled = (UFunction*) UObject::GObjObjects()->Data[ 45981 ];

	ABioPawn_execGetCapabilityIsEnabled_Parms GetCapabilityIsEnabled_Parms;
	GetCapabilityIsEnabled_Parms.oCapability = oCapability;

	pFnGetCapabilityIsEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityIsEnabled, &GetCapabilityIsEnabled_Parms, NULL );

	pFnGetCapabilityIsEnabled->FunctionFlags |= 0x400;

	return GetCapabilityIsEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetCapabilityCoolDownTimeRemaining
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioPawn::GetCapabilityCoolDownTimeRemaining ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityCoolDownTimeRemaining = NULL;

	if ( ! pFnGetCapabilityCoolDownTimeRemaining )
		pFnGetCapabilityCoolDownTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 45978 ];

	ABioPawn_execGetCapabilityCoolDownTimeRemaining_Parms GetCapabilityCoolDownTimeRemaining_Parms;
	GetCapabilityCoolDownTimeRemaining_Parms.oCapability = oCapability;

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityCoolDownTimeRemaining, &GetCapabilityCoolDownTimeRemaining_Parms, NULL );

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= 0x400;

	return GetCapabilityCoolDownTimeRemaining_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.HasCapability
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

bool ABioPawn::HasCapability ( class UBioCapability* oCapability )
{
	static UFunction* pFnHasCapability = NULL;

	if ( ! pFnHasCapability )
		pFnHasCapability = (UFunction*) UObject::GObjObjects()->Data[ 45975 ];

	ABioPawn_execHasCapability_Parms HasCapability_Parms;
	HasCapability_Parms.oCapability = oCapability;

	pFnHasCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasCapability, &HasCapability_Parms, NULL );

	pFnHasCapability->FunctionFlags |= 0x400;

	return HasCapability_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.AddCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioPawn::AddCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnAddCapability = NULL;

	if ( ! pFnAddCapability )
		pFnAddCapability = (UFunction*) UObject::GObjObjects()->Data[ 45967 ];

	ABioPawn_execAddCapability_Parms AddCapability_Parms;
	AddCapability_Parms.oCapability = oCapability;
	AddCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	AddCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	AddCapability_Parms.fTimeOut = fTimeOut;
	AddCapability_Parms.oTarget = oTarget;
	memcpy ( &AddCapability_Parms.vTarget, &vTarget, 0xC );

	pFnAddCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCapability, &AddCapability_Parms, NULL );

	pFnAddCapability->FunctionFlags |= 0x400;

	return AddCapability_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.DoCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioPawn::DoCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnDoCapability = NULL;

	if ( ! pFnDoCapability )
		pFnDoCapability = (UFunction*) UObject::GObjObjects()->Data[ 45959 ];

	ABioPawn_execDoCapability_Parms DoCapability_Parms;
	DoCapability_Parms.oCapability = oCapability;
	DoCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	DoCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	DoCapability_Parms.fTimeOut = fTimeOut;
	DoCapability_Parms.oTarget = oTarget;
	memcpy ( &DoCapability_Parms.vTarget, &vTarget, 0xC );

	pFnDoCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCapability, &DoCapability_Parms, NULL );

	pFnDoCapability->FunctionFlags |= 0x400;

	return DoCapability_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.AppendPawnCapabilitiesToList
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  nCapType                       ( CPF_Parm )
// struct TArray<class UBioCapability*> oOutCaps                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioPawn::AppendPawnCapabilitiesToList ( unsigned char nCapType, struct TArray<class UBioCapability*>* oOutCaps )
{
	static UFunction* pFnAppendPawnCapabilitiesToList = NULL;

	if ( ! pFnAppendPawnCapabilitiesToList )
		pFnAppendPawnCapabilitiesToList = (UFunction*) UObject::GObjObjects()->Data[ 45955 ];

	ABioPawn_execAppendPawnCapabilitiesToList_Parms AppendPawnCapabilitiesToList_Parms;
	AppendPawnCapabilitiesToList_Parms.nCapType = nCapType;

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAppendPawnCapabilitiesToList, &AppendPawnCapabilitiesToList_Parms, NULL );

	pFnAppendPawnCapabilitiesToList->FunctionFlags |= 0x400;

	if ( oOutCaps )
		memcpy ( oOutCaps, &AppendPawnCapabilitiesToList_Parms.oOutCaps, 0x10 );
};

// Function SFXGame.BioPawn.RecomputeCapabilities
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::RecomputeCapabilities ( )
{
	static UFunction* pFnRecomputeCapabilities = NULL;

	if ( ! pFnRecomputeCapabilities )
		pFnRecomputeCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 45954 ];

	ABioPawn_execRecomputeCapabilities_Parms RecomputeCapabilities_Parms;

	pFnRecomputeCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecomputeCapabilities, &RecomputeCapabilities_Parms, NULL );

	pFnRecomputeCapabilities->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.IsDead
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsDead ( )
{
	static UFunction* pFnIsDead = NULL;

	if ( ! pFnIsDead )
		pFnIsDead = (UFunction*) UObject::GObjObjects()->Data[ 43791 ];

	ABioPawn_execIsDead_Parms IsDead_Parms;

	pFnIsDead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDead, &IsDead_Parms, NULL );

	pFnIsDead->FunctionFlags |= 0x400;

	return IsDead_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.AnimNodeBlendComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   sBlendName                     ( CPF_Parm )
// int                            nChild                         ( CPF_Parm )

void ABioPawn::AnimNodeBlendComplete ( struct FName sBlendName, int nChild )
{
	static UFunction* pFnAnimNodeBlendComplete = NULL;

	if ( ! pFnAnimNodeBlendComplete )
		pFnAnimNodeBlendComplete = (UFunction*) UObject::GObjObjects()->Data[ 45951 ];

	ABioPawn_execAnimNodeBlendComplete_Parms AnimNodeBlendComplete_Parms;
	memcpy ( &AnimNodeBlendComplete_Parms.sBlendName, &sBlendName, 0x8 );
	AnimNodeBlendComplete_Parms.nChild = nChild;

	pFnAnimNodeBlendComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimNodeBlendComplete, &AnimNodeBlendComplete_Parms, NULL );

	pFnAnimNodeBlendComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.AnimNodePlayFinished
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   sBlendName                     ( CPF_Parm )

void ABioPawn::AnimNodePlayFinished ( struct FName sBlendName )
{
	static UFunction* pFnAnimNodePlayFinished = NULL;

	if ( ! pFnAnimNodePlayFinished )
		pFnAnimNodePlayFinished = (UFunction*) UObject::GObjObjects()->Data[ 45949 ];

	ABioPawn_execAnimNodePlayFinished_Parms AnimNodePlayFinished_Parms;
	memcpy ( &AnimNodePlayFinished_Parms.sBlendName, &sBlendName, 0x8 );

	pFnAnimNodePlayFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimNodePlayFinished, &AnimNodePlayFinished_Parms, NULL );

	pFnAnimNodePlayFinished->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CanPlayAnimNode
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   sBlendName                     ( CPF_Parm )
// int                            nFlags                         ( CPF_Parm )
// float                          fWeight                        ( CPF_Parm | CPF_OutParm )

bool ABioPawn::CanPlayAnimNode ( struct FName sBlendName, int nFlags, float* fWeight )
{
	static UFunction* pFnCanPlayAnimNode = NULL;

	if ( ! pFnCanPlayAnimNode )
		pFnCanPlayAnimNode = (UFunction*) UObject::GObjObjects()->Data[ 45944 ];

	ABioPawn_execCanPlayAnimNode_Parms CanPlayAnimNode_Parms;
	memcpy ( &CanPlayAnimNode_Parms.sBlendName, &sBlendName, 0x8 );
	CanPlayAnimNode_Parms.nFlags = nFlags;

	pFnCanPlayAnimNode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPlayAnimNode, &CanPlayAnimNode_Parms, NULL );

	pFnCanPlayAnimNode->FunctionFlags |= 0x400;

	if ( fWeight )
		*fWeight = CanPlayAnimNode_Parms.fWeight;

	return CanPlayAnimNode_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetAnimLengthAndPos
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   sAnimName                      ( CPF_Parm )
// float                          fAnimLength                    ( CPF_Parm | CPF_OutParm )
// float                          fAnimPos                       ( CPF_Parm | CPF_OutParm )

bool ABioPawn::GetAnimLengthAndPos ( struct FName sAnimName, float* fAnimLength, float* fAnimPos )
{
	static UFunction* pFnGetAnimLengthAndPos = NULL;

	if ( ! pFnGetAnimLengthAndPos )
		pFnGetAnimLengthAndPos = (UFunction*) UObject::GObjObjects()->Data[ 45939 ];

	ABioPawn_execGetAnimLengthAndPos_Parms GetAnimLengthAndPos_Parms;
	memcpy ( &GetAnimLengthAndPos_Parms.sAnimName, &sAnimName, 0x8 );

	pFnGetAnimLengthAndPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAnimLengthAndPos, &GetAnimLengthAndPos_Parms, NULL );

	pFnGetAnimLengthAndPos->FunctionFlags |= 0x400;

	if ( fAnimLength )
		*fAnimLength = GetAnimLengthAndPos_Parms.fAnimLength;

	if ( fAnimPos )
		*fAnimPos = GetAnimLengthAndPos_Parms.fAnimPos;

	return GetAnimLengthAndPos_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsAnimOnRightFoot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bCycle                         ( CPF_Parm )

bool ABioPawn::IsAnimOnRightFoot ( unsigned long bCycle )
{
	static UFunction* pFnIsAnimOnRightFoot = NULL;

	if ( ! pFnIsAnimOnRightFoot )
		pFnIsAnimOnRightFoot = (UFunction*) UObject::GObjObjects()->Data[ 45936 ];

	ABioPawn_execIsAnimOnRightFoot_Parms IsAnimOnRightFoot_Parms;
	IsAnimOnRightFoot_Parms.bCycle = bCycle;

	pFnIsAnimOnRightFoot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAnimOnRightFoot, &IsAnimOnRightFoot_Parms, NULL );

	pFnIsAnimOnRightFoot->FunctionFlags |= 0x400;

	return IsAnimOnRightFoot_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.RequestTurnInPlace
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                rDesDir                        ( CPF_Parm )

bool ABioPawn::RequestTurnInPlace ( struct FRotator rDesDir )
{
	static UFunction* pFnRequestTurnInPlace = NULL;

	if ( ! pFnRequestTurnInPlace )
		pFnRequestTurnInPlace = (UFunction*) UObject::GObjObjects()->Data[ 45933 ];

	ABioPawn_execRequestTurnInPlace_Parms RequestTurnInPlace_Parms;
	memcpy ( &RequestTurnInPlace_Parms.rDesDir, &rDesDir, 0xC );

	pFnRequestTurnInPlace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestTurnInPlace, &RequestTurnInPlace_Parms, NULL );

	pFnRequestTurnInPlace->FunctionFlags |= 0x400;

	return RequestTurnInPlace_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.StartAnimStartMove
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioPawn::StartAnimStartMove ( )
{
	static UFunction* pFnStartAnimStartMove = NULL;

	if ( ! pFnStartAnimStartMove )
		pFnStartAnimStartMove = (UFunction*) UObject::GObjObjects()->Data[ 45932 ];

	ABioPawn_execStartAnimStartMove_Parms StartAnimStartMove_Parms;

	pFnStartAnimStartMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartAnimStartMove, &StartAnimStartMove_Parms, NULL );

	pFnStartAnimStartMove->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CanAnimMoveStop
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )

bool ABioPawn::CanAnimMoveStop ( float fDeltaTime )
{
	static UFunction* pFnCanAnimMoveStop = NULL;

	if ( ! pFnCanAnimMoveStop )
		pFnCanAnimMoveStop = (UFunction*) UObject::GObjObjects()->Data[ 45929 ];

	ABioPawn_execCanAnimMoveStop_Parms CanAnimMoveStop_Parms;
	CanAnimMoveStop_Parms.fDeltaTime = fDeltaTime;

	pFnCanAnimMoveStop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanAnimMoveStop, &CanAnimMoveStop_Parms, NULL );

	pFnCanAnimMoveStop->FunctionFlags |= 0x400;

	return CanAnimMoveStop_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CanAnimSkidTurn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::CanAnimSkidTurn ( )
{
	static UFunction* pFnCanAnimSkidTurn = NULL;

	if ( ! pFnCanAnimSkidTurn )
		pFnCanAnimSkidTurn = (UFunction*) UObject::GObjObjects()->Data[ 45927 ];

	ABioPawn_execCanAnimSkidTurn_Parms CanAnimSkidTurn_Parms;

	pFnCanAnimSkidTurn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanAnimSkidTurn, &CanAnimSkidTurn_Parms, NULL );

	pFnCanAnimSkidTurn->FunctionFlags |= 0x400;

	return CanAnimSkidTurn_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CanAnimMoveStart
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// unsigned long                  bIgnoreSpeedAndTime            ( CPF_OptionalParm | CPF_Parm )

bool ABioPawn::CanAnimMoveStart ( float fDeltaTime, unsigned long bIgnoreSpeedAndTime )
{
	static UFunction* pFnCanAnimMoveStart = NULL;

	if ( ! pFnCanAnimMoveStart )
		pFnCanAnimMoveStart = (UFunction*) UObject::GObjObjects()->Data[ 45923 ];

	ABioPawn_execCanAnimMoveStart_Parms CanAnimMoveStart_Parms;
	CanAnimMoveStart_Parms.fDeltaTime = fDeltaTime;
	CanAnimMoveStart_Parms.bIgnoreSpeedAndTime = bIgnoreSpeedAndTime;

	pFnCanAnimMoveStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanAnimMoveStart, &CanAnimMoveStart_Parms, NULL );

	pFnCanAnimMoveStart->FunctionFlags |= 0x400;

	return CanAnimMoveStart_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.TickMoveControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ABioPawn::TickMoveControl ( float fDeltaTime )
{
	static UFunction* pFnTickMoveControl = NULL;

	if ( ! pFnTickMoveControl )
		pFnTickMoveControl = (UFunction*) UObject::GObjObjects()->Data[ 45921 ];

	ABioPawn_execTickMoveControl_Parms TickMoveControl_Parms;
	TickMoveControl_Parms.fDeltaTime = fDeltaTime;

	pFnTickMoveControl->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickMoveControl, &TickMoveControl_Parms, NULL );

	pFnTickMoveControl->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CalcYawDifference
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                rDesDir                        ( CPF_Parm )
// float                          fDir                           ( CPF_Parm | CPF_OutParm )

float ABioPawn::CalcYawDifference ( struct FRotator rDesDir, float* fDir )
{
	static UFunction* pFnCalcYawDifference = NULL;

	if ( ! pFnCalcYawDifference )
		pFnCalcYawDifference = (UFunction*) UObject::GObjObjects()->Data[ 45917 ];

	ABioPawn_execCalcYawDifference_Parms CalcYawDifference_Parms;
	memcpy ( &CalcYawDifference_Parms.rDesDir, &rDesDir, 0xC );

	pFnCalcYawDifference->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcYawDifference, &CalcYawDifference_Parms, NULL );

	pFnCalcYawDifference->FunctionFlags |= 0x400;

	if ( fDir )
		*fDir = CalcYawDifference_Parms.fDir;

	return CalcYawDifference_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CalcYawInterpolation
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FRotator                rDesDir                        ( CPF_Parm )
// float                          fDegPerSec                     ( CPF_Parm )
// float                          fDeltaYaw                      ( CPF_Parm | CPF_OutParm )

bool ABioPawn::CalcYawInterpolation ( float fDeltaTime, struct FRotator rDesDir, float fDegPerSec, float* fDeltaYaw )
{
	static UFunction* pFnCalcYawInterpolation = NULL;

	if ( ! pFnCalcYawInterpolation )
		pFnCalcYawInterpolation = (UFunction*) UObject::GObjObjects()->Data[ 45911 ];

	ABioPawn_execCalcYawInterpolation_Parms CalcYawInterpolation_Parms;
	CalcYawInterpolation_Parms.fDeltaTime = fDeltaTime;
	memcpy ( &CalcYawInterpolation_Parms.rDesDir, &rDesDir, 0xC );
	CalcYawInterpolation_Parms.fDegPerSec = fDegPerSec;

	pFnCalcYawInterpolation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcYawInterpolation, &CalcYawInterpolation_Parms, NULL );

	pFnCalcYawInterpolation->FunctionFlags |= 0x400;

	if ( fDeltaYaw )
		*fDeltaYaw = CalcYawInterpolation_Parms.fDeltaYaw;

	return CalcYawInterpolation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.CalcSpeedInterpolation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// float                          fDesiredSpeed                  ( CPF_Parm )
// float                          fDeltaSpeed                    ( CPF_Parm | CPF_OutParm )

bool ABioPawn::CalcSpeedInterpolation ( float fDeltaTime, float fDesiredSpeed, float* fDeltaSpeed )
{
	static UFunction* pFnCalcSpeedInterpolation = NULL;

	if ( ! pFnCalcSpeedInterpolation )
		pFnCalcSpeedInterpolation = (UFunction*) UObject::GObjObjects()->Data[ 45906 ];

	ABioPawn_execCalcSpeedInterpolation_Parms CalcSpeedInterpolation_Parms;
	CalcSpeedInterpolation_Parms.fDeltaTime = fDeltaTime;
	CalcSpeedInterpolation_Parms.fDesiredSpeed = fDesiredSpeed;

	pFnCalcSpeedInterpolation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcSpeedInterpolation, &CalcSpeedInterpolation_Parms, NULL );

	pFnCalcSpeedInterpolation->FunctionFlags |= 0x400;

	if ( fDeltaSpeed )
		*fDeltaSpeed = CalcSpeedInterpolation_Parms.fDeltaSpeed;

	return CalcSpeedInterpolation_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.GetRotationRate
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            nPitch                         ( CPF_Parm | CPF_OutParm )
// int                            nYaw                           ( CPF_Parm | CPF_OutParm )
// int                            nRoll                          ( CPF_Parm | CPF_OutParm )

void ABioPawn::GetRotationRate ( int* nPitch, int* nYaw, int* nRoll )
{
	static UFunction* pFnGetRotationRate = NULL;

	if ( ! pFnGetRotationRate )
		pFnGetRotationRate = (UFunction*) UObject::GObjObjects()->Data[ 45902 ];

	ABioPawn_execGetRotationRate_Parms GetRotationRate_Parms;

	pFnGetRotationRate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRotationRate, &GetRotationRate_Parms, NULL );

	pFnGetRotationRate->FunctionFlags |= 0x400;

	if ( nPitch )
		*nPitch = GetRotationRate_Parms.nPitch;

	if ( nYaw )
		*nYaw = GetRotationRate_Parms.nYaw;

	if ( nRoll )
		*nRoll = GetRotationRate_Parms.nRoll;
};

// Function SFXGame.BioPawn.GetMaxSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPawn::GetMaxSpeed ( )
{
	static UFunction* pFnGetMaxSpeed = NULL;

	if ( ! pFnGetMaxSpeed )
		pFnGetMaxSpeed = (UFunction*) UObject::GObjObjects()->Data[ 45900 ];

	ABioPawn_execGetMaxSpeed_Parms GetMaxSpeed_Parms;

	pFnGetMaxSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxSpeed, &GetMaxSpeed_Parms, NULL );

	pFnGetMaxSpeed->FunctionFlags |= 0x400;

	return GetMaxSpeed_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.SetDesiredRotation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                rDesiredRotation               ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ABioPawn::SetDesiredRotation ( struct FRotator rDesiredRotation, unsigned long bForce )
{
	static UFunction* pFnSetDesiredRotation = NULL;

	if ( ! pFnSetDesiredRotation )
		pFnSetDesiredRotation = (UFunction*) UObject::GObjObjects()->Data[ 45897 ];

	ABioPawn_execSetDesiredRotation_Parms SetDesiredRotation_Parms;
	memcpy ( &SetDesiredRotation_Parms.rDesiredRotation, &rDesiredRotation, 0xC );
	SetDesiredRotation_Parms.bForce = bForce;

	pFnSetDesiredRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDesiredRotation, &SetDesiredRotation_Parms, NULL );

	pFnSetDesiredRotation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetDesiredSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDesiredSpeed                  ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_Parm )

void ABioPawn::SetDesiredSpeed ( float fDesiredSpeed, unsigned long bForce )
{
	static UFunction* pFnSetDesiredSpeed = NULL;

	if ( ! pFnSetDesiredSpeed )
		pFnSetDesiredSpeed = (UFunction*) UObject::GObjObjects()->Data[ 45894 ];

	ABioPawn_execSetDesiredSpeed_Parms SetDesiredSpeed_Parms;
	SetDesiredSpeed_Parms.fDesiredSpeed = fDesiredSpeed;
	SetDesiredSpeed_Parms.bForce = bForce;

	pFnSetDesiredSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDesiredSpeed, &SetDesiredSpeed_Parms, NULL );

	pFnSetDesiredSpeed->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.CanRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::CanRagdoll ( )
{
	static UFunction* pFnCanRagdoll = NULL;

	if ( ! pFnCanRagdoll )
		pFnCanRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 45892 ];

	ABioPawn_execCanRagdoll_Parms CanRagdoll_Parms;

	pFnCanRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanRagdoll, &CanRagdoll_Parms, NULL );

	pFnCanRagdoll->FunctionFlags |= 0x400;

	return CanRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.TermRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::TermRagdoll ( )
{
	static UFunction* pFnTermRagdoll = NULL;

	if ( ! pFnTermRagdoll )
		pFnTermRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 45605 ];

	ABioPawn_execTermRagdoll_Parms TermRagdoll_Parms;

	pFnTermRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTermRagdoll, &TermRagdoll_Parms, NULL );

	pFnTermRagdoll->FunctionFlags |= 0x400;

	return TermRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.InitRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::InitRagdoll ( )
{
	static UFunction* pFnInitRagdoll = NULL;

	if ( ! pFnInitRagdoll )
		pFnInitRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 45291 ];

	ABioPawn_execInitRagdoll_Parms InitRagdoll_Parms;

	pFnInitRagdoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRagdoll, &InitRagdoll_Parms, NULL );

	pFnInitRagdoll->FunctionFlags |= 0x400;

	return InitRagdoll_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.IsFalling
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPawn::IsFalling ( )
{
	static UFunction* pFnIsFalling = NULL;

	if ( ! pFnIsFalling )
		pFnIsFalling = (UFunction*) UObject::GObjObjects()->Data[ 45890 ];

	ABioPawn_execIsFalling_Parms IsFalling_Parms;

	pFnIsFalling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFalling, &IsFalling_Parms, NULL );

	pFnIsFalling->FunctionFlags |= 0x400;

	return IsFalling_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.UnapplyMaterialParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioMaterialOverride*    pMaterialParameters            ( CPF_Parm )

void ABioPawn::UnapplyMaterialParameters ( class UBioMaterialOverride* pMaterialParameters )
{
	static UFunction* pFnUnapplyMaterialParameters = NULL;

	if ( ! pFnUnapplyMaterialParameters )
		pFnUnapplyMaterialParameters = (UFunction*) UObject::GObjObjects()->Data[ 45888 ];

	ABioPawn_execUnapplyMaterialParameters_Parms UnapplyMaterialParameters_Parms;
	UnapplyMaterialParameters_Parms.pMaterialParameters = pMaterialParameters;

	pFnUnapplyMaterialParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapplyMaterialParameters, &UnapplyMaterialParameters_Parms, NULL );

	pFnUnapplyMaterialParameters->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.ApplyMaterialParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioMaterialOverride*    pMaterialParameters            ( CPF_Parm )

void ABioPawn::ApplyMaterialParameters ( class UBioMaterialOverride* pMaterialParameters )
{
	static UFunction* pFnApplyMaterialParameters = NULL;

	if ( ! pFnApplyMaterialParameters )
		pFnApplyMaterialParameters = (UFunction*) UObject::GObjObjects()->Data[ 45886 ];

	ABioPawn_execApplyMaterialParameters_Parms ApplyMaterialParameters_Parms;
	ApplyMaterialParameters_Parms.pMaterialParameters = pMaterialParameters;

	pFnApplyMaterialParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyMaterialParameters, &ApplyMaterialParameters_Parms, NULL );

	pFnApplyMaterialParameters->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetTextureParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// class UTexture*                Value                          ( CPF_Parm )

void ABioPawn::SetTextureParameterValue ( struct FName ParameterName, class UTexture* Value )
{
	static UFunction* pFnSetTextureParameterValue = NULL;

	if ( ! pFnSetTextureParameterValue )
		pFnSetTextureParameterValue = (UFunction*) UObject::GObjObjects()->Data[ 45883 ];

	ABioPawn_execSetTextureParameterValue_Parms SetTextureParameterValue_Parms;
	memcpy ( &SetTextureParameterValue_Parms.ParameterName, &ParameterName, 0x8 );
	SetTextureParameterValue_Parms.Value = Value;

	pFnSetTextureParameterValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTextureParameterValue, &SetTextureParameterValue_Parms, NULL );

	pFnSetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetScalarParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void ABioPawn::SetScalarParameterValue ( struct FName ParameterName, float Value )
{
	static UFunction* pFnSetScalarParameterValue = NULL;

	if ( ! pFnSetScalarParameterValue )
		pFnSetScalarParameterValue = (UFunction*) UObject::GObjObjects()->Data[ 45880 ];

	ABioPawn_execSetScalarParameterValue_Parms SetScalarParameterValue_Parms;
	memcpy ( &SetScalarParameterValue_Parms.ParameterName, &ParameterName, 0x8 );
	SetScalarParameterValue_Parms.Value = Value;

	pFnSetScalarParameterValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalarParameterValue, &SetScalarParameterValue_Parms, NULL );

	pFnSetScalarParameterValue->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawn.SetVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// struct FColor                  Value                          ( CPF_Const | CPF_Parm | CPF_OutParm )

void ABioPawn::SetVectorParameterValue ( struct FName ParameterName, struct FColor* Value )
{
	static UFunction* pFnSetVectorParameterValue = NULL;

	if ( ! pFnSetVectorParameterValue )
		pFnSetVectorParameterValue = (UFunction*) UObject::GObjObjects()->Data[ 45877 ];

	ABioPawn_execSetVectorParameterValue_Parms SetVectorParameterValue_Parms;
	memcpy ( &SetVectorParameterValue_Parms.ParameterName, &ParameterName, 0x8 );

	pFnSetVectorParameterValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVectorParameterValue, &SetVectorParameterValue_Parms, NULL );

	pFnSetVectorParameterValue->FunctionFlags |= 0x400;

	if ( Value )
		memcpy ( Value, &SetVectorParameterValue_Parms.Value, 0x4 );
};

// Function SFXGame.BioPawn.GetStepOutRelativeLocationToTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 OutVector                      ( CPF_Parm | CPF_OutParm )

bool ABioPawn::GetStepOutRelativeLocationToTarget ( class AActor* Other, struct FVector* OutVector )
{
	static UFunction* pFnGetStepOutRelativeLocationToTarget = NULL;

	if ( ! pFnGetStepOutRelativeLocationToTarget )
		pFnGetStepOutRelativeLocationToTarget = (UFunction*) UObject::GObjObjects()->Data[ 44379 ];

	ABioPawn_execGetStepOutRelativeLocationToTarget_Parms GetStepOutRelativeLocationToTarget_Parms;
	GetStepOutRelativeLocationToTarget_Parms.Other = Other;

	pFnGetStepOutRelativeLocationToTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStepOutRelativeLocationToTarget, &GetStepOutRelativeLocationToTarget_Parms, NULL );

	pFnGetStepOutRelativeLocationToTarget->FunctionFlags |= 0x400;

	if ( OutVector )
		memcpy ( OutVector, &GetStepOutRelativeLocationToTarget_Parms.OutVector, 0xC );

	return GetStepOutRelativeLocationToTarget_Parms.ReturnValue;
};

// Function SFXGame.BioPawn.ClearCoverState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPawn::ClearCoverState ( )
{
	static UFunction* pFnClearCoverState = NULL;

	if ( ! pFnClearCoverState )
		pFnClearCoverState = (UFunction*) UObject::GObjObjects()->Data[ 45874 ];

	ABioPawn_execClearCoverState_Parms ClearCoverState_Parms;

	pFnClearCoverState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearCoverState, &ClearCoverState_Parms, NULL );

	pFnClearCoverState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnItemInterface.PrevQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnItemInterface::PrevQuickSlot ( )
{
	static UFunction* pFnPrevQuickSlot = NULL;

	if ( ! pFnPrevQuickSlot )
		pFnPrevQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44878 ];

	UBioPawnItemInterface_execPrevQuickSlot_Parms PrevQuickSlot_Parms;

	pFnPrevQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrevQuickSlot, &PrevQuickSlot_Parms, NULL );

	pFnPrevQuickSlot->FunctionFlags |= 0x400;

	return PrevQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.NextQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnItemInterface::NextQuickSlot ( )
{
	static UFunction* pFnNextQuickSlot = NULL;

	if ( ! pFnNextQuickSlot )
		pFnNextQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44876 ];

	UBioPawnItemInterface_execNextQuickSlot_Parms NextQuickSlot_Parms;

	pFnNextQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNextQuickSlot, &NextQuickSlot_Parms, NULL );

	pFnNextQuickSlot->FunctionFlags |= 0x400;

	return NextQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.ChangeToQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eSlot                          ( CPF_Parm )

void UBioPawnItemInterface::ChangeToQuickSlot ( unsigned char eSlot )
{
	static UFunction* pFnChangeToQuickSlot = NULL;

	if ( ! pFnChangeToQuickSlot )
		pFnChangeToQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44874 ];

	UBioPawnItemInterface_execChangeToQuickSlot_Parms ChangeToQuickSlot_Parms;
	ChangeToQuickSlot_Parms.eSlot = eSlot;

	pFnChangeToQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeToQuickSlot, &ChangeToQuickSlot_Parms, NULL );

	pFnChangeToQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnItemInterface.DeactivateCurrentQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnItemInterface::DeactivateCurrentQuickSlot ( )
{
	static UFunction* pFnDeactivateCurrentQuickSlot = NULL;

	if ( ! pFnDeactivateCurrentQuickSlot )
		pFnDeactivateCurrentQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44873 ];

	UBioPawnItemInterface_execDeactivateCurrentQuickSlot_Parms DeactivateCurrentQuickSlot_Parms;

	pFnDeactivateCurrentQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivateCurrentQuickSlot, &DeactivateCurrentQuickSlot_Parms, NULL );

	pFnDeactivateCurrentQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnItemInterface.ActivateCurrentQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioPawnItemInterface::ActivateCurrentQuickSlot ( )
{
	static UFunction* pFnActivateCurrentQuickSlot = NULL;

	if ( ! pFnActivateCurrentQuickSlot )
		pFnActivateCurrentQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44872 ];

	UBioPawnItemInterface_execActivateCurrentQuickSlot_Parms ActivateCurrentQuickSlot_Parms;

	pFnActivateCurrentQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateCurrentQuickSlot, &ActivateCurrentQuickSlot_Parms, NULL );

	pFnActivateCurrentQuickSlot->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPawnItemInterface.ClearQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )

int UBioPawnItemInterface::ClearQuickSlot ( unsigned char Type )
{
	static UFunction* pFnClearQuickSlot = NULL;

	if ( ! pFnClearQuickSlot )
		pFnClearQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44869 ];

	UBioPawnItemInterface_execClearQuickSlot_Parms ClearQuickSlot_Parms;
	ClearQuickSlot_Parms.Type = Type;

	pFnClearQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearQuickSlot, &ClearQuickSlot_Parms, NULL );

	pFnClearQuickSlot->FunctionFlags |= 0x400;

	return ClearQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.SetQuickSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )
// int                            nInvItem                       ( CPF_Parm )

int UBioPawnItemInterface::SetQuickSlot ( unsigned char Type, int nInvItem )
{
	static UFunction* pFnSetQuickSlot = NULL;

	if ( ! pFnSetQuickSlot )
		pFnSetQuickSlot = (UFunction*) UObject::GObjObjects()->Data[ 44865 ];

	UBioPawnItemInterface_execSetQuickSlot_Parms SetQuickSlot_Parms;
	SetQuickSlot_Parms.Type = Type;
	SetQuickSlot_Parms.nInvItem = nInvItem;

	pFnSetQuickSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetQuickSlot, &SetQuickSlot_Parms, NULL );

	pFnSetQuickSlot->FunctionFlags |= 0x400;

	return SetQuickSlot_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.UpdatePawnAppearance
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSlot                          ( CPF_Parm )
// class ABioPawn*                Pawn                           ( CPF_Parm )

bool UBioPawnItemInterface::UpdatePawnAppearance ( unsigned char eSlot, class ABioPawn* Pawn )
{
	static UFunction* pFnUpdatePawnAppearance = NULL;

	if ( ! pFnUpdatePawnAppearance )
		pFnUpdatePawnAppearance = (UFunction*) UObject::GObjObjects()->Data[ 44861 ];

	UBioPawnItemInterface_execUpdatePawnAppearance_Parms UpdatePawnAppearance_Parms;
	UpdatePawnAppearance_Parms.eSlot = eSlot;
	UpdatePawnAppearance_Parms.Pawn = Pawn;

	pFnUpdatePawnAppearance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePawnAppearance, &UpdatePawnAppearance_Parms, NULL );

	pFnUpdatePawnAppearance->FunctionFlags |= 0x400;

	return UpdatePawnAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.Unequip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSlot                          ( CPF_Parm )

int UBioPawnItemInterface::Unequip ( unsigned char eSlot )
{
	static UFunction* pFnUnequip = NULL;

	if ( ! pFnUnequip )
		pFnUnequip = (UFunction*) UObject::GObjObjects()->Data[ 44858 ];

	UBioPawnItemInterface_execUnequip_Parms Unequip_Parms;
	Unequip_Parms.eSlot = eSlot;

	pFnUnequip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnequip, &Unequip_Parms, NULL );

	pFnUnequip->FunctionFlags |= 0x400;

	return Unequip_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nItemIndex                     ( CPF_Parm )

int UBioPawnItemInterface::Equip ( int nItemIndex )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 44855 ];

	UBioPawnItemInterface_execEquip_Parms Equip_Parms;
	Equip_Parms.nItemIndex = nItemIndex;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;

	return Equip_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.CreateClassFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  clsBase                        ( CPF_Parm )
// struct FString                 sClass                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* UBioPawnItemInterface::CreateClassFromString ( class UClass* clsBase, struct FString sClass )
{
	static UFunction* pFnCreateClassFromString = NULL;

	if ( ! pFnCreateClassFromString )
		pFnCreateClassFromString = (UFunction*) UObject::GObjObjects()->Data[ 44851 ];

	UBioPawnItemInterface_execCreateClassFromString_Parms CreateClassFromString_Parms;
	CreateClassFromString_Parms.clsBase = clsBase;
	memcpy ( &CreateClassFromString_Parms.sClass, &sClass, 0x10 );

	pFnCreateClassFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateClassFromString, &CreateClassFromString_Parms, NULL );

	pFnCreateClassFromString->FunctionFlags |= 0x400;

	return CreateClassFromString_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.GetStringEntryIN
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 tbl                            ( CPF_Parm )
// int                            nRow                           ( CPF_Parm )
// struct FName                   nmColumn                       ( CPF_Parm )
// struct FString                 S                              ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioPawnItemInterface::GetStringEntryIN ( class UBio2DA* tbl, int nRow, struct FName nmColumn, struct FString* S )
{
	static UFunction* pFnGetStringEntryIN = NULL;

	if ( ! pFnGetStringEntryIN )
		pFnGetStringEntryIN = (UFunction*) UObject::GObjObjects()->Data[ 44845 ];

	UBioPawnItemInterface_execGetStringEntryIN_Parms GetStringEntryIN_Parms;
	GetStringEntryIN_Parms.tbl = tbl;
	GetStringEntryIN_Parms.nRow = nRow;
	memcpy ( &GetStringEntryIN_Parms.nmColumn, &nmColumn, 0x8 );

	pFnGetStringEntryIN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStringEntryIN, &GetStringEntryIN_Parms, NULL );

	pFnGetStringEntryIN->FunctionFlags |= 0x400;

	if ( S )
		memcpy ( S, &GetStringEntryIN_Parms.S, 0x10 );

	return GetStringEntryIN_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.GetIntEntryIN
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 tbl                            ( CPF_Parm )
// int                            nRow                           ( CPF_Parm )
// struct FName                   nmColumn                       ( CPF_Parm )
// int                            N                              ( CPF_Parm | CPF_OutParm )

bool UBioPawnItemInterface::GetIntEntryIN ( class UBio2DA* tbl, int nRow, struct FName nmColumn, int* N )
{
	static UFunction* pFnGetIntEntryIN = NULL;

	if ( ! pFnGetIntEntryIN )
		pFnGetIntEntryIN = (UFunction*) UObject::GObjObjects()->Data[ 44839 ];

	UBioPawnItemInterface_execGetIntEntryIN_Parms GetIntEntryIN_Parms;
	GetIntEntryIN_Parms.tbl = tbl;
	GetIntEntryIN_Parms.nRow = nRow;
	memcpy ( &GetIntEntryIN_Parms.nmColumn, &nmColumn, 0x8 );

	pFnGetIntEntryIN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntEntryIN, &GetIntEntryIN_Parms, NULL );

	pFnGetIntEntryIN->FunctionFlags |= 0x400;

	if ( N )
		*N = GetIntEntryIN_Parms.N;

	return GetIntEntryIN_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.GetNameEntryIN
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBio2DA*                 tbl                            ( CPF_Parm )
// int                            nRow                           ( CPF_Parm )
// struct FName                   nmColumn                       ( CPF_Parm )
// struct FName                   nm                             ( CPF_Parm | CPF_OutParm )

bool UBioPawnItemInterface::GetNameEntryIN ( class UBio2DA* tbl, int nRow, struct FName nmColumn, struct FName* nm )
{
	static UFunction* pFnGetNameEntryIN = NULL;

	if ( ! pFnGetNameEntryIN )
		pFnGetNameEntryIN = (UFunction*) UObject::GObjObjects()->Data[ 44833 ];

	UBioPawnItemInterface_execGetNameEntryIN_Parms GetNameEntryIN_Parms;
	GetNameEntryIN_Parms.tbl = tbl;
	GetNameEntryIN_Parms.nRow = nRow;
	memcpy ( &GetNameEntryIN_Parms.nmColumn, &nmColumn, 0x8 );

	pFnGetNameEntryIN->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNameEntryIN, &GetNameEntryIN_Parms, NULL );

	pFnGetNameEntryIN->FunctionFlags |= 0x400;

	if ( nm )
		memcpy ( nm, &GetNameEntryIN_Parms.nm, 0x8 );

	return GetNameEntryIN_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.IsArmored
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnItemInterface::eventIsArmored ( )
{
	static UFunction* pFnIsArmored = NULL;

	if ( ! pFnIsArmored )
		pFnIsArmored = (UFunction*) UObject::GObjObjects()->Data[ 44830 ];

	UBioPawnItemInterface_eventIsArmored_Parms IsArmored_Parms;

	this->ProcessEvent ( pFnIsArmored, &IsArmored_Parms, NULL );

	return IsArmored_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.EBioWeaponTypeOp
// [0x00520000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSlot                          ( CPF_Parm | CPF_OutParm )

bool UBioPawnItemInterface::EBioWeaponTypeOp ( unsigned char* eSlot )
{
	static UFunction* pFnEBioWeaponTypeOp = NULL;

	if ( ! pFnEBioWeaponTypeOp )
		pFnEBioWeaponTypeOp = (UFunction*) UObject::GObjObjects()->Data[ 44827 ];

	UBioPawnItemInterface_execEBioWeaponTypeOp_Parms EBioWeaponTypeOp_Parms;

	this->ProcessEvent ( pFnEBioWeaponTypeOp, &EBioWeaponTypeOp_Parms, NULL );

	if ( eSlot )
		*eSlot = EBioWeaponTypeOp_Parms.eSlot;

	return EBioWeaponTypeOp_Parms.ReturnValue;
};

// Function SFXGame.BioPawnItemInterface.QuickSlotIter
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioPawnItemInterface::QuickSlotIter ( )
{
	static UFunction* pFnQuickSlotIter = NULL;

	if ( ! pFnQuickSlotIter )
		pFnQuickSlotIter = (UFunction*) UObject::GObjObjects()->Data[ 44825 ];

	UBioPawnItemInterface_execQuickSlotIter_Parms QuickSlotIter_Parms;

	this->ProcessEvent ( pFnQuickSlotIter, &QuickSlotIter_Parms, NULL );

	return QuickSlotIter_Parms.ReturnValue;
};

// Function SFXGame.BioPhysicsActor.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )
// class UDamageType*             pDamage                        ( CPF_OptionalParm | CPF_Parm )

void ABioPhysicsActor::eventTakeDamage ( float Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser, class UDamageType* pDamage )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 56998 ];

	ABioPhysicsActor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x28 );
	TakeDamage_Parms.DamageCauser = DamageCauser;
	TakeDamage_Parms.pDamage = pDamage;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SFXGame.BioPhysicsActor.ChangeMaterialParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPhysicsActor::ChangeMaterialParameters ( )
{
	static UFunction* pFnChangeMaterialParameters = NULL;

	if ( ! pFnChangeMaterialParameters )
		pFnChangeMaterialParameters = (UFunction*) UObject::GObjObjects()->Data[ 56997 ];

	ABioPhysicsActor_execChangeMaterialParameters_Parms ChangeMaterialParameters_Parms;

	pFnChangeMaterialParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeMaterialParameters, &ChangeMaterialParameters_Parms, NULL );

	pFnChangeMaterialParameters->FunctionFlags |= 0x400;
};

// Function SFXGame.BioDiscoveredCodexMap.Clear
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioDiscoveredCodexMap::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 52845 ];

	UBioDiscoveredCodexMap_execClear_Parms Clear_Parms;

	pFnClear->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );

	pFnClear->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.ClearAllVariables
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioGlobalVariableTable::eventClearAllVariables ( )
{
	static UFunction* pFnClearAllVariables = NULL;

	if ( ! pFnClearAllVariables )
		pFnClearAllVariables = (UFunction*) UObject::GObjObjects()->Data[ 54030 ];

	UBioGlobalVariableTable_eventClearAllVariables_Parms ClearAllVariables_Parms;

	this->ProcessEvent ( pFnClearAllVariables, &ClearAllVariables_Parms, NULL );
};

// Function SFXGame.BioGlobalVariableTable.SetFloatByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmLabel                        ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void UBioGlobalVariableTable::SetFloatByName ( struct FName nmLabel, float fValue )
{
	static UFunction* pFnSetFloatByName = NULL;

	if ( ! pFnSetFloatByName )
		pFnSetFloatByName = (UFunction*) UObject::GObjObjects()->Data[ 54027 ];

	UBioGlobalVariableTable_execSetFloatByName_Parms SetFloatByName_Parms;
	memcpy ( &SetFloatByName_Parms.nmLabel, &nmLabel, 0x8 );
	SetFloatByName_Parms.fValue = fValue;

	pFnSetFloatByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatByName, &SetFloatByName_Parms, NULL );

	pFnSetFloatByName->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetFloatByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmLabel                        ( CPF_Parm )

float UBioGlobalVariableTable::GetFloatByName ( struct FName nmLabel )
{
	static UFunction* pFnGetFloatByName = NULL;

	if ( ! pFnGetFloatByName )
		pFnGetFloatByName = (UFunction*) UObject::GObjObjects()->Data[ 54024 ];

	UBioGlobalVariableTable_execGetFloatByName_Parms GetFloatByName_Parms;
	memcpy ( &GetFloatByName_Parms.nmLabel, &nmLabel, 0x8 );

	pFnGetFloatByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloatByName, &GetFloatByName_Parms, NULL );

	pFnGetFloatByName->FunctionFlags |= 0x400;

	return GetFloatByName_Parms.ReturnValue;
};

// Function SFXGame.BioGlobalVariableTable.SetIntByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmLabel                        ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioGlobalVariableTable::SetIntByName ( struct FName nmLabel, int nValue )
{
	static UFunction* pFnSetIntByName = NULL;

	if ( ! pFnSetIntByName )
		pFnSetIntByName = (UFunction*) UObject::GObjObjects()->Data[ 54021 ];

	UBioGlobalVariableTable_execSetIntByName_Parms SetIntByName_Parms;
	memcpy ( &SetIntByName_Parms.nmLabel, &nmLabel, 0x8 );
	SetIntByName_Parms.nValue = nValue;

	pFnSetIntByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIntByName, &SetIntByName_Parms, NULL );

	pFnSetIntByName->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetIntByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmLabel                        ( CPF_Parm )

int UBioGlobalVariableTable::GetIntByName ( struct FName nmLabel )
{
	static UFunction* pFnGetIntByName = NULL;

	if ( ! pFnGetIntByName )
		pFnGetIntByName = (UFunction*) UObject::GObjObjects()->Data[ 54018 ];

	UBioGlobalVariableTable_execGetIntByName_Parms GetIntByName_Parms;
	memcpy ( &GetIntByName_Parms.nmLabel, &nmLabel, 0x8 );

	pFnGetIntByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntByName, &GetIntByName_Parms, NULL );

	pFnGetIntByName->FunctionFlags |= 0x400;

	return GetIntByName_Parms.ReturnValue;
};

// Function SFXGame.BioGlobalVariableTable.SetBoolByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   nmLabel                        ( CPF_Parm )
// unsigned long                  bValue                         ( CPF_Parm )

void UBioGlobalVariableTable::SetBoolByName ( struct FName nmLabel, unsigned long bValue )
{
	static UFunction* pFnSetBoolByName = NULL;

	if ( ! pFnSetBoolByName )
		pFnSetBoolByName = (UFunction*) UObject::GObjObjects()->Data[ 54015 ];

	UBioGlobalVariableTable_execSetBoolByName_Parms SetBoolByName_Parms;
	memcpy ( &SetBoolByName_Parms.nmLabel, &nmLabel, 0x8 );
	SetBoolByName_Parms.bValue = bValue;

	pFnSetBoolByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBoolByName, &SetBoolByName_Parms, NULL );

	pFnSetBoolByName->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetBoolByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmLabel                        ( CPF_Parm )

bool UBioGlobalVariableTable::GetBoolByName ( struct FName nmLabel )
{
	static UFunction* pFnGetBoolByName = NULL;

	if ( ! pFnGetBoolByName )
		pFnGetBoolByName = (UFunction*) UObject::GObjObjects()->Data[ 54012 ];

	UBioGlobalVariableTable_execGetBoolByName_Parms GetBoolByName_Parms;
	memcpy ( &GetBoolByName_Parms.nmLabel, &nmLabel, 0x8 );

	pFnGetBoolByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBoolByName, &GetBoolByName_Parms, NULL );

	pFnGetBoolByName->FunctionFlags |= 0x400;

	return GetBoolByName_Parms.ReturnValue;
};

// Function SFXGame.BioGlobalVariableTable.SetFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void UBioGlobalVariableTable::SetFloat ( int nIndex, float fValue )
{
	static UFunction* pFnSetFloat = NULL;

	if ( ! pFnSetFloat )
		pFnSetFloat = (UFunction*) UObject::GObjObjects()->Data[ 54009 ];

	UBioGlobalVariableTable_execSetFloat_Parms SetFloat_Parms;
	SetFloat_Parms.nIndex = nIndex;
	SetFloat_Parms.fValue = fValue;

	pFnSetFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloat, &SetFloat_Parms, NULL );

	pFnSetFloat->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

float UBioGlobalVariableTable::GetFloat ( int nIndex )
{
	static UFunction* pFnGetFloat = NULL;

	if ( ! pFnGetFloat )
		pFnGetFloat = (UFunction*) UObject::GObjObjects()->Data[ 52103 ];

	UBioGlobalVariableTable_execGetFloat_Parms GetFloat_Parms;
	GetFloat_Parms.nIndex = nIndex;

	pFnGetFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloat, &GetFloat_Parms, NULL );

	pFnGetFloat->FunctionFlags |= 0x400;

	return GetFloat_Parms.ReturnValue;
};

// Function SFXGame.BioGlobalVariableTable.SetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

void UBioGlobalVariableTable::SetInt ( int nIndex, int nValue )
{
	static UFunction* pFnSetInt = NULL;

	if ( ! pFnSetInt )
		pFnSetInt = (UFunction*) UObject::GObjObjects()->Data[ 54005 ];

	UBioGlobalVariableTable_execSetInt_Parms SetInt_Parms;
	SetInt_Parms.nIndex = nIndex;
	SetInt_Parms.nValue = nValue;

	pFnSetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetInt, &SetInt_Parms, NULL );

	pFnSetInt->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

int UBioGlobalVariableTable::GetInt ( int nIndex )
{
	static UFunction* pFnGetInt = NULL;

	if ( ! pFnGetInt )
		pFnGetInt = (UFunction*) UObject::GObjObjects()->Data[ 52101 ];

	UBioGlobalVariableTable_execGetInt_Parms GetInt_Parms;
	GetInt_Parms.nIndex = nIndex;

	pFnGetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInt, &GetInt_Parms, NULL );

	pFnGetInt->FunctionFlags |= 0x400;

	return GetInt_Parms.ReturnValue;
};

// Function SFXGame.BioGlobalVariableTable.SetBool
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bValue                         ( CPF_Parm )
// unsigned long                  bEvaluateAchievement           ( CPF_OptionalParm | CPF_Parm )

void UBioGlobalVariableTable::SetBool ( int nIndex, unsigned long bValue, unsigned long bEvaluateAchievement )
{
	static UFunction* pFnSetBool = NULL;

	if ( ! pFnSetBool )
		pFnSetBool = (UFunction*) UObject::GObjObjects()->Data[ 54000 ];

	UBioGlobalVariableTable_execSetBool_Parms SetBool_Parms;
	SetBool_Parms.nIndex = nIndex;
	SetBool_Parms.bValue = bValue;
	SetBool_Parms.bEvaluateAchievement = bEvaluateAchievement;

	pFnSetBool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBool, &SetBool_Parms, NULL );

	pFnSetBool->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGlobalVariableTable.GetBool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool UBioGlobalVariableTable::GetBool ( int nIndex )
{
	static UFunction* pFnGetBool = NULL;

	if ( ! pFnGetBool )
		pFnGetBool = (UFunction*) UObject::GObjObjects()->Data[ 52099 ];

	UBioGlobalVariableTable_execGetBool_Parms GetBool_Parms;
	GetBool_Parms.nIndex = nIndex;

	pFnGetBool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBool, &GetBool_Parms, NULL );

	pFnGetBool->FunctionFlags |= 0x400;

	return GetBool_Parms.ReturnValue;
};

// Function SFXGame.BioQuestProgressionMap.Clear
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioQuestProgressionMap::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 57682 ];

	UBioQuestProgressionMap_execClear_Parms Clear_Parms;

	pFnClear->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );

	pFnClear->FunctionFlags |= 0x400;
};

// Function SFXGame.BioProbeCombat.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioProbeCombat::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 57569 ];

	UBioProbeCombat_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioProbeCombat.Stop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  CombatResult                   ( CPF_Parm )

void UBioProbeCombat::Stop ( unsigned char CombatResult )
{
	static UFunction* pFnStop = NULL;

	if ( ! pFnStop )
		pFnStop = (UFunction*) UObject::GObjObjects()->Data[ 57567 ];

	UBioProbeCombat_execStop_Parms Stop_Parms;
	Stop_Parms.CombatResult = CombatResult;

	pFnStop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStop, &Stop_Parms, NULL );

	pFnStop->FunctionFlags |= 0x400;
};

// Function SFXGame.BioProbeCombat.Start
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioProbeCombat::Start ( )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 57566 ];

	UBioProbeCombat_execStart_Parms Start_Parms;

	pFnStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	pFnStart->FunctionFlags |= 0x400;
};

// Function SFXGame.BioProbeCombat.IsRecording
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioProbeCombat::IsRecording ( )
{
	static UFunction* pFnIsRecording = NULL;

	if ( ! pFnIsRecording )
		pFnIsRecording = (UFunction*) UObject::GObjObjects()->Data[ 57564 ];

	UBioProbeCombat_execIsRecording_Parms IsRecording_Parms;

	pFnIsRecording->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRecording, &IsRecording_Parms, NULL );

	pFnIsRecording->FunctionFlags |= 0x400;

	return IsRecording_Parms.ReturnValue;
};

// Function SFXGame.BioProbeCombat.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SquadName                      ( CPF_Parm )
// struct FName                   SquadTag                       ( CPF_Parm )

void UBioProbeCombat::Initialize ( struct FName SquadName, struct FName SquadTag )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57561 ];

	UBioProbeCombat_execInitialize_Parms Initialize_Parms;
	memcpy ( &Initialize_Parms.SquadName, &SquadName, 0x8 );
	memcpy ( &Initialize_Parms.SquadTag, &SquadTag, 0x8 );

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioCurveDrivenParameter.GetValue
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fTime                          ( CPF_Parm )
// float                          fScale                         ( CPF_OptionalParm | CPF_Parm )

float UBioCurveDrivenParameter::GetValue ( float fTime, float fScale )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 52700 ];

	UBioCurveDrivenParameter_execGetValue_Parms GetValue_Parms;
	GetValue_Parms.fTime = fTime;
	GetValue_Parms.fScale = fScale;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function SFXGame.BioMetaVFX.ApplyEffect
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class UBioMetaVFX*             MetaEffect                     ( CPF_Parm )
// class UObject*                 Target                         ( CPF_Parm )
// float                          fLifeTime                      ( CPF_OptionalParm | CPF_Parm )

void UBioMetaVFX::ApplyEffect ( class UBioMetaVFX* MetaEffect, class UObject* Target, float fLifeTime )
{
	static UFunction* pFnApplyEffect = NULL;

	if ( ! pFnApplyEffect )
		pFnApplyEffect = (UFunction*) UObject::GObjObjects()->Data[ 55424 ];

	UBioMetaVFX_execApplyEffect_Parms ApplyEffect_Parms;
	ApplyEffect_Parms.MetaEffect = MetaEffect;
	ApplyEffect_Parms.Target = Target;
	ApplyEffect_Parms.fLifeTime = fLifeTime;

	pFnApplyEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyEffect, &ApplyEffect_Parms, NULL );

	pFnApplyEffect->FunctionFlags |= 0x400;
};

// Function SFXGame.BioMetaVFX.ApplyEffectByName
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEffect                        ( CPF_Parm | CPF_NeedCtorLink )
// class UObject*                 Target                         ( CPF_Parm )
// float                          fLifeTime                      ( CPF_OptionalParm | CPF_Parm )

void UBioMetaVFX::ApplyEffectByName ( struct FString sEffect, class UObject* Target, float fLifeTime )
{
	static UFunction* pFnApplyEffectByName = NULL;

	if ( ! pFnApplyEffectByName )
		pFnApplyEffectByName = (UFunction*) UObject::GObjObjects()->Data[ 55420 ];

	UBioMetaVFX_execApplyEffectByName_Parms ApplyEffectByName_Parms;
	memcpy ( &ApplyEffectByName_Parms.sEffect, &sEffect, 0x10 );
	ApplyEffectByName_Parms.Target = Target;
	ApplyEffectByName_Parms.fLifeTime = fLifeTime;

	pFnApplyEffectByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyEffectByName, &ApplyEffectByName_Parms, NULL );

	pFnApplyEffectByName->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVFXTemplate.InitializeTemplate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioVFXTemplate::eventInitializeTemplate ( )
{
	static UFunction* pFnInitializeTemplate = NULL;

	if ( ! pFnInitializeTemplate )
		pFnInitializeTemplate = (UFunction*) UObject::GObjObjects()->Data[ 44716 ];

	UBioVFXTemplate_eventInitializeTemplate_Parms InitializeTemplate_Parms;

	this->ProcessEvent ( pFnInitializeTemplate, &InitializeTemplate_Parms, NULL );
};

// Function SFXGame.BioVisualEffect.SetSound
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndexInSoundArray             ( CPF_Parm )

bool ABioVisualEffect::SetSound ( int nIndexInSoundArray )
{
	static UFunction* pFnSetSound = NULL;

	if ( ! pFnSetSound )
		pFnSetSound = (UFunction*) UObject::GObjObjects()->Data[ 40783 ];

	ABioVisualEffect_execSetSound_Parms SetSound_Parms;
	SetSound_Parms.nIndexInSoundArray = nIndexInSoundArray;

	pFnSetSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSound, &SetSound_Parms, NULL );

	pFnSetSound->FunctionFlags |= 0x400;

	return SetSound_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.CreateVFXOnPosition
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioVFXTemplate*         a_pTemplate                    ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm )
// struct FRotator                rOrientation                   ( CPF_Parm )
// float                          fLifeTime                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUseVFXPool                    ( CPF_OptionalParm | CPF_Parm )

class ABioVisualEffect* ABioVisualEffect::CreateVFXOnPosition ( class UBioVFXTemplate* a_pTemplate, struct FVector vPosition, struct FRotator rOrientation, float fLifeTime, unsigned long bUseVFXPool )
{
	static UFunction* pFnCreateVFXOnPosition = NULL;

	if ( ! pFnCreateVFXOnPosition )
		pFnCreateVFXOnPosition = (UFunction*) UObject::GObjObjects()->Data[ 40776 ];

	ABioVisualEffect_execCreateVFXOnPosition_Parms CreateVFXOnPosition_Parms;
	CreateVFXOnPosition_Parms.a_pTemplate = a_pTemplate;
	memcpy ( &CreateVFXOnPosition_Parms.vPosition, &vPosition, 0xC );
	memcpy ( &CreateVFXOnPosition_Parms.rOrientation, &rOrientation, 0xC );
	CreateVFXOnPosition_Parms.fLifeTime = fLifeTime;
	CreateVFXOnPosition_Parms.bUseVFXPool = bUseVFXPool;

	pFnCreateVFXOnPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateVFXOnPosition, &CreateVFXOnPosition_Parms, NULL );

	pFnCreateVFXOnPosition->FunctionFlags |= 0x400;

	return CreateVFXOnPosition_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.CreateVFXOnMesh
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioVFXTemplate*         a_pTemplate                    ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )
// struct FName                   sBoneName                      ( CPF_Parm )
// float                          fLifeTime                      ( CPF_OptionalParm | CPF_Parm )
// class USkeletalMeshComponent*  mTargetMesh                    ( CPF_OptionalParm | CPF_Parm | CPF_EditInline )
// unsigned long                  bUseVFXPool                    ( CPF_OptionalParm | CPF_Parm )

class ABioVisualEffect* ABioVisualEffect::CreateVFXOnMesh ( class UBioVFXTemplate* a_pTemplate, class AActor* Target, struct FName sBoneName, float fLifeTime, class USkeletalMeshComponent* mTargetMesh, unsigned long bUseVFXPool )
{
	static UFunction* pFnCreateVFXOnMesh = NULL;

	if ( ! pFnCreateVFXOnMesh )
		pFnCreateVFXOnMesh = (UFunction*) UObject::GObjObjects()->Data[ 40768 ];

	ABioVisualEffect_execCreateVFXOnMesh_Parms CreateVFXOnMesh_Parms;
	CreateVFXOnMesh_Parms.a_pTemplate = a_pTemplate;
	CreateVFXOnMesh_Parms.Target = Target;
	memcpy ( &CreateVFXOnMesh_Parms.sBoneName, &sBoneName, 0x8 );
	CreateVFXOnMesh_Parms.fLifeTime = fLifeTime;
	CreateVFXOnMesh_Parms.mTargetMesh = mTargetMesh;
	CreateVFXOnMesh_Parms.bUseVFXPool = bUseVFXPool;

	pFnCreateVFXOnMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateVFXOnMesh, &CreateVFXOnMesh_Parms, NULL );

	pFnCreateVFXOnMesh->FunctionFlags |= 0x400;

	return CreateVFXOnMesh_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.CreateCrustEffect
// [0x00026400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioVFXTemplate*         a_pTemplate                    ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )
// float                          fLifeTime                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUseVFXPool                    ( CPF_OptionalParm | CPF_Parm )

class ABioVisualEffect* ABioVisualEffect::CreateCrustEffect ( class UBioVFXTemplate* a_pTemplate, class AActor* Target, float fLifeTime, unsigned long bUseVFXPool )
{
	static UFunction* pFnCreateCrustEffect = NULL;

	if ( ! pFnCreateCrustEffect )
		pFnCreateCrustEffect = (UFunction*) UObject::GObjObjects()->Data[ 40762 ];

	ABioVisualEffect_execCreateCrustEffect_Parms CreateCrustEffect_Parms;
	CreateCrustEffect_Parms.a_pTemplate = a_pTemplate;
	CreateCrustEffect_Parms.Target = Target;
	CreateCrustEffect_Parms.fLifeTime = fLifeTime;
	CreateCrustEffect_Parms.bUseVFXPool = bUseVFXPool;

	pFnCreateCrustEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateCrustEffect, &CreateCrustEffect_Parms, NULL );

	pFnCreateCrustEffect->FunctionFlags |= 0x400;

	return CreateCrustEffect_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.SetLifeTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fLife                          ( CPF_Parm )

void ABioVisualEffect::SetLifeTime ( float fLife )
{
	static UFunction* pFnSetLifeTime = NULL;

	if ( ! pFnSetLifeTime )
		pFnSetLifeTime = (UFunction*) UObject::GObjObjects()->Data[ 40760 ];

	ABioVisualEffect_execSetLifeTime_Parms SetLifeTime_Parms;
	SetLifeTime_Parms.fLife = fLife;

	pFnSetLifeTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLifeTime, &SetLifeTime_Parms, NULL );

	pFnSetLifeTime->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffect.SetVectorParameter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   sParameter                     ( CPF_Parm )
// struct FVector                 vValue                         ( CPF_Parm )

void ABioVisualEffect::SetVectorParameter ( struct FName sParameter, struct FVector vValue )
{
	static UFunction* pFnSetVectorParameter = NULL;

	if ( ! pFnSetVectorParameter )
		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 40757 ];

	ABioVisualEffect_execSetVectorParameter_Parms SetVectorParameter_Parms;
	memcpy ( &SetVectorParameter_Parms.sParameter, &sParameter, 0x8 );
	memcpy ( &SetVectorParameter_Parms.vValue, &vValue, 0xC );

	pFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );

	pFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffect.SetScalarParameter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   sParameter                     ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void ABioVisualEffect::SetScalarParameter ( struct FName sParameter, float fValue )
{
	static UFunction* pFnSetScalarParameter = NULL;

	if ( ! pFnSetScalarParameter )
		pFnSetScalarParameter = (UFunction*) UObject::GObjObjects()->Data[ 40754 ];

	ABioVisualEffect_execSetScalarParameter_Parms SetScalarParameter_Parms;
	memcpy ( &SetScalarParameter_Parms.sParameter, &sParameter, 0x8 );
	SetScalarParameter_Parms.fValue = fValue;

	pFnSetScalarParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalarParameter, &SetScalarParameter_Parms, NULL );

	pFnSetScalarParameter->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffect.GetStateDuration
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eState                         ( CPF_Parm )

float ABioVisualEffect::GetStateDuration ( unsigned char eState )
{
	static UFunction* pFnGetStateDuration = NULL;

	if ( ! pFnGetStateDuration )
		pFnGetStateDuration = (UFunction*) UObject::GObjObjects()->Data[ 40751 ];

	ABioVisualEffect_execGetStateDuration_Parms GetStateDuration_Parms;
	GetStateDuration_Parms.eState = eState;

	pFnGetStateDuration->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStateDuration, &GetStateDuration_Parms, NULL );

	pFnGetStateDuration->FunctionFlags |= 0x400;

	return GetStateDuration_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.GetEffectDuration
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioVisualEffect::GetEffectDuration ( )
{
	static UFunction* pFnGetEffectDuration = NULL;

	if ( ! pFnGetEffectDuration )
		pFnGetEffectDuration = (UFunction*) UObject::GObjObjects()->Data[ 40749 ];

	ABioVisualEffect_execGetEffectDuration_Parms GetEffectDuration_Parms;

	pFnGetEffectDuration->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEffectDuration, &GetEffectDuration_Parms, NULL );

	pFnGetEffectDuration->FunctionFlags |= 0x400;

	return GetEffectDuration_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.DestroyInstance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioVisualEffect::DestroyInstance ( )
{
	static UFunction* pFnDestroyInstance = NULL;

	if ( ! pFnDestroyInstance )
		pFnDestroyInstance = (UFunction*) UObject::GObjObjects()->Data[ 40748 ];

	ABioVisualEffect_execDestroyInstance_Parms DestroyInstance_Parms;

	pFnDestroyInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyInstance, &DestroyInstance_Parms, NULL );

	pFnDestroyInstance->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffect.IsAttached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVisualEffect::IsAttached ( )
{
	static UFunction* pFnIsAttached = NULL;

	if ( ! pFnIsAttached )
		pFnIsAttached = (UFunction*) UObject::GObjObjects()->Data[ 40746 ];

	ABioVisualEffect_execIsAttached_Parms IsAttached_Parms;

	pFnIsAttached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAttached, &IsAttached_Parms, NULL );

	pFnIsAttached->FunctionFlags |= 0x400;

	return IsAttached_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.SetBasePrefab
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPrefab*                 pBase                          ( CPF_Parm )

bool ABioVisualEffect::SetBasePrefab ( class UPrefab* pBase )
{
	static UFunction* pFnSetBasePrefab = NULL;

	if ( ! pFnSetBasePrefab )
		pFnSetBasePrefab = (UFunction*) UObject::GObjObjects()->Data[ 40743 ];

	ABioVisualEffect_execSetBasePrefab_Parms SetBasePrefab_Parms;
	SetBasePrefab_Parms.pBase = pBase;

	pFnSetBasePrefab->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBasePrefab, &SetBasePrefab_Parms, NULL );

	pFnSetBasePrefab->FunctionFlags |= 0x400;

	return SetBasePrefab_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.SetState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eState                         ( CPF_Parm )
// unsigned long                  bForceSetState                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlayAudio                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForceKill                     ( CPF_OptionalParm | CPF_Parm )

bool ABioVisualEffect::SetState ( unsigned char eState, unsigned long bForceSetState, unsigned long bPlayAudio, unsigned long bForceKill )
{
	static UFunction* pFnSetState = NULL;

	if ( ! pFnSetState )
		pFnSetState = (UFunction*) UObject::GObjObjects()->Data[ 40737 ];

	ABioVisualEffect_execSetState_Parms SetState_Parms;
	SetState_Parms.eState = eState;
	SetState_Parms.bForceSetState = bForceSetState;
	SetState_Parms.bPlayAudio = bPlayAudio;
	SetState_Parms.bForceKill = bForceKill;

	pFnSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetState, &SetState_Parms, NULL );

	pFnSetState->FunctionFlags |= 0x400;

	return SetState_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.SetPaused
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPause                         ( CPF_Parm )
// unsigned long                  bForceRefresh                  ( CPF_OptionalParm | CPF_Parm )

bool ABioVisualEffect::SetPaused ( unsigned long bPause, unsigned long bForceRefresh )
{
	static UFunction* pFnSetPaused = NULL;

	if ( ! pFnSetPaused )
		pFnSetPaused = (UFunction*) UObject::GObjObjects()->Data[ 40733 ];

	ABioVisualEffect_execSetPaused_Parms SetPaused_Parms;
	SetPaused_Parms.bPause = bPause;
	SetPaused_Parms.bForceRefresh = bForceRefresh;

	pFnSetPaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPaused, &SetPaused_Parms, NULL );

	pFnSetPaused->FunctionFlags |= 0x400;

	return SetPaused_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffect.PauseOnDeath
// [0x00020002] 
// Parameters infos:
// unsigned long                  bPause                         ( CPF_Parm )

void ABioVisualEffect::PauseOnDeath ( unsigned long bPause )
{
	static UFunction* pFnPauseOnDeath = NULL;

	if ( ! pFnPauseOnDeath )
		pFnPauseOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 40730 ];

	ABioVisualEffect_execPauseOnDeath_Parms PauseOnDeath_Parms;
	PauseOnDeath_Parms.bPause = bPause;

	this->ProcessEvent ( pFnPauseOnDeath, &PauseOnDeath_Parms, NULL );
};

// Function SFXGame.BioVisualEffect.LoopDuration
// [0x00020002] 
// Parameters infos:
// unsigned long                  bLoop                          ( CPF_Parm )

void ABioVisualEffect::LoopDuration ( unsigned long bLoop )
{
	static UFunction* pFnLoopDuration = NULL;

	if ( ! pFnLoopDuration )
		pFnLoopDuration = (UFunction*) UObject::GObjObjects()->Data[ 40726 ];

	ABioVisualEffect_execLoopDuration_Parms LoopDuration_Parms;
	LoopDuration_Parms.bLoop = bLoop;

	this->ProcessEvent ( pFnLoopDuration, &LoopDuration_Parms, NULL );
};

// Function SFXGame.BioVisualEffectPool.PrimePoolEffects
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            a_nNumEffects                  ( CPF_OptionalParm | CPF_Parm )

void UBioVisualEffectPool::PrimePoolEffects ( int a_nNumEffects )
{
	static UFunction* pFnPrimePoolEffects = NULL;

	if ( ! pFnPrimePoolEffects )
		pFnPrimePoolEffects = (UFunction*) UObject::GObjObjects()->Data[ 65749 ];

	UBioVisualEffectPool_execPrimePoolEffects_Parms PrimePoolEffects_Parms;
	PrimePoolEffects_Parms.a_nNumEffects = a_nNumEffects;

	pFnPrimePoolEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrimePoolEffects, &PrimePoolEffects_Parms, NULL );

	pFnPrimePoolEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffectPool.GetEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioVisualEffect* UBioVisualEffectPool::GetEffect ( )
{
	static UFunction* pFnGetEffect = NULL;

	if ( ! pFnGetEffect )
		pFnGetEffect = (UFunction*) UObject::GObjObjects()->Data[ 65747 ];

	UBioVisualEffectPool_execGetEffect_Parms GetEffect_Parms;

	pFnGetEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEffect, &GetEffect_Parms, NULL );

	pFnGetEffect->FunctionFlags |= 0x400;

	return GetEffect_Parms.ReturnValue;
};

// Function SFXGame.BioVisualEffectPool.SetPoolSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            a_nMaxSize                     ( CPF_Parm )
// int                            a_nMinSize                     ( CPF_Parm )

void UBioVisualEffectPool::SetPoolSize ( int a_nMaxSize, int a_nMinSize )
{
	static UFunction* pFnSetPoolSize = NULL;

	if ( ! pFnSetPoolSize )
		pFnSetPoolSize = (UFunction*) UObject::GObjObjects()->Data[ 65744 ];

	UBioVisualEffectPool_execSetPoolSize_Parms SetPoolSize_Parms;
	SetPoolSize_Parms.a_nMaxSize = a_nMaxSize;
	SetPoolSize_Parms.a_nMinSize = a_nMinSize;

	pFnSetPoolSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPoolSize, &SetPoolSize_Parms, NULL );

	pFnSetPoolSize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVisualEffectPool.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVFXTemplate*         a_oTemplate                    ( CPF_Parm )
// int                            nMaxNumEffects                 ( CPF_Parm )
// int                            nMinNumEffects                 ( CPF_Parm )

void UBioVisualEffectPool::Initialize ( class UBioVFXTemplate* a_oTemplate, int nMaxNumEffects, int nMinNumEffects )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 65740 ];

	UBioVisualEffectPool_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.a_oTemplate = a_oTemplate;
	Initialize_Parms.nMaxNumEffects = nMaxNumEffects;
	Initialize_Parms.nMinNumEffects = nMinNumEffects;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVISSimple.PreloadEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVISSimple::PreloadEffects ( )
{
	static UFunction* pFnPreloadEffects = NULL;

	if ( ! pFnPreloadEffects )
		pFnPreloadEffects = (UFunction*) UObject::GObjObjects()->Data[ 55030 ];

	UBioVISSimple_execPreloadEffects_Parms PreloadEffects_Parms;

	pFnPreloadEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreloadEffects, &PreloadEffects_Parms, NULL );

	pFnPreloadEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVISSimple.ApplyVisualImpact
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vImpactLocation                ( CPF_Parm )
// struct FRotator                rImpactRotation                ( CPF_Parm )
// struct FRotator                rDirectionOfImpact             ( CPF_Parm )
// struct FTraceHitInfo           oHitInfo                       ( CPF_Parm )
// class AActor*                  oBase                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bApplyMaterialEffect           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bApplyVisualEffect             ( CPF_OptionalParm | CPF_Parm )

class ABioVisualEffect* UBioVISSimple::ApplyVisualImpact ( struct FVector vImpactLocation, struct FRotator rImpactRotation, struct FRotator rDirectionOfImpact, struct FTraceHitInfo oHitInfo, class AActor* oBase, unsigned long bApplyMaterialEffect, unsigned long bApplyVisualEffect )
{
	static UFunction* pFnApplyVisualImpact = NULL;

	if ( ! pFnApplyVisualImpact )
		pFnApplyVisualImpact = (UFunction*) UObject::GObjObjects()->Data[ 55021 ];

	UBioVISSimple_execApplyVisualImpact_Parms ApplyVisualImpact_Parms;
	memcpy ( &ApplyVisualImpact_Parms.vImpactLocation, &vImpactLocation, 0xC );
	memcpy ( &ApplyVisualImpact_Parms.rImpactRotation, &rImpactRotation, 0xC );
	memcpy ( &ApplyVisualImpact_Parms.rDirectionOfImpact, &rDirectionOfImpact, 0xC );
	memcpy ( &ApplyVisualImpact_Parms.oHitInfo, &oHitInfo, 0x28 );
	ApplyVisualImpact_Parms.oBase = oBase;
	ApplyVisualImpact_Parms.bApplyMaterialEffect = bApplyMaterialEffect;
	ApplyVisualImpact_Parms.bApplyVisualEffect = bApplyVisualEffect;

	pFnApplyVisualImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyVisualImpact, &ApplyVisualImpact_Parms, NULL );

	pFnApplyVisualImpact->FunctionFlags |= 0x400;

	return ApplyVisualImpact_Parms.ReturnValue;
};

// Function SFXGame.BioVISFootstep.ApplyFootstepVisualImpact
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vFootstepLocation              ( CPF_Parm )
// struct FRotator                rFootstepRotation              ( CPF_Parm )
// struct FTraceHitInfo           oHit                           ( CPF_Parm )
// float                          fSpeedRatio                    ( CPF_Parm )
// class AActor*                  oActor                         ( CPF_Parm )

class ABioVisualEffect* UBioVISFootstep::ApplyFootstepVisualImpact ( struct FVector vFootstepLocation, struct FRotator rFootstepRotation, struct FTraceHitInfo oHit, float fSpeedRatio, class AActor* oActor )
{
	static UFunction* pFnApplyFootstepVisualImpact = NULL;

	if ( ! pFnApplyFootstepVisualImpact )
		pFnApplyFootstepVisualImpact = (UFunction*) UObject::GObjObjects()->Data[ 65728 ];

	UBioVISFootstep_execApplyFootstepVisualImpact_Parms ApplyFootstepVisualImpact_Parms;
	memcpy ( &ApplyFootstepVisualImpact_Parms.vFootstepLocation, &vFootstepLocation, 0xC );
	memcpy ( &ApplyFootstepVisualImpact_Parms.rFootstepRotation, &rFootstepRotation, 0xC );
	memcpy ( &ApplyFootstepVisualImpact_Parms.oHit, &oHit, 0x28 );
	ApplyFootstepVisualImpact_Parms.fSpeedRatio = fSpeedRatio;
	ApplyFootstepVisualImpact_Parms.oActor = oActor;

	pFnApplyFootstepVisualImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyFootstepVisualImpact, &ApplyFootstepVisualImpact_Parms, NULL );

	pFnApplyFootstepVisualImpact->FunctionFlags |= 0x400;

	return ApplyFootstepVisualImpact_Parms.ReturnValue;
};

// Function SFXGame.BioVISFootstep.GetCombatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       oPhysMat                       ( CPF_Parm )

float UBioVISFootstep::GetCombatValue ( class UPhysicalMaterial* oPhysMat )
{
	static UFunction* pFnGetCombatValue = NULL;

	if ( ! pFnGetCombatValue )
		pFnGetCombatValue = (UFunction*) UObject::GObjObjects()->Data[ 65725 ];

	UBioVISFootstep_execGetCombatValue_Parms GetCombatValue_Parms;
	GetCombatValue_Parms.oPhysMat = oPhysMat;

	pFnGetCombatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCombatValue, &GetCombatValue_Parms, NULL );

	pFnGetCombatValue->FunctionFlags |= 0x400;

	return GetCombatValue_Parms.ReturnValue;
};

// Function SFXGame.BioVISFootstep.GetDirtValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       oPhysMat                       ( CPF_Parm )

float UBioVISFootstep::GetDirtValue ( class UPhysicalMaterial* oPhysMat )
{
	static UFunction* pFnGetDirtValue = NULL;

	if ( ! pFnGetDirtValue )
		pFnGetDirtValue = (UFunction*) UObject::GObjObjects()->Data[ 65722 ];

	UBioVISFootstep_execGetDirtValue_Parms GetDirtValue_Parms;
	GetDirtValue_Parms.oPhysMat = oPhysMat;

	pFnGetDirtValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDirtValue, &GetDirtValue_Parms, NULL );

	pFnGetDirtValue->FunctionFlags |= 0x400;

	return GetDirtValue_Parms.ReturnValue;
};

// Function SFXGame.BioVISFootstep.GetGrimeValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       oPhysMat                       ( CPF_Parm )

float UBioVISFootstep::GetGrimeValue ( class UPhysicalMaterial* oPhysMat )
{
	static UFunction* pFnGetGrimeValue = NULL;

	if ( ! pFnGetGrimeValue )
		pFnGetGrimeValue = (UFunction*) UObject::GObjObjects()->Data[ 65719 ];

	UBioVISFootstep_execGetGrimeValue_Parms GetGrimeValue_Parms;
	GetGrimeValue_Parms.oPhysMat = oPhysMat;

	pFnGetGrimeValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGrimeValue, &GetGrimeValue_Parms, NULL );

	pFnGetGrimeValue->FunctionFlags |= 0x400;

	return GetGrimeValue_Parms.ReturnValue;
};

// Function SFXGame.BioVISGrenade.ApplyGrenadeVisualImpact
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVisualEffect*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPosition                      ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )
// struct FVector                 vDirection                     ( CPF_Parm )

class ABioVisualEffect* UBioVISGrenade::ApplyGrenadeVisualImpact ( struct FVector vPosition, struct FVector vHitNormal, struct FVector vDirection )
{
	static UFunction* pFnApplyGrenadeVisualImpact = NULL;

	if ( ! pFnApplyGrenadeVisualImpact )
		pFnApplyGrenadeVisualImpact = (UFunction*) UObject::GObjObjects()->Data[ 54129 ];

	UBioVISGrenade_execApplyGrenadeVisualImpact_Parms ApplyGrenadeVisualImpact_Parms;
	memcpy ( &ApplyGrenadeVisualImpact_Parms.vPosition, &vPosition, 0xC );
	memcpy ( &ApplyGrenadeVisualImpact_Parms.vHitNormal, &vHitNormal, 0xC );
	memcpy ( &ApplyGrenadeVisualImpact_Parms.vDirection, &vDirection, 0xC );

	pFnApplyGrenadeVisualImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyGrenadeVisualImpact, &ApplyGrenadeVisualImpact_Parms, NULL );

	pFnApplyGrenadeVisualImpact->FunctionFlags |= 0x400;

	return ApplyGrenadeVisualImpact_Parms.ReturnValue;
};

// Function SFXGame.BioVISGrenade.PreloadEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioVISGrenade::PreloadEffects ( )
{
	static UFunction* pFnPreloadEffects = NULL;

	if ( ! pFnPreloadEffects )
		pFnPreloadEffects = (UFunction*) UObject::GObjObjects()->Data[ 55036 ];

	UBioVISGrenade_execPreloadEffects_Parms PreloadEffects_Parms;

	pFnPreloadEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreloadEffects, &PreloadEffects_Parms, NULL );

	pFnPreloadEffects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVISXModSet.ApplyVisualImpact
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FRotator                rHitRotation                   ( CPF_Parm )
// struct FRotator                rDirectionOfImpact             ( CPF_Parm )
// class UBioVISWeapon*           oWeaponVIS                     ( CPF_Parm )
// struct FTraceHitInfo           oHit                           ( CPF_Parm )
// class AActor*                  oBase                          ( CPF_OptionalParm | CPF_Parm )

void UBioVISXModSet::ApplyVisualImpact ( struct FVector vHitLocation, struct FRotator rHitRotation, struct FRotator rDirectionOfImpact, class UBioVISWeapon* oWeaponVIS, struct FTraceHitInfo oHit, class AActor* oBase )
{
	static UFunction* pFnApplyVisualImpact = NULL;

	if ( ! pFnApplyVisualImpact )
		pFnApplyVisualImpact = (UFunction*) UObject::GObjObjects()->Data[ 65781 ];

	UBioVISXModSet_execApplyVisualImpact_Parms ApplyVisualImpact_Parms;
	memcpy ( &ApplyVisualImpact_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ApplyVisualImpact_Parms.rHitRotation, &rHitRotation, 0xC );
	memcpy ( &ApplyVisualImpact_Parms.rDirectionOfImpact, &rDirectionOfImpact, 0xC );
	ApplyVisualImpact_Parms.oWeaponVIS = oWeaponVIS;
	memcpy ( &ApplyVisualImpact_Parms.oHit, &oHit, 0x28 );
	ApplyVisualImpact_Parms.oBase = oBase;

	pFnApplyVisualImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyVisualImpact, &ApplyVisualImpact_Parms, NULL );

	pFnApplyVisualImpact->FunctionFlags |= 0x400;
};

// Function SFXGame.BioProjectile.ProcessPhysicsTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oOther                         ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioProjectile::eventProcessPhysicsTouch ( class AActor* oOther, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnProcessPhysicsTouch = NULL;

	if ( ! pFnProcessPhysicsTouch )
		pFnProcessPhysicsTouch = (UFunction*) UObject::GObjObjects()->Data[ 54096 ];

	ABioProjectile_eventProcessPhysicsTouch_Parms ProcessPhysicsTouch_Parms;
	ProcessPhysicsTouch_Parms.oOther = oOther;
	memcpy ( &ProcessPhysicsTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ProcessPhysicsTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	this->ProcessEvent ( pFnProcessPhysicsTouch, &ProcessPhysicsTouch_Parms, NULL );
};

// Function SFXGame.BioProjectile.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  oOther                         ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioProjectile::ProcessTouch ( class AActor* oOther, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 54090 ];

	ABioProjectile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.oOther = oOther;
	memcpy ( &ProcessTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function SFXGame.BioProjectile.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioProjectile::Explode ( struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 54083 ];

	ABioProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &Explode_Parms.vHitNormal, &vHitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function SFXGame.BioProjectile.IsValidTarget
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

bool ABioProjectile::IsValidTarget ( class AActor* oActor )
{
	static UFunction* pFnIsValidTarget = NULL;

	if ( ! pFnIsValidTarget )
		pFnIsValidTarget = (UFunction*) UObject::GObjObjects()->Data[ 54080 ];

	ABioProjectile_execIsValidTarget_Parms IsValidTarget_Parms;
	IsValidTarget_Parms.oActor = oActor;

	pFnIsValidTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidTarget, &IsValidTarget_Parms, NULL );

	pFnIsValidTarget->FunctionFlags |= 0x400;

	return IsValidTarget_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectile.Detonate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioGrenadeProjectile::eventDetonate ( )
{
	static UFunction* pFnDetonate = NULL;

	if ( ! pFnDetonate )
		pFnDetonate = (UFunction*) UObject::GObjObjects()->Data[ 54148 ];

	ABioGrenadeProjectile_eventDetonate_Parms Detonate_Parms;

	this->ProcessEvent ( pFnDetonate, &Detonate_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectile.SetVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vVelocity                      ( CPF_Parm )

void ABioGrenadeProjectile::SetVelocity ( struct FVector vVelocity )
{
	static UFunction* pFnSetVelocity = NULL;

	if ( ! pFnSetVelocity )
		pFnSetVelocity = (UFunction*) UObject::GObjObjects()->Data[ 54146 ];

	ABioGrenadeProjectile_execSetVelocity_Parms SetVelocity_Parms;
	memcpy ( &SetVelocity_Parms.vVelocity, &vVelocity, 0xC );

	pFnSetVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVelocity, &SetVelocity_Parms, NULL );

	pFnSetVelocity->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectile.SetTargetPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vTarget                        ( CPF_Parm )

void ABioGrenadeProjectile::SetTargetPoint ( struct FVector vTarget )
{
	static UFunction* pFnSetTargetPoint = NULL;

	if ( ! pFnSetTargetPoint )
		pFnSetTargetPoint = (UFunction*) UObject::GObjObjects()->Data[ 54144 ];

	ABioGrenadeProjectile_execSetTargetPoint_Parms SetTargetPoint_Parms;
	memcpy ( &SetTargetPoint_Parms.vTarget, &vTarget, 0xC );

	pFnSetTargetPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetPoint, &SetTargetPoint_Parms, NULL );

	pFnSetTargetPoint->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectile.SetTargetActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )

void ABioGrenadeProjectile::SetTargetActor ( class AActor* oTarget )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 54142 ];

	ABioGrenadeProjectile_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.oTarget = oTarget;

	pFnSetTargetActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );

	pFnSetTargetActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectile.HurtRadius
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fBaseDamage                    ( CPF_Parm )
// float                          fDamageRadius                  ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// float                          fMomentum                      ( CPF_Parm )
// struct FVector                 vHurtOrigin                    ( CPF_Parm )
// class AActor*                  oIgnoredActor                  ( CPF_OptionalParm | CPF_Parm )
// class AController*             oInstigatedByController        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoFullDamage                  ( CPF_OptionalParm | CPF_Parm )
// class UDamageType*             pDamage                        ( CPF_OptionalParm | CPF_Parm )

bool ABioGrenadeProjectile::HurtRadius ( float fBaseDamage, float fDamageRadius, class UClass* clsDamageType, float fMomentum, struct FVector vHurtOrigin, class AActor* oIgnoredActor, class AController* oInstigatedByController, unsigned long bDoFullDamage, class UDamageType* pDamage )
{
	static UFunction* pFnHurtRadius = NULL;

	if ( ! pFnHurtRadius )
		pFnHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 54131 ];

	ABioGrenadeProjectile_execHurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.fBaseDamage = fBaseDamage;
	HurtRadius_Parms.fDamageRadius = fDamageRadius;
	HurtRadius_Parms.clsDamageType = clsDamageType;
	HurtRadius_Parms.fMomentum = fMomentum;
	memcpy ( &HurtRadius_Parms.vHurtOrigin, &vHurtOrigin, 0xC );
	HurtRadius_Parms.oIgnoredActor = oIgnoredActor;
	HurtRadius_Parms.oInstigatedByController = oInstigatedByController;
	HurtRadius_Parms.bDoFullDamage = bDoFullDamage;
	HurtRadius_Parms.pDamage = pDamage;

	pFnHurtRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHurtRadius, &HurtRadius_Parms, NULL );

	pFnHurtRadius->FunctionFlags |= 0x400;

	return HurtRadius_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectile.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioGrenadeProjectile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 54123 ];

	ABioGrenadeProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectile.ShouldExplode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool ABioGrenadeProjectile::ShouldExplode ( float DeltaTime )
{
	static UFunction* pFnShouldExplode = NULL;

	if ( ! pFnShouldExplode )
		pFnShouldExplode = (UFunction*) UObject::GObjObjects()->Data[ 54120 ];

	ABioGrenadeProjectile_execShouldExplode_Parms ShouldExplode_Parms;
	ShouldExplode_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnShouldExplode, &ShouldExplode_Parms, NULL );

	return ShouldExplode_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectile.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioGrenadeProjectile::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 54118 ];

	ABioGrenadeProjectile_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectile.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioDamageType*          pDamage                        ( CPF_Parm )
// class UBioItemGrenade*         pItem                          ( CPF_Parm )

void ABioGrenadeProjectile::Initialize ( class UBioDamageType* pDamage, class UBioItemGrenade* pItem )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 54115 ];

	ABioGrenadeProjectile_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.pDamage = pDamage;
	Initialize_Parms.pItem = pItem;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectile.GetActorTargetLocation
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

struct FVector ABioGrenadeProjectile::GetActorTargetLocation ( class AActor* oActor )
{
	static UFunction* pFnGetActorTargetLocation = NULL;

	if ( ! pFnGetActorTargetLocation )
		pFnGetActorTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 54112 ];

	ABioGrenadeProjectile_execGetActorTargetLocation_Parms GetActorTargetLocation_Parms;
	GetActorTargetLocation_Parms.oActor = oActor;

	pFnGetActorTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorTargetLocation, &GetActorTargetLocation_Parms, NULL );

	pFnGetActorTargetLocation->FunctionFlags |= 0x400;

	return GetActorTargetLocation_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectile.IsValidTarget
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

bool ABioGrenadeProjectile::IsValidTarget ( class AActor* oActor )
{
	static UFunction* pFnIsValidTarget = NULL;

	if ( ! pFnIsValidTarget )
		pFnIsValidTarget = (UFunction*) UObject::GObjObjects()->Data[ 54109 ];

	ABioGrenadeProjectile_execIsValidTarget_Parms IsValidTarget_Parms;
	IsValidTarget_Parms.oActor = oActor;

	pFnIsValidTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidTarget, &IsValidTarget_Parms, NULL );

	pFnIsValidTarget->FunctionFlags |= 0x400;

	return IsValidTarget_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectile.InitializeUpgradableStats
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioGrenadeProjectile::InitializeUpgradableStats ( )
{
	static UFunction* pFnInitializeUpgradableStats = NULL;

	if ( ! pFnInitializeUpgradableStats )
		pFnInitializeUpgradableStats = (UFunction*) UObject::GObjObjects()->Data[ 54108 ];

	ABioGrenadeProjectile_execInitializeUpgradableStats_Parms InitializeUpgradableStats_Parms;

	pFnInitializeUpgradableStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeUpgradableStats, &InitializeUpgradableStats_Parms, NULL );

	pFnInitializeUpgradableStats->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileBallistic.ShouldExplode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool ABioGrenadeProjectileBallistic::ShouldExplode ( float DeltaTime )
{
	static UFunction* pFnShouldExplode = NULL;

	if ( ! pFnShouldExplode )
		pFnShouldExplode = (UFunction*) UObject::GObjObjects()->Data[ 54164 ];

	ABioGrenadeProjectileBallistic_execShouldExplode_Parms ShouldExplode_Parms;
	ShouldExplode_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnShouldExplode, &ShouldExplode_Parms, NULL );

	return ShouldExplode_Parms.ReturnValue;
};

// Function SFXGame.BioGrenadeProjectileBallistic.SetVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vVelocity                      ( CPF_Parm )

void ABioGrenadeProjectileBallistic::SetVelocity ( struct FVector vVelocity )
{
	static UFunction* pFnSetVelocity = NULL;

	if ( ! pFnSetVelocity )
		pFnSetVelocity = (UFunction*) UObject::GObjObjects()->Data[ 54162 ];

	ABioGrenadeProjectileBallistic_execSetVelocity_Parms SetVelocity_Parms;
	memcpy ( &SetVelocity_Parms.vVelocity, &vVelocity, 0xC );

	pFnSetVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVelocity, &SetVelocity_Parms, NULL );

	pFnSetVelocity->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileBallistic.SetTargetPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vTarget                        ( CPF_Parm )

void ABioGrenadeProjectileBallistic::SetTargetPoint ( struct FVector vTarget )
{
	static UFunction* pFnSetTargetPoint = NULL;

	if ( ! pFnSetTargetPoint )
		pFnSetTargetPoint = (UFunction*) UObject::GObjObjects()->Data[ 54160 ];

	ABioGrenadeProjectileBallistic_execSetTargetPoint_Parms SetTargetPoint_Parms;
	memcpy ( &SetTargetPoint_Parms.vTarget, &vTarget, 0xC );

	pFnSetTargetPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetPoint, &SetTargetPoint_Parms, NULL );

	pFnSetTargetPoint->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileBallistic.SetTargetActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )

void ABioGrenadeProjectileBallistic::SetTargetActor ( class AActor* oTarget )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 54158 ];

	ABioGrenadeProjectileBallistic_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.oTarget = oTarget;

	pFnSetTargetActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );

	pFnSetTargetActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileFrisbee.DoTouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oHitActor                      ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::DoTouch ( class AActor* oHitActor, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnDoTouch = NULL;

	if ( ! pFnDoTouch )
		pFnDoTouch = (UFunction*) UObject::GObjObjects()->Data[ 54213 ];

	ABioGrenadeProjectileFrisbee_execDoTouch_Parms DoTouch_Parms;
	DoTouch_Parms.oHitActor = oHitActor;
	memcpy ( &DoTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &DoTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	pFnDoTouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoTouch, &DoTouch_Parms, NULL );

	pFnDoTouch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileFrisbee.Unstick
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::Unstick ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnUnstick = NULL;

	if ( ! pFnUnstick )
		pFnUnstick = (UFunction*) UObject::GObjObjects()->Data[ 54209 ];

	ABioGrenadeProjectileFrisbee_execUnstick_Parms Unstick_Parms;
	memcpy ( &Unstick_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Unstick_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnUnstick, &Unstick_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.Stick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::eventStick ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStick = NULL;

	if ( ! pFnStick )
		pFnStick = (UFunction*) UObject::GObjObjects()->Data[ 54203 ];

	ABioGrenadeProjectileFrisbee_eventStick_Parms Stick_Parms;
	Stick_Parms.HitActor = HitActor;
	memcpy ( &Stick_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Stick_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStick, &Stick_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.HitWall
// [0x00020122] 
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ABioGrenadeProjectileFrisbee::HitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 54199 ];

	ABioGrenadeProjectileFrisbee_execHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::ProcessTouch ( class AActor* HitActor, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 54195 ];

	ABioGrenadeProjectileFrisbee_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.HitActor = HitActor;
	memcpy ( &ProcessTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.SetVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vVelocity                      ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::SetVelocity ( struct FVector vVelocity )
{
	static UFunction* pFnSetVelocity = NULL;

	if ( ! pFnSetVelocity )
		pFnSetVelocity = (UFunction*) UObject::GObjObjects()->Data[ 54193 ];

	ABioGrenadeProjectileFrisbee_execSetVelocity_Parms SetVelocity_Parms;
	memcpy ( &SetVelocity_Parms.vVelocity, &vVelocity, 0xC );

	pFnSetVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVelocity, &SetVelocity_Parms, NULL );

	pFnSetVelocity->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileFrisbee.SetTargetPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vTarget                        ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::SetTargetPoint ( struct FVector vTarget )
{
	static UFunction* pFnSetTargetPoint = NULL;

	if ( ! pFnSetTargetPoint )
		pFnSetTargetPoint = (UFunction*) UObject::GObjObjects()->Data[ 54191 ];

	ABioGrenadeProjectileFrisbee_execSetTargetPoint_Parms SetTargetPoint_Parms;
	memcpy ( &SetTargetPoint_Parms.vTarget, &vTarget, 0xC );

	pFnSetTargetPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetPoint, &SetTargetPoint_Parms, NULL );

	pFnSetTargetPoint->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileFrisbee.SetTargetActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::SetTargetActor ( class AActor* oTarget )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 54189 ];

	ABioGrenadeProjectileFrisbee_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.oTarget = oTarget;

	pFnSetTargetActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );

	pFnSetTargetActor->FunctionFlags |= 0x400;
};

// Function SFXGame.BioGrenadeProjectileFrisbee.Detonate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioGrenadeProjectileFrisbee::eventDetonate ( )
{
	static UFunction* pFnDetonate = NULL;

	if ( ! pFnDetonate )
		pFnDetonate = (UFunction*) UObject::GObjObjects()->Data[ 54183 ];

	ABioGrenadeProjectileFrisbee_eventDetonate_Parms Detonate_Parms;

	this->ProcessEvent ( pFnDetonate, &Detonate_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 54180 ];

	ABioGrenadeProjectileFrisbee_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function SFXGame.BioGrenadeProjectileFrisbee.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioGrenadeProjectileFrisbee::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 54175 ];

	ABioGrenadeProjectileFrisbee_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioLinePowerProjectile.HitWall
// [0x00020120] 
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ABioLinePowerProjectile::HitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 55288 ];

	ABioLinePowerProjectile_execHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function SFXGame.BioLinePowerProjectile.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  oOther                         ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioLinePowerProjectile::ProcessTouch ( class AActor* oOther, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 55284 ];

	ABioLinePowerProjectile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.oOther = oOther;
	memcpy ( &ProcessTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function SFXGame.BioLinePowerProjectile.RecordDebugAimingInfo
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vStartLocation1                ( CPF_Parm )
// struct FVector                 vEndLocation1                  ( CPF_Parm )
// struct FVector                 vStartLocation2                ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vEndLocation2                  ( CPF_OptionalParm | CPF_Parm )

void ABioLinePowerProjectile::RecordDebugAimingInfo ( struct FVector vStartLocation1, struct FVector vEndLocation1, struct FVector vStartLocation2, struct FVector vEndLocation2 )
{
	static UFunction* pFnRecordDebugAimingInfo = NULL;

	if ( ! pFnRecordDebugAimingInfo )
		pFnRecordDebugAimingInfo = (UFunction*) UObject::GObjObjects()->Data[ 55279 ];

	ABioLinePowerProjectile_execRecordDebugAimingInfo_Parms RecordDebugAimingInfo_Parms;
	memcpy ( &RecordDebugAimingInfo_Parms.vStartLocation1, &vStartLocation1, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vEndLocation1, &vEndLocation1, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vStartLocation2, &vStartLocation2, 0xC );
	memcpy ( &RecordDebugAimingInfo_Parms.vEndLocation2, &vEndLocation2, 0xC );

	pFnRecordDebugAimingInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordDebugAimingInfo, &RecordDebugAimingInfo_Parms, NULL );

	pFnRecordDebugAimingInfo->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLinePowerProjectile.GetProjectileImpactLocation
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )

void ABioLinePowerProjectile::GetProjectileImpactLocation ( class AActor* oActor, struct FVector* vLocation, struct FVector* vNormal )
{
	static UFunction* pFnGetProjectileImpactLocation = NULL;

	if ( ! pFnGetProjectileImpactLocation )
		pFnGetProjectileImpactLocation = (UFunction*) UObject::GObjObjects()->Data[ 55275 ];

	ABioLinePowerProjectile_execGetProjectileImpactLocation_Parms GetProjectileImpactLocation_Parms;
	GetProjectileImpactLocation_Parms.oActor = oActor;

	pFnGetProjectileImpactLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetProjectileImpactLocation, &GetProjectileImpactLocation_Parms, NULL );

	pFnGetProjectileImpactLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetProjectileImpactLocation_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetProjectileImpactLocation_Parms.vNormal, 0xC );
};

// Function SFXGame.BioLinePowerProjectile.GetImpactLocation
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 vNormal                        ( CPF_Parm | CPF_OutParm )
// struct FName                   nmBoneName                     ( CPF_Parm | CPF_OutParm )

void ABioLinePowerProjectile::GetImpactLocation ( class AActor* oActor, struct FVector* vLocation, struct FVector* vNormal, struct FName* nmBoneName )
{
	static UFunction* pFnGetImpactLocation = NULL;

	if ( ! pFnGetImpactLocation )
		pFnGetImpactLocation = (UFunction*) UObject::GObjObjects()->Data[ 55270 ];

	ABioLinePowerProjectile_execGetImpactLocation_Parms GetImpactLocation_Parms;
	GetImpactLocation_Parms.oActor = oActor;

	pFnGetImpactLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetImpactLocation, &GetImpactLocation_Parms, NULL );

	pFnGetImpactLocation->FunctionFlags |= 0x400;

	if ( vLocation )
		memcpy ( vLocation, &GetImpactLocation_Parms.vLocation, 0xC );

	if ( vNormal )
		memcpy ( vNormal, &GetImpactLocation_Parms.vNormal, 0xC );

	if ( nmBoneName )
		memcpy ( nmBoneName, &GetImpactLocation_Parms.nmBoneName, 0x8 );
};

// Function SFXGame.BioLinePowerProjectile.DoImpact
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )
// struct FName                   nmBoneName                     ( CPF_Parm )

bool ABioLinePowerProjectile::DoImpact ( class AActor* oActor, struct FVector vHitLocation, struct FVector vHitNormal, struct FName nmBoneName )
{
	static UFunction* pFnDoImpact = NULL;

	if ( ! pFnDoImpact )
		pFnDoImpact = (UFunction*) UObject::GObjObjects()->Data[ 55264 ];

	ABioLinePowerProjectile_execDoImpact_Parms DoImpact_Parms;
	DoImpact_Parms.oActor = oActor;
	memcpy ( &DoImpact_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &DoImpact_Parms.vHitNormal, &vHitNormal, 0xC );
	memcpy ( &DoImpact_Parms.nmBoneName, &nmBoneName, 0x8 );

	pFnDoImpact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoImpact, &DoImpact_Parms, NULL );

	pFnDoImpact->FunctionFlags |= 0x400;

	return DoImpact_Parms.ReturnValue;
};

// Function SFXGame.BioLinePowerProjectile.ImpactActors
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FVector                 vNormal                        ( CPF_Parm )
// float                          fRadius                        ( CPF_Parm )

bool ABioLinePowerProjectile::ImpactActors ( struct FVector vLocation, struct FVector vNormal, float fRadius )
{
	static UFunction* pFnImpactActors = NULL;

	if ( ! pFnImpactActors )
		pFnImpactActors = (UFunction*) UObject::GObjObjects()->Data[ 55259 ];

	ABioLinePowerProjectile_execImpactActors_Parms ImpactActors_Parms;
	memcpy ( &ImpactActors_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &ImpactActors_Parms.vNormal, &vNormal, 0xC );
	ImpactActors_Parms.fRadius = fRadius;

	pFnImpactActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnImpactActors, &ImpactActors_Parms, NULL );

	pFnImpactActors->FunctionFlags |= 0x400;

	return ImpactActors_Parms.ReturnValue;
};

// Function SFXGame.BioLinePowerProjectile.TickAuthoritative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ABioLinePowerProjectile::TickAuthoritative ( float DeltaSeconds )
{
	static UFunction* pFnTickAuthoritative = NULL;

	if ( ! pFnTickAuthoritative )
		pFnTickAuthoritative = (UFunction*) UObject::GObjObjects()->Data[ 55257 ];

	ABioLinePowerProjectile_execTickAuthoritative_Parms TickAuthoritative_Parms;
	TickAuthoritative_Parms.DeltaSeconds = DeltaSeconds;

	pFnTickAuthoritative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickAuthoritative, &TickAuthoritative_Parms, NULL );

	pFnTickAuthoritative->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLinePowerProjectile.DoTouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pOther                         ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// struct FVector                 vHitNormal                     ( CPF_Parm )

void ABioLinePowerProjectile::DoTouch ( class AActor* pOther, struct FVector vHitLocation, struct FVector vHitNormal )
{
	static UFunction* pFnDoTouch = NULL;

	if ( ! pFnDoTouch )
		pFnDoTouch = (UFunction*) UObject::GObjObjects()->Data[ 55253 ];

	ABioLinePowerProjectile_execDoTouch_Parms DoTouch_Parms;
	DoTouch_Parms.pOther = pOther;
	memcpy ( &DoTouch_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &DoTouch_Parms.vHitNormal, &vHitNormal, 0xC );

	pFnDoTouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoTouch, &DoTouch_Parms, NULL );

	pFnDoTouch->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLinePowerProjectile.InitializeData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCaster                        ( CPF_Parm )
// float                          fStability                     ( CPF_Parm )
// float                          fTravelSpeed                   ( CPF_Parm )
// float                          fRadius                        ( CPF_Parm )
// float                          fRange                         ( CPF_Parm )
// struct FVector                 vTargetLocation                ( CPF_Parm )
// class UBioPowerScript*         oPowerScript                   ( CPF_Parm )
// class UBioPower*               oPower                         ( CPF_Parm )
// struct FVector                 vCasterVelocity                ( CPF_Parm )

bool ABioLinePowerProjectile::InitializeData ( class AActor* oCaster, float fStability, float fTravelSpeed, float fRadius, float fRange, struct FVector vTargetLocation, class UBioPowerScript* oPowerScript, class UBioPower* oPower, struct FVector vCasterVelocity )
{
	static UFunction* pFnInitializeData = NULL;

	if ( ! pFnInitializeData )
		pFnInitializeData = (UFunction*) UObject::GObjObjects()->Data[ 55242 ];

	ABioLinePowerProjectile_execInitializeData_Parms InitializeData_Parms;
	InitializeData_Parms.oCaster = oCaster;
	InitializeData_Parms.fStability = fStability;
	InitializeData_Parms.fTravelSpeed = fTravelSpeed;
	InitializeData_Parms.fRadius = fRadius;
	InitializeData_Parms.fRange = fRange;
	memcpy ( &InitializeData_Parms.vTargetLocation, &vTargetLocation, 0xC );
	InitializeData_Parms.oPowerScript = oPowerScript;
	InitializeData_Parms.oPower = oPower;
	memcpy ( &InitializeData_Parms.vCasterVelocity, &vCasterVelocity, 0xC );

	pFnInitializeData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeData, &InitializeData_Parms, NULL );

	pFnInitializeData->FunctionFlags |= 0x400;

	return InitializeData_Parms.ReturnValue;
};

// Function SFXGame.BioActorBehaviorSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioActorBehaviorSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 47123 ];

	UBioActorBehaviorSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioActorBehaviorSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioActorBehaviorSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 47119 ];

	UBioActorBehaviorSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehaviorSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioArtPlaceableBehaviorSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 49701 ];

	UBioArtPlaceableBehaviorSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableBehaviorSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioArtPlaceableBehaviorSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 49691 ];

	UBioArtPlaceableBehaviorSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehaviorSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioEpicPawnBehaviorSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 52887 ];

	UBioEpicPawnBehaviorSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioEpicPawnBehaviorSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioEpicPawnBehaviorSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 52877 ];

	UBioEpicPawnBehaviorSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioPawnBehaviorSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPawnBehaviorSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 56943 ];

	UBioPawnBehaviorSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioPawnBehaviorSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPawnBehaviorSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 56902 ];

	UBioPawnBehaviorSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioVehicleBehaviorSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 65485 ];

	UBioVehicleBehaviorSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioVehicleBehaviorSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioVehicleBehaviorSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 65483 ];

	UBioVehicleBehaviorSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioArtPlaceableSaveObject.LoadPositionAndOrientation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )

bool UBioArtPlaceableSaveObject::LoadPositionAndOrientation ( class AActor* O )
{
	static UFunction* pFnLoadPositionAndOrientation = NULL;

	if ( ! pFnLoadPositionAndOrientation )
		pFnLoadPositionAndOrientation = (UFunction*) UObject::GObjObjects()->Data[ 49783 ];

	UBioArtPlaceableSaveObject_execLoadPositionAndOrientation_Parms LoadPositionAndOrientation_Parms;
	LoadPositionAndOrientation_Parms.O = O;

	pFnLoadPositionAndOrientation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPositionAndOrientation, &LoadPositionAndOrientation_Parms, NULL );

	pFnLoadPositionAndOrientation->FunctionFlags |= 0x400;

	return LoadPositionAndOrientation_Parms.ReturnValue;
};

// Function SFXGame.BioArtPlaceableSaveObject.SavePositionAndOrientation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )

bool UBioArtPlaceableSaveObject::SavePositionAndOrientation ( class AActor* O )
{
	static UFunction* pFnSavePositionAndOrientation = NULL;

	if ( ! pFnSavePositionAndOrientation )
		pFnSavePositionAndOrientation = (UFunction*) UObject::GObjObjects()->Data[ 49780 ];

	UBioArtPlaceableSaveObject_execSavePositionAndOrientation_Parms SavePositionAndOrientation_Parms;
	SavePositionAndOrientation_Parms.O = O;

	pFnSavePositionAndOrientation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSavePositionAndOrientation, &SavePositionAndOrientation_Parms, NULL );

	pFnSavePositionAndOrientation->FunctionFlags |= 0x400;

	return SavePositionAndOrientation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquadSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioBaseSquadSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 50122 ];

	UBioBaseSquadSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioBaseSquadSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioBaseSquadSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 50118 ];

	UBioBaseSquadSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioInterfaceAppearanceSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioInterfaceAppearanceSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 54752 ];

	UBioInterfaceAppearanceSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioInterfaceAppearanceSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioInterfaceAppearanceSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 54747 ];

	UBioInterfaceAppearanceSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioInventorySaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioInventorySaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 54799 ];

	UBioInventorySaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioInventorySaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioInventorySaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 54795 ];

	UBioInventorySaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioItemSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioItemSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 55103 ];

	UBioItemSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioItemXModdableSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioItemXModdableSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 55181 ];

	UBioItemXModdableSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioItemXModdableSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioItemXModdableSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 55179 ];

	UBioItemXModdableSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioLevelSaveObject.SaveDestroyedObjects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::SaveDestroyedObjects ( class UObject* O )
{
	static UFunction* pFnSaveDestroyedObjects = NULL;

	if ( ! pFnSaveDestroyedObjects )
		pFnSaveDestroyedObjects = (UFunction*) UObject::GObjObjects()->Data[ 55208 ];

	UBioLevelSaveObject_execSaveDestroyedObjects_Parms SaveDestroyedObjects_Parms;
	SaveDestroyedObjects_Parms.O = O;

	pFnSaveDestroyedObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveDestroyedObjects, &SaveDestroyedObjects_Parms, NULL );

	pFnSaveDestroyedObjects->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLevelSaveObject.LoadLootBagArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::LoadLootBagArray ( class UObject* O )
{
	static UFunction* pFnLoadLootBagArray = NULL;

	if ( ! pFnLoadLootBagArray )
		pFnLoadLootBagArray = (UFunction*) UObject::GObjObjects()->Data[ 55206 ];

	UBioLevelSaveObject_execLoadLootBagArray_Parms LoadLootBagArray_Parms;
	LoadLootBagArray_Parms.O = O;

	pFnLoadLootBagArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadLootBagArray, &LoadLootBagArray_Parms, NULL );

	pFnLoadLootBagArray->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLevelSaveObject.SaveLootBagArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::SaveLootBagArray ( class UObject* O )
{
	static UFunction* pFnSaveLootBagArray = NULL;

	if ( ! pFnSaveLootBagArray )
		pFnSaveLootBagArray = (UFunction*) UObject::GObjObjects()->Data[ 55204 ];

	UBioLevelSaveObject_execSaveLootBagArray_Parms SaveLootBagArray_Parms;
	SaveLootBagArray_Parms.O = O;

	pFnSaveLootBagArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveLootBagArray, &SaveLootBagArray_Parms, NULL );

	pFnSaveLootBagArray->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLevelSaveObject.DestroyObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::DestroyObject ( class UObject* O )
{
	static UFunction* pFnDestroyObject = NULL;

	if ( ! pFnDestroyObject )
		pFnDestroyObject = (UFunction*) UObject::GObjObjects()->Data[ 55202 ];

	UBioLevelSaveObject_execDestroyObject_Parms DestroyObject_Parms;
	DestroyObject_Parms.O = O;

	pFnDestroyObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyObject, &DestroyObject_Parms, NULL );

	pFnDestroyObject->FunctionFlags |= 0x400;
};

// Function SFXGame.BioLevelSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 55198 ];

	UBioLevelSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioLevelSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioLevelSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 55196 ];

	UBioLevelSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioMaterialOverrideSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioMaterialOverrideSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 55412 ];

	UBioMaterialOverrideSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioMaterialOverrideSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioMaterialOverrideSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 55408 ];

	UBioMaterialOverrideSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioPawnSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 pObject                        ( CPF_Parm )

void UBioPawnSaveObject::LoadObject ( class UObject* pObject )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 56978 ];

	UBioPawnSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.pObject = pObject;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioPawnSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 pObject                        ( CPF_Parm )

void UBioPawnSaveObject::SaveObject ( class UObject* pObject )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 56974 ];

	UBioPawnSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.pObject = pObject;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioPlayerVehicleSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPlayerVehicleSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 57444 ];

	UBioPlayerVehicleSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioPlayerVehicleSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPlayerVehicleSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 57436 ];

	UBioPlayerVehicleSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadBuybackItems
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )

void UBioSaveGame::eventLoadBuybackItems ( class ABioWorldInfo* WorldInfo )
{
	static UFunction* pFnLoadBuybackItems = NULL;

	if ( ! pFnLoadBuybackItems )
		pFnLoadBuybackItems = (UFunction*) UObject::GObjObjects()->Data[ 58996 ];

	UBioSaveGame_eventLoadBuybackItems_Parms LoadBuybackItems_Parms;
	LoadBuybackItems_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnLoadBuybackItems, &LoadBuybackItems_Parms, NULL );
};

// Function SFXGame.BioSaveGame.SaveBuybackItems
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )

void UBioSaveGame::eventSaveBuybackItems ( class ABioWorldInfo* WorldInfo )
{
	static UFunction* pFnSaveBuybackItems = NULL;

	if ( ! pFnSaveBuybackItems )
		pFnSaveBuybackItems = (UFunction*) UObject::GObjObjects()->Data[ 58993 ];

	UBioSaveGame_eventSaveBuybackItems_Parms SaveBuybackItems_Parms;
	SaveBuybackItems_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnSaveBuybackItems, &SaveBuybackItems_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadAppearance
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioInterface_Appearance* playerAppearance               ( CPF_Parm )

bool UBioSaveGame::LoadAppearance ( class UBioInterface_Appearance* playerAppearance )
{
	static UFunction* pFnLoadAppearance = NULL;

	if ( ! pFnLoadAppearance )
		pFnLoadAppearance = (UFunction*) UObject::GObjObjects()->Data[ 58990 ];

	UBioSaveGame_execLoadAppearance_Parms LoadAppearance_Parms;
	LoadAppearance_Parms.playerAppearance = playerAppearance;

	this->ProcessEvent ( pFnLoadAppearance, &LoadAppearance_Parms, NULL );

	return LoadAppearance_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.SaveAppearance
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioInterface_Appearance* Appearance                     ( CPF_Parm )

void UBioSaveGame::eventSaveAppearance ( class UBioInterface_Appearance* Appearance )
{
	static UFunction* pFnSaveAppearance = NULL;

	if ( ! pFnSaveAppearance )
		pFnSaveAppearance = (UFunction*) UObject::GObjObjects()->Data[ 58987 ];

	UBioSaveGame_eventSaveAppearance_Parms SaveAppearance_Parms;
	SaveAppearance_Parms.Appearance = Appearance;

	this->ProcessEvent ( pFnSaveAppearance, &SaveAppearance_Parms, NULL );
};

// Function SFXGame.BioSaveGame.SavePlayerParty
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )
// class UPackage*                savePackage                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlayerOnly                    ( CPF_OptionalParm | CPF_Parm )

void UBioSaveGame::eventSavePlayerParty ( class ABioPlayerController* PlayerController, class UPackage* savePackage, unsigned long bPlayerOnly )
{
	static UFunction* pFnSavePlayerParty = NULL;

	if ( ! pFnSavePlayerParty )
		pFnSavePlayerParty = (UFunction*) UObject::GObjObjects()->Data[ 58975 ];

	UBioSaveGame_eventSavePlayerParty_Parms SavePlayerParty_Parms;
	SavePlayerParty_Parms.PlayerController = PlayerController;
	SavePlayerParty_Parms.savePackage = savePackage;
	SavePlayerParty_Parms.bPlayerOnly = bPlayerOnly;

	this->ProcessEvent ( pFnSavePlayerParty, &SavePlayerParty_Parms, NULL );
};

// Function SFXGame.BioSaveGame.SaveEquipmentIntoInventory
// [0x00020002] 
// Parameters infos:
// class UBioPawnBehaviorSaveObject* oHenchie                       ( CPF_Parm )
// class UBioInventorySaveObject* oInventorySave                 ( CPF_Parm )

void UBioSaveGame::SaveEquipmentIntoInventory ( class UBioPawnBehaviorSaveObject* oHenchie, class UBioInventorySaveObject* oInventorySave )
{
	static UFunction* pFnSaveEquipmentIntoInventory = NULL;

	if ( ! pFnSaveEquipmentIntoInventory )
		pFnSaveEquipmentIntoInventory = (UFunction*) UObject::GObjObjects()->Data[ 58971 ];

	UBioSaveGame_execSaveEquipmentIntoInventory_Parms SaveEquipmentIntoInventory_Parms;
	SaveEquipmentIntoInventory_Parms.oHenchie = oHenchie;
	SaveEquipmentIntoInventory_Parms.oInventorySave = oInventorySave;

	this->ProcessEvent ( pFnSaveEquipmentIntoInventory, &SaveEquipmentIntoInventory_Parms, NULL );
};

// Function SFXGame.BioSaveGame.PostLoad
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void UBioSaveGame::eventPostLoad ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnPostLoad = NULL;

	if ( ! pFnPostLoad )
		pFnPostLoad = (UFunction*) UObject::GObjObjects()->Data[ 58969 ];

	UBioSaveGame_eventPostLoad_Parms PostLoad_Parms;
	PostLoad_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnPostLoad, &PostLoad_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadVehicle
// [0x00020002] 
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void UBioSaveGame::LoadVehicle ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnLoadVehicle = NULL;

	if ( ! pFnLoadVehicle )
		pFnLoadVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58960 ];

	UBioSaveGame_execLoadVehicle_Parms LoadVehicle_Parms;
	LoadVehicle_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnLoadVehicle, &LoadVehicle_Parms, NULL );
};

// Function SFXGame.BioSaveGame.SaveVehicle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioVehicleBehaviorBase* Vehicle                        ( CPF_Parm )
// unsigned long                  isDriving                      ( CPF_Parm )

void UBioSaveGame::eventSaveVehicle ( class UBioVehicleBehaviorBase* Vehicle, unsigned long isDriving )
{
	static UFunction* pFnSaveVehicle = NULL;

	if ( ! pFnSaveVehicle )
		pFnSaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58955 ];

	UBioSaveGame_eventSaveVehicle_Parms SaveVehicle_Parms;
	SaveVehicle_Parms.Vehicle = Vehicle;
	SaveVehicle_Parms.isDriving = isDriving;

	this->ProcessEvent ( pFnSaveVehicle, &SaveVehicle_Parms, NULL );
};

// Function SFXGame.BioSaveGame.SaveHenchman
// [0x00024002] 
// Parameters infos:
// struct FName                   pawnTag                        ( CPF_Parm )
// class UBioPawnBehavior*        henchBehavior                  ( CPF_Parm )
// class UPackage*                savePackage                    ( CPF_OptionalParm | CPF_Parm )

void UBioSaveGame::SaveHenchman ( struct FName pawnTag, class UBioPawnBehavior* henchBehavior, class UPackage* savePackage )
{
	static UFunction* pFnSaveHenchman = NULL;

	if ( ! pFnSaveHenchman )
		pFnSaveHenchman = (UFunction*) UObject::GObjObjects()->Data[ 58949 ];

	UBioSaveGame_execSaveHenchman_Parms SaveHenchman_Parms;
	memcpy ( &SaveHenchman_Parms.pawnTag, &pawnTag, 0x8 );
	SaveHenchman_Parms.henchBehavior = henchBehavior;
	SaveHenchman_Parms.savePackage = savePackage;

	this->ProcessEvent ( pFnSaveHenchman, &SaveHenchman_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadHenchman
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   pawnTag                        ( CPF_Parm )
// class UBioPawnBehavior*        henchBehavior                  ( CPF_Parm )

bool UBioSaveGame::LoadHenchman ( struct FName pawnTag, class UBioPawnBehavior* henchBehavior )
{
	static UFunction* pFnLoadHenchman = NULL;

	if ( ! pFnLoadHenchman )
		pFnLoadHenchman = (UFunction*) UObject::GObjObjects()->Data[ 58942 ];

	UBioSaveGame_execLoadHenchman_Parms LoadHenchman_Parms;
	memcpy ( &LoadHenchman_Parms.pawnTag, &pawnTag, 0x8 );
	LoadHenchman_Parms.henchBehavior = henchBehavior;

	this->ProcessEvent ( pFnLoadHenchman, &LoadHenchman_Parms, NULL );

	return LoadHenchman_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.EstablishGlobalPlotVariablesForReplayCharacter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSaveGame::eventEstablishGlobalPlotVariablesForReplayCharacter ( )
{
	static UFunction* pFnEstablishGlobalPlotVariablesForReplayCharacter = NULL;

	if ( ! pFnEstablishGlobalPlotVariablesForReplayCharacter )
		pFnEstablishGlobalPlotVariablesForReplayCharacter = (UFunction*) UObject::GObjObjects()->Data[ 58939 ];

	UBioSaveGame_eventEstablishGlobalPlotVariablesForReplayCharacter_Parms EstablishGlobalPlotVariablesForReplayCharacter_Parms;

	this->ProcessEvent ( pFnEstablishGlobalPlotVariablesForReplayCharacter, &EstablishGlobalPlotVariablesForReplayCharacter_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        playerBehavior                 ( CPF_Parm )

bool UBioSaveGame::LoadPlayer ( class UBioPawnBehavior* playerBehavior )
{
	static UFunction* pFnLoadPlayer = NULL;

	if ( ! pFnLoadPlayer )
		pFnLoadPlayer = (UFunction*) UObject::GObjObjects()->Data[ 58936 ];

	UBioSaveGame_execLoadPlayer_Parms LoadPlayer_Parms;
	LoadPlayer_Parms.playerBehavior = playerBehavior;

	this->ProcessEvent ( pFnLoadPlayer, &LoadPlayer_Parms, NULL );

	return LoadPlayer_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetPlayerSpawn
// [0x00420002] 
// Parameters infos:
// struct FVector                 SpawnLocation                  ( CPF_Parm | CPF_OutParm )
// struct FRotator                SpawnRotation                  ( CPF_Parm | CPF_OutParm )

void UBioSaveGame::GetPlayerSpawn ( struct FVector* SpawnLocation, struct FRotator* SpawnRotation )
{
	static UFunction* pFnGetPlayerSpawn = NULL;

	if ( ! pFnGetPlayerSpawn )
		pFnGetPlayerSpawn = (UFunction*) UObject::GObjObjects()->Data[ 58932 ];

	UBioSaveGame_execGetPlayerSpawn_Parms GetPlayerSpawn_Parms;

	this->ProcessEvent ( pFnGetPlayerSpawn, &GetPlayerSpawn_Parms, NULL );

	if ( SpawnLocation )
		memcpy ( SpawnLocation, &GetPlayerSpawn_Parms.SpawnLocation, 0xC );

	if ( SpawnRotation )
		memcpy ( SpawnRotation, &GetPlayerSpawn_Parms.SpawnRotation, 0xC );
};

// Function SFXGame.BioSaveGame.SetPause
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       Controller                     ( CPF_Parm )
// unsigned long                  bPause                         ( CPF_Parm )
// unsigned long                  bPauseWorld                    ( CPF_OptionalParm | CPF_Parm )

void UBioSaveGame::eventSetPause ( class APlayerController* Controller, unsigned long bPause, unsigned long bPauseWorld )
{
	static UFunction* pFnSetPause = NULL;

	if ( ! pFnSetPause )
		pFnSetPause = (UFunction*) UObject::GObjObjects()->Data[ 58927 ];

	UBioSaveGame_eventSetPause_Parms SetPause_Parms;
	SetPause_Parms.Controller = Controller;
	SetPause_Parms.bPause = bPause;
	SetPause_Parms.bPauseWorld = bPauseWorld;

	this->ProcessEvent ( pFnSetPause, &SetPause_Parms, NULL );
};

// Function SFXGame.BioSaveGame.LoadObjectPosition
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UBioBaseSaveObject*      Save                           ( CPF_Parm )
// class AActor*                  Obj                            ( CPF_Parm )

void UBioSaveGame::LoadObjectPosition ( class UBioBaseSaveObject* Save, class AActor* Obj )
{
	static UFunction* pFnLoadObjectPosition = NULL;

	if ( ! pFnLoadObjectPosition )
		pFnLoadObjectPosition = (UFunction*) UObject::GObjObjects()->Data[ 58922 ];

	UBioSaveGame_execLoadObjectPosition_Parms LoadObjectPosition_Parms;
	LoadObjectPosition_Parms.Save = Save;
	LoadObjectPosition_Parms.Obj = Obj;

	this->ProcessEvent ( pFnLoadObjectPosition, &LoadObjectPosition_Parms, NULL );
};

// Function SFXGame.BioSaveGame.GetME2SaveEngine
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USFXEngine*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXEngine* UBioSaveGame::GetME2SaveEngine ( )
{
	static UFunction* pFnGetME2SaveEngine = NULL;

	if ( ! pFnGetME2SaveEngine )
		pFnGetME2SaveEngine = (UFunction*) UObject::GObjObjects()->Data[ 58920 ];

	UBioSaveGame_execGetME2SaveEngine_Parms GetME2SaveEngine_Parms;

	pFnGetME2SaveEngine->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetME2SaveEngine, &GetME2SaveEngine_Parms, NULL );

	pFnGetME2SaveEngine->FunctionFlags |= 0x400;

	return GetME2SaveEngine_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetME2SaveGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USFXSaveGame*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXSaveGame* UBioSaveGame::GetME2SaveGame ( )
{
	static UFunction* pFnGetME2SaveGame = NULL;

	if ( ! pFnGetME2SaveGame )
		pFnGetME2SaveGame = (UFunction*) UObject::GObjObjects()->Data[ 50609 ];

	UBioSaveGame_execGetME2SaveGame_Parms GetME2SaveGame_Parms;

	pFnGetME2SaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetME2SaveGame, &GetME2SaveGame_Parms, NULL );

	pFnGetME2SaveGame->FunctionFlags |= 0x400;

	return GetME2SaveGame_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetPlayerSaveObject
// [0x00020002] 
// Parameters infos:
// class UBioPawnBehaviorSaveObject* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioPawnBehaviorSaveObject* UBioSaveGame::GetPlayerSaveObject ( )
{
	static UFunction* pFnGetPlayerSaveObject = NULL;

	if ( ! pFnGetPlayerSaveObject )
		pFnGetPlayerSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 58918 ];

	UBioSaveGame_execGetPlayerSaveObject_Parms GetPlayerSaveObject_Parms;

	this->ProcessEvent ( pFnGetPlayerSaveObject, &GetPlayerSaveObject_Parms, NULL );

	return GetPlayerSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.SetHenchmanMappedPower
// [0x00020002] 
// Parameters infos:
// struct FName                   pawnTag                        ( CPF_Parm )
// struct FName                   nmMappedPower                  ( CPF_Parm )

void UBioSaveGame::SetHenchmanMappedPower ( struct FName pawnTag, struct FName nmMappedPower )
{
	static UFunction* pFnSetHenchmanMappedPower = NULL;

	if ( ! pFnSetHenchmanMappedPower )
		pFnSetHenchmanMappedPower = (UFunction*) UObject::GObjObjects()->Data[ 58913 ];

	UBioSaveGame_execSetHenchmanMappedPower_Parms SetHenchmanMappedPower_Parms;
	memcpy ( &SetHenchmanMappedPower_Parms.pawnTag, &pawnTag, 0x8 );
	memcpy ( &SetHenchmanMappedPower_Parms.nmMappedPower, &nmMappedPower, 0x8 );

	this->ProcessEvent ( pFnSetHenchmanMappedPower, &SetHenchmanMappedPower_Parms, NULL );
};

// Function SFXGame.BioSaveGame.GetHenchmanMappedPower
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   pawnTag                        ( CPF_Parm )

struct FName UBioSaveGame::GetHenchmanMappedPower ( struct FName pawnTag )
{
	static UFunction* pFnGetHenchmanMappedPower = NULL;

	if ( ! pFnGetHenchmanMappedPower )
		pFnGetHenchmanMappedPower = (UFunction*) UObject::GObjObjects()->Data[ 58909 ];

	UBioSaveGame_execGetHenchmanMappedPower_Parms GetHenchmanMappedPower_Parms;
	memcpy ( &GetHenchmanMappedPower_Parms.pawnTag, &pawnTag, 0x8 );

	this->ProcessEvent ( pFnGetHenchmanMappedPower, &GetHenchmanMappedPower_Parms, NULL );

	return GetHenchmanMappedPower_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.SetHenchmanSaveObject
// [0x00020002] 
// Parameters infos:
// struct FName                   pawnTag                        ( CPF_Parm )
// class UBioBaseSaveObject*      Save                           ( CPF_Parm )

void UBioSaveGame::SetHenchmanSaveObject ( struct FName pawnTag, class UBioBaseSaveObject* Save )
{
	static UFunction* pFnSetHenchmanSaveObject = NULL;

	if ( ! pFnSetHenchmanSaveObject )
		pFnSetHenchmanSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 58904 ];

	UBioSaveGame_execSetHenchmanSaveObject_Parms SetHenchmanSaveObject_Parms;
	memcpy ( &SetHenchmanSaveObject_Parms.pawnTag, &pawnTag, 0x8 );
	SetHenchmanSaveObject_Parms.Save = Save;

	this->ProcessEvent ( pFnSetHenchmanSaveObject, &SetHenchmanSaveObject_Parms, NULL );
};

// Function SFXGame.BioSaveGame.GetHenchmanSaveObject
// [0x00020002] 
// Parameters infos:
// class UBioBaseSaveObject*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   pawnTag                        ( CPF_Parm )

class UBioBaseSaveObject* UBioSaveGame::GetHenchmanSaveObject ( struct FName pawnTag )
{
	static UFunction* pFnGetHenchmanSaveObject = NULL;

	if ( ! pFnGetHenchmanSaveObject )
		pFnGetHenchmanSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 58900 ];

	UBioSaveGame_execGetHenchmanSaveObject_Parms GetHenchmanSaveObject_Parms;
	memcpy ( &GetHenchmanSaveObject_Parms.pawnTag, &pawnTag, 0x8 );

	this->ProcessEvent ( pFnGetHenchmanSaveObject, &GetHenchmanSaveObject_Parms, NULL );

	return GetHenchmanSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.ApplyGameOptions
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            io_GameOptions                 ( CPF_Parm | CPF_OutParm )

void UBioSaveGame::ApplyGameOptions ( struct FGameOptions* io_GameOptions )
{
	static UFunction* pFnApplyGameOptions = NULL;

	if ( ! pFnApplyGameOptions )
		pFnApplyGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 58898 ];

	UBioSaveGame_execApplyGameOptions_Parms ApplyGameOptions_Parms;

	pFnApplyGameOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyGameOptions, &ApplyGameOptions_Parms, NULL );

	pFnApplyGameOptions->FunctionFlags |= 0x400;

	if ( io_GameOptions )
		memcpy ( io_GameOptions, &ApplyGameOptions_Parms.io_GameOptions, 0xB0 );
};

// Function SFXGame.BioSaveGame.SetGameOptions
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FGameOptions            i_GameOptions                  ( CPF_Parm | CPF_OutParm )

void UBioSaveGame::SetGameOptions ( struct FGameOptions* i_GameOptions )
{
	static UFunction* pFnSetGameOptions = NULL;

	if ( ! pFnSetGameOptions )
		pFnSetGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 58896 ];

	UBioSaveGame_execSetGameOptions_Parms SetGameOptions_Parms;

	pFnSetGameOptions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGameOptions, &SetGameOptions_Parms, NULL );

	pFnSetGameOptions->FunctionFlags |= 0x400;

	if ( i_GameOptions )
		memcpy ( i_GameOptions, &SetGameOptions_Parms.i_GameOptions, 0xB0 );
};

// Function SFXGame.BioSaveGame.NativeReset
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void UBioSaveGame::NativeReset ( )
{
	static UFunction* pFnNativeReset = NULL;

	if ( ! pFnNativeReset )
		pFnNativeReset = (UFunction*) UObject::GObjObjects()->Data[ 58895 ];

	UBioSaveGame_execNativeReset_Parms NativeReset_Parms;

	pFnNativeReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNativeReset, &NativeReset_Parms, NULL );

	pFnNativeReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.ResetToDefaults
// [0x00020002] 
// Parameters infos:

void UBioSaveGame::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 58880 ];

	UBioSaveGame_execResetToDefaults_Parms ResetToDefaults_Parms;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );
};

// Function SFXGame.BioSaveGame.DisplayOutOfSpaceMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSaveGame::DisplayOutOfSpaceMessage ( )
{
	static UFunction* pFnDisplayOutOfSpaceMessage = NULL;

	if ( ! pFnDisplayOutOfSpaceMessage )
		pFnDisplayOutOfSpaceMessage = (UFunction*) UObject::GObjObjects()->Data[ 58879 ];

	UBioSaveGame_execDisplayOutOfSpaceMessage_Parms DisplayOutOfSpaceMessage_Parms;

	pFnDisplayOutOfSpaceMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayOutOfSpaceMessage, &DisplayOutOfSpaceMessage_Parms, NULL );

	pFnDisplayOutOfSpaceMessage->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.CheckFreeSpace
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Filename                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   CallbackFunction               ( CPF_Parm )
// class UObject*                 CallbackObject                 ( CPF_Parm )

void UBioSaveGame::CheckFreeSpace ( struct FString Filename, struct FName CallbackFunction, class UObject* CallbackObject )
{
	static UFunction* pFnCheckFreeSpace = NULL;

	if ( ! pFnCheckFreeSpace )
		pFnCheckFreeSpace = (UFunction*) UObject::GObjObjects()->Data[ 58875 ];

	UBioSaveGame_execCheckFreeSpace_Parms CheckFreeSpace_Parms;
	memcpy ( &CheckFreeSpace_Parms.Filename, &Filename, 0x10 );
	memcpy ( &CheckFreeSpace_Parms.CallbackFunction, &CallbackFunction, 0x8 );
	CheckFreeSpace_Parms.CallbackObject = CallbackObject;

	pFnCheckFreeSpace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckFreeSpace, &CheckFreeSpace_Parms, NULL );

	pFnCheckFreeSpace->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.CheckFreeSpaceComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void UBioSaveGame::CheckFreeSpaceComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnCheckFreeSpaceComplete = NULL;

	if ( ! pFnCheckFreeSpaceComplete )
		pFnCheckFreeSpaceComplete = (UFunction*) UObject::GObjObjects()->Data[ 58873 ];

	UBioSaveGame_execCheckFreeSpaceComplete_Parms CheckFreeSpaceComplete_Parms;
	memcpy ( &CheckFreeSpaceComplete_Parms.Args, &Args, 0x60 );

	pFnCheckFreeSpaceComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckFreeSpaceComplete, &CheckFreeSpaceComplete_Parms, NULL );

	pFnCheckFreeSpaceComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.SaveComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void UBioSaveGame::SaveComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnSaveComplete = NULL;

	if ( ! pFnSaveComplete )
		pFnSaveComplete = (UFunction*) UObject::GObjObjects()->Data[ 58871 ];

	UBioSaveGame_execSaveComplete_Parms SaveComplete_Parms;
	memcpy ( &SaveComplete_Parms.Args, &Args, 0x60 );

	pFnSaveComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveComplete, &SaveComplete_Parms, NULL );

	pFnSaveComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.GetTimePlayed
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            o_Sec                          ( CPF_Parm | CPF_OutParm )
// int                            o_Min                          ( CPF_Parm | CPF_OutParm )
// int                            o_Hours                        ( CPF_Parm | CPF_OutParm )

void UBioSaveGame::GetTimePlayed ( int* o_Sec, int* o_Min, int* o_Hours )
{
	static UFunction* pFnGetTimePlayed = NULL;

	if ( ! pFnGetTimePlayed )
		pFnGetTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 58867 ];

	UBioSaveGame_execGetTimePlayed_Parms GetTimePlayed_Parms;

	pFnGetTimePlayed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimePlayed, &GetTimePlayed_Parms, NULL );

	pFnGetTimePlayed->FunctionFlags |= 0x400;

	if ( o_Sec )
		*o_Sec = GetTimePlayed_Parms.o_Sec;

	if ( o_Min )
		*o_Min = GetTimePlayed_Parms.o_Min;

	if ( o_Hours )
		*o_Hours = GetTimePlayed_Parms.o_Hours;
};

// Function SFXGame.BioSaveGame.GetStorageDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSaveGame::GetStorageDevice ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnGetStorageDevice = NULL;

	if ( ! pFnGetStorageDevice )
		pFnGetStorageDevice = (UFunction*) UObject::GObjObjects()->Data[ 58864 ];

	UBioSaveGame_execGetStorageDevice_Parms GetStorageDevice_Parms;
	GetStorageDevice_Parms.bAPressed = bAPressed;
	GetStorageDevice_Parms.nContext = nContext;

	pFnGetStorageDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStorageDevice, &GetStorageDevice_Parms, NULL );

	pFnGetStorageDevice->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.SaveCharacter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            i_nDeviceID                    ( CPF_Parm )

bool UBioSaveGame::SaveCharacter ( int i_nDeviceID )
{
	static UFunction* pFnSaveCharacter = NULL;

	if ( ! pFnSaveCharacter )
		pFnSaveCharacter = (UFunction*) UObject::GObjObjects()->Data[ 58861 ];

	UBioSaveGame_execSaveCharacter_Parms SaveCharacter_Parms;
	SaveCharacter_Parms.i_nDeviceID = i_nDeviceID;

	pFnSaveCharacter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveCharacter, &SaveCharacter_Parms, NULL );

	pFnSaveCharacter->FunctionFlags |= 0x400;

	return SaveCharacter_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.ClearWorldSaveObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMapName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sChunkName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UBioSaveGame::ClearWorldSaveObject ( struct FString sMapName, struct FString sChunkName )
{
	static UFunction* pFnClearWorldSaveObject = NULL;

	if ( ! pFnClearWorldSaveObject )
		pFnClearWorldSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 58857 ];

	UBioSaveGame_execClearWorldSaveObject_Parms ClearWorldSaveObject_Parms;
	memcpy ( &ClearWorldSaveObject_Parms.sMapName, &sMapName, 0x10 );
	memcpy ( &ClearWorldSaveObject_Parms.sChunkName, &sChunkName, 0x10 );

	pFnClearWorldSaveObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearWorldSaveObject, &ClearWorldSaveObject_Parms, NULL );

	pFnClearWorldSaveObject->FunctionFlags |= 0x400;

	return ClearWorldSaveObject_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.EmptySavedMaps
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void UBioSaveGame::EmptySavedMaps ( )
{
	static UFunction* pFnEmptySavedMaps = NULL;

	if ( ! pFnEmptySavedMaps )
		pFnEmptySavedMaps = (UFunction*) UObject::GObjObjects()->Data[ 58856 ];

	UBioSaveGame_execEmptySavedMaps_Parms EmptySavedMaps_Parms;

	pFnEmptySavedMaps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEmptySavedMaps, &EmptySavedMaps_Parms, NULL );

	pFnEmptySavedMaps->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.ShowSavingMessageBox
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSaveGame::ShowSavingMessageBox ( )
{
	static UFunction* pFnShowSavingMessageBox = NULL;

	if ( ! pFnShowSavingMessageBox )
		pFnShowSavingMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 58855 ];

	UBioSaveGame_execShowSavingMessageBox_Parms ShowSavingMessageBox_Parms;

	pFnShowSavingMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowSavingMessageBox, &ShowSavingMessageBox_Parms, NULL );

	pFnShowSavingMessageBox->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.IsAutoSaveComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSaveGame::IsAutoSaveComplete ( )
{
	static UFunction* pFnIsAutoSaveComplete = NULL;

	if ( ! pFnIsAutoSaveComplete )
		pFnIsAutoSaveComplete = (UFunction*) UObject::GObjObjects()->Data[ 58853 ];

	UBioSaveGame_execIsAutoSaveComplete_Parms IsAutoSaveComplete_Parms;

	pFnIsAutoSaveComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAutoSaveComplete, &IsAutoSaveComplete_Parms, NULL );

	pFnIsAutoSaveComplete->FunctionFlags |= 0x400;

	return IsAutoSaveComplete_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.AutoSaveDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UBioSFHandler_MessageBox* oMsgBox                        ( CPF_Parm )

void UBioSaveGame::AutoSaveDelegate ( float fDeltaT, class UBioSFHandler_MessageBox* oMsgBox )
{
	static UFunction* pFnAutoSaveDelegate = NULL;

	if ( ! pFnAutoSaveDelegate )
		pFnAutoSaveDelegate = (UFunction*) UObject::GObjObjects()->Data[ 58850 ];

	UBioSaveGame_execAutoSaveDelegate_Parms AutoSaveDelegate_Parms;
	AutoSaveDelegate_Parms.fDeltaT = fDeltaT;
	AutoSaveDelegate_Parms.oMsgBox = oMsgBox;

	pFnAutoSaveDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoSaveDelegate, &AutoSaveDelegate_Parms, NULL );

	pFnAutoSaveDelegate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.TryAutoSaving
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSaveGame::TryAutoSaving ( )
{
	static UFunction* pFnTryAutoSaving = NULL;

	if ( ! pFnTryAutoSaving )
		pFnTryAutoSaving = (UFunction*) UObject::GObjObjects()->Data[ 58848 ];

	UBioSaveGame_execTryAutoSaving_Parms TryAutoSaving_Parms;

	pFnTryAutoSaving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTryAutoSaving, &TryAutoSaving_Parms, NULL );

	pFnTryAutoSaving->FunctionFlags |= 0x400;

	return TryAutoSaving_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.AutoSave
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceSave                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bShowSavingGui                 ( CPF_OptionalParm | CPF_Parm )

bool UBioSaveGame::AutoSave ( unsigned long bForceSave, unsigned long bShowSavingGui )
{
	static UFunction* pFnAutoSave = NULL;

	if ( ! pFnAutoSave )
		pFnAutoSave = (UFunction*) UObject::GObjObjects()->Data[ 58844 ];

	UBioSaveGame_execAutoSave_Parms AutoSave_Parms;
	AutoSave_Parms.bForceSave = bForceSave;
	AutoSave_Parms.bShowSavingGui = bShowSavingGui;

	pFnAutoSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoSave, &AutoSave_Parms, NULL );

	pFnAutoSave->FunctionFlags |= 0x400;

	return AutoSave_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetPlayerPackage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPackage*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPackage* UBioSaveGame::GetPlayerPackage ( )
{
	static UFunction* pFnGetPlayerPackage = NULL;

	if ( ! pFnGetPlayerPackage )
		pFnGetPlayerPackage = (UFunction*) UObject::GObjObjects()->Data[ 58842 ];

	UBioSaveGame_execGetPlayerPackage_Parms GetPlayerPackage_Parms;

	pFnGetPlayerPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerPackage, &GetPlayerPackage_Parms, NULL );

	pFnGetPlayerPackage->FunctionFlags |= 0x400;

	return GetPlayerPackage_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetCharacterInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<struct FSaveGameRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            o_ClassId                      ( CPF_Parm | CPF_OutParm )
// int                            o_characterLevel               ( CPF_Parm | CPF_OutParm )

void UBioSaveGame::GetCharacterInfo ( struct TArray<struct FSaveGameRecord>* Records, int* o_ClassId, int* o_characterLevel )
{
	static UFunction* pFnGetCharacterInfo = NULL;

	if ( ! pFnGetCharacterInfo )
		pFnGetCharacterInfo = (UFunction*) UObject::GObjObjects()->Data[ 58837 ];

	UBioSaveGame_execGetCharacterInfo_Parms GetCharacterInfo_Parms;

	pFnGetCharacterInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterInfo, &GetCharacterInfo_Parms, NULL );

	pFnGetCharacterInfo->FunctionFlags |= 0x400;

	if ( Records )
		memcpy ( Records, &GetCharacterInfo_Parms.Records, 0x10 );

	if ( o_ClassId )
		*o_ClassId = GetCharacterInfo_Parms.o_ClassId;

	if ( o_characterLevel )
		*o_characterLevel = GetCharacterInfo_Parms.o_characterLevel;
};

// Function SFXGame.BioSaveGame.NewCharacterProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sCharacterName                 ( CPF_Parm | CPF_NeedCtorLink )

struct FString UBioSaveGame::NewCharacterProfile ( struct FString sCharacterName )
{
	static UFunction* pFnNewCharacterProfile = NULL;

	if ( ! pFnNewCharacterProfile )
		pFnNewCharacterProfile = (UFunction*) UObject::GObjObjects()->Data[ 58834 ];

	UBioSaveGame_execNewCharacterProfile_Parms NewCharacterProfile_Parms;
	memcpy ( &NewCharacterProfile_Parms.sCharacterName, &sCharacterName, 0x10 );

	pFnNewCharacterProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNewCharacterProfile, &NewCharacterProfile_Parms, NULL );

	pFnNewCharacterProfile->FunctionFlags |= 0x400;

	return NewCharacterProfile_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.LoadMostRecentSaveRecord
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacterID                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

unsigned char UBioSaveGame::LoadMostRecentSaveRecord ( struct FString sCharacterID )
{
	static UFunction* pFnLoadMostRecentSaveRecord = NULL;

	if ( ! pFnLoadMostRecentSaveRecord )
		pFnLoadMostRecentSaveRecord = (UFunction*) UObject::GObjObjects()->Data[ 58831 ];

	UBioSaveGame_execLoadMostRecentSaveRecord_Parms LoadMostRecentSaveRecord_Parms;
	memcpy ( &LoadMostRecentSaveRecord_Parms.sCharacterID, &sCharacterID, 0x10 );

	pFnLoadMostRecentSaveRecord->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadMostRecentSaveRecord, &LoadMostRecentSaveRecord_Parms, NULL );

	pFnLoadMostRecentSaveRecord->FunctionFlags |= 0x400;

	return LoadMostRecentSaveRecord_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.GetSaveRecords
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCharacterID                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  i_bShowAllSaveGames            ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  i_bHideAutoSave                ( CPF_OptionalParm | CPF_Parm )
// int                            i_nSortById                    ( CPF_OptionalParm | CPF_Parm )
// struct TArray<struct FSaveGameRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioSaveGame::GetSaveRecords ( struct FString sCharacterID, unsigned long i_bShowAllSaveGames, unsigned long i_bHideAutoSave, int i_nSortById, struct TArray<struct FSaveGameRecord>* Records )
{
	static UFunction* pFnGetSaveRecords = NULL;

	if ( ! pFnGetSaveRecords )
		pFnGetSaveRecords = (UFunction*) UObject::GObjObjects()->Data[ 58795 ];

	UBioSaveGame_execGetSaveRecords_Parms GetSaveRecords_Parms;
	memcpy ( &GetSaveRecords_Parms.sCharacterID, &sCharacterID, 0x10 );
	GetSaveRecords_Parms.i_bShowAllSaveGames = i_bShowAllSaveGames;
	GetSaveRecords_Parms.i_bHideAutoSave = i_bHideAutoSave;
	GetSaveRecords_Parms.i_nSortById = i_nSortById;

	pFnGetSaveRecords->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSaveRecords, &GetSaveRecords_Parms, NULL );

	pFnGetSaveRecords->FunctionFlags |= 0x400;

	if ( Records )
		memcpy ( Records, &GetSaveRecords_Parms.Records, 0x10 );

	return GetSaveRecords_Parms.ReturnValue;
};

// Function SFXGame.BioSaveGame.DevSelectCanceledConfirmationCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nDeviceID                    ( CPF_Parm )

void UBioSaveGame::DevSelectCanceledConfirmationCallback ( int i_nDeviceID )
{
	static UFunction* pFnDevSelectCanceledConfirmationCallback = NULL;

	if ( ! pFnDevSelectCanceledConfirmationCallback )
		pFnDevSelectCanceledConfirmationCallback = (UFunction*) UObject::GObjObjects()->Data[ 58793 ];

	UBioSaveGame_execDevSelectCanceledConfirmationCallback_Parms DevSelectCanceledConfirmationCallback_Parms;
	DevSelectCanceledConfirmationCallback_Parms.i_nDeviceID = i_nDeviceID;

	pFnDevSelectCanceledConfirmationCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDevSelectCanceledConfirmationCallback, &DevSelectCanceledConfirmationCallback_Parms, NULL );

	pFnDevSelectCanceledConfirmationCallback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.LoadGameDevSelectCanceledCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nDeviceID                    ( CPF_Parm )

void UBioSaveGame::LoadGameDevSelectCanceledCallback ( int i_nDeviceID )
{
	static UFunction* pFnLoadGameDevSelectCanceledCallback = NULL;

	if ( ! pFnLoadGameDevSelectCanceledCallback )
		pFnLoadGameDevSelectCanceledCallback = (UFunction*) UObject::GObjObjects()->Data[ 58791 ];

	UBioSaveGame_execLoadGameDevSelectCanceledCallback_Parms LoadGameDevSelectCanceledCallback_Parms;
	LoadGameDevSelectCanceledCallback_Parms.i_nDeviceID = i_nDeviceID;

	pFnLoadGameDevSelectCanceledCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameDevSelectCanceledCallback, &LoadGameDevSelectCanceledCallback_Parms, NULL );

	pFnLoadGameDevSelectCanceledCallback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.SaveGameDevSelectCanceledCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nDeviceID                    ( CPF_Parm )

void UBioSaveGame::SaveGameDevSelectCanceledCallback ( int i_nDeviceID )
{
	static UFunction* pFnSaveGameDevSelectCanceledCallback = NULL;

	if ( ! pFnSaveGameDevSelectCanceledCallback )
		pFnSaveGameDevSelectCanceledCallback = (UFunction*) UObject::GObjObjects()->Data[ 58789 ];

	UBioSaveGame_execSaveGameDevSelectCanceledCallback_Parms SaveGameDevSelectCanceledCallback_Parms;
	SaveGameDevSelectCanceledCallback_Parms.i_nDeviceID = i_nDeviceID;

	pFnSaveGameDevSelectCanceledCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveGameDevSelectCanceledCallback, &SaveGameDevSelectCanceledCallback_Parms, NULL );

	pFnSaveGameDevSelectCanceledCallback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.LoadGameFromCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nDeviceID                    ( CPF_Parm )

void UBioSaveGame::LoadGameFromCallback ( int i_nDeviceID )
{
	static UFunction* pFnLoadGameFromCallback = NULL;

	if ( ! pFnLoadGameFromCallback )
		pFnLoadGameFromCallback = (UFunction*) UObject::GObjObjects()->Data[ 58787 ];

	UBioSaveGame_execLoadGameFromCallback_Parms LoadGameFromCallback_Parms;
	LoadGameFromCallback_Parms.i_nDeviceID = i_nDeviceID;

	pFnLoadGameFromCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadGameFromCallback, &LoadGameFromCallback_Parms, NULL );

	pFnLoadGameFromCallback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSaveGame.SaveGameFromCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_nDeviceID                    ( CPF_Parm )

void UBioSaveGame::SaveGameFromCallback ( int i_nDeviceID )
{
	static UFunction* pFnSaveGameFromCallback = NULL;

	if ( ! pFnSaveGameFromCallback )
		pFnSaveGameFromCallback = (UFunction*) UObject::GObjObjects()->Data[ 58785 ];

	UBioSaveGame_execSaveGameFromCallback_Parms SaveGameFromCallback_Parms;
	SaveGameFromCallback_Parms.i_nDeviceID = i_nDeviceID;

	pFnSaveGameFromCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveGameFromCallback, &SaveGameFromCallback_Parms, NULL );

	pFnSaveGameFromCallback->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShopSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioShopSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 64456 ];

	UBioShopSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioShopSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioShopSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 64452 ];

	UBioShopSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioVehicleSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioVehicleSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 65532 ];

	UBioVehicleSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioVehicleSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioVehicleSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 65530 ];

	UBioVehicleSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioVehicleSaveObject.LoadPositionAndOrientation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )

bool UBioVehicleSaveObject::LoadPositionAndOrientation ( class AActor* O )
{
	static UFunction* pFnLoadPositionAndOrientation = NULL;

	if ( ! pFnLoadPositionAndOrientation )
		pFnLoadPositionAndOrientation = (UFunction*) UObject::GObjObjects()->Data[ 65527 ];

	UBioVehicleSaveObject_execLoadPositionAndOrientation_Parms LoadPositionAndOrientation_Parms;
	LoadPositionAndOrientation_Parms.O = O;

	pFnLoadPositionAndOrientation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPositionAndOrientation, &LoadPositionAndOrientation_Parms, NULL );

	pFnLoadPositionAndOrientation->FunctionFlags |= 0x400;

	return LoadPositionAndOrientation_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleSaveObject.SavePositionAndOrientation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )

bool UBioVehicleSaveObject::SavePositionAndOrientation ( class AActor* O )
{
	static UFunction* pFnSavePositionAndOrientation = NULL;

	if ( ! pFnSavePositionAndOrientation )
		pFnSavePositionAndOrientation = (UFunction*) UObject::GObjObjects()->Data[ 65524 ];

	UBioVehicleSaveObject_execSavePositionAndOrientation_Parms SavePositionAndOrientation_Parms;
	SavePositionAndOrientation_Parms.O = O;

	pFnSavePositionAndOrientation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSavePositionAndOrientation, &SavePositionAndOrientation_Parms, NULL );

	pFnSavePositionAndOrientation->FunctionFlags |= 0x400;

	return SavePositionAndOrientation_Parms.ReturnValue;
};

// Function SFXGame.BioWorldInfoSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioWorldInfoSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 66246 ];

	UBioWorldInfoSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioWorldInfoSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioWorldInfoSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 66242 ];

	UBioWorldInfoSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.SFXEngine.IsInCinematicMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXEngine::IsInCinematicMode ( )
{
	static UFunction* pFnIsInCinematicMode = NULL;

	if ( ! pFnIsInCinematicMode )
		pFnIsInCinematicMode = (UFunction*) UObject::GObjObjects()->Data[ 56548 ];

	USFXEngine_execIsInCinematicMode_Parms IsInCinematicMode_Parms;

	pFnIsInCinematicMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCinematicMode, &IsInCinematicMode_Parms, NULL );

	pFnIsInCinematicMode->FunctionFlags |= 0x400;

	return IsInCinematicMode_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.ClearInitialTelemetryHandler
// [0x00040801] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void USFXEngine::eventClearInitialTelemetryHandler ( )
{
	static UFunction* pFnClearInitialTelemetryHandler = NULL;

	if ( ! pFnClearInitialTelemetryHandler )
		pFnClearInitialTelemetryHandler = (UFunction*) UObject::GObjObjects()->Data[ 57902 ];

	USFXEngine_eventClearInitialTelemetryHandler_Parms ClearInitialTelemetryHandler_Parms;

	this->ProcessEvent ( pFnClearInitialTelemetryHandler, &ClearInitialTelemetryHandler_Parms, NULL );
};

// Function SFXGame.SFXEngine.AddInitialTelemetryHandler
// [0x00040801] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void USFXEngine::eventAddInitialTelemetryHandler ( )
{
	static UFunction* pFnAddInitialTelemetryHandler = NULL;

	if ( ! pFnAddInitialTelemetryHandler )
		pFnAddInitialTelemetryHandler = (UFunction*) UObject::GObjObjects()->Data[ 57903 ];

	USFXEngine_eventAddInitialTelemetryHandler_Parms AddInitialTelemetryHandler_Parms;

	this->ProcessEvent ( pFnAddInitialTelemetryHandler, &AddInitialTelemetryHandler_Parms, NULL );
};

// Function SFXGame.SFXEngine.SendTelemetryOnProfileReadComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USFXEngine::SendTelemetryOnProfileReadComplete ( unsigned char LocalUserNum, unsigned long bWasSuccessful )
{
	static UFunction* pFnSendTelemetryOnProfileReadComplete = NULL;

	if ( ! pFnSendTelemetryOnProfileReadComplete )
		pFnSendTelemetryOnProfileReadComplete = (UFunction*) UObject::GObjObjects()->Data[ 57904 ];

	USFXEngine_execSendTelemetryOnProfileReadComplete_Parms SendTelemetryOnProfileReadComplete_Parms;
	SendTelemetryOnProfileReadComplete_Parms.LocalUserNum = LocalUserNum;
	SendTelemetryOnProfileReadComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnSendTelemetryOnProfileReadComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendTelemetryOnProfileReadComplete, &SendTelemetryOnProfileReadComplete_Parms, NULL );

	pFnSendTelemetryOnProfileReadComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.FlushIOHandles
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXEngine::FlushIOHandles ( )
{
	static UFunction* pFnFlushIOHandles = NULL;

	if ( ! pFnFlushIOHandles )
		pFnFlushIOHandles = (UFunction*) UObject::GObjObjects()->Data[ 57905 ];

	USFXEngine_execFlushIOHandles_Parms FlushIOHandles_Parms;

	pFnFlushIOHandles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushIOHandles, &FlushIOHandles_Parms, NULL );

	pFnFlushIOHandles->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.BioShowDebugMessageBox
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::BioShowDebugMessageBox ( struct FString sMessage )
{
	static UFunction* pFnBioShowDebugMessageBox = NULL;

	if ( ! pFnBioShowDebugMessageBox )
		pFnBioShowDebugMessageBox = (UFunction*) UObject::GObjObjects()->Data[ 57908 ];

	USFXEngine_execBioShowDebugMessageBox_Parms BioShowDebugMessageBox_Parms;
	memcpy ( &BioShowDebugMessageBox_Parms.sMessage, &sMessage, 0x10 );

	pFnBioShowDebugMessageBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioShowDebugMessageBox, &BioShowDebugMessageBox_Parms, NULL );

	pFnBioShowDebugMessageBox->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.FindCurrentSaveDevice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXEngine::FindCurrentSaveDevice ( )
{
	static UFunction* pFnFindCurrentSaveDevice = NULL;

	if ( ! pFnFindCurrentSaveDevice )
		pFnFindCurrentSaveDevice = (UFunction*) UObject::GObjObjects()->Data[ 57909 ];

	USFXEngine_execFindCurrentSaveDevice_Parms FindCurrentSaveDevice_Parms;

	pFnFindCurrentSaveDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCurrentSaveDevice, &FindCurrentSaveDevice_Parms, NULL );

	pFnFindCurrentSaveDevice->FunctionFlags |= 0x400;

	return FindCurrentSaveDevice_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.IsCurrentDeviceValid
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXEngine::IsCurrentDeviceValid ( )
{
	static UFunction* pFnIsCurrentDeviceValid = NULL;

	if ( ! pFnIsCurrentDeviceValid )
		pFnIsCurrentDeviceValid = (UFunction*) UObject::GObjObjects()->Data[ 57911 ];

	USFXEngine_execIsCurrentDeviceValid_Parms IsCurrentDeviceValid_Parms;

	pFnIsCurrentDeviceValid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCurrentDeviceValid, &IsCurrentDeviceValid_Parms, NULL );

	pFnIsCurrentDeviceValid->FunctionFlags |= 0x400;

	return IsCurrentDeviceValid_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.ForceGUIUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ForceGUIUpdate ( )
{
	static UFunction* pFnForceGUIUpdate = NULL;

	if ( ! pFnForceGUIUpdate )
		pFnForceGUIUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57913 ];

	USFXEngine_execForceGUIUpdate_Parms ForceGUIUpdate_Parms;

	pFnForceGUIUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceGUIUpdate, &ForceGUIUpdate_Parms, NULL );

	pFnForceGUIUpdate->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.GetCurrentTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float USFXEngine::GetCurrentTime ( )
{
	static UFunction* pFnGetCurrentTime = NULL;

	if ( ! pFnGetCurrentTime )
		pFnGetCurrentTime = (UFunction*) UObject::GObjObjects()->Data[ 57915 ];

	USFXEngine_execGetCurrentTime_Parms GetCurrentTime_Parms;

	pFnGetCurrentTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentTime, &GetCurrentTime_Parms, NULL );

	pFnGetCurrentTime->FunctionFlags |= 0x400;

	return GetCurrentTime_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.GetPlayTimeSeconds
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float USFXEngine::GetPlayTimeSeconds ( )
{
	static UFunction* pFnGetPlayTimeSeconds = NULL;

	if ( ! pFnGetPlayTimeSeconds )
		pFnGetPlayTimeSeconds = (UFunction*) UObject::GObjObjects()->Data[ 57916 ];

	USFXEngine_execGetPlayTimeSeconds_Parms GetPlayTimeSeconds_Parms;

	pFnGetPlayTimeSeconds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayTimeSeconds, &GetPlayTimeSeconds_Parms, NULL );

	pFnGetPlayTimeSeconds->FunctionFlags |= 0x400;

	return GetPlayTimeSeconds_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.LoadPlayer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::LoadPlayer ( )
{
	static UFunction* pFnLoadPlayer = NULL;

	if ( ! pFnLoadPlayer )
		pFnLoadPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57918 ];

	USFXEngine_execLoadPlayer_Parms LoadPlayer_Parms;

	pFnLoadPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPlayer, &LoadPlayer_Parms, NULL );

	pFnLoadPlayer->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.GetCurrentDevice
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USFXEngine::GetCurrentDevice ( )
{
	static UFunction* pFnGetCurrentDevice = NULL;

	if ( ! pFnGetCurrentDevice )
		pFnGetCurrentDevice = (UFunction*) UObject::GObjObjects()->Data[ 57920 ];

	USFXEngine_execGetCurrentDevice_Parms GetCurrentDevice_Parms;

	pFnGetCurrentDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentDevice, &GetCurrentDevice_Parms, NULL );

	pFnGetCurrentDevice->FunctionFlags |= 0x400;

	return GetCurrentDevice_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.UpdateCurrentDevice
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            DeviceID                       ( CPF_Parm )

void USFXEngine::UpdateCurrentDevice ( int DeviceID )
{
	static UFunction* pFnUpdateCurrentDevice = NULL;

	if ( ! pFnUpdateCurrentDevice )
		pFnUpdateCurrentDevice = (UFunction*) UObject::GObjObjects()->Data[ 57921 ];

	USFXEngine_execUpdateCurrentDevice_Parms UpdateCurrentDevice_Parms;
	UpdateCurrentDevice_Parms.DeviceID = DeviceID;

	pFnUpdateCurrentDevice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentDevice, &UpdateCurrentDevice_Parms, NULL );

	pFnUpdateCurrentDevice->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.SlowResumeGameCallback
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SlowResumeGameCallback ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnSlowResumeGameCallback = NULL;

	if ( ! pFnSlowResumeGameCallback )
		pFnSlowResumeGameCallback = (UFunction*) UObject::GObjObjects()->Data[ 57923 ];

	USFXEngine_execSlowResumeGameCallback_Parms SlowResumeGameCallback_Parms;
	memcpy ( &SlowResumeGameCallback_Parms.Args, &Args, 0x60 );

	this->ProcessEvent ( pFnSlowResumeGameCallback, &SlowResumeGameCallback_Parms, NULL );
};

// Function SFXGame.SFXEngine.GetScaleFormManager
// [0x00040001] ( FUNC_Final )
// Parameters infos:
// class UMassEffectGuiManager*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMassEffectGuiManager* USFXEngine::GetScaleFormManager ( )
{
	static UFunction* pFnGetScaleFormManager = NULL;

	if ( ! pFnGetScaleFormManager )
		pFnGetScaleFormManager = (UFunction*) UObject::GObjObjects()->Data[ 57925 ];

	USFXEngine_execGetScaleFormManager_Parms GetScaleFormManager_Parms;

	this->ProcessEvent ( pFnGetScaleFormManager, &GetScaleFormManager_Parms, NULL );

	return GetScaleFormManager_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.HandleNoFreeSpacePS3Callback
// [0x00040001] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            context                        ( CPF_Parm )

void USFXEngine::HandleNoFreeSpacePS3Callback ( unsigned long bAPressed, int context )
{
	static UFunction* pFnHandleNoFreeSpacePS3Callback = NULL;

	if ( ! pFnHandleNoFreeSpacePS3Callback )
		pFnHandleNoFreeSpacePS3Callback = (UFunction*) UObject::GObjObjects()->Data[ 57952 ];

	USFXEngine_execHandleNoFreeSpacePS3Callback_Parms HandleNoFreeSpacePS3Callback_Parms;
	HandleNoFreeSpacePS3Callback_Parms.bAPressed = bAPressed;
	HandleNoFreeSpacePS3Callback_Parms.context = context;

	this->ProcessEvent ( pFnHandleNoFreeSpacePS3Callback, &HandleNoFreeSpacePS3Callback_Parms, NULL );
};

// Function SFXGame.SFXEngine.HandleNoFreeSpacePS3
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )
// int                            AdditionalFreeBytesNeeded      ( CPF_Parm )

void USFXEngine::HandleNoFreeSpacePS3 ( unsigned char Type, int AdditionalFreeBytesNeeded )
{
	static UFunction* pFnHandleNoFreeSpacePS3 = NULL;

	if ( ! pFnHandleNoFreeSpacePS3 )
		pFnHandleNoFreeSpacePS3 = (UFunction*) UObject::GObjObjects()->Data[ 57954 ];

	USFXEngine_execHandleNoFreeSpacePS3_Parms HandleNoFreeSpacePS3_Parms;
	HandleNoFreeSpacePS3_Parms.Type = Type;
	HandleNoFreeSpacePS3_Parms.AdditionalFreeBytesNeeded = AdditionalFreeBytesNeeded;

	this->ProcessEvent ( pFnHandleNoFreeSpacePS3, &HandleNoFreeSpacePS3_Parms, NULL );
};

// Function SFXGame.SFXEngine.SetCurrentSaveGame
// [0x00040001] ( FUNC_Final )
// Parameters infos:
// struct FSFXSaveDescriptor      Descriptor                     ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SetCurrentSaveGame ( struct FSFXSaveDescriptor Descriptor )
{
	static UFunction* pFnSetCurrentSaveGame = NULL;

	if ( ! pFnSetCurrentSaveGame )
		pFnSetCurrentSaveGame = (UFunction*) UObject::GObjObjects()->Data[ 57957 ];

	USFXEngine_execSetCurrentSaveGame_Parms SetCurrentSaveGame_Parms;
	memcpy ( &SetCurrentSaveGame_Parms.Descriptor, &Descriptor, 0x2C );

	this->ProcessEvent ( pFnSetCurrentSaveGame, &SetCurrentSaveGame_Parms, NULL );
};

// Function SFXGame.SFXEngine.SaveGameCallback
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SaveGameCallback ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnSaveGameCallback = NULL;

	if ( ! pFnSaveGameCallback )
		pFnSaveGameCallback = (UFunction*) UObject::GObjObjects()->Data[ 57960 ];

	USFXEngine_execSaveGameCallback_Parms SaveGameCallback_Parms;
	memcpy ( &SaveGameCallback_Parms.Args, &Args, 0x60 );

	this->ProcessEvent ( pFnSaveGameCallback, &SaveGameCallback_Parms, NULL );
};

// Function SFXGame.SFXEngine.RemoveSaveRecordByFilename
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Filename                       ( CPF_Parm | CPF_NeedCtorLink )

bool USFXEngine::RemoveSaveRecordByFilename ( struct FString Filename )
{
	static UFunction* pFnRemoveSaveRecordByFilename = NULL;

	if ( ! pFnRemoveSaveRecordByFilename )
		pFnRemoveSaveRecordByFilename = (UFunction*) UObject::GObjObjects()->Data[ 57962 ];

	USFXEngine_execRemoveSaveRecordByFilename_Parms RemoveSaveRecordByFilename_Parms;
	memcpy ( &RemoveSaveRecordByFilename_Parms.Filename, &Filename, 0x10 );

	pFnRemoveSaveRecordByFilename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveSaveRecordByFilename, &RemoveSaveRecordByFilename_Parms, NULL );

	pFnRemoveSaveRecordByFilename->FunctionFlags |= 0x400;

	return RemoveSaveRecordByFilename_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.GetSaveRecordByFilename
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Filename                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FSFXSaveRecord          SaveRecord                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool USFXEngine::GetSaveRecordByFilename ( struct FString Filename, struct FSFXSaveRecord* SaveRecord )
{
	static UFunction* pFnGetSaveRecordByFilename = NULL;

	if ( ! pFnGetSaveRecordByFilename )
		pFnGetSaveRecordByFilename = (UFunction*) UObject::GObjObjects()->Data[ 57965 ];

	USFXEngine_execGetSaveRecordByFilename_Parms GetSaveRecordByFilename_Parms;
	memcpy ( &GetSaveRecordByFilename_Parms.Filename, &Filename, 0x10 );

	pFnGetSaveRecordByFilename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSaveRecordByFilename, &GetSaveRecordByFilename_Parms, NULL );

	pFnGetSaveRecordByFilename->FunctionFlags |= 0x400;

	if ( SaveRecord )
		memcpy ( SaveRecord, &GetSaveRecordByFilename_Parms.SaveRecord, 0xA8 );

	return GetSaveRecordByFilename_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.SaveGameEx
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FSFXSaveDescriptor      SaveDescriptor                 ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SaveGameEx ( struct FSFXSaveDescriptor SaveDescriptor )
{
	static UFunction* pFnSaveGameEx = NULL;

	if ( ! pFnSaveGameEx )
		pFnSaveGameEx = (UFunction*) UObject::GObjObjects()->Data[ 57968 ];

	USFXEngine_execSaveGameEx_Parms SaveGameEx_Parms;
	memcpy ( &SaveGameEx_Parms.SaveDescriptor, &SaveDescriptor, 0x2C );

	this->ProcessEvent ( pFnSaveGameEx, &SaveGameEx_Parms, NULL );
};

// Function SFXGame.SFXEngine.CheckForCorruptCareers
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXEngine::CheckForCorruptCareers ( )
{
	static UFunction* pFnCheckForCorruptCareers = NULL;

	if ( ! pFnCheckForCorruptCareers )
		pFnCheckForCorruptCareers = (UFunction*) UObject::GObjObjects()->Data[ 57972 ];

	USFXEngine_execCheckForCorruptCareers_Parms CheckForCorruptCareers_Parms;

	this->ProcessEvent ( pFnCheckForCorruptCareers, &CheckForCorruptCareers_Parms, NULL );
};

// Function SFXGame.SFXEngine.RemoveCachedCareer
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Career                         ( CPF_Parm | CPF_NeedCtorLink )

bool USFXEngine::RemoveCachedCareer ( struct FString Career )
{
	static UFunction* pFnRemoveCachedCareer = NULL;

	if ( ! pFnRemoveCachedCareer )
		pFnRemoveCachedCareer = (UFunction*) UObject::GObjObjects()->Data[ 57975 ];

	USFXEngine_execRemoveCachedCareer_Parms RemoveCachedCareer_Parms;
	memcpy ( &RemoveCachedCareer_Parms.Career, &Career, 0x10 );

	this->ProcessEvent ( pFnRemoveCachedCareer, &RemoveCachedCareer_Parms, NULL );

	return RemoveCachedCareer_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.CheckFreeSpaceComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::CheckFreeSpaceComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnCheckFreeSpaceComplete = NULL;

	if ( ! pFnCheckFreeSpaceComplete )
		pFnCheckFreeSpaceComplete = (UFunction*) UObject::GObjObjects()->Data[ 57980 ];

	USFXEngine_execCheckFreeSpaceComplete_Parms CheckFreeSpaceComplete_Parms;
	memcpy ( &CheckFreeSpaceComplete_Parms.Args, &Args, 0x60 );

	pFnCheckFreeSpaceComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckFreeSpaceComplete, &CheckFreeSpaceComplete_Parms, NULL );

	pFnCheckFreeSpaceComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ResumeRendering
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ResumeRendering ( )
{
	static UFunction* pFnResumeRendering = NULL;

	if ( ! pFnResumeRendering )
		pFnResumeRendering = (UFunction*) UObject::GObjObjects()->Data[ 57984 ];

	USFXEngine_execResumeRendering_Parms ResumeRendering_Parms;

	pFnResumeRendering->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResumeRendering, &ResumeRendering_Parms, NULL );

	pFnResumeRendering->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.SuspendRendering
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::SuspendRendering ( )
{
	static UFunction* pFnSuspendRendering = NULL;

	if ( ! pFnSuspendRendering )
		pFnSuspendRendering = (UFunction*) UObject::GObjObjects()->Data[ 57986 ];

	USFXEngine_execSuspendRendering_Parms SuspendRendering_Parms;

	pFnSuspendRendering->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSuspendRendering, &SuspendRendering_Parms, NULL );

	pFnSuspendRendering->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.Callback_ConfirmDeleteCorruptCareers
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            context                        ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void USFXEngine::Callback_ConfirmDeleteCorruptCareers ( unsigned long bAPressed, int context, unsigned long bYPressed )
{
	static UFunction* pFnCallback_ConfirmDeleteCorruptCareers = NULL;

	if ( ! pFnCallback_ConfirmDeleteCorruptCareers )
		pFnCallback_ConfirmDeleteCorruptCareers = (UFunction*) UObject::GObjObjects()->Data[ 57987 ];

	USFXEngine_execCallback_ConfirmDeleteCorruptCareers_Parms Callback_ConfirmDeleteCorruptCareers_Parms;
	Callback_ConfirmDeleteCorruptCareers_Parms.bAPressed = bAPressed;
	Callback_ConfirmDeleteCorruptCareers_Parms.context = context;
	Callback_ConfirmDeleteCorruptCareers_Parms.bYPressed = bYPressed;

	pFnCallback_ConfirmDeleteCorruptCareers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallback_ConfirmDeleteCorruptCareers, &Callback_ConfirmDeleteCorruptCareers_Parms, NULL );

	pFnCallback_ConfirmDeleteCorruptCareers->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ClearSaveCache
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ClearSaveCache ( )
{
	static UFunction* pFnClearSaveCache = NULL;

	if ( ! pFnClearSaveCache )
		pFnClearSaveCache = (UFunction*) UObject::GObjObjects()->Data[ 57988 ];

	USFXEngine_execClearSaveCache_Parms ClearSaveCache_Parms;

	pFnClearSaveCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSaveCache, &ClearSaveCache_Parms, NULL );

	pFnClearSaveCache->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ValidCharsFilter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Sin                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFilterAccentedChars           ( CPF_Parm )

struct FString USFXEngine::ValidCharsFilter ( struct FString Sin, unsigned long bFilterAccentedChars )
{
	static UFunction* pFnValidCharsFilter = NULL;

	if ( ! pFnValidCharsFilter )
		pFnValidCharsFilter = (UFunction*) UObject::GObjObjects()->Data[ 57992 ];

	USFXEngine_execValidCharsFilter_Parms ValidCharsFilter_Parms;
	memcpy ( &ValidCharsFilter_Parms.Sin, &Sin, 0x10 );
	ValidCharsFilter_Parms.bFilterAccentedChars = bFilterAccentedChars;

	pFnValidCharsFilter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidCharsFilter, &ValidCharsFilter_Parms, NULL );

	pFnValidCharsFilter->FunctionFlags |= 0x400;

	return ValidCharsFilter_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.LoadSaveGame
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USFXSaveGame*            SaveGame                       ( CPF_Parm )

void USFXEngine::LoadSaveGame ( class USFXSaveGame* SaveGame )
{
	static UFunction* pFnLoadSaveGame = NULL;

	if ( ! pFnLoadSaveGame )
		pFnLoadSaveGame = (UFunction*) UObject::GObjObjects()->Data[ 57993 ];

	USFXEngine_execLoadSaveGame_Parms LoadSaveGame_Parms;
	LoadSaveGame_Parms.SaveGame = SaveGame;

	pFnLoadSaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadSaveGame, &LoadSaveGame_Parms, NULL );

	pFnLoadSaveGame->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.IsPerformingSaveAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eAction                        ( CPF_Parm )

bool USFXEngine::IsPerformingSaveAction ( unsigned char eAction )
{
	static UFunction* pFnIsPerformingSaveAction = NULL;

	if ( ! pFnIsPerformingSaveAction )
		pFnIsPerformingSaveAction = (UFunction*) UObject::GObjObjects()->Data[ 57997 ];

	USFXEngine_execIsPerformingSaveAction_Parms IsPerformingSaveAction_Parms;
	IsPerformingSaveAction_Parms.eAction = eAction;

	pFnIsPerformingSaveAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPerformingSaveAction, &IsPerformingSaveAction_Parms, NULL );

	pFnIsPerformingSaveAction->FunctionFlags |= 0x400;

	return IsPerformingSaveAction_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.IsSaving
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXEngine::IsSaving ( )
{
	static UFunction* pFnIsSaving = NULL;

	if ( ! pFnIsSaving )
		pFnIsSaving = (UFunction*) UObject::GObjObjects()->Data[ 57999 ];

	USFXEngine_execIsSaving_Parms IsSaving_Parms;

	pFnIsSaving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSaving, &IsSaving_Parms, NULL );

	pFnIsSaving->FunctionFlags |= 0x400;

	return IsSaving_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.ScanSaveDataComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::ScanSaveDataComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnScanSaveDataComplete = NULL;

	if ( ! pFnScanSaveDataComplete )
		pFnScanSaveDataComplete = (UFunction*) UObject::GObjObjects()->Data[ 58002 ];

	USFXEngine_execScanSaveDataComplete_Parms ScanSaveDataComplete_Parms;
	memcpy ( &ScanSaveDataComplete_Parms.Args, &Args, 0x60 );

	pFnScanSaveDataComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScanSaveDataComplete, &ScanSaveDataComplete_Parms, NULL );

	pFnScanSaveDataComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ScanSaveData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ScanSaveData ( )
{
	static UFunction* pFnScanSaveData = NULL;

	if ( ! pFnScanSaveData )
		pFnScanSaveData = (UFunction*) UObject::GObjObjects()->Data[ 58004 ];

	USFXEngine_execScanSaveData_Parms ScanSaveData_Parms;

	pFnScanSaveData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScanSaveData, &ScanSaveData_Parms, NULL );

	pFnScanSaveData->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.TryGetCachedCareer
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Career                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FSFXCareerCacheEntry    OutEntry                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool USFXEngine::TryGetCachedCareer ( struct FString Career, struct FSFXCareerCacheEntry* OutEntry )
{
	static UFunction* pFnTryGetCachedCareer = NULL;

	if ( ! pFnTryGetCachedCareer )
		pFnTryGetCachedCareer = (UFunction*) UObject::GObjObjects()->Data[ 58006 ];

	USFXEngine_execTryGetCachedCareer_Parms TryGetCachedCareer_Parms;
	memcpy ( &TryGetCachedCareer_Parms.Career, &Career, 0x10 );

	pFnTryGetCachedCareer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTryGetCachedCareer, &TryGetCachedCareer_Parms, NULL );

	pFnTryGetCachedCareer->FunctionFlags |= 0x400;

	if ( OutEntry )
		memcpy ( OutEntry, &TryGetCachedCareer_Parms.OutEntry, 0x28 );

	return TryGetCachedCareer_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.UpdateCareerCache
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveDescriptor      SaveDescriptor                 ( CPF_Parm | CPF_NeedCtorLink )
// class USFXSaveGame*            SaveGame                       ( CPF_Parm )

void USFXEngine::UpdateCareerCache ( struct FSFXSaveDescriptor SaveDescriptor, class USFXSaveGame* SaveGame )
{
	static UFunction* pFnUpdateCareerCache = NULL;

	if ( ! pFnUpdateCareerCache )
		pFnUpdateCareerCache = (UFunction*) UObject::GObjObjects()->Data[ 57964 ];

	USFXEngine_execUpdateCareerCache_Parms UpdateCareerCache_Parms;
	memcpy ( &UpdateCareerCache_Parms.SaveDescriptor, &SaveDescriptor, 0x2C );
	UpdateCareerCache_Parms.SaveGame = SaveGame;

	pFnUpdateCareerCache->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCareerCache, &UpdateCareerCache_Parms, NULL );

	pFnUpdateCareerCache->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ResumeSaveGameCommandExecution
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ResumeSaveGameCommandExecution ( )
{
	static UFunction* pFnResumeSaveGameCommandExecution = NULL;

	if ( ! pFnResumeSaveGameCommandExecution )
		pFnResumeSaveGameCommandExecution = (UFunction*) UObject::GObjObjects()->Data[ 58010 ];

	USFXEngine_execResumeSaveGameCommandExecution_Parms ResumeSaveGameCommandExecution_Parms;

	pFnResumeSaveGameCommandExecution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResumeSaveGameCommandExecution, &ResumeSaveGameCommandExecution_Parms, NULL );

	pFnResumeSaveGameCommandExecution->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.QueueSaveGameCommand
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  Action                         ( CPF_Parm )
// struct FSFXSaveDescriptor      SaveDescriptor                 ( CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::QueueSaveGameCommand ( unsigned char Action, struct FSFXSaveDescriptor SaveDescriptor, struct FScriptDelegate Callback )
{
	static UFunction* pFnQueueSaveGameCommand = NULL;

	if ( ! pFnQueueSaveGameCommand )
		pFnQueueSaveGameCommand = (UFunction*) UObject::GObjObjects()->Data[ 57974 ];

	USFXEngine_execQueueSaveGameCommand_Parms QueueSaveGameCommand_Parms;
	QueueSaveGameCommand_Parms.Action = Action;
	memcpy ( &QueueSaveGameCommand_Parms.SaveDescriptor, &SaveDescriptor, 0x2C );
	memcpy ( &QueueSaveGameCommand_Parms.Callback, &Callback, 0x10 );

	pFnQueueSaveGameCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueueSaveGameCommand, &QueueSaveGameCommand_Parms, NULL );

	pFnQueueSaveGameCommand->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ClearCurrentSaveDescriptor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ClearCurrentSaveDescriptor ( )
{
	static UFunction* pFnClearCurrentSaveDescriptor = NULL;

	if ( ! pFnClearCurrentSaveDescriptor )
		pFnClearCurrentSaveDescriptor = (UFunction*) UObject::GObjObjects()->Data[ 58013 ];

	USFXEngine_execClearCurrentSaveDescriptor_Parms ClearCurrentSaveDescriptor_Parms;

	pFnClearCurrentSaveDescriptor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearCurrentSaveDescriptor, &ClearCurrentSaveDescriptor_Parms, NULL );

	pFnClearCurrentSaveDescriptor->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.GetCurrentSaveDescriptor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveDescriptor      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FSFXSaveDescriptor USFXEngine::GetCurrentSaveDescriptor ( )
{
	static UFunction* pFnGetCurrentSaveDescriptor = NULL;

	if ( ! pFnGetCurrentSaveDescriptor )
		pFnGetCurrentSaveDescriptor = (UFunction*) UObject::GObjObjects()->Data[ 58017 ];

	USFXEngine_execGetCurrentSaveDescriptor_Parms GetCurrentSaveDescriptor_Parms;

	pFnGetCurrentSaveDescriptor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentSaveDescriptor, &GetCurrentSaveDescriptor_Parms, NULL );

	pFnGetCurrentSaveDescriptor->FunctionFlags |= 0x400;

	return GetCurrentSaveDescriptor_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.ParseCareer
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Career                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 FirstName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ClassName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// unsigned char                  Origin                         ( CPF_Parm | CPF_OutParm )
// unsigned char                  Notoriety                      ( CPF_Parm | CPF_OutParm )
// int                            Year                           ( CPF_Parm | CPF_OutParm )
// int                            Month                          ( CPF_Parm | CPF_OutParm )
// int                            Day                            ( CPF_Parm | CPF_OutParm )
// int                            MSSinceMidnight                ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool USFXEngine::ParseCareer ( struct FString Career, struct FString* FirstName, struct FString* ClassName, unsigned char* Origin, unsigned char* Notoriety, int* Year, int* Month, int* Day, int* MSSinceMidnight )
{
	static UFunction* pFnParseCareer = NULL;

	if ( ! pFnParseCareer )
		pFnParseCareer = (UFunction*) UObject::GObjObjects()->Data[ 58018 ];

	USFXEngine_execParseCareer_Parms ParseCareer_Parms;
	memcpy ( &ParseCareer_Parms.Career, &Career, 0x10 );

	pFnParseCareer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnParseCareer, &ParseCareer_Parms, NULL );

	pFnParseCareer->FunctionFlags |= 0x400;

	if ( FirstName )
		memcpy ( FirstName, &ParseCareer_Parms.FirstName, 0x10 );

	if ( ClassName )
		memcpy ( ClassName, &ParseCareer_Parms.ClassName, 0x10 );

	if ( Origin )
		*Origin = ParseCareer_Parms.Origin;

	if ( Notoriety )
		*Notoriety = ParseCareer_Parms.Notoriety;

	if ( Year )
		*Year = ParseCareer_Parms.Year;

	if ( Month )
		*Month = ParseCareer_Parms.Month;

	if ( Day )
		*Day = ParseCareer_Parms.Day;

	if ( MSSinceMidnight )
		*MSSinceMidnight = ParseCareer_Parms.MSSinceMidnight;

	return ParseCareer_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.GenerateCareer
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 FirstName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  Origin                         ( CPF_Parm )
// unsigned char                  Notoriety                      ( CPF_Parm )
// int                            Year                           ( CPF_Parm )
// int                            Month                          ( CPF_Parm )
// int                            Day                            ( CPF_Parm )
// int                            MSSinceMidnight                ( CPF_Parm )
// struct FString                 OutCareer                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 OutDisplayName                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXEngine::GenerateCareer ( struct FString FirstName, struct FString ClassName, unsigned char Origin, unsigned char Notoriety, int Year, int Month, int Day, int MSSinceMidnight, struct FString* OutCareer, struct FString* OutDisplayName )
{
	static UFunction* pFnGenerateCareer = NULL;

	if ( ! pFnGenerateCareer )
		pFnGenerateCareer = (UFunction*) UObject::GObjObjects()->Data[ 58020 ];

	USFXEngine_execGenerateCareer_Parms GenerateCareer_Parms;
	memcpy ( &GenerateCareer_Parms.FirstName, &FirstName, 0x10 );
	memcpy ( &GenerateCareer_Parms.ClassName, &ClassName, 0x10 );
	GenerateCareer_Parms.Origin = Origin;
	GenerateCareer_Parms.Notoriety = Notoriety;
	GenerateCareer_Parms.Year = Year;
	GenerateCareer_Parms.Month = Month;
	GenerateCareer_Parms.Day = Day;
	GenerateCareer_Parms.MSSinceMidnight = MSSinceMidnight;

	pFnGenerateCareer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateCareer, &GenerateCareer_Parms, NULL );

	pFnGenerateCareer->FunctionFlags |= 0x400;

	if ( OutCareer )
		memcpy ( OutCareer, &GenerateCareer_Parms.OutCareer, 0x10 );

	if ( OutDisplayName )
		memcpy ( OutDisplayName, &GenerateCareer_Parms.OutDisplayName, 0x10 );
};

// Function SFXGame.SFXEngine.CreateCareerInternal
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 FirstName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  Origin                         ( CPF_Parm )
// unsigned char                  Notoriety                      ( CPF_Parm )
// int                            Year                           ( CPF_Parm )
// int                            Month                          ( CPF_Parm )
// int                            Day                            ( CPF_Parm )
// int                            MSSinceMidnight                ( CPF_Parm )

void USFXEngine::CreateCareerInternal ( struct FString FirstName, struct FString ClassName, unsigned char Origin, unsigned char Notoriety, int Year, int Month, int Day, int MSSinceMidnight )
{
	static UFunction* pFnCreateCareerInternal = NULL;

	if ( ! pFnCreateCareerInternal )
		pFnCreateCareerInternal = (UFunction*) UObject::GObjObjects()->Data[ 58031 ];

	USFXEngine_execCreateCareerInternal_Parms CreateCareerInternal_Parms;
	memcpy ( &CreateCareerInternal_Parms.FirstName, &FirstName, 0x10 );
	memcpy ( &CreateCareerInternal_Parms.ClassName, &ClassName, 0x10 );
	CreateCareerInternal_Parms.Origin = Origin;
	CreateCareerInternal_Parms.Notoriety = Notoriety;
	CreateCareerInternal_Parms.Year = Year;
	CreateCareerInternal_Parms.Month = Month;
	CreateCareerInternal_Parms.Day = Day;
	CreateCareerInternal_Parms.MSSinceMidnight = MSSinceMidnight;

	pFnCreateCareerInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateCareerInternal, &CreateCareerInternal_Parms, NULL );

	pFnCreateCareerInternal->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.CreateCareer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 FirstName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            srClass                        ( CPF_Parm )
// unsigned char                  Origin                         ( CPF_Parm )
// unsigned char                  Notoriety                      ( CPF_Parm )

void USFXEngine::CreateCareer ( struct FString FirstName, int srClass, unsigned char Origin, unsigned char Notoriety )
{
	static UFunction* pFnCreateCareer = NULL;

	if ( ! pFnCreateCareer )
		pFnCreateCareer = (UFunction*) UObject::GObjObjects()->Data[ 58042 ];

	USFXEngine_execCreateCareer_Parms CreateCareer_Parms;
	memcpy ( &CreateCareer_Parms.FirstName, &FirstName, 0x10 );
	CreateCareer_Parms.srClass = srClass;
	CreateCareer_Parms.Origin = Origin;
	CreateCareer_Parms.Notoriety = Notoriety;

	pFnCreateCareer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateCareer, &CreateCareer_Parms, NULL );

	pFnCreateCareer->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.OnResumeGameComplete
// [0x00120000] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USFXEngine::OnResumeGameComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnResumeGameComplete = NULL;

	if ( ! pFnOnResumeGameComplete )
		pFnOnResumeGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 57856 ];

	USFXEngine_execOnResumeGameComplete_Parms OnResumeGameComplete_Parms;
	OnResumeGameComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnResumeGameComplete, &OnResumeGameComplete_Parms, NULL );
};

// Function SFXGame.SFXEngine.SFXSaveCommandCallback
// [0x00120000] 
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SFXSaveCommandCallback ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnSFXSaveCommandCallback = NULL;

	if ( ! pFnSFXSaveCommandCallback )
		pFnSFXSaveCommandCallback = (UFunction*) UObject::GObjObjects()->Data[ 57874 ];

	USFXEngine_execSFXSaveCommandCallback_Parms SFXSaveCommandCallback_Parms;
	memcpy ( &SFXSaveCommandCallback_Parms.Args, &Args, 0x60 );

	this->ProcessEvent ( pFnSFXSaveCommandCallback, &SFXSaveCommandCallback_Parms, NULL );
};

// Function SFXGame.SFXEngine.CurrentSystemTimeSeconds
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float USFXEngine::CurrentSystemTimeSeconds ( )
{
	static UFunction* pFnCurrentSystemTimeSeconds = NULL;

	if ( ! pFnCurrentSystemTimeSeconds )
		pFnCurrentSystemTimeSeconds = (UFunction*) UObject::GObjObjects()->Data[ 58056 ];

	USFXEngine_execCurrentSystemTimeSeconds_Parms CurrentSystemTimeSeconds_Parms;

	pFnCurrentSystemTimeSeconds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCurrentSystemTimeSeconds, &CurrentSystemTimeSeconds_Parms, NULL );

	pFnCurrentSystemTimeSeconds->FunctionFlags |= 0x400;

	return CurrentSystemTimeSeconds_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.SaveGamerProfileComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::SaveGamerProfileComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnSaveGamerProfileComplete = NULL;

	if ( ! pFnSaveGamerProfileComplete )
		pFnSaveGamerProfileComplete = (UFunction*) UObject::GObjObjects()->Data[ 58058 ];

	USFXEngine_execSaveGamerProfileComplete_Parms SaveGamerProfileComplete_Parms;
	memcpy ( &SaveGamerProfileComplete_Parms.Args, &Args, 0x60 );

	pFnSaveGamerProfileComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveGamerProfileComplete, &SaveGamerProfileComplete_Parms, NULL );

	pFnSaveGamerProfileComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ReleaseSeekFreeObject
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ObjectName                     ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::ReleaseSeekFreeObject ( struct FString ObjectName )
{
	static UFunction* pFnReleaseSeekFreeObject = NULL;

	if ( ! pFnReleaseSeekFreeObject )
		pFnReleaseSeekFreeObject = (UFunction*) UObject::GObjObjects()->Data[ 58060 ];

	USFXEngine_execReleaseSeekFreeObject_Parms ReleaseSeekFreeObject_Parms;
	memcpy ( &ReleaseSeekFreeObject_Parms.ObjectName, &ObjectName, 0x10 );

	pFnReleaseSeekFreeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReleaseSeekFreeObject, &ReleaseSeekFreeObject_Parms, NULL );

	pFnReleaseSeekFreeObject->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.LoadSeekFreeObjectAsync
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Object                         ( CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  ObjectClass                    ( CPF_Parm )
// unsigned char                  Status                         ( CPF_Parm | CPF_OutParm )

class UObject* USFXEngine::LoadSeekFreeObjectAsync ( struct FString Object, class UClass* ObjectClass, unsigned char* Status )
{
	static UFunction* pFnLoadSeekFreeObjectAsync = NULL;

	if ( ! pFnLoadSeekFreeObjectAsync )
		pFnLoadSeekFreeObjectAsync = (UFunction*) UObject::GObjObjects()->Data[ 58062 ];

	USFXEngine_execLoadSeekFreeObjectAsync_Parms LoadSeekFreeObjectAsync_Parms;
	memcpy ( &LoadSeekFreeObjectAsync_Parms.Object, &Object, 0x10 );
	LoadSeekFreeObjectAsync_Parms.ObjectClass = ObjectClass;

	pFnLoadSeekFreeObjectAsync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadSeekFreeObjectAsync, &LoadSeekFreeObjectAsync_Parms, NULL );

	pFnLoadSeekFreeObjectAsync->FunctionFlags |= 0x400;

	if ( Status )
		*Status = LoadSeekFreeObjectAsync_Parms.Status;

	return LoadSeekFreeObjectAsync_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.LoadSeekFreeObject
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ObjectName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  ObjectClass                    ( CPF_Parm )

class UObject* USFXEngine::LoadSeekFreeObject ( struct FString ObjectName, class UClass* ObjectClass )
{
	static UFunction* pFnLoadSeekFreeObject = NULL;

	if ( ! pFnLoadSeekFreeObject )
		pFnLoadSeekFreeObject = (UFunction*) UObject::GObjObjects()->Data[ 58064 ];

	USFXEngine_execLoadSeekFreeObject_Parms LoadSeekFreeObject_Parms;
	memcpy ( &LoadSeekFreeObject_Parms.ObjectName, &ObjectName, 0x10 );
	LoadSeekFreeObject_Parms.ObjectClass = ObjectClass;

	pFnLoadSeekFreeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadSeekFreeObject, &LoadSeekFreeObject_Parms, NULL );

	pFnLoadSeekFreeObject->FunctionFlags |= 0x400;

	return LoadSeekFreeObject_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.IsSeekFreeObjectSupported
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ObjectName                     ( CPF_Parm | CPF_NeedCtorLink )

bool USFXEngine::IsSeekFreeObjectSupported ( struct FString ObjectName )
{
	static UFunction* pFnIsSeekFreeObjectSupported = NULL;

	if ( ! pFnIsSeekFreeObjectSupported )
		pFnIsSeekFreeObjectSupported = (UFunction*) UObject::GObjObjects()->Data[ 58069 ];

	USFXEngine_execIsSeekFreeObjectSupported_Parms IsSeekFreeObjectSupported_Parms;
	memcpy ( &IsSeekFreeObjectSupported_Parms.ObjectName, &ObjectName, 0x10 );

	pFnIsSeekFreeObjectSupported->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSeekFreeObjectSupported, &IsSeekFreeObjectSupported_Parms, NULL );

	pFnIsSeekFreeObjectSupported->FunctionFlags |= 0x400;

	return IsSeekFreeObjectSupported_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.LaunchUnreaperWithDiscCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXEngine::LaunchUnreaperWithDiscCheck ( )
{
	static UFunction* pFnLaunchUnreaperWithDiscCheck = NULL;

	if ( ! pFnLaunchUnreaperWithDiscCheck )
		pFnLaunchUnreaperWithDiscCheck = (UFunction*) UObject::GObjObjects()->Data[ 58073 ];

	USFXEngine_execLaunchUnreaperWithDiscCheck_Parms LaunchUnreaperWithDiscCheck_Parms;

	pFnLaunchUnreaperWithDiscCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLaunchUnreaperWithDiscCheck, &LaunchUnreaperWithDiscCheck_Parms, NULL );

	pFnLaunchUnreaperWithDiscCheck->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.LaunchUnreaper
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::LaunchUnreaper ( )
{
	static UFunction* pFnLaunchUnreaper = NULL;

	if ( ! pFnLaunchUnreaper )
		pFnLaunchUnreaper = (UFunction*) UObject::GObjObjects()->Data[ 58076 ];

	USFXEngine_execLaunchUnreaper_Parms LaunchUnreaper_Parms;

	pFnLaunchUnreaper->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLaunchUnreaper, &LaunchUnreaper_Parms, NULL );

	pFnLaunchUnreaper->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.DeleteProfileComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FSFXSaveGameCommandEventArgs Args                           ( CPF_Parm | CPF_NeedCtorLink )

void USFXEngine::DeleteProfileComplete ( struct FSFXSaveGameCommandEventArgs Args )
{
	static UFunction* pFnDeleteProfileComplete = NULL;

	if ( ! pFnDeleteProfileComplete )
		pFnDeleteProfileComplete = (UFunction*) UObject::GObjObjects()->Data[ 58077 ];

	USFXEngine_execDeleteProfileComplete_Parms DeleteProfileComplete_Parms;
	memcpy ( &DeleteProfileComplete_Parms.Args, &Args, 0x60 );

	pFnDeleteProfileComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteProfileComplete, &DeleteProfileComplete_Parms, NULL );

	pFnDeleteProfileComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ReLaunchExecutable
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXEngine::ReLaunchExecutable ( )
{
	static UFunction* pFnReLaunchExecutable = NULL;

	if ( ! pFnReLaunchExecutable )
		pFnReLaunchExecutable = (UFunction*) UObject::GObjObjects()->Data[ 58078 ];

	USFXEngine_execReLaunchExecutable_Parms ReLaunchExecutable_Parms;

	pFnReLaunchExecutable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReLaunchExecutable, &ReLaunchExecutable_Parms, NULL );

	pFnReLaunchExecutable->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.SkipMovie
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::SkipMovie ( )
{
	static UFunction* pFnSkipMovie = NULL;

	if ( ! pFnSkipMovie )
		pFnSkipMovie = (UFunction*) UObject::GObjObjects()->Data[ 58080 ];

	USFXEngine_execSkipMovie_Parms SkipMovie_Parms;

	pFnSkipMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkipMovie, &SkipMovie_Parms, NULL );

	pFnSkipMovie->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.ResetForcedInactiveParticleSystems
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXEngine::ResetForcedInactiveParticleSystems ( )
{
	static UFunction* pFnResetForcedInactiveParticleSystems = NULL;

	if ( ! pFnResetForcedInactiveParticleSystems )
		pFnResetForcedInactiveParticleSystems = (UFunction*) UObject::GObjObjects()->Data[ 58081 ];

	USFXEngine_execResetForcedInactiveParticleSystems_Parms ResetForcedInactiveParticleSystems_Parms;

	pFnResetForcedInactiveParticleSystems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetForcedInactiveParticleSystems, &ResetForcedInactiveParticleSystems_Parms, NULL );

	pFnResetForcedInactiveParticleSystems->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXEngine.GetEngine
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USFXEngine*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXEngine* USFXEngine::GetEngine ( )
{
	static UFunction* pFnGetEngine = NULL;

	if ( ! pFnGetEngine )
		pFnGetEngine = (UFunction*) UObject::GObjObjects()->Data[ 52337 ];

	USFXEngine_execGetEngine_Parms GetEngine_Parms;

	pFnGetEngine->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEngine, &GetEngine_Parms, NULL );

	pFnGetEngine->FunctionFlags |= 0x400;

	return GetEngine_Parms.ReturnValue;
};

// Function SFXGame.SFXEngine.CurrentPlayerInfo
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPlayerInfoEx           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FPlayerInfoEx USFXEngine::CurrentPlayerInfo ( )
{
	static UFunction* pFnCurrentPlayerInfo = NULL;

	if ( ! pFnCurrentPlayerInfo )
		pFnCurrentPlayerInfo = (UFunction*) UObject::GObjObjects()->Data[ 58082 ];

	USFXEngine_execCurrentPlayerInfo_Parms CurrentPlayerInfo_Parms;

	pFnCurrentPlayerInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCurrentPlayerInfo, &CurrentPlayerInfo_Parms, NULL );

	pFnCurrentPlayerInfo->FunctionFlags |= 0x400;

	return CurrentPlayerInfo_Parms.ReturnValue;
};

// Function SFXGame.SFXSaveGame.ResetToDefaults
// [0x00020002] 
// Parameters infos:

void USFXSaveGame::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 58365 ];

	USFXSaveGame_execResetToDefaults_Parms ResetToDefaults_Parms;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.EstablishGlobalPlotVariablesForReplayCharacter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USFXSaveGame::eventEstablishGlobalPlotVariablesForReplayCharacter ( )
{
	static UFunction* pFnEstablishGlobalPlotVariablesForReplayCharacter = NULL;

	if ( ! pFnEstablishGlobalPlotVariablesForReplayCharacter )
		pFnEstablishGlobalPlotVariablesForReplayCharacter = (UFunction*) UObject::GObjObjects()->Data[ 58366 ];

	USFXSaveGame_eventEstablishGlobalPlotVariablesForReplayCharacter_Parms EstablishGlobalPlotVariablesForReplayCharacter_Parms;

	this->ProcessEvent ( pFnEstablishGlobalPlotVariablesForReplayCharacter, &EstablishGlobalPlotVariablesForReplayCharacter_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.LoadItem
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UObject*                 InOuter                        ( CPF_Parm )
// class UBioItem*                Item                           ( CPF_Parm | CPF_OutParm )
// struct FItemSaveRecord         SavedItem                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadItem ( class UObject* InOuter, class UBioItem** Item, struct FItemSaveRecord* SavedItem )
{
	static UFunction* pFnLoadItem = NULL;

	if ( ! pFnLoadItem )
		pFnLoadItem = (UFunction*) UObject::GObjObjects()->Data[ 58367 ];

	USFXSaveGame_execLoadItem_Parms LoadItem_Parms;
	LoadItem_Parms.InOuter = InOuter;

	this->ProcessEvent ( pFnLoadItem, &LoadItem_Parms, NULL );

	if ( Item )
		*Item = LoadItem_Parms.Item;

	if ( SavedItem )
		memcpy ( SavedItem, &LoadItem_Parms.SavedItem, 0x24 );
};

// Function SFXGame.SFXSaveGame.LoadItems
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UObject*                 InOuter                        ( CPF_Parm )
// struct TArray<class UBioItem*> Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FItemSaveRecord> SavedItems                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadItems ( class UObject* InOuter, struct TArray<class UBioItem*>* Items, struct TArray<struct FItemSaveRecord>* SavedItems )
{
	static UFunction* pFnLoadItems = NULL;

	if ( ! pFnLoadItems )
		pFnLoadItems = (UFunction*) UObject::GObjObjects()->Data[ 58369 ];

	USFXSaveGame_execLoadItems_Parms LoadItems_Parms;
	LoadItems_Parms.InOuter = InOuter;

	this->ProcessEvent ( pFnLoadItems, &LoadItems_Parms, NULL );

	if ( Items )
		memcpy ( Items, &LoadItems_Parms.Items, 0x10 );

	if ( SavedItems )
		memcpy ( SavedItems, &LoadItems_Parms.SavedItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadEquipment
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        Player                         ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> SavedEquipment                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FItemSaveRecord> SavedWeapons                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadEquipment ( class UBioPawnBehavior** Player, struct TArray<struct FItemSaveRecord>* SavedEquipment, struct TArray<struct FItemSaveRecord>* SavedWeapons )
{
	static UFunction* pFnLoadEquipment = NULL;

	if ( ! pFnLoadEquipment )
		pFnLoadEquipment = (UFunction*) UObject::GObjObjects()->Data[ 58378 ];

	USFXSaveGame_execLoadEquipment_Parms LoadEquipment_Parms;

	this->ProcessEvent ( pFnLoadEquipment, &LoadEquipment_Parms, NULL );

	if ( Player )
		*Player = LoadEquipment_Parms.Player;

	if ( SavedEquipment )
		memcpy ( SavedEquipment, &LoadEquipment_Parms.SavedEquipment, 0x10 );

	if ( SavedWeapons )
		memcpy ( SavedWeapons, &LoadEquipment_Parms.SavedWeapons, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadBuybackItems
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> SavedItems                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadBuybackItems ( class ABioWorldInfo** WorldInfo, struct TArray<struct FItemSaveRecord>* SavedItems )
{
	static UFunction* pFnLoadBuybackItems = NULL;

	if ( ! pFnLoadBuybackItems )
		pFnLoadBuybackItems = (UFunction*) UObject::GObjObjects()->Data[ 58387 ];

	USFXSaveGame_execLoadBuybackItems_Parms LoadBuybackItems_Parms;

	this->ProcessEvent ( pFnLoadBuybackItems, &LoadBuybackItems_Parms, NULL );

	if ( WorldInfo )
		*WorldInfo = LoadBuybackItems_Parms.WorldInfo;

	if ( SavedItems )
		memcpy ( SavedItems, &LoadBuybackItems_Parms.SavedItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadInventory
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioInventory*           Inventory                      ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> SavedItems                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadInventory ( class UBioInventory** Inventory, struct TArray<struct FItemSaveRecord>* SavedItems )
{
	static UFunction* pFnLoadInventory = NULL;

	if ( ! pFnLoadInventory )
		pFnLoadInventory = (UFunction*) UObject::GObjObjects()->Data[ 58397 ];

	USFXSaveGame_execLoadInventory_Parms LoadInventory_Parms;

	this->ProcessEvent ( pFnLoadInventory, &LoadInventory_Parms, NULL );

	if ( Inventory )
		*Inventory = LoadInventory_Parms.Inventory;

	if ( SavedItems )
		memcpy ( SavedItems, &LoadInventory_Parms.SavedItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadTalents
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        playerBehavior                 ( CPF_Parm )
// struct TArray<struct FSimpleTalentSaveRecord> simpleRecords                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FComplexTalentSaveRecord> complexRecords                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadTalents ( class UBioPawnBehavior* playerBehavior, struct TArray<struct FSimpleTalentSaveRecord>* simpleRecords, struct TArray<struct FComplexTalentSaveRecord>* complexRecords )
{
	static UFunction* pFnLoadTalents = NULL;

	if ( ! pFnLoadTalents )
		pFnLoadTalents = (UFunction*) UObject::GObjObjects()->Data[ 58402 ];

	USFXSaveGame_execLoadTalents_Parms LoadTalents_Parms;
	LoadTalents_Parms.playerBehavior = playerBehavior;

	this->ProcessEvent ( pFnLoadTalents, &LoadTalents_Parms, NULL );

	if ( simpleRecords )
		memcpy ( simpleRecords, &LoadTalents_Parms.simpleRecords, 0x10 );

	if ( complexRecords )
		memcpy ( complexRecords, &LoadTalents_Parms.complexRecords, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadMorphHead
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// class UBioMorphFace*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioMorphFace* USFXSaveGame::LoadMorphHead ( )
{
	static UFunction* pFnLoadMorphHead = NULL;

	if ( ! pFnLoadMorphHead )
		pFnLoadMorphHead = (UFunction*) UObject::GObjObjects()->Data[ 58409 ];

	USFXSaveGame_execLoadMorphHead_Parms LoadMorphHead_Parms;

	this->ProcessEvent ( pFnLoadMorphHead, &LoadMorphHead_Parms, NULL );

	return LoadMorphHead_Parms.ReturnValue;
};

// Function SFXGame.SFXSaveGame.LoadAppearance
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        Player                         ( CPF_Parm )
// struct FAppearanceSaveRecord   Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadAppearance ( class UBioPawnBehavior* Player, struct FAppearanceSaveRecord* Record )
{
	static UFunction* pFnLoadAppearance = NULL;

	if ( ! pFnLoadAppearance )
		pFnLoadAppearance = (UFunction*) UObject::GObjObjects()->Data[ 58422 ];

	USFXSaveGame_execLoadAppearance_Parms LoadAppearance_Parms;
	LoadAppearance_Parms.Player = Player;

	this->ProcessEvent ( pFnLoadAppearance, &LoadAppearance_Parms, NULL );

	if ( Record )
		memcpy ( Record, &LoadAppearance_Parms.Record, 0xAC );
};

// Function SFXGame.SFXSaveGame.LoadHenchman
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Tag                            ( CPF_Parm )
// class UBioPawnBehavior*        henchBehavior                  ( CPF_Parm | CPF_OutParm )

bool USFXSaveGame::LoadHenchman ( struct FName Tag, class UBioPawnBehavior** henchBehavior )
{
	static UFunction* pFnLoadHenchman = NULL;

	if ( ! pFnLoadHenchman )
		pFnLoadHenchman = (UFunction*) UObject::GObjObjects()->Data[ 58436 ];

	USFXSaveGame_execLoadHenchman_Parms LoadHenchman_Parms;
	memcpy ( &LoadHenchman_Parms.Tag, &Tag, 0x8 );

	this->ProcessEvent ( pFnLoadHenchman, &LoadHenchman_Parms, NULL );

	if ( henchBehavior )
		*henchBehavior = LoadHenchman_Parms.henchBehavior;

	return LoadHenchman_Parms.ReturnValue;
};

// Function SFXGame.SFXSaveGame.PostLoad
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void USFXSaveGame::eventPostLoad ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnPostLoad = NULL;

	if ( ! pFnPostLoad )
		pFnPostLoad = (UFunction*) UObject::GObjObjects()->Data[ 58441 ];

	USFXSaveGame_eventPostLoad_Parms PostLoad_Parms;
	PostLoad_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnPostLoad, &PostLoad_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.MoveToFreeSpot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oActor                         ( CPF_Parm )
// struct FVector                 Location                       ( CPF_Parm )

void USFXSaveGame::MoveToFreeSpot ( class AActor* oActor, struct FVector Location )
{
	static UFunction* pFnMoveToFreeSpot = NULL;

	if ( ! pFnMoveToFreeSpot )
		pFnMoveToFreeSpot = (UFunction*) UObject::GObjObjects()->Data[ 58449 ];

	USFXSaveGame_execMoveToFreeSpot_Parms MoveToFreeSpot_Parms;
	MoveToFreeSpot_Parms.oActor = oActor;
	memcpy ( &MoveToFreeSpot_Parms.Location, &Location, 0xC );

	pFnMoveToFreeSpot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMoveToFreeSpot, &MoveToFreeSpot_Parms, NULL );

	pFnMoveToFreeSpot->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXSaveGame.LoadVehicle
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void USFXSaveGame::LoadVehicle ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnLoadVehicle = NULL;

	if ( ! pFnLoadVehicle )
		pFnLoadVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58459 ];

	USFXSaveGame_execLoadVehicle_Parms LoadVehicle_Parms;
	LoadVehicle_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnLoadVehicle, &LoadVehicle_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.SaveVehicle
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioVehicleBehaviorBase* Vehicle                        ( CPF_Parm )
// unsigned long                  isDriving                      ( CPF_Parm )

void USFXSaveGame::SaveVehicle ( class UBioVehicleBehaviorBase* Vehicle, unsigned long isDriving )
{
	static UFunction* pFnSaveVehicle = NULL;

	if ( ! pFnSaveVehicle )
		pFnSaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58462 ];

	USFXSaveGame_execSaveVehicle_Parms SaveVehicle_Parms;
	SaveVehicle_Parms.Vehicle = Vehicle;
	SaveVehicle_Parms.isDriving = isDriving;

	this->ProcessEvent ( pFnSaveVehicle, &SaveVehicle_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.LoadPlayer
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void USFXSaveGame::eventLoadPlayer ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnLoadPlayer = NULL;

	if ( ! pFnLoadPlayer )
		pFnLoadPlayer = (UFunction*) UObject::GObjObjects()->Data[ 58467 ];

	USFXSaveGame_eventLoadPlayer_Parms LoadPlayer_Parms;
	LoadPlayer_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnLoadPlayer, &LoadPlayer_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.SaveTalents
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        playerBehavior                 ( CPF_Parm )
// struct TArray<struct FSimpleTalentSaveRecord> simpleRecords                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FComplexTalentSaveRecord> complexRecords                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveTalents ( class UBioPawnBehavior* playerBehavior, struct TArray<struct FSimpleTalentSaveRecord>* simpleRecords, struct TArray<struct FComplexTalentSaveRecord>* complexRecords )
{
	static UFunction* pFnSaveTalents = NULL;

	if ( ! pFnSaveTalents )
		pFnSaveTalents = (UFunction*) UObject::GObjObjects()->Data[ 58471 ];

	USFXSaveGame_execSaveTalents_Parms SaveTalents_Parms;
	SaveTalents_Parms.playerBehavior = playerBehavior;

	this->ProcessEvent ( pFnSaveTalents, &SaveTalents_Parms, NULL );

	if ( simpleRecords )
		memcpy ( simpleRecords, &SaveTalents_Parms.simpleRecords, 0x10 );

	if ( complexRecords )
		memcpy ( complexRecords, &SaveTalents_Parms.complexRecords, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveMorphHead
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioMorphFace*           Morph                          ( CPF_Parm )
// struct FMorphHeadSaveRecord    Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool USFXSaveGame::SaveMorphHead ( class UBioMorphFace* Morph, struct FMorphHeadSaveRecord* Record )
{
	static UFunction* pFnSaveMorphHead = NULL;

	if ( ! pFnSaveMorphHead )
		pFnSaveMorphHead = (UFunction*) UObject::GObjObjects()->Data[ 58486 ];

	USFXSaveGame_execSaveMorphHead_Parms SaveMorphHead_Parms;
	SaveMorphHead_Parms.Morph = Morph;

	this->ProcessEvent ( pFnSaveMorphHead, &SaveMorphHead_Parms, NULL );

	if ( Record )
		memcpy ( Record, &SaveMorphHead_Parms.Record, 0xA8 );

	return SaveMorphHead_Parms.ReturnValue;
};

// Function SFXGame.SFXSaveGame.SaveAppearance
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        Player                         ( CPF_Parm )
// struct FAppearanceSaveRecord   Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveAppearance ( class UBioPawnBehavior* Player, struct FAppearanceSaveRecord* Record )
{
	static UFunction* pFnSaveAppearance = NULL;

	if ( ! pFnSaveAppearance )
		pFnSaveAppearance = (UFunction*) UObject::GObjObjects()->Data[ 58498 ];

	USFXSaveGame_execSaveAppearance_Parms SaveAppearance_Parms;
	SaveAppearance_Parms.Player = Player;

	this->ProcessEvent ( pFnSaveAppearance, &SaveAppearance_Parms, NULL );

	if ( Record )
		memcpy ( Record, &SaveAppearance_Parms.Record, 0xAC );
};

// Function SFXGame.SFXSaveGame.LoadHotKeys
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// struct TArray<struct FHotKeySaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadHotKeys ( class ABioPlayerController* PC, struct TArray<struct FHotKeySaveRecord>* Records )
{
	static UFunction* pFnLoadHotKeys = NULL;

	if ( ! pFnLoadHotKeys )
		pFnLoadHotKeys = (UFunction*) UObject::GObjObjects()->Data[ 58485 ];

	USFXSaveGame_execLoadHotKeys_Parms LoadHotKeys_Parms;
	LoadHotKeys_Parms.PC = PC;

	this->ProcessEvent ( pFnLoadHotKeys, &LoadHotKeys_Parms, NULL );

	if ( Records )
		memcpy ( Records, &LoadHotKeys_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveHotKeys
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// struct TArray<struct FHotKeySaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveHotKeys ( class ABioPlayerController* PC, struct TArray<struct FHotKeySaveRecord>* Records )
{
	static UFunction* pFnSaveHotKeys = NULL;

	if ( ! pFnSaveHotKeys )
		pFnSaveHotKeys = (UFunction*) UObject::GObjObjects()->Data[ 58506 ];

	USFXSaveGame_execSaveHotKeys_Parms SaveHotKeys_Parms;
	SaveHotKeys_Parms.PC = PC;

	this->ProcessEvent ( pFnSaveHotKeys, &SaveHotKeys_Parms, NULL );

	if ( Records )
		memcpy ( Records, &SaveHotKeys_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveHenchman
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct FName                   pawnTag                        ( CPF_Parm )
// class UBioPawnBehavior*        henchBehavior                  ( CPF_Parm | CPF_OutParm )
// struct FHenchmanSaveRecord     Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveHenchman ( struct FName pawnTag, class UBioPawnBehavior** henchBehavior, struct FHenchmanSaveRecord* Record )
{
	static UFunction* pFnSaveHenchman = NULL;

	if ( ! pFnSaveHenchman )
		pFnSaveHenchman = (UFunction*) UObject::GObjObjects()->Data[ 58511 ];

	USFXSaveGame_execSaveHenchman_Parms SaveHenchman_Parms;
	memcpy ( &SaveHenchman_Parms.pawnTag, &pawnTag, 0x8 );

	this->ProcessEvent ( pFnSaveHenchman, &SaveHenchman_Parms, NULL );

	if ( henchBehavior )
		*henchBehavior = SaveHenchman_Parms.henchBehavior;

	if ( Record )
		memcpy ( Record, &SaveHenchman_Parms.Record, 0x94 );
};

// Function SFXGame.SFXSaveGame.SaveItem
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioItem*                Item                           ( CPF_Parm | CPF_OutParm )
// struct FItemSaveRecord         OutItem                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveItem ( class UBioItem** Item, struct FItemSaveRecord* OutItem )
{
	static UFunction* pFnSaveItem = NULL;

	if ( ! pFnSaveItem )
		pFnSaveItem = (UFunction*) UObject::GObjObjects()->Data[ 58516 ];

	USFXSaveGame_execSaveItem_Parms SaveItem_Parms;

	this->ProcessEvent ( pFnSaveItem, &SaveItem_Parms, NULL );

	if ( Item )
		*Item = SaveItem_Parms.Item;

	if ( OutItem )
		memcpy ( OutItem, &SaveItem_Parms.OutItem, 0x24 );
};

// Function SFXGame.SFXSaveGame.SaveItems
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<class UBioItem*> Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FItemSaveRecord> OutItems                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveItems ( struct TArray<class UBioItem*>* Items, struct TArray<struct FItemSaveRecord>* OutItems )
{
	static UFunction* pFnSaveItems = NULL;

	if ( ! pFnSaveItems )
		pFnSaveItems = (UFunction*) UObject::GObjObjects()->Data[ 58523 ];

	USFXSaveGame_execSaveItems_Parms SaveItems_Parms;

	this->ProcessEvent ( pFnSaveItems, &SaveItems_Parms, NULL );

	if ( Items )
		memcpy ( Items, &SaveItems_Parms.Items, 0x10 );

	if ( OutItems )
		memcpy ( OutItems, &SaveItems_Parms.OutItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveEquipment
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioPawnBehavior*        Player                         ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> Equipment                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FItemSaveRecord> Weapons                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveEquipment ( class UBioPawnBehavior** Player, struct TArray<struct FItemSaveRecord>* Equipment, struct TArray<struct FItemSaveRecord>* Weapons )
{
	static UFunction* pFnSaveEquipment = NULL;

	if ( ! pFnSaveEquipment )
		pFnSaveEquipment = (UFunction*) UObject::GObjObjects()->Data[ 58522 ];

	USFXSaveGame_execSaveEquipment_Parms SaveEquipment_Parms;

	this->ProcessEvent ( pFnSaveEquipment, &SaveEquipment_Parms, NULL );

	if ( Player )
		*Player = SaveEquipment_Parms.Player;

	if ( Equipment )
		memcpy ( Equipment, &SaveEquipment_Parms.Equipment, 0x10 );

	if ( Weapons )
		memcpy ( Weapons, &SaveEquipment_Parms.Weapons, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveBuybackItems
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> OutItems                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveBuybackItems ( class ABioWorldInfo** WorldInfo, struct TArray<struct FItemSaveRecord>* OutItems )
{
	static UFunction* pFnSaveBuybackItems = NULL;

	if ( ! pFnSaveBuybackItems )
		pFnSaveBuybackItems = (UFunction*) UObject::GObjObjects()->Data[ 58539 ];

	USFXSaveGame_execSaveBuybackItems_Parms SaveBuybackItems_Parms;

	this->ProcessEvent ( pFnSaveBuybackItems, &SaveBuybackItems_Parms, NULL );

	if ( WorldInfo )
		*WorldInfo = SaveBuybackItems_Parms.WorldInfo;

	if ( OutItems )
		memcpy ( OutItems, &SaveBuybackItems_Parms.OutItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveInventory
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioInventory*           Inventory                      ( CPF_Parm | CPF_OutParm )
// struct TArray<struct FItemSaveRecord> OutItems                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveInventory ( class UBioInventory** Inventory, struct TArray<struct FItemSaveRecord>* OutItems )
{
	static UFunction* pFnSaveInventory = NULL;

	if ( ! pFnSaveInventory )
		pFnSaveInventory = (UFunction*) UObject::GObjObjects()->Data[ 58549 ];

	USFXSaveGame_execSaveInventory_Parms SaveInventory_Parms;

	this->ProcessEvent ( pFnSaveInventory, &SaveInventory_Parms, NULL );

	if ( Inventory )
		*Inventory = SaveInventory_Parms.Inventory;

	if ( OutItems )
		memcpy ( OutItems, &SaveInventory_Parms.OutItems, 0x10 );
};

// Function SFXGame.SFXSaveGame.SavePlotData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USFXSaveGame::SavePlotData ( )
{
	static UFunction* pFnSavePlotData = NULL;

	if ( ! pFnSavePlotData )
		pFnSavePlotData = (UFunction*) UObject::GObjObjects()->Data[ 58555 ];

	USFXSaveGame_execSavePlotData_Parms SavePlotData_Parms;

	pFnSavePlotData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSavePlotData, &SavePlotData_Parms, NULL );

	pFnSavePlotData->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXSaveGame.SaveEquipmentToInventory
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXSaveGame::SaveEquipmentToInventory ( )
{
	static UFunction* pFnSaveEquipmentToInventory = NULL;

	if ( ! pFnSaveEquipmentToInventory )
		pFnSaveEquipmentToInventory = (UFunction*) UObject::GObjObjects()->Data[ 58561 ];

	USFXSaveGame_execSaveEquipmentToInventory_Parms SaveEquipmentToInventory_Parms;

	this->ProcessEvent ( pFnSaveEquipmentToInventory, &SaveEquipmentToInventory_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.SaveSingleHenchman
// [0x00020002] 
// Parameters infos:
// struct FName                   Tag                            ( CPF_Parm )
// class ABioPawn*                henchPawn                      ( CPF_Parm )

void USFXSaveGame::SaveSingleHenchman ( struct FName Tag, class ABioPawn* henchPawn )
{
	static UFunction* pFnSaveSingleHenchman = NULL;

	if ( ! pFnSaveSingleHenchman )
		pFnSaveSingleHenchman = (UFunction*) UObject::GObjObjects()->Data[ 58562 ];

	USFXSaveGame_execSaveSingleHenchman_Parms SaveSingleHenchman_Parms;
	memcpy ( &SaveSingleHenchman_Parms.Tag, &Tag, 0x8 );
	SaveSingleHenchman_Parms.henchPawn = henchPawn;

	this->ProcessEvent ( pFnSaveSingleHenchman, &SaveSingleHenchman_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.SavePlayer
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class ABioPlayerController*    PlayerController               ( CPF_Parm )

void USFXSaveGame::eventSavePlayer ( class ABioPlayerController* PlayerController )
{
	static UFunction* pFnSavePlayer = NULL;

	if ( ! pFnSavePlayer )
		pFnSavePlayer = (UFunction*) UObject::GObjObjects()->Data[ 58566 ];

	USFXSaveGame_eventSavePlayer_Parms SavePlayer_Parms;
	SavePlayer_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnSavePlayer, &SavePlayer_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.LoadGameOptions
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioGamerProfile*        Profile                        ( CPF_Parm | CPF_OutParm )
// struct FGameOptionsSaveRecord  Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadGameOptions ( class UBioGamerProfile** Profile, struct FGameOptionsSaveRecord* Record )
{
	static UFunction* pFnLoadGameOptions = NULL;

	if ( ! pFnLoadGameOptions )
		pFnLoadGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 58571 ];

	USFXSaveGame_execLoadGameOptions_Parms LoadGameOptions_Parms;

	this->ProcessEvent ( pFnLoadGameOptions, &LoadGameOptions_Parms, NULL );

	if ( Profile )
		*Profile = LoadGameOptions_Parms.Profile;

	if ( Record )
		memcpy ( Record, &LoadGameOptions_Parms.Record, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadSaveGameOptions
// [0x00420803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioGamerProfile*        Profile                        ( CPF_Parm | CPF_OutParm )

void USFXSaveGame::eventLoadSaveGameOptions ( class UBioGamerProfile** Profile )
{
	static UFunction* pFnLoadSaveGameOptions = NULL;

	if ( ! pFnLoadSaveGameOptions )
		pFnLoadSaveGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 58483 ];

	USFXSaveGame_eventLoadSaveGameOptions_Parms LoadSaveGameOptions_Parms;

	this->ProcessEvent ( pFnLoadSaveGameOptions, &LoadSaveGameOptions_Parms, NULL );

	if ( Profile )
		*Profile = LoadSaveGameOptions_Parms.Profile;
};

// Function SFXGame.SFXSaveGame.LoadCharacterProfiles
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FCharacterProfile> Profiles                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FCharacterProfileSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadCharacterProfiles ( struct TArray<struct FCharacterProfile>* Profiles, struct TArray<struct FCharacterProfileSaveRecord>* Records )
{
	static UFunction* pFnLoadCharacterProfiles = NULL;

	if ( ! pFnLoadCharacterProfiles )
		pFnLoadCharacterProfiles = (UFunction*) UObject::GObjObjects()->Data[ 58604 ];

	USFXSaveGame_execLoadCharacterProfiles_Parms LoadCharacterProfiles_Parms;

	this->ProcessEvent ( pFnLoadCharacterProfiles, &LoadCharacterProfiles_Parms, NULL );

	if ( Profiles )
		memcpy ( Profiles, &LoadCharacterProfiles_Parms.Profiles, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadCharacterProfiles_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadFloatStats
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<float>           Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<float>           Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadFloatStats ( struct TArray<float>* Variables, struct TArray<float>* Records )
{
	static UFunction* pFnLoadFloatStats = NULL;

	if ( ! pFnLoadFloatStats )
		pFnLoadFloatStats = (UFunction*) UObject::GObjObjects()->Data[ 58609 ];

	USFXSaveGame_execLoadFloatStats_Parms LoadFloatStats_Parms;

	this->ProcessEvent ( pFnLoadFloatStats, &LoadFloatStats_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadFloatStats_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadFloatStats_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadIntStats
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<int>             Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadIntStats ( struct TArray<int>* Variables, struct TArray<int>* Records )
{
	static UFunction* pFnLoadIntStats = NULL;

	if ( ! pFnLoadIntStats )
		pFnLoadIntStats = (UFunction*) UObject::GObjObjects()->Data[ 58615 ];

	USFXSaveGame_execLoadIntStats_Parms LoadIntStats_Parms;

	this->ProcessEvent ( pFnLoadIntStats, &LoadIntStats_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadIntStats_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadIntStats_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadBonusTalents
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FBonusTalent> talents                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FBonusTalentSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadBonusTalents ( struct TArray<struct FBonusTalent>* talents, struct TArray<struct FBonusTalentSaveRecord>* Records )
{
	static UFunction* pFnLoadBonusTalents = NULL;

	if ( ! pFnLoadBonusTalents )
		pFnLoadBonusTalents = (UFunction*) UObject::GObjObjects()->Data[ 58621 ];

	USFXSaveGame_execLoadBonusTalents_Parms LoadBonusTalents_Parms;

	this->ProcessEvent ( pFnLoadBonusTalents, &LoadBonusTalents_Parms, NULL );

	if ( talents )
		memcpy ( talents, &LoadBonusTalents_Parms.talents, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadBonusTalents_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadAchievementStates
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<int>             Achievements                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadAchievementStates ( struct TArray<int>* Achievements, struct TArray<int>* Records )
{
	static UFunction* pFnLoadAchievementStates = NULL;

	if ( ! pFnLoadAchievementStates )
		pFnLoadAchievementStates = (UFunction*) UObject::GObjObjects()->Data[ 58627 ];

	USFXSaveGame_execLoadAchievementStates_Parms LoadAchievementStates_Parms;

	this->ProcessEvent ( pFnLoadAchievementStates, &LoadAchievementStates_Parms, NULL );

	if ( Achievements )
		memcpy ( Achievements, &LoadAchievementStates_Parms.Achievements, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadAchievementStates_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadRewards
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileRewardStat> Rewards                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileRewardSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadRewards ( struct TArray<struct FProfileRewardStat>* Rewards, struct TArray<struct FProfileRewardSaveRecord>* Records )
{
	static UFunction* pFnLoadRewards = NULL;

	if ( ! pFnLoadRewards )
		pFnLoadRewards = (UFunction*) UObject::GObjObjects()->Data[ 58633 ];

	USFXSaveGame_execLoadRewards_Parms LoadRewards_Parms;

	this->ProcessEvent ( pFnLoadRewards, &LoadRewards_Parms, NULL );

	if ( Rewards )
		memcpy ( Rewards, &LoadRewards_Parms.Rewards, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadRewards_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadPlaythroughs
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfilePlaythrough> Playthroughs                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfilePlaythroughSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadPlaythroughs ( struct TArray<struct FProfilePlaythrough>* Playthroughs, struct TArray<struct FProfilePlaythroughSaveRecord>* Records )
{
	static UFunction* pFnLoadPlaythroughs = NULL;

	if ( ! pFnLoadPlaythroughs )
		pFnLoadPlaythroughs = (UFunction*) UObject::GObjObjects()->Data[ 58639 ];

	USFXSaveGame_execLoadPlaythroughs_Parms LoadPlaythroughs_Parms;

	this->ProcessEvent ( pFnLoadPlaythroughs, &LoadPlaythroughs_Parms, NULL );

	if ( Playthroughs )
		memcpy ( Playthroughs, &LoadPlaythroughs_Parms.Playthroughs, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadPlaythroughs_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadAchievements
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FPlotManagerAchievement> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FPlotManagerAchievementSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadAchievements ( struct TArray<struct FPlotManagerAchievement>* Variables, struct TArray<struct FPlotManagerAchievementSaveRecord>* Records )
{
	static UFunction* pFnLoadAchievements = NULL;

	if ( ! pFnLoadAchievements )
		pFnLoadAchievements = (UFunction*) UObject::GObjObjects()->Data[ 58645 ];

	USFXSaveGame_execLoadAchievements_Parms LoadAchievements_Parms;

	this->ProcessEvent ( pFnLoadAchievements, &LoadAchievements_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadAchievements_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadAchievements_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadFloatVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileFLOAT> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileFLOATSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadFloatVariables ( struct TArray<struct FProfileFLOAT>* Variables, struct TArray<struct FProfileFLOATSaveRecord>* Records )
{
	static UFunction* pFnLoadFloatVariables = NULL;

	if ( ! pFnLoadFloatVariables )
		pFnLoadFloatVariables = (UFunction*) UObject::GObjObjects()->Data[ 58651 ];

	USFXSaveGame_execLoadFloatVariables_Parms LoadFloatVariables_Parms;

	this->ProcessEvent ( pFnLoadFloatVariables, &LoadFloatVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadFloatVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadFloatVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadIntVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileINT> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileINTSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadIntVariables ( struct TArray<struct FProfileINT>* Variables, struct TArray<struct FProfileINTSaveRecord>* Records )
{
	static UFunction* pFnLoadIntVariables = NULL;

	if ( ! pFnLoadIntVariables )
		pFnLoadIntVariables = (UFunction*) UObject::GObjObjects()->Data[ 58657 ];

	USFXSaveGame_execLoadIntVariables_Parms LoadIntVariables_Parms;

	this->ProcessEvent ( pFnLoadIntVariables, &LoadIntVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadIntVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadIntVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadBoolVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileBOOL> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileBOOLSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::LoadBoolVariables ( struct TArray<struct FProfileBOOL>* Variables, struct TArray<struct FProfileBOOLSaveRecord>* Records )
{
	static UFunction* pFnLoadBoolVariables = NULL;

	if ( ! pFnLoadBoolVariables )
		pFnLoadBoolVariables = (UFunction*) UObject::GObjObjects()->Data[ 58663 ];

	USFXSaveGame_execLoadBoolVariables_Parms LoadBoolVariables_Parms;

	this->ProcessEvent ( pFnLoadBoolVariables, &LoadBoolVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &LoadBoolVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &LoadBoolVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.LoadGamerProfile
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioGamerProfile*        Profile                        ( CPF_Parm )

void USFXSaveGame::eventLoadGamerProfile ( class UBioGamerProfile* Profile )
{
	static UFunction* pFnLoadGamerProfile = NULL;

	if ( ! pFnLoadGamerProfile )
		pFnLoadGamerProfile = (UFunction*) UObject::GObjObjects()->Data[ 58669 ];

	USFXSaveGame_eventLoadGamerProfile_Parms LoadGamerProfile_Parms;
	LoadGamerProfile_Parms.Profile = Profile;

	this->ProcessEvent ( pFnLoadGamerProfile, &LoadGamerProfile_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.SaveGameOptions
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UBioGamerProfile*        Profile                        ( CPF_Parm | CPF_OutParm )
// struct FGameOptionsSaveRecord  Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveGameOptions ( class UBioGamerProfile** Profile, struct FGameOptionsSaveRecord* Record )
{
	static UFunction* pFnSaveGameOptions = NULL;

	if ( ! pFnSaveGameOptions )
		pFnSaveGameOptions = (UFunction*) UObject::GObjObjects()->Data[ 58594 ];

	USFXSaveGame_execSaveGameOptions_Parms SaveGameOptions_Parms;

	this->ProcessEvent ( pFnSaveGameOptions, &SaveGameOptions_Parms, NULL );

	if ( Profile )
		*Profile = SaveGameOptions_Parms.Profile;

	if ( Record )
		memcpy ( Record, &SaveGameOptions_Parms.Record, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveCharacterProfiles
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FCharacterProfile> Profiles                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FCharacterProfileSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveCharacterProfiles ( struct TArray<struct FCharacterProfile>* Profiles, struct TArray<struct FCharacterProfileSaveRecord>* Records )
{
	static UFunction* pFnSaveCharacterProfiles = NULL;

	if ( ! pFnSaveCharacterProfiles )
		pFnSaveCharacterProfiles = (UFunction*) UObject::GObjObjects()->Data[ 58676 ];

	USFXSaveGame_execSaveCharacterProfiles_Parms SaveCharacterProfiles_Parms;

	this->ProcessEvent ( pFnSaveCharacterProfiles, &SaveCharacterProfiles_Parms, NULL );

	if ( Profiles )
		memcpy ( Profiles, &SaveCharacterProfiles_Parms.Profiles, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveCharacterProfiles_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveFloatStats
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<float>           Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<float>           Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveFloatStats ( struct TArray<float>* Variables, struct TArray<float>* Records )
{
	static UFunction* pFnSaveFloatStats = NULL;

	if ( ! pFnSaveFloatStats )
		pFnSaveFloatStats = (UFunction*) UObject::GObjObjects()->Data[ 58681 ];

	USFXSaveGame_execSaveFloatStats_Parms SaveFloatStats_Parms;

	this->ProcessEvent ( pFnSaveFloatStats, &SaveFloatStats_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveFloatStats_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveFloatStats_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveIntStats
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<int>             Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveIntStats ( struct TArray<int>* Variables, struct TArray<int>* Records )
{
	static UFunction* pFnSaveIntStats = NULL;

	if ( ! pFnSaveIntStats )
		pFnSaveIntStats = (UFunction*) UObject::GObjObjects()->Data[ 58687 ];

	USFXSaveGame_execSaveIntStats_Parms SaveIntStats_Parms;

	this->ProcessEvent ( pFnSaveIntStats, &SaveIntStats_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveIntStats_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveIntStats_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveBonusTalents
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FBonusTalent> talents                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FBonusTalentSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveBonusTalents ( struct TArray<struct FBonusTalent>* talents, struct TArray<struct FBonusTalentSaveRecord>* Records )
{
	static UFunction* pFnSaveBonusTalents = NULL;

	if ( ! pFnSaveBonusTalents )
		pFnSaveBonusTalents = (UFunction*) UObject::GObjObjects()->Data[ 58693 ];

	USFXSaveGame_execSaveBonusTalents_Parms SaveBonusTalents_Parms;

	this->ProcessEvent ( pFnSaveBonusTalents, &SaveBonusTalents_Parms, NULL );

	if ( talents )
		memcpy ( talents, &SaveBonusTalents_Parms.talents, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveBonusTalents_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveAchievementStates
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<int>             Achievements                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveAchievementStates ( struct TArray<int>* Achievements, struct TArray<int>* Records )
{
	static UFunction* pFnSaveAchievementStates = NULL;

	if ( ! pFnSaveAchievementStates )
		pFnSaveAchievementStates = (UFunction*) UObject::GObjObjects()->Data[ 58699 ];

	USFXSaveGame_execSaveAchievementStates_Parms SaveAchievementStates_Parms;

	this->ProcessEvent ( pFnSaveAchievementStates, &SaveAchievementStates_Parms, NULL );

	if ( Achievements )
		memcpy ( Achievements, &SaveAchievementStates_Parms.Achievements, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveAchievementStates_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveRewards
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileRewardStat> Rewards                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileRewardSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveRewards ( struct TArray<struct FProfileRewardStat>* Rewards, struct TArray<struct FProfileRewardSaveRecord>* Records )
{
	static UFunction* pFnSaveRewards = NULL;

	if ( ! pFnSaveRewards )
		pFnSaveRewards = (UFunction*) UObject::GObjObjects()->Data[ 58705 ];

	USFXSaveGame_execSaveRewards_Parms SaveRewards_Parms;

	this->ProcessEvent ( pFnSaveRewards, &SaveRewards_Parms, NULL );

	if ( Rewards )
		memcpy ( Rewards, &SaveRewards_Parms.Rewards, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveRewards_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SavePlaythroughs
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfilePlaythrough> Playthroughs                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfilePlaythroughSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SavePlaythroughs ( struct TArray<struct FProfilePlaythrough>* Playthroughs, struct TArray<struct FProfilePlaythroughSaveRecord>* Records )
{
	static UFunction* pFnSavePlaythroughs = NULL;

	if ( ! pFnSavePlaythroughs )
		pFnSavePlaythroughs = (UFunction*) UObject::GObjObjects()->Data[ 58711 ];

	USFXSaveGame_execSavePlaythroughs_Parms SavePlaythroughs_Parms;

	this->ProcessEvent ( pFnSavePlaythroughs, &SavePlaythroughs_Parms, NULL );

	if ( Playthroughs )
		memcpy ( Playthroughs, &SavePlaythroughs_Parms.Playthroughs, 0x10 );

	if ( Records )
		memcpy ( Records, &SavePlaythroughs_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveAchievements
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FPlotManagerAchievement> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FPlotManagerAchievementSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveAchievements ( struct TArray<struct FPlotManagerAchievement>* Variables, struct TArray<struct FPlotManagerAchievementSaveRecord>* Records )
{
	static UFunction* pFnSaveAchievements = NULL;

	if ( ! pFnSaveAchievements )
		pFnSaveAchievements = (UFunction*) UObject::GObjObjects()->Data[ 58717 ];

	USFXSaveGame_execSaveAchievements_Parms SaveAchievements_Parms;

	this->ProcessEvent ( pFnSaveAchievements, &SaveAchievements_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveAchievements_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveAchievements_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveFloatVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileFLOAT> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileFLOATSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveFloatVariables ( struct TArray<struct FProfileFLOAT>* Variables, struct TArray<struct FProfileFLOATSaveRecord>* Records )
{
	static UFunction* pFnSaveFloatVariables = NULL;

	if ( ! pFnSaveFloatVariables )
		pFnSaveFloatVariables = (UFunction*) UObject::GObjObjects()->Data[ 58723 ];

	USFXSaveGame_execSaveFloatVariables_Parms SaveFloatVariables_Parms;

	this->ProcessEvent ( pFnSaveFloatVariables, &SaveFloatVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveFloatVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveFloatVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveIntVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileINT> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileINTSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveIntVariables ( struct TArray<struct FProfileINT>* Variables, struct TArray<struct FProfileINTSaveRecord>* Records )
{
	static UFunction* pFnSaveIntVariables = NULL;

	if ( ! pFnSaveIntVariables )
		pFnSaveIntVariables = (UFunction*) UObject::GObjObjects()->Data[ 58729 ];

	USFXSaveGame_execSaveIntVariables_Parms SaveIntVariables_Parms;

	this->ProcessEvent ( pFnSaveIntVariables, &SaveIntVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveIntVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveIntVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveBoolVariables
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct TArray<struct FProfileBOOL> Variables                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FProfileBOOLSaveRecord> Records                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXSaveGame::SaveBoolVariables ( struct TArray<struct FProfileBOOL>* Variables, struct TArray<struct FProfileBOOLSaveRecord>* Records )
{
	static UFunction* pFnSaveBoolVariables = NULL;

	if ( ! pFnSaveBoolVariables )
		pFnSaveBoolVariables = (UFunction*) UObject::GObjObjects()->Data[ 58735 ];

	USFXSaveGame_execSaveBoolVariables_Parms SaveBoolVariables_Parms;

	this->ProcessEvent ( pFnSaveBoolVariables, &SaveBoolVariables_Parms, NULL );

	if ( Variables )
		memcpy ( Variables, &SaveBoolVariables_Parms.Variables, 0x10 );

	if ( Records )
		memcpy ( Records, &SaveBoolVariables_Parms.Records, 0x10 );
};

// Function SFXGame.SFXSaveGame.SaveGamerProfile
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UBioGamerProfile*        Profile                        ( CPF_Parm )

void USFXSaveGame::eventSaveGamerProfile ( class UBioGamerProfile* Profile )
{
	static UFunction* pFnSaveGamerProfile = NULL;

	if ( ! pFnSaveGamerProfile )
		pFnSaveGamerProfile = (UFunction*) UObject::GObjObjects()->Data[ 58741 ];

	USFXSaveGame_eventSaveGamerProfile_Parms SaveGamerProfile_Parms;
	SaveGamerProfile_Parms.Profile = Profile;

	this->ProcessEvent ( pFnSaveGamerProfile, &SaveGamerProfile_Parms, NULL );
};

// Function SFXGame.SFXSaveGame.GetPlayerRecord
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FPlayerSaveRecord       Record                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool USFXSaveGame::GetPlayerRecord ( struct FPlayerSaveRecord* Record )
{
	static UFunction* pFnGetPlayerRecord = NULL;

	if ( ! pFnGetPlayerRecord )
		pFnGetPlayerRecord = (UFunction*) UObject::GObjObjects()->Data[ 58747 ];

	USFXSaveGame_execGetPlayerRecord_Parms GetPlayerRecord_Parms;

	this->ProcessEvent ( pFnGetPlayerRecord, &GetPlayerRecord_Parms, NULL );

	if ( Record )
		memcpy ( Record, &GetPlayerRecord_Parms.Record, 0x1E4 );

	return GetPlayerRecord_Parms.ReturnValue;
};

// Function SFXGame.SFXSaveGame.FindClosestDrivableVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioVehicleBase*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                Pawn                           ( CPF_Parm )

class ABioVehicleBase* USFXSaveGame::FindClosestDrivableVehicle ( class ABioPawn* Pawn )
{
	static UFunction* pFnFindClosestDrivableVehicle = NULL;

	if ( ! pFnFindClosestDrivableVehicle )
		pFnFindClosestDrivableVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58749 ];

	USFXSaveGame_execFindClosestDrivableVehicle_Parms FindClosestDrivableVehicle_Parms;
	FindClosestDrivableVehicle_Parms.Pawn = Pawn;

	pFnFindClosestDrivableVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindClosestDrivableVehicle, &FindClosestDrivableVehicle_Parms, NULL );

	pFnFindClosestDrivableVehicle->FunctionFlags |= 0x400;

	return FindClosestDrivableVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AOECauseDamage.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AOECauseDamage::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59171 ];

	UBioSeqAct_AOECauseDamage_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AOECauseDamage.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_AOECauseDamage::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59153 ];

	UBioSeqAct_AOECauseDamage_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AbilityEnable.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AbilityEnable::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59066 ];

	UBioSeqAct_AbilityEnable_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ApplyMetaVFX.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ApplyMetaVFX::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59176 ];

	UBioSeqAct_ApplyMetaVFX_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AttachEnvironmentEffect.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AttachEnvironmentEffect::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59196 ];

	UBioSeqAct_AttachEnvironmentEffect_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ChangeStrategy.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ChangeStrategy::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59340 ];

	UBioSeqAct_ChangeStrategy_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ChangeUseCase.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ChangeUseCase::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59346 ];

	UBioSeqAct_ChangeUseCase_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_CopyPlayerHeadToTarget.ApplyFemaleSkinToneOverride
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_CopyPlayerHeadToTarget::eventApplyFemaleSkinToneOverride ( )
{
	static UFunction* pFnApplyFemaleSkinToneOverride = NULL;

	if ( ! pFnApplyFemaleSkinToneOverride )
		pFnApplyFemaleSkinToneOverride = (UFunction*) UObject::GObjObjects()->Data[ 59408 ];

	UBioSeqAct_CopyPlayerHeadToTarget_eventApplyFemaleSkinToneOverride_Parms ApplyFemaleSkinToneOverride_Parms;

	this->ProcessEvent ( pFnApplyFemaleSkinToneOverride, &ApplyFemaleSkinToneOverride_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DecodeCombatResult.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_DecodeCombatResult::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59469 ];

	UBioSeqAct_DecodeCombatResult_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_DecodeCombatResult.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DecodeCombatResult::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59466 ];

	UBioSeqAct_DecodeCombatResult_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DecodeMovmentResult.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_DecodeMovmentResult::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59474 ];

	UBioSeqAct_DecodeMovmentResult_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_DecodeMovmentResult.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DecodeMovmentResult::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59471 ];

	UBioSeqAct_DecodeMovmentResult_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Delay.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_Delay::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59476 ];

	UBioSeqAct_Delay_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_EnableCombat.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_EnableCombat::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59713 ];

	UBioSeqAct_EnableCombat_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_EnableCombat.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_EnableCombat::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59708 ];

	UBioSeqAct_EnableCombat_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_EnterVehicle.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_EnterVehicle::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59719 ];

	UBioSeqAct_EnterVehicle_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ExitVehicle.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ExitVehicle::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59721 ];

	UBioSeqAct_ExitVehicle_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FollowSquadLeader.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_FollowSquadLeader::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59805 ];

	UBioSeqAct_FollowSquadLeader_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FollowSquadLeader.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_FollowSquadLeader::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59801 ];

	UBioSeqAct_FollowSquadLeader_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetSquadInfo.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_GetSquadInfo::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59885 ];

	UBioSeqAct_GetSquadInfo_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_GetSquadInfo.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetSquadInfo::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59868 ];

	UBioSeqAct_GetSquadInfo_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetUseCase.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_GetUseCase::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59903 ];

	UBioSeqAct_GetUseCase_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_InsertPostProcess.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_InsertPostProcess::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59955 ];

	UBioSeqAct_InsertPostProcess_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_InsertPostProcess.AddPostProcessEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqAct_InsertPostProcess::AddPostProcessEffect ( )
{
	static UFunction* pFnAddPostProcessEffect = NULL;

	if ( ! pFnAddPostProcessEffect )
		pFnAddPostProcessEffect = (UFunction*) UObject::GObjObjects()->Data[ 59954 ];

	UBioSeqAct_InsertPostProcess_execAddPostProcessEffect_Parms AddPostProcessEffect_Parms;

	pFnAddPostProcessEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPostProcessEffect, &AddPostProcessEffect_Parms, NULL );

	pFnAddPostProcessEffect->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_InteractProperty.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_InteractProperty::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59856 ];

	UBioSeqAct_InteractProperty_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ModifyPropertyArtPlaceable.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ModifyPropertyArtPlaceable::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60005 ];

	UBioSeqAct_ModifyPropertyArtPlaceable_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ModifyPropertyPawn.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ModifyPropertyPawn::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60011 ];

	UBioSeqAct_ModifyPropertyPawn_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ModifyPropertyVehicle.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ModifyPropertyVehicle::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60013 ];

	UBioSeqAct_ModifyPropertyVehicle_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_IsAbilityEnabled.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_IsAbilityEnabled::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59961 ];

	UBioSeqAct_IsAbilityEnabled_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_LeaveActionStation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_LeaveActionStation::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59975 ];

	UBioSeqAct_LeaveActionStation_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ModifyPropertyHeightfog.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ModifyPropertyHeightfog::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60007 ];

	UBioSeqAct_ModifyPropertyHeightfog_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Movie.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_Movie::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60028 ];

	UBioSeqAct_Movie_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_MusicVolumeDisable.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_MusicVolumeDisable::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60037 ];

	UBioSeqAct_MusicVolumeDisable_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_MusicVolumeEnable.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_MusicVolumeEnable::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60040 ];

	UBioSeqAct_MusicVolumeEnable_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_NonCombatArea.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_NonCombatArea::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60054 ];

	UBioSeqAct_NonCombatArea_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_NonCombatArea.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_NonCombatArea::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60049 ];

	UBioSeqAct_NonCombatArea_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_OverrideStagePlacement.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_OverrideStagePlacement::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60068 ];

	UBioSeqAct_OverrideStagePlacement_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_OverrideStagePlacement.SetActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  aInput                         ( CPF_Parm )
// unsigned char                  Node                           ( CPF_Parm )

void UBioSeqAct_OverrideStagePlacement::SetActor ( class AActor* aInput, unsigned char Node )
{
	static UFunction* pFnSetActor = NULL;

	if ( ! pFnSetActor )
		pFnSetActor = (UFunction*) UObject::GObjObjects()->Data[ 60061 ];

	UBioSeqAct_OverrideStagePlacement_execSetActor_Parms SetActor_Parms;
	SetActor_Parms.aInput = aInput;
	SetActor_Parms.Node = Node;

	this->ProcessEvent ( pFnSetActor, &SetActor_Parms, NULL );
};

// Function SFXGame.BioSeqAct_PlayFaceFXAnim.Activated
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqAct_PlayFaceFXAnim::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60081 ];

	UBioSeqAct_PlayFaceFXAnim_execActivated_Parms Activated_Parms;

	pFnActivated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );

	pFnActivated->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_PreloadCinematicAudio.UpdateOp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDelta                         ( CPF_Parm )

bool UBioSeqAct_PreloadCinematicAudio::UpdateOp ( float fDelta )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60121 ];

	UBioSeqAct_PreloadCinematicAudio_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDelta = fDelta;

	pFnUpdateOp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	pFnUpdateOp->FunctionFlags |= 0x400;

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_PreloadCinematicAudio.Activated
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqAct_PreloadCinematicAudio::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60120 ];

	UBioSeqAct_PreloadCinematicAudio_execActivated_Parms Activated_Parms;

	pFnActivated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );

	pFnActivated->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_RemovePostProcess.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_RemovePostProcess::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60131 ];

	UBioSeqAct_RemovePostProcess_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_RemovePostProcess.RemovePostProcessEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqAct_RemovePostProcess::RemovePostProcessEffect ( )
{
	static UFunction* pFnRemovePostProcessEffect = NULL;

	if ( ! pFnRemovePostProcessEffect )
		pFnRemovePostProcessEffect = (UFunction*) UObject::GObjObjects()->Data[ 60130 ];

	UBioSeqAct_RemovePostProcess_execRemovePostProcessEffect_Parms RemovePostProcessEffect_Parms;

	pFnRemovePostProcessEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemovePostProcessEffect, &RemovePostProcessEffect_Parms, NULL );

	pFnRemovePostProcessEffect->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_ResetAnimationState.IsValidUISequenceObject
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         TargetObject                   ( CPF_OptionalParm | CPF_Parm )

bool UBioSeqAct_ResetAnimationState::eventIsValidUISequenceObject ( class UUIScreenObject* TargetObject )
{
	static UFunction* pFnIsValidUISequenceObject = NULL;

	if ( ! pFnIsValidUISequenceObject )
		pFnIsValidUISequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 60133 ];

	UBioSeqAct_ResetAnimationState_eventIsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;

	this->ProcessEvent ( pFnIsValidUISequenceObject, &IsValidUISequenceObject_Parms, NULL );

	return IsValidUISequenceObject_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ScalarMathUnit.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ScalarMathUnit::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60169 ];

	UBioSeqAct_ScalarMathUnit_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SetEnvironmentEffectIntensity.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SetEnvironmentEffectIntensity::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60237 ];

	UBioSeqAct_SetEnvironmentEffectIntensity_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SetStreamingState.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetStreamingState::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60356 ];

	UBioSeqAct_SetStreamingState_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetSuperMode.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SetSuperMode::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60368 ];

	UBioSeqAct_SetSuperMode_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SetWeapon.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SetWeapon::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60380 ];

	UBioSeqAct_SetWeapon_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowMainMenu.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowMainMenu::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60437 ];

	UBioSeqAct_ShowMainMenu_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowMessageBox.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ShowMessageBox::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60517 ];

	UBioSeqAct_ShowMessageBox_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowSpecialization.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowSpecialization::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60533 ];

	UBioSeqAct_ShowSpecialization_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowSplash.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowSplash::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60540 ];

	UBioSeqAct_ShowSplash_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowSplash.FakeActivate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ShowSplash::eventFakeActivate ( )
{
	static UFunction* pFnFakeActivate = NULL;

	if ( ! pFnFakeActivate )
		pFnFakeActivate = (UFunction*) UObject::GObjObjects()->Data[ 60537 ];

	UBioSeqAct_ShowSplash_eventFakeActivate_Parms FakeActivate_Parms;

	this->ProcessEvent ( pFnFakeActivate, &FakeActivate_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SkillGame.GrantCustomGameXp
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioWorldInfo*           oBWorldInfo                    ( CPF_Parm )

void UBioSeqAct_SkillGame::eventGrantCustomGameXp ( class ABioWorldInfo* oBWorldInfo )
{
	static UFunction* pFnGrantCustomGameXp = NULL;

	if ( ! pFnGrantCustomGameXp )
		pFnGrantCustomGameXp = (UFunction*) UObject::GObjObjects()->Data[ 60562 ];

	UBioSeqAct_SkillGame_eventGrantCustomGameXp_Parms GrantCustomGameXp_Parms;
	GrantCustomGameXp_Parms.oBWorldInfo = oBWorldInfo;

	this->ProcessEvent ( pFnGrantCustomGameXp, &GrantCustomGameXp_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SkillGame.OnCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqAct_SkillGame::OnCancel ( )
{
	static UFunction* pFnOnCancel = NULL;

	if ( ! pFnOnCancel )
		pFnOnCancel = (UFunction*) UObject::GObjObjects()->Data[ 60561 ];

	UBioSeqAct_SkillGame_execOnCancel_Parms OnCancel_Parms;

	pFnOnCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCancel, &OnCancel_Parms, NULL );

	pFnOnCancel->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_SkillGame.OnFailure
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_salvage                      ( CPF_Parm )

void UBioSeqAct_SkillGame::OnFailure ( int i_salvage )
{
	static UFunction* pFnOnFailure = NULL;

	if ( ! pFnOnFailure )
		pFnOnFailure = (UFunction*) UObject::GObjObjects()->Data[ 60559 ];

	UBioSeqAct_SkillGame_execOnFailure_Parms OnFailure_Parms;
	OnFailure_Parms.i_salvage = i_salvage;

	pFnOnFailure->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnFailure, &OnFailure_Parms, NULL );

	pFnOnFailure->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_SkillGame.OnSuccess
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            i_salvage                      ( CPF_Parm )

void UBioSeqAct_SkillGame::OnSuccess ( int i_salvage )
{
	static UFunction* pFnOnSuccess = NULL;

	if ( ! pFnOnSuccess )
		pFnOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 60557 ];

	UBioSeqAct_SkillGame_execOnSuccess_Parms OnSuccess_Parms;
	OnSuccess_Parms.i_salvage = i_salvage;

	pFnOnSuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnSuccess, &OnSuccess_Parms, NULL );

	pFnOnSuccess->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqAct_SoundGroupPitch.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SoundGroupPitch::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60580 ];

	UBioSeqAct_SoundGroupPitch_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SoundGroupVolume.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SoundGroupVolume::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60585 ];

	UBioSeqAct_SoundGroupVolume_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SpawnHenchman.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SpawnHenchman::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60592 ];

	UBioSeqAct_SpawnHenchman_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_TeleportToObject.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_TeleportToObject::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60652 ];

	UBioSeqAct_TeleportToObject_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_Term_NoLongerSeePlayer.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_Term_NoLongerSeePlayer::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60669 ];

	UBioSeqAct_Term_NoLongerSeePlayer_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_Term_SeePlayer.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_Term_SeePlayer::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60674 ];

	UBioSeqAct_Term_SeePlayer_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqCond_CheckChunkStatus.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqCond_CheckChunkStatus::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60769 ];

	UBioSeqCond_CheckChunkStatus_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqCond_IsDriving.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqCond_IsDriving::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60772 ];

	UBioSeqCond_IsDriving_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.OnDisabled
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioAiController*        oController                    ( CPF_Parm )
// unsigned long                  bStarted                       ( CPF_Parm )

void UBioSeqData::eventOnDisabled ( class ABioAiController* oController, unsigned long bStarted )
{
	static UFunction* pFnOnDisabled = NULL;

	if ( ! pFnOnDisabled )
		pFnOnDisabled = (UFunction*) UObject::GObjObjects()->Data[ 60806 ];

	UBioSeqData_eventOnDisabled_Parms OnDisabled_Parms;
	OnDisabled_Parms.oController = oController;
	OnDisabled_Parms.bStarted = bStarted;

	this->ProcessEvent ( pFnOnDisabled, &OnDisabled_Parms, NULL );
};

// Function SFXGame.BioSeqData.CanDisable
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oController                    ( CPF_Parm )
// unsigned char                  eEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

bool UBioSeqData::eventCanDisable ( class ABioAiController* oController, unsigned char eEnableType, struct FName nmSubType )
{
	static UFunction* pFnCanDisable = NULL;

	if ( ! pFnCanDisable )
		pFnCanDisable = (UFunction*) UObject::GObjObjects()->Data[ 60801 ];

	UBioSeqData_eventCanDisable_Parms CanDisable_Parms;
	CanDisable_Parms.oController = oController;
	CanDisable_Parms.eEnableType = eEnableType;
	memcpy ( &CanDisable_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnCanDisable, &CanDisable_Parms, NULL );

	return CanDisable_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.GetDebugDescription
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UBioSeqData::eventGetDebugDescription ( )
{
	static UFunction* pFnGetDebugDescription = NULL;

	if ( ! pFnGetDebugDescription )
		pFnGetDebugDescription = (UFunction*) UObject::GObjObjects()->Data[ 60799 ];

	UBioSeqData_eventGetDebugDescription_Parms GetDebugDescription_Parms;

	this->ProcessEvent ( pFnGetDebugDescription, &GetDebugDescription_Parms, NULL );

	return GetDebugDescription_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.CancelOnLOS
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oController                    ( CPF_Parm )
// class APawn*                   oLOSTarget                     ( CPF_Parm )

bool UBioSeqData::eventCancelOnLOS ( class ABioAiController* oController, class APawn* oLOSTarget )
{
	static UFunction* pFnCancelOnLOS = NULL;

	if ( ! pFnCancelOnLOS )
		pFnCancelOnLOS = (UFunction*) UObject::GObjObjects()->Data[ 60795 ];

	UBioSeqData_eventCancelOnLOS_Parms CancelOnLOS_Parms;
	CancelOnLOS_Parms.oController = oController;
	CancelOnLOS_Parms.oLOSTarget = oLOSTarget;

	this->ProcessEvent ( pFnCancelOnLOS, &CancelOnLOS_Parms, NULL );

	return CancelOnLOS_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.OnCancel
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioAiController*        oController                    ( CPF_Parm )
// unsigned long                  bStarted                       ( CPF_Parm )

void UBioSeqData::eventOnCancel ( class ABioAiController* oController, unsigned long bStarted )
{
	static UFunction* pFnOnCancel = NULL;

	if ( ! pFnOnCancel )
		pFnOnCancel = (UFunction*) UObject::GObjObjects()->Data[ 60792 ];

	UBioSeqData_eventOnCancel_Parms OnCancel_Parms;
	OnCancel_Parms.oController = oController;
	OnCancel_Parms.bStarted = bStarted;

	this->ProcessEvent ( pFnOnCancel, &OnCancel_Parms, NULL );
};

// Function SFXGame.BioSeqData.OnStart
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioAiController*        oController                    ( CPF_Parm )

void UBioSeqData::eventOnStart ( class ABioAiController* oController )
{
	static UFunction* pFnOnStart = NULL;

	if ( ! pFnOnStart )
		pFnOnStart = (UFunction*) UObject::GObjObjects()->Data[ 60790 ];

	UBioSeqData_eventOnStart_Parms OnStart_Parms;
	OnStart_Parms.oController = oController;

	this->ProcessEvent ( pFnOnStart, &OnStart_Parms, NULL );
};

// Function SFXGame.BioSeqData.CanCancel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oController                    ( CPF_Parm )

bool UBioSeqData::eventCanCancel ( class ABioAiController* oController )
{
	static UFunction* pFnCanCancel = NULL;

	if ( ! pFnCanCancel )
		pFnCanCancel = (UFunction*) UObject::GObjObjects()->Data[ 60787 ];

	UBioSeqData_eventCanCancel_Parms CanCancel_Parms;
	CanCancel_Parms.oController = oController;

	this->ProcessEvent ( pFnCanCancel, &CanCancel_Parms, NULL );

	return CanCancel_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.OnTick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oController                    ( CPF_Parm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqData::eventOnTick ( class ABioAiController* oController, float fDeltaT )
{
	static UFunction* pFnOnTick = NULL;

	if ( ! pFnOnTick )
		pFnOnTick = (UFunction*) UObject::GObjObjects()->Data[ 60783 ];

	UBioSeqData_eventOnTick_Parms OnTick_Parms;
	OnTick_Parms.oController = oController;
	OnTick_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnOnTick, &OnTick_Parms, NULL );

	return OnTick_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.GetPawnBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEpicPawnBehavior*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

class UBioEpicPawnBehavior* UBioSeqData::GetPawnBehavior ( class AActor* oActor )
{
	static UFunction* pFnGetPawnBehavior = NULL;

	if ( ! pFnGetPawnBehavior )
		pFnGetPawnBehavior = (UFunction*) UObject::GObjObjects()->Data[ 60780 ];

	UBioSeqData_execGetPawnBehavior_Parms GetPawnBehavior_Parms;
	GetPawnBehavior_Parms.oActor = oActor;

	pFnGetPawnBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawnBehavior, &GetPawnBehavior_Parms, NULL );

	pFnGetPawnBehavior->FunctionFlags |= 0x400;

	return GetPawnBehavior_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData.DoCallBack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nReason                        ( CPF_Parm )

void UBioSeqData::DoCallBack ( int nReason )
{
	static UFunction* pFnDoCallBack = NULL;

	if ( ! pFnDoCallBack )
		pFnDoCallBack = (UFunction*) UObject::GObjObjects()->Data[ 60778 ];

	UBioSeqData_execDoCallBack_Parms DoCallBack_Parms;
	DoCallBack_Parms.nReason = nReason;

	pFnDoCallBack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCallBack, &DoCallBack_Parms, NULL );

	pFnDoCallBack->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqData_MoveToPoint.ResetMoveTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vNewLocation                   ( CPF_Parm )
// float                          fMoveTolerance                 ( CPF_OptionalParm | CPF_Parm )

void UBioSeqData_MoveToPoint::ResetMoveTarget ( struct FVector vNewLocation, float fMoveTolerance )
{
	static UFunction* pFnResetMoveTarget = NULL;

	if ( ! pFnResetMoveTarget )
		pFnResetMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 60859 ];

	UBioSeqData_MoveToPoint_execResetMoveTarget_Parms ResetMoveTarget_Parms;
	memcpy ( &ResetMoveTarget_Parms.vNewLocation, &vNewLocation, 0xC );
	ResetMoveTarget_Parms.fMoveTolerance = fMoveTolerance;

	pFnResetMoveTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetMoveTarget, &ResetMoveTarget_Parms, NULL );

	pFnResetMoveTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqData_UseCover.GetCrouchByCoverType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotIdx                        ( CPF_Parm )

bool UBioSeqData_UseCover::GetCrouchByCoverType ( int SlotIdx )
{
	static UFunction* pFnGetCrouchByCoverType = NULL;

	if ( ! pFnGetCrouchByCoverType )
		pFnGetCrouchByCoverType = (UFunction*) UObject::GObjObjects()->Data[ 44247 ];

	UBioSeqData_UseCover_execGetCrouchByCoverType_Parms GetCrouchByCoverType_Parms;
	GetCrouchByCoverType_Parms.SlotIdx = SlotIdx;

	this->ProcessEvent ( pFnGetCrouchByCoverType, &GetCrouchByCoverType_Parms, NULL );

	return GetCrouchByCoverType_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData_UseCover.Empty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSeqData_UseCover::Empty ( )
{
	static UFunction* pFnEmpty = NULL;

	if ( ! pFnEmpty )
		pFnEmpty = (UFunction*) UObject::GObjObjects()->Data[ 60909 ];

	UBioSeqData_UseCover_execEmpty_Parms Empty_Parms;

	pFnEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEmpty, &Empty_Parms, NULL );

	pFnEmpty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqData_UseCover.UnClaim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             OldClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )
// unsigned long                  bUnclaimAll                    ( CPF_Parm )

void UBioSeqData_UseCover::UnClaim ( class AController* OldClaim, int SlotIdx, unsigned long bUnclaimAll )
{
	static UFunction* pFnUnClaim = NULL;

	if ( ! pFnUnClaim )
		pFnUnClaim = (UFunction*) UObject::GObjObjects()->Data[ 60905 ];

	UBioSeqData_UseCover_execUnClaim_Parms UnClaim_Parms;
	UnClaim_Parms.OldClaim = OldClaim;
	UnClaim_Parms.SlotIdx = SlotIdx;
	UnClaim_Parms.bUnclaimAll = bUnclaimAll;

	pFnUnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnClaim, &UnClaim_Parms, NULL );

	pFnUnClaim->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqData_UseCover.Claim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewClaim                       ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

bool UBioSeqData_UseCover::Claim ( class AController* NewClaim, int SlotIdx )
{
	static UFunction* pFnClaim = NULL;

	if ( ! pFnClaim )
		pFnClaim = (UFunction*) UObject::GObjObjects()->Data[ 60901 ];

	UBioSeqData_UseCover_execClaim_Parms Claim_Parms;
	Claim_Parms.NewClaim = NewClaim;
	Claim_Parms.SlotIdx = SlotIdx;

	pFnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaim, &Claim_Parms, NULL );

	pFnClaim->FunctionFlags |= 0x400;

	return Claim_Parms.ReturnValue;
};

// Function SFXGame.BioSeqData_UseCover.UpdateHideLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

void UBioSeqData_UseCover::UpdateHideLocation ( class ABioPawn* pPawn, int SlotIdx )
{
	static UFunction* pFnUpdateHideLocation = NULL;

	if ( ! pFnUpdateHideLocation )
		pFnUpdateHideLocation = (UFunction*) UObject::GObjObjects()->Data[ 60898 ];

	UBioSeqData_UseCover_execUpdateHideLocation_Parms UpdateHideLocation_Parms;
	UpdateHideLocation_Parms.pPawn = pPawn;
	UpdateHideLocation_Parms.SlotIdx = SlotIdx;

	pFnUpdateHideLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHideLocation, &UpdateHideLocation_Parms, NULL );

	pFnUpdateHideLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSeqEvt_BackgroundStreamingDone.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_BackgroundStreamingDone::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60923 ];

	UBioSeqEvt_BackgroundStreamingDone_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_ForegroundStreamingDone.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_ForegroundStreamingDone::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60935 ];

	UBioSeqEvt_ForegroundStreamingDone_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_MemberAdded.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_MemberAdded::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60939 ];

	UBioSeqEvt_MemberAdded_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_MemberRemoved.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_MemberRemoved::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60941 ];

	UBioSeqEvt_MemberRemoved_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_NoLongerSeePlayer.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_NoLongerSeePlayer::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60943 ];

	UBioSeqEvt_NoLongerSeePlayer_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_OnPlaceableStartMoving.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_OnPlaceableStartMoving::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60951 ];

	UBioSeqEvt_OnPlaceableStartMoving_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_OnPlaceableStopMoving.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_OnPlaceableStopMoving::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60953 ];

	UBioSeqEvt_OnPlaceableStopMoving_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_OnPlayerActivate.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_OnPlayerActivate::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60955 ];

	UBioSeqEvt_OnPlayerActivate_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_SeePlayer.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_SeePlayer::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60960 ];

	UBioSeqEvt_SeePlayer_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_VehicleEnter.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_VehicleEnter::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60982 ];

	UBioSeqEvt_VehicleEnter_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_VehicleExit.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_VehicleExit::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60984 ];

	UBioSeqEvt_VehicleExit_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_VehicleLeaveWorld.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_VehicleLeaveWorld::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60986 ];

	UBioSeqEvt_VehicleLeaveWorld_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSequenceLatentAction.UpdateOp
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UBioSequenceLatentAction::eventUpdateOp ( float DeltaTime )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 53216 ];

	UBioSequenceLatentAction_eventUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ActionStation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ActionStation::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59086 ];

	UBioSeqAct_ActionStation_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FaceOnlyVO.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_FaceOnlyVO::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59727 ];

	UBioSeqAct_FaceOnlyVO_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FireWeaponAt.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_FireWeaponAt::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59788 ];

	UBioSeqAct_FireWeaponAt_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_RandomWalk.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_RandomWalk::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60124 ];

	UBioSeqAct_RandomWalk_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowCredits.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowCredits::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60393 ];

	UBioSeqAct_ShowCredits_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowCredits.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowCredits::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60391 ];

	UBioSeqAct_ShowCredits_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowIntroText.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowIntroText::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60403 ];

	UBioSeqAct_ShowIntroText_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowIntroText.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowIntroText::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60398 ];

	UBioSeqAct_ShowIntroText_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowPartySelectionGUI.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowPartySelectionGUI::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60528 ];

	UBioSeqAct_ShowPartySelectionGUI_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowPartySelectionGUI.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowPartySelectionGUI::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60523 ];

	UBioSeqAct_ShowPartySelectionGUI_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SquadStartHoldingPosition.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SquadStartHoldingPosition::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60604 ];

	UBioSeqAct_SquadStartHoldingPosition_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_StageSwitchCamera.BioGetCameraNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_StageSwitchCamera::BioGetCameraNumber ( )
{
	static UFunction* pFnBioGetCameraNumber = NULL;

	if ( ! pFnBioGetCameraNumber )
		pFnBioGetCameraNumber = (UFunction*) UObject::GObjObjects()->Data[ 53220 ];

	UBioSeqAct_StageSwitchCamera_execBioGetCameraNumber_Parms BioGetCameraNumber_Parms;

	pFnBioGetCameraNumber->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioGetCameraNumber, &BioGetCameraNumber_Parms, NULL );

	pFnBioGetCameraNumber->FunctionFlags |= 0x400;

	return BioGetCameraNumber_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_StartConversation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_StartConversation::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60619 ];

	UBioSeqAct_StartConversation_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_UsePowerOn.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_UsePowerOn::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60738 ];

	UBioSeqAct_UsePowerOn_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_MoveToObject.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_MoveToObject::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60016 ];

	UBioSeqAct_MoveToObject_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ThrowGrenadeAt.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_ThrowGrenadeAt::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60680 ];

	UBioSeqAct_ThrowGrenadeAt_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_UseCover.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_UseCover::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60728 ];

	UBioSeqAct_UseCover_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_WalkWaypointSet.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_WalkWaypointSet::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60766 ];

	UBioSeqAct_WalkWaypointSet_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_WalkWaypointSet.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_WalkWaypointSet::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60751 ];

	UBioSeqAct_WalkWaypointSet_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioShield.Regenerate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fAmount                        ( CPF_Parm )
// class AActor*                  oShieldOwner                   ( CPF_Parm )

void UBioShield::Regenerate ( float fAmount, class AActor* oShieldOwner )
{
	static UFunction* pFnRegenerate = NULL;

	if ( ! pFnRegenerate )
		pFnRegenerate = (UFunction*) UObject::GObjObjects()->Data[ 64440 ];

	UBioShield_execRegenerate_Parms Regenerate_Parms;
	Regenerate_Parms.fAmount = fAmount;
	Regenerate_Parms.oShieldOwner = oShieldOwner;

	pFnRegenerate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegenerate, &Regenerate_Parms, NULL );

	pFnRegenerate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.IsOnline
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioShield::IsOnline ( )
{
	static UFunction* pFnIsOnline = NULL;

	if ( ! pFnIsOnline )
		pFnIsOnline = (UFunction*) UObject::GObjObjects()->Data[ 64438 ];

	UBioShield_execIsOnline_Parms IsOnline_Parms;

	pFnIsOnline->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsOnline, &IsOnline_Parms, NULL );

	pFnIsOnline->FunctionFlags |= 0x400;

	return IsOnline_Parms.ReturnValue;
};

// Function SFXGame.BioShield.SetState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eState                         ( CPF_Parm )

void UBioShield::SetState ( unsigned char eState )
{
	static UFunction* pFnSetState = NULL;

	if ( ! pFnSetState )
		pFnSetState = (UFunction*) UObject::GObjObjects()->Data[ 64436 ];

	UBioShield_execSetState_Parms SetState_Parms;
	SetState_Parms.eState = eState;

	pFnSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetState, &SetState_Parms, NULL );

	pFnSetState->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTimeDelta                     ( CPF_Parm )
// class AActor*                  oShieldOwner                   ( CPF_Parm )

void UBioShield::Tick ( float fTimeDelta, class AActor* oShieldOwner )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 64433 ];

	UBioShield_execTick_Parms Tick_Parms;
	Tick_Parms.fTimeDelta = fTimeDelta;
	Tick_Parms.oShieldOwner = oShieldOwner;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioShield::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 64432 ];

	UBioShield_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.OnDamage
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oShieldOwner                   ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm | CPF_OutParm )

bool UBioShield::OnDamage ( class AActor* oShieldOwner, struct FVector vHitLocation, class UClass* clsDamageType, class UBioDamageType* pDamage, float* fDamage )
{
	static UFunction* pFnOnDamage = NULL;

	if ( ! pFnOnDamage )
		pFnOnDamage = (UFunction*) UObject::GObjObjects()->Data[ 41636 ];

	UBioShield_execOnDamage_Parms OnDamage_Parms;
	OnDamage_Parms.oShieldOwner = oShieldOwner;
	memcpy ( &OnDamage_Parms.vHitLocation, &vHitLocation, 0xC );
	OnDamage_Parms.clsDamageType = clsDamageType;
	OnDamage_Parms.pDamage = pDamage;

	pFnOnDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamage, &OnDamage_Parms, NULL );

	pFnOnDamage->FunctionFlags |= 0x400;

	if ( fDamage )
		*fDamage = OnDamage_Parms.fDamage;

	return OnDamage_Parms.ReturnValue;
};

// Function SFXGame.BioShield.OnAttributesModified
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oShieldOwner                   ( CPF_Parm )

void UBioShield::OnAttributesModified ( class AActor* oShieldOwner )
{
	static UFunction* pFnOnAttributesModified = NULL;

	if ( ! pFnOnAttributesModified )
		pFnOnAttributesModified = (UFunction*) UObject::GObjObjects()->Data[ 64425 ];

	UBioShield_execOnAttributesModified_Parms OnAttributesModified_Parms;
	OnAttributesModified_Parms.oShieldOwner = oShieldOwner;

	pFnOnAttributesModified->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnAttributesModified, &OnAttributesModified_Parms, NULL );

	pFnOnAttributesModified->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.ShutDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioShield::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 64424 ];

	UBioShield_execShutDown_Parms ShutDown_Parms;

	pFnShutDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );

	pFnShutDown->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioShield::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 64423 ];

	UBioShield_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioAttributesShield*    pAttributes                    ( CPF_Parm )
// class UBioShieldView*          oShieldView                    ( CPF_Parm )
// class UMeshComponent*          oMesh                          ( CPF_Parm | CPF_EditInline )

void UBioShield::Initialize ( class UBioAttributesShield* pAttributes, class UBioShieldView* oShieldView, class UMeshComponent* oMesh )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 64419 ];

	UBioShield_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.pAttributes = pAttributes;
	Initialize_Parms.oShieldView = oShieldView;
	Initialize_Parms.oMesh = oMesh;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.OnEvent
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class AActor*                  oShieldOwner                   ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_OptionalParm | CPF_Parm )

void UBioShield::OnEvent ( unsigned char eEvent, class AActor* oShieldOwner, struct FVector vHitLocation )
{
	static UFunction* pFnOnEvent = NULL;

	if ( ! pFnOnEvent )
		pFnOnEvent = (UFunction*) UObject::GObjObjects()->Data[ 64415 ];

	UBioShield_execOnEvent_Parms OnEvent_Parms;
	OnEvent_Parms.eEvent = eEvent;
	OnEvent_Parms.oShieldOwner = oShieldOwner;
	memcpy ( &OnEvent_Parms.vHitLocation, &vHitLocation, 0xC );

	pFnOnEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnEvent, &OnEvent_Parms, NULL );

	pFnOnEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShield.OnStateTransition
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eFromState                     ( CPF_Parm )
// unsigned char                  eToState                       ( CPF_Parm )

void UBioShield::OnStateTransition ( unsigned char eFromState, unsigned char eToState )
{
	static UFunction* pFnOnStateTransition = NULL;

	if ( ! pFnOnStateTransition )
		pFnOnStateTransition = (UFunction*) UObject::GObjObjects()->Data[ 64412 ];

	UBioShield_execOnStateTransition_Parms OnStateTransition_Parms;
	OnStateTransition_Parms.eFromState = eFromState;
	OnStateTransition_Parms.eToState = eToState;

	pFnOnStateTransition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStateTransition, &OnStateTransition_Parms, NULL );

	pFnOnStateTransition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShieldView.OnEvent
// [0x00044401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// class AActor*                  oShieldOwner                   ( CPF_Parm )
// class UBioShield*              oShield                        ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_OptionalParm | CPF_Parm )
// struct FRotator                rHitNormal                     ( CPF_OptionalParm | CPF_Parm )

void UBioShieldView::OnEvent ( unsigned char eEvent, class AActor* oShieldOwner, class UBioShield* oShield, struct FVector vHitLocation, struct FRotator rHitNormal )
{
	static UFunction* pFnOnEvent = NULL;

	if ( ! pFnOnEvent )
		pFnOnEvent = (UFunction*) UObject::GObjObjects()->Data[ 64404 ];

	UBioShieldView_execOnEvent_Parms OnEvent_Parms;
	OnEvent_Parms.eEvent = eEvent;
	OnEvent_Parms.oShieldOwner = oShieldOwner;
	OnEvent_Parms.oShield = oShield;
	memcpy ( &OnEvent_Parms.vHitLocation, &vHitLocation, 0xC );
	memcpy ( &OnEvent_Parms.rHitNormal, &rHitNormal, 0xC );

	pFnOnEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnEvent, &OnEvent_Parms, NULL );

	pFnOnEvent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShop.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioShop::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 63904 ];

	ABioShop_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioShop.ComputeSupplyOfResource
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  resourceType                   ( CPF_Parm )
// unsigned char                  slotType                       ( CPF_Parm )

int ABioShop::ComputeSupplyOfResource ( unsigned char resourceType, unsigned char slotType )
{
	static UFunction* pFnComputeSupplyOfResource = NULL;

	if ( ! pFnComputeSupplyOfResource )
		pFnComputeSupplyOfResource = (UFunction*) UObject::GObjObjects()->Data[ 63900 ];

	ABioShop_execComputeSupplyOfResource_Parms ComputeSupplyOfResource_Parms;
	ComputeSupplyOfResource_Parms.resourceType = resourceType;
	ComputeSupplyOfResource_Parms.slotType = slotType;

	pFnComputeSupplyOfResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeSupplyOfResource, &ComputeSupplyOfResource_Parms, NULL );

	pFnComputeSupplyOfResource->FunctionFlags |= 0x400;

	return ComputeSupplyOfResource_Parms.ReturnValue;
};

// Function SFXGame.BioShop.RemoveResource
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )
// int                            positiveAmount                 ( CPF_Parm )

void ABioShop::RemoveResource ( unsigned char Type, int positiveAmount )
{
	static UFunction* pFnRemoveResource = NULL;

	if ( ! pFnRemoveResource )
		pFnRemoveResource = (UFunction*) UObject::GObjObjects()->Data[ 63897 ];

	ABioShop_execRemoveResource_Parms RemoveResource_Parms;
	RemoveResource_Parms.Type = Type;
	RemoveResource_Parms.positiveAmount = positiveAmount;

	pFnRemoveResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveResource, &RemoveResource_Parms, NULL );

	pFnRemoveResource->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShop.AddResource
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )
// int                            positiveAmount                 ( CPF_Parm )

void ABioShop::AddResource ( unsigned char Type, int positiveAmount )
{
	static UFunction* pFnAddResource = NULL;

	if ( ! pFnAddResource )
		pFnAddResource = (UFunction*) UObject::GObjObjects()->Data[ 63894 ];

	ABioShop_execAddResource_Parms AddResource_Parms;
	AddResource_Parms.Type = Type;
	AddResource_Parms.positiveAmount = positiveAmount;

	pFnAddResource->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddResource, &AddResource_Parms, NULL );

	pFnAddResource->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShop.AddBuybackItem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioItem*                Item                           ( CPF_Parm )

void ABioShop::AddBuybackItem ( class UBioItem* Item )
{
	static UFunction* pFnAddBuybackItem = NULL;

	if ( ! pFnAddBuybackItem )
		pFnAddBuybackItem = (UFunction*) UObject::GObjObjects()->Data[ 63892 ];

	ABioShop_execAddBuybackItem_Parms AddBuybackItem_Parms;
	AddBuybackItem_Parms.Item = Item;

	pFnAddBuybackItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBuybackItem, &AddBuybackItem_Parms, NULL );

	pFnAddBuybackItem->FunctionFlags |= 0x400;
};

// Function SFXGame.BioShop.ConvertMasterIndexToDoubleIndex
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            masterIndex                    ( CPF_Parm )
// unsigned char                  inventoryIndex                 ( CPF_Parm | CPF_OutParm )
// int                            ElementIndex                   ( CPF_Parm | CPF_OutParm )

bool ABioShop::ConvertMasterIndexToDoubleIndex ( int masterIndex, unsigned char* inventoryIndex, int* ElementIndex )
{
	static UFunction* pFnConvertMasterIndexToDoubleIndex = NULL;

	if ( ! pFnConvertMasterIndexToDoubleIndex )
		pFnConvertMasterIndexToDoubleIndex = (UFunction*) UObject::GObjObjects()->Data[ 63887 ];

	ABioShop_execConvertMasterIndexToDoubleIndex_Parms ConvertMasterIndexToDoubleIndex_Parms;
	ConvertMasterIndexToDoubleIndex_Parms.masterIndex = masterIndex;

	pFnConvertMasterIndexToDoubleIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConvertMasterIndexToDoubleIndex, &ConvertMasterIndexToDoubleIndex_Parms, NULL );

	pFnConvertMasterIndexToDoubleIndex->FunctionFlags |= 0x400;

	if ( inventoryIndex )
		*inventoryIndex = ConvertMasterIndexToDoubleIndex_Parms.inventoryIndex;

	if ( ElementIndex )
		*ElementIndex = ConvertMasterIndexToDoubleIndex_Parms.ElementIndex;

	return ConvertMasterIndexToDoubleIndex_Parms.ReturnValue;
};

// Function SFXGame.BioShop.RemovePlotItemAtMasterIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            masterPlotItemIndex            ( CPF_Parm )

bool ABioShop::RemovePlotItemAtMasterIndex ( int masterPlotItemIndex )
{
	static UFunction* pFnRemovePlotItemAtMasterIndex = NULL;

	if ( ! pFnRemovePlotItemAtMasterIndex )
		pFnRemovePlotItemAtMasterIndex = (UFunction*) UObject::GObjObjects()->Data[ 63884 ];

	ABioShop_execRemovePlotItemAtMasterIndex_Parms RemovePlotItemAtMasterIndex_Parms;
	RemovePlotItemAtMasterIndex_Parms.masterPlotItemIndex = masterPlotItemIndex;

	pFnRemovePlotItemAtMasterIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemovePlotItemAtMasterIndex, &RemovePlotItemAtMasterIndex_Parms, NULL );

	pFnRemovePlotItemAtMasterIndex->FunctionFlags |= 0x400;

	return RemovePlotItemAtMasterIndex_Parms.ReturnValue;
};

// Function SFXGame.BioShop.GetItemPriceAtMasterIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            masterIndex                    ( CPF_Parm )

float ABioShop::GetItemPriceAtMasterIndex ( int masterIndex )
{
	static UFunction* pFnGetItemPriceAtMasterIndex = NULL;

	if ( ! pFnGetItemPriceAtMasterIndex )
		pFnGetItemPriceAtMasterIndex = (UFunction*) UObject::GObjObjects()->Data[ 63881 ];

	ABioShop_execGetItemPriceAtMasterIndex_Parms GetItemPriceAtMasterIndex_Parms;
	GetItemPriceAtMasterIndex_Parms.masterIndex = masterIndex;

	pFnGetItemPriceAtMasterIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemPriceAtMasterIndex, &GetItemPriceAtMasterIndex_Parms, NULL );

	pFnGetItemPriceAtMasterIndex->FunctionFlags |= 0x400;

	return GetItemPriceAtMasterIndex_Parms.ReturnValue;
};

// Function SFXGame.BioShop.RemoveAtMasterIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioItem*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            masterIndex                    ( CPF_Parm )

class UBioItem* ABioShop::RemoveAtMasterIndex ( int masterIndex )
{
	static UFunction* pFnRemoveAtMasterIndex = NULL;

	if ( ! pFnRemoveAtMasterIndex )
		pFnRemoveAtMasterIndex = (UFunction*) UObject::GObjObjects()->Data[ 63878 ];

	ABioShop_execRemoveAtMasterIndex_Parms RemoveAtMasterIndex_Parms;
	RemoveAtMasterIndex_Parms.masterIndex = masterIndex;

	pFnRemoveAtMasterIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveAtMasterIndex, &RemoveAtMasterIndex_Parms, NULL );

	pFnRemoveAtMasterIndex->FunctionFlags |= 0x400;

	return RemoveAtMasterIndex_Parms.ReturnValue;
};

// Function SFXGame.BioShop.BuildFilteredInventory
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  Filter                         ( CPF_Parm )
// class UBioInventory*           filteredInventory              ( CPF_Parm | CPF_OutParm )

void ABioShop::BuildFilteredInventory ( unsigned char Filter, class UBioInventory** filteredInventory )
{
	static UFunction* pFnBuildFilteredInventory = NULL;

	if ( ! pFnBuildFilteredInventory )
		pFnBuildFilteredInventory = (UFunction*) UObject::GObjObjects()->Data[ 63875 ];

	ABioShop_execBuildFilteredInventory_Parms BuildFilteredInventory_Parms;
	BuildFilteredInventory_Parms.Filter = Filter;

	pFnBuildFilteredInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildFilteredInventory, &BuildFilteredInventory_Parms, NULL );

	pFnBuildFilteredInventory->FunctionFlags |= 0x400;

	if ( filteredInventory )
		*filteredInventory = BuildFilteredInventory_Parms.filteredInventory;
};

// Function SFXGame.BioShop.ReadyShopForOpening
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerLevel                    ( CPF_Parm )
// float                          priceAdjustment                ( CPF_Parm )

bool ABioShop::ReadyShopForOpening ( int PlayerLevel, float priceAdjustment )
{
	static UFunction* pFnReadyShopForOpening = NULL;

	if ( ! pFnReadyShopForOpening )
		pFnReadyShopForOpening = (UFunction*) UObject::GObjObjects()->Data[ 63871 ];

	ABioShop_execReadyShopForOpening_Parms ReadyShopForOpening_Parms;
	ReadyShopForOpening_Parms.PlayerLevel = PlayerLevel;
	ReadyShopForOpening_Parms.priceAdjustment = priceAdjustment;

	pFnReadyShopForOpening->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadyShopForOpening, &ReadyShopForOpening_Parms, NULL );

	pFnReadyShopForOpening->FunctionFlags |= 0x400;

	return ReadyShopForOpening_Parms.ReturnValue;
};

// Function SFXGame.BioShop.GetPriceAdjustmentFactor
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioShop::GetPriceAdjustmentFactor ( )
{
	static UFunction* pFnGetPriceAdjustmentFactor = NULL;

	if ( ! pFnGetPriceAdjustmentFactor )
		pFnGetPriceAdjustmentFactor = (UFunction*) UObject::GObjObjects()->Data[ 63868 ];

	ABioShop_execGetPriceAdjustmentFactor_Parms GetPriceAdjustmentFactor_Parms;

	this->ProcessEvent ( pFnGetPriceAdjustmentFactor, &GetPriceAdjustmentFactor_Parms, NULL );

	return GetPriceAdjustmentFactor_Parms.ReturnValue;
};

// Function SFXGame.BioSkillGame.InitializeSkillGameStringReferences
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            i_GameMessageSuccess           ( CPF_Parm )
// int                            i_GameMessageFailure           ( CPF_Parm )
// int                            i_GameMessageDuringGame        ( CPF_Parm )
// int                            i_preGameButtonAText           ( CPF_Parm )
// int                            i_preGameButtonBText           ( CPF_Parm )
// int                            i_preGameButtonXText           ( CPF_Parm )

void UBioSkillGame::eventInitializeSkillGameStringReferences ( int i_GameMessageSuccess, int i_GameMessageFailure, int i_GameMessageDuringGame, int i_preGameButtonAText, int i_preGameButtonBText, int i_preGameButtonXText )
{
	static UFunction* pFnInitializeSkillGameStringReferences = NULL;

	if ( ! pFnInitializeSkillGameStringReferences )
		pFnInitializeSkillGameStringReferences = (UFunction*) UObject::GObjObjects()->Data[ 49172 ];

	UBioSkillGame_eventInitializeSkillGameStringReferences_Parms InitializeSkillGameStringReferences_Parms;
	InitializeSkillGameStringReferences_Parms.i_GameMessageSuccess = i_GameMessageSuccess;
	InitializeSkillGameStringReferences_Parms.i_GameMessageFailure = i_GameMessageFailure;
	InitializeSkillGameStringReferences_Parms.i_GameMessageDuringGame = i_GameMessageDuringGame;
	InitializeSkillGameStringReferences_Parms.i_preGameButtonAText = i_preGameButtonAText;
	InitializeSkillGameStringReferences_Parms.i_preGameButtonBText = i_preGameButtonBText;
	InitializeSkillGameStringReferences_Parms.i_preGameButtonXText = i_preGameButtonXText;

	this->ProcessEvent ( pFnInitializeSkillGameStringReferences, &InitializeSkillGameStringReferences_Parms, NULL );
};

// Function SFXGame.BioSkillGame.CallbackShowAdditonalTutorial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSkillGame::CallbackShowAdditonalTutorial ( )
{
	static UFunction* pFnCallbackShowAdditonalTutorial = NULL;

	if ( ! pFnCallbackShowAdditonalTutorial )
		pFnCallbackShowAdditonalTutorial = (UFunction*) UObject::GObjObjects()->Data[ 49171 ];

	UBioSkillGame_execCallbackShowAdditonalTutorial_Parms CallbackShowAdditonalTutorial_Parms;

	pFnCallbackShowAdditonalTutorial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallbackShowAdditonalTutorial, &CallbackShowAdditonalTutorial_Parms, NULL );

	pFnCallbackShowAdditonalTutorial->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame.CallbackSkillGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UBioSkillGame::CallbackSkillGame ( )
{
	static UFunction* pFnCallbackSkillGame = NULL;

	if ( ! pFnCallbackSkillGame )
		pFnCallbackSkillGame = (UFunction*) UObject::GObjObjects()->Data[ 49170 ];

	UBioSkillGame_execCallbackSkillGame_Parms CallbackSkillGame_Parms;

	pFnCallbackSkillGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallbackSkillGame, &CallbackSkillGame_Parms, NULL );

	pFnCallbackSkillGame->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSkillGame.InitializeSkillGameCustom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )
// class UObject*                 oDependent                     ( CPF_Parm )
// unsigned char                  nSkillGameType                 ( CPF_Parm )
// int                            nMinSalvage                    ( CPF_Parm )
// int                            nMaxSalvage                    ( CPF_Parm )
// int                            nTotalButtonsToDisplay         ( CPF_Parm )
// float                          fButtonTimeout                 ( CPF_Parm )
// float                          fButtonDelayTime               ( CPF_Parm )
// struct FName                   nmFunctionSuccessCallback      ( CPF_Parm )
// struct FName                   nmFunctionFailureCallback      ( CPF_Parm )
// struct FName                   nmFunctionCancelCallback       ( CPF_Parm )
// unsigned long                  i_bDoNotUseSalvage             ( CPF_Parm )
// unsigned char                  eGameDifficulty                ( CPF_Parm )

bool UBioSkillGame::InitializeSkillGameCustom ( class ABioPawn* oUsingPawn, class UObject* oDependent, unsigned char nSkillGameType, int nMinSalvage, int nMaxSalvage, int nTotalButtonsToDisplay, float fButtonTimeout, float fButtonDelayTime, struct FName nmFunctionSuccessCallback, struct FName nmFunctionFailureCallback, struct FName nmFunctionCancelCallback, unsigned long i_bDoNotUseSalvage, unsigned char eGameDifficulty )
{
	static UFunction* pFnInitializeSkillGameCustom = NULL;

	if ( ! pFnInitializeSkillGameCustom )
		pFnInitializeSkillGameCustom = (UFunction*) UObject::GObjObjects()->Data[ 49155 ];

	UBioSkillGame_execInitializeSkillGameCustom_Parms InitializeSkillGameCustom_Parms;
	InitializeSkillGameCustom_Parms.oUsingPawn = oUsingPawn;
	InitializeSkillGameCustom_Parms.oDependent = oDependent;
	InitializeSkillGameCustom_Parms.nSkillGameType = nSkillGameType;
	InitializeSkillGameCustom_Parms.nMinSalvage = nMinSalvage;
	InitializeSkillGameCustom_Parms.nMaxSalvage = nMaxSalvage;
	InitializeSkillGameCustom_Parms.nTotalButtonsToDisplay = nTotalButtonsToDisplay;
	InitializeSkillGameCustom_Parms.fButtonTimeout = fButtonTimeout;
	InitializeSkillGameCustom_Parms.fButtonDelayTime = fButtonDelayTime;
	memcpy ( &InitializeSkillGameCustom_Parms.nmFunctionSuccessCallback, &nmFunctionSuccessCallback, 0x8 );
	memcpy ( &InitializeSkillGameCustom_Parms.nmFunctionFailureCallback, &nmFunctionFailureCallback, 0x8 );
	memcpy ( &InitializeSkillGameCustom_Parms.nmFunctionCancelCallback, &nmFunctionCancelCallback, 0x8 );
	InitializeSkillGameCustom_Parms.i_bDoNotUseSalvage = i_bDoNotUseSalvage;
	InitializeSkillGameCustom_Parms.eGameDifficulty = eGameDifficulty;

	pFnInitializeSkillGameCustom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeSkillGameCustom, &InitializeSkillGameCustom_Parms, NULL );

	pFnInitializeSkillGameCustom->FunctionFlags |= 0x400;

	return InitializeSkillGameCustom_Parms.ReturnValue;
};

// Function SFXGame.BioSkillGame.InitializeSkillGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oUsingPawn                     ( CPF_Parm )
// class UObject*                 oDependent                     ( CPF_Parm )
// unsigned char                  nSkillGameType                 ( CPF_Parm )
// int                            nMinSalvage                    ( CPF_Parm )
// int                            nMaxSalvage                    ( CPF_Parm )
// int                            nTotalButtonsToDisplay         ( CPF_Parm )
// float                          fButtonTimeout                 ( CPF_Parm )
// float                          fButtonDelayTime               ( CPF_Parm )
// unsigned char                  eGameDifficulty                ( CPF_Parm )

bool UBioSkillGame::InitializeSkillGame ( class ABioPawn* oUsingPawn, class UObject* oDependent, unsigned char nSkillGameType, int nMinSalvage, int nMaxSalvage, int nTotalButtonsToDisplay, float fButtonTimeout, float fButtonDelayTime, unsigned char eGameDifficulty )
{
	static UFunction* pFnInitializeSkillGame = NULL;

	if ( ! pFnInitializeSkillGame )
		pFnInitializeSkillGame = (UFunction*) UObject::GObjObjects()->Data[ 49144 ];

	UBioSkillGame_execInitializeSkillGame_Parms InitializeSkillGame_Parms;
	InitializeSkillGame_Parms.oUsingPawn = oUsingPawn;
	InitializeSkillGame_Parms.oDependent = oDependent;
	InitializeSkillGame_Parms.nSkillGameType = nSkillGameType;
	InitializeSkillGame_Parms.nMinSalvage = nMinSalvage;
	InitializeSkillGame_Parms.nMaxSalvage = nMaxSalvage;
	InitializeSkillGame_Parms.nTotalButtonsToDisplay = nTotalButtonsToDisplay;
	InitializeSkillGame_Parms.fButtonTimeout = fButtonTimeout;
	InitializeSkillGame_Parms.fButtonDelayTime = fButtonDelayTime;
	InitializeSkillGame_Parms.eGameDifficulty = eGameDifficulty;

	pFnInitializeSkillGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeSkillGame, &InitializeSkillGame_Parms, NULL );

	pFnInitializeSkillGame->FunctionFlags |= 0x400;

	return InitializeSkillGame_Parms.ReturnValue;
};

// Function SFXGame.BioSkillGame.GetBestSkillMember
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSkillGameType                 ( CPF_Parm )
// class ABioBaseSquad*           oInputSquad                    ( CPF_Parm )
// int                            nBestSkillLevel                ( CPF_Parm | CPF_OutParm )

class APawn* UBioSkillGame::GetBestSkillMember ( unsigned char eSkillGameType, class ABioBaseSquad* oInputSquad, int* nBestSkillLevel )
{
	static UFunction* pFnGetBestSkillMember = NULL;

	if ( ! pFnGetBestSkillMember )
		pFnGetBestSkillMember = (UFunction*) UObject::GObjObjects()->Data[ 49139 ];

	UBioSkillGame_execGetBestSkillMember_Parms GetBestSkillMember_Parms;
	GetBestSkillMember_Parms.eSkillGameType = eSkillGameType;
	GetBestSkillMember_Parms.oInputSquad = oInputSquad;

	pFnGetBestSkillMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBestSkillMember, &GetBestSkillMember_Parms, NULL );

	pFnGetBestSkillMember->FunctionFlags |= 0x400;

	if ( nBestSkillLevel )
		*nBestSkillLevel = GetBestSkillMember_Parms.nBestSkillLevel;

	return GetBestSkillMember_Parms.ReturnValue;
};

// Function SFXGame.BioSkillGame.GetSalvageLimits
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nSkillRank                     ( CPF_Parm )
// int                            eDifficulty                    ( CPF_Parm )
// int                            fSalvageMin                    ( CPF_Parm | CPF_OutParm )
// int                            fSalvageMax                    ( CPF_Parm | CPF_OutParm )

bool UBioSkillGame::GetSalvageLimits ( int nSkillRank, int eDifficulty, int* fSalvageMin, int* fSalvageMax )
{
	static UFunction* pFnGetSalvageLimits = NULL;

	if ( ! pFnGetSalvageLimits )
		pFnGetSalvageLimits = (UFunction*) UObject::GObjObjects()->Data[ 49133 ];

	UBioSkillGame_execGetSalvageLimits_Parms GetSalvageLimits_Parms;
	GetSalvageLimits_Parms.nSkillRank = nSkillRank;
	GetSalvageLimits_Parms.eDifficulty = eDifficulty;

	pFnGetSalvageLimits->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSalvageLimits, &GetSalvageLimits_Parms, NULL );

	pFnGetSalvageLimits->FunctionFlags |= 0x400;

	if ( fSalvageMin )
		*fSalvageMin = GetSalvageLimits_Parms.fSalvageMin;

	if ( fSalvageMax )
		*fSalvageMax = GetSalvageLimits_Parms.fSalvageMax;

	return GetSalvageLimits_Parms.ReturnValue;
};

// Function SFXGame.BioFaction.GetRelationTo
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nType                          ( CPF_Parm )

unsigned char UBioFaction::GetRelationTo ( unsigned char nType )
{
	static UFunction* pFnGetRelationTo = NULL;

	if ( ! pFnGetRelationTo )
		pFnGetRelationTo = (UFunction*) UObject::GObjObjects()->Data[ 53307 ];

	UBioFaction_execGetRelationTo_Parms GetRelationTo_Parms;
	GetRelationTo_Parms.nType = nType;

	this->ProcessEvent ( pFnGetRelationTo, &GetRelationTo_Parms, NULL );

	return GetRelationTo_Parms.ReturnValue;
};

// Function SFXGame.BioSquadAPI.DisplaySquadDebug
// [0x00020000] 
// Parameters infos:

void ABioSquadAPI::DisplaySquadDebug ( )
{
	static UFunction* pFnDisplaySquadDebug = NULL;

	if ( ! pFnDisplaySquadDebug )
		pFnDisplaySquadDebug = (UFunction*) UObject::GObjObjects()->Data[ 41901 ];

	ABioSquadAPI_execDisplaySquadDebug_Parms DisplaySquadDebug_Parms;

	this->ProcessEvent ( pFnDisplaySquadDebug, &DisplaySquadDebug_Parms, NULL );
};

// Function SFXGame.BioSquadAPI.ProcessPoint
// [0x00024000] 
// Parameters infos:
// unsigned char                  HowPointWasReached             ( CPF_Parm )
// struct FVector                 Location_                      ( CPF_Parm )
// struct FRotator                Orientation                    ( CPF_Parm )
// struct FName                   ActionOn                       ( CPF_OptionalParm | CPF_Parm )

void ABioSquadAPI::ProcessPoint ( unsigned char HowPointWasReached, struct FVector Location_, struct FRotator Orientation, struct FName ActionOn )
{
	static UFunction* pFnProcessPoint = NULL;

	if ( ! pFnProcessPoint )
		pFnProcessPoint = (UFunction*) UObject::GObjObjects()->Data[ 41896 ];

	ABioSquadAPI_execProcessPoint_Parms ProcessPoint_Parms;
	ProcessPoint_Parms.HowPointWasReached = HowPointWasReached;
	memcpy ( &ProcessPoint_Parms.Location_, &Location_, 0xC );
	memcpy ( &ProcessPoint_Parms.Orientation, &Orientation, 0xC );
	memcpy ( &ProcessPoint_Parms.ActionOn, &ActionOn, 0x8 );

	this->ProcessEvent ( pFnProcessPoint, &ProcessPoint_Parms, NULL );
};

// Function SFXGame.BioSquadAPI.Initalize
// [0x00020000] 
// Parameters infos:

void ABioSquadAPI::Initalize ( )
{
	static UFunction* pFnInitalize = NULL;

	if ( ! pFnInitalize )
		pFnInitalize = (UFunction*) UObject::GObjObjects()->Data[ 41895 ];

	ABioSquadAPI_execInitalize_Parms Initalize_Parms;

	this->ProcessEvent ( pFnInitalize, &Initalize_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.IsInactive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::IsInactive ( )
{
	static UFunction* pFnIsInactive = NULL;

	if ( ! pFnIsInactive )
		pFnIsInactive = (UFunction*) UObject::GObjObjects()->Data[ 43230 ];

	ABioBaseSquad_execIsInactive_Parms IsInactive_Parms;

	this->ProcessEvent ( pFnIsInactive, &IsInactive_Parms, NULL );

	return IsInactive_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetMaxHazardLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetMaxHazardLevel ( )
{
	static UFunction* pFnGetMaxHazardLevel = NULL;

	if ( ! pFnGetMaxHazardLevel )
		pFnGetMaxHazardLevel = (UFunction*) UObject::GObjObjects()->Data[ 43228 ];

	ABioBaseSquad_execGetMaxHazardLevel_Parms GetMaxHazardLevel_Parms;

	pFnGetMaxHazardLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxHazardLevel, &GetMaxHazardLevel_Parms, NULL );

	pFnGetMaxHazardLevel->FunctionFlags |= 0x400;

	return GetMaxHazardLevel_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.NotifyMemberCoverDisabled
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oWho                           ( CPF_Parm )
// class AActor*                  Link                           ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

void ABioBaseSquad::eventNotifyMemberCoverDisabled ( class APawn* oWho, class AActor* Link, int SlotIdx )
{
	static UFunction* pFnNotifyMemberCoverDisabled = NULL;

	if ( ! pFnNotifyMemberCoverDisabled )
		pFnNotifyMemberCoverDisabled = (UFunction*) UObject::GObjObjects()->Data[ 43224 ];

	ABioBaseSquad_eventNotifyMemberCoverDisabled_Parms NotifyMemberCoverDisabled_Parms;
	NotifyMemberCoverDisabled_Parms.oWho = oWho;
	NotifyMemberCoverDisabled_Parms.Link = Link;
	NotifyMemberCoverDisabled_Parms.SlotIdx = SlotIdx;

	this->ProcessEvent ( pFnNotifyMemberCoverDisabled, &NotifyMemberCoverDisabled_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.Resurrect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fPercentOfHealthRegained       ( CPF_Parm )
// unsigned long                  bIsInstantaneous               ( CPF_Parm )

void ABioBaseSquad::eventResurrect ( float fPercentOfHealthRegained, unsigned long bIsInstantaneous )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 43218 ];

	ABioBaseSquad_eventResurrect_Parms Resurrect_Parms;
	Resurrect_Parms.fPercentOfHealthRegained = fPercentOfHealthRegained;
	Resurrect_Parms.bIsInstantaneous = bIsInstantaneous;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioBaseSquad::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 43216 ];

	ABioBaseSquad_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.OnThrowGrenade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )

void ABioBaseSquad::eventOnThrowGrenade ( class ABioPawn* pPawn )
{
	static UFunction* pFnOnThrowGrenade = NULL;

	if ( ! pFnOnThrowGrenade )
		pFnOnThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 43214 ];

	ABioBaseSquad_eventOnThrowGrenade_Parms OnThrowGrenade_Parms;
	OnThrowGrenade_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnOnThrowGrenade, &OnThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.HasGrenades
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool ABioBaseSquad::eventHasGrenades ( class ABioPawn* pPawn )
{
	static UFunction* pFnHasGrenades = NULL;

	if ( ! pFnHasGrenades )
		pFnHasGrenades = (UFunction*) UObject::GObjObjects()->Data[ 43211 ];

	ABioBaseSquad_eventHasGrenades_Parms HasGrenades_Parms;
	HasGrenades_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnHasGrenades, &HasGrenades_Parms, NULL );

	return HasGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.MakeHackable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ABioBaseSquad* ABioBaseSquad::MakeHackable ( )
{
	static UFunction* pFnMakeHackable = NULL;

	if ( ! pFnMakeHackable )
		pFnMakeHackable = (UFunction*) UObject::GObjObjects()->Data[ 43209 ];

	ABioBaseSquad_execMakeHackable_Parms MakeHackable_Parms;

	pFnMakeHackable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMakeHackable, &MakeHackable_Parms, NULL );

	pFnMakeHackable->FunctionFlags |= 0x400;

	return MakeHackable_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetHackedSquad
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventSetHackedSquad ( )
{
	static UFunction* pFnSetHackedSquad = NULL;

	if ( ! pFnSetHackedSquad )
		pFnSetHackedSquad = (UFunction*) UObject::GObjObjects()->Data[ 43208 ];

	ABioBaseSquad_eventSetHackedSquad_Parms SetHackedSquad_Parms;

	this->ProcessEvent ( pFnSetHackedSquad, &SetHackedSquad_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.HasCover
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::HasCover ( )
{
	static UFunction* pFnHasCover = NULL;

	if ( ! pFnHasCover )
		pFnHasCover = (UFunction*) UObject::GObjObjects()->Data[ 43205 ];

	ABioBaseSquad_execHasCover_Parms HasCover_Parms;

	this->ProcessEvent ( pFnHasCover, &HasCover_Parms, NULL );

	return HasCover_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SquadHandleChatterEvent
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eSoundSet                      ( CPF_Parm )
// int                            nFlags                         ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::eventSquadHandleChatterEvent ( unsigned char eSoundSet, int nFlags )
{
	static UFunction* pFnSquadHandleChatterEvent = NULL;

	if ( ! pFnSquadHandleChatterEvent )
		pFnSquadHandleChatterEvent = (UFunction*) UObject::GObjObjects()->Data[ 43198 ];

	ABioBaseSquad_eventSquadHandleChatterEvent_Parms SquadHandleChatterEvent_Parms;
	SquadHandleChatterEvent_Parms.eSoundSet = eSoundSet;
	SquadHandleChatterEvent_Parms.nFlags = nFlags;

	this->ProcessEvent ( pFnSquadHandleChatterEvent, &SquadHandleChatterEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnUntargetedByHostile
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oHostile                       ( CPF_Parm )
// unsigned long                  bHostileAboutToRetargetSquad   ( CPF_Parm )

void ABioBaseSquad::eventOnUntargetedByHostile ( class AActor* oHostile, unsigned long bHostileAboutToRetargetSquad )
{
	static UFunction* pFnOnUntargetedByHostile = NULL;

	if ( ! pFnOnUntargetedByHostile )
		pFnOnUntargetedByHostile = (UFunction*) UObject::GObjObjects()->Data[ 43193 ];

	ABioBaseSquad_eventOnUntargetedByHostile_Parms OnUntargetedByHostile_Parms;
	OnUntargetedByHostile_Parms.oHostile = oHostile;
	OnUntargetedByHostile_Parms.bHostileAboutToRetargetSquad = bHostileAboutToRetargetSquad;

	this->ProcessEvent ( pFnOnUntargetedByHostile, &OnUntargetedByHostile_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnTargetedByHostile
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oHostile                       ( CPF_Parm )

void ABioBaseSquad::eventOnTargetedByHostile ( class AActor* oHostile )
{
	static UFunction* pFnOnTargetedByHostile = NULL;

	if ( ! pFnOnTargetedByHostile )
		pFnOnTargetedByHostile = (UFunction*) UObject::GObjObjects()->Data[ 43191 ];

	ABioBaseSquad_eventOnTargetedByHostile_Parms OnTargetedByHostile_Parms;
	OnTargetedByHostile_Parms.oHostile = oHostile;

	this->ProcessEvent ( pFnOnTargetedByHostile, &OnTargetedByHostile_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.UseCapability
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oMember                        ( CPF_Parm )
// class UBioCapability*          oCap                           ( CPF_Parm )
// unsigned char                  eAttackType                    ( CPF_OptionalParm | CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreWounds                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bSprayCloseRange               ( CPF_OptionalParm | CPF_Parm )

bool ABioBaseSquad::UseCapability ( class ABioAiController* oMember, class UBioCapability* oCap, unsigned char eAttackType, class APawn* oTarget, unsigned long bIgnoreWounds, unsigned long bSprayCloseRange )
{
	static UFunction* pFnUseCapability = NULL;

	if ( ! pFnUseCapability )
		pFnUseCapability = (UFunction*) UObject::GObjObjects()->Data[ 43167 ];

	ABioBaseSquad_execUseCapability_Parms UseCapability_Parms;
	UseCapability_Parms.oMember = oMember;
	UseCapability_Parms.oCap = oCap;
	UseCapability_Parms.eAttackType = eAttackType;
	UseCapability_Parms.oTarget = oTarget;
	UseCapability_Parms.bIgnoreWounds = bIgnoreWounds;
	UseCapability_Parms.bSprayCloseRange = bSprayCloseRange;

	this->ProcessEvent ( pFnUseCapability, &UseCapability_Parms, NULL );

	return UseCapability_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestAttack
// [0x00424002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bAllowWeaponSwitch             ( CPF_OptionalParm | CPF_Parm )
// float                          fPowerUsePercent               ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  eAttackType                    ( CPF_Parm | CPF_OutParm )

class UBioCapability* ABioBaseSquad::GetBestAttack ( class ABioPawn* oMemberPawn, class AActor* oTarget, unsigned long bAllowWeaponSwitch, float fPowerUsePercent, unsigned char* eAttackType )
{
	static UFunction* pFnGetBestAttack = NULL;

	if ( ! pFnGetBestAttack )
		pFnGetBestAttack = (UFunction*) UObject::GObjObjects()->Data[ 43155 ];

	ABioBaseSquad_execGetBestAttack_Parms GetBestAttack_Parms;
	GetBestAttack_Parms.oMemberPawn = oMemberPawn;
	GetBestAttack_Parms.oTarget = oTarget;
	GetBestAttack_Parms.bAllowWeaponSwitch = bAllowWeaponSwitch;
	GetBestAttack_Parms.fPowerUsePercent = fPowerUsePercent;

	this->ProcessEvent ( pFnGetBestAttack, &GetBestAttack_Parms, NULL );

	if ( eAttackType )
		*eAttackType = GetBestAttack_Parms.eAttackType;

	return GetBestAttack_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestDefense
// [0x00424002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// unsigned long                  bAlwaysAllowDefense            ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  eAttackType                    ( CPF_Parm | CPF_OutParm )

class UBioCapability* ABioBaseSquad::GetBestDefense ( class ABioPawn* oMemberPawn, unsigned long bAlwaysAllowDefense, unsigned char* eAttackType )
{
	static UFunction* pFnGetBestDefense = NULL;

	if ( ! pFnGetBestDefense )
		pFnGetBestDefense = (UFunction*) UObject::GObjObjects()->Data[ 43148 ];

	ABioBaseSquad_execGetBestDefense_Parms GetBestDefense_Parms;
	GetBestDefense_Parms.oMemberPawn = oMemberPawn;
	GetBestDefense_Parms.bAlwaysAllowDefense = bAlwaysAllowDefense;

	this->ProcessEvent ( pFnGetBestDefense, &GetBestDefense_Parms, NULL );

	if ( eAttackType )
		*eAttackType = GetBestDefense_Parms.eAttackType;

	return GetBestDefense_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestWeapon
// [0x00024002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// unsigned long                  bAllowWeaponSwitch             ( CPF_OptionalParm | CPF_Parm )

class UBioCapability* ABioBaseSquad::GetBestWeapon ( class ABioPawn* oMemberPawn, class AActor* oTarget, unsigned long bAllowWeaponSwitch )
{
	static UFunction* pFnGetBestWeapon = NULL;

	if ( ! pFnGetBestWeapon )
		pFnGetBestWeapon = (UFunction*) UObject::GObjObjects()->Data[ 43130 ];

	ABioBaseSquad_execGetBestWeapon_Parms GetBestWeapon_Parms;
	GetBestWeapon_Parms.oMemberPawn = oMemberPawn;
	GetBestWeapon_Parms.oTarget = oTarget;
	GetBestWeapon_Parms.bAllowWeaponSwitch = bAllowWeaponSwitch;

	this->ProcessEvent ( pFnGetBestWeapon, &GetBestWeapon_Parms, NULL );

	return GetBestWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestAttackPower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )

class UBioCapability* ABioBaseSquad::GetBestAttackPower ( class ABioPawn* oMemberPawn, class AActor* oTarget )
{
	static UFunction* pFnGetBestAttackPower = NULL;

	if ( ! pFnGetBestAttackPower )
		pFnGetBestAttackPower = (UFunction*) UObject::GObjObjects()->Data[ 43108 ];

	ABioBaseSquad_execGetBestAttackPower_Parms GetBestAttackPower_Parms;
	GetBestAttackPower_Parms.oMemberPawn = oMemberPawn;
	GetBestAttackPower_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnGetBestAttackPower, &GetBestAttackPower_Parms, NULL );

	return GetBestAttackPower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestDisableDebuffPower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )

class UBioCapability* ABioBaseSquad::GetBestDisableDebuffPower ( class ABioPawn* oMemberPawn, class AActor* oTarget )
{
	static UFunction* pFnGetBestDisableDebuffPower = NULL;

	if ( ! pFnGetBestDisableDebuffPower )
		pFnGetBestDisableDebuffPower = (UFunction*) UObject::GObjObjects()->Data[ 43077 ];

	ABioBaseSquad_execGetBestDisableDebuffPower_Parms GetBestDisableDebuffPower_Parms;
	GetBestDisableDebuffPower_Parms.oMemberPawn = oMemberPawn;
	GetBestDisableDebuffPower_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnGetBestDisableDebuffPower, &GetBestDisableDebuffPower_Parms, NULL );

	return GetBestDisableDebuffPower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetSuicidePower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )

class UBioCapability* ABioBaseSquad::GetSuicidePower ( class ABioPawn* oMemberPawn, class AActor* oTarget )
{
	static UFunction* pFnGetSuicidePower = NULL;

	if ( ! pFnGetSuicidePower )
		pFnGetSuicidePower = (UFunction*) UObject::GObjObjects()->Data[ 43064 ];

	ABioBaseSquad_execGetSuicidePower_Parms GetSuicidePower_Parms;
	GetSuicidePower_Parms.oMemberPawn = oMemberPawn;
	GetSuicidePower_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnGetSuicidePower, &GetSuicidePower_Parms, NULL );

	return GetSuicidePower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestHealingPower
// [0x00420002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )
// class ABioPawn*                oTargetSquadMember             ( CPF_Parm | CPF_OutParm )

class UBioCapability* ABioBaseSquad::GetBestHealingPower ( class ABioPawn* oMemberPawn, class ABioPawn** oTargetSquadMember )
{
	static UFunction* pFnGetBestHealingPower = NULL;

	if ( ! pFnGetBestHealingPower )
		pFnGetBestHealingPower = (UFunction*) UObject::GObjObjects()->Data[ 43043 ];

	ABioBaseSquad_execGetBestHealingPower_Parms GetBestHealingPower_Parms;
	GetBestHealingPower_Parms.oMemberPawn = oMemberPawn;

	this->ProcessEvent ( pFnGetBestHealingPower, &GetBestHealingPower_Parms, NULL );

	if ( oTargetSquadMember )
		*oTargetSquadMember = GetBestHealingPower_Parms.oTargetSquadMember;

	return GetBestHealingPower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestTargetForHeal
// [0x00420002] 
// Parameters infos:
// class ABioPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oCaster                        ( CPF_Parm )
// class UBioCapability*          oHealPower                     ( CPF_Parm )
// float                          fRangeToTarget                 ( CPF_Parm | CPF_OutParm )

class ABioPawn* ABioBaseSquad::GetBestTargetForHeal ( class ABioPawn* oCaster, class UBioCapability* oHealPower, float* fRangeToTarget )
{
	static UFunction* pFnGetBestTargetForHeal = NULL;

	if ( ! pFnGetBestTargetForHeal )
		pFnGetBestTargetForHeal = (UFunction*) UObject::GObjObjects()->Data[ 43025 ];

	ABioBaseSquad_execGetBestTargetForHeal_Parms GetBestTargetForHeal_Parms;
	GetBestTargetForHeal_Parms.oCaster = oCaster;
	GetBestTargetForHeal_Parms.oHealPower = oHealPower;

	this->ProcessEvent ( pFnGetBestTargetForHeal, &GetBestTargetForHeal_Parms, NULL );

	if ( fRangeToTarget )
		*fRangeToTarget = GetBestTargetForHeal_Parms.fRangeToTarget;

	return GetBestTargetForHeal_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsPawnHealthBelowThreshold
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oTestPawn                      ( CPF_Parm )
// float                          fThreshold                     ( CPF_Parm )

bool ABioBaseSquad::IsPawnHealthBelowThreshold ( class ABioPawn* oTestPawn, float fThreshold )
{
	static UFunction* pFnIsPawnHealthBelowThreshold = NULL;

	if ( ! pFnIsPawnHealthBelowThreshold )
		pFnIsPawnHealthBelowThreshold = (UFunction*) UObject::GObjObjects()->Data[ 43019 ];

	ABioBaseSquad_execIsPawnHealthBelowThreshold_Parms IsPawnHealthBelowThreshold_Parms;
	IsPawnHealthBelowThreshold_Parms.oTestPawn = oTestPawn;
	IsPawnHealthBelowThreshold_Parms.fThreshold = fThreshold;

	this->ProcessEvent ( pFnIsPawnHealthBelowThreshold, &IsPawnHealthBelowThreshold_Parms, NULL );

	return IsPawnHealthBelowThreshold_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetPawnShieldPct
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oTestPawn                      ( CPF_Parm )

float ABioBaseSquad::GetPawnShieldPct ( class ABioPawn* oTestPawn )
{
	static UFunction* pFnGetPawnShieldPct = NULL;

	if ( ! pFnGetPawnShieldPct )
		pFnGetPawnShieldPct = (UFunction*) UObject::GObjObjects()->Data[ 43013 ];

	ABioBaseSquad_execGetPawnShieldPct_Parms GetPawnShieldPct_Parms;
	GetPawnShieldPct_Parms.oTestPawn = oTestPawn;

	this->ProcessEvent ( pFnGetPawnShieldPct, &GetPawnShieldPct_Parms, NULL );

	return GetPawnShieldPct_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetPawnHealthPct
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oTestPawn                      ( CPF_Parm )

float ABioBaseSquad::GetPawnHealthPct ( class ABioPawn* oTestPawn )
{
	static UFunction* pFnGetPawnHealthPct = NULL;

	if ( ! pFnGetPawnHealthPct )
		pFnGetPawnHealthPct = (UFunction*) UObject::GObjObjects()->Data[ 43005 ];

	ABioBaseSquad_execGetPawnHealthPct_Parms GetPawnHealthPct_Parms;
	GetPawnHealthPct_Parms.oTestPawn = oTestPawn;

	this->ProcessEvent ( pFnGetPawnHealthPct, &GetPawnHealthPct_Parms, NULL );

	return GetPawnHealthPct_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestDefensivePower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )

class UBioCapability* ABioBaseSquad::GetBestDefensivePower ( class ABioPawn* oMemberPawn )
{
	static UFunction* pFnGetBestDefensivePower = NULL;

	if ( ! pFnGetBestDefensivePower )
		pFnGetBestDefensivePower = (UFunction*) UObject::GObjObjects()->Data[ 42993 ];

	ABioBaseSquad_execGetBestDefensivePower_Parms GetBestDefensivePower_Parms;
	GetBestDefensivePower_Parms.oMemberPawn = oMemberPawn;

	this->ProcessEvent ( pFnGetBestDefensivePower, &GetBestDefensivePower_Parms, NULL );

	return GetBestDefensivePower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestBuffPower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )

class UBioCapability* ABioBaseSquad::GetBestBuffPower ( class ABioPawn* oMemberPawn )
{
	static UFunction* pFnGetBestBuffPower = NULL;

	if ( ! pFnGetBestBuffPower )
		pFnGetBestBuffPower = (UFunction*) UObject::GObjObjects()->Data[ 42981 ];

	ABioBaseSquad_execGetBestBuffPower_Parms GetBestBuffPower_Parms;
	GetBestBuffPower_Parms.oMemberPawn = oMemberPawn;

	this->ProcessEvent ( pFnGetBestBuffPower, &GetBestBuffPower_Parms, NULL );

	return GetBestBuffPower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsRequiredWeaponEquipped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioPawnBehavior*        oCasterBehavior                ( CPF_Parm )
// class UBioCapability*          oCap                           ( CPF_Parm )

bool ABioBaseSquad::IsRequiredWeaponEquipped ( class UBioPawnBehavior* oCasterBehavior, class UBioCapability* oCap )
{
	static UFunction* pFnIsRequiredWeaponEquipped = NULL;

	if ( ! pFnIsRequiredWeaponEquipped )
		pFnIsRequiredWeaponEquipped = (UFunction*) UObject::GObjObjects()->Data[ 42971 ];

	ABioBaseSquad_execIsRequiredWeaponEquipped_Parms IsRequiredWeaponEquipped_Parms;
	IsRequiredWeaponEquipped_Parms.oCasterBehavior = oCasterBehavior;
	IsRequiredWeaponEquipped_Parms.oCap = oCap;

	this->ProcessEvent ( pFnIsRequiredWeaponEquipped, &IsRequiredWeaponEquipped_Parms, NULL );

	return IsRequiredWeaponEquipped_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetAoEAttackValue
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vTarget                        ( CPF_Parm )
// float                          fRadius                        ( CPF_Parm )
// int                            nEnemyCount                    ( CPF_Parm | CPF_OutParm )
// int                            nSquadCount                    ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::GetAoEAttackValue ( struct FVector vTarget, float fRadius, int* nEnemyCount, int* nSquadCount )
{
	static UFunction* pFnGetAoEAttackValue = NULL;

	if ( ! pFnGetAoEAttackValue )
		pFnGetAoEAttackValue = (UFunction*) UObject::GObjObjects()->Data[ 42962 ];

	ABioBaseSquad_execGetAoEAttackValue_Parms GetAoEAttackValue_Parms;
	memcpy ( &GetAoEAttackValue_Parms.vTarget, &vTarget, 0xC );
	GetAoEAttackValue_Parms.fRadius = fRadius;

	this->ProcessEvent ( pFnGetAoEAttackValue, &GetAoEAttackValue_Parms, NULL );

	if ( nEnemyCount )
		*nEnemyCount = GetAoEAttackValue_Parms.nEnemyCount;

	if ( nSquadCount )
		*nSquadCount = GetAoEAttackValue_Parms.nSquadCount;

	return GetAoEAttackValue_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetActiveWeaponType
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )

unsigned char ABioBaseSquad::GetActiveWeaponType ( class ABioPawn* oMemberPawn )
{
	static UFunction* pFnGetActiveWeaponType = NULL;

	if ( ! pFnGetActiveWeaponType )
		pFnGetActiveWeaponType = (UFunction*) UObject::GObjObjects()->Data[ 42956 ];

	ABioBaseSquad_execGetActiveWeaponType_Parms GetActiveWeaponType_Parms;
	GetActiveWeaponType_Parms.oMemberPawn = oMemberPawn;

	this->ProcessEvent ( pFnGetActiveWeaponType, &GetActiveWeaponType_Parms, NULL );

	return GetActiveWeaponType_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsSquadCastingSpell
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmSpell                        ( CPF_Parm )

bool ABioBaseSquad::IsSquadCastingSpell ( struct FName nmSpell )
{
	static UFunction* pFnIsSquadCastingSpell = NULL;

	if ( ! pFnIsSquadCastingSpell )
		pFnIsSquadCastingSpell = (UFunction*) UObject::GObjObjects()->Data[ 42946 ];

	ABioBaseSquad_execIsSquadCastingSpell_Parms IsSquadCastingSpell_Parms;
	memcpy ( &IsSquadCastingSpell_Parms.nmSpell, &nmSpell, 0x8 );

	this->ProcessEvent ( pFnIsSquadCastingSpell, &IsSquadCastingSpell_Parms, NULL );

	return IsSquadCastingSpell_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNearestSquadMember
// [0x00424002] 
// Parameters infos:
// class ABioAiController*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vTarget                        ( CPF_Parm )
// struct TArray<class ABioAiController*> aoIgnoreMembers                ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          fBestDistToTargetSq            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

class ABioAiController* ABioBaseSquad::GetNearestSquadMember ( struct FVector vTarget, struct TArray<class ABioAiController*> aoIgnoreMembers, float* fBestDistToTargetSq )
{
	static UFunction* pFnGetNearestSquadMember = NULL;

	if ( ! pFnGetNearestSquadMember )
		pFnGetNearestSquadMember = (UFunction*) UObject::GObjObjects()->Data[ 42936 ];

	ABioBaseSquad_execGetNearestSquadMember_Parms GetNearestSquadMember_Parms;
	memcpy ( &GetNearestSquadMember_Parms.vTarget, &vTarget, 0xC );
	memcpy ( &GetNearestSquadMember_Parms.aoIgnoreMembers, &aoIgnoreMembers, 0x10 );

	this->ProcessEvent ( pFnGetNearestSquadMember, &GetNearestSquadMember_Parms, NULL );

	if ( fBestDistToTargetSq )
		*fBestDistToTargetSq = GetNearestSquadMember_Parms.fBestDistToTargetSq;

	return GetNearestSquadMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNearestSquadMemberToObject
// [0x00424002] 
// Parameters infos:
// class ABioAiController*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct TArray<class ABioAiController*> aoIgnoreMembers                ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          fBestDistToTargetSq            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

class ABioAiController* ABioBaseSquad::GetNearestSquadMemberToObject ( class AActor* oTarget, struct TArray<class ABioAiController*> aoIgnoreMembers, float* fBestDistToTargetSq )
{
	static UFunction* pFnGetNearestSquadMemberToObject = NULL;

	if ( ! pFnGetNearestSquadMemberToObject )
		pFnGetNearestSquadMemberToObject = (UFunction*) UObject::GObjObjects()->Data[ 42930 ];

	ABioBaseSquad_execGetNearestSquadMemberToObject_Parms GetNearestSquadMemberToObject_Parms;
	GetNearestSquadMemberToObject_Parms.oTarget = oTarget;
	memcpy ( &GetNearestSquadMemberToObject_Parms.aoIgnoreMembers, &aoIgnoreMembers, 0x10 );

	this->ProcessEvent ( pFnGetNearestSquadMemberToObject, &GetNearestSquadMemberToObject_Parms, NULL );

	if ( fBestDistToTargetSq )
		*fBestDistToTargetSq = GetNearestSquadMemberToObject_Parms.fBestDistToTargetSq;

	return GetNearestSquadMemberToObject_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.CalculateThreat
// [0x00024002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oMember                        ( CPF_Parm )
// class APawn*                   oEnemy                         ( CPF_Parm )
// unsigned long                  bAttackedMe                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCastAtMe                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLOSRequired                   ( CPF_OptionalParm | CPF_Parm )

float ABioBaseSquad::CalculateThreat ( class ABioAiController* oMember, class APawn* oEnemy, unsigned long bAttackedMe, unsigned long bCastAtMe, unsigned long bLOSRequired )
{
	static UFunction* pFnCalculateThreat = NULL;

	if ( ! pFnCalculateThreat )
		pFnCalculateThreat = (UFunction*) UObject::GObjObjects()->Data[ 42893 ];

	ABioBaseSquad_execCalculateThreat_Parms CalculateThreat_Parms;
	CalculateThreat_Parms.oMember = oMember;
	CalculateThreat_Parms.oEnemy = oEnemy;
	CalculateThreat_Parms.bAttackedMe = bAttackedMe;
	CalculateThreat_Parms.bCastAtMe = bCastAtMe;
	CalculateThreat_Parms.bLOSRequired = bLOSRequired;

	this->ProcessEvent ( pFnCalculateThreat, &CalculateThreat_Parms, NULL );

	return CalculateThreat_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindBestTarget
// [0x00024002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioAiController*        oMember                        ( CPF_Parm )
// class APawn*                   oIgnoreTarget                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLOSRequired                   ( CPF_OptionalParm | CPF_Parm )

class APawn* ABioBaseSquad::FindBestTarget ( class ABioAiController* oMember, class APawn* oIgnoreTarget, unsigned long bLOSRequired )
{
	static UFunction* pFnFindBestTarget = NULL;

	if ( ! pFnFindBestTarget )
		pFnFindBestTarget = (UFunction*) UObject::GObjObjects()->Data[ 42882 ];

	ABioBaseSquad_execFindBestTarget_Parms FindBestTarget_Parms;
	FindBestTarget_Parms.oMember = oMember;
	FindBestTarget_Parms.oIgnoreTarget = oIgnoreTarget;
	FindBestTarget_Parms.bLOSRequired = bLOSRequired;

	this->ProcessEvent ( pFnFindBestTarget, &FindBestTarget_Parms, NULL );

	return FindBestTarget_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsBioPawnHostile
// [0x00024002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTestActor                     ( CPF_Parm )
// unsigned long                  bRequiresTargetFlag            ( CPF_OptionalParm | CPF_Parm )

unsigned char ABioBaseSquad::IsBioPawnHostile ( class AActor* oTestActor, unsigned long bRequiresTargetFlag )
{
	static UFunction* pFnIsBioPawnHostile = NULL;

	if ( ! pFnIsBioPawnHostile )
		pFnIsBioPawnHostile = (UFunction*) UObject::GObjObjects()->Data[ 42877 ];

	ABioBaseSquad_execIsBioPawnHostile_Parms IsBioPawnHostile_Parms;
	IsBioPawnHostile_Parms.oTestActor = oTestActor;
	IsBioPawnHostile_Parms.bRequiresTargetFlag = bRequiresTargetFlag;

	this->ProcessEvent ( pFnIsBioPawnHostile, &IsBioPawnHostile_Parms, NULL );

	return IsBioPawnHostile_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsBioPawnValid
// [0x00024002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTestActor                     ( CPF_Parm )
// unsigned long                  bRequiresTargetFlag            ( CPF_OptionalParm | CPF_Parm )

unsigned char ABioBaseSquad::IsBioPawnValid ( class AActor* oTestActor, unsigned long bRequiresTargetFlag )
{
	static UFunction* pFnIsBioPawnValid = NULL;

	if ( ! pFnIsBioPawnValid )
		pFnIsBioPawnValid = (UFunction*) UObject::GObjObjects()->Data[ 42868 ];

	ABioBaseSquad_execIsBioPawnValid_Parms IsBioPawnValid_Parms;
	IsBioPawnValid_Parms.oTestActor = oTestActor;
	IsBioPawnValid_Parms.bRequiresTargetFlag = bRequiresTargetFlag;

	this->ProcessEvent ( pFnIsBioPawnValid, &IsBioPawnValid_Parms, NULL );

	return IsBioPawnValid_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.onMemberArrivedAtTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )

void ABioBaseSquad::eventonMemberArrivedAtTarget ( class APawn* oMember )
{
	static UFunction* pFnonMemberArrivedAtTarget = NULL;

	if ( ! pFnonMemberArrivedAtTarget )
		pFnonMemberArrivedAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 42866 ];

	ABioBaseSquad_eventonMemberArrivedAtTarget_Parms onMemberArrivedAtTarget_Parms;
	onMemberArrivedAtTarget_Parms.oMember = oMember;

	this->ProcessEvent ( pFnonMemberArrivedAtTarget, &onMemberArrivedAtTarget_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnMemberCasting
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioBaseSquad::eventOnMemberCasting ( class APawn* oMember, class APawn* oTarget, struct FName nmPower )
{
	static UFunction* pFnOnMemberCasting = NULL;

	if ( ! pFnOnMemberCasting )
		pFnOnMemberCasting = (UFunction*) UObject::GObjObjects()->Data[ 42862 ];

	ABioBaseSquad_eventOnMemberCasting_Parms OnMemberCasting_Parms;
	OnMemberCasting_Parms.oMember = oMember;
	OnMemberCasting_Parms.oTarget = oTarget;
	memcpy ( &OnMemberCasting_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnMemberCasting, &OnMemberCasting_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnMemberAttacking
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioBaseSquad::eventOnMemberAttacking ( class APawn* oMember, class APawn* oTarget, struct FName nmWeapon )
{
	static UFunction* pFnOnMemberAttacking = NULL;

	if ( ! pFnOnMemberAttacking )
		pFnOnMemberAttacking = (UFunction*) UObject::GObjObjects()->Data[ 42858 ];

	ABioBaseSquad_eventOnMemberAttacking_Parms OnMemberAttacking_Parms;
	OnMemberAttacking_Parms.oMember = oMember;
	OnMemberAttacking_Parms.oTarget = oTarget;
	memcpy ( &OnMemberAttacking_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnMemberAttacking, &OnMemberAttacking_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnMemberShieldsDown
// [0x00020000] 
// Parameters infos:
// class APawn*                   oWho                           ( CPF_Parm )

void ABioBaseSquad::OnMemberShieldsDown ( class APawn* oWho )
{
	static UFunction* pFnOnMemberShieldsDown = NULL;

	if ( ! pFnOnMemberShieldsDown )
		pFnOnMemberShieldsDown = (UFunction*) UObject::GObjObjects()->Data[ 42856 ];

	ABioBaseSquad_execOnMemberShieldsDown_Parms OnMemberShieldsDown_Parms;
	OnMemberShieldsDown_Parms.oWho = oWho;

	this->ProcessEvent ( pFnOnMemberShieldsDown, &OnMemberShieldsDown_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.HearNoise
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Who                            ( CPF_Parm )
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::eventHearNoise ( class APawn* Who, float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 42850 ];

	ABioBaseSquad_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Who = Who;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnMemberLeftPlayPen
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                oWho                           ( CPF_Parm )
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm )

void ABioBaseSquad::eventOnMemberLeftPlayPen ( class ABioPawn* oWho, class ANavigationPoint* oNavPoint )
{
	static UFunction* pFnOnMemberLeftPlayPen = NULL;

	if ( ! pFnOnMemberLeftPlayPen )
		pFnOnMemberLeftPlayPen = (UFunction*) UObject::GObjObjects()->Data[ 42847 ];

	ABioBaseSquad_eventOnMemberLeftPlayPen_Parms OnMemberLeftPlayPen_Parms;
	OnMemberLeftPlayPen_Parms.oWho = oWho;
	OnMemberLeftPlayPen_Parms.oNavPoint = oNavPoint;

	this->ProcessEvent ( pFnOnMemberLeftPlayPen, &OnMemberLeftPlayPen_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetNewSpawnLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ABioBaseSquad::GetNewSpawnLocation ( )
{
	static UFunction* pFnGetNewSpawnLocation = NULL;

	if ( ! pFnGetNewSpawnLocation )
		pFnGetNewSpawnLocation = (UFunction*) UObject::GObjObjects()->Data[ 42845 ];

	ABioBaseSquad_execGetNewSpawnLocation_Parms GetNewSpawnLocation_Parms;

	this->ProcessEvent ( pFnGetNewSpawnLocation, &GetNewSpawnLocation_Parms, NULL );

	return GetNewSpawnLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.OnDamageDone
// [0x00020000] 
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_Parm )

void ABioBaseSquad::OnDamageDone ( class APawn* oTarget, class AActor* pDamageCausingActor )
{
	static UFunction* pFnOnDamageDone = NULL;

	if ( ! pFnOnDamageDone )
		pFnOnDamageDone = (UFunction*) UObject::GObjObjects()->Data[ 42842 ];

	ABioBaseSquad_execOnDamageDone_Parms OnDamageDone_Parms;
	OnDamageDone_Parms.oTarget = oTarget;
	OnDamageDone_Parms.pDamageCausingActor = pDamageCausingActor;

	this->ProcessEvent ( pFnOnDamageDone, &OnDamageDone_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateAbilityDisabledEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioBaseSquad::eventGenerateAbilityDisabledEvent ( class APawn* oMember, int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnGenerateAbilityDisabledEvent = NULL;

	if ( ! pFnGenerateAbilityDisabledEvent )
		pFnGenerateAbilityDisabledEvent = (UFunction*) UObject::GObjObjects()->Data[ 42835 ];

	ABioBaseSquad_eventGenerateAbilityDisabledEvent_Parms GenerateAbilityDisabledEvent_Parms;
	GenerateAbilityDisabledEvent_Parms.oMember = oMember;
	GenerateAbilityDisabledEvent_Parms.nEnableType = nEnableType;
	memcpy ( &GenerateAbilityDisabledEvent_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnGenerateAbilityDisabledEvent, &GenerateAbilityDisabledEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateAbilityEnabledEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioBaseSquad::eventGenerateAbilityEnabledEvent ( class APawn* oMember, int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnGenerateAbilityEnabledEvent = NULL;

	if ( ! pFnGenerateAbilityEnabledEvent )
		pFnGenerateAbilityEnabledEvent = (UFunction*) UObject::GObjObjects()->Data[ 42828 ];

	ABioBaseSquad_eventGenerateAbilityEnabledEvent_Parms GenerateAbilityEnabledEvent_Parms;
	GenerateAbilityEnabledEvent_Parms.oMember = oMember;
	GenerateAbilityEnabledEvent_Parms.nEnableType = nEnableType;
	memcpy ( &GenerateAbilityEnabledEvent_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnGenerateAbilityEnabledEvent, &GenerateAbilityEnabledEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateCastAtEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioBaseSquad::eventGenerateCastAtEvent ( class APawn* oMember, class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnGenerateCastAtEvent = NULL;

	if ( ! pFnGenerateCastAtEvent )
		pFnGenerateCastAtEvent = (UFunction*) UObject::GObjObjects()->Data[ 42822 ];

	ABioBaseSquad_eventGenerateCastAtEvent_Parms GenerateCastAtEvent_Parms;
	GenerateCastAtEvent_Parms.oMember = oMember;
	GenerateCastAtEvent_Parms.oAttacker = oAttacker;
	memcpy ( &GenerateCastAtEvent_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnGenerateCastAtEvent, &GenerateCastAtEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateAttackedEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioBaseSquad::eventGenerateAttackedEvent ( class APawn* oMember, class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnGenerateAttackedEvent = NULL;

	if ( ! pFnGenerateAttackedEvent )
		pFnGenerateAttackedEvent = (UFunction*) UObject::GObjObjects()->Data[ 42816 ];

	ABioBaseSquad_eventGenerateAttackedEvent_Parms GenerateAttackedEvent_Parms;
	GenerateAttackedEvent_Parms.oMember = oMember;
	GenerateAttackedEvent_Parms.oAttacker = oAttacker;
	memcpy ( &GenerateAttackedEvent_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnGenerateAttackedEvent, &GenerateAttackedEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateDeathEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AController*             oKiller                        ( CPF_Parm )

void ABioBaseSquad::eventGenerateDeathEvent ( class APawn* oMember, class AController* oKiller )
{
	static UFunction* pFnGenerateDeathEvent = NULL;

	if ( ! pFnGenerateDeathEvent )
		pFnGenerateDeathEvent = (UFunction*) UObject::GObjObjects()->Data[ 42812 ];

	ABioBaseSquad_eventGenerateDeathEvent_Parms GenerateDeathEvent_Parms;
	GenerateDeathEvent_Parms.oMember = oMember;
	GenerateDeathEvent_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnGenerateDeathEvent, &GenerateDeathEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateProximityAlarmEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioBaseSquad::eventGenerateProximityAlarmEvent ( class APawn* oMember, class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnGenerateProximityAlarmEvent = NULL;

	if ( ! pFnGenerateProximityAlarmEvent )
		pFnGenerateProximityAlarmEvent = (UFunction*) UObject::GObjObjects()->Data[ 42805 ];

	ABioBaseSquad_eventGenerateProximityAlarmEvent_Parms GenerateProximityAlarmEvent_Parms;
	GenerateProximityAlarmEvent_Parms.oMember = oMember;
	GenerateProximityAlarmEvent_Parms.oTarget = oTarget;
	GenerateProximityAlarmEvent_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnGenerateProximityAlarmEvent, &GenerateProximityAlarmEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateTakeDamageEvent
// [0x00020002] 
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_Parm )
// float                          fPreMitigationDamage           ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ABioBaseSquad::GenerateTakeDamageEvent ( class APawn* oTarget, float fPreMitigationDamage, float Damage, class AController* InstigatedBy, class UClass* DamageType )
{
	static UFunction* pFnGenerateTakeDamageEvent = NULL;

	if ( ! pFnGenerateTakeDamageEvent )
		pFnGenerateTakeDamageEvent = (UFunction*) UObject::GObjObjects()->Data[ 42793 ];

	ABioBaseSquad_execGenerateTakeDamageEvent_Parms GenerateTakeDamageEvent_Parms;
	GenerateTakeDamageEvent_Parms.oTarget = oTarget;
	GenerateTakeDamageEvent_Parms.fPreMitigationDamage = fPreMitigationDamage;
	GenerateTakeDamageEvent_Parms.Damage = Damage;
	GenerateTakeDamageEvent_Parms.InstigatedBy = InstigatedBy;
	GenerateTakeDamageEvent_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnGenerateTakeDamageEvent, &GenerateTakeDamageEvent_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetFaction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioBaseSquad::GetFaction ( )
{
	static UFunction* pFnGetFaction = NULL;

	if ( ! pFnGetFaction )
		pFnGetFaction = (UFunction*) UObject::GObjObjects()->Data[ 42791 ];

	ABioBaseSquad_execGetFaction_Parms GetFaction_Parms;

	pFnGetFaction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFaction, &GetFaction_Parms, NULL );

	pFnGetFaction->FunctionFlags |= 0x400;

	return GetFaction_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetRelationTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nType                          ( CPF_Parm )

unsigned char ABioBaseSquad::GetRelationTo ( unsigned char nType )
{
	static UFunction* pFnGetRelationTo = NULL;

	if ( ! pFnGetRelationTo )
		pFnGetRelationTo = (UFunction*) UObject::GObjObjects()->Data[ 42788 ];

	ABioBaseSquad_execGetRelationTo_Parms GetRelationTo_Parms;
	GetRelationTo_Parms.nType = nType;

	pFnGetRelationTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRelationTo, &GetRelationTo_Parms, NULL );

	pFnGetRelationTo->FunctionFlags |= 0x400;

	return GetRelationTo_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FactionRelationship
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioBaseSquad*           oOtherSquad                    ( CPF_Parm )

unsigned char ABioBaseSquad::FactionRelationship ( class ABioBaseSquad* oOtherSquad )
{
	static UFunction* pFnFactionRelationship = NULL;

	if ( ! pFnFactionRelationship )
		pFnFactionRelationship = (UFunction*) UObject::GObjObjects()->Data[ 42785 ];

	ABioBaseSquad_execFactionRelationship_Parms FactionRelationship_Parms;
	FactionRelationship_Parms.oOtherSquad = oOtherSquad;

	pFnFactionRelationship->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFactionRelationship, &FactionRelationship_Parms, NULL );

	pFnFactionRelationship->FunctionFlags |= 0x400;

	return FactionRelationship_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.MemberActionComplete_None
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                Who                            ( CPF_Parm )
// struct FName                   Action                         ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )

void ABioBaseSquad::eventMemberActionComplete_None ( class ABioPawn* Who, struct FName Action, int nReason )
{
	static UFunction* pFnMemberActionComplete_None = NULL;

	if ( ! pFnMemberActionComplete_None )
		pFnMemberActionComplete_None = (UFunction*) UObject::GObjObjects()->Data[ 42781 ];

	ABioBaseSquad_eventMemberActionComplete_None_Parms MemberActionComplete_None_Parms;
	MemberActionComplete_None_Parms.Who = Who;
	memcpy ( &MemberActionComplete_None_Parms.Action, &Action, 0x8 );
	MemberActionComplete_None_Parms.nReason = nReason;

	this->ProcessEvent ( pFnMemberActionComplete_None, &MemberActionComplete_None_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.SetFollowDistance
// [0x00020002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void ABioBaseSquad::SetFollowDistance ( int Value )
{
	static UFunction* pFnSetFollowDistance = NULL;

	if ( ! pFnSetFollowDistance )
		pFnSetFollowDistance = (UFunction*) UObject::GObjObjects()->Data[ 42779 ];

	ABioBaseSquad_execSetFollowDistance_Parms SetFollowDistance_Parms;
	SetFollowDistance_Parms.Value = Value;

	this->ProcessEvent ( pFnSetFollowDistance, &SetFollowDistance_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetFollowDistance
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetFollowDistance ( )
{
	static UFunction* pFnGetFollowDistance = NULL;

	if ( ! pFnGetFollowDistance )
		pFnGetFollowDistance = (UFunction*) UObject::GObjObjects()->Data[ 42776 ];

	ABioBaseSquad_execGetFollowDistance_Parms GetFollowDistance_Parms;

	this->ProcessEvent ( pFnGetFollowDistance, &GetFollowDistance_Parms, NULL );

	return GetFollowDistance_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.DumpPathandpoints
// [0x00020002] 
// Parameters infos:

void ABioBaseSquad::DumpPathandpoints ( )
{
	static UFunction* pFnDumpPathandpoints = NULL;

	if ( ! pFnDumpPathandpoints )
		pFnDumpPathandpoints = (UFunction*) UObject::GObjObjects()->Data[ 42774 ];

	ABioBaseSquad_execDumpPathandpoints_Parms DumpPathandpoints_Parms;

	this->ProcessEvent ( pFnDumpPathandpoints, &DumpPathandpoints_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.DisplaySquadDebug
// [0x00020000] 
// Parameters infos:

void ABioBaseSquad::DisplaySquadDebug ( )
{
	static UFunction* pFnDisplaySquadDebug = NULL;

	if ( ! pFnDisplaySquadDebug )
		pFnDisplaySquadDebug = (UFunction*) UObject::GObjObjects()->Data[ 42773 ];

	ABioBaseSquad_execDisplaySquadDebug_Parms DisplaySquadDebug_Parms;

	this->ProcessEvent ( pFnDisplaySquadDebug, &DisplaySquadDebug_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.Rotstr
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FRotator                R                              ( CPF_Parm )

struct FString ABioBaseSquad::Rotstr ( struct FRotator R )
{
	static UFunction* pFnRotstr = NULL;

	if ( ! pFnRotstr )
		pFnRotstr = (UFunction*) UObject::GObjObjects()->Data[ 42770 ];

	ABioBaseSquad_execRotstr_Parms Rotstr_Parms;
	memcpy ( &Rotstr_Parms.R, &R, 0xC );

	this->ProcessEvent ( pFnRotstr, &Rotstr_Parms, NULL );

	return Rotstr_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.LocStrSegment
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FSLocation              Num                            ( CPF_Parm )

struct FString ABioBaseSquad::LocStrSegment ( struct FSLocation Num )
{
	static UFunction* pFnLocStrSegment = NULL;

	if ( ! pFnLocStrSegment )
		pFnLocStrSegment = (UFunction*) UObject::GObjObjects()->Data[ 42767 ];

	ABioBaseSquad_execLocStrSegment_Parms LocStrSegment_Parms;
	memcpy ( &LocStrSegment_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnLocStrSegment, &LocStrSegment_Parms, NULL );

	return LocStrSegment_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.LocStr2
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FSLocation              Num                            ( CPF_Parm )

struct FString ABioBaseSquad::LocStr2 ( struct FSLocation Num )
{
	static UFunction* pFnLocStr2 = NULL;

	if ( ! pFnLocStr2 )
		pFnLocStr2 = (UFunction*) UObject::GObjObjects()->Data[ 42764 ];

	ABioBaseSquad_execLocStr2_Parms LocStr2_Parms;
	memcpy ( &LocStr2_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnLocStr2, &LocStr2_Parms, NULL );

	return LocStr2_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.LocStr
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FSLocation              Num                            ( CPF_Parm )

struct FString ABioBaseSquad::LocStr ( struct FSLocation Num )
{
	static UFunction* pFnLocStr = NULL;

	if ( ! pFnLocStr )
		pFnLocStr = (UFunction*) UObject::GObjObjects()->Data[ 42761 ];

	ABioBaseSquad_execLocStr_Parms LocStr_Parms;
	memcpy ( &LocStr_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnLocStr, &LocStr_Parms, NULL );

	return LocStr_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.NodeLoc
// [0x00020002] 
// Parameters infos:
// struct FSLocation              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              Num                            ( CPF_Parm )

struct FSLocation ABioBaseSquad::NodeLoc ( struct FSLocation Num )
{
	static UFunction* pFnNodeLoc = NULL;

	if ( ! pFnNodeLoc )
		pFnNodeLoc = (UFunction*) UObject::GObjObjects()->Data[ 42757 ];

	ABioBaseSquad_execNodeLoc_Parms NodeLoc_Parms;
	memcpy ( &NodeLoc_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnNodeLoc, &NodeLoc_Parms, NULL );

	return NodeLoc_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.DecLoc
// [0x00020002] 
// Parameters infos:
// struct FSLocation              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              Num                            ( CPF_Parm )

struct FSLocation ABioBaseSquad::DecLoc ( struct FSLocation Num )
{
	static UFunction* pFnDecLoc = NULL;

	if ( ! pFnDecLoc )
		pFnDecLoc = (UFunction*) UObject::GObjObjects()->Data[ 42753 ];

	ABioBaseSquad_execDecLoc_Parms DecLoc_Parms;
	memcpy ( &DecLoc_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnDecLoc, &DecLoc_Parms, NULL );

	return DecLoc_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IncLoc
// [0x00020002] 
// Parameters infos:
// struct FSLocation              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              Num                            ( CPF_Parm )

struct FSLocation ABioBaseSquad::IncLoc ( struct FSLocation Num )
{
	static UFunction* pFnIncLoc = NULL;

	if ( ! pFnIncLoc )
		pFnIncLoc = (UFunction*) UObject::GObjObjects()->Data[ 42749 ];

	ABioBaseSquad_execIncLoc_Parms IncLoc_Parms;
	memcpy ( &IncLoc_Parms.Num, &Num, 0x10 );

	this->ProcessEvent ( pFnIncLoc, &IncLoc_Parms, NULL );

	return IncLoc_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.DetectLedgeToOffset
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SquadId                        ( CPF_Parm )
// struct FVector                 EscapeLoc                      ( CPF_Parm )
// struct FVector                 OffsetLoc                      ( CPF_Parm )

bool ABioBaseSquad::DetectLedgeToOffset ( int SquadId, struct FVector EscapeLoc, struct FVector OffsetLoc )
{
	static UFunction* pFnDetectLedgeToOffset = NULL;

	if ( ! pFnDetectLedgeToOffset )
		pFnDetectLedgeToOffset = (UFunction*) UObject::GObjObjects()->Data[ 42732 ];

	ABioBaseSquad_execDetectLedgeToOffset_Parms DetectLedgeToOffset_Parms;
	DetectLedgeToOffset_Parms.SquadId = SquadId;
	memcpy ( &DetectLedgeToOffset_Parms.EscapeLoc, &EscapeLoc, 0xC );
	memcpy ( &DetectLedgeToOffset_Parms.OffsetLoc, &OffsetLoc, 0xC );

	this->ProcessEvent ( pFnDetectLedgeToOffset, &DetectLedgeToOffset_Parms, NULL );

	return DetectLedgeToOffset_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNodePoint
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              nLoc                           ( CPF_Parm )

struct FVector ABioBaseSquad::GetNodePoint ( struct FSLocation nLoc )
{
	static UFunction* pFnGetNodePoint = NULL;

	if ( ! pFnGetNodePoint )
		pFnGetNodePoint = (UFunction*) UObject::GObjObjects()->Data[ 42729 ];

	ABioBaseSquad_execGetNodePoint_Parms GetNodePoint_Parms;
	memcpy ( &GetNodePoint_Parms.nLoc, &nLoc, 0x10 );

	this->ProcessEvent ( pFnGetNodePoint, &GetNodePoint_Parms, NULL );

	return GetNodePoint_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNodeRotation
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              nLoc                           ( CPF_Parm )

struct FRotator ABioBaseSquad::GetNodeRotation ( struct FSLocation nLoc )
{
	static UFunction* pFnGetNodeRotation = NULL;

	if ( ! pFnGetNodeRotation )
		pFnGetNodeRotation = (UFunction*) UObject::GObjObjects()->Data[ 42726 ];

	ABioBaseSquad_execGetNodeRotation_Parms GetNodeRotation_Parms;
	memcpy ( &GetNodeRotation_Parms.nLoc, &nLoc, 0x10 );

	this->ProcessEvent ( pFnGetNodeRotation, &GetNodeRotation_Parms, NULL );

	return GetNodeRotation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.WithinRangeOfFollowMarker
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Dist                           ( CPF_Parm )

bool ABioBaseSquad::WithinRangeOfFollowMarker ( float Dist )
{
	static UFunction* pFnWithinRangeOfFollowMarker = NULL;

	if ( ! pFnWithinRangeOfFollowMarker )
		pFnWithinRangeOfFollowMarker = (UFunction*) UObject::GObjObjects()->Data[ 42723 ];

	ABioBaseSquad_execWithinRangeOfFollowMarker_Parms WithinRangeOfFollowMarker_Parms;
	WithinRangeOfFollowMarker_Parms.Dist = Dist;

	this->ProcessEvent ( pFnWithinRangeOfFollowMarker, &WithinRangeOfFollowMarker_Parms, NULL );

	return WithinRangeOfFollowMarker_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.MembersAtFollowMark
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SquadId                        ( CPF_Parm )

bool ABioBaseSquad::MembersAtFollowMark ( int SquadId )
{
	static UFunction* pFnMembersAtFollowMark = NULL;

	if ( ! pFnMembersAtFollowMark )
		pFnMembersAtFollowMark = (UFunction*) UObject::GObjObjects()->Data[ 42642 ];

	ABioBaseSquad_execMembersAtFollowMark_Parms MembersAtFollowMark_Parms;
	MembersAtFollowMark_Parms.SquadId = SquadId;

	pFnMembersAtFollowMark->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMembersAtFollowMark, &MembersAtFollowMark_Parms, NULL );

	pFnMembersAtFollowMark->FunctionFlags |= 0x400;

	return MembersAtFollowMark_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.AllMembersAtFollowMark
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::AllMembersAtFollowMark ( )
{
	static UFunction* pFnAllMembersAtFollowMark = NULL;

	if ( ! pFnAllMembersAtFollowMark )
		pFnAllMembersAtFollowMark = (UFunction*) UObject::GObjObjects()->Data[ 42719 ];

	ABioBaseSquad_execAllMembersAtFollowMark_Parms AllMembersAtFollowMark_Parms;

	pFnAllMembersAtFollowMark->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllMembersAtFollowMark, &AllMembersAtFollowMark_Parms, NULL );

	pFnAllMembersAtFollowMark->FunctionFlags |= 0x400;

	return AllMembersAtFollowMark_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetPathLength
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetPathLength ( )
{
	static UFunction* pFnGetPathLength = NULL;

	if ( ! pFnGetPathLength )
		pFnGetPathLength = (UFunction*) UObject::GObjObjects()->Data[ 42717 ];

	ABioBaseSquad_execGetPathLength_Parms GetPathLength_Parms;

	this->ProcessEvent ( pFnGetPathLength, &GetPathLength_Parms, NULL );

	return GetPathLength_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.OffsetPointOnPath
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nFormationPosition             ( CPF_Parm )
// struct FSLocation              nLoc                           ( CPF_Parm )

struct FVector ABioBaseSquad::OffsetPointOnPath ( int nFormationPosition, struct FSLocation nLoc )
{
	static UFunction* pFnOffsetPointOnPath = NULL;

	if ( ! pFnOffsetPointOnPath )
		pFnOffsetPointOnPath = (UFunction*) UObject::GObjObjects()->Data[ 42710 ];

	ABioBaseSquad_execOffsetPointOnPath_Parms OffsetPointOnPath_Parms;
	OffsetPointOnPath_Parms.nFormationPosition = nFormationPosition;
	memcpy ( &OffsetPointOnPath_Parms.nLoc, &nLoc, 0x10 );

	this->ProcessEvent ( pFnOffsetPointOnPath, &OffsetPointOnPath_Parms, NULL );

	return OffsetPointOnPath_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindLocationBackFromLocation
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fUnrealUnits                   ( CPF_Parm )
// struct FSLocation              StartLoc                       ( CPF_Parm )
// int                            nPartyMember                   ( CPF_OptionalParm | CPF_Parm )
// struct FSLocation              TrailLoc                       ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::FindLocationBackFromLocation ( float fUnrealUnits, struct FSLocation StartLoc, int nPartyMember, struct FSLocation* TrailLoc )
{
	static UFunction* pFnFindLocationBackFromLocation = NULL;

	if ( ! pFnFindLocationBackFromLocation )
		pFnFindLocationBackFromLocation = (UFunction*) UObject::GObjObjects()->Data[ 42698 ];

	ABioBaseSquad_execFindLocationBackFromLocation_Parms FindLocationBackFromLocation_Parms;
	FindLocationBackFromLocation_Parms.fUnrealUnits = fUnrealUnits;
	memcpy ( &FindLocationBackFromLocation_Parms.StartLoc, &StartLoc, 0x10 );
	FindLocationBackFromLocation_Parms.nPartyMember = nPartyMember;

	this->ProcessEvent ( pFnFindLocationBackFromLocation, &FindLocationBackFromLocation_Parms, NULL );

	if ( TrailLoc )
		memcpy ( TrailLoc, &FindLocationBackFromLocation_Parms.TrailLoc, 0x10 );

	return FindLocationBackFromLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetLocationFromHead
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fUnrealUnits                   ( CPF_Parm )
// int                            nPartyMember                   ( CPF_OptionalParm | CPF_Parm )
// struct FSLocation              TrailLoc                       ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::GetLocationFromHead ( float fUnrealUnits, int nPartyMember, struct FSLocation* TrailLoc )
{
	static UFunction* pFnGetLocationFromHead = NULL;

	if ( ! pFnGetLocationFromHead )
		pFnGetLocationFromHead = (UFunction*) UObject::GObjObjects()->Data[ 42692 ];

	ABioBaseSquad_execGetLocationFromHead_Parms GetLocationFromHead_Parms;
	GetLocationFromHead_Parms.fUnrealUnits = fUnrealUnits;
	GetLocationFromHead_Parms.nPartyMember = nPartyMember;

	this->ProcessEvent ( pFnGetLocationFromHead, &GetLocationFromHead_Parms, NULL );

	if ( TrailLoc )
		memcpy ( TrailLoc, &GetLocationFromHead_Parms.TrailLoc, 0x10 );

	return GetLocationFromHead_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetLocationFromHeadForMember
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nPartyMember                   ( CPF_Parm )
// struct FSLocation              TrailLoc                       ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::GetLocationFromHeadForMember ( int nPartyMember, struct FSLocation* TrailLoc )
{
	static UFunction* pFnGetLocationFromHeadForMember = NULL;

	if ( ! pFnGetLocationFromHeadForMember )
		pFnGetLocationFromHeadForMember = (UFunction*) UObject::GObjObjects()->Data[ 42688 ];

	ABioBaseSquad_execGetLocationFromHeadForMember_Parms GetLocationFromHeadForMember_Parms;
	GetLocationFromHeadForMember_Parms.nPartyMember = nPartyMember;

	this->ProcessEvent ( pFnGetLocationFromHeadForMember, &GetLocationFromHeadForMember_Parms, NULL );

	if ( TrailLoc )
		memcpy ( TrailLoc, &GetLocationFromHeadForMember_Parms.TrailLoc, 0x10 );

	return GetLocationFromHeadForMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ComputeEscapeLocation
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Idx                            ( CPF_Parm )
// struct FSLocation              NewLoc                         ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::ComputeEscapeLocation ( int Idx, struct FSLocation* NewLoc )
{
	static UFunction* pFnComputeEscapeLocation = NULL;

	if ( ! pFnComputeEscapeLocation )
		pFnComputeEscapeLocation = (UFunction*) UObject::GObjObjects()->Data[ 42680 ];

	ABioBaseSquad_execComputeEscapeLocation_Parms ComputeEscapeLocation_Parms;
	ComputeEscapeLocation_Parms.Idx = Idx;

	this->ProcessEvent ( pFnComputeEscapeLocation, &ComputeEscapeLocation_Parms, NULL );

	if ( NewLoc )
		memcpy ( NewLoc, &ComputeEscapeLocation_Parms.NewLoc, 0x10 );

	return ComputeEscapeLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetMemberRotation
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                P                              ( CPF_Parm )

struct FRotator ABioBaseSquad::GetMemberRotation ( class ABioPawn* P )
{
	static UFunction* pFnGetMemberRotation = NULL;

	if ( ! pFnGetMemberRotation )
		pFnGetMemberRotation = (UFunction*) UObject::GObjObjects()->Data[ 42673 ];

	ABioBaseSquad_execGetMemberRotation_Parms GetMemberRotation_Parms;
	GetMemberRotation_Parms.P = P;

	this->ProcessEvent ( pFnGetMemberRotation, &GetMemberRotation_Parms, NULL );

	return GetMemberRotation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ResetFollowing
// [0x00020000] 
// Parameters infos:
// class ABioPawn*                P                              ( CPF_Parm )

void ABioBaseSquad::ResetFollowing ( class ABioPawn* P )
{
	static UFunction* pFnResetFollowing = NULL;

	if ( ! pFnResetFollowing )
		pFnResetFollowing = (UFunction*) UObject::GObjObjects()->Data[ 42671 ];

	ABioBaseSquad_execResetFollowing_Parms ResetFollowing_Parms;
	ResetFollowing_Parms.P = P;

	this->ProcessEvent ( pFnResetFollowing, &ResetFollowing_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.TestPathSegments
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FSLocation              StartLoc                       ( CPF_Parm )
// struct FSLocation              EndLoc                         ( CPF_Parm )
// struct FSLocation              NewEndLoc                      ( CPF_Parm )

bool ABioBaseSquad::TestPathSegments ( struct FSLocation StartLoc, struct FSLocation EndLoc, struct FSLocation NewEndLoc )
{
	static UFunction* pFnTestPathSegments = NULL;

	if ( ! pFnTestPathSegments )
		pFnTestPathSegments = (UFunction*) UObject::GObjObjects()->Data[ 42662 ];

	ABioBaseSquad_execTestPathSegments_Parms TestPathSegments_Parms;
	memcpy ( &TestPathSegments_Parms.StartLoc, &StartLoc, 0x10 );
	memcpy ( &TestPathSegments_Parms.EndLoc, &EndLoc, 0x10 );
	memcpy ( &TestPathSegments_Parms.NewEndLoc, &NewEndLoc, 0x10 );

	this->ProcessEvent ( pFnTestPathSegments, &TestPathSegments_Parms, NULL );

	return TestPathSegments_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetEscapeLocation
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FSLocation              Loc                            ( CPF_Parm )

void ABioBaseSquad::SetEscapeLocation ( int Index, struct FSLocation Loc )
{
	static UFunction* pFnSetEscapeLocation = NULL;

	if ( ! pFnSetEscapeLocation )
		pFnSetEscapeLocation = (UFunction*) UObject::GObjObjects()->Data[ 42659 ];

	ABioBaseSquad_execSetEscapeLocation_Parms SetEscapeLocation_Parms;
	SetEscapeLocation_Parms.Index = Index;
	memcpy ( &SetEscapeLocation_Parms.Loc, &Loc, 0x10 );

	this->ProcessEvent ( pFnSetEscapeLocation, &SetEscapeLocation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetEscapeLocation
// [0x00020002] 
// Parameters infos:
// struct FSLocation              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

struct FSLocation ABioBaseSquad::GetEscapeLocation ( int Index )
{
	static UFunction* pFnGetEscapeLocation = NULL;

	if ( ! pFnGetEscapeLocation )
		pFnGetEscapeLocation = (UFunction*) UObject::GObjObjects()->Data[ 42656 ];

	ABioBaseSquad_execGetEscapeLocation_Parms GetEscapeLocation_Parms;
	GetEscapeLocation_Parms.Index = Index;

	this->ProcessEvent ( pFnGetEscapeLocation, &GetEscapeLocation_Parms, NULL );

	return GetEscapeLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.EnterRestFormation
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventEnterRestFormation ( )
{
	static UFunction* pFnEnterRestFormation = NULL;

	if ( ! pFnEnterRestFormation )
		pFnEnterRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 42655 ];

	ABioBaseSquad_eventEnterRestFormation_Parms EnterRestFormation_Parms;

	this->ProcessEvent ( pFnEnterRestFormation, &EnterRestFormation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.EnterFollowFormation
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventEnterFollowFormation ( )
{
	static UFunction* pFnEnterFollowFormation = NULL;

	if ( ! pFnEnterFollowFormation )
		pFnEnterFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 42654 ];

	ABioBaseSquad_eventEnterFollowFormation_Parms EnterFollowFormation_Parms;

	this->ProcessEvent ( pFnEnterFollowFormation, &EnterFollowFormation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.ProcessLeaderStopped
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioBaseSquad::ProcessLeaderStopped ( float DeltaTime )
{
	static UFunction* pFnProcessLeaderStopped = NULL;

	if ( ! pFnProcessLeaderStopped )
		pFnProcessLeaderStopped = (UFunction*) UObject::GObjObjects()->Data[ 42645 ];

	ABioBaseSquad_execProcessLeaderStopped_Parms ProcessLeaderStopped_Parms;
	ProcessLeaderStopped_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessLeaderStopped, &ProcessLeaderStopped_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.InFollowFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventInFollowFormation ( )
{
	static UFunction* pFnInFollowFormation = NULL;

	if ( ! pFnInFollowFormation )
		pFnInFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 42643 ];

	ABioBaseSquad_eventInFollowFormation_Parms InFollowFormation_Parms;

	this->ProcessEvent ( pFnInFollowFormation, &InFollowFormation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.InRestFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventInRestFormation ( )
{
	static UFunction* pFnInRestFormation = NULL;

	if ( ! pFnInRestFormation )
		pFnInRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 42639 ];

	ABioBaseSquad_eventInRestFormation_Parms InRestFormation_Parms;

	this->ProcessEvent ( pFnInRestFormation, &InRestFormation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.ProcessPoint_UpdatePartyMemberData
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioBaseSquad::ProcessPoint_UpdatePartyMemberData ( float DeltaTime )
{
	static UFunction* pFnProcessPoint_UpdatePartyMemberData = NULL;

	if ( ! pFnProcessPoint_UpdatePartyMemberData )
		pFnProcessPoint_UpdatePartyMemberData = (UFunction*) UObject::GObjObjects()->Data[ 42637 ];

	ABioBaseSquad_execProcessPoint_UpdatePartyMemberData_Parms ProcessPoint_UpdatePartyMemberData_Parms;
	ProcessPoint_UpdatePartyMemberData_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessPoint_UpdatePartyMemberData, &ProcessPoint_UpdatePartyMemberData_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.UpDateFollowMarker
// [0x00020000] 
// Parameters infos:

void ABioBaseSquad::UpDateFollowMarker ( )
{
	static UFunction* pFnUpDateFollowMarker = NULL;

	if ( ! pFnUpDateFollowMarker )
		pFnUpDateFollowMarker = (UFunction*) UObject::GObjObjects()->Data[ 42636 ];

	ABioBaseSquad_execUpDateFollowMarker_Parms UpDateFollowMarker_Parms;

	this->ProcessEvent ( pFnUpDateFollowMarker, &UpDateFollowMarker_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.ProcessLeadersPosition_State
// [0x00024000] 
// Parameters infos:
// unsigned char                  HowPointWasReached             ( CPF_Parm )
// struct FVector                 Location_                      ( CPF_Parm )
// struct FRotator                Orientation                    ( CPF_Parm )
// struct FRotator                DirectionOfTravel              ( CPF_Parm )
// struct FName                   ActionOn                       ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::ProcessLeadersPosition_State ( unsigned char HowPointWasReached, struct FVector Location_, struct FRotator Orientation, struct FRotator DirectionOfTravel, struct FName ActionOn )
{
	static UFunction* pFnProcessLeadersPosition_State = NULL;

	if ( ! pFnProcessLeadersPosition_State )
		pFnProcessLeadersPosition_State = (UFunction*) UObject::GObjObjects()->Data[ 42630 ];

	ABioBaseSquad_execProcessLeadersPosition_State_Parms ProcessLeadersPosition_State_Parms;
	ProcessLeadersPosition_State_Parms.HowPointWasReached = HowPointWasReached;
	memcpy ( &ProcessLeadersPosition_State_Parms.Location_, &Location_, 0xC );
	memcpy ( &ProcessLeadersPosition_State_Parms.Orientation, &Orientation, 0xC );
	memcpy ( &ProcessLeadersPosition_State_Parms.DirectionOfTravel, &DirectionOfTravel, 0xC );
	memcpy ( &ProcessLeadersPosition_State_Parms.ActionOn, &ActionOn, 0x8 );

	this->ProcessEvent ( pFnProcessLeadersPosition_State, &ProcessLeadersPosition_State_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.TestAndInvertFormation
// [0x00020002] 
// Parameters infos:
// int                            Node1                          ( CPF_Parm )
// int                            Node2                          ( CPF_Parm )

void ABioBaseSquad::TestAndInvertFormation ( int Node1, int Node2 )
{
	static UFunction* pFnTestAndInvertFormation = NULL;

	if ( ! pFnTestAndInvertFormation )
		pFnTestAndInvertFormation = (UFunction*) UObject::GObjObjects()->Data[ 42621 ];

	ABioBaseSquad_execTestAndInvertFormation_Parms TestAndInvertFormation_Parms;
	TestAndInvertFormation_Parms.Node1 = Node1;
	TestAndInvertFormation_Parms.Node2 = Node2;

	this->ProcessEvent ( pFnTestAndInvertFormation, &TestAndInvertFormation_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.AddPathNode
// [0x00024002] 
// Parameters infos:
// unsigned char                  HowPointWasReached             ( CPF_Parm )
// struct FVector                 Location_                      ( CPF_Parm )
// struct FRotator                Orientation                    ( CPF_Parm )
// struct FRotator                DirectionOfTravel              ( CPF_Parm )
// struct FName                   ActionOn                       ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::AddPathNode ( unsigned char HowPointWasReached, struct FVector Location_, struct FRotator Orientation, struct FRotator DirectionOfTravel, struct FName ActionOn )
{
	static UFunction* pFnAddPathNode = NULL;

	if ( ! pFnAddPathNode )
		pFnAddPathNode = (UFunction*) UObject::GObjObjects()->Data[ 42613 ];

	ABioBaseSquad_execAddPathNode_Parms AddPathNode_Parms;
	AddPathNode_Parms.HowPointWasReached = HowPointWasReached;
	memcpy ( &AddPathNode_Parms.Location_, &Location_, 0xC );
	memcpy ( &AddPathNode_Parms.Orientation, &Orientation, 0xC );
	memcpy ( &AddPathNode_Parms.DirectionOfTravel, &DirectionOfTravel, 0xC );
	memcpy ( &AddPathNode_Parms.ActionOn, &ActionOn, 0x8 );

	this->ProcessEvent ( pFnAddPathNode, &AddPathNode_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.Tick_Follow
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioBaseSquad::Tick_Follow ( float DeltaTime )
{
	static UFunction* pFnTick_Follow = NULL;

	if ( ! pFnTick_Follow )
		pFnTick_Follow = (UFunction*) UObject::GObjObjects()->Data[ 42611 ];

	ABioBaseSquad_execTick_Follow_Parms Tick_Follow_Parms;
	Tick_Follow_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick_Follow, &Tick_Follow_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.Leader_Changed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   OldLeader                      ( CPF_Parm )
// class APawn*                   NewLeader                      ( CPF_Parm )

void ABioBaseSquad::eventLeader_Changed ( class APawn* OldLeader, class APawn* NewLeader )
{
	static UFunction* pFnLeader_Changed = NULL;

	if ( ! pFnLeader_Changed )
		pFnLeader_Changed = (UFunction*) UObject::GObjObjects()->Data[ 42605 ];

	ABioBaseSquad_eventLeader_Changed_Parms Leader_Changed_Parms;
	Leader_Changed_Parms.OldLeader = OldLeader;
	Leader_Changed_Parms.NewLeader = NewLeader;

	this->ProcessEvent ( pFnLeader_Changed, &Leader_Changed_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.ClearPathHistory
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventClearPathHistory ( )
{
	static UFunction* pFnClearPathHistory = NULL;

	if ( ! pFnClearPathHistory )
		pFnClearPathHistory = (UFunction*) UObject::GObjObjects()->Data[ 42603 ];

	ABioBaseSquad_eventClearPathHistory_Parms ClearPathHistory_Parms;

	this->ProcessEvent ( pFnClearPathHistory, &ClearPathHistory_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.RotateSquad
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eRotationDirection             ( CPF_Parm )

class APawn* ABioBaseSquad::eventRotateSquad ( unsigned char eRotationDirection )
{
	static UFunction* pFnRotateSquad = NULL;

	if ( ! pFnRotateSquad )
		pFnRotateSquad = (UFunction*) UObject::GObjObjects()->Data[ 42595 ];

	ABioBaseSquad_eventRotateSquad_Parms RotateSquad_Parms;
	RotateSquad_Parms.eRotationDirection = eRotationDirection;

	this->ProcessEvent ( pFnRotateSquad, &RotateSquad_Parms, NULL );

	return RotateSquad_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNextMemberInDirection
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CurrentIndex                   ( CPF_Parm )
// unsigned char                  eRotationDirection             ( CPF_Parm )

class APawn* ABioBaseSquad::GetNextMemberInDirection ( int CurrentIndex, unsigned char eRotationDirection )
{
	static UFunction* pFnGetNextMemberInDirection = NULL;

	if ( ! pFnGetNextMemberInDirection )
		pFnGetNextMemberInDirection = (UFunction*) UObject::GObjObjects()->Data[ 42587 ];

	ABioBaseSquad_execGetNextMemberInDirection_Parms GetNextMemberInDirection_Parms;
	GetNextMemberInDirection_Parms.CurrentIndex = CurrentIndex;
	GetNextMemberInDirection_Parms.eRotationDirection = eRotationDirection;

	this->ProcessEvent ( pFnGetNextMemberInDirection, &GetNextMemberInDirection_Parms, NULL );

	return GetNextMemberInDirection_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetPrevMember
// [0x00020002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CurrentIndex                   ( CPF_Parm )

class APawn* ABioBaseSquad::GetPrevMember ( int CurrentIndex )
{
	static UFunction* pFnGetPrevMember = NULL;

	if ( ! pFnGetPrevMember )
		pFnGetPrevMember = (UFunction*) UObject::GObjObjects()->Data[ 42588 ];

	ABioBaseSquad_execGetPrevMember_Parms GetPrevMember_Parms;
	GetPrevMember_Parms.CurrentIndex = CurrentIndex;

	this->ProcessEvent ( pFnGetPrevMember, &GetPrevMember_Parms, NULL );

	return GetPrevMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetNextMember
// [0x00020002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CurrentIndex                   ( CPF_Parm )

class APawn* ABioBaseSquad::GetNextMember ( int CurrentIndex )
{
	static UFunction* pFnGetNextMember = NULL;

	if ( ! pFnGetNextMember )
		pFnGetNextMember = (UFunction*) UObject::GObjObjects()->Data[ 42584 ];

	ABioBaseSquad_execGetNextMember_Parms GetNextMember_Parms;
	GetNextMember_Parms.CurrentIndex = CurrentIndex;

	this->ProcessEvent ( pFnGetNextMember, &GetNextMember_Parms, NULL );

	return GetNextMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.MemberRemoved
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm )

void ABioBaseSquad::eventMemberRemoved ( class APawn* oPawn )
{
	static UFunction* pFnMemberRemoved = NULL;

	if ( ! pFnMemberRemoved )
		pFnMemberRemoved = (UFunction*) UObject::GObjObjects()->Data[ 42582 ];

	ABioBaseSquad_eventMemberRemoved_Parms MemberRemoved_Parms;
	MemberRemoved_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnMemberRemoved, &MemberRemoved_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.MemberAdded
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void ABioBaseSquad::eventMemberAdded ( int nIndex )
{
	static UFunction* pFnMemberAdded = NULL;

	if ( ! pFnMemberAdded )
		pFnMemberAdded = (UFunction*) UObject::GObjObjects()->Data[ 42580 ];

	ABioBaseSquad_eventMemberAdded_Parms MemberAdded_Parms;
	MemberAdded_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnMemberAdded, &MemberAdded_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.AddMemberInternal
// [0x00080002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

int ABioBaseSquad::AddMemberInternal ( class APawn* Pawn )
{
	static UFunction* pFnAddMemberInternal = NULL;

	if ( ! pFnAddMemberInternal )
		pFnAddMemberInternal = (UFunction*) UObject::GObjObjects()->Data[ 42574 ];

	ABioBaseSquad_execAddMemberInternal_Parms AddMemberInternal_Parms;
	AddMemberInternal_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnAddMemberInternal, &AddMemberInternal_Parms, NULL );

	return AddMemberInternal_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.AddMember
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

int ABioBaseSquad::AddMember ( class APawn* Pawn )
{
	static UFunction* pFnAddMember = NULL;

	if ( ! pFnAddMember )
		pFnAddMember = (UFunction*) UObject::GObjObjects()->Data[ 42570 ];

	ABioBaseSquad_execAddMember_Parms AddMember_Parms;
	AddMember_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnAddMember, &AddMember_Parms, NULL );

	return AddMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetInRestFormation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::GetInRestFormation ( )
{
	static UFunction* pFnGetInRestFormation = NULL;

	if ( ! pFnGetInRestFormation )
		pFnGetInRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 42568 ];

	ABioBaseSquad_execGetInRestFormation_Parms GetInRestFormation_Parms;

	this->ProcessEvent ( pFnGetInRestFormation, &GetInRestFormation_Parms, NULL );

	return GetInRestFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetRestOrientationType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioBaseSquad::eventGetRestOrientationType ( )
{
	static UFunction* pFnGetRestOrientationType = NULL;

	if ( ! pFnGetRestOrientationType )
		pFnGetRestOrientationType = (UFunction*) UObject::GObjObjects()->Data[ 42565 ];

	ABioBaseSquad_eventGetRestOrientationType_Parms GetRestOrientationType_Parms;

	this->ProcessEvent ( pFnGetRestOrientationType, &GetRestOrientationType_Parms, NULL );

	return GetRestOrientationType_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetFollowOrientationType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioBaseSquad::eventGetFollowOrientationType ( )
{
	static UFunction* pFnGetFollowOrientationType = NULL;

	if ( ! pFnGetFollowOrientationType )
		pFnGetFollowOrientationType = (UFunction*) UObject::GObjObjects()->Data[ 42562 ];

	ABioBaseSquad_eventGetFollowOrientationType_Parms GetFollowOrientationType_Parms;

	this->ProcessEvent ( pFnGetFollowOrientationType, &GetFollowOrientationType_Parms, NULL );

	return GetFollowOrientationType_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetOrientationType
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioBaseSquad::GetOrientationType ( )
{
	static UFunction* pFnGetOrientationType = NULL;

	if ( ! pFnGetOrientationType )
		pFnGetOrientationType = (UFunction*) UObject::GObjObjects()->Data[ 42560 ];

	ABioBaseSquad_execGetOrientationType_Parms GetOrientationType_Parms;

	this->ProcessEvent ( pFnGetOrientationType, &GetOrientationType_Parms, NULL );

	return GetOrientationType_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetRestFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioBaseSquad::eventGetRestFormation ( )
{
	static UFunction* pFnGetRestFormation = NULL;

	if ( ! pFnGetRestFormation )
		pFnGetRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 42557 ];

	ABioBaseSquad_eventGetRestFormation_Parms GetRestFormation_Parms;

	this->ProcessEvent ( pFnGetRestFormation, &GetRestFormation_Parms, NULL );

	return GetRestFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetFollowFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioBaseSquad::eventGetFollowFormation ( )
{
	static UFunction* pFnGetFollowFormation = NULL;

	if ( ! pFnGetFollowFormation )
		pFnGetFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 42554 ];

	ABioBaseSquad_eventGetFollowFormation_Parms GetFollowFormation_Parms;

	this->ProcessEvent ( pFnGetFollowFormation, &GetFollowFormation_Parms, NULL );

	return GetFollowFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetCanUseOffsetPositions
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::eventGetCanUseOffsetPositions ( )
{
	static UFunction* pFnGetCanUseOffsetPositions = NULL;

	if ( ! pFnGetCanUseOffsetPositions )
		pFnGetCanUseOffsetPositions = (UFunction*) UObject::GObjObjects()->Data[ 42551 ];

	ABioBaseSquad_eventGetCanUseOffsetPositions_Parms GetCanUseOffsetPositions_Parms;

	this->ProcessEvent ( pFnGetCanUseOffsetPositions, &GetCanUseOffsetPositions_Parms, NULL );

	return GetCanUseOffsetPositions_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioBaseSquad::eventGetFormation ( )
{
	static UFunction* pFnGetFormation = NULL;

	if ( ! pFnGetFormation )
		pFnGetFormation = (UFunction*) UObject::GObjObjects()->Data[ 42548 ];

	ABioBaseSquad_eventGetFormation_Parms GetFormation_Parms;

	this->ProcessEvent ( pFnGetFormation, &GetFormation_Parms, NULL );

	return GetFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.BioBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventBioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 42547 ];

	ABioBaseSquad_eventBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.Initalize
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioBaseSquad::eventInitalize ( )
{
	static UFunction* pFnInitalize = NULL;

	if ( ! pFnInitalize )
		pFnInitalize = (UFunction*) UObject::GObjObjects()->Data[ 42545 ];

	ABioBaseSquad_eventInitalize_Parms Initalize_Parms;

	this->ProcessEvent ( pFnInitalize, &Initalize_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnFactionChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UClass*                  oOldFaction                    ( CPF_Parm )
// class UClass*                  oNewFaction                    ( CPF_Parm )

void ABioBaseSquad::eventOnFactionChanged ( class UClass* oOldFaction, class UClass* oNewFaction )
{
	static UFunction* pFnOnFactionChanged = NULL;

	if ( ! pFnOnFactionChanged )
		pFnOnFactionChanged = (UFunction*) UObject::GObjObjects()->Data[ 42542 ];

	ABioBaseSquad_eventOnFactionChanged_Parms OnFactionChanged_Parms;
	OnFactionChanged_Parms.oOldFaction = oOldFaction;
	OnFactionChanged_Parms.oNewFaction = oNewFaction;

	this->ProcessEvent ( pFnOnFactionChanged, &OnFactionChanged_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetNumberOfLiveMembers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetNumberOfLiveMembers ( )
{
	static UFunction* pFnGetNumberOfLiveMembers = NULL;

	if ( ! pFnGetNumberOfLiveMembers )
		pFnGetNumberOfLiveMembers = (UFunction*) UObject::GObjObjects()->Data[ 42540 ];

	ABioBaseSquad_execGetNumberOfLiveMembers_Parms GetNumberOfLiveMembers_Parms;

	pFnGetNumberOfLiveMembers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumberOfLiveMembers, &GetNumberOfLiveMembers_Parms, NULL );

	pFnGetNumberOfLiveMembers->FunctionFlags |= 0x400;

	return GetNumberOfLiveMembers_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetFaction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UClass*                  oNewFaction                    ( CPF_Parm )

void ABioBaseSquad::SetFaction ( class UClass* oNewFaction )
{
	static UFunction* pFnSetFaction = NULL;

	if ( ! pFnSetFaction )
		pFnSetFaction = (UFunction*) UObject::GObjObjects()->Data[ 42538 ];

	ABioBaseSquad_execSetFaction_Parms SetFaction_Parms;
	SetFaction_Parms.oNewFaction = oNewFaction;

	pFnSetFaction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFaction, &SetFaction_Parms, NULL );

	pFnSetFaction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.DebugDisplay
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioBaseSquad::DebugDisplay ( )
{
	static UFunction* pFnDebugDisplay = NULL;

	if ( ! pFnDebugDisplay )
		pFnDebugDisplay = (UFunction*) UObject::GObjObjects()->Data[ 42537 ];

	ABioBaseSquad_execDebugDisplay_Parms DebugDisplay_Parms;

	pFnDebugDisplay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDisplay, &DebugDisplay_Parms, NULL );

	pFnDebugDisplay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetPawnBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioEpicPawnBehavior*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

class UBioEpicPawnBehavior* ABioBaseSquad::GetPawnBehavior ( class AActor* oActor )
{
	static UFunction* pFnGetPawnBehavior = NULL;

	if ( ! pFnGetPawnBehavior )
		pFnGetPawnBehavior = (UFunction*) UObject::GObjObjects()->Data[ 42534 ];

	ABioBaseSquad_execGetPawnBehavior_Parms GetPawnBehavior_Parms;
	GetPawnBehavior_Parms.oActor = oActor;

	pFnGetPawnBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawnBehavior, &GetPawnBehavior_Parms, NULL );

	pFnGetPawnBehavior->FunctionFlags |= 0x400;

	return GetPawnBehavior_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oActor                         ( CPF_Parm )

class ABioBaseSquad* ABioBaseSquad::GetSquad ( class AActor* oActor )
{
	static UFunction* pFnGetSquad = NULL;

	if ( ! pFnGetSquad )
		pFnGetSquad = (UFunction*) UObject::GObjObjects()->Data[ 42531 ];

	ABioBaseSquad_execGetSquad_Parms GetSquad_Parms;
	GetSquad_Parms.oActor = oActor;

	pFnGetSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquad, &GetSquad_Parms, NULL );

	pFnGetSquad->FunctionFlags |= 0x400;

	return GetSquad_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.CancelCapability
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioCapability*          oCapability                    ( CPF_Parm )

void ABioBaseSquad::CancelCapability ( class UBioCapability* oCapability )
{
	static UFunction* pFnCancelCapability = NULL;

	if ( ! pFnCancelCapability )
		pFnCancelCapability = (UFunction*) UObject::GObjObjects()->Data[ 42529 ];

	ABioBaseSquad_execCancelCapability_Parms CancelCapability_Parms;
	CancelCapability_Parms.oCapability = oCapability;

	pFnCancelCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelCapability, &CancelCapability_Parms, NULL );

	pFnCancelCapability->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetCapabilityPowerBuildUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioBaseSquad::GetCapabilityPowerBuildUp ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityPowerBuildUp = NULL;

	if ( ! pFnGetCapabilityPowerBuildUp )
		pFnGetCapabilityPowerBuildUp = (UFunction*) UObject::GObjObjects()->Data[ 42526 ];

	ABioBaseSquad_execGetCapabilityPowerBuildUp_Parms GetCapabilityPowerBuildUp_Parms;
	GetCapabilityPowerBuildUp_Parms.oCapability = oCapability;

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityPowerBuildUp, &GetCapabilityPowerBuildUp_Parms, NULL );

	pFnGetCapabilityPowerBuildUp->FunctionFlags |= 0x400;

	return GetCapabilityPowerBuildUp_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetCapabilityImpactRadius
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioBaseSquad::GetCapabilityImpactRadius ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityImpactRadius = NULL;

	if ( ! pFnGetCapabilityImpactRadius )
		pFnGetCapabilityImpactRadius = (UFunction*) UObject::GObjObjects()->Data[ 42523 ];

	ABioBaseSquad_execGetCapabilityImpactRadius_Parms GetCapabilityImpactRadius_Parms;
	GetCapabilityImpactRadius_Parms.oCapability = oCapability;

	pFnGetCapabilityImpactRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityImpactRadius, &GetCapabilityImpactRadius_Parms, NULL );

	pFnGetCapabilityImpactRadius->FunctionFlags |= 0x400;

	return GetCapabilityImpactRadius_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetCapabilityIsEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

bool ABioBaseSquad::GetCapabilityIsEnabled ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityIsEnabled = NULL;

	if ( ! pFnGetCapabilityIsEnabled )
		pFnGetCapabilityIsEnabled = (UFunction*) UObject::GObjObjects()->Data[ 42520 ];

	ABioBaseSquad_execGetCapabilityIsEnabled_Parms GetCapabilityIsEnabled_Parms;
	GetCapabilityIsEnabled_Parms.oCapability = oCapability;

	pFnGetCapabilityIsEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityIsEnabled, &GetCapabilityIsEnabled_Parms, NULL );

	pFnGetCapabilityIsEnabled->FunctionFlags |= 0x400;

	return GetCapabilityIsEnabled_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetCapabilityCoolDownTimeRemaining
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )

float ABioBaseSquad::GetCapabilityCoolDownTimeRemaining ( class UBioCapability* oCapability )
{
	static UFunction* pFnGetCapabilityCoolDownTimeRemaining = NULL;

	if ( ! pFnGetCapabilityCoolDownTimeRemaining )
		pFnGetCapabilityCoolDownTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 42517 ];

	ABioBaseSquad_execGetCapabilityCoolDownTimeRemaining_Parms GetCapabilityCoolDownTimeRemaining_Parms;
	GetCapabilityCoolDownTimeRemaining_Parms.oCapability = oCapability;

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCapabilityCoolDownTimeRemaining, &GetCapabilityCoolDownTimeRemaining_Parms, NULL );

	pFnGetCapabilityCoolDownTimeRemaining->FunctionFlags |= 0x400;

	return GetCapabilityCoolDownTimeRemaining_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.AddCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioBaseSquad::AddCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnAddCapability = NULL;

	if ( ! pFnAddCapability )
		pFnAddCapability = (UFunction*) UObject::GObjObjects()->Data[ 42509 ];

	ABioBaseSquad_execAddCapability_Parms AddCapability_Parms;
	AddCapability_Parms.oCapability = oCapability;
	AddCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	AddCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	AddCapability_Parms.fTimeOut = fTimeOut;
	AddCapability_Parms.oTarget = oTarget;
	memcpy ( &AddCapability_Parms.vTarget, &vTarget, 0xC );

	pFnAddCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCapability, &AddCapability_Parms, NULL );

	pFnAddCapability->FunctionFlags |= 0x400;

	return AddCapability_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.DoCapability
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioSeqData*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCapability                    ( CPF_Parm )
// float                          fReqStabilityRatio             ( CPF_Parm )
// float                          fAbortStabilityRatio           ( CPF_Parm )
// float                          fTimeOut                       ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )

class UBioSeqData* ABioBaseSquad::DoCapability ( class UBioCapability* oCapability, float fReqStabilityRatio, float fAbortStabilityRatio, float fTimeOut, class APawn* oTarget, struct FVector vTarget )
{
	static UFunction* pFnDoCapability = NULL;

	if ( ! pFnDoCapability )
		pFnDoCapability = (UFunction*) UObject::GObjObjects()->Data[ 42501 ];

	ABioBaseSquad_execDoCapability_Parms DoCapability_Parms;
	DoCapability_Parms.oCapability = oCapability;
	DoCapability_Parms.fReqStabilityRatio = fReqStabilityRatio;
	DoCapability_Parms.fAbortStabilityRatio = fAbortStabilityRatio;
	DoCapability_Parms.fTimeOut = fTimeOut;
	DoCapability_Parms.oTarget = oTarget;
	memcpy ( &DoCapability_Parms.vTarget, &vTarget, 0xC );

	pFnDoCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCapability, &DoCapability_Parms, NULL );

	pFnDoCapability->FunctionFlags |= 0x400;

	return DoCapability_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetBestFor
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nMode                          ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class UBioCapability* ABioBaseSquad::GetBestFor ( unsigned char nMode, struct FName nmTechnique, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps )
{
	static UFunction* pFnGetBestFor = NULL;

	if ( ! pFnGetBestFor )
		pFnGetBestFor = (UFunction*) UObject::GObjObjects()->Data[ 42493 ];

	ABioBaseSquad_execGetBestFor_Parms GetBestFor_Parms;
	GetBestFor_Parms.nMode = nMode;
	memcpy ( &GetBestFor_Parms.nmTechnique, &nmTechnique, 0x8 );
	memcpy ( &GetBestFor_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnGetBestFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBestFor, &GetBestFor_Parms, NULL );

	pFnGetBestFor->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &GetBestFor_Parms.aoInCaps, 0x10 );

	return GetBestFor_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FilterByMapped
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ABioBaseSquad::FilterByMapped ( struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByMapped = NULL;

	if ( ! pFnFilterByMapped )
		pFnFilterByMapped = (UFunction*) UObject::GObjObjects()->Data[ 42487 ];

	ABioBaseSquad_execFilterByMapped_Parms FilterByMapped_Parms;

	pFnFilterByMapped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByMapped, &FilterByMapped_Parms, NULL );

	pFnFilterByMapped->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByMapped_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByMapped_Parms.aoOutCaps, 0x10 );

	return FilterByMapped_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FilterByDeliveredPowerPendingActivation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByDeliveredPowerPendingActivation ( struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByDeliveredPowerPendingActivation = NULL;

	if ( ! pFnFilterByDeliveredPowerPendingActivation )
		pFnFilterByDeliveredPowerPendingActivation = (UFunction*) UObject::GObjObjects()->Data[ 42482 ];

	ABioBaseSquad_execFilterByDeliveredPowerPendingActivation_Parms FilterByDeliveredPowerPendingActivation_Parms;

	pFnFilterByDeliveredPowerPendingActivation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByDeliveredPowerPendingActivation, &FilterByDeliveredPowerPendingActivation_Parms, NULL );

	pFnFilterByDeliveredPowerPendingActivation->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByDeliveredPowerPendingActivation_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByDeliveredPowerPendingActivation_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByDeliverablePower
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByDeliverablePower ( struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByDeliverablePower = NULL;

	if ( ! pFnFilterByDeliverablePower )
		pFnFilterByDeliverablePower = (UFunction*) UObject::GObjObjects()->Data[ 42477 ];

	ABioBaseSquad_execFilterByDeliverablePower_Parms FilterByDeliverablePower_Parms;

	pFnFilterByDeliverablePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByDeliverablePower, &FilterByDeliverablePower_Parms, NULL );

	pFnFilterByDeliverablePower->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByDeliverablePower_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByDeliverablePower_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByMember
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByMember ( class APawn* oMember, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByMember = NULL;

	if ( ! pFnFilterByMember )
		pFnFilterByMember = (UFunction*) UObject::GObjObjects()->Data[ 42471 ];

	ABioBaseSquad_execFilterByMember_Parms FilterByMember_Parms;
	FilterByMember_Parms.oMember = oMember;

	pFnFilterByMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByMember, &FilterByMember_Parms, NULL );

	pFnFilterByMember->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByMember_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByMember_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByRange
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vTarget                        ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByRange ( struct FVector vTarget, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByRange = NULL;

	if ( ! pFnFilterByRange )
		pFnFilterByRange = (UFunction*) UObject::GObjObjects()->Data[ 42463 ];

	ABioBaseSquad_execFilterByRange_Parms FilterByRange_Parms;
	memcpy ( &FilterByRange_Parms.vTarget, &vTarget, 0xC );
	memcpy ( &FilterByRange_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnFilterByRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByRange, &FilterByRange_Parms, NULL );

	pFnFilterByRange->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByRange_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByRange_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByIgnorelist
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct TArray<class APawn*>    aoIgnore                       ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByIgnorelist ( struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByIgnorelist = NULL;

	if ( ! pFnFilterByIgnorelist )
		pFnFilterByIgnorelist = (UFunction*) UObject::GObjObjects()->Data[ 42456 ];

	ABioBaseSquad_execFilterByIgnorelist_Parms FilterByIgnorelist_Parms;
	memcpy ( &FilterByIgnorelist_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnFilterByIgnorelist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByIgnorelist, &FilterByIgnorelist_Parms, NULL );

	pFnFilterByIgnorelist->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByIgnorelist_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByIgnorelist_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByTechnique
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nMode                          ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByTechnique ( unsigned char nMode, struct FName nmTechnique, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByTechnique = NULL;

	if ( ! pFnFilterByTechnique )
		pFnFilterByTechnique = (UFunction*) UObject::GObjObjects()->Data[ 42447 ];

	ABioBaseSquad_execFilterByTechnique_Parms FilterByTechnique_Parms;
	FilterByTechnique_Parms.nMode = nMode;
	memcpy ( &FilterByTechnique_Parms.nmTechnique, &nmTechnique, 0x8 );
	memcpy ( &FilterByTechnique_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnFilterByTechnique->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByTechnique, &FilterByTechnique_Parms, NULL );

	pFnFilterByTechnique->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByTechnique_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByTechnique_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByCapType
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  nMode                          ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByCapType ( unsigned char nMode, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByCapType = NULL;

	if ( ! pFnFilterByCapType )
		pFnFilterByCapType = (UFunction*) UObject::GObjObjects()->Data[ 42439 ];

	ABioBaseSquad_execFilterByCapType_Parms FilterByCapType_Parms;
	FilterByCapType_Parms.nMode = nMode;
	memcpy ( &FilterByCapType_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnFilterByCapType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByCapType, &FilterByCapType_Parms, NULL );

	pFnFilterByCapType->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByCapType_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByCapType_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.FilterByCapability
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  CapType                        ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::FilterByCapability ( unsigned char CapType, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnFilterByCapability = NULL;

	if ( ! pFnFilterByCapability )
		pFnFilterByCapability = (UFunction*) UObject::GObjObjects()->Data[ 42431 ];

	ABioBaseSquad_execFilterByCapability_Parms FilterByCapability_Parms;
	FilterByCapability_Parms.CapType = CapType;
	memcpy ( &FilterByCapability_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnFilterByCapability->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFilterByCapability, &FilterByCapability_Parms, NULL );

	pFnFilterByCapability->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &FilterByCapability_Parms.aoInCaps, 0x10 );

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &FilterByCapability_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.GetSquadMembersCapabilities
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// unsigned char                  CapType                        ( CPF_Parm )
// unsigned long                  bFilter                        ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::GetSquadMembersCapabilities ( class APawn* oMember, unsigned char CapType, unsigned long bFilter, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnGetSquadMembersCapabilities = NULL;

	if ( ! pFnGetSquadMembersCapabilities )
		pFnGetSquadMembersCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 42425 ];

	ABioBaseSquad_execGetSquadMembersCapabilities_Parms GetSquadMembersCapabilities_Parms;
	GetSquadMembersCapabilities_Parms.oMember = oMember;
	GetSquadMembersCapabilities_Parms.CapType = CapType;
	GetSquadMembersCapabilities_Parms.bFilter = bFilter;

	pFnGetSquadMembersCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadMembersCapabilities, &GetSquadMembersCapabilities_Parms, NULL );

	pFnGetSquadMembersCapabilities->FunctionFlags |= 0x400;

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &GetSquadMembersCapabilities_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.GetSquadCapabilities
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  CapType                        ( CPF_Parm )
// unsigned long                  bFilter                        ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class UBioCapability*> aoOutCaps                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::GetSquadCapabilities ( unsigned char CapType, unsigned long bFilter, struct TArray<class UBioCapability*>* aoOutCaps )
{
	static UFunction* pFnGetSquadCapabilities = NULL;

	if ( ! pFnGetSquadCapabilities )
		pFnGetSquadCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 42420 ];

	ABioBaseSquad_execGetSquadCapabilities_Parms GetSquadCapabilities_Parms;
	GetSquadCapabilities_Parms.CapType = CapType;
	GetSquadCapabilities_Parms.bFilter = bFilter;

	pFnGetSquadCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadCapabilities, &GetSquadCapabilities_Parms, NULL );

	pFnGetSquadCapabilities->FunctionFlags |= 0x400;

	if ( aoOutCaps )
		memcpy ( aoOutCaps, &GetSquadCapabilities_Parms.aoOutCaps, 0x10 );
};

// Function SFXGame.BioBaseSquad.RecomputeCapabilities
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioBaseSquad::RecomputeCapabilities ( )
{
	static UFunction* pFnRecomputeCapabilities = NULL;

	if ( ! pFnRecomputeCapabilities )
		pFnRecomputeCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 42419 ];

	ABioBaseSquad_execRecomputeCapabilities_Parms RecomputeCapabilities_Parms;

	pFnRecomputeCapabilities->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecomputeCapabilities, &RecomputeCapabilities_Parms, NULL );

	pFnRecomputeCapabilities->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.BySortedBestRange
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vTarget                        ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// class UBioCapability*          oCap                           ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::BySortedBestRange ( class APawn* oTarget, struct FVector vTarget, struct TArray<class UBioCapability*>* aoInCaps, class UBioCapability** oCap )
{
	static UFunction* pFnBySortedBestRange = NULL;

	if ( ! pFnBySortedBestRange )
		pFnBySortedBestRange = (UFunction*) UObject::GObjObjects()->Data[ 42413 ];

	ABioBaseSquad_execBySortedBestRange_Parms BySortedBestRange_Parms;
	BySortedBestRange_Parms.oTarget = oTarget;
	memcpy ( &BySortedBestRange_Parms.vTarget, &vTarget, 0xC );

	pFnBySortedBestRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBySortedBestRange, &BySortedBestRange_Parms, NULL );

	pFnBySortedBestRange->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &BySortedBestRange_Parms.aoInCaps, 0x10 );

	if ( oCap )
		*oCap = BySortedBestRange_Parms.oCap;
};

// Function SFXGame.BioBaseSquad.BySortedRank
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// class UBioCapability*          oCap                           ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::BySortedRank ( struct TArray<class UBioCapability*>* aoInCaps, class UBioCapability** oCap )
{
	static UFunction* pFnBySortedRank = NULL;

	if ( ! pFnBySortedRank )
		pFnBySortedRank = (UFunction*) UObject::GObjObjects()->Data[ 42409 ];

	ABioBaseSquad_execBySortedRank_Parms BySortedRank_Parms;

	pFnBySortedRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBySortedRank, &BySortedRank_Parms, NULL );

	pFnBySortedRank->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &BySortedRank_Parms.aoInCaps, 0x10 );

	if ( oCap )
		*oCap = BySortedRank_Parms.oCap;
};

// Function SFXGame.BioBaseSquad.ByTechnique
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  nCapType                       ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  nMode                          ( CPF_OptionalParm | CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// class UBioCapability*          oCap                           ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::ByTechnique ( unsigned char nCapType, unsigned char nMode, struct FName nmTechnique, struct TArray<class UBioCapability*>* aoInCaps, class UBioCapability** oCap )
{
	static UFunction* pFnByTechnique = NULL;

	if ( ! pFnByTechnique )
		pFnByTechnique = (UFunction*) UObject::GObjObjects()->Data[ 42401 ];

	ABioBaseSquad_execByTechnique_Parms ByTechnique_Parms;
	ByTechnique_Parms.nCapType = nCapType;
	ByTechnique_Parms.nMode = nMode;
	memcpy ( &ByTechnique_Parms.nmTechnique, &nmTechnique, 0x8 );

	pFnByTechnique->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnByTechnique, &ByTechnique_Parms, NULL );

	pFnByTechnique->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &ByTechnique_Parms.aoInCaps, 0x10 );

	if ( oCap )
		*oCap = ByTechnique_Parms.oCap;
};

// Function SFXGame.BioBaseSquad.ByCapabilitys
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// class UBioCapability*          oCap                           ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::ByCapabilitys ( struct TArray<class UBioCapability*>* aoInCaps, class UBioCapability** oCap )
{
	static UFunction* pFnByCapabilitys = NULL;

	if ( ! pFnByCapabilitys )
		pFnByCapabilitys = (UFunction*) UObject::GObjObjects()->Data[ 42397 ];

	ABioBaseSquad_execByCapabilitys_Parms ByCapabilitys_Parms;

	pFnByCapabilitys->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnByCapabilitys, &ByCapabilitys_Parms, NULL );

	pFnByCapabilitys->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &ByCapabilitys_Parms.aoInCaps, 0x10 );

	if ( oCap )
		*oCap = ByCapabilitys_Parms.oCap;
};

// Function SFXGame.BioBaseSquad.IsCapabilityValid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCap                           ( CPF_Parm )

bool ABioBaseSquad::IsCapabilityValid ( class UBioCapability* oCap )
{
	static UFunction* pFnIsCapabilityValid = NULL;

	if ( ! pFnIsCapabilityValid )
		pFnIsCapabilityValid = (UFunction*) UObject::GObjObjects()->Data[ 42394 ];

	ABioBaseSquad_execIsCapabilityValid_Parms IsCapabilityValid_Parms;
	IsCapabilityValid_Parms.oCap = oCap;

	pFnIsCapabilityValid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCapabilityValid, &IsCapabilityValid_Parms, NULL );

	pFnIsCapabilityValid->FunctionFlags |= 0x400;

	return IsCapabilityValid_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsInRange
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCapability*          oCap                           ( CPF_Parm )
// class APawn*                   oPawn                          ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vLocation                      ( CPF_OptionalParm | CPF_Parm )

int ABioBaseSquad::IsInRange ( class UBioCapability* oCap, class APawn* oPawn, struct FVector vLocation )
{
	static UFunction* pFnIsInRange = NULL;

	if ( ! pFnIsInRange )
		pFnIsInRange = (UFunction*) UObject::GObjObjects()->Data[ 42389 ];

	ABioBaseSquad_execIsInRange_Parms IsInRange_Parms;
	IsInRange_Parms.oCap = oCap;
	IsInRange_Parms.oPawn = oPawn;
	memcpy ( &IsInRange_Parms.vLocation, &vLocation, 0xC );

	pFnIsInRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInRange, &IsInRange_Parms, NULL );

	pFnIsInRange->FunctionFlags |= 0x400;

	return IsInRange_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.CountOfMembers
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nMode                          ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// struct TArray<class APawn*>    aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct TArray<class UBioCapability*> aoInCaps                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int ABioBaseSquad::CountOfMembers ( unsigned char nMode, struct FName nmTechnique, struct TArray<class APawn*> aoIgnore, struct TArray<class UBioCapability*>* aoInCaps )
{
	static UFunction* pFnCountOfMembers = NULL;

	if ( ! pFnCountOfMembers )
		pFnCountOfMembers = (UFunction*) UObject::GObjObjects()->Data[ 42381 ];

	ABioBaseSquad_execCountOfMembers_Parms CountOfMembers_Parms;
	CountOfMembers_Parms.nMode = nMode;
	memcpy ( &CountOfMembers_Parms.nmTechnique, &nmTechnique, 0x8 );
	memcpy ( &CountOfMembers_Parms.aoIgnore, &aoIgnore, 0x10 );

	pFnCountOfMembers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCountOfMembers, &CountOfMembers_Parms, NULL );

	pFnCountOfMembers->FunctionFlags |= 0x400;

	if ( aoInCaps )
		memcpy ( aoInCaps, &CountOfMembers_Parms.aoInCaps, 0x10 );

	return CountOfMembers_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetStrategyList
// [0x00020000] 
// Parameters infos:
// struct TArray<struct FName>    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct TArray<struct FName> ABioBaseSquad::GetStrategyList ( )
{
	static UFunction* pFnGetStrategyList = NULL;

	if ( ! pFnGetStrategyList )
		pFnGetStrategyList = (UFunction*) UObject::GObjObjects()->Data[ 42378 ];

	ABioBaseSquad_execGetStrategyList_Parms GetStrategyList_Parms;

	this->ProcessEvent ( pFnGetStrategyList, &GetStrategyList_Parms, NULL );

	return GetStrategyList_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.StopFollowerHoldPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::StopFollowerHoldPosition ( )
{
	static UFunction* pFnStopFollowerHoldPosition = NULL;

	if ( ! pFnStopFollowerHoldPosition )
		pFnStopFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 42376 ];

	ABioBaseSquad_execStopFollowerHoldPosition_Parms StopFollowerHoldPosition_Parms;

	pFnStopFollowerHoldPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopFollowerHoldPosition, &StopFollowerHoldPosition_Parms, NULL );

	pFnStopFollowerHoldPosition->FunctionFlags |= 0x400;

	return StopFollowerHoldPosition_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.StartFollowerHoldPosition
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<class ABioSquadHoldMarker*> aoHoldPositions                ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bLeaderHoldPosition            ( CPF_OptionalParm | CPF_Parm )

bool ABioBaseSquad::StartFollowerHoldPosition ( struct TArray<class ABioSquadHoldMarker*> aoHoldPositions, unsigned long bLeaderHoldPosition )
{
	static UFunction* pFnStartFollowerHoldPosition = NULL;

	if ( ! pFnStartFollowerHoldPosition )
		pFnStartFollowerHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 42371 ];

	ABioBaseSquad_execStartFollowerHoldPosition_Parms StartFollowerHoldPosition_Parms;
	memcpy ( &StartFollowerHoldPosition_Parms.aoHoldPositions, &aoHoldPositions, 0x10 );
	StartFollowerHoldPosition_Parms.bLeaderHoldPosition = bLeaderHoldPosition;

	pFnStartFollowerHoldPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartFollowerHoldPosition, &StartFollowerHoldPosition_Parms, NULL );

	pFnStartFollowerHoldPosition->FunctionFlags |= 0x400;

	return StartFollowerHoldPosition_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindSquadMemberByTag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmTag                          ( CPF_Parm )

class APawn* ABioBaseSquad::FindSquadMemberByTag ( struct FName nmTag )
{
	static UFunction* pFnFindSquadMemberByTag = NULL;

	if ( ! pFnFindSquadMemberByTag )
		pFnFindSquadMemberByTag = (UFunction*) UObject::GObjObjects()->Data[ 42368 ];

	ABioBaseSquad_execFindSquadMemberByTag_Parms FindSquadMemberByTag_Parms;
	memcpy ( &FindSquadMemberByTag_Parms.nmTag, &nmTag, 0x8 );

	pFnFindSquadMemberByTag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSquadMemberByTag, &FindSquadMemberByTag_Parms, NULL );

	pFnFindSquadMemberByTag->FunctionFlags |= 0x400;

	return FindSquadMemberByTag_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FreeCoverSpots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::FreeCoverSpots ( )
{
	static UFunction* pFnFreeCoverSpots = NULL;

	if ( ! pFnFreeCoverSpots )
		pFnFreeCoverSpots = (UFunction*) UObject::GObjObjects()->Data[ 42366 ];

	ABioBaseSquad_execFreeCoverSpots_Parms FreeCoverSpots_Parms;

	pFnFreeCoverSpots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFreeCoverSpots, &FreeCoverSpots_Parms, NULL );

	pFnFreeCoverSpots->FunctionFlags |= 0x400;

	return FreeCoverSpots_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.OnSpawnOrLevelLoad
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bCalledFromSpawn               ( CPF_Parm )

void ABioBaseSquad::eventOnSpawnOrLevelLoad ( unsigned long bCalledFromSpawn )
{
	static UFunction* pFnOnSpawnOrLevelLoad = NULL;

	if ( ! pFnOnSpawnOrLevelLoad )
		pFnOnSpawnOrLevelLoad = (UFunction*) UObject::GObjObjects()->Data[ 42364 ];

	ABioBaseSquad_eventOnSpawnOrLevelLoad_Parms OnSpawnOrLevelLoad_Parms;
	OnSpawnOrLevelLoad_Parms.bCalledFromSpawn = bCalledFromSpawn;

	this->ProcessEvent ( pFnOnSpawnOrLevelLoad, &OnSpawnOrLevelLoad_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnProximityAlarm
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioBaseSquad::eventOnProximityAlarm ( class APawn* oMember, class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 42360 ];

	ABioBaseSquad_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oMember = oMember;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnSquadSeen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioBaseSquad*           oSquad                         ( CPF_Parm )

void ABioBaseSquad::eventOnSquadSeen ( class ABioBaseSquad* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 42356 ];

	ABioBaseSquad_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnActionComplete_Movement
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioBaseSquad::eventOnActionComplete_Movement ( class APawn* oMember, struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 42350 ];

	ABioBaseSquad_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	OnActionComplete_Movement_Parms.oMember = oMember;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnActionComplete_Combat
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioBaseSquad::eventOnActionComplete_Combat ( class APawn* oMember, struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 42344 ];

	ABioBaseSquad_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	OnActionComplete_Combat_Parms.oMember = oMember;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnDamaged
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioBaseSquad::eventOnDamaged ( class APawn* oMember, class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 42340 ];

	ABioBaseSquad_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oMember = oMember;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnCastAt
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioBaseSquad::eventOnCastAt ( class APawn* oMember, class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 42336 ];

	ABioBaseSquad_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oMember = oMember;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnAttacked
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioBaseSquad::eventOnAttacked ( class APawn* oMember, class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 42332 ];

	ABioBaseSquad_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oMember = oMember;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnAbilityDisabled
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioBaseSquad::eventOnAbilityDisabled ( class APawn* oMember, int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityDisabled = NULL;

	if ( ! pFnOnAbilityDisabled )
		pFnOnAbilityDisabled = (UFunction*) UObject::GObjObjects()->Data[ 42328 ];

	ABioBaseSquad_eventOnAbilityDisabled_Parms OnAbilityDisabled_Parms;
	OnAbilityDisabled_Parms.oMember = oMember;
	OnAbilityDisabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityDisabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityDisabled, &OnAbilityDisabled_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnAbilityEnabled
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioBaseSquad::eventOnAbilityEnabled ( class APawn* oMember, int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityEnabled = NULL;

	if ( ! pFnOnAbilityEnabled )
		pFnOnAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 42324 ];

	ABioBaseSquad_eventOnAbilityEnabled_Parms OnAbilityEnabled_Parms;
	OnAbilityEnabled_Parms.oMember = oMember;
	OnAbilityEnabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityEnabled, &OnAbilityEnabled_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnNoCombatAction
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )

void ABioBaseSquad::eventOnNoCombatAction ( class APawn* oMember )
{
	static UFunction* pFnOnNoCombatAction = NULL;

	if ( ! pFnOnNoCombatAction )
		pFnOnNoCombatAction = (UFunction*) UObject::GObjObjects()->Data[ 42322 ];

	ABioBaseSquad_eventOnNoCombatAction_Parms OnNoCombatAction_Parms;
	OnNoCombatAction_Parms.oMember = oMember;

	this->ProcessEvent ( pFnOnNoCombatAction, &OnNoCombatAction_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.OnDeath
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AController*             oKiller                        ( CPF_Parm )

void ABioBaseSquad::eventOnDeath ( class APawn* oMember, class AController* oKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 42319 ];

	ABioBaseSquad_eventOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.oMember = oMember;
	OnDeath_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.PushMoveWithLocking
// [0x00024000] 
// Parameters infos:
// class ABioAiController*        oMember                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// float                          fTolerance                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bWalking                       ( CPF_OptionalParm | CPF_Parm )
// float                          fMovementDelay                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCrouch                        ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::PushMoveWithLocking ( class ABioAiController* oMember, class AActor* oTarget, float fTolerance, unsigned long bWalking, float fMovementDelay, unsigned long bCrouch )
{
	static UFunction* pFnPushMoveWithLocking = NULL;

	if ( ! pFnPushMoveWithLocking )
		pFnPushMoveWithLocking = (UFunction*) UObject::GObjObjects()->Data[ 42312 ];

	ABioBaseSquad_execPushMoveWithLocking_Parms PushMoveWithLocking_Parms;
	PushMoveWithLocking_Parms.oMember = oMember;
	PushMoveWithLocking_Parms.oTarget = oTarget;
	PushMoveWithLocking_Parms.fTolerance = fTolerance;
	PushMoveWithLocking_Parms.bWalking = bWalking;
	PushMoveWithLocking_Parms.fMovementDelay = fMovementDelay;
	PushMoveWithLocking_Parms.bCrouch = bCrouch;

	this->ProcessEvent ( pFnPushMoveWithLocking, &PushMoveWithLocking_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GetNearestCoverInRangeOfPoint
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pSquadPawn                     ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm )
// float                          fSearchRange                   ( CPF_Parm )
// struct FCoverRecord            stCoverRecord                  ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::GetNearestCoverInRangeOfPoint ( class APawn* pSquadPawn, struct FVector vPosition, float fSearchRange, struct FCoverRecord* stCoverRecord )
{
	static UFunction* pFnGetNearestCoverInRangeOfPoint = NULL;

	if ( ! pFnGetNearestCoverInRangeOfPoint )
		pFnGetNearestCoverInRangeOfPoint = (UFunction*) UObject::GObjObjects()->Data[ 42306 ];

	ABioBaseSquad_execGetNearestCoverInRangeOfPoint_Parms GetNearestCoverInRangeOfPoint_Parms;
	GetNearestCoverInRangeOfPoint_Parms.pSquadPawn = pSquadPawn;
	memcpy ( &GetNearestCoverInRangeOfPoint_Parms.vPosition, &vPosition, 0xC );
	GetNearestCoverInRangeOfPoint_Parms.fSearchRange = fSearchRange;

	pFnGetNearestCoverInRangeOfPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNearestCoverInRangeOfPoint, &GetNearestCoverInRangeOfPoint_Parms, NULL );

	pFnGetNearestCoverInRangeOfPoint->FunctionFlags |= 0x400;

	if ( stCoverRecord )
		memcpy ( stCoverRecord, &GetNearestCoverInRangeOfPoint_Parms.stCoverRecord, 0x14 );

	return GetNearestCoverInRangeOfPoint_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindSquadCoverNearobject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oObject                        ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fMaxRange                      ( CPF_Parm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_OptionalParm | CPF_Parm )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::FindSquadCoverNearobject ( class AActor* oObject, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fMaxRange, class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, int nMinRank )
{
	static UFunction* pFnFindSquadCoverNearobject = NULL;

	if ( ! pFnFindSquadCoverNearobject )
		pFnFindSquadCoverNearobject = (UFunction*) UObject::GObjObjects()->Data[ 42295 ];

	ABioBaseSquad_execFindSquadCoverNearobject_Parms FindSquadCoverNearobject_Parms;
	FindSquadCoverNearobject_Parms.oObject = oObject;
	memcpy ( &FindSquadCoverNearobject_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &FindSquadCoverNearobject_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	FindSquadCoverNearobject_Parms.fMaxRange = fMaxRange;
	FindSquadCoverNearobject_Parms.oWhoSeeksCover = oWhoSeeksCover;
	FindSquadCoverNearobject_Parms.NoCoverAgainst = NoCoverAgainst;
	FindSquadCoverNearobject_Parms.nMinRank = nMinRank;

	pFnFindSquadCoverNearobject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSquadCoverNearobject, &FindSquadCoverNearobject_Parms, NULL );

	pFnFindSquadCoverNearobject->FunctionFlags |= 0x400;

	return FindSquadCoverNearobject_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindSquadCoverNearPoint
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPoint                         ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fMaxRange                      ( CPF_Parm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_OptionalParm | CPF_Parm )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::FindSquadCoverNearPoint ( struct FVector vPoint, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fMaxRange, class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, int nMinRank )
{
	static UFunction* pFnFindSquadCoverNearPoint = NULL;

	if ( ! pFnFindSquadCoverNearPoint )
		pFnFindSquadCoverNearPoint = (UFunction*) UObject::GObjObjects()->Data[ 42284 ];

	ABioBaseSquad_execFindSquadCoverNearPoint_Parms FindSquadCoverNearPoint_Parms;
	memcpy ( &FindSquadCoverNearPoint_Parms.vPoint, &vPoint, 0xC );
	memcpy ( &FindSquadCoverNearPoint_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &FindSquadCoverNearPoint_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	FindSquadCoverNearPoint_Parms.fMaxRange = fMaxRange;
	FindSquadCoverNearPoint_Parms.oWhoSeeksCover = oWhoSeeksCover;
	FindSquadCoverNearPoint_Parms.NoCoverAgainst = NoCoverAgainst;
	FindSquadCoverNearPoint_Parms.nMinRank = nMinRank;

	pFnFindSquadCoverNearPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSquadCoverNearPoint, &FindSquadCoverNearPoint_Parms, NULL );

	pFnFindSquadCoverNearPoint->FunctionFlags |= 0x400;

	return FindSquadCoverNearPoint_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindCoverNearobject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oObject                        ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fMaxRange                      ( CPF_Parm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_OptionalParm | CPF_Parm )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::FindCoverNearobject ( class AActor* oObject, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fMaxRange, class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, int nMinRank )
{
	static UFunction* pFnFindCoverNearobject = NULL;

	if ( ! pFnFindCoverNearobject )
		pFnFindCoverNearobject = (UFunction*) UObject::GObjObjects()->Data[ 42273 ];

	ABioBaseSquad_execFindCoverNearobject_Parms FindCoverNearobject_Parms;
	FindCoverNearobject_Parms.oObject = oObject;
	memcpy ( &FindCoverNearobject_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &FindCoverNearobject_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	FindCoverNearobject_Parms.fMaxRange = fMaxRange;
	FindCoverNearobject_Parms.oWhoSeeksCover = oWhoSeeksCover;
	FindCoverNearobject_Parms.NoCoverAgainst = NoCoverAgainst;
	FindCoverNearobject_Parms.nMinRank = nMinRank;

	pFnFindCoverNearobject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCoverNearobject, &FindCoverNearobject_Parms, NULL );

	pFnFindCoverNearobject->FunctionFlags |= 0x400;

	return FindCoverNearobject_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindCoverNearPoint
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPoint                         ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fMaxRange                      ( CPF_Parm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_OptionalParm | CPF_Parm )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::FindCoverNearPoint ( struct FVector vPoint, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fMaxRange, class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, int nMinRank )
{
	static UFunction* pFnFindCoverNearPoint = NULL;

	if ( ! pFnFindCoverNearPoint )
		pFnFindCoverNearPoint = (UFunction*) UObject::GObjObjects()->Data[ 42262 ];

	ABioBaseSquad_execFindCoverNearPoint_Parms FindCoverNearPoint_Parms;
	memcpy ( &FindCoverNearPoint_Parms.vPoint, &vPoint, 0xC );
	memcpy ( &FindCoverNearPoint_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &FindCoverNearPoint_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	FindCoverNearPoint_Parms.fMaxRange = fMaxRange;
	FindCoverNearPoint_Parms.oWhoSeeksCover = oWhoSeeksCover;
	FindCoverNearPoint_Parms.NoCoverAgainst = NoCoverAgainst;
	FindCoverNearPoint_Parms.nMinRank = nMinRank;

	pFnFindCoverNearPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCoverNearPoint, &FindCoverNearPoint_Parms, NULL );

	pFnFindCoverNearPoint->FunctionFlags |= 0x400;

	return FindCoverNearPoint_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.AllPlaypen
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UClass*                  NavClass                       ( CPF_OptionalParm | CPF_Parm )
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::AllPlaypen ( class UClass* NavClass, class ANavigationPoint** oNavPoint )
{
	static UFunction* pFnAllPlaypen = NULL;

	if ( ! pFnAllPlaypen )
		pFnAllPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42259 ];

	ABioBaseSquad_execAllPlaypen_Parms AllPlaypen_Parms;
	AllPlaypen_Parms.NavClass = NavClass;

	pFnAllPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllPlaypen, &AllPlaypen_Parms, NULL );

	pFnAllPlaypen->FunctionFlags |= 0x400;

	if ( oNavPoint )
		*oNavPoint = AllPlaypen_Parms.oNavPoint;
};

// Function SFXGame.BioBaseSquad.ListNavNodesNearWithLOS
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// class AActor*                  oNear                          ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vNear                          ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ANavigationPoint*> aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  NavClass                       ( CPF_OptionalParm | CPF_Parm )
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::ListNavNodesNearWithLOS ( class AActor* oTarget, class AActor* oNear, struct FVector vNear, struct TArray<class ANavigationPoint*> aoIgnore, class UClass* NavClass, class ANavigationPoint** oNavPoint )
{
	static UFunction* pFnListNavNodesNearWithLOS = NULL;

	if ( ! pFnListNavNodesNearWithLOS )
		pFnListNavNodesNearWithLOS = (UFunction*) UObject::GObjObjects()->Data[ 42251 ];

	ABioBaseSquad_execListNavNodesNearWithLOS_Parms ListNavNodesNearWithLOS_Parms;
	ListNavNodesNearWithLOS_Parms.oTarget = oTarget;
	ListNavNodesNearWithLOS_Parms.oNear = oNear;
	memcpy ( &ListNavNodesNearWithLOS_Parms.vNear, &vNear, 0xC );
	memcpy ( &ListNavNodesNearWithLOS_Parms.aoIgnore, &aoIgnore, 0x10 );
	ListNavNodesNearWithLOS_Parms.NavClass = NavClass;

	pFnListNavNodesNearWithLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnListNavNodesNearWithLOS, &ListNavNodesNearWithLOS_Parms, NULL );

	pFnListNavNodesNearWithLOS->FunctionFlags |= 0x400;

	if ( oNavPoint )
		*oNavPoint = ListNavNodesNearWithLOS_Parms.oNavPoint;
};

// Function SFXGame.BioBaseSquad.ListNavNodesNear
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  oNear                          ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vNear                          ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ANavigationPoint*> aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  NavClass                       ( CPF_OptionalParm | CPF_Parm )
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::ListNavNodesNear ( class AActor* oNear, struct FVector vNear, struct TArray<class ANavigationPoint*> aoIgnore, class UClass* NavClass, class ANavigationPoint** oNavPoint )
{
	static UFunction* pFnListNavNodesNear = NULL;

	if ( ! pFnListNavNodesNear )
		pFnListNavNodesNear = (UFunction*) UObject::GObjObjects()->Data[ 42244 ];

	ABioBaseSquad_execListNavNodesNear_Parms ListNavNodesNear_Parms;
	ListNavNodesNear_Parms.oNear = oNear;
	memcpy ( &ListNavNodesNear_Parms.vNear, &vNear, 0xC );
	memcpy ( &ListNavNodesNear_Parms.aoIgnore, &aoIgnore, 0x10 );
	ListNavNodesNear_Parms.NavClass = NavClass;

	pFnListNavNodesNear->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnListNavNodesNear, &ListNavNodesNear_Parms, NULL );

	pFnListNavNodesNear->FunctionFlags |= 0x400;

	if ( oNavPoint )
		*oNavPoint = ListNavNodesNear_Parms.oNavPoint;
};

// Function SFXGame.BioBaseSquad.FindNavNodeNearWithLOS
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oTarget                        ( CPF_Parm )
// class AActor*                  oNear                          ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vNear                          ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ANavigationPoint*> aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  NavClass                       ( CPF_OptionalParm | CPF_Parm )
// float                          fMaxRange                      ( CPF_OptionalParm | CPF_Parm )

class ANavigationPoint* ABioBaseSquad::FindNavNodeNearWithLOS ( class AActor* oTarget, class AActor* oNear, struct FVector vNear, struct TArray<class ANavigationPoint*> aoIgnore, class UClass* NavClass, float fMaxRange )
{
	static UFunction* pFnFindNavNodeNearWithLOS = NULL;

	if ( ! pFnFindNavNodeNearWithLOS )
		pFnFindNavNodeNearWithLOS = (UFunction*) UObject::GObjObjects()->Data[ 42235 ];

	ABioBaseSquad_execFindNavNodeNearWithLOS_Parms FindNavNodeNearWithLOS_Parms;
	FindNavNodeNearWithLOS_Parms.oTarget = oTarget;
	FindNavNodeNearWithLOS_Parms.oNear = oNear;
	memcpy ( &FindNavNodeNearWithLOS_Parms.vNear, &vNear, 0xC );
	memcpy ( &FindNavNodeNearWithLOS_Parms.aoIgnore, &aoIgnore, 0x10 );
	FindNavNodeNearWithLOS_Parms.NavClass = NavClass;
	FindNavNodeNearWithLOS_Parms.fMaxRange = fMaxRange;

	pFnFindNavNodeNearWithLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindNavNodeNearWithLOS, &FindNavNodeNearWithLOS_Parms, NULL );

	pFnFindNavNodeNearWithLOS->FunctionFlags |= 0x400;

	return FindNavNodeNearWithLOS_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.FindNavNodeNear
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oNear                          ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 vNear                          ( CPF_OptionalParm | CPF_Parm )
// struct TArray<class ANavigationPoint*> aoIgnore                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  NavClass                       ( CPF_OptionalParm | CPF_Parm )
// float                          fMaxRange                      ( CPF_OptionalParm | CPF_Parm )

class ANavigationPoint* ABioBaseSquad::FindNavNodeNear ( class AActor* oNear, struct FVector vNear, struct TArray<class ANavigationPoint*> aoIgnore, class UClass* NavClass, float fMaxRange )
{
	static UFunction* pFnFindNavNodeNear = NULL;

	if ( ! pFnFindNavNodeNear )
		pFnFindNavNodeNear = (UFunction*) UObject::GObjObjects()->Data[ 42227 ];

	ABioBaseSquad_execFindNavNodeNear_Parms FindNavNodeNear_Parms;
	FindNavNodeNear_Parms.oNear = oNear;
	memcpy ( &FindNavNodeNear_Parms.vNear, &vNear, 0xC );
	memcpy ( &FindNavNodeNear_Parms.aoIgnore, &aoIgnore, 0x10 );
	FindNavNodeNear_Parms.NavClass = NavClass;
	FindNavNodeNear_Parms.fMaxRange = fMaxRange;

	pFnFindNavNodeNear->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindNavNodeNear, &FindNavNodeNear_Parms, NULL );

	pFnFindNavNodeNear->FunctionFlags |= 0x400;

	return FindNavNodeNear_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ReevaluateRankOfCover
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioCoverInterface*      oCover                         ( CPF_Parm )
// struct FVector                 vUserLocation                  ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPawnHeight                    ( CPF_Parm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )
// float                          fMaxDist                       ( CPF_OptionalParm | CPF_Parm )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::ReevaluateRankOfCover ( class UBioCoverInterface* oCover, struct FVector vUserLocation, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fPawnHeight, class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, class AController* oCtrl, float fMaxDist, int nMinRank )
{
	static UFunction* pFnReevaluateRankOfCover = NULL;

	if ( ! pFnReevaluateRankOfCover )
		pFnReevaluateRankOfCover = (UFunction*) UObject::GObjObjects()->Data[ 42213 ];

	ABioBaseSquad_execReevaluateRankOfCover_Parms ReevaluateRankOfCover_Parms;
	ReevaluateRankOfCover_Parms.oCover = oCover;
	memcpy ( &ReevaluateRankOfCover_Parms.vUserLocation, &vUserLocation, 0xC );
	memcpy ( &ReevaluateRankOfCover_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &ReevaluateRankOfCover_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	ReevaluateRankOfCover_Parms.fPawnHeight = fPawnHeight;
	ReevaluateRankOfCover_Parms.oWhoSeeksCover = oWhoSeeksCover;
	ReevaluateRankOfCover_Parms.NoCoverAgainst = NoCoverAgainst;
	ReevaluateRankOfCover_Parms.oCtrl = oCtrl;
	ReevaluateRankOfCover_Parms.fMaxDist = fMaxDist;
	ReevaluateRankOfCover_Parms.nMinRank = nMinRank;

	pFnReevaluateRankOfCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReevaluateRankOfCover, &ReevaluateRankOfCover_Parms, NULL );

	pFnReevaluateRankOfCover->FunctionFlags |= 0x400;

	return ReevaluateRankOfCover_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SelectBestCover
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FCoverRecord            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oWhoSeeksCover                 ( CPF_Parm )
// class AActor*                  NoCoverAgainst                 ( CPF_Parm )
// struct TArray<struct FCoverRecord> aoCoverSlots                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            nMinRank                       ( CPF_OptionalParm | CPF_Parm )

struct FCoverRecord ABioBaseSquad::SelectBestCover ( class APawn* oWhoSeeksCover, class AActor* NoCoverAgainst, struct TArray<struct FCoverRecord> aoCoverSlots, int nMinRank )
{
	static UFunction* pFnSelectBestCover = NULL;

	if ( ! pFnSelectBestCover )
		pFnSelectBestCover = (UFunction*) UObject::GObjObjects()->Data[ 42206 ];

	ABioBaseSquad_execSelectBestCover_Parms SelectBestCover_Parms;
	SelectBestCover_Parms.oWhoSeeksCover = oWhoSeeksCover;
	SelectBestCover_Parms.NoCoverAgainst = NoCoverAgainst;
	memcpy ( &SelectBestCover_Parms.aoCoverSlots, &aoCoverSlots, 0x10 );
	SelectBestCover_Parms.nMinRank = nMinRank;

	pFnSelectBestCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectBestCover, &SelectBestCover_Parms, NULL );

	pFnSelectBestCover->FunctionFlags |= 0x400;

	return SelectBestCover_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetAllCoverSlots
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vPoint                         ( CPF_Parm )
// float                          fMaxDist                       ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPawnHeight                    ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverObjects                 ( CPF_Parm | CPF_NeedCtorLink )
// class AController*             oClaimingCover                 ( CPF_Parm )
// struct TArray<struct FCoverRecord> out_aoCoverSlots               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::GetAllCoverSlots ( struct FVector vPoint, float fMaxDist, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fPawnHeight, struct TArray<class AActor*> aoCoverObjects, class AController* oClaimingCover, struct TArray<struct FCoverRecord>* out_aoCoverSlots )
{
	static UFunction* pFnGetAllCoverSlots = NULL;

	if ( ! pFnGetAllCoverSlots )
		pFnGetAllCoverSlots = (UFunction*) UObject::GObjObjects()->Data[ 42193 ];

	ABioBaseSquad_execGetAllCoverSlots_Parms GetAllCoverSlots_Parms;
	memcpy ( &GetAllCoverSlots_Parms.vPoint, &vPoint, 0xC );
	GetAllCoverSlots_Parms.fMaxDist = fMaxDist;
	memcpy ( &GetAllCoverSlots_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &GetAllCoverSlots_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	GetAllCoverSlots_Parms.fPawnHeight = fPawnHeight;
	memcpy ( &GetAllCoverSlots_Parms.aoCoverObjects, &aoCoverObjects, 0x10 );
	GetAllCoverSlots_Parms.oClaimingCover = oClaimingCover;

	pFnGetAllCoverSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllCoverSlots, &GetAllCoverSlots_Parms, NULL );

	pFnGetAllCoverSlots->FunctionFlags |= 0x400;

	if ( out_aoCoverSlots )
		memcpy ( out_aoCoverSlots, &GetAllCoverSlots_Parms.out_aoCoverSlots, 0x10 );
};

// Function SFXGame.BioBaseSquad.GetRankOfSlot
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UBioCoverInterface*      oCover                         ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPawnHeight                    ( CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )
// struct FCoverRecord            oRec                           ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::GetRankOfSlot ( class UBioCoverInterface* oCover, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fPawnHeight, class AController* oCtrl, struct FCoverRecord* oRec )
{
	static UFunction* pFnGetRankOfSlot = NULL;

	if ( ! pFnGetRankOfSlot )
		pFnGetRankOfSlot = (UFunction*) UObject::GObjObjects()->Data[ 42184 ];

	ABioBaseSquad_execGetRankOfSlot_Parms GetRankOfSlot_Parms;
	GetRankOfSlot_Parms.oCover = oCover;
	memcpy ( &GetRankOfSlot_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &GetRankOfSlot_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	GetRankOfSlot_Parms.fPawnHeight = fPawnHeight;
	GetRankOfSlot_Parms.oCtrl = oCtrl;

	pFnGetRankOfSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRankOfSlot, &GetRankOfSlot_Parms, NULL );

	pFnGetRankOfSlot->FunctionFlags |= 0x400;

	if ( oRec )
		memcpy ( oRec, &GetRankOfSlot_Parms.oRec, 0x14 );
};

// Function SFXGame.BioBaseSquad.GetRankedCover
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UBioCoverInterface*      oCover                         ( CPF_Parm )
// struct FVector                 vUserLocation                  ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPawnHeight                    ( CPF_Parm )
// unsigned long                  bSort                          ( CPF_OptionalParm | CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )
// float                          fMaxDist                       ( CPF_OptionalParm | CPF_Parm )
// struct TArray<struct FCoverRecord> out_aoCoverSlots               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioBaseSquad::GetRankedCover ( class UBioCoverInterface* oCover, struct FVector vUserLocation, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fPawnHeight, unsigned long bSort, class AController* oCtrl, float fMaxDist, struct TArray<struct FCoverRecord>* out_aoCoverSlots )
{
	static UFunction* pFnGetRankedCover = NULL;

	if ( ! pFnGetRankedCover )
		pFnGetRankedCover = (UFunction*) UObject::GObjObjects()->Data[ 42171 ];

	ABioBaseSquad_execGetRankedCover_Parms GetRankedCover_Parms;
	GetRankedCover_Parms.oCover = oCover;
	memcpy ( &GetRankedCover_Parms.vUserLocation, &vUserLocation, 0xC );
	memcpy ( &GetRankedCover_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &GetRankedCover_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	GetRankedCover_Parms.fPawnHeight = fPawnHeight;
	GetRankedCover_Parms.bSort = bSort;
	GetRankedCover_Parms.oCtrl = oCtrl;
	GetRankedCover_Parms.fMaxDist = fMaxDist;

	pFnGetRankedCover->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRankedCover, &GetRankedCover_Parms, NULL );

	pFnGetRankedCover->FunctionFlags |= 0x400;

	if ( out_aoCoverSlots )
		memcpy ( out_aoCoverSlots, &GetRankedCover_Parms.out_aoCoverSlots, 0x10 );
};

// Function SFXGame.BioBaseSquad.AllActionsComplete
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Who                            ( CPF_Parm )

void ABioBaseSquad::eventAllActionsComplete ( class APawn* Who )
{
	static UFunction* pFnAllActionsComplete = NULL;

	if ( ! pFnAllActionsComplete )
		pFnAllActionsComplete = (UFunction*) UObject::GObjObjects()->Data[ 42169 ];

	ABioBaseSquad_eventAllActionsComplete_Parms AllActionsComplete_Parms;
	AllActionsComplete_Parms.Who = Who;

	this->ProcessEvent ( pFnAllActionsComplete, &AllActionsComplete_Parms, NULL );
};

// Function SFXGame.BioBaseSquad.GenerateAllActionsComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm )

void ABioBaseSquad::GenerateAllActionsComplete ( class APawn* oPawn )
{
	static UFunction* pFnGenerateAllActionsComplete = NULL;

	if ( ! pFnGenerateAllActionsComplete )
		pFnGenerateAllActionsComplete = (UFunction*) UObject::GObjObjects()->Data[ 42167 ];

	ABioBaseSquad_execGenerateAllActionsComplete_Parms GenerateAllActionsComplete_Parms;
	GenerateAllActionsComplete_Parms.oPawn = oPawn;

	pFnGenerateAllActionsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateAllActionsComplete, &GenerateAllActionsComplete_Parms, NULL );

	pFnGenerateAllActionsComplete->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.IsPositionInPlaypen
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPos                           ( CPF_Const | CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::IsPositionInPlaypen ( struct FVector* vPos )
{
	static UFunction* pFnIsPositionInPlaypen = NULL;

	if ( ! pFnIsPositionInPlaypen )
		pFnIsPositionInPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42164 ];

	ABioBaseSquad_execIsPositionInPlaypen_Parms IsPositionInPlaypen_Parms;

	pFnIsPositionInPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPositionInPlaypen, &IsPositionInPlaypen_Parms, NULL );

	pFnIsPositionInPlaypen->FunctionFlags |= 0x400;

	if ( vPos )
		memcpy ( vPos, &IsPositionInPlaypen_Parms.vPos, 0xC );

	return IsPositionInPlaypen_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.HasPlaypen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioBaseSquad::HasPlaypen ( )
{
	static UFunction* pFnHasPlaypen = NULL;

	if ( ! pFnHasPlaypen )
		pFnHasPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42162 ];

	ABioBaseSquad_execHasPlaypen_Parms HasPlaypen_Parms;

	pFnHasPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasPlaypen, &HasPlaypen_Parms, NULL );

	pFnHasPlaypen->FunctionFlags |= 0x400;

	return HasPlaypen_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsNavigationPointInPlaypen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        oNav                           ( CPF_Parm )

bool ABioBaseSquad::IsNavigationPointInPlaypen ( class ANavigationPoint* oNav )
{
	static UFunction* pFnIsNavigationPointInPlaypen = NULL;

	if ( ! pFnIsNavigationPointInPlaypen )
		pFnIsNavigationPointInPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42159 ];

	ABioBaseSquad_execIsNavigationPointInPlaypen_Parms IsNavigationPointInPlaypen_Parms;
	IsNavigationPointInPlaypen_Parms.oNav = oNav;

	pFnIsNavigationPointInPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsNavigationPointInPlaypen, &IsNavigationPointInPlaypen_Parms, NULL );

	pFnIsNavigationPointInPlaypen->FunctionFlags |= 0x400;

	return IsNavigationPointInPlaypen_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsNavReferenceInPlaypen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FNavReference           oNav                           ( CPF_Parm )

bool ABioBaseSquad::IsNavReferenceInPlaypen ( struct FNavReference oNav )
{
	static UFunction* pFnIsNavReferenceInPlaypen = NULL;

	if ( ! pFnIsNavReferenceInPlaypen )
		pFnIsNavReferenceInPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42156 ];

	ABioBaseSquad_execIsNavReferenceInPlaypen_Parms IsNavReferenceInPlaypen_Parms;
	memcpy ( &IsNavReferenceInPlaypen_Parms.oNav, &oNav, 0x18 );

	pFnIsNavReferenceInPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsNavReferenceInPlaypen, &IsNavReferenceInPlaypen_Parms, NULL );

	pFnIsNavReferenceInPlaypen->FunctionFlags |= 0x400;

	return IsNavReferenceInPlaypen_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsCoverInPlaypen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  oCover                         ( CPF_Parm )

bool ABioBaseSquad::IsCoverInPlaypen ( class AActor* oCover )
{
	static UFunction* pFnIsCoverInPlaypen = NULL;

	if ( ! pFnIsCoverInPlaypen )
		pFnIsCoverInPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 42153 ];

	ABioBaseSquad_execIsCoverInPlaypen_Parms IsCoverInPlaypen_Parms;
	IsCoverInPlaypen_Parms.oCover = oCover;

	pFnIsCoverInPlaypen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCoverInPlaypen, &IsCoverInPlaypen_Parms, NULL );

	pFnIsCoverInPlaypen->FunctionFlags |= 0x400;

	return IsCoverInPlaypen_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ValidatePlayPen
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioBaseSquad::ValidatePlayPen ( )
{
	static UFunction* pFnValidatePlayPen = NULL;

	if ( ! pFnValidatePlayPen )
		pFnValidatePlayPen = (UFunction*) UObject::GObjObjects()->Data[ 42152 ];

	ABioBaseSquad_execValidatePlayPen_Parms ValidatePlayPen_Parms;

	pFnValidatePlayPen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidatePlayPen, &ValidatePlayPen_Parms, NULL );

	pFnValidatePlayPen->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.PerceivedPawnsOfRelation
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  nRelation                      ( CPF_Parm )
// class APawn*                   oPawn                          ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::PerceivedPawnsOfRelation ( unsigned char nRelation, class APawn** oPawn )
{
	static UFunction* pFnPerceivedPawnsOfRelation = NULL;

	if ( ! pFnPerceivedPawnsOfRelation )
		pFnPerceivedPawnsOfRelation = (UFunction*) UObject::GObjObjects()->Data[ 42149 ];

	ABioBaseSquad_execPerceivedPawnsOfRelation_Parms PerceivedPawnsOfRelation_Parms;
	PerceivedPawnsOfRelation_Parms.nRelation = nRelation;

	pFnPerceivedPawnsOfRelation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerceivedPawnsOfRelation, &PerceivedPawnsOfRelation_Parms, NULL );

	pFnPerceivedPawnsOfRelation->FunctionFlags |= 0x400;

	if ( oPawn )
		*oPawn = PerceivedPawnsOfRelation_Parms.oPawn;
};

// Function SFXGame.BioBaseSquad.PerceivedPawns
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::PerceivedPawns ( class APawn** oPawn )
{
	static UFunction* pFnPerceivedPawns = NULL;

	if ( ! pFnPerceivedPawns )
		pFnPerceivedPawns = (UFunction*) UObject::GObjObjects()->Data[ 42147 ];

	ABioBaseSquad_execPerceivedPawns_Parms PerceivedPawns_Parms;

	pFnPerceivedPawns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerceivedPawns, &PerceivedPawns_Parms, NULL );

	pFnPerceivedPawns->FunctionFlags |= 0x400;

	if ( oPawn )
		*oPawn = PerceivedPawns_Parms.oPawn;
};

// Function SFXGame.BioBaseSquad.SquadMembers
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioAiController*        oController                    ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::SquadMembers ( class ABioAiController** oController )
{
	static UFunction* pFnSquadMembers = NULL;

	if ( ! pFnSquadMembers )
		pFnSquadMembers = (UFunction*) UObject::GObjObjects()->Data[ 42145 ];

	ABioBaseSquad_execSquadMembers_Parms SquadMembers_Parms;

	pFnSquadMembers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSquadMembers, &SquadMembers_Parms, NULL );

	pFnSquadMembers->FunctionFlags |= 0x400;

	if ( oController )
		*oController = SquadMembers_Parms.oController;
};

// Function SFXGame.BioBaseSquad.TargetingMe
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   oTargetingWho                  ( CPF_Parm )
// class APawn*                   oPawn                          ( CPF_Parm | CPF_OutParm )

void ABioBaseSquad::TargetingMe ( class APawn* oTargetingWho, class APawn** oPawn )
{
	static UFunction* pFnTargetingMe = NULL;

	if ( ! pFnTargetingMe )
		pFnTargetingMe = (UFunction*) UObject::GObjObjects()->Data[ 42142 ];

	ABioBaseSquad_execTargetingMe_Parms TargetingMe_Parms;
	TargetingMe_Parms.oTargetingWho = oTargetingWho;

	pFnTargetingMe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTargetingMe, &TargetingMe_Parms, NULL );

	pFnTargetingMe->FunctionFlags |= 0x400;

	if ( oPawn )
		*oPawn = TargetingMe_Parms.oPawn;
};

// Function SFXGame.BioBaseSquad.CanShoot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oSource                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )

bool ABioBaseSquad::CanShoot ( class APawn* oSource, class APawn* oTarget )
{
	static UFunction* pFnCanShoot = NULL;

	if ( ! pFnCanShoot )
		pFnCanShoot = (UFunction*) UObject::GObjObjects()->Data[ 42138 ];

	ABioBaseSquad_execCanShoot_Parms CanShoot_Parms;
	CanShoot_Parms.oSource = oSource;
	CanShoot_Parms.oTarget = oTarget;

	pFnCanShoot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanShoot, &CanShoot_Parms, NULL );

	pFnCanShoot->FunctionFlags |= 0x400;

	return CanShoot_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.CanShootExposed
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oSource                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )
// int                            bExposed                       ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::CanShootExposed ( class APawn* oSource, class APawn* oTarget, int* bExposed )
{
	static UFunction* pFnCanShootExposed = NULL;

	if ( ! pFnCanShootExposed )
		pFnCanShootExposed = (UFunction*) UObject::GObjObjects()->Data[ 42133 ];

	ABioBaseSquad_execCanShootExposed_Parms CanShootExposed_Parms;
	CanShootExposed_Parms.oSource = oSource;
	CanShootExposed_Parms.oTarget = oTarget;

	pFnCanShootExposed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanShootExposed, &CanShootExposed_Parms, NULL );

	pFnCanShootExposed->FunctionFlags |= 0x400;

	if ( bExposed )
		*bExposed = CanShootExposed_Parms.bExposed;

	return CanShootExposed_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.RemoveSquadFromPerception
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           pSquad                         ( CPF_Parm )

void ABioBaseSquad::RemoveSquadFromPerception ( class ABioBaseSquad* pSquad )
{
	static UFunction* pFnRemoveSquadFromPerception = NULL;

	if ( ! pFnRemoveSquadFromPerception )
		pFnRemoveSquadFromPerception = (UFunction*) UObject::GObjObjects()->Data[ 42131 ];

	ABioBaseSquad_execRemoveSquadFromPerception_Parms RemoveSquadFromPerception_Parms;
	RemoveSquadFromPerception_Parms.pSquad = pSquad;

	pFnRemoveSquadFromPerception->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveSquadFromPerception, &RemoveSquadFromPerception_Parms, NULL );

	pFnRemoveSquadFromPerception->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.IsPawnPerceived
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

bool ABioBaseSquad::IsPawnPerceived ( class APawn* pPawn )
{
	static UFunction* pFnIsPawnPerceived = NULL;

	if ( ! pFnIsPawnPerceived )
		pFnIsPawnPerceived = (UFunction*) UObject::GObjObjects()->Data[ 42128 ];

	ABioBaseSquad_execIsPawnPerceived_Parms IsPawnPerceived_Parms;
	IsPawnPerceived_Parms.pPawn = pPawn;

	pFnIsPawnPerceived->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPawnPerceived, &IsPawnPerceived_Parms, NULL );

	pFnIsPawnPerceived->FunctionFlags |= 0x400;

	return IsPawnPerceived_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsSquadPerceived
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioBaseSquad*           pSquad                         ( CPF_Parm )

bool ABioBaseSquad::IsSquadPerceived ( class ABioBaseSquad* pSquad )
{
	static UFunction* pFnIsSquadPerceived = NULL;

	if ( ! pFnIsSquadPerceived )
		pFnIsSquadPerceived = (UFunction*) UObject::GObjObjects()->Data[ 42125 ];

	ABioBaseSquad_execIsSquadPerceived_Parms IsSquadPerceived_Parms;
	IsSquadPerceived_Parms.pSquad = pSquad;

	pFnIsSquadPerceived->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSquadPerceived, &IsSquadPerceived_Parms, NULL );

	pFnIsSquadPerceived->FunctionFlags |= 0x400;

	return IsSquadPerceived_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.AddSquadToPerception
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioBaseSquad*           pSquad                         ( CPF_Parm )
// class APawn*                   pSource                        ( CPF_OptionalParm | CPF_Parm )
// class APawn*                   pTarget                        ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::AddSquadToPerception ( class ABioBaseSquad* pSquad, class APawn* pSource, class APawn* pTarget )
{
	static UFunction* pFnAddSquadToPerception = NULL;

	if ( ! pFnAddSquadToPerception )
		pFnAddSquadToPerception = (UFunction*) UObject::GObjObjects()->Data[ 42121 ];

	ABioBaseSquad_execAddSquadToPerception_Parms AddSquadToPerception_Parms;
	AddSquadToPerception_Parms.pSquad = pSquad;
	AddSquadToPerception_Parms.pSource = pSource;
	AddSquadToPerception_Parms.pTarget = pTarget;

	pFnAddSquadToPerception->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddSquadToPerception, &AddSquadToPerception_Parms, NULL );

	pFnAddSquadToPerception->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.ClearMovementOrders
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void ABioBaseSquad::ClearMovementOrders ( int nIndex )
{
	static UFunction* pFnClearMovementOrders = NULL;

	if ( ! pFnClearMovementOrders )
		pFnClearMovementOrders = (UFunction*) UObject::GObjObjects()->Data[ 42119 ];

	ABioBaseSquad_execClearMovementOrders_Parms ClearMovementOrders_Parms;
	ClearMovementOrders_Parms.nIndex = nIndex;

	pFnClearMovementOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearMovementOrders, &ClearMovementOrders_Parms, NULL );

	pFnClearMovementOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.ClearTacticalOrders
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void ABioBaseSquad::ClearTacticalOrders ( int nIndex )
{
	static UFunction* pFnClearTacticalOrders = NULL;

	if ( ! pFnClearTacticalOrders )
		pFnClearTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 42117 ];

	ABioBaseSquad_execClearTacticalOrders_Parms ClearTacticalOrders_Parms;
	ClearTacticalOrders_Parms.nIndex = nIndex;

	pFnClearTacticalOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearTacticalOrders, &ClearTacticalOrders_Parms, NULL );

	pFnClearTacticalOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetSquadFollowFormation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioBaseSquad::GetSquadFollowFormation ( )
{
	static UFunction* pFnGetSquadFollowFormation = NULL;

	if ( ! pFnGetSquadFollowFormation )
		pFnGetSquadFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 42115 ];

	ABioBaseSquad_execGetSquadFollowFormation_Parms GetSquadFollowFormation_Parms;

	pFnGetSquadFollowFormation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadFollowFormation, &GetSquadFollowFormation_Parms, NULL );

	pFnGetSquadFollowFormation->FunctionFlags |= 0x400;

	return GetSquadFollowFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetSquadFollowFormation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  eFormation                     ( CPF_Parm )
// unsigned long                  bForceFormation                ( CPF_OptionalParm | CPF_Parm )
// int                            iSquadMember                   ( CPF_OptionalParm | CPF_Parm )

void ABioBaseSquad::SetSquadFollowFormation ( unsigned char eFormation, unsigned long bForceFormation, int iSquadMember )
{
	static UFunction* pFnSetSquadFollowFormation = NULL;

	if ( ! pFnSetSquadFollowFormation )
		pFnSetSquadFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 42111 ];

	ABioBaseSquad_execSetSquadFollowFormation_Parms SetSquadFollowFormation_Parms;
	SetSquadFollowFormation_Parms.eFormation = eFormation;
	SetSquadFollowFormation_Parms.bForceFormation = bForceFormation;
	SetSquadFollowFormation_Parms.iSquadMember = iSquadMember;

	pFnSetSquadFollowFormation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSquadFollowFormation, &SetSquadFollowFormation_Parms, NULL );

	pFnSetSquadFollowFormation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.SetMemberAttackTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// class APawn*                   oAttackTarget                  ( CPF_Parm )

void ABioBaseSquad::SetMemberAttackTarget ( int nIndex, class APawn* oAttackTarget )
{
	static UFunction* pFnSetMemberAttackTarget = NULL;

	if ( ! pFnSetMemberAttackTarget )
		pFnSetMemberAttackTarget = (UFunction*) UObject::GObjObjects()->Data[ 42108 ];

	ABioBaseSquad_execSetMemberAttackTarget_Parms SetMemberAttackTarget_Parms;
	SetMemberAttackTarget_Parms.nIndex = nIndex;
	SetMemberAttackTarget_Parms.oAttackTarget = oAttackTarget;

	pFnSetMemberAttackTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberAttackTarget, &SetMemberAttackTarget_Parms, NULL );

	pFnSetMemberAttackTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberAttackTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class APawn* ABioBaseSquad::GetMemberAttackTarget ( int nIndex )
{
	static UFunction* pFnGetMemberAttackTarget = NULL;

	if ( ! pFnGetMemberAttackTarget )
		pFnGetMemberAttackTarget = (UFunction*) UObject::GObjObjects()->Data[ 42105 ];

	ABioBaseSquad_execGetMemberAttackTarget_Parms GetMemberAttackTarget_Parms;
	GetMemberAttackTarget_Parms.nIndex = nIndex;

	pFnGetMemberAttackTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberAttackTarget, &GetMemberAttackTarget_Parms, NULL );

	pFnGetMemberAttackTarget->FunctionFlags |= 0x400;

	return GetMemberAttackTarget_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberHoldPosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vPosition                      ( CPF_Parm )

void ABioBaseSquad::SetMemberHoldPosition ( int nIndex, struct FVector vPosition )
{
	static UFunction* pFnSetMemberHoldPosition = NULL;

	if ( ! pFnSetMemberHoldPosition )
		pFnSetMemberHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 42102 ];

	ABioBaseSquad_execSetMemberHoldPosition_Parms SetMemberHoldPosition_Parms;
	SetMemberHoldPosition_Parms.nIndex = nIndex;
	memcpy ( &SetMemberHoldPosition_Parms.vPosition, &vPosition, 0xC );

	pFnSetMemberHoldPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberHoldPosition, &SetMemberHoldPosition_Parms, NULL );

	pFnSetMemberHoldPosition->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberHoldPosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

struct FVector ABioBaseSquad::GetMemberHoldPosition ( int nIndex )
{
	static UFunction* pFnGetMemberHoldPosition = NULL;

	if ( ! pFnGetMemberHoldPosition )
		pFnGetMemberHoldPosition = (UFunction*) UObject::GObjObjects()->Data[ 42099 ];

	ABioBaseSquad_execGetMemberHoldPosition_Parms GetMemberHoldPosition_Parms;
	GetMemberHoldPosition_Parms.nIndex = nIndex;

	pFnGetMemberHoldPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberHoldPosition, &GetMemberHoldPosition_Parms, NULL );

	pFnGetMemberHoldPosition->FunctionFlags |= 0x400;

	return GetMemberHoldPosition_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetMemberActionOrderAssigned
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool ABioBaseSquad::GetMemberActionOrderAssigned ( int nIndex )
{
	static UFunction* pFnGetMemberActionOrderAssigned = NULL;

	if ( ! pFnGetMemberActionOrderAssigned )
		pFnGetMemberActionOrderAssigned = (UFunction*) UObject::GObjObjects()->Data[ 42096 ];

	ABioBaseSquad_execGetMemberActionOrderAssigned_Parms GetMemberActionOrderAssigned_Parms;
	GetMemberActionOrderAssigned_Parms.nIndex = nIndex;

	pFnGetMemberActionOrderAssigned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberActionOrderAssigned, &GetMemberActionOrderAssigned_Parms, NULL );

	pFnGetMemberActionOrderAssigned->FunctionFlags |= 0x400;

	return GetMemberActionOrderAssigned_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetMemberDelayedSwitchWeapon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

unsigned char ABioBaseSquad::GetMemberDelayedSwitchWeapon ( int nIndex )
{
	static UFunction* pFnGetMemberDelayedSwitchWeapon = NULL;

	if ( ! pFnGetMemberDelayedSwitchWeapon )
		pFnGetMemberDelayedSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 42093 ];

	ABioBaseSquad_execGetMemberDelayedSwitchWeapon_Parms GetMemberDelayedSwitchWeapon_Parms;
	GetMemberDelayedSwitchWeapon_Parms.nIndex = nIndex;

	pFnGetMemberDelayedSwitchWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberDelayedSwitchWeapon, &GetMemberDelayedSwitchWeapon_Parms, NULL );

	pFnGetMemberDelayedSwitchWeapon->FunctionFlags |= 0x400;

	return GetMemberDelayedSwitchWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberSwitchWeapon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned char                  eWeapon                        ( CPF_Parm )

void ABioBaseSquad::SetMemberSwitchWeapon ( int nIndex, unsigned char eWeapon )
{
	static UFunction* pFnSetMemberSwitchWeapon = NULL;

	if ( ! pFnSetMemberSwitchWeapon )
		pFnSetMemberSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 42090 ];

	ABioBaseSquad_execSetMemberSwitchWeapon_Parms SetMemberSwitchWeapon_Parms;
	SetMemberSwitchWeapon_Parms.nIndex = nIndex;
	SetMemberSwitchWeapon_Parms.eWeapon = eWeapon;

	pFnSetMemberSwitchWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberSwitchWeapon, &SetMemberSwitchWeapon_Parms, NULL );

	pFnSetMemberSwitchWeapon->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberSwitchWeapon
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

unsigned char ABioBaseSquad::GetMemberSwitchWeapon ( int nIndex )
{
	static UFunction* pFnGetMemberSwitchWeapon = NULL;

	if ( ! pFnGetMemberSwitchWeapon )
		pFnGetMemberSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 42087 ];

	ABioBaseSquad_execGetMemberSwitchWeapon_Parms GetMemberSwitchWeapon_Parms;
	GetMemberSwitchWeapon_Parms.nIndex = nIndex;

	pFnGetMemberSwitchWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberSwitchWeapon, &GetMemberSwitchWeapon_Parms, NULL );

	pFnGetMemberSwitchWeapon->FunctionFlags |= 0x400;

	return GetMemberSwitchWeapon_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberMoveOrderAssigned
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bOrderAssigned                 ( CPF_Parm )

void ABioBaseSquad::SetMemberMoveOrderAssigned ( int nIndex, unsigned long bOrderAssigned )
{
	static UFunction* pFnSetMemberMoveOrderAssigned = NULL;

	if ( ! pFnSetMemberMoveOrderAssigned )
		pFnSetMemberMoveOrderAssigned = (UFunction*) UObject::GObjObjects()->Data[ 42084 ];

	ABioBaseSquad_execSetMemberMoveOrderAssigned_Parms SetMemberMoveOrderAssigned_Parms;
	SetMemberMoveOrderAssigned_Parms.nIndex = nIndex;
	SetMemberMoveOrderAssigned_Parms.bOrderAssigned = bOrderAssigned;

	pFnSetMemberMoveOrderAssigned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberMoveOrderAssigned, &SetMemberMoveOrderAssigned_Parms, NULL );

	pFnSetMemberMoveOrderAssigned->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberMoveOrderAssigned
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool ABioBaseSquad::GetMemberMoveOrderAssigned ( int nIndex )
{
	static UFunction* pFnGetMemberMoveOrderAssigned = NULL;

	if ( ! pFnGetMemberMoveOrderAssigned )
		pFnGetMemberMoveOrderAssigned = (UFunction*) UObject::GObjObjects()->Data[ 42081 ];

	ABioBaseSquad_execGetMemberMoveOrderAssigned_Parms GetMemberMoveOrderAssigned_Parms;
	GetMemberMoveOrderAssigned_Parms.nIndex = nIndex;

	pFnGetMemberMoveOrderAssigned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberMoveOrderAssigned, &GetMemberMoveOrderAssigned_Parms, NULL );

	pFnGetMemberMoveOrderAssigned->FunctionFlags |= 0x400;

	return GetMemberMoveOrderAssigned_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberCurrentlyMoving
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bMoving                        ( CPF_Parm )

void ABioBaseSquad::SetMemberCurrentlyMoving ( int nIndex, unsigned long bMoving )
{
	static UFunction* pFnSetMemberCurrentlyMoving = NULL;

	if ( ! pFnSetMemberCurrentlyMoving )
		pFnSetMemberCurrentlyMoving = (UFunction*) UObject::GObjObjects()->Data[ 42078 ];

	ABioBaseSquad_execSetMemberCurrentlyMoving_Parms SetMemberCurrentlyMoving_Parms;
	SetMemberCurrentlyMoving_Parms.nIndex = nIndex;
	SetMemberCurrentlyMoving_Parms.bMoving = bMoving;

	pFnSetMemberCurrentlyMoving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberCurrentlyMoving, &SetMemberCurrentlyMoving_Parms, NULL );

	pFnSetMemberCurrentlyMoving->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberCurrentlyMoving
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool ABioBaseSquad::GetMemberCurrentlyMoving ( int nIndex )
{
	static UFunction* pFnGetMemberCurrentlyMoving = NULL;

	if ( ! pFnGetMemberCurrentlyMoving )
		pFnGetMemberCurrentlyMoving = (UFunction*) UObject::GObjObjects()->Data[ 42075 ];

	ABioBaseSquad_execGetMemberCurrentlyMoving_Parms GetMemberCurrentlyMoving_Parms;
	GetMemberCurrentlyMoving_Parms.nIndex = nIndex;

	pFnGetMemberCurrentlyMoving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberCurrentlyMoving, &GetMemberCurrentlyMoving_Parms, NULL );

	pFnGetMemberCurrentlyMoving->FunctionFlags |= 0x400;

	return GetMemberCurrentlyMoving_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberFormation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned char                  eFormation                     ( CPF_Parm )

void ABioBaseSquad::SetMemberFormation ( int nIndex, unsigned char eFormation )
{
	static UFunction* pFnSetMemberFormation = NULL;

	if ( ! pFnSetMemberFormation )
		pFnSetMemberFormation = (UFunction*) UObject::GObjObjects()->Data[ 42072 ];

	ABioBaseSquad_execSetMemberFormation_Parms SetMemberFormation_Parms;
	SetMemberFormation_Parms.nIndex = nIndex;
	SetMemberFormation_Parms.eFormation = eFormation;

	pFnSetMemberFormation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberFormation, &SetMemberFormation_Parms, NULL );

	pFnSetMemberFormation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberFormation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

unsigned char ABioBaseSquad::GetMemberFormation ( int nIndex )
{
	static UFunction* pFnGetMemberFormation = NULL;

	if ( ! pFnGetMemberFormation )
		pFnGetMemberFormation = (UFunction*) UObject::GObjObjects()->Data[ 42069 ];

	ABioBaseSquad_execGetMemberFormation_Parms GetMemberFormation_Parms;
	GetMemberFormation_Parms.nIndex = nIndex;

	pFnGetMemberFormation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberFormation, &GetMemberFormation_Parms, NULL );

	pFnGetMemberFormation->FunctionFlags |= 0x400;

	return GetMemberFormation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberTargetLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioBaseSquad::SetMemberTargetLocation ( int nIndex, struct FVector vLocation )
{
	static UFunction* pFnSetMemberTargetLocation = NULL;

	if ( ! pFnSetMemberTargetLocation )
		pFnSetMemberTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 42066 ];

	ABioBaseSquad_execSetMemberTargetLocation_Parms SetMemberTargetLocation_Parms;
	SetMemberTargetLocation_Parms.nIndex = nIndex;
	memcpy ( &SetMemberTargetLocation_Parms.vLocation, &vLocation, 0xC );

	pFnSetMemberTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberTargetLocation, &SetMemberTargetLocation_Parms, NULL );

	pFnSetMemberTargetLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberTargetLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

struct FVector ABioBaseSquad::GetMemberTargetLocation ( int nIndex )
{
	static UFunction* pFnGetMemberTargetLocation = NULL;

	if ( ! pFnGetMemberTargetLocation )
		pFnGetMemberTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 42063 ];

	ABioBaseSquad_execGetMemberTargetLocation_Parms GetMemberTargetLocation_Parms;
	GetMemberTargetLocation_Parms.nIndex = nIndex;

	pFnGetMemberTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberTargetLocation, &GetMemberTargetLocation_Parms, NULL );

	pFnGetMemberTargetLocation->FunctionFlags |= 0x400;

	return GetMemberTargetLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberTacticalPower
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FName                   nmTacticalPower                ( CPF_Parm )

void ABioBaseSquad::SetMemberTacticalPower ( int nIndex, struct FName nmTacticalPower )
{
	static UFunction* pFnSetMemberTacticalPower = NULL;

	if ( ! pFnSetMemberTacticalPower )
		pFnSetMemberTacticalPower = (UFunction*) UObject::GObjObjects()->Data[ 42060 ];

	ABioBaseSquad_execSetMemberTacticalPower_Parms SetMemberTacticalPower_Parms;
	SetMemberTacticalPower_Parms.nIndex = nIndex;
	memcpy ( &SetMemberTacticalPower_Parms.nmTacticalPower, &nmTacticalPower, 0x8 );

	pFnSetMemberTacticalPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberTacticalPower, &SetMemberTacticalPower_Parms, NULL );

	pFnSetMemberTacticalPower->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberTacticalPower
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

struct FName ABioBaseSquad::GetMemberTacticalPower ( int nIndex )
{
	static UFunction* pFnGetMemberTacticalPower = NULL;

	if ( ! pFnGetMemberTacticalPower )
		pFnGetMemberTacticalPower = (UFunction*) UObject::GObjObjects()->Data[ 42057 ];

	ABioBaseSquad_execGetMemberTacticalPower_Parms GetMemberTacticalPower_Parms;
	GetMemberTacticalPower_Parms.nIndex = nIndex;

	pFnGetMemberTacticalPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberTacticalPower, &GetMemberTacticalPower_Parms, NULL );

	pFnGetMemberTacticalPower->FunctionFlags |= 0x400;

	return GetMemberTacticalPower_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberTacticalAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned char                  eTacticalAction                ( CPF_Parm )

void ABioBaseSquad::SetMemberTacticalAction ( int nIndex, unsigned char eTacticalAction )
{
	static UFunction* pFnSetMemberTacticalAction = NULL;

	if ( ! pFnSetMemberTacticalAction )
		pFnSetMemberTacticalAction = (UFunction*) UObject::GObjObjects()->Data[ 42054 ];

	ABioBaseSquad_execSetMemberTacticalAction_Parms SetMemberTacticalAction_Parms;
	SetMemberTacticalAction_Parms.nIndex = nIndex;
	SetMemberTacticalAction_Parms.eTacticalAction = eTacticalAction;

	pFnSetMemberTacticalAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberTacticalAction, &SetMemberTacticalAction_Parms, NULL );

	pFnSetMemberTacticalAction->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberTacticalAction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

unsigned char ABioBaseSquad::GetMemberTacticalAction ( int nIndex )
{
	static UFunction* pFnGetMemberTacticalAction = NULL;

	if ( ! pFnGetMemberTacticalAction )
		pFnGetMemberTacticalAction = (UFunction*) UObject::GObjObjects()->Data[ 42051 ];

	ABioBaseSquad_execGetMemberTacticalAction_Parms GetMemberTacticalAction_Parms;
	GetMemberTacticalAction_Parms.nIndex = nIndex;

	pFnGetMemberTacticalAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberTacticalAction, &GetMemberTacticalAction_Parms, NULL );

	pFnGetMemberTacticalAction->FunctionFlags |= 0x400;

	return GetMemberTacticalAction_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberCoverAssigned
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// unsigned long                  bCoverAssigned                 ( CPF_Parm )

void ABioBaseSquad::SetMemberCoverAssigned ( int nIndex, unsigned long bCoverAssigned )
{
	static UFunction* pFnSetMemberCoverAssigned = NULL;

	if ( ! pFnSetMemberCoverAssigned )
		pFnSetMemberCoverAssigned = (UFunction*) UObject::GObjObjects()->Data[ 42048 ];

	ABioBaseSquad_execSetMemberCoverAssigned_Parms SetMemberCoverAssigned_Parms;
	SetMemberCoverAssigned_Parms.nIndex = nIndex;
	SetMemberCoverAssigned_Parms.bCoverAssigned = bCoverAssigned;

	pFnSetMemberCoverAssigned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberCoverAssigned, &SetMemberCoverAssigned_Parms, NULL );

	pFnSetMemberCoverAssigned->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberCoverAssigned
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool ABioBaseSquad::GetMemberCoverAssigned ( int nIndex )
{
	static UFunction* pFnGetMemberCoverAssigned = NULL;

	if ( ! pFnGetMemberCoverAssigned )
		pFnGetMemberCoverAssigned = (UFunction*) UObject::GObjObjects()->Data[ 42045 ];

	ABioBaseSquad_execGetMemberCoverAssigned_Parms GetMemberCoverAssigned_Parms;
	GetMemberCoverAssigned_Parms.nIndex = nIndex;

	pFnGetMemberCoverAssigned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberCoverAssigned, &GetMemberCoverAssigned_Parms, NULL );

	pFnGetMemberCoverAssigned->FunctionFlags |= 0x400;

	return GetMemberCoverAssigned_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberCoverRecord
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FCoverRecord            stCoverRecord                  ( CPF_Parm )

void ABioBaseSquad::SetMemberCoverRecord ( int nIndex, struct FCoverRecord stCoverRecord )
{
	static UFunction* pFnSetMemberCoverRecord = NULL;

	if ( ! pFnSetMemberCoverRecord )
		pFnSetMemberCoverRecord = (UFunction*) UObject::GObjObjects()->Data[ 42042 ];

	ABioBaseSquad_execSetMemberCoverRecord_Parms SetMemberCoverRecord_Parms;
	SetMemberCoverRecord_Parms.nIndex = nIndex;
	memcpy ( &SetMemberCoverRecord_Parms.stCoverRecord, &stCoverRecord, 0x14 );

	pFnSetMemberCoverRecord->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberCoverRecord, &SetMemberCoverRecord_Parms, NULL );

	pFnSetMemberCoverRecord->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberCoverRecord
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FCoverRecord            out_stCoverRecord              ( CPF_Parm | CPF_OutParm )

bool ABioBaseSquad::GetMemberCoverRecord ( int nIndex, struct FCoverRecord* out_stCoverRecord )
{
	static UFunction* pFnGetMemberCoverRecord = NULL;

	if ( ! pFnGetMemberCoverRecord )
		pFnGetMemberCoverRecord = (UFunction*) UObject::GObjObjects()->Data[ 42038 ];

	ABioBaseSquad_execGetMemberCoverRecord_Parms GetMemberCoverRecord_Parms;
	GetMemberCoverRecord_Parms.nIndex = nIndex;

	pFnGetMemberCoverRecord->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberCoverRecord, &GetMemberCoverRecord_Parms, NULL );

	pFnGetMemberCoverRecord->FunctionFlags |= 0x400;

	if ( out_stCoverRecord )
		memcpy ( out_stCoverRecord, &GetMemberCoverRecord_Parms.out_stCoverRecord, 0x14 );

	return GetMemberCoverRecord_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberMoveDelayTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// float                          fMoveDelayTime                 ( CPF_Parm )

void ABioBaseSquad::SetMemberMoveDelayTime ( int nIndex, float fMoveDelayTime )
{
	static UFunction* pFnSetMemberMoveDelayTime = NULL;

	if ( ! pFnSetMemberMoveDelayTime )
		pFnSetMemberMoveDelayTime = (UFunction*) UObject::GObjObjects()->Data[ 42035 ];

	ABioBaseSquad_execSetMemberMoveDelayTime_Parms SetMemberMoveDelayTime_Parms;
	SetMemberMoveDelayTime_Parms.nIndex = nIndex;
	SetMemberMoveDelayTime_Parms.fMoveDelayTime = fMoveDelayTime;

	pFnSetMemberMoveDelayTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberMoveDelayTime, &SetMemberMoveDelayTime_Parms, NULL );

	pFnSetMemberMoveDelayTime->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberMoveDelayTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

float ABioBaseSquad::GetMemberMoveDelayTime ( int nIndex )
{
	static UFunction* pFnGetMemberMoveDelayTime = NULL;

	if ( ! pFnGetMemberMoveDelayTime )
		pFnGetMemberMoveDelayTime = (UFunction*) UObject::GObjObjects()->Data[ 42032 ];

	ABioBaseSquad_execGetMemberMoveDelayTime_Parms GetMemberMoveDelayTime_Parms;
	GetMemberMoveDelayTime_Parms.nIndex = nIndex;

	pFnGetMemberMoveDelayTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberMoveDelayTime, &GetMemberMoveDelayTime_Parms, NULL );

	pFnGetMemberMoveDelayTime->FunctionFlags |= 0x400;

	return GetMemberMoveDelayTime_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberMoveLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioBaseSquad::SetMemberMoveLocation ( int nIndex, struct FVector vLocation )
{
	static UFunction* pFnSetMemberMoveLocation = NULL;

	if ( ! pFnSetMemberMoveLocation )
		pFnSetMemberMoveLocation = (UFunction*) UObject::GObjObjects()->Data[ 42029 ];

	ABioBaseSquad_execSetMemberMoveLocation_Parms SetMemberMoveLocation_Parms;
	SetMemberMoveLocation_Parms.nIndex = nIndex;
	memcpy ( &SetMemberMoveLocation_Parms.vLocation, &vLocation, 0xC );

	pFnSetMemberMoveLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberMoveLocation, &SetMemberMoveLocation_Parms, NULL );

	pFnSetMemberMoveLocation->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberMoveLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

struct FVector ABioBaseSquad::GetMemberMoveLocation ( int nIndex )
{
	static UFunction* pFnGetMemberMoveLocation = NULL;

	if ( ! pFnGetMemberMoveLocation )
		pFnGetMemberMoveLocation = (UFunction*) UObject::GObjObjects()->Data[ 42026 ];

	ABioBaseSquad_execGetMemberMoveLocation_Parms GetMemberMoveLocation_Parms;
	GetMemberMoveLocation_Parms.nIndex = nIndex;

	pFnGetMemberMoveLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberMoveLocation, &GetMemberMoveLocation_Parms, NULL );

	pFnGetMemberMoveLocation->FunctionFlags |= 0x400;

	return GetMemberMoveLocation_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetMemberMoveIndicator
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// class ABioTacticalMoveToIndicator* oIndicator                     ( CPF_Parm )

void ABioBaseSquad::SetMemberMoveIndicator ( int nIndex, class ABioTacticalMoveToIndicator* oIndicator )
{
	static UFunction* pFnSetMemberMoveIndicator = NULL;

	if ( ! pFnSetMemberMoveIndicator )
		pFnSetMemberMoveIndicator = (UFunction*) UObject::GObjObjects()->Data[ 42023 ];

	ABioBaseSquad_execSetMemberMoveIndicator_Parms SetMemberMoveIndicator_Parms;
	SetMemberMoveIndicator_Parms.nIndex = nIndex;
	SetMemberMoveIndicator_Parms.oIndicator = oIndicator;

	pFnSetMemberMoveIndicator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMemberMoveIndicator, &SetMemberMoveIndicator_Parms, NULL );

	pFnSetMemberMoveIndicator->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberMoveIndicator
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioTacticalMoveToIndicator* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class ABioTacticalMoveToIndicator* ABioBaseSquad::GetMemberMoveIndicator ( int nIndex )
{
	static UFunction* pFnGetMemberMoveIndicator = NULL;

	if ( ! pFnGetMemberMoveIndicator )
		pFnGetMemberMoveIndicator = (UFunction*) UObject::GObjObjects()->Data[ 42020 ];

	ABioBaseSquad_execGetMemberMoveIndicator_Parms GetMemberMoveIndicator_Parms;
	GetMemberMoveIndicator_Parms.nIndex = nIndex;

	pFnGetMemberMoveIndicator->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberMoveIndicator, &GetMemberMoveIndicator_Parms, NULL );

	pFnGetMemberMoveIndicator->FunctionFlags |= 0x400;

	return GetMemberMoveIndicator_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.RemoveMemberByIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

bool ABioBaseSquad::RemoveMemberByIndex ( int nIndex )
{
	static UFunction* pFnRemoveMemberByIndex = NULL;

	if ( ! pFnRemoveMemberByIndex )
		pFnRemoveMemberByIndex = (UFunction*) UObject::GObjObjects()->Data[ 42017 ];

	ABioBaseSquad_execRemoveMemberByIndex_Parms RemoveMemberByIndex_Parms;
	RemoveMemberByIndex_Parms.nIndex = nIndex;

	pFnRemoveMemberByIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveMemberByIndex, &RemoveMemberByIndex_Parms, NULL );

	pFnRemoveMemberByIndex->FunctionFlags |= 0x400;

	return RemoveMemberByIndex_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.RemoveMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

bool ABioBaseSquad::RemoveMember ( class APawn* pPawn )
{
	static UFunction* pFnRemoveMember = NULL;

	if ( ! pFnRemoveMember )
		pFnRemoveMember = (UFunction*) UObject::GObjObjects()->Data[ 42014 ];

	ABioBaseSquad_execRemoveMember_Parms RemoveMember_Parms;
	RemoveMember_Parms.pPawn = pPawn;

	pFnRemoveMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveMember, &RemoveMember_Parms, NULL );

	pFnRemoveMember->FunctionFlags |= 0x400;

	return RemoveMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ClearSquad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioBaseSquad::ClearSquad ( )
{
	static UFunction* pFnClearSquad = NULL;

	if ( ! pFnClearSquad )
		pFnClearSquad = (UFunction*) UObject::GObjObjects()->Data[ 42013 ];

	ABioBaseSquad_execClearSquad_Parms ClearSquad_Parms;

	pFnClearSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSquad, &ClearSquad_Parms, NULL );

	pFnClearSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.GetMemberIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

int ABioBaseSquad::GetMemberIndex ( class APawn* pPawn )
{
	static UFunction* pFnGetMemberIndex = NULL;

	if ( ! pFnGetMemberIndex )
		pFnGetMemberIndex = (UFunction*) UObject::GObjObjects()->Data[ 42010 ];

	ABioBaseSquad_execGetMemberIndex_Parms GetMemberIndex_Parms;
	GetMemberIndex_Parms.pPawn = pPawn;

	pFnGetMemberIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberIndex, &GetMemberIndex_Parms, NULL );

	pFnGetMemberIndex->FunctionFlags |= 0x400;

	return GetMemberIndex_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetMember
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )

class APawn* ABioBaseSquad::GetMember ( int nIndex )
{
	static UFunction* pFnGetMember = NULL;

	if ( ! pFnGetMember )
		pFnGetMember = (UFunction*) UObject::GObjObjects()->Data[ 42007 ];

	ABioBaseSquad_execGetMember_Parms GetMember_Parms;
	GetMember_Parms.nIndex = nIndex;

	pFnGetMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMember, &GetMember_Parms, NULL );

	pFnGetMember->FunctionFlags |= 0x400;

	return GetMember_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetSquadLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APawn* ABioBaseSquad::GetSquadLeader ( )
{
	static UFunction* pFnGetSquadLeader = NULL;

	if ( ! pFnGetSquadLeader )
		pFnGetSquadLeader = (UFunction*) UObject::GObjObjects()->Data[ 42005 ];

	ABioBaseSquad_execGetSquadLeader_Parms GetSquadLeader_Parms;

	pFnGetSquadLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadLeader, &GetSquadLeader_Parms, NULL );

	pFnGetSquadLeader->FunctionFlags |= 0x400;

	return GetSquadLeader_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.SetSquadLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

bool ABioBaseSquad::SetSquadLeader ( class APawn* pPawn )
{
	static UFunction* pFnSetSquadLeader = NULL;

	if ( ! pFnSetSquadLeader )
		pFnSetSquadLeader = (UFunction*) UObject::GObjObjects()->Data[ 42002 ];

	ABioBaseSquad_execSetSquadLeader_Parms SetSquadLeader_Parms;
	SetSquadLeader_Parms.pPawn = pPawn;

	pFnSetSquadLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSquadLeader, &SetSquadLeader_Parms, NULL );

	pFnSetSquadLeader->FunctionFlags |= 0x400;

	return SetSquadLeader_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetHackedSquadSize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetHackedSquadSize ( )
{
	static UFunction* pFnGetHackedSquadSize = NULL;

	if ( ! pFnGetHackedSquadSize )
		pFnGetHackedSquadSize = (UFunction*) UObject::GObjObjects()->Data[ 42000 ];

	ABioBaseSquad_execGetHackedSquadSize_Parms GetHackedSquadSize_Parms;

	pFnGetHackedSquadSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHackedSquadSize, &GetHackedSquadSize_Parms, NULL );

	pFnGetHackedSquadSize->FunctionFlags |= 0x400;

	return GetHackedSquadSize_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.GetSquadSize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioBaseSquad::GetSquadSize ( )
{
	static UFunction* pFnGetSquadSize = NULL;

	if ( ! pFnGetSquadSize )
		pFnGetSquadSize = (UFunction*) UObject::GObjObjects()->Data[ 41998 ];

	ABioBaseSquad_execGetSquadSize_Parms GetSquadSize_Parms;

	pFnGetSquadSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadSize, &GetSquadSize_Parms, NULL );

	pFnGetSquadSize->FunctionFlags |= 0x400;

	return GetSquadSize_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.IsInSquad
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

bool ABioBaseSquad::IsInSquad ( class APawn* pPawn )
{
	static UFunction* pFnIsInSquad = NULL;

	if ( ! pFnIsInSquad )
		pFnIsInSquad = (UFunction*) UObject::GObjObjects()->Data[ 41995 ];

	ABioBaseSquad_execIsInSquad_Parms IsInSquad_Parms;
	IsInSquad_Parms.pPawn = pPawn;

	pFnIsInSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInSquad, &IsInSquad_Parms, NULL );

	pFnIsInSquad->FunctionFlags |= 0x400;

	return IsInSquad_Parms.ReturnValue;
};

// Function SFXGame.BioBaseSquad.ApplyTacticalOrders
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oMember                        ( CPF_Parm )

void ABioBaseSquad::ApplyTacticalOrders ( class AActor* oMember )
{
	static UFunction* pFnApplyTacticalOrders = NULL;

	if ( ! pFnApplyTacticalOrders )
		pFnApplyTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 41993 ];

	ABioBaseSquad_execApplyTacticalOrders_Parms ApplyTacticalOrders_Parms;
	ApplyTacticalOrders_Parms.oMember = oMember;

	pFnApplyTacticalOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyTacticalOrders, &ApplyTacticalOrders_Parms, NULL );

	pFnApplyTacticalOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioBaseSquad.OnSetSquadFollowFormation
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eFormation                     ( CPF_Parm )

void ABioBaseSquad::eventOnSetSquadFollowFormation ( unsigned char eFormation )
{
	static UFunction* pFnOnSetSquadFollowFormation = NULL;

	if ( ! pFnOnSetSquadFollowFormation )
		pFnOnSetSquadFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 41991 ];

	ABioBaseSquad_eventOnSetSquadFollowFormation_Parms OnSetSquadFollowFormation_Parms;
	OnSetSquadFollowFormation_Parms.eFormation = eFormation;

	this->ProcessEvent ( pFnOnSetSquadFollowFormation, &OnSetSquadFollowFormation_Parms, NULL );
};

// Function SFXGame.BioFormations.GetEscapeDistance
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Idx                            ( CPF_Parm )

int UBioFormations::GetEscapeDistance ( int Idx )
{
	static UFunction* pFnGetEscapeDistance = NULL;

	if ( ! pFnGetEscapeDistance )
		pFnGetEscapeDistance = (UFunction*) UObject::GObjObjects()->Data[ 42686 ];

	UBioFormations_execGetEscapeDistance_Parms GetEscapeDistance_Parms;
	GetEscapeDistance_Parms.Idx = Idx;

	this->ProcessEvent ( pFnGetEscapeDistance, &GetEscapeDistance_Parms, NULL );

	return GetEscapeDistance_Parms.ReturnValue;
};

// Function SFXGame.BioFormations.GetFormationFacing
// [0x00022002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Idx                            ( CPF_Parm )
// unsigned long                  aInvertFormation               ( CPF_Parm )

struct FRotator UBioFormations::GetFormationFacing ( int Idx, unsigned long aInvertFormation )
{
	static UFunction* pFnGetFormationFacing = NULL;

	if ( ! pFnGetFormationFacing )
		pFnGetFormationFacing = (UFunction*) UObject::GObjObjects()->Data[ 42678 ];

	UBioFormations_execGetFormationFacing_Parms GetFormationFacing_Parms;
	GetFormationFacing_Parms.Idx = Idx;
	GetFormationFacing_Parms.aInvertFormation = aInvertFormation;

	this->ProcessEvent ( pFnGetFormationFacing, &GetFormationFacing_Parms, NULL );

	return GetFormationFacing_Parms.ReturnValue;
};

// Function SFXGame.BioFormations.GetFormationOffset
// [0x00022002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Idx                            ( CPF_Parm )
// unsigned long                  aInvertFormation               ( CPF_Parm )

struct FVector UBioFormations::GetFormationOffset ( int Idx, unsigned long aInvertFormation )
{
	static UFunction* pFnGetFormationOffset = NULL;

	if ( ! pFnGetFormationOffset )
		pFnGetFormationOffset = (UFunction*) UObject::GObjObjects()->Data[ 42715 ];

	UBioFormations_execGetFormationOffset_Parms GetFormationOffset_Parms;
	GetFormationOffset_Parms.Idx = Idx;
	GetFormationOffset_Parms.aInvertFormation = aInvertFormation;

	this->ProcessEvent ( pFnGetFormationOffset, &GetFormationOffset_Parms, NULL );

	return GetFormationOffset_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetPercentHealthOnResurrection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPlayerSquad::GetPercentHealthOnResurrection ( )
{
	static UFunction* pFnGetPercentHealthOnResurrection = NULL;

	if ( ! pFnGetPercentHealthOnResurrection )
		pFnGetPercentHealthOnResurrection = (UFunction*) UObject::GObjObjects()->Data[ 43793 ];

	ABioPlayerSquad_execGetPercentHealthOnResurrection_Parms GetPercentHealthOnResurrection_Parms;

	pFnGetPercentHealthOnResurrection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPercentHealthOnResurrection, &GetPercentHealthOnResurrection_Parms, NULL );

	pFnGetPercentHealthOnResurrection->FunctionFlags |= 0x400;

	return GetPercentHealthOnResurrection_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetCombatCooldownTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ABioPlayerSquad::GetCombatCooldownTime ( )
{
	static UFunction* pFnGetCombatCooldownTime = NULL;

	if ( ! pFnGetCombatCooldownTime )
		pFnGetCombatCooldownTime = (UFunction*) UObject::GObjObjects()->Data[ 57409 ];

	ABioPlayerSquad_execGetCombatCooldownTime_Parms GetCombatCooldownTime_Parms;

	pFnGetCombatCooldownTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCombatCooldownTime, &GetCombatCooldownTime_Parms, NULL );

	pFnGetCombatCooldownTime->FunctionFlags |= 0x400;

	return GetCombatCooldownTime_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.OnSetAttackTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )

void ABioPlayerSquad::eventOnSetAttackTarget ( class APawn* pPawn, class AActor* pTarget )
{
	static UFunction* pFnOnSetAttackTarget = NULL;

	if ( ! pFnOnSetAttackTarget )
		pFnOnSetAttackTarget = (UFunction*) UObject::GObjObjects()->Data[ 57406 ];

	ABioPlayerSquad_eventOnSetAttackTarget_Parms OnSetAttackTarget_Parms;
	OnSetAttackTarget_Parms.pPawn = pPawn;
	OnSetAttackTarget_Parms.pTarget = pTarget;

	this->ProcessEvent ( pFnOnSetAttackTarget, &OnSetAttackTarget_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnSetSquadFollowFormation
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eFormation                     ( CPF_Parm )

void ABioPlayerSquad::eventOnSetSquadFollowFormation ( unsigned char eFormation )
{
	static UFunction* pFnOnSetSquadFollowFormation = NULL;

	if ( ! pFnOnSetSquadFollowFormation )
		pFnOnSetSquadFollowFormation = (UFunction*) UObject::GObjObjects()->Data[ 57404 ];

	ABioPlayerSquad_eventOnSetSquadFollowFormation_Parms OnSetSquadFollowFormation_Parms;
	OnSetSquadFollowFormation_Parms.eFormation = eFormation;

	this->ProcessEvent ( pFnOnSetSquadFollowFormation, &OnSetSquadFollowFormation_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.UpdateCombatTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ABioPlayerSquad::UpdateCombatTimer ( float fDeltaTime )
{
	static UFunction* pFnUpdateCombatTimer = NULL;

	if ( ! pFnUpdateCombatTimer )
		pFnUpdateCombatTimer = (UFunction*) UObject::GObjObjects()->Data[ 57402 ];

	ABioPlayerSquad_execUpdateCombatTimer_Parms UpdateCombatTimer_Parms;
	UpdateCombatTimer_Parms.fDeltaTime = fDeltaTime;

	pFnUpdateCombatTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCombatTimer, &UpdateCombatTimer_Parms, NULL );

	pFnUpdateCombatTimer->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.ResetCombatTimer
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bTriggerEvents                 ( CPF_OptionalParm | CPF_Parm )

void ABioPlayerSquad::ResetCombatTimer ( unsigned long bTriggerEvents )
{
	static UFunction* pFnResetCombatTimer = NULL;

	if ( ! pFnResetCombatTimer )
		pFnResetCombatTimer = (UFunction*) UObject::GObjObjects()->Data[ 57400 ];

	ABioPlayerSquad_execResetCombatTimer_Parms ResetCombatTimer_Parms;
	ResetCombatTimer_Parms.bTriggerEvents = bTriggerEvents;

	pFnResetCombatTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetCombatTimer, &ResetCombatTimer_Parms, NULL );

	pFnResetCombatTimer->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.ClearMemberMovementCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )

void ABioPlayerSquad::ClearMemberMovementCommand ( class ABioPawn* pPawn )
{
	static UFunction* pFnClearMemberMovementCommand = NULL;

	if ( ! pFnClearMemberMovementCommand )
		pFnClearMemberMovementCommand = (UFunction*) UObject::GObjObjects()->Data[ 57398 ];

	ABioPlayerSquad_execClearMemberMovementCommand_Parms ClearMemberMovementCommand_Parms;
	ClearMemberMovementCommand_Parms.pPawn = pPawn;

	pFnClearMemberMovementCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearMemberMovementCommand, &ClearMemberMovementCommand_Parms, NULL );

	pFnClearMemberMovementCommand->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.GetSquadLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APawn* ABioPlayerSquad::GetSquadLeader ( )
{
	static UFunction* pFnGetSquadLeader = NULL;

	if ( ! pFnGetSquadLeader )
		pFnGetSquadLeader = (UFunction*) UObject::GObjObjects()->Data[ 44108 ];

	ABioPlayerSquad_execGetSquadLeader_Parms GetSquadLeader_Parms;

	pFnGetSquadLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadLeader, &GetSquadLeader_Parms, NULL );

	pFnGetSquadLeader->FunctionFlags |= 0x400;

	return GetSquadLeader_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.SetSquadLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pPawn                          ( CPF_Parm )

bool ABioPlayerSquad::SetSquadLeader ( class APawn* pPawn )
{
	static UFunction* pFnSetSquadLeader = NULL;

	if ( ! pFnSetSquadLeader )
		pFnSetSquadLeader = (UFunction*) UObject::GObjObjects()->Data[ 57395 ];

	ABioPlayerSquad_execSetSquadLeader_Parms SetSquadLeader_Parms;
	SetSquadLeader_Parms.pPawn = pPawn;

	pFnSetSquadLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSquadLeader, &SetSquadLeader_Parms, NULL );

	pFnSetSquadLeader->FunctionFlags |= 0x400;

	return SetSquadLeader_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioInventory*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioInventory* ABioPlayerSquad::GetInventory ( )
{
	static UFunction* pFnGetInventory = NULL;

	if ( ! pFnGetInventory )
		pFnGetInventory = (UFunction*) UObject::GObjObjects()->Data[ 43497 ];

	ABioPlayerSquad_execGetInventory_Parms GetInventory_Parms;

	pFnGetInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventory, &GetInventory_Parms, NULL );

	pFnGetInventory->FunctionFlags |= 0x400;

	return GetInventory_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.SquadExitCombatMode
// [0x00020002] 
// Parameters infos:

void ABioPlayerSquad::SquadExitCombatMode ( )
{
	static UFunction* pFnSquadExitCombatMode = NULL;

	if ( ! pFnSquadExitCombatMode )
		pFnSquadExitCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 57390 ];

	ABioPlayerSquad_execSquadExitCombatMode_Parms SquadExitCombatMode_Parms;

	this->ProcessEvent ( pFnSquadExitCombatMode, &SquadExitCombatMode_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.SquadEnterCombatMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bEngageEnemy                   ( CPF_OptionalParm | CPF_Parm )

void ABioPlayerSquad::SquadEnterCombatMode ( unsigned long bEngageEnemy )
{
	static UFunction* pFnSquadEnterCombatMode = NULL;

	if ( ! pFnSquadEnterCombatMode )
		pFnSquadEnterCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 57387 ];

	ABioPlayerSquad_execSquadEnterCombatMode_Parms SquadEnterCombatMode_Parms;
	SquadEnterCombatMode_Parms.bEngageEnemy = bEngageEnemy;

	this->ProcessEvent ( pFnSquadEnterCombatMode, &SquadEnterCombatMode_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.NotifyMemberCoverDisabled
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oWho                           ( CPF_Parm )
// class AActor*                  Link                           ( CPF_Parm )
// int                            SlotIdx                        ( CPF_Parm )

void ABioPlayerSquad::eventNotifyMemberCoverDisabled ( class APawn* oWho, class AActor* Link, int SlotIdx )
{
	static UFunction* pFnNotifyMemberCoverDisabled = NULL;

	if ( ! pFnNotifyMemberCoverDisabled )
		pFnNotifyMemberCoverDisabled = (UFunction*) UObject::GObjObjects()->Data[ 57383 ];

	ABioPlayerSquad_eventNotifyMemberCoverDisabled_Parms NotifyMemberCoverDisabled_Parms;
	NotifyMemberCoverDisabled_Parms.oWho = oWho;
	NotifyMemberCoverDisabled_Parms.Link = Link;
	NotifyMemberCoverDisabled_Parms.SlotIdx = SlotIdx;

	this->ProcessEvent ( pFnNotifyMemberCoverDisabled, &NotifyMemberCoverDisabled_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioPlayerSquad::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 57381 ];

	ABioPlayerSquad_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.OnThrowGrenade
// [0x00020002] 
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )

void ABioPlayerSquad::OnThrowGrenade ( class ABioPawn* pPawn )
{
	static UFunction* pFnOnThrowGrenade = NULL;

	if ( ! pFnOnThrowGrenade )
		pFnOnThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 57379 ];

	ABioPlayerSquad_execOnThrowGrenade_Parms OnThrowGrenade_Parms;
	OnThrowGrenade_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnOnThrowGrenade, &OnThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.HasGrenades
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool ABioPlayerSquad::HasGrenades ( class ABioPawn* pPawn )
{
	static UFunction* pFnHasGrenades = NULL;

	if ( ! pFnHasGrenades )
		pFnHasGrenades = (UFunction*) UObject::GObjObjects()->Data[ 57376 ];

	ABioPlayerSquad_execHasGrenades_Parms HasGrenades_Parms;
	HasGrenades_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnHasGrenades, &HasGrenades_Parms, NULL );

	return HasGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetReadyActivationPower
// [0x00020002] 
// Parameters infos:
// class UBioCapability*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oMemberPawn                    ( CPF_Parm )

class UBioCapability* ABioPlayerSquad::GetReadyActivationPower ( class ABioPawn* oMemberPawn )
{
	static UFunction* pFnGetReadyActivationPower = NULL;

	if ( ! pFnGetReadyActivationPower )
		pFnGetReadyActivationPower = (UFunction*) UObject::GObjObjects()->Data[ 57368 ];

	ABioPlayerSquad_execGetReadyActivationPower_Parms GetReadyActivationPower_Parms;
	GetReadyActivationPower_Parms.oMemberPawn = oMemberPawn;

	this->ProcessEvent ( pFnGetReadyActivationPower, &GetReadyActivationPower_Parms, NULL );

	return GetReadyActivationPower_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetSquadScanAbility
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::GetSquadScanAbility ( )
{
	static UFunction* pFnGetSquadScanAbility = NULL;

	if ( ! pFnGetSquadScanAbility )
		pFnGetSquadScanAbility = (UFunction*) UObject::GObjObjects()->Data[ 57366 ];

	ABioPlayerSquad_execGetSquadScanAbility_Parms GetSquadScanAbility_Parms;

	pFnGetSquadScanAbility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSquadScanAbility, &GetSquadScanAbility_Parms, NULL );

	pFnGetSquadScanAbility->FunctionFlags |= 0x400;

	return GetSquadScanAbility_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.ProxyGetContextSensitiveOffset
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIndex                         ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )

struct FVector ABioPlayerSquad::eventProxyGetContextSensitiveOffset ( int nIndex, struct FRotator rRotation )
{
	static UFunction* pFnProxyGetContextSensitiveOffset = NULL;

	if ( ! pFnProxyGetContextSensitiveOffset )
		pFnProxyGetContextSensitiveOffset = (UFunction*) UObject::GObjObjects()->Data[ 57362 ];

	ABioPlayerSquad_eventProxyGetContextSensitiveOffset_Parms ProxyGetContextSensitiveOffset_Parms;
	ProxyGetContextSensitiveOffset_Parms.nIndex = nIndex;
	memcpy ( &ProxyGetContextSensitiveOffset_Parms.rRotation, &rRotation, 0xC );

	this->ProcessEvent ( pFnProxyGetContextSensitiveOffset, &ProxyGetContextSensitiveOffset_Parms, NULL );

	return ProxyGetContextSensitiveOffset_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.ProbeCombatStop
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerSquad::ProbeCombatStop ( )
{
	static UFunction* pFnProbeCombatStop = NULL;

	if ( ! pFnProbeCombatStop )
		pFnProbeCombatStop = (UFunction*) UObject::GObjObjects()->Data[ 57361 ];

	ABioPlayerSquad_execProbeCombatStop_Parms ProbeCombatStop_Parms;

	pFnProbeCombatStop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProbeCombatStop, &ProbeCombatStop_Parms, NULL );

	pFnProbeCombatStop->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.ProbeOnCombatEnd
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerSquad::ProbeOnCombatEnd ( )
{
	static UFunction* pFnProbeOnCombatEnd = NULL;

	if ( ! pFnProbeOnCombatEnd )
		pFnProbeOnCombatEnd = (UFunction*) UObject::GObjObjects()->Data[ 57360 ];

	ABioPlayerSquad_execProbeOnCombatEnd_Parms ProbeOnCombatEnd_Parms;

	pFnProbeOnCombatEnd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProbeOnCombatEnd, &ProbeOnCombatEnd_Parms, NULL );

	pFnProbeOnCombatEnd->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.ProbeOnCombatBegin
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerSquad::ProbeOnCombatBegin ( )
{
	static UFunction* pFnProbeOnCombatBegin = NULL;

	if ( ! pFnProbeOnCombatBegin )
		pFnProbeOnCombatBegin = (UFunction*) UObject::GObjObjects()->Data[ 57359 ];

	ABioPlayerSquad_execProbeOnCombatBegin_Parms ProbeOnCombatBegin_Parms;

	pFnProbeOnCombatBegin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProbeOnCombatBegin, &ProbeOnCombatBegin_Parms, NULL );

	pFnProbeOnCombatBegin->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.OnCombatEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerSquad::eventOnCombatEnd ( )
{
	static UFunction* pFnOnCombatEnd = NULL;

	if ( ! pFnOnCombatEnd )
		pFnOnCombatEnd = (UFunction*) UObject::GObjObjects()->Data[ 57354 ];

	ABioPlayerSquad_eventOnCombatEnd_Parms OnCombatEnd_Parms;

	this->ProcessEvent ( pFnOnCombatEnd, &OnCombatEnd_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnCombatBegin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerSquad::eventOnCombatBegin ( )
{
	static UFunction* pFnOnCombatBegin = NULL;

	if ( ! pFnOnCombatBegin )
		pFnOnCombatBegin = (UFunction*) UObject::GObjObjects()->Data[ 57349 ];

	ABioPlayerSquad_eventOnCombatBegin_Parms OnCombatBegin_Parms;

	this->ProcessEvent ( pFnOnCombatBegin, &OnCombatBegin_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.IsInCombat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerSquad::IsInCombat ( )
{
	static UFunction* pFnIsInCombat = NULL;

	if ( ! pFnIsInCombat )
		pFnIsInCombat = (UFunction*) UObject::GObjObjects()->Data[ 47460 ];

	ABioPlayerSquad_execIsInCombat_Parms IsInCombat_Parms;

	pFnIsInCombat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCombat, &IsInCombat_Parms, NULL );

	pFnIsInCombat->FunctionFlags |= 0x400;

	return IsInCombat_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.OnDeath
// [0x00020002] 
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )
// class AController*             pKiller                        ( CPF_Parm )

void ABioPlayerSquad::OnDeath ( class APawn* pPawn, class AController* pKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 57342 ];

	ABioPlayerSquad_execOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.pPawn = pPawn;
	OnDeath_Parms.pKiller = pKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.AddMemberInternal
// [0x00080002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

int ABioPlayerSquad::AddMemberInternal ( class APawn* Pawn )
{
	static UFunction* pFnAddMemberInternal = NULL;

	if ( ! pFnAddMemberInternal )
		pFnAddMemberInternal = (UFunction*) UObject::GObjObjects()->Data[ 57338 ];

	ABioPlayerSquad_execAddMemberInternal_Parms AddMemberInternal_Parms;
	AddMemberInternal_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnAddMemberInternal, &AddMemberInternal_Parms, NULL );

	return AddMemberInternal_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioPlayerSquad::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 57332 ];

	ABioPlayerSquad_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.DrawSquadHUD
// [0x00020000] 
// Parameters infos:
// class ABioHUD*                 oHUD                           ( CPF_Parm )
// float                          fGuiAlpha                      ( CPF_Parm )

void ABioPlayerSquad::DrawSquadHUD ( class ABioHUD* oHUD, float fGuiAlpha )
{
	static UFunction* pFnDrawSquadHUD = NULL;

	if ( ! pFnDrawSquadHUD )
		pFnDrawSquadHUD = (UFunction*) UObject::GObjObjects()->Data[ 57329 ];

	ABioPlayerSquad_execDrawSquadHUD_Parms DrawSquadHUD_Parms;
	DrawSquadHUD_Parms.oHUD = oHUD;
	DrawSquadHUD_Parms.fGuiAlpha = fGuiAlpha;

	this->ProcessEvent ( pFnDrawSquadHUD, &DrawSquadHUD_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.MemberRemoved
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm )

void ABioPlayerSquad::eventMemberRemoved ( class APawn* oPawn )
{
	static UFunction* pFnMemberRemoved = NULL;

	if ( ! pFnMemberRemoved )
		pFnMemberRemoved = (UFunction*) UObject::GObjObjects()->Data[ 57325 ];

	ABioPlayerSquad_eventMemberRemoved_Parms MemberRemoved_Parms;
	MemberRemoved_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnMemberRemoved, &MemberRemoved_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.MemberAdded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void ABioPlayerSquad::eventMemberAdded ( int nIndex )
{
	static UFunction* pFnMemberAdded = NULL;

	if ( ! pFnMemberAdded )
		pFnMemberAdded = (UFunction*) UObject::GObjObjects()->Data[ 57319 ];

	ABioPlayerSquad_eventMemberAdded_Parms MemberAdded_Parms;
	MemberAdded_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnMemberAdded, &MemberAdded_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.GetInventoryResourceFloat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eInvResType                    ( CPF_Parm )

float ABioPlayerSquad::eventGetInventoryResourceFloat ( unsigned char eInvResType )
{
	static UFunction* pFnGetInventoryResourceFloat = NULL;

	if ( ! pFnGetInventoryResourceFloat )
		pFnGetInventoryResourceFloat = (UFunction*) UObject::GObjObjects()->Data[ 43492 ];

	ABioPlayerSquad_eventGetInventoryResourceFloat_Parms GetInventoryResourceFloat_Parms;
	GetInventoryResourceFloat_Parms.eInvResType = eInvResType;

	this->ProcessEvent ( pFnGetInventoryResourceFloat, &GetInventoryResourceFloat_Parms, NULL );

	return GetInventoryResourceFloat_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetInventoryResourceInt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eInvResType                    ( CPF_Parm )

int ABioPlayerSquad::eventGetInventoryResourceInt ( unsigned char eInvResType )
{
	static UFunction* pFnGetInventoryResourceInt = NULL;

	if ( ! pFnGetInventoryResourceInt )
		pFnGetInventoryResourceInt = (UFunction*) UObject::GObjObjects()->Data[ 45545 ];

	ABioPlayerSquad_eventGetInventoryResourceInt_Parms GetInventoryResourceInt_Parms;
	GetInventoryResourceInt_Parms.eInvResType = eInvResType;

	this->ProcessEvent ( pFnGetInventoryResourceInt, &GetInventoryResourceInt_Parms, NULL );

	return GetInventoryResourceInt_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.XPTrack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nXPGrant                       ( CPF_Parm )
// struct FString                 sXPSourceType                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            nSquadLevel                    ( CPF_Parm )

void ABioPlayerSquad::XPTrack ( int nXPGrant, struct FString sXPSourceType, int nSquadLevel )
{
	static UFunction* pFnXPTrack = NULL;

	if ( ! pFnXPTrack )
		pFnXPTrack = (UFunction*) UObject::GObjObjects()->Data[ 57311 ];

	ABioPlayerSquad_execXPTrack_Parms XPTrack_Parms;
	XPTrack_Parms.nXPGrant = nXPGrant;
	memcpy ( &XPTrack_Parms.sXPSourceType, &sXPSourceType, 0x10 );
	XPTrack_Parms.nSquadLevel = nSquadLevel;

	pFnXPTrack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnXPTrack, &XPTrack_Parms, NULL );

	pFnXPTrack->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.MinionKillsNeededForLevelUp
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::MinionKillsNeededForLevelUp ( )
{
	static UFunction* pFnMinionKillsNeededForLevelUp = NULL;

	if ( ! pFnMinionKillsNeededForLevelUp )
		pFnMinionKillsNeededForLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 57305 ];

	ABioPlayerSquad_execMinionKillsNeededForLevelUp_Parms MinionKillsNeededForLevelUp_Parms;

	this->ProcessEvent ( pFnMinionKillsNeededForLevelUp, &MinionKillsNeededForLevelUp_Parms, NULL );

	return MinionKillsNeededForLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GrantExperience
// [0x00020002] 
// Parameters infos:
// int                            nXPGrant                       ( CPF_Parm )
// unsigned char                  eXPSourceType                  ( CPF_Parm )

void ABioPlayerSquad::GrantExperience ( int nXPGrant, unsigned char eXPSourceType )
{
	static UFunction* pFnGrantExperience = NULL;

	if ( ! pFnGrantExperience )
		pFnGrantExperience = (UFunction*) UObject::GObjObjects()->Data[ 57291 ];

	ABioPlayerSquad_execGrantExperience_Parms GrantExperience_Parms;
	GrantExperience_Parms.nXPGrant = nXPGrant;
	GrantExperience_Parms.eXPSourceType = eXPSourceType;

	this->ProcessEvent ( pFnGrantExperience, &GrantExperience_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.LookupCredits
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nPlayerSquadLevel              ( CPF_Parm )
// struct FName                   nmCREDClass                    ( CPF_Parm )
// int                            nCredits                       ( CPF_Parm | CPF_OutParm )

bool ABioPlayerSquad::eventLookupCredits ( int nPlayerSquadLevel, struct FName nmCREDClass, int* nCredits )
{
	static UFunction* pFnLookupCredits = NULL;

	if ( ! pFnLookupCredits )
		pFnLookupCredits = (UFunction*) UObject::GObjObjects()->Data[ 57284 ];

	ABioPlayerSquad_eventLookupCredits_Parms LookupCredits_Parms;
	LookupCredits_Parms.nPlayerSquadLevel = nPlayerSquadLevel;
	memcpy ( &LookupCredits_Parms.nmCREDClass, &nmCREDClass, 0x8 );

	this->ProcessEvent ( pFnLookupCredits, &LookupCredits_Parms, NULL );

	if ( nCredits )
		*nCredits = LookupCredits_Parms.nCredits;

	return LookupCredits_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.LookupXP
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nPlayerSquadLevel              ( CPF_Parm )
// struct FName                   nmXPClass                      ( CPF_Parm )
// int                            nXP                            ( CPF_Parm | CPF_OutParm )

bool ABioPlayerSquad::LookupXP ( int nPlayerSquadLevel, struct FName nmXPClass, int* nXP )
{
	static UFunction* pFnLookupXP = NULL;

	if ( ! pFnLookupXP )
		pFnLookupXP = (UFunction*) UObject::GObjObjects()->Data[ 45496 ];

	ABioPlayerSquad_execLookupXP_Parms LookupXP_Parms;
	LookupXP_Parms.nPlayerSquadLevel = nPlayerSquadLevel;
	memcpy ( &LookupXP_Parms.nmXPClass, &nmXPClass, 0x8 );

	this->ProcessEvent ( pFnLookupXP, &LookupXP_Parms, NULL );

	if ( nXP )
		*nXP = LookupXP_Parms.nXP;

	return LookupXP_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetPlayerSquadExperience
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::GetPlayerSquadExperience ( )
{
	static UFunction* pFnGetPlayerSquadExperience = NULL;

	if ( ! pFnGetPlayerSquadExperience )
		pFnGetPlayerSquadExperience = (UFunction*) UObject::GObjObjects()->Data[ 45534 ];

	ABioPlayerSquad_execGetPlayerSquadExperience_Parms GetPlayerSquadExperience_Parms;

	this->ProcessEvent ( pFnGetPlayerSquadExperience, &GetPlayerSquadExperience_Parms, NULL );

	return GetPlayerSquadExperience_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetPlayerSquadLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::eventGetPlayerSquadLevel ( )
{
	static UFunction* pFnGetPlayerSquadLevel = NULL;

	if ( ! pFnGetPlayerSquadLevel )
		pFnGetPlayerSquadLevel = (UFunction*) UObject::GObjObjects()->Data[ 45492 ];

	ABioPlayerSquad_eventGetPlayerSquadLevel_Parms GetPlayerSquadLevel_Parms;

	this->ProcessEvent ( pFnGetPlayerSquadLevel, &GetPlayerSquadLevel_Parms, NULL );

	return GetPlayerSquadLevel_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetMinSquadLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::eventGetMinSquadLevel ( )
{
	static UFunction* pFnGetMinSquadLevel = NULL;

	if ( ! pFnGetMinSquadLevel )
		pFnGetMinSquadLevel = (UFunction*) UObject::GObjObjects()->Data[ 45488 ];

	ABioPlayerSquad_eventGetMinSquadLevel_Parms GetMinSquadLevel_Parms;

	this->ProcessEvent ( pFnGetMinSquadLevel, &GetMinSquadLevel_Parms, NULL );

	return GetMinSquadLevel_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetMaxSquadLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioPlayerSquad::eventGetMaxSquadLevel ( )
{
	static UFunction* pFnGetMaxSquadLevel = NULL;

	if ( ! pFnGetMaxSquadLevel )
		pFnGetMaxSquadLevel = (UFunction*) UObject::GObjObjects()->Data[ 45490 ];

	ABioPlayerSquad_eventGetMaxSquadLevel_Parms GetMaxSquadLevel_Parms;

	this->ProcessEvent ( pFnGetMaxSquadLevel, &GetMaxSquadLevel_Parms, NULL );

	return GetMaxSquadLevel_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.OnMemberCasting
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioPlayerSquad::eventOnMemberCasting ( class APawn* oMember, class APawn* oTarget, struct FName nmPower )
{
	static UFunction* pFnOnMemberCasting = NULL;

	if ( ! pFnOnMemberCasting )
		pFnOnMemberCasting = (UFunction*) UObject::GObjObjects()->Data[ 57274 ];

	ABioPlayerSquad_eventOnMemberCasting_Parms OnMemberCasting_Parms;
	OnMemberCasting_Parms.oMember = oMember;
	OnMemberCasting_Parms.oTarget = oTarget;
	memcpy ( &OnMemberCasting_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnMemberCasting, &OnMemberCasting_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnMemberAttacking
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oTarget                        ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioPlayerSquad::eventOnMemberAttacking ( class APawn* oMember, class APawn* oTarget, struct FName nmWeapon )
{
	static UFunction* pFnOnMemberAttacking = NULL;

	if ( ! pFnOnMemberAttacking )
		pFnOnMemberAttacking = (UFunction*) UObject::GObjObjects()->Data[ 57270 ];

	ABioPlayerSquad_eventOnMemberAttacking_Parms OnMemberAttacking_Parms;
	OnMemberAttacking_Parms.oMember = oMember;
	OnMemberAttacking_Parms.oTarget = oTarget;
	memcpy ( &OnMemberAttacking_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnMemberAttacking, &OnMemberAttacking_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnDamageDone
// [0x00020002] 
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_Parm )
// class AActor*                  pDamageCausingActor            ( CPF_Parm )

void ABioPlayerSquad::OnDamageDone ( class APawn* oTarget, class AActor* pDamageCausingActor )
{
	static UFunction* pFnOnDamageDone = NULL;

	if ( ! pFnOnDamageDone )
		pFnOnDamageDone = (UFunction*) UObject::GObjObjects()->Data[ 57267 ];

	ABioPlayerSquad_execOnDamageDone_Parms OnDamageDone_Parms;
	OnDamageDone_Parms.oTarget = oTarget;
	OnDamageDone_Parms.pDamageCausingActor = pDamageCausingActor;

	this->ProcessEvent ( pFnOnDamageDone, &OnDamageDone_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioPlayerSquad::eventOnDamaged ( class APawn* oMember, class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 57263 ];

	ABioPlayerSquad_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oMember = oMember;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnCastAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioPlayerSquad::eventOnCastAt ( class APawn* oMember, class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 57259 ];

	ABioPlayerSquad_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oMember = oMember;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnAttacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioPlayerSquad::eventOnAttacked ( class APawn* oMember, class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 57255 ];

	ABioPlayerSquad_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oMember = oMember;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.onPlayerEnterCover
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ABioPlayerSquad::eventonPlayerEnterCover ( )
{
	static UFunction* pFnonPlayerEnterCover = NULL;

	if ( ! pFnonPlayerEnterCover )
		pFnonPlayerEnterCover = (UFunction*) UObject::GObjObjects()->Data[ 57254 ];

	ABioPlayerSquad_eventonPlayerEnterCover_Parms onPlayerEnterCover_Parms;

	this->ProcessEvent ( pFnonPlayerEnterCover, &onPlayerEnterCover_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.OnPlayerSwitchStance
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FromState                      ( CPF_Parm )
// unsigned char                  ToState                        ( CPF_Parm )

bool ABioPlayerSquad::eventOnPlayerSwitchStance ( unsigned char FromState, unsigned char ToState )
{
	static UFunction* pFnOnPlayerSwitchStance = NULL;

	if ( ! pFnOnPlayerSwitchStance )
		pFnOnPlayerSwitchStance = (UFunction*) UObject::GObjObjects()->Data[ 57250 ];

	ABioPlayerSquad_eventOnPlayerSwitchStance_Parms OnPlayerSwitchStance_Parms;
	OnPlayerSwitchStance_Parms.FromState = FromState;
	OnPlayerSwitchStance_Parms.ToState = ToState;

	this->ProcessEvent ( pFnOnPlayerSwitchStance, &OnPlayerSwitchStance_Parms, NULL );

	return OnPlayerSwitchStance_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetActionString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  eAction                        ( CPF_Parm )
// class ABioPawn*                oPawn                          ( CPF_Parm )

struct FString ABioPlayerSquad::GetActionString ( unsigned char eAction, class ABioPawn* oPawn )
{
	static UFunction* pFnGetActionString = NULL;

	if ( ! pFnGetActionString )
		pFnGetActionString = (UFunction*) UObject::GObjObjects()->Data[ 57246 ];

	ABioPlayerSquad_execGetActionString_Parms GetActionString_Parms;
	GetActionString_Parms.eAction = eAction;
	GetActionString_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnGetActionString, &GetActionString_Parms, NULL );

	return GetActionString_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.DrawDebugHUD
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )
// float                          fGuiAlpha                      ( CPF_Parm )

void ABioPlayerSquad::DrawDebugHUD ( class ABioHUD* HUD, float fGuiAlpha )
{
	static UFunction* pFnDrawDebugHUD = NULL;

	if ( ! pFnDrawDebugHUD )
		pFnDrawDebugHUD = (UFunction*) UObject::GObjObjects()->Data[ 57239 ];

	ABioPlayerSquad_execDrawDebugHUD_Parms DrawDebugHUD_Parms;
	DrawDebugHUD_Parms.HUD = HUD;
	DrawDebugHUD_Parms.fGuiAlpha = fGuiAlpha;

	this->ProcessEvent ( pFnDrawDebugHUD, &DrawDebugHUD_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.DrawHUD
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 HUD                            ( CPF_Parm )
// float                          fGuiAlpha                      ( CPF_Parm )

void ABioPlayerSquad::DrawHUD ( class ABioHUD* HUD, float fGuiAlpha )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 57236 ];

	ABioPlayerSquad_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.HUD = HUD;
	DrawHUD_Parms.fGuiAlpha = fGuiAlpha;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.SwapSpareController
// [0x00020002] 
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm )

void ABioPlayerSquad::SwapSpareController ( class APawn* oPawn )
{
	static UFunction* pFnSwapSpareController = NULL;

	if ( ! pFnSwapSpareController )
		pFnSwapSpareController = (UFunction*) UObject::GObjObjects()->Data[ 57232 ];

	ABioPlayerSquad_execSwapSpareController_Parms SwapSpareController_Parms;
	SwapSpareController_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnSwapSpareController, &SwapSpareController_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.SetSpareController
// [0x00020002] 
// Parameters infos:
// class AController*             newCtrl                        ( CPF_Parm )

void ABioPlayerSquad::SetSpareController ( class AController* newCtrl )
{
	static UFunction* pFnSetSpareController = NULL;

	if ( ! pFnSetSpareController )
		pFnSetSpareController = (UFunction*) UObject::GObjObjects()->Data[ 57230 ];

	ABioPlayerSquad_execSetSpareController_Parms SetSpareController_Parms;
	SetSpareController_Parms.newCtrl = newCtrl;

	this->ProcessEvent ( pFnSetSpareController, &SetSpareController_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.GetSpareController
// [0x00020002] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AController* ABioPlayerSquad::GetSpareController ( )
{
	static UFunction* pFnGetSpareController = NULL;

	if ( ! pFnGetSpareController )
		pFnGetSpareController = (UFunction*) UObject::GObjObjects()->Data[ 57227 ];

	ABioPlayerSquad_execGetSpareController_Parms GetSpareController_Parms;

	this->ProcessEvent ( pFnGetSpareController, &GetSpareController_Parms, NULL );

	return GetSpareController_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.Leader_Changed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   OldLeader                      ( CPF_Parm )
// class APawn*                   NewLeader                      ( CPF_Parm )

void ABioPlayerSquad::eventLeader_Changed ( class APawn* OldLeader, class APawn* NewLeader )
{
	static UFunction* pFnLeader_Changed = NULL;

	if ( ! pFnLeader_Changed )
		pFnLeader_Changed = (UFunction*) UObject::GObjObjects()->Data[ 57224 ];

	ABioPlayerSquad_eventLeader_Changed_Parms Leader_Changed_Parms;
	Leader_Changed_Parms.OldLeader = OldLeader;
	Leader_Changed_Parms.NewLeader = NewLeader;

	this->ProcessEvent ( pFnLeader_Changed, &Leader_Changed_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.GetOrientationType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ABioPlayerSquad::eventGetOrientationType ( )
{
	static UFunction* pFnGetOrientationType = NULL;

	if ( ! pFnGetOrientationType )
		pFnGetOrientationType = (UFunction*) UObject::GObjObjects()->Data[ 57221 ];

	ABioPlayerSquad_eventGetOrientationType_Parms GetOrientationType_Parms;

	this->ProcessEvent ( pFnGetOrientationType, &GetOrientationType_Parms, NULL );

	return GetOrientationType_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetRestFormation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioPlayerSquad::eventGetRestFormation ( )
{
	static UFunction* pFnGetRestFormation = NULL;

	if ( ! pFnGetRestFormation )
		pFnGetRestFormation = (UFunction*) UObject::GObjObjects()->Data[ 57218 ];

	ABioPlayerSquad_eventGetRestFormation_Parms GetRestFormation_Parms;

	this->ProcessEvent ( pFnGetRestFormation, &GetRestFormation_Parms, NULL );

	return GetRestFormation_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.InitPlayerSquadLevel
// [0x00020002] 
// Parameters infos:
// int                            nInitLevel                     ( CPF_Parm )

void ABioPlayerSquad::InitPlayerSquadLevel ( int nInitLevel )
{
	static UFunction* pFnInitPlayerSquadLevel = NULL;

	if ( ! pFnInitPlayerSquadLevel )
		pFnInitPlayerSquadLevel = (UFunction*) UObject::GObjObjects()->Data[ 57213 ];

	ABioPlayerSquad_execInitPlayerSquadLevel_Parms InitPlayerSquadLevel_Parms;
	InitPlayerSquadLevel_Parms.nInitLevel = nInitLevel;

	this->ProcessEvent ( pFnInitPlayerSquadLevel, &InitPlayerSquadLevel_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.InitPlayerSquadExperience
// [0x00020002] 
// Parameters infos:
// int                            nInitXP                        ( CPF_Parm )

void ABioPlayerSquad::InitPlayerSquadExperience ( int nInitXP )
{
	static UFunction* pFnInitPlayerSquadExperience = NULL;

	if ( ! pFnInitPlayerSquadExperience )
		pFnInitPlayerSquadExperience = (UFunction*) UObject::GObjObjects()->Data[ 57210 ];

	ABioPlayerSquad_execInitPlayerSquadExperience_Parms InitPlayerSquadExperience_Parms;
	InitPlayerSquadExperience_Parms.nInitXP = nInitXP;

	this->ProcessEvent ( pFnInitPlayerSquadExperience, &InitPlayerSquadExperience_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.Initialize
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioPlayerSquad::eventInitialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57208 ];

	ABioPlayerSquad_eventInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioPlayerSquad.IsInventoryThresholdReached
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioPlayerSquad::IsInventoryThresholdReached ( )
{
	static UFunction* pFnIsInventoryThresholdReached = NULL;

	if ( ! pFnIsInventoryThresholdReached )
		pFnIsInventoryThresholdReached = (UFunction*) UObject::GObjObjects()->Data[ 57206 ];

	ABioPlayerSquad_execIsInventoryThresholdReached_Parms IsInventoryThresholdReached_Parms;

	pFnIsInventoryThresholdReached->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInventoryThresholdReached, &IsInventoryThresholdReached_Parms, NULL );

	pFnIsInventoryThresholdReached->FunctionFlags |= 0x400;

	return IsInventoryThresholdReached_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.IsInventoryFull
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            i_nItemsToAdd                  ( CPF_OptionalParm | CPF_Parm )
// int                            o_nOverBy                      ( CPF_Parm | CPF_OutParm )

bool ABioPlayerSquad::IsInventoryFull ( int i_nItemsToAdd, int* o_nOverBy )
{
	static UFunction* pFnIsInventoryFull = NULL;

	if ( ! pFnIsInventoryFull )
		pFnIsInventoryFull = (UFunction*) UObject::GObjObjects()->Data[ 57202 ];

	ABioPlayerSquad_execIsInventoryFull_Parms IsInventoryFull_Parms;
	IsInventoryFull_Parms.i_nItemsToAdd = i_nItemsToAdd;

	pFnIsInventoryFull->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInventoryFull, &IsInventoryFull_Parms, NULL );

	pFnIsInventoryFull->FunctionFlags |= 0x400;

	if ( o_nOverBy )
		*o_nOverBy = IsInventoryFull_Parms.o_nOverBy;

	return IsInventoryFull_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerSquad.GetRankOfSlot
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// class UBioCoverInterface*      oCover                         ( CPF_Parm )
// struct TArray<class AActor*>   aoCoverFrom                    ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<int>             aoCoverFromRanks               ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPawnHeight                    ( CPF_Parm )
// class AController*             oCtrl                          ( CPF_OptionalParm | CPF_Parm )
// struct FCoverRecord            oRec                           ( CPF_Parm | CPF_OutParm )

void ABioPlayerSquad::GetRankOfSlot ( class UBioCoverInterface* oCover, struct TArray<class AActor*> aoCoverFrom, struct TArray<int> aoCoverFromRanks, float fPawnHeight, class AController* oCtrl, struct FCoverRecord* oRec )
{
	static UFunction* pFnGetRankOfSlot = NULL;

	if ( ! pFnGetRankOfSlot )
		pFnGetRankOfSlot = (UFunction*) UObject::GObjObjects()->Data[ 57193 ];

	ABioPlayerSquad_execGetRankOfSlot_Parms GetRankOfSlot_Parms;
	GetRankOfSlot_Parms.oCover = oCover;
	memcpy ( &GetRankOfSlot_Parms.aoCoverFrom, &aoCoverFrom, 0x10 );
	memcpy ( &GetRankOfSlot_Parms.aoCoverFromRanks, &aoCoverFromRanks, 0x10 );
	GetRankOfSlot_Parms.fPawnHeight = fPawnHeight;
	GetRankOfSlot_Parms.oCtrl = oCtrl;

	pFnGetRankOfSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRankOfSlot, &GetRankOfSlot_Parms, NULL );

	pFnGetRankOfSlot->FunctionFlags |= 0x400;

	if ( oRec )
		memcpy ( oRec, &GetRankOfSlot_Parms.oRec, 0x14 );
};

// Function SFXGame.BioPlayerSquad.ApplyTacticalOrders
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  oMember                        ( CPF_Parm )

void ABioPlayerSquad::ApplyTacticalOrders ( class AActor* oMember )
{
	static UFunction* pFnApplyTacticalOrders = NULL;

	if ( ! pFnApplyTacticalOrders )
		pFnApplyTacticalOrders = (UFunction*) UObject::GObjObjects()->Data[ 57191 ];

	ABioPlayerSquad_execApplyTacticalOrders_Parms ApplyTacticalOrders_Parms;
	ApplyTacticalOrders_Parms.oMember = oMember;

	pFnApplyTacticalOrders->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyTacticalOrders, &ApplyTacticalOrders_Parms, NULL );

	pFnApplyTacticalOrders->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPlayerSquad.BioVINCE_MapName_PartyDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioPlayerSquad::BioVINCE_MapName_PartyDeath ( )
{
	static UFunction* pFnBioVINCE_MapName_PartyDeath = NULL;

	if ( ! pFnBioVINCE_MapName_PartyDeath )
		pFnBioVINCE_MapName_PartyDeath = (UFunction*) UObject::GObjObjects()->Data[ 57190 ];

	ABioPlayerSquad_execBioVINCE_MapName_PartyDeath_Parms BioVINCE_MapName_PartyDeath_Parms;

	pFnBioVINCE_MapName_PartyDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioVINCE_MapName_PartyDeath, &BioVINCE_MapName_PartyDeath_Parms, NULL );

	pFnBioVINCE_MapName_PartyDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSquadAI.OnSquadSeen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioBaseSquad*           oSquad                         ( CPF_Parm )

void ABioSquadAI::eventOnSquadSeen ( class ABioBaseSquad* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 64777 ];

	ABioSquadAI_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioSquadAI.OnDeath
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oMember                        ( CPF_Parm )
// class AController*             oKiller                        ( CPF_Parm )

void ABioSquadAI::eventOnDeath ( class APawn* oMember, class AController* oKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 64773 ];

	ABioSquadAI_eventOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.oMember = oMember;
	OnDeath_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioSquadAI.OnThrowGrenade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )

void ABioSquadAI::eventOnThrowGrenade ( class ABioPawn* pPawn )
{
	static UFunction* pFnOnThrowGrenade = NULL;

	if ( ! pFnOnThrowGrenade )
		pFnOnThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 64771 ];

	ABioSquadAI_eventOnThrowGrenade_Parms OnThrowGrenade_Parms;
	OnThrowGrenade_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnOnThrowGrenade, &OnThrowGrenade_Parms, NULL );
};

// Function SFXGame.BioSquadAI.HasGrenades
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                pPawn                          ( CPF_Parm )

bool ABioSquadAI::eventHasGrenades ( class ABioPawn* pPawn )
{
	static UFunction* pFnHasGrenades = NULL;

	if ( ! pFnHasGrenades )
		pFnHasGrenades = (UFunction*) UObject::GObjObjects()->Data[ 64768 ];

	ABioSquadAI_eventHasGrenades_Parms HasGrenades_Parms;
	HasGrenades_Parms.pPawn = pPawn;

	this->ProcessEvent ( pFnHasGrenades, &HasGrenades_Parms, NULL );

	return HasGrenades_Parms.ReturnValue;
};

// Function SFXGame.BioSquadAI.MemberRemoved
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oPawn                          ( CPF_Parm )

void ABioSquadAI::eventMemberRemoved ( class APawn* oPawn )
{
	static UFunction* pFnMemberRemoved = NULL;

	if ( ! pFnMemberRemoved )
		pFnMemberRemoved = (UFunction*) UObject::GObjObjects()->Data[ 64764 ];

	ABioSquadAI_eventMemberRemoved_Parms MemberRemoved_Parms;
	MemberRemoved_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnMemberRemoved, &MemberRemoved_Parms, NULL );
};

// Function SFXGame.BioSquadAI.ProbeCombatStop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  CombatResult                   ( CPF_Parm )

void ABioSquadAI::ProbeCombatStop ( unsigned char CombatResult )
{
	static UFunction* pFnProbeCombatStop = NULL;

	if ( ! pFnProbeCombatStop )
		pFnProbeCombatStop = (UFunction*) UObject::GObjObjects()->Data[ 64762 ];

	ABioSquadAI_execProbeCombatStop_Parms ProbeCombatStop_Parms;
	ProbeCombatStop_Parms.CombatResult = CombatResult;

	pFnProbeCombatStop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProbeCombatStop, &ProbeCombatStop_Parms, NULL );

	pFnProbeCombatStop->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSquadAI.ProbeCombatStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioSquadAI::ProbeCombatStart ( )
{
	static UFunction* pFnProbeCombatStart = NULL;

	if ( ! pFnProbeCombatStart )
		pFnProbeCombatStart = (UFunction*) UObject::GObjObjects()->Data[ 64761 ];

	ABioSquadAI_execProbeCombatStart_Parms ProbeCombatStart_Parms;

	pFnProbeCombatStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProbeCombatStart, &ProbeCombatStart_Parms, NULL );

	pFnProbeCombatStart->FunctionFlags |= 0x400;
};

// Function SFXGame.BioSquadHoldMarker.BioBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioSquadHoldMarker::BioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 64787 ];

	ABioSquadHoldMarker_execBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioSquadHoldMarker.SetBaseByTag
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioSquadHoldMarker::SetBaseByTag ( )
{
	static UFunction* pFnSetBaseByTag = NULL;

	if ( ! pFnSetBaseByTag )
		pFnSetBaseByTag = (UFunction*) UObject::GObjObjects()->Data[ 64786 ];

	ABioSquadHoldMarker_execSetBaseByTag_Parms SetBaseByTag_Parms;

	pFnSetBaseByTag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBaseByTag, &SetBaseByTag_Parms, NULL );

	pFnSetBaseByTag->FunctionFlags |= 0x400;
};

// Function SFXGame.BioStickyGrenadeInterface.TracePrecise
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOwner                         ( CPF_Parm )
// class AProjectile*             Projectile                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitNormal                      ( CPF_Parm | CPF_OutParm )

bool UBioStickyGrenadeInterface::TracePrecise ( class AActor* pOwner, class AProjectile* Projectile, struct FVector* HitLocation, struct FVector* HitNormal )
{
	static UFunction* pFnTracePrecise = NULL;

	if ( ! pFnTracePrecise )
		pFnTracePrecise = (UFunction*) UObject::GObjObjects()->Data[ 45169 ];

	UBioStickyGrenadeInterface_execTracePrecise_Parms TracePrecise_Parms;
	TracePrecise_Parms.pOwner = pOwner;
	TracePrecise_Parms.Projectile = Projectile;

	pFnTracePrecise->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTracePrecise, &TracePrecise_Parms, NULL );

	pFnTracePrecise->FunctionFlags |= 0x400;

	if ( HitLocation )
		memcpy ( HitLocation, &TracePrecise_Parms.HitLocation, 0xC );

	if ( HitNormal )
		memcpy ( HitNormal, &TracePrecise_Parms.HitNormal, 0xC );

	return TracePrecise_Parms.ReturnValue;
};

// Function SFXGame.BioStickyGrenadeInterface.ComputePosition
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )

struct FVector UBioStickyGrenadeInterface::ComputePosition ( class ABioGrenadeProjectileFrisbee* Projectile )
{
	static UFunction* pFnComputePosition = NULL;

	if ( ! pFnComputePosition )
		pFnComputePosition = (UFunction*) UObject::GObjObjects()->Data[ 45166 ];

	UBioStickyGrenadeInterface_execComputePosition_Parms ComputePosition_Parms;
	ComputePosition_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnComputePosition, &ComputePosition_Parms, NULL );

	return ComputePosition_Parms.ReturnValue;
};

// Function SFXGame.BioStickyGrenadeInterface.StaticDetach
// [0x00022002] 
// Parameters infos:
// class UBioActorBehavior*       oOwnerBehavior                 ( CPF_Parm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )

void UBioStickyGrenadeInterface::StaticDetach ( class UBioActorBehavior* oOwnerBehavior, class ABioGrenadeProjectileFrisbee* Projectile )
{
	static UFunction* pFnStaticDetach = NULL;

	if ( ! pFnStaticDetach )
		pFnStaticDetach = (UFunction*) UObject::GObjObjects()->Data[ 45163 ];

	UBioStickyGrenadeInterface_execStaticDetach_Parms StaticDetach_Parms;
	StaticDetach_Parms.oOwnerBehavior = oOwnerBehavior;
	StaticDetach_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnStaticDetach, &StaticDetach_Parms, NULL );
};

// Function SFXGame.BioStickyGrenadeInterface.Detach
// [0x00020002] 
// Parameters infos:
// class UBioActorBehavior*       oOwnerBehavior                 ( CPF_Parm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )

void UBioStickyGrenadeInterface::Detach ( class UBioActorBehavior* oOwnerBehavior, class ABioGrenadeProjectileFrisbee* Projectile )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 45160 ];

	UBioStickyGrenadeInterface_execDetach_Parms Detach_Parms;
	Detach_Parms.oOwnerBehavior = oOwnerBehavior;
	Detach_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );
};

// Function SFXGame.BioStickyGrenadeInterface.StaticAttach
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOwner                         ( CPF_Parm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool UBioStickyGrenadeInterface::StaticAttach ( class AActor* pOwner, class ABioGrenadeProjectileFrisbee* Projectile, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStaticAttach = NULL;

	if ( ! pFnStaticAttach )
		pFnStaticAttach = (UFunction*) UObject::GObjObjects()->Data[ 45153 ];

	UBioStickyGrenadeInterface_execStaticAttach_Parms StaticAttach_Parms;
	StaticAttach_Parms.pOwner = pOwner;
	StaticAttach_Parms.Projectile = Projectile;
	memcpy ( &StaticAttach_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &StaticAttach_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStaticAttach, &StaticAttach_Parms, NULL );

	return StaticAttach_Parms.ReturnValue;
};

// Function SFXGame.BioStickyGrenadeInterface.Attach
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool UBioStickyGrenadeInterface::Attach ( class ABioGrenadeProjectileFrisbee* Projectile, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnAttach = NULL;

	if ( ! pFnAttach )
		pFnAttach = (UFunction*) UObject::GObjObjects()->Data[ 45148 ];

	UBioStickyGrenadeInterface_execAttach_Parms Attach_Parms;
	Attach_Parms.Projectile = Projectile;
	memcpy ( &Attach_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Attach_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnAttach, &Attach_Parms, NULL );

	return Attach_Parms.ReturnValue;
};

// Function SFXGame.BioStickyGrenadeInterface.SetRotationByUpVector
// [0x00482400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pActor                         ( CPF_Parm )
// struct FVector                 vUp                            ( CPF_Const | CPF_Parm | CPF_OutParm )

void UBioStickyGrenadeInterface::SetRotationByUpVector ( class AActor* pActor, struct FVector* vUp )
{
	static UFunction* pFnSetRotationByUpVector = NULL;

	if ( ! pFnSetRotationByUpVector )
		pFnSetRotationByUpVector = (UFunction*) UObject::GObjObjects()->Data[ 45145 ];

	UBioStickyGrenadeInterface_execSetRotationByUpVector_Parms SetRotationByUpVector_Parms;
	SetRotationByUpVector_Parms.pActor = pActor;

	pFnSetRotationByUpVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRotationByUpVector, &SetRotationByUpVector_Parms, NULL );

	pFnSetRotationByUpVector->FunctionFlags |= 0x400;

	if ( vUp )
		memcpy ( vUp, &SetRotationByUpVector_Parms.vUp, 0xC );
};

// Function SFXGame.BioTalent.AddGameProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioGameProperty*        GameProperty                   ( CPF_Parm )

void UBioTalent::AddGameProperty ( class UBioGameProperty* GameProperty )
{
	static UFunction* pFnAddGameProperty = NULL;

	if ( ! pFnAddGameProperty )
		pFnAddGameProperty = (UFunction*) UObject::GObjObjects()->Data[ 64940 ];

	UBioTalent_execAddGameProperty_Parms AddGameProperty_Parms;
	AddGameProperty_Parms.GameProperty = GameProperty;

	pFnAddGameProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddGameProperty, &AddGameProperty_Parms, NULL );

	pFnAddGameProperty->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalent.ScaleToRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Rank                           ( CPF_Parm )

void UBioTalent::ScaleToRank ( int Rank )
{
	static UFunction* pFnScaleToRank = NULL;

	if ( ! pFnScaleToRank )
		pFnScaleToRank = (UFunction*) UObject::GObjObjects()->Data[ 64938 ];

	UBioTalent_execScaleToRank_Parms ScaleToRank_Parms;
	ScaleToRank_Parms.Rank = Rank;

	pFnScaleToRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleToRank, &ScaleToRank_Parms, NULL );

	pFnScaleToRank->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalent.Unapply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 Target                         ( CPF_Parm )

void UBioTalent::Unapply ( class UObject* Target )
{
	static UFunction* pFnUnapply = NULL;

	if ( ! pFnUnapply )
		pFnUnapply = (UFunction*) UObject::GObjObjects()->Data[ 64936 ];

	UBioTalent_execUnapply_Parms Unapply_Parms;
	Unapply_Parms.Target = Target;

	pFnUnapply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnapply, &Unapply_Parms, NULL );

	pFnUnapply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalent.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 Target                         ( CPF_Parm )

void UBioTalent::Apply ( class UObject* Target )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 64934 ];

	UBioTalent_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalent.GetRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioTalent::GetRank ( )
{
	static UFunction* pFnGetRank = NULL;

	if ( ! pFnGetRank )
		pFnGetRank = (UFunction*) UObject::GObjObjects()->Data[ 64932 ];

	UBioTalent_execGetRank_Parms GetRank_Parms;

	pFnGetRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRank, &GetRank_Parms, NULL );

	pFnGetRank->FunctionFlags |= 0x400;

	return GetRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalent.GetID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioTalent::GetID ( )
{
	static UFunction* pFnGetID = NULL;

	if ( ! pFnGetID )
		pFnGetID = (UFunction*) UObject::GObjObjects()->Data[ 64930 ];

	UBioTalent_execGetID_Parms GetID_Parms;

	pFnGetID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetID, &GetID_Parms, NULL );

	pFnGetID->FunctionFlags |= 0x400;

	return GetID_Parms.ReturnValue;
};

// Function SFXGame.BioTalent.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            StartingRank                   ( CPF_Parm )

void UBioTalent::Initialize ( int Id, int StartingRank )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 64927 ];

	UBioTalent_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.Id = Id;
	Initialize_Parms.StartingRank = StartingRank;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.GetNumberOfTalentPointsSpent
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioTalentContainer::GetNumberOfTalentPointsSpent ( )
{
	static UFunction* pFnGetNumberOfTalentPointsSpent = NULL;

	if ( ! pFnGetNumberOfTalentPointsSpent )
		pFnGetNumberOfTalentPointsSpent = (UFunction*) UObject::GObjObjects()->Data[ 45036 ];

	UBioTalentContainer_execGetNumberOfTalentPointsSpent_Parms GetNumberOfTalentPointsSpent_Parms;

	this->ProcessEvent ( pFnGetNumberOfTalentPointsSpent, &GetNumberOfTalentPointsSpent_Parms, NULL );

	return GetNumberOfTalentPointsSpent_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.ReloadTalentContainer
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioPawnBehavior*        targetBehavior                 ( CPF_Parm )
// struct TArray<struct FBioSimpleTalentSave> simpleTalents                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FBioComplexTalentSave> complexTalents                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioTalentContainer::ReloadTalentContainer ( class UBioPawnBehavior* targetBehavior, struct TArray<struct FBioSimpleTalentSave>* simpleTalents, struct TArray<struct FBioComplexTalentSave>* complexTalents )
{
	static UFunction* pFnReloadTalentContainer = NULL;

	if ( ! pFnReloadTalentContainer )
		pFnReloadTalentContainer = (UFunction*) UObject::GObjObjects()->Data[ 45030 ];

	UBioTalentContainer_execReloadTalentContainer_Parms ReloadTalentContainer_Parms;
	ReloadTalentContainer_Parms.targetBehavior = targetBehavior;

	pFnReloadTalentContainer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReloadTalentContainer, &ReloadTalentContainer_Parms, NULL );

	pFnReloadTalentContainer->FunctionFlags |= 0x400;

	if ( simpleTalents )
		memcpy ( simpleTalents, &ReloadTalentContainer_Parms.simpleTalents, 0x10 );

	if ( complexTalents )
		memcpy ( complexTalents, &ReloadTalentContainer_Parms.complexTalents, 0x10 );
};

// Function SFXGame.BioTalentContainer.GetTalentSaveData
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct TArray<struct FBioSimpleTalentSave> simpleTalents                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FBioComplexTalentSave> complexTalents                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioTalentContainer::GetTalentSaveData ( struct TArray<struct FBioSimpleTalentSave>* simpleTalents, struct TArray<struct FBioComplexTalentSave>* complexTalents )
{
	static UFunction* pFnGetTalentSaveData = NULL;

	if ( ! pFnGetTalentSaveData )
		pFnGetTalentSaveData = (UFunction*) UObject::GObjObjects()->Data[ 45025 ];

	UBioTalentContainer_execGetTalentSaveData_Parms GetTalentSaveData_Parms;

	pFnGetTalentSaveData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentSaveData, &GetTalentSaveData_Parms, NULL );

	pFnGetTalentSaveData->FunctionFlags |= 0x400;

	if ( simpleTalents )
		memcpy ( simpleTalents, &GetTalentSaveData_Parms.simpleTalents, 0x10 );

	if ( complexTalents )
		memcpy ( complexTalents, &GetTalentSaveData_Parms.complexTalents, 0x10 );
};

// Function SFXGame.BioTalentContainer.GetTalentRank
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TalentID                       ( CPF_Parm )
// int                            talentRank                     ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetTalentRank ( int TalentID, int* talentRank )
{
	static UFunction* pFnGetTalentRank = NULL;

	if ( ! pFnGetTalentRank )
		pFnGetTalentRank = (UFunction*) UObject::GObjObjects()->Data[ 45021 ];

	UBioTalentContainer_execGetTalentRank_Parms GetTalentRank_Parms;
	GetTalentRank_Parms.TalentID = TalentID;

	pFnGetTalentRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentRank, &GetTalentRank_Parms, NULL );

	pFnGetTalentRank->FunctionFlags |= 0x400;

	if ( talentRank )
		*talentRank = GetTalentRank_Parms.talentRank;

	return GetTalentRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetTalentDebugData
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<struct FBioTalentDebugData> dataArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            simpleTalentStartIndex         ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetTalentDebugData ( struct TArray<struct FBioTalentDebugData>* dataArray, int* simpleTalentStartIndex )
{
	static UFunction* pFnGetTalentDebugData = NULL;

	if ( ! pFnGetTalentDebugData )
		pFnGetTalentDebugData = (UFunction*) UObject::GObjObjects()->Data[ 45016 ];

	UBioTalentContainer_execGetTalentDebugData_Parms GetTalentDebugData_Parms;

	pFnGetTalentDebugData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentDebugData, &GetTalentDebugData_Parms, NULL );

	pFnGetTalentDebugData->FunctionFlags |= 0x400;

	if ( dataArray )
		memcpy ( dataArray, &GetTalentDebugData_Parms.dataArray, 0x10 );

	if ( simpleTalentStartIndex )
		*simpleTalentStartIndex = GetTalentDebugData_Parms.simpleTalentStartIndex;

	return GetTalentDebugData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.CanDecrementLevelUpRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )

bool UBioTalentContainer::CanDecrementLevelUpRank ( int talentIndex )
{
	static UFunction* pFnCanDecrementLevelUpRank = NULL;

	if ( ! pFnCanDecrementLevelUpRank )
		pFnCanDecrementLevelUpRank = (UFunction*) UObject::GObjObjects()->Data[ 45013 ];

	UBioTalentContainer_execCanDecrementLevelUpRank_Parms CanDecrementLevelUpRank_Parms;
	CanDecrementLevelUpRank_Parms.talentIndex = talentIndex;

	pFnCanDecrementLevelUpRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanDecrementLevelUpRank, &CanDecrementLevelUpRank_Parms, NULL );

	pFnCanDecrementLevelUpRank->FunctionFlags |= 0x400;

	return CanDecrementLevelUpRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.CanIncrementLevelUpRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )

bool UBioTalentContainer::CanIncrementLevelUpRank ( int talentIndex )
{
	static UFunction* pFnCanIncrementLevelUpRank = NULL;

	if ( ! pFnCanIncrementLevelUpRank )
		pFnCanIncrementLevelUpRank = (UFunction*) UObject::GObjObjects()->Data[ 45010 ];

	UBioTalentContainer_execCanIncrementLevelUpRank_Parms CanIncrementLevelUpRank_Parms;
	CanIncrementLevelUpRank_Parms.talentIndex = talentIndex;

	pFnCanIncrementLevelUpRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanIncrementLevelUpRank, &CanIncrementLevelUpRank_Parms, NULL );

	pFnCanIncrementLevelUpRank->FunctionFlags |= 0x400;

	return CanIncrementLevelUpRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.DecrementLevelUpRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )

bool UBioTalentContainer::DecrementLevelUpRank ( int talentIndex )
{
	static UFunction* pFnDecrementLevelUpRank = NULL;

	if ( ! pFnDecrementLevelUpRank )
		pFnDecrementLevelUpRank = (UFunction*) UObject::GObjObjects()->Data[ 45007 ];

	UBioTalentContainer_execDecrementLevelUpRank_Parms DecrementLevelUpRank_Parms;
	DecrementLevelUpRank_Parms.talentIndex = talentIndex;

	pFnDecrementLevelUpRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecrementLevelUpRank, &DecrementLevelUpRank_Parms, NULL );

	pFnDecrementLevelUpRank->FunctionFlags |= 0x400;

	return DecrementLevelUpRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.IncrementLevelUpRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )

bool UBioTalentContainer::IncrementLevelUpRank ( int talentIndex )
{
	static UFunction* pFnIncrementLevelUpRank = NULL;

	if ( ! pFnIncrementLevelUpRank )
		pFnIncrementLevelUpRank = (UFunction*) UObject::GObjObjects()->Data[ 45004 ];

	UBioTalentContainer_execIncrementLevelUpRank_Parms IncrementLevelUpRank_Parms;
	IncrementLevelUpRank_Parms.talentIndex = talentIndex;

	pFnIncrementLevelUpRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncrementLevelUpRank, &IncrementLevelUpRank_Parms, NULL );

	pFnIncrementLevelUpRank->FunctionFlags |= 0x400;

	return IncrementLevelUpRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetTalentLevelUpRank
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )
// int                            talentRank                     ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetTalentLevelUpRank ( int talentIndex, int* talentRank )
{
	static UFunction* pFnGetTalentLevelUpRank = NULL;

	if ( ! pFnGetTalentLevelUpRank )
		pFnGetTalentLevelUpRank = (UFunction*) UObject::GObjObjects()->Data[ 45000 ];

	UBioTalentContainer_execGetTalentLevelUpRank_Parms GetTalentLevelUpRank_Parms;
	GetTalentLevelUpRank_Parms.talentIndex = talentIndex;

	pFnGetTalentLevelUpRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentLevelUpRank, &GetTalentLevelUpRank_Parms, NULL );

	pFnGetTalentLevelUpRank->FunctionFlags |= 0x400;

	if ( talentRank )
		*talentRank = GetTalentLevelUpRank_Parms.talentRank;

	return GetTalentLevelUpRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetTalentLevelUpIndex
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TalentID                       ( CPF_Parm )
// int                            talentIndex                    ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetTalentLevelUpIndex ( int TalentID, int* talentIndex )
{
	static UFunction* pFnGetTalentLevelUpIndex = NULL;

	if ( ! pFnGetTalentLevelUpIndex )
		pFnGetTalentLevelUpIndex = (UFunction*) UObject::GObjObjects()->Data[ 44996 ];

	UBioTalentContainer_execGetTalentLevelUpIndex_Parms GetTalentLevelUpIndex_Parms;
	GetTalentLevelUpIndex_Parms.TalentID = TalentID;

	pFnGetTalentLevelUpIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentLevelUpIndex, &GetTalentLevelUpIndex_Parms, NULL );

	pFnGetTalentLevelUpIndex->FunctionFlags |= 0x400;

	if ( talentIndex )
		*talentIndex = GetTalentLevelUpIndex_Parms.talentIndex;

	return GetTalentLevelUpIndex_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetDynamicLevelUpTalentData
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            talentIndex                    ( CPF_Parm )
// struct FBioTalentDynamicData   Data                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioTalentContainer::GetDynamicLevelUpTalentData ( int talentIndex, struct FBioTalentDynamicData* Data )
{
	static UFunction* pFnGetDynamicLevelUpTalentData = NULL;

	if ( ! pFnGetDynamicLevelUpTalentData )
		pFnGetDynamicLevelUpTalentData = (UFunction*) UObject::GObjObjects()->Data[ 44992 ];

	UBioTalentContainer_execGetDynamicLevelUpTalentData_Parms GetDynamicLevelUpTalentData_Parms;
	GetDynamicLevelUpTalentData_Parms.talentIndex = talentIndex;

	pFnGetDynamicLevelUpTalentData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDynamicLevelUpTalentData, &GetDynamicLevelUpTalentData_Parms, NULL );

	pFnGetDynamicLevelUpTalentData->FunctionFlags |= 0x400;

	if ( Data )
		memcpy ( Data, &GetDynamicLevelUpTalentData_Parms.Data, 0x50 );

	return GetDynamicLevelUpTalentData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetStaticLevelUpTalentData
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct TArray<struct FBioTalentStaticData> dataArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioTalentContainer::GetStaticLevelUpTalentData ( struct TArray<struct FBioTalentStaticData>* dataArray )
{
	static UFunction* pFnGetStaticLevelUpTalentData = NULL;

	if ( ! pFnGetStaticLevelUpTalentData )
		pFnGetStaticLevelUpTalentData = (UFunction*) UObject::GObjObjects()->Data[ 44988 ];

	UBioTalentContainer_execGetStaticLevelUpTalentData_Parms GetStaticLevelUpTalentData_Parms;

	pFnGetStaticLevelUpTalentData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStaticLevelUpTalentData, &GetStaticLevelUpTalentData_Parms, NULL );

	pFnGetStaticLevelUpTalentData->FunctionFlags |= 0x400;

	if ( dataArray )
		memcpy ( dataArray, &GetStaticLevelUpTalentData_Parms.dataArray, 0x10 );

	return GetStaticLevelUpTalentData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetNumLevelUpPoints
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            numPoints                      ( CPF_Parm | CPF_OutParm )
// int                            pointsSpent                    ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetNumLevelUpPoints ( int* numPoints, int* pointsSpent )
{
	static UFunction* pFnGetNumLevelUpPoints = NULL;

	if ( ! pFnGetNumLevelUpPoints )
		pFnGetNumLevelUpPoints = (UFunction*) UObject::GObjObjects()->Data[ 44984 ];

	UBioTalentContainer_execGetNumLevelUpPoints_Parms GetNumLevelUpPoints_Parms;

	pFnGetNumLevelUpPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumLevelUpPoints, &GetNumLevelUpPoints_Parms, NULL );

	pFnGetNumLevelUpPoints->FunctionFlags |= 0x400;

	if ( numPoints )
		*numPoints = GetNumLevelUpPoints_Parms.numPoints;

	if ( pointsSpent )
		*pointsSpent = GetNumLevelUpPoints_Parms.pointsSpent;

	return GetNumLevelUpPoints_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.GetNumLevelUpTalents
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            numTalents                     ( CPF_Parm | CPF_OutParm )

bool UBioTalentContainer::GetNumLevelUpTalents ( int* numTalents )
{
	static UFunction* pFnGetNumLevelUpTalents = NULL;

	if ( ! pFnGetNumLevelUpTalents )
		pFnGetNumLevelUpTalents = (UFunction*) UObject::GObjObjects()->Data[ 44981 ];

	UBioTalentContainer_execGetNumLevelUpTalents_Parms GetNumLevelUpTalents_Parms;

	pFnGetNumLevelUpTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumLevelUpTalents, &GetNumLevelUpTalents_Parms, NULL );

	pFnGetNumLevelUpTalents->FunctionFlags |= 0x400;

	if ( numTalents )
		*numTalents = GetNumLevelUpTalents_Parms.numTalents;

	return GetNumLevelUpTalents_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.ClearLevelUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioTalentContainer::ClearLevelUp ( )
{
	static UFunction* pFnClearLevelUp = NULL;

	if ( ! pFnClearLevelUp )
		pFnClearLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 44979 ];

	UBioTalentContainer_execClearLevelUp_Parms ClearLevelUp_Parms;

	pFnClearLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearLevelUp, &ClearLevelUp_Parms, NULL );

	pFnClearLevelUp->FunctionFlags |= 0x400;

	return ClearLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.ApplyLevelUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioTalentContainer::ApplyLevelUp ( )
{
	static UFunction* pFnApplyLevelUp = NULL;

	if ( ! pFnApplyLevelUp )
		pFnApplyLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 44977 ];

	UBioTalentContainer_execApplyLevelUp_Parms ApplyLevelUp_Parms;

	pFnApplyLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyLevelUp, &ApplyLevelUp_Parms, NULL );

	pFnApplyLevelUp->FunctionFlags |= 0x400;

	return ApplyLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.InitializeLevelUp
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioTalentContainer::InitializeLevelUp ( )
{
	static UFunction* pFnInitializeLevelUp = NULL;

	if ( ! pFnInitializeLevelUp )
		pFnInitializeLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 44975 ];

	UBioTalentContainer_execInitializeLevelUp_Parms InitializeLevelUp_Parms;

	pFnInitializeLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeLevelUp, &InitializeLevelUp_Parms, NULL );

	pFnInitializeLevelUp->FunctionFlags |= 0x400;

	return InitializeLevelUp_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.AddPrerequisiteTalent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            TalentID                       ( CPF_Parm )
// int                            prereqID                       ( CPF_Parm )
// int                            prereqRank                     ( CPF_Parm )

void UBioTalentContainer::AddPrerequisiteTalent ( int TalentID, int prereqID, int prereqRank )
{
	static UFunction* pFnAddPrerequisiteTalent = NULL;

	if ( ! pFnAddPrerequisiteTalent )
		pFnAddPrerequisiteTalent = (UFunction*) UObject::GObjObjects()->Data[ 44971 ];

	UBioTalentContainer_execAddPrerequisiteTalent_Parms AddPrerequisiteTalent_Parms;
	AddPrerequisiteTalent_Parms.TalentID = TalentID;
	AddPrerequisiteTalent_Parms.prereqID = prereqID;
	AddPrerequisiteTalent_Parms.prereqRank = prereqRank;

	pFnAddPrerequisiteTalent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPrerequisiteTalent, &AddPrerequisiteTalent_Parms, NULL );

	pFnAddPrerequisiteTalent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.ScaleTalentByIncrement
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            rankIncrement                  ( CPF_Parm )

void UBioTalentContainer::ScaleTalentByIncrement ( int Id, int rankIncrement )
{
	static UFunction* pFnScaleTalentByIncrement = NULL;

	if ( ! pFnScaleTalentByIncrement )
		pFnScaleTalentByIncrement = (UFunction*) UObject::GObjObjects()->Data[ 44968 ];

	UBioTalentContainer_execScaleTalentByIncrement_Parms ScaleTalentByIncrement_Parms;
	ScaleTalentByIncrement_Parms.Id = Id;
	ScaleTalentByIncrement_Parms.rankIncrement = rankIncrement;

	pFnScaleTalentByIncrement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleTalentByIncrement, &ScaleTalentByIncrement_Parms, NULL );

	pFnScaleTalentByIncrement->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.ScaleTalentToRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            Rank                           ( CPF_Parm )

void UBioTalentContainer::ScaleTalentToRank ( int Id, int Rank )
{
	static UFunction* pFnScaleTalentToRank = NULL;

	if ( ! pFnScaleTalentToRank )
		pFnScaleTalentToRank = (UFunction*) UObject::GObjObjects()->Data[ 44965 ];

	UBioTalentContainer_execScaleTalentToRank_Parms ScaleTalentToRank_Parms;
	ScaleTalentToRank_Parms.Id = Id;
	ScaleTalentToRank_Parms.Rank = Rank;

	pFnScaleTalentToRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleTalentToRank, &ScaleTalentToRank_Parms, NULL );

	pFnScaleTalentToRank->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.IncreaseTalentMaxRankByIncrement
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )
// int                            MaxRankIncrement               ( CPF_Parm )

bool UBioTalentContainer::IncreaseTalentMaxRankByIncrement ( int Id, int MaxRankIncrement )
{
	static UFunction* pFnIncreaseTalentMaxRankByIncrement = NULL;

	if ( ! pFnIncreaseTalentMaxRankByIncrement )
		pFnIncreaseTalentMaxRankByIncrement = (UFunction*) UObject::GObjObjects()->Data[ 44961 ];

	UBioTalentContainer_execIncreaseTalentMaxRankByIncrement_Parms IncreaseTalentMaxRankByIncrement_Parms;
	IncreaseTalentMaxRankByIncrement_Parms.Id = Id;
	IncreaseTalentMaxRankByIncrement_Parms.MaxRankIncrement = MaxRankIncrement;

	pFnIncreaseTalentMaxRankByIncrement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncreaseTalentMaxRankByIncrement, &IncreaseTalentMaxRankByIncrement_Parms, NULL );

	pFnIncreaseTalentMaxRankByIncrement->FunctionFlags |= 0x400;

	return IncreaseTalentMaxRankByIncrement_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.IncreaseTalentMaxRank
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )
// int                            MaxRank                        ( CPF_Parm )

bool UBioTalentContainer::IncreaseTalentMaxRank ( int Id, int MaxRank )
{
	static UFunction* pFnIncreaseTalentMaxRank = NULL;

	if ( ! pFnIncreaseTalentMaxRank )
		pFnIncreaseTalentMaxRank = (UFunction*) UObject::GObjObjects()->Data[ 44957 ];

	UBioTalentContainer_execIncreaseTalentMaxRank_Parms IncreaseTalentMaxRank_Parms;
	IncreaseTalentMaxRank_Parms.Id = Id;
	IncreaseTalentMaxRank_Parms.MaxRank = MaxRank;

	pFnIncreaseTalentMaxRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncreaseTalentMaxRank, &IncreaseTalentMaxRank_Parms, NULL );

	pFnIncreaseTalentMaxRank->FunctionFlags |= 0x400;

	return IncreaseTalentMaxRank_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.RemoveTalent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioTalent*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )

class UBioTalent* UBioTalentContainer::RemoveTalent ( int Id )
{
	static UFunction* pFnRemoveTalent = NULL;

	if ( ! pFnRemoveTalent )
		pFnRemoveTalent = (UFunction*) UObject::GObjObjects()->Data[ 44954 ];

	UBioTalentContainer_execRemoveTalent_Parms RemoveTalent_Parms;
	RemoveTalent_Parms.Id = Id;

	pFnRemoveTalent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveTalent, &RemoveTalent_Parms, NULL );

	pFnRemoveTalent->FunctionFlags |= 0x400;

	return RemoveTalent_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.AddSimpleTalent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioTalent*              Talent                         ( CPF_Parm )

void UBioTalentContainer::AddSimpleTalent ( class UBioTalent* Talent )
{
	static UFunction* pFnAddSimpleTalent = NULL;

	if ( ! pFnAddSimpleTalent )
		pFnAddSimpleTalent = (UFunction*) UObject::GObjObjects()->Data[ 44952 ];

	UBioTalentContainer_execAddSimpleTalent_Parms AddSimpleTalent_Parms;
	AddSimpleTalent_Parms.Talent = Talent;

	pFnAddSimpleTalent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddSimpleTalent, &AddSimpleTalent_Parms, NULL );

	pFnAddSimpleTalent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.AddSpecialization
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bonusIdentification            ( CPF_Parm )
// int                            ReplaceTalentID                ( CPF_Parm )

bool UBioTalentContainer::AddSpecialization ( int bonusIdentification, int ReplaceTalentID )
{
	static UFunction* pFnAddSpecialization = NULL;

	if ( ! pFnAddSpecialization )
		pFnAddSpecialization = (UFunction*) UObject::GObjObjects()->Data[ 44948 ];

	UBioTalentContainer_execAddSpecialization_Parms AddSpecialization_Parms;
	AddSpecialization_Parms.bonusIdentification = bonusIdentification;
	AddSpecialization_Parms.ReplaceTalentID = ReplaceTalentID;

	pFnAddSpecialization->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddSpecialization, &AddSpecialization_Parms, NULL );

	pFnAddSpecialization->FunctionFlags |= 0x400;

	return AddSpecialization_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.AddBonusTalents
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bonusIdentifier                ( CPF_Parm )

bool UBioTalentContainer::AddBonusTalents ( int bonusIdentifier )
{
	static UFunction* pFnAddBonusTalents = NULL;

	if ( ! pFnAddBonusTalents )
		pFnAddBonusTalents = (UFunction*) UObject::GObjObjects()->Data[ 44945 ];

	UBioTalentContainer_execAddBonusTalents_Parms AddBonusTalents_Parms;
	AddBonusTalents_Parms.bonusIdentifier = bonusIdentifier;

	pFnAddBonusTalents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBonusTalents, &AddBonusTalents_Parms, NULL );

	pFnAddBonusTalents->FunctionFlags |= 0x400;

	return AddBonusTalents_Parms.ReturnValue;
};

// Function SFXGame.BioTalentContainer.AddTalent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UBioTalent*              Talent                         ( CPF_Parm )
// int                            MaxRank                        ( CPF_Parm )
// int                            LevelOffset                    ( CPF_Parm )
// int                            LevelsPerRank                  ( CPF_Parm )
// int                            VisualOrder                    ( CPF_Parm )

void UBioTalentContainer::AddTalent ( class UBioTalent* Talent, int MaxRank, int LevelOffset, int LevelsPerRank, int VisualOrder )
{
	static UFunction* pFnAddTalent = NULL;

	if ( ! pFnAddTalent )
		pFnAddTalent = (UFunction*) UObject::GObjObjects()->Data[ 44939 ];

	UBioTalentContainer_execAddTalent_Parms AddTalent_Parms;
	AddTalent_Parms.Talent = Talent;
	AddTalent_Parms.MaxRank = MaxRank;
	AddTalent_Parms.LevelOffset = LevelOffset;
	AddTalent_Parms.LevelsPerRank = LevelsPerRank;
	AddTalent_Parms.VisualOrder = VisualOrder;

	pFnAddTalent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddTalent, &AddTalent_Parms, NULL );

	pFnAddTalent->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentContainer.SetTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class ABioPawn*                Target                         ( CPF_Parm )

void UBioTalentContainer::SetTarget ( class ABioPawn* Target )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 44937 ];

	UBioTalentContainer_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.Target = Target;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;
};

// Function SFXGame.BioTalentImporter.LoadTalent2DAs
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   nmPackage                      ( CPF_Parm )

bool UBioTalentImporter::LoadTalent2DAs ( struct FName nmPackage )
{
	static UFunction* pFnLoadTalent2DAs = NULL;

	if ( ! pFnLoadTalent2DAs )
		pFnLoadTalent2DAs = (UFunction*) UObject::GObjObjects()->Data[ 64986 ];

	UBioTalentImporter_execLoadTalent2DAs_Parms LoadTalent2DAs_Parms;
	memcpy ( &LoadTalent2DAs_Parms.nmPackage, &nmPackage, 0x8 );

	pFnLoadTalent2DAs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadTalent2DAs, &LoadTalent2DAs_Parms, NULL );

	pFnLoadTalent2DAs->FunctionFlags |= 0x400;

	return LoadTalent2DAs_Parms.ReturnValue;
};

// Function SFXGame.BioTalentImporter.GetTalentRankGuiData
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TalentID                       ( CPF_Parm )
// int                            MaxRank                        ( CPF_Parm )
// struct TArray<int>             iconArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             nameArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             descArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             unlockBlurbArray               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioTalentImporter::GetTalentRankGuiData ( int TalentID, int MaxRank, struct TArray<int>* iconArray, struct TArray<int>* nameArray, struct TArray<int>* descArray, struct TArray<int>* unlockBlurbArray )
{
	static UFunction* pFnGetTalentRankGuiData = NULL;

	if ( ! pFnGetTalentRankGuiData )
		pFnGetTalentRankGuiData = (UFunction*) UObject::GObjObjects()->Data[ 64974 ];

	UBioTalentImporter_execGetTalentRankGuiData_Parms GetTalentRankGuiData_Parms;
	GetTalentRankGuiData_Parms.TalentID = TalentID;
	GetTalentRankGuiData_Parms.MaxRank = MaxRank;

	pFnGetTalentRankGuiData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentRankGuiData, &GetTalentRankGuiData_Parms, NULL );

	pFnGetTalentRankGuiData->FunctionFlags |= 0x400;

	if ( iconArray )
		memcpy ( iconArray, &GetTalentRankGuiData_Parms.iconArray, 0x10 );

	if ( nameArray )
		memcpy ( nameArray, &GetTalentRankGuiData_Parms.nameArray, 0x10 );

	if ( descArray )
		memcpy ( descArray, &GetTalentRankGuiData_Parms.descArray, 0x10 );

	if ( unlockBlurbArray )
		memcpy ( unlockBlurbArray, &GetTalentRankGuiData_Parms.unlockBlurbArray, 0x10 );

	return GetTalentRankGuiData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentImporter.GetTalentGuiData
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TalentID                       ( CPF_Parm )
// int                            talentName                     ( CPF_Parm | CPF_OutParm )
// int                            Description                    ( CPF_Parm | CPF_OutParm )
// int                            UnlockName                     ( CPF_Parm | CPF_OutParm )
// int                            UnlockBlurb                    ( CPF_Parm | CPF_OutParm )

bool UBioTalentImporter::GetTalentGuiData ( int TalentID, int* talentName, int* Description, int* UnlockName, int* UnlockBlurb )
{
	static UFunction* pFnGetTalentGuiData = NULL;

	if ( ! pFnGetTalentGuiData )
		pFnGetTalentGuiData = (UFunction*) UObject::GObjObjects()->Data[ 64967 ];

	UBioTalentImporter_execGetTalentGuiData_Parms GetTalentGuiData_Parms;
	GetTalentGuiData_Parms.TalentID = TalentID;

	pFnGetTalentGuiData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTalentGuiData, &GetTalentGuiData_Parms, NULL );

	pFnGetTalentGuiData->FunctionFlags |= 0x400;

	if ( talentName )
		*talentName = GetTalentGuiData_Parms.talentName;

	if ( Description )
		*Description = GetTalentGuiData_Parms.Description;

	if ( UnlockName )
		*UnlockName = GetTalentGuiData_Parms.UnlockName;

	if ( UnlockBlurb )
		*UnlockBlurb = GetTalentGuiData_Parms.UnlockBlurb;

	return GetTalentGuiData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentImporter.LoadBonusTalentData
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Row                            ( CPF_Parm )
// int                            MaxRank                        ( CPF_Parm | CPF_OutParm )
// int                            LevelOffset                    ( CPF_Parm | CPF_OutParm )
// int                            LevelsPerRank                  ( CPF_Parm | CPF_OutParm )
// int                            StartingRank                   ( CPF_Parm | CPF_OutParm )
// int                            IsVisible                      ( CPF_Parm | CPF_OutParm )
// int                            VisualOrder                    ( CPF_Parm | CPF_OutParm )

bool UBioTalentImporter::LoadBonusTalentData ( int Row, int* MaxRank, int* LevelOffset, int* LevelsPerRank, int* StartingRank, int* IsVisible, int* VisualOrder )
{
	static UFunction* pFnLoadBonusTalentData = NULL;

	if ( ! pFnLoadBonusTalentData )
		pFnLoadBonusTalentData = (UFunction*) UObject::GObjObjects()->Data[ 64958 ];

	UBioTalentImporter_execLoadBonusTalentData_Parms LoadBonusTalentData_Parms;
	LoadBonusTalentData_Parms.Row = Row;

	pFnLoadBonusTalentData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadBonusTalentData, &LoadBonusTalentData_Parms, NULL );

	pFnLoadBonusTalentData->FunctionFlags |= 0x400;

	if ( MaxRank )
		*MaxRank = LoadBonusTalentData_Parms.MaxRank;

	if ( LevelOffset )
		*LevelOffset = LoadBonusTalentData_Parms.LevelOffset;

	if ( LevelsPerRank )
		*LevelsPerRank = LoadBonusTalentData_Parms.LevelsPerRank;

	if ( StartingRank )
		*StartingRank = LoadBonusTalentData_Parms.StartingRank;

	if ( IsVisible )
		*IsVisible = LoadBonusTalentData_Parms.IsVisible;

	if ( VisualOrder )
		*VisualOrder = LoadBonusTalentData_Parms.VisualOrder;

	return LoadBonusTalentData_Parms.ReturnValue;
};

// Function SFXGame.BioTalentImporter.LoadBonusTalentRowsAndIDs
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bonusIdentifier                ( CPF_Parm )
// struct TArray<int>             Rows                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<int>             talentIDs                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UBioTalentImporter::LoadBonusTalentRowsAndIDs ( int bonusIdentifier, struct TArray<int>* Rows, struct TArray<int>* talentIDs )
{
	static UFunction* pFnLoadBonusTalentRowsAndIDs = NULL;

	if ( ! pFnLoadBonusTalentRowsAndIDs )
		pFnLoadBonusTalentRowsAndIDs = (UFunction*) UObject::GObjObjects()->Data[ 64951 ];

	UBioTalentImporter_execLoadBonusTalentRowsAndIDs_Parms LoadBonusTalentRowsAndIDs_Parms;
	LoadBonusTalentRowsAndIDs_Parms.bonusIdentifier = bonusIdentifier;

	pFnLoadBonusTalentRowsAndIDs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadBonusTalentRowsAndIDs, &LoadBonusTalentRowsAndIDs_Parms, NULL );

	pFnLoadBonusTalentRowsAndIDs->FunctionFlags |= 0x400;

	if ( Rows )
		memcpy ( Rows, &LoadBonusTalentRowsAndIDs_Parms.Rows, 0x10 );

	if ( talentIDs )
		memcpy ( talentIDs, &LoadBonusTalentRowsAndIDs_Parms.talentIDs, 0x10 );

	return LoadBonusTalentRowsAndIDs_Parms.ReturnValue;
};

// Function SFXGame.BioTalentImporter.LoadTalent
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UBioTalent*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioActorBehavior*       Behavior                       ( CPF_Parm )
// int                            TalentID                       ( CPF_Parm )
// int                            Rank                           ( CPF_Parm )

class UBioTalent* UBioTalentImporter::LoadTalent ( class UBioActorBehavior* Behavior, int TalentID, int Rank )
{
	static UFunction* pFnLoadTalent = NULL;

	if ( ! pFnLoadTalent )
		pFnLoadTalent = (UFunction*) UObject::GObjObjects()->Data[ 64946 ];

	UBioTalentImporter_execLoadTalent_Parms LoadTalent_Parms;
	LoadTalent_Parms.Behavior = Behavior;
	LoadTalent_Parms.TalentID = TalentID;
	LoadTalent_Parms.Rank = Rank;

	pFnLoadTalent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadTalent, &LoadTalent_Parms, NULL );

	pFnLoadTalent->FunctionFlags |= 0x400;

	return LoadTalent_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.SendGameData
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  GameDataType                   ( CPF_Parm )

void USFXTelemetry::SendGameData ( unsigned char GameDataType )
{
	static UFunction* pFnSendGameData = NULL;

	if ( ! pFnSendGameData )
		pFnSendGameData = (UFunction*) UObject::GObjObjects()->Data[ 68042 ];

	USFXTelemetry_execSendGameData_Parms SendGameData_Parms;
	SendGameData_Parms.GameDataType = GameDataType;

	pFnSendGameData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGameData, &SendGameData_Parms, NULL );

	pFnSendGameData->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionTeamDeaths
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionTeamDeaths ( int Amount )
{
	static UFunction* pFnIncSessionTeamDeaths = NULL;

	if ( ! pFnIncSessionTeamDeaths )
		pFnIncSessionTeamDeaths = (UFunction*) UObject::GObjObjects()->Data[ 68040 ];

	USFXTelemetry_execIncSessionTeamDeaths_Parms IncSessionTeamDeaths_Parms;
	IncSessionTeamDeaths_Parms.Amount = Amount;

	pFnIncSessionTeamDeaths->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionTeamDeaths, &IncSessionTeamDeaths_Parms, NULL );

	pFnIncSessionTeamDeaths->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionTeamKills
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionTeamKills ( int Amount )
{
	static UFunction* pFnIncSessionTeamKills = NULL;

	if ( ! pFnIncSessionTeamKills )
		pFnIncSessionTeamKills = (UFunction*) UObject::GObjObjects()->Data[ 68038 ];

	USFXTelemetry_execIncSessionTeamKills_Parms IncSessionTeamKills_Parms;
	IncSessionTeamKills_Parms.Amount = Amount;

	pFnIncSessionTeamKills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionTeamKills, &IncSessionTeamKills_Parms, NULL );

	pFnIncSessionTeamKills->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionPlayerDeaths
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionPlayerDeaths ( int Amount )
{
	static UFunction* pFnIncSessionPlayerDeaths = NULL;

	if ( ! pFnIncSessionPlayerDeaths )
		pFnIncSessionPlayerDeaths = (UFunction*) UObject::GObjObjects()->Data[ 68036 ];

	USFXTelemetry_execIncSessionPlayerDeaths_Parms IncSessionPlayerDeaths_Parms;
	IncSessionPlayerDeaths_Parms.Amount = Amount;

	pFnIncSessionPlayerDeaths->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionPlayerDeaths, &IncSessionPlayerDeaths_Parms, NULL );

	pFnIncSessionPlayerDeaths->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionPlayerKills
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionPlayerKills ( int Amount )
{
	static UFunction* pFnIncSessionPlayerKills = NULL;

	if ( ! pFnIncSessionPlayerKills )
		pFnIncSessionPlayerKills = (UFunction*) UObject::GObjObjects()->Data[ 68034 ];

	USFXTelemetry_execIncSessionPlayerKills_Parms IncSessionPlayerKills_Parms;
	IncSessionPlayerKills_Parms.Amount = Amount;

	pFnIncSessionPlayerKills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionPlayerKills, &IncSessionPlayerKills_Parms, NULL );

	pFnIncSessionPlayerKills->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionCombatScore
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionCombatScore ( int Amount )
{
	static UFunction* pFnIncSessionCombatScore = NULL;

	if ( ! pFnIncSessionCombatScore )
		pFnIncSessionCombatScore = (UFunction*) UObject::GObjObjects()->Data[ 68032 ];

	USFXTelemetry_execIncSessionCombatScore_Parms IncSessionCombatScore_Parms;
	IncSessionCombatScore_Parms.Amount = Amount;

	pFnIncSessionCombatScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionCombatScore, &IncSessionCombatScore_Parms, NULL );

	pFnIncSessionCombatScore->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionPlayerScore
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionPlayerScore ( int Amount )
{
	static UFunction* pFnIncSessionPlayerScore = NULL;

	if ( ! pFnIncSessionPlayerScore )
		pFnIncSessionPlayerScore = (UFunction*) UObject::GObjObjects()->Data[ 68030 ];

	USFXTelemetry_execIncSessionPlayerScore_Parms IncSessionPlayerScore_Parms;
	IncSessionPlayerScore_Parms.Amount = Amount;

	pFnIncSessionPlayerScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionPlayerScore, &IncSessionPlayerScore_Parms, NULL );

	pFnIncSessionPlayerScore->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IncSessionXP
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void USFXTelemetry::IncSessionXP ( int Amount )
{
	static UFunction* pFnIncSessionXP = NULL;

	if ( ! pFnIncSessionXP )
		pFnIncSessionXP = (UFunction*) UObject::GObjObjects()->Data[ 68028 ];

	USFXTelemetry_execIncSessionXP_Parms IncSessionXP_Parms;
	IncSessionXP_Parms.Amount = Amount;

	pFnIncSessionXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIncSessionXP, &IncSessionXP_Parms, NULL );

	pFnIncSessionXP->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SetContextCustomHeader
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ChunkName                      ( CPF_Parm )

void USFXTelemetry::SetContextCustomHeader ( struct FName ChunkName )
{
	static UFunction* pFnSetContextCustomHeader = NULL;

	if ( ! pFnSetContextCustomHeader )
		pFnSetContextCustomHeader = (UFunction*) UObject::GObjObjects()->Data[ 68026 ];

	USFXTelemetry_execSetContextCustomHeader_Parms SetContextCustomHeader_Parms;
	memcpy ( &SetContextCustomHeader_Parms.ChunkName, &ChunkName, 0x8 );

	pFnSetContextCustomHeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContextCustomHeader, &SetContextCustomHeader_Parms, NULL );

	pFnSetContextCustomHeader->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SetContextPlayerLevelFromCurrentRecord
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void USFXTelemetry::SetContextPlayerLevelFromCurrentRecord ( )
{
	static UFunction* pFnSetContextPlayerLevelFromCurrentRecord = NULL;

	if ( ! pFnSetContextPlayerLevelFromCurrentRecord )
		pFnSetContextPlayerLevelFromCurrentRecord = (UFunction*) UObject::GObjObjects()->Data[ 68025 ];

	USFXTelemetry_execSetContextPlayerLevelFromCurrentRecord_Parms SetContextPlayerLevelFromCurrentRecord_Parms;

	pFnSetContextPlayerLevelFromCurrentRecord->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContextPlayerLevelFromCurrentRecord, &SetContextPlayerLevelFromCurrentRecord_Parms, NULL );

	pFnSetContextPlayerLevelFromCurrentRecord->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SetContextPlayerLevel
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            Level                          ( CPF_Parm )

void USFXTelemetry::SetContextPlayerLevel ( int Level )
{
	static UFunction* pFnSetContextPlayerLevel = NULL;

	if ( ! pFnSetContextPlayerLevel )
		pFnSetContextPlayerLevel = (UFunction*) UObject::GObjObjects()->Data[ 68023 ];

	USFXTelemetry_execSetContextPlayerLevel_Parms SetContextPlayerLevel_Parms;
	SetContextPlayerLevel_Parms.Level = Level;

	pFnSetContextPlayerLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContextPlayerLevel, &SetContextPlayerLevel_Parms, NULL );

	pFnSetContextPlayerLevel->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SetContextMap
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FName                   MapName                        ( CPF_Parm )

void USFXTelemetry::SetContextMap ( struct FName MapName )
{
	static UFunction* pFnSetContextMap = NULL;

	if ( ! pFnSetContextMap )
		pFnSetContextMap = (UFunction*) UObject::GObjObjects()->Data[ 68021 ];

	USFXTelemetry_execSetContextMap_Parms SetContextMap_Parms;
	memcpy ( &SetContextMap_Parms.MapName, &MapName, 0x8 );

	pFnSetContextMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContextMap, &SetContextMap_Parms, NULL );

	pFnSetContextMap->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SendTelemetryOnProfileReadComplete
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USFXTelemetry::SendTelemetryOnProfileReadComplete ( unsigned char LocalUserNum, unsigned long bWasSuccessful )
{
	static UFunction* pFnSendTelemetryOnProfileReadComplete = NULL;

	if ( ! pFnSendTelemetryOnProfileReadComplete )
		pFnSendTelemetryOnProfileReadComplete = (UFunction*) UObject::GObjObjects()->Data[ 68016 ];

	USFXTelemetry_execSendTelemetryOnProfileReadComplete_Parms SendTelemetryOnProfileReadComplete_Parms;
	SendTelemetryOnProfileReadComplete_Parms.LocalUserNum = LocalUserNum;
	SendTelemetryOnProfileReadComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnSendTelemetryOnProfileReadComplete, &SendTelemetryOnProfileReadComplete_Parms, NULL );
};

// Function SFXGame.SFXTelemetry.SendProfileDependentTelemetry
// [0x00020002] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )

void USFXTelemetry::SendProfileDependentTelemetry ( unsigned char LocalUserNum )
{
	static UFunction* pFnSendProfileDependentTelemetry = NULL;

	if ( ! pFnSendProfileDependentTelemetry )
		pFnSendProfileDependentTelemetry = (UFunction*) UObject::GObjObjects()->Data[ 68013 ];

	USFXTelemetry_execSendProfileDependentTelemetry_Parms SendProfileDependentTelemetry_Parms;
	SendProfileDependentTelemetry_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFnSendProfileDependentTelemetry, &SendProfileDependentTelemetry_Parms, NULL );
};

// Function SFXGame.SFXTelemetry.InitConnectionDelegates
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void USFXTelemetry::eventInitConnectionDelegates ( )
{
	static UFunction* pFnInitConnectionDelegates = NULL;

	if ( ! pFnInitConnectionDelegates )
		pFnInitConnectionDelegates = (UFunction*) UObject::GObjObjects()->Data[ 68009 ];

	USFXTelemetry_eventInitConnectionDelegates_Parms InitConnectionDelegates_Parms;

	this->ProcessEvent ( pFnInitConnectionDelegates, &InitConnectionDelegates_Parms, NULL );
};

// Function SFXGame.SFXTelemetry.OnLoginChange
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )

void USFXTelemetry::OnLoginChange ( unsigned char LocalUserNum )
{
	static UFunction* pFnOnLoginChange = NULL;

	if ( ! pFnOnLoginChange )
		pFnOnLoginChange = (UFunction*) UObject::GObjObjects()->Data[ 68005 ];

	USFXTelemetry_execOnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFnOnLoginChange, &OnLoginChange_Parms, NULL );
};

// Function SFXGame.SFXTelemetry.OnAuthenticate
// [0x00020002] 
// Parameters infos:

void USFXTelemetry::OnAuthenticate ( )
{
	static UFunction* pFnOnAuthenticate = NULL;

	if ( ! pFnOnAuthenticate )
		pFnOnAuthenticate = (UFunction*) UObject::GObjObjects()->Data[ 68002 ];

	USFXTelemetry_execOnAuthenticate_Parms OnAuthenticate_Parms;

	this->ProcessEvent ( pFnOnAuthenticate, &OnAuthenticate_Parms, NULL );
};

// Function SFXGame.SFXTelemetry.GetLoginAndPlayerInterface
// [0x00424003] ( FUNC_Final )
// Parameters infos:
// class UISFXOnlineComponentLogin* Login                          ( CPF_Parm | CPF_OutParm )
// class UOnlinePlayerInterface*  PlayerInterface                ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void USFXTelemetry::GetLoginAndPlayerInterface ( class UISFXOnlineComponentLogin** Login, class UOnlinePlayerInterface** PlayerInterface )
{
	static UFunction* pFnGetLoginAndPlayerInterface = NULL;

	if ( ! pFnGetLoginAndPlayerInterface )
		pFnGetLoginAndPlayerInterface = (UFunction*) UObject::GObjObjects()->Data[ 67998 ];

	USFXTelemetry_execGetLoginAndPlayerInterface_Parms GetLoginAndPlayerInterface_Parms;

	this->ProcessEvent ( pFnGetLoginAndPlayerInterface, &GetLoginAndPlayerInterface_Parms, NULL );

	if ( Login )
		*Login = GetLoginAndPlayerInterface_Parms.Login;

	if ( PlayerInterface )
		*PlayerInterface = GetLoginAndPlayerInterface_Parms.PlayerInterface;
};

// Function SFXGame.SFXTelemetry.SendProfileDependentTelemetryNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USFXTelemetry::SendProfileDependentTelemetryNative ( )
{
	static UFunction* pFnSendProfileDependentTelemetryNative = NULL;

	if ( ! pFnSendProfileDependentTelemetryNative )
		pFnSendProfileDependentTelemetryNative = (UFunction*) UObject::GObjObjects()->Data[ 67997 ];

	USFXTelemetry_execSendProfileDependentTelemetryNative_Parms SendProfileDependentTelemetryNative_Parms;

	pFnSendProfileDependentTelemetryNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendProfileDependentTelemetryNative, &SendProfileDependentTelemetryNative_Parms, NULL );

	pFnSendProfileDependentTelemetryNative->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.OnDisconnect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Error                          ( CPF_Parm )
// struct FString                 SessionId                      ( CPF_Const | CPF_Parm | CPF_NeedCtorLink )

void USFXTelemetry::OnDisconnect ( int Error, struct FString SessionId )
{
	static UFunction* pFnOnDisconnect = NULL;

	if ( ! pFnOnDisconnect )
		pFnOnDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 67994 ];

	USFXTelemetry_execOnDisconnect_Parms OnDisconnect_Parms;
	OnDisconnect_Parms.Error = Error;
	memcpy ( &OnDisconnect_Parms.SessionId, &SessionId, 0x10 );

	pFnOnDisconnect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDisconnect, &OnDisconnect_Parms, NULL );

	pFnOnDisconnect->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.IsCollectionEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXTelemetry::IsCollectionEnabled ( )
{
	static UFunction* pFnIsCollectionEnabled = NULL;

	if ( ! pFnIsCollectionEnabled )
		pFnIsCollectionEnabled = (UFunction*) UObject::GObjObjects()->Data[ 67992 ];

	USFXTelemetry_execIsCollectionEnabled_Parms IsCollectionEnabled_Parms;

	pFnIsCollectionEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCollectionEnabled, &IsCollectionEnabled_Parms, NULL );

	pFnIsCollectionEnabled->FunctionFlags |= 0x400;

	return IsCollectionEnabled_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.AddClassNameToAttributeArray
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   cnData                         ( CPF_Parm )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::AddClassNameToAttributeArray ( struct FString AttrName, struct FName cnData, struct TArray<struct FTelemetryAttribute>* Attributes )
{
	static UFunction* pFnAddClassNameToAttributeArray = NULL;

	if ( ! pFnAddClassNameToAttributeArray )
		pFnAddClassNameToAttributeArray = (UFunction*) UObject::GObjObjects()->Data[ 67987 ];

	USFXTelemetry_execAddClassNameToAttributeArray_Parms AddClassNameToAttributeArray_Parms;
	memcpy ( &AddClassNameToAttributeArray_Parms.AttrName, &AttrName, 0x10 );
	memcpy ( &AddClassNameToAttributeArray_Parms.cnData, &cnData, 0x8 );

	pFnAddClassNameToAttributeArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddClassNameToAttributeArray, &AddClassNameToAttributeArray_Parms, NULL );

	pFnAddClassNameToAttributeArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &AddClassNameToAttributeArray_Parms.Attributes, 0x10 );
};

// Function SFXGame.SFXTelemetry.AddBoolToAttributeArray
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bData                          ( CPF_Parm )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::AddBoolToAttributeArray ( struct FString AttrName, unsigned long bData, struct TArray<struct FTelemetryAttribute>* Attributes )
{
	static UFunction* pFnAddBoolToAttributeArray = NULL;

	if ( ! pFnAddBoolToAttributeArray )
		pFnAddBoolToAttributeArray = (UFunction*) UObject::GObjObjects()->Data[ 67982 ];

	USFXTelemetry_execAddBoolToAttributeArray_Parms AddBoolToAttributeArray_Parms;
	memcpy ( &AddBoolToAttributeArray_Parms.AttrName, &AttrName, 0x10 );
	AddBoolToAttributeArray_Parms.bData = bData;

	pFnAddBoolToAttributeArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBoolToAttributeArray, &AddBoolToAttributeArray_Parms, NULL );

	pFnAddBoolToAttributeArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &AddBoolToAttributeArray_Parms.Attributes, 0x10 );
};

// Function SFXGame.SFXTelemetry.AddFloatToAttributeArray
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          fData                          ( CPF_Parm )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::AddFloatToAttributeArray ( struct FString AttrName, float fData, struct TArray<struct FTelemetryAttribute>* Attributes )
{
	static UFunction* pFnAddFloatToAttributeArray = NULL;

	if ( ! pFnAddFloatToAttributeArray )
		pFnAddFloatToAttributeArray = (UFunction*) UObject::GObjObjects()->Data[ 67977 ];

	USFXTelemetry_execAddFloatToAttributeArray_Parms AddFloatToAttributeArray_Parms;
	memcpy ( &AddFloatToAttributeArray_Parms.AttrName, &AttrName, 0x10 );
	AddFloatToAttributeArray_Parms.fData = fData;

	pFnAddFloatToAttributeArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFloatToAttributeArray, &AddFloatToAttributeArray_Parms, NULL );

	pFnAddFloatToAttributeArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &AddFloatToAttributeArray_Parms.Attributes, 0x10 );
};

// Function SFXGame.SFXTelemetry.AddIntToAttributeArray
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            nData                          ( CPF_Parm )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::AddIntToAttributeArray ( struct FString AttrName, int nData, struct TArray<struct FTelemetryAttribute>* Attributes )
{
	static UFunction* pFnAddIntToAttributeArray = NULL;

	if ( ! pFnAddIntToAttributeArray )
		pFnAddIntToAttributeArray = (UFunction*) UObject::GObjObjects()->Data[ 67972 ];

	USFXTelemetry_execAddIntToAttributeArray_Parms AddIntToAttributeArray_Parms;
	memcpy ( &AddIntToAttributeArray_Parms.AttrName, &AttrName, 0x10 );
	AddIntToAttributeArray_Parms.nData = nData;

	pFnAddIntToAttributeArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddIntToAttributeArray, &AddIntToAttributeArray_Parms, NULL );

	pFnAddIntToAttributeArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &AddIntToAttributeArray_Parms.Attributes, 0x10 );
};

// Function SFXGame.SFXTelemetry.AddStringToAttributeArray
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::AddStringToAttributeArray ( struct FString AttrName, struct TArray<struct FTelemetryAttribute>* Attributes, struct FString* sData )
{
	static UFunction* pFnAddStringToAttributeArray = NULL;

	if ( ! pFnAddStringToAttributeArray )
		pFnAddStringToAttributeArray = (UFunction*) UObject::GObjObjects()->Data[ 67967 ];

	USFXTelemetry_execAddStringToAttributeArray_Parms AddStringToAttributeArray_Parms;
	memcpy ( &AddStringToAttributeArray_Parms.AttrName, &AttrName, 0x10 );

	pFnAddStringToAttributeArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddStringToAttributeArray, &AddStringToAttributeArray_Parms, NULL );

	pFnAddStringToAttributeArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &AddStringToAttributeArray_Parms.Attributes, 0x10 );

	if ( sData )
		memcpy ( sData, &AddStringToAttributeArray_Parms.sData, 0x10 );
};

// Function SFXGame.SFXTelemetry.GenerateUniqueClassId
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UObject*                 Object                         ( CPF_Parm )

struct FString USFXTelemetry::GenerateUniqueClassId ( class UObject* Object )
{
	static UFunction* pFnGenerateUniqueClassId = NULL;

	if ( ! pFnGenerateUniqueClassId )
		pFnGenerateUniqueClassId = (UFunction*) UObject::GObjObjects()->Data[ 67964 ];

	USFXTelemetry_execGenerateUniqueClassId_Parms GenerateUniqueClassId_Parms;
	GenerateUniqueClassId_Parms.Object = Object;

	pFnGenerateUniqueClassId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateUniqueClassId, &GenerateUniqueClassId_Parms, NULL );

	pFnGenerateUniqueClassId->FunctionFlags |= 0x400;

	return GenerateUniqueClassId_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.GenerateUniqueClassIdFromName
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FName                   FullFriendlyName               ( CPF_Parm )

struct FString USFXTelemetry::GenerateUniqueClassIdFromName ( struct FName FullFriendlyName )
{
	static UFunction* pFnGenerateUniqueClassIdFromName = NULL;

	if ( ! pFnGenerateUniqueClassIdFromName )
		pFnGenerateUniqueClassIdFromName = (UFunction*) UObject::GObjObjects()->Data[ 67961 ];

	USFXTelemetry_execGenerateUniqueClassIdFromName_Parms GenerateUniqueClassIdFromName_Parms;
	memcpy ( &GenerateUniqueClassIdFromName_Parms.FullFriendlyName, &FullFriendlyName, 0x8 );

	pFnGenerateUniqueClassIdFromName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateUniqueClassIdFromName, &GenerateUniqueClassIdFromName_Parms, NULL );

	pFnGenerateUniqueClassIdFromName->FunctionFlags |= 0x400;

	return GenerateUniqueClassIdFromName_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.GenerateUniqueClassIdFromString
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 FullFriendlyName               ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FString USFXTelemetry::GenerateUniqueClassIdFromString ( struct FString* FullFriendlyName )
{
	static UFunction* pFnGenerateUniqueClassIdFromString = NULL;

	if ( ! pFnGenerateUniqueClassIdFromString )
		pFnGenerateUniqueClassIdFromString = (UFunction*) UObject::GObjObjects()->Data[ 67958 ];

	USFXTelemetry_execGenerateUniqueClassIdFromString_Parms GenerateUniqueClassIdFromString_Parms;

	pFnGenerateUniqueClassIdFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateUniqueClassIdFromString, &GenerateUniqueClassIdFromString_Parms, NULL );

	pFnGenerateUniqueClassIdFromString->FunctionFlags |= 0x400;

	if ( FullFriendlyName )
		memcpy ( FullFriendlyName, &GenerateUniqueClassIdFromString_Parms.FullFriendlyName, 0x10 );

	return GenerateUniqueClassIdFromString_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.VectorToTelemetryString
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FVector                 V                              ( CPF_Parm )

struct FString USFXTelemetry::VectorToTelemetryString ( struct FVector V )
{
	static UFunction* pFnVectorToTelemetryString = NULL;

	if ( ! pFnVectorToTelemetryString )
		pFnVectorToTelemetryString = (UFunction*) UObject::GObjObjects()->Data[ 67955 ];

	USFXTelemetry_execVectorToTelemetryString_Parms VectorToTelemetryString_Parms;
	memcpy ( &VectorToTelemetryString_Parms.V, &V, 0xC );

	pFnVectorToTelemetryString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVectorToTelemetryString, &VectorToTelemetryString_Parms, NULL );

	pFnVectorToTelemetryString->FunctionFlags |= 0x400;

	return VectorToTelemetryString_Parms.ReturnValue;
};

// Function SFXGame.SFXTelemetry.SendArray
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )
// struct TArray<struct FTelemetryAttribute> Attributes                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::SendArray ( struct FName HookName, unsigned long bNeedFlush, struct TArray<struct FTelemetryAttribute>* Attributes )
{
	static UFunction* pFnSendArray = NULL;

	if ( ! pFnSendArray )
		pFnSendArray = (UFunction*) UObject::GObjObjects()->Data[ 67950 ];

	USFXTelemetry_execSendArray_Parms SendArray_Parms;
	memcpy ( &SendArray_Parms.HookName, &HookName, 0x8 );
	SendArray_Parms.bNeedFlush = bNeedFlush;

	pFnSendArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendArray, &SendArray_Parms, NULL );

	pFnSendArray->FunctionFlags |= 0x400;

	if ( Attributes )
		memcpy ( Attributes, &SendArray_Parms.Attributes, 0x10 );
};

// Function SFXGame.SFXTelemetry.SendBool
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bValue                         ( CPF_Const | CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )

void USFXTelemetry::SendBool ( struct FName HookName, struct FString AttrName, unsigned long bValue, unsigned long bNeedFlush )
{
	static UFunction* pFnSendBool = NULL;

	if ( ! pFnSendBool )
		pFnSendBool = (UFunction*) UObject::GObjObjects()->Data[ 67945 ];

	USFXTelemetry_execSendBool_Parms SendBool_Parms;
	memcpy ( &SendBool_Parms.HookName, &HookName, 0x8 );
	memcpy ( &SendBool_Parms.AttrName, &AttrName, 0x10 );
	SendBool_Parms.bValue = bValue;
	SendBool_Parms.bNeedFlush = bNeedFlush;

	pFnSendBool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBool, &SendBool_Parms, NULL );

	pFnSendBool->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SendFloat
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          fValue                         ( CPF_Const | CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )

void USFXTelemetry::SendFloat ( struct FName HookName, struct FString AttrName, float fValue, unsigned long bNeedFlush )
{
	static UFunction* pFnSendFloat = NULL;

	if ( ! pFnSendFloat )
		pFnSendFloat = (UFunction*) UObject::GObjObjects()->Data[ 67940 ];

	USFXTelemetry_execSendFloat_Parms SendFloat_Parms;
	memcpy ( &SendFloat_Parms.HookName, &HookName, 0x8 );
	memcpy ( &SendFloat_Parms.AttrName, &AttrName, 0x10 );
	SendFloat_Parms.fValue = fValue;
	SendFloat_Parms.bNeedFlush = bNeedFlush;

	pFnSendFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendFloat, &SendFloat_Parms, NULL );

	pFnSendFloat->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SendInt
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            nValue                         ( CPF_Const | CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )

void USFXTelemetry::SendInt ( struct FName HookName, struct FString AttrName, int nValue, unsigned long bNeedFlush )
{
	static UFunction* pFnSendInt = NULL;

	if ( ! pFnSendInt )
		pFnSendInt = (UFunction*) UObject::GObjObjects()->Data[ 67935 ];

	USFXTelemetry_execSendInt_Parms SendInt_Parms;
	memcpy ( &SendInt_Parms.HookName, &HookName, 0x8 );
	memcpy ( &SendInt_Parms.AttrName, &AttrName, 0x10 );
	SendInt_Parms.nValue = nValue;
	SendInt_Parms.bNeedFlush = bNeedFlush;

	pFnSendInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendInt, &SendInt_Parms, NULL );

	pFnSendInt->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SendString
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )
// struct FString                 sValue                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXTelemetry::SendString ( struct FName HookName, struct FString AttrName, unsigned long bNeedFlush, struct FString* sValue )
{
	static UFunction* pFnSendString = NULL;

	if ( ! pFnSendString )
		pFnSendString = (UFunction*) UObject::GObjObjects()->Data[ 67930 ];

	USFXTelemetry_execSendString_Parms SendString_Parms;
	memcpy ( &SendString_Parms.HookName, &HookName, 0x8 );
	memcpy ( &SendString_Parms.AttrName, &AttrName, 0x10 );
	SendString_Parms.bNeedFlush = bNeedFlush;

	pFnSendString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendString, &SendString_Parms, NULL );

	pFnSendString->FunctionFlags |= 0x400;

	if ( sValue )
		memcpy ( sValue, &SendString_Parms.sValue, 0x10 );
};

// Function SFXGame.SFXTelemetry.SendName
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// struct FString                 AttrName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   nmValue                        ( CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )

void USFXTelemetry::SendName ( struct FName HookName, struct FString AttrName, struct FName nmValue, unsigned long bNeedFlush )
{
	static UFunction* pFnSendName = NULL;

	if ( ! pFnSendName )
		pFnSendName = (UFunction*) UObject::GObjObjects()->Data[ 67925 ];

	USFXTelemetry_execSendName_Parms SendName_Parms;
	memcpy ( &SendName_Parms.HookName, &HookName, 0x8 );
	memcpy ( &SendName_Parms.AttrName, &AttrName, 0x10 );
	memcpy ( &SendName_Parms.nmValue, &nmValue, 0x8 );
	SendName_Parms.bNeedFlush = bNeedFlush;

	pFnSendName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendName, &SendName_Parms, NULL );

	pFnSendName->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.SendVoid
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   HookName                       ( CPF_Parm )
// unsigned long                  bNeedFlush                     ( CPF_OptionalParm | CPF_Parm )

void USFXTelemetry::SendVoid ( struct FName HookName, unsigned long bNeedFlush )
{
	static UFunction* pFnSendVoid = NULL;

	if ( ! pFnSendVoid )
		pFnSendVoid = (UFunction*) UObject::GObjObjects()->Data[ 67922 ];

	USFXTelemetry_execSendVoid_Parms SendVoid_Parms;
	memcpy ( &SendVoid_Parms.HookName, &HookName, 0x8 );
	SendVoid_Parms.bNeedFlush = bNeedFlush;

	pFnSendVoid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendVoid, &SendVoid_Parms, NULL );

	pFnSendVoid->FunctionFlags |= 0x400;
};

// Function SFXGame.SFXTelemetry.GetInstanceGameSession
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USFXTelemetryGameSession* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXTelemetryGameSession* USFXTelemetry::GetInstanceGameSession ( )
{
	static UFunction* pFnGetInstanceGameSession = NULL;

	if ( ! pFnGetInstanceGameSession )
		pFnGetInstanceGameSession = (UFunction*) UObject::GObjObjects()->Data[ 67920 ];

	USFXTelemetry_execGetInstanceGameSession_Parms GetInstanceGameSession_Parms;

	pFnGetInstanceGameSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInstanceGameSession, &GetInstanceGameSession_Parms, NULL );

	pFnGetInstanceGameSession->FunctionFlags |= 0x400;

	return GetInstanceGameSession_Parms.ReturnValue;
};

// Function SFXGame.BioMountFallVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioMountFallVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55730 ];

	ABioMountFallVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioMountFallVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioMountFallVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55722 ];

	ABioMountFallVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioTrigger.BioBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioTrigger::eventBioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 65061 ];

	ABioTrigger_eventBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioTrigger.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioTrigger::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65059 ];

	ABioTrigger_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioTrigger.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioTrigger::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65052 ];

	ABioTrigger_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.HandleVehicleChatterEvent
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned char                  eSoundSet                      ( CPF_Parm )

void ABioVehicleBase::eventHandleVehicleChatterEvent ( unsigned char eSoundSet )
{
	static UFunction* pFnHandleVehicleChatterEvent = NULL;

	if ( ! pFnHandleVehicleChatterEvent )
		pFnHandleVehicleChatterEvent = (UFunction*) UObject::GObjObjects()->Data[ 65328 ];

	ABioVehicleBase_eventHandleVehicleChatterEvent_Parms HandleVehicleChatterEvent_Parms;
	HandleVehicleChatterEvent_Parms.eSoundSet = eSoundSet;

	this->ProcessEvent ( pFnHandleVehicleChatterEvent, &HandleVehicleChatterEvent_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.OnTeleport
// [0x00020102] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void ABioVehicleBase::OnTeleport ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleport = NULL;

	if ( ! pFnOnTeleport )
		pFnOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 65462 ];

	ABioVehicleBase_execOnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleport, &OnTeleport_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.GetSaveObjectClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ABioVehicleBase::GetSaveObjectClass ( )
{
	static UFunction* pFnGetSaveObjectClass = NULL;

	if ( ! pFnGetSaveObjectClass )
		pFnGetSaveObjectClass = (UFunction*) UObject::GObjObjects()->Data[ 65460 ];

	ABioVehicleBase_execGetSaveObjectClass_Parms GetSaveObjectClass_Parms;

	this->ProcessEvent ( pFnGetSaveObjectClass, &GetSaveObjectClass_Parms, NULL );

	return GetSaveObjectClass_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ABioVehicleBase::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 65456 ];

	ABioVehicleBase_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.ProxyTryToDrive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ABioVehicleBase::eventProxyTryToDrive ( class APawn* P )
{
	static UFunction* pFnProxyTryToDrive = NULL;

	if ( ! pFnProxyTryToDrive )
		pFnProxyTryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 65453 ];

	ABioVehicleBase_eventProxyTryToDrive_Parms ProxyTryToDrive_Parms;
	ProxyTryToDrive_Parms.P = P;

	this->ProcessEvent ( pFnProxyTryToDrive, &ProxyTryToDrive_Parms, NULL );

	return ProxyTryToDrive_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ABioVehicleBase::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 65448 ];

	ABioVehicleBase_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x28 );
};

// Function SFXGame.BioVehicleBase.DrawHUD
// [0x00020102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void ABioVehicleBase::DrawHUD ( class AHUD* H )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 65441 ];

	ABioVehicleBase_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.BioProxyDetachDriver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ABioVehicleBase::eventBioProxyDetachDriver ( class APawn* P )
{
	static UFunction* pFnBioProxyDetachDriver = NULL;

	if ( ! pFnBioProxyDetachDriver )
		pFnBioProxyDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 65439 ];

	ABioVehicleBase_eventBioProxyDetachDriver_Parms BioProxyDetachDriver_Parms;
	BioProxyDetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnBioProxyDetachDriver, &BioProxyDetachDriver_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ABioVehicleBase::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 65437 ];

	ABioVehicleBase_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.BioProxyAttachDriver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ABioVehicleBase::eventBioProxyAttachDriver ( class APawn* P )
{
	static UFunction* pFnBioProxyAttachDriver = NULL;

	if ( ! pFnBioProxyAttachDriver )
		pFnBioProxyAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 65435 ];

	ABioVehicleBase_eventBioProxyAttachDriver_Parms BioProxyAttachDriver_Parms;
	BioProxyAttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnBioProxyAttachDriver, &BioProxyAttachDriver_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ABioVehicleBase::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 65433 ];

	ABioVehicleBase_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.SetExitingSquadLocation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vExitCenterLocation            ( CPF_Parm )
// float                          fPlacementOffset               ( CPF_Parm )

bool ABioVehicleBase::SetExitingSquadLocation ( struct FVector vExitCenterLocation, float fPlacementOffset )
{
	static UFunction* pFnSetExitingSquadLocation = NULL;

	if ( ! pFnSetExitingSquadLocation )
		pFnSetExitingSquadLocation = (UFunction*) UObject::GObjObjects()->Data[ 65424 ];

	ABioVehicleBase_execSetExitingSquadLocation_Parms SetExitingSquadLocation_Parms;
	memcpy ( &SetExitingSquadLocation_Parms.vExitCenterLocation, &vExitCenterLocation, 0xC );
	SetExitingSquadLocation_Parms.fPlacementOffset = fPlacementOffset;

	this->ProcessEvent ( pFnSetExitingSquadLocation, &SetExitingSquadLocation_Parms, NULL );

	return SetExitingSquadLocation_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.PlaceExitingDriver
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_OptionalParm | CPF_Parm )

bool ABioVehicleBase::PlaceExitingDriver ( class APawn* ExitingDriver )
{
	static UFunction* pFnPlaceExitingDriver = NULL;

	if ( ! pFnPlaceExitingDriver )
		pFnPlaceExitingDriver = (UFunction*) UObject::GObjObjects()->Data[ 65415 ];

	ABioVehicleBase_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL );

	return PlaceExitingDriver_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ABioVehicleBase::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 65411 ];

	ABioVehicleBase_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ABioVehicleBase::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 65402 ];

	ABioVehicleBase_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.SetPartyCollisionState
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCollideState                  ( CPF_Parm )

void ABioVehicleBase::SetPartyCollisionState ( unsigned long bCollideState )
{
	static UFunction* pFnSetPartyCollisionState = NULL;

	if ( ! pFnSetPartyCollisionState )
		pFnSetPartyCollisionState = (UFunction*) UObject::GObjObjects()->Data[ 65398 ];

	ABioVehicleBase_execSetPartyCollisionState_Parms SetPartyCollisionState_Parms;
	SetPartyCollisionState_Parms.bCollideState = bCollideState;

	this->ProcessEvent ( pFnSetPartyCollisionState, &SetPartyCollisionState_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.BioBeginPlay
// [0x00020102] 
// Parameters infos:

void ABioVehicleBase::BioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 65397 ];

	ABioVehicleBase_execBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioVehicleBase::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 65391 ];

	ABioVehicleBase_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioVehicleBase.ReattachAllPrimitiveComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioVehicleBase::ReattachAllPrimitiveComponents ( )
{
	static UFunction* pFnReattachAllPrimitiveComponents = NULL;

	if ( ! pFnReattachAllPrimitiveComponents )
		pFnReattachAllPrimitiveComponents = (UFunction*) UObject::GObjObjects()->Data[ 65390 ];

	ABioVehicleBase_execReattachAllPrimitiveComponents_Parms ReattachAllPrimitiveComponents_Parms;

	pFnReattachAllPrimitiveComponents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReattachAllPrimitiveComponents, &ReattachAllPrimitiveComponents_Parms, NULL );

	pFnReattachAllPrimitiveComponents->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBase.KillAllMomentum
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ABioVehicleBase::KillAllMomentum ( )
{
	static UFunction* pFnKillAllMomentum = NULL;

	if ( ! pFnKillAllMomentum )
		pFnKillAllMomentum = (UFunction*) UObject::GObjObjects()->Data[ 65389 ];

	ABioVehicleBase_execKillAllMomentum_Parms KillAllMomentum_Parms;

	pFnKillAllMomentum->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKillAllMomentum, &KillAllMomentum_Parms, NULL );

	pFnKillAllMomentum->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBase.IsExitLocationValid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vExitLocation                  ( CPF_Parm )

bool ABioVehicleBase::IsExitLocationValid ( struct FVector vExitLocation )
{
	static UFunction* pFnIsExitLocationValid = NULL;

	if ( ! pFnIsExitLocationValid )
		pFnIsExitLocationValid = (UFunction*) UObject::GObjObjects()->Data[ 65386 ];

	ABioVehicleBase_execIsExitLocationValid_Parms IsExitLocationValid_Parms;
	memcpy ( &IsExitLocationValid_Parms.vExitLocation, &vExitLocation, 0xC );

	pFnIsExitLocationValid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsExitLocationValid, &IsExitLocationValid_Parms, NULL );

	pFnIsExitLocationValid->FunctionFlags |= 0x400;

	return IsExitLocationValid_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.InitializeForPlay
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ABioVehicleBase::InitializeForPlay ( )
{
	static UFunction* pFnInitializeForPlay = NULL;

	if ( ! pFnInitializeForPlay )
		pFnInitializeForPlay = (UFunction*) UObject::GObjObjects()->Data[ 65385 ];

	ABioVehicleBase_execInitializeForPlay_Parms InitializeForPlay_Parms;

	pFnInitializeForPlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForPlay, &InitializeForPlay_Parms, NULL );

	pFnInitializeForPlay->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleBase.PerformForceExitCleanup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVehicleBase::PerformForceExitCleanup ( )
{
	static UFunction* pFnPerformForceExitCleanup = NULL;

	if ( ! pFnPerformForceExitCleanup )
		pFnPerformForceExitCleanup = (UFunction*) UObject::GObjObjects()->Data[ 65383 ];

	ABioVehicleBase_execPerformForceExitCleanup_Parms PerformForceExitCleanup_Parms;

	pFnPerformForceExitCleanup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformForceExitCleanup, &PerformForceExitCleanup_Parms, NULL );

	pFnPerformForceExitCleanup->FunctionFlags |= 0x400;

	return PerformForceExitCleanup_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.BioCanExitVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVehicleBase::BioCanExitVehicle ( )
{
	static UFunction* pFnBioCanExitVehicle = NULL;

	if ( ! pFnBioCanExitVehicle )
		pFnBioCanExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 65381 ];

	ABioVehicleBase_execBioCanExitVehicle_Parms BioCanExitVehicle_Parms;

	pFnBioCanExitVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioCanExitVehicle, &BioCanExitVehicle_Parms, NULL );

	pFnBioCanExitVehicle->FunctionFlags |= 0x400;

	return BioCanExitVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.BioCanEnterVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVehicleBase::BioCanEnterVehicle ( )
{
	static UFunction* pFnBioCanEnterVehicle = NULL;

	if ( ! pFnBioCanEnterVehicle )
		pFnBioCanEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 65379 ];

	ABioVehicleBase_execBioCanEnterVehicle_Parms BioCanEnterVehicle_Parms;

	pFnBioCanEnterVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBioCanEnterVehicle, &BioCanEnterVehicle_Parms, NULL );

	pFnBioCanEnterVehicle->FunctionFlags |= 0x400;

	return BioCanEnterVehicle_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleBase.GetVisualImpactSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UBioVISSimple*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UBioVISSimple* ABioVehicleBase::GetVisualImpactSet ( )
{
	static UFunction* pFnGetVisualImpactSet = NULL;

	if ( ! pFnGetVisualImpactSet )
		pFnGetVisualImpactSet = (UFunction*) UObject::GObjObjects()->Data[ 65377 ];

	ABioVehicleBase_execGetVisualImpactSet_Parms GetVisualImpactSet_Parms;

	pFnGetVisualImpactSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVisualImpactSet, &GetVisualImpactSet_Parms, NULL );

	pFnGetVisualImpactSet->FunctionFlags |= 0x400;

	return GetVisualImpactSet_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.ModifyWheelControllers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bNewIgnoreWhenNotRendered      ( CPF_Parm )

void ABioVehicleWheeled::ModifyWheelControllers ( unsigned long bNewIgnoreWhenNotRendered )
{
	static UFunction* pFnModifyWheelControllers = NULL;

	if ( ! pFnModifyWheelControllers )
		pFnModifyWheelControllers = (UFunction*) UObject::GObjObjects()->Data[ 65681 ];

	ABioVehicleWheeled_execModifyWheelControllers_Parms ModifyWheelControllers_Parms;
	ModifyWheelControllers_Parms.bNewIgnoreWhenNotRendered = bNewIgnoreWhenNotRendered;

	pFnModifyWheelControllers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyWheelControllers, &ModifyWheelControllers_Parms, NULL );

	pFnModifyWheelControllers->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleWheeled.AddForce
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 Force                          ( CPF_Parm )

void ABioVehicleWheeled::AddForce ( struct FVector Force )
{
	static UFunction* pFnAddForce = NULL;

	if ( ! pFnAddForce )
		pFnAddForce = (UFunction*) UObject::GObjObjects()->Data[ 65679 ];

	ABioVehicleWheeled_execAddForce_Parms AddForce_Parms;
	memcpy ( &AddForce_Parms.Force, &Force, 0xC );

	pFnAddForce->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddForce, &AddForce_Parms, NULL );

	pFnAddForce->FunctionFlags |= 0x400;
};

// Function SFXGame.BioVehicleWheeled.DebugDraw_Vehicle
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void ABioVehicleWheeled::DebugDraw_Vehicle ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw_Vehicle = NULL;

	if ( ! pFnDebugDraw_Vehicle )
		pFnDebugDraw_Vehicle = (UFunction*) UObject::GObjObjects()->Data[ 65673 ];

	ABioVehicleWheeled_execDebugDraw_Vehicle_Parms DebugDraw_Vehicle_Parms;
	DebugDraw_Vehicle_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw_Vehicle, &DebugDraw_Vehicle_Parms, NULL );
};

// Function SFXGame.BioVehicleWheeled.CanBoost
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVehicleWheeled::CanBoost ( )
{
	static UFunction* pFnCanBoost = NULL;

	if ( ! pFnCanBoost )
		pFnCanBoost = (UFunction*) UObject::GObjObjects()->Data[ 65670 ];

	ABioVehicleWheeled_execCanBoost_Parms CanBoost_Parms;

	this->ProcessEvent ( pFnCanBoost, &CanBoost_Parms, NULL );

	return CanBoost_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.CanJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioVehicleWheeled::CanJump ( )
{
	static UFunction* pFnCanJump = NULL;

	if ( ! pFnCanJump )
		pFnCanJump = (UFunction*) UObject::GObjObjects()->Data[ 65667 ];

	ABioVehicleWheeled_execCanJump_Parms CanJump_Parms;

	this->ProcessEvent ( pFnCanJump, &CanJump_Parms, NULL );

	return CanJump_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.UpdateFuel
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioVehicleWheeled::UpdateFuel ( float DeltaTime )
{
	static UFunction* pFnUpdateFuel = NULL;

	if ( ! pFnUpdateFuel )
		pFnUpdateFuel = (UFunction*) UObject::GObjObjects()->Data[ 65661 ];

	ABioVehicleWheeled_execUpdateFuel_Parms UpdateFuel_Parms;
	UpdateFuel_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateFuel, &UpdateFuel_Parms, NULL );
};

// Function SFXGame.BioVehicleWheeled.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioVehicleWheeled::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 65646 ];

	ABioVehicleWheeled_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioVehicleWheeled.GetWeaponStartTraceLocation
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ABioVehicleWheeled::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 65643 ];

	ABioVehicleWheeled_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	pFnGetWeaponStartTraceLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	pFnGetWeaponStartTraceLocation->FunctionFlags |= 0x400;

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.StopAllBoostEffects
// [0x00020002] 
// Parameters infos:

void ABioVehicleWheeled::StopAllBoostEffects ( )
{
	static UFunction* pFnStopAllBoostEffects = NULL;

	if ( ! pFnStopAllBoostEffects )
		pFnStopAllBoostEffects = (UFunction*) UObject::GObjObjects()->Data[ 65640 ];

	ABioVehicleWheeled_execStopAllBoostEffects_Parms StopAllBoostEffects_Parms;

	this->ProcessEvent ( pFnStopAllBoostEffects, &StopAllBoostEffects_Parms, NULL );
};

// Function SFXGame.BioVehicleWheeled.StopAllJumpEffects
// [0x00020002] 
// Parameters infos:

void ABioVehicleWheeled::StopAllJumpEffects ( )
{
	static UFunction* pFnStopAllJumpEffects = NULL;

	if ( ! pFnStopAllJumpEffects )
		pFnStopAllJumpEffects = (UFunction*) UObject::GObjObjects()->Data[ 65638 ];

	ABioVehicleWheeled_execStopAllJumpEffects_Parms StopAllJumpEffects_Parms;

	this->ProcessEvent ( pFnStopAllJumpEffects, &StopAllJumpEffects_Parms, NULL );
};

// Function SFXGame.BioVehicleWheeled.DriverLeave
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ABioVehicleWheeled::DriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 65627 ];

	ABioVehicleWheeled_execDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ABioVehicleWheeled::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 65624 ];

	ABioVehicleWheeled_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SFXGame.BioVehicleWheeled.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ABioVehicleWheeled::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 65619 ];

	ABioVehicleWheeled_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioVehicleTrackSet.FindParticleSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       a_Material                     ( CPF_Parm )

class UParticleSystem* UBioVehicleTrackSet::FindParticleSystem ( class UPhysicalMaterial* a_Material )
{
	static UFunction* pFnFindParticleSystem = NULL;

	if ( ! pFnFindParticleSystem )
		pFnFindParticleSystem = (UFunction*) UObject::GObjObjects()->Data[ 65539 ];

	UBioVehicleTrackSet_execFindParticleSystem_Parms FindParticleSystem_Parms;
	FindParticleSystem_Parms.a_Material = a_Material;

	pFnFindParticleSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindParticleSystem, &FindParticleSystem_Parms, NULL );

	pFnFindParticleSystem->FunctionFlags |= 0x400;

	return FindParticleSystem_Parms.ReturnValue;
};

// Function SFXGame.BioVFXInterface.CreateDeathEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioVFXInterface::CreateDeathEffects ( class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnCreateDeathEffects = NULL;

	if ( ! pFnCreateDeathEffects )
		pFnCreateDeathEffects = (UFunction*) UObject::GObjObjects()->Data[ 41351 ];

	UBioVFXInterface_execCreateDeathEffects_Parms CreateDeathEffects_Parms;
	CreateDeathEffects_Parms.pGameState = pGameState;

	pFnCreateDeathEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateDeathEffects, &CreateDeathEffects_Parms, NULL );

	pFnCreateDeathEffects->FunctionFlags |= 0x400;

	return CreateDeathEffects_Parms.ReturnValue;
};

// Function SFXGame.UnVince.LeaderChanged
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                OldLeader                      ( CPF_Parm )
// class ABioPawn*                NewLeader                      ( CPF_Parm )

void UUnVince::LeaderChanged ( class ABioPawn* OldLeader, class ABioPawn* NewLeader )
{
	static UFunction* pFnLeaderChanged = NULL;

	if ( ! pFnLeaderChanged )
		pFnLeaderChanged = (UFunction*) UObject::GObjObjects()->Data[ 68506 ];

	UUnVince_execLeaderChanged_Parms LeaderChanged_Parms;
	LeaderChanged_Parms.OldLeader = OldLeader;
	LeaderChanged_Parms.NewLeader = NewLeader;

	pFnLeaderChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaderChanged, &LeaderChanged_Parms, NULL );

	pFnLeaderChanged->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.PartyProfiling
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                oPawn                          ( CPF_Parm )
// unsigned long                  bJoining                       ( CPF_Parm )

void UUnVince::PartyProfiling ( class ABioPawn* oPawn, unsigned long bJoining )
{
	static UFunction* pFnPartyProfiling = NULL;

	if ( ! pFnPartyProfiling )
		pFnPartyProfiling = (UFunction*) UObject::GObjObjects()->Data[ 68503 ];

	UUnVince_execPartyProfiling_Parms PartyProfiling_Parms;
	PartyProfiling_Parms.oPawn = oPawn;
	PartyProfiling_Parms.bJoining = bJoining;

	pFnPartyProfiling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPartyProfiling, &PartyProfiling_Parms, NULL );

	pFnPartyProfiling->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.XPGainedPawnKilledHelper
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                Player                         ( CPF_Parm )
// class ABioPawn*                DeadPawn                       ( CPF_Parm )
// int                            xpGained                       ( CPF_Parm )

void UUnVince::XPGainedPawnKilledHelper ( class ABioPawn* Player, class ABioPawn* DeadPawn, int xpGained )
{
	static UFunction* pFnXPGainedPawnKilledHelper = NULL;

	if ( ! pFnXPGainedPawnKilledHelper )
		pFnXPGainedPawnKilledHelper = (UFunction*) UObject::GObjObjects()->Data[ 68499 ];

	UUnVince_execXPGainedPawnKilledHelper_Parms XPGainedPawnKilledHelper_Parms;
	XPGainedPawnKilledHelper_Parms.Player = Player;
	XPGainedPawnKilledHelper_Parms.DeadPawn = DeadPawn;
	XPGainedPawnKilledHelper_Parms.xpGained = xpGained;

	pFnXPGainedPawnKilledHelper->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnXPGainedPawnKilledHelper, &XPGainedPawnKilledHelper_Parms, NULL );

	pFnXPGainedPawnKilledHelper->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.CharacterCreationFinished
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 PlayerClass                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  background                     ( CPF_Parm )
// unsigned char                  priAttribute                   ( CPF_Parm )
// unsigned char                  secAttribute                   ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UUnVince::CharacterCreationFinished ( struct FString PlayerName, struct FString PlayerClass, unsigned char background, unsigned char priAttribute, unsigned char secAttribute, struct FString Message )
{
	static UFunction* pFnCharacterCreationFinished = NULL;

	if ( ! pFnCharacterCreationFinished )
		pFnCharacterCreationFinished = (UFunction*) UObject::GObjObjects()->Data[ 68492 ];

	UUnVince_execCharacterCreationFinished_Parms CharacterCreationFinished_Parms;
	memcpy ( &CharacterCreationFinished_Parms.PlayerName, &PlayerName, 0x10 );
	memcpy ( &CharacterCreationFinished_Parms.PlayerClass, &PlayerClass, 0x10 );
	CharacterCreationFinished_Parms.background = background;
	CharacterCreationFinished_Parms.priAttribute = priAttribute;
	CharacterCreationFinished_Parms.secAttribute = secAttribute;
	memcpy ( &CharacterCreationFinished_Parms.Message, &Message, 0x10 );

	pFnCharacterCreationFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCharacterCreationFinished, &CharacterCreationFinished_Parms, NULL );

	pFnCharacterCreationFinished->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.CharacterCreationStarted
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UUnVince::CharacterCreationStarted ( )
{
	static UFunction* pFnCharacterCreationStarted = NULL;

	if ( ! pFnCharacterCreationStarted )
		pFnCharacterCreationStarted = (UFunction*) UObject::GObjObjects()->Data[ 68491 ];

	UUnVince_execCharacterCreationStarted_Parms CharacterCreationStarted_Parms;

	pFnCharacterCreationStarted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCharacterCreationStarted, &CharacterCreationStarted_Parms, NULL );

	pFnCharacterCreationStarted->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.VinceLogTalentInfoPlayerAndSquad
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// unsigned long                  bIsTalentChange                ( CPF_Parm )

void UUnVince::VinceLogTalentInfoPlayerAndSquad ( class ABioPawn* pPawn, unsigned long bIsTalentChange )
{
	static UFunction* pFnVinceLogTalentInfoPlayerAndSquad = NULL;

	if ( ! pFnVinceLogTalentInfoPlayerAndSquad )
		pFnVinceLogTalentInfoPlayerAndSquad = (UFunction*) UObject::GObjObjects()->Data[ 68488 ];

	UUnVince_execVinceLogTalentInfoPlayerAndSquad_Parms VinceLogTalentInfoPlayerAndSquad_Parms;
	VinceLogTalentInfoPlayerAndSquad_Parms.pPawn = pPawn;
	VinceLogTalentInfoPlayerAndSquad_Parms.bIsTalentChange = bIsTalentChange;

	pFnVinceLogTalentInfoPlayerAndSquad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVinceLogTalentInfoPlayerAndSquad, &VinceLogTalentInfoPlayerAndSquad_Parms, NULL );

	pFnVinceLogTalentInfoPlayerAndSquad->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.RecordVehicleDeath
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ASVehicle*               pTarget                        ( CPF_Parm )
// class AController*             pInstigator                    ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )
// class UBioDamageType*          pDamage                        ( CPF_Parm )

void UUnVince::RecordVehicleDeath ( class ASVehicle* pTarget, class AController* pInstigator, struct FVector vHitLocation, class UClass* clsDamageType, class UBioDamageType* pDamage )
{
	static UFunction* pFnRecordVehicleDeath = NULL;

	if ( ! pFnRecordVehicleDeath )
		pFnRecordVehicleDeath = (UFunction*) UObject::GObjObjects()->Data[ 68482 ];

	UUnVince_execRecordVehicleDeath_Parms RecordVehicleDeath_Parms;
	RecordVehicleDeath_Parms.pTarget = pTarget;
	RecordVehicleDeath_Parms.pInstigator = pInstigator;
	memcpy ( &RecordVehicleDeath_Parms.vHitLocation, &vHitLocation, 0xC );
	RecordVehicleDeath_Parms.clsDamageType = clsDamageType;
	RecordVehicleDeath_Parms.pDamage = pDamage;

	pFnRecordVehicleDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordVehicleDeath, &RecordVehicleDeath_Parms, NULL );

	pFnRecordVehicleDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.RecordDeath
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                pTarget                        ( CPF_Parm )
// class AController*             pInstigator                    ( CPF_Parm )
// struct FVector                 vHitLocation                   ( CPF_Parm )
// class UClass*                  clsDamageType                  ( CPF_Parm )

void UUnVince::RecordDeath ( class ABioPawn* pTarget, class AController* pInstigator, struct FVector vHitLocation, class UClass* clsDamageType )
{
	static UFunction* pFnRecordDeath = NULL;

	if ( ! pFnRecordDeath )
		pFnRecordDeath = (UFunction*) UObject::GObjObjects()->Data[ 68477 ];

	UUnVince_execRecordDeath_Parms RecordDeath_Parms;
	RecordDeath_Parms.pTarget = pTarget;
	RecordDeath_Parms.pInstigator = pInstigator;
	memcpy ( &RecordDeath_Parms.vHitLocation, &vHitLocation, 0xC );
	RecordDeath_Parms.clsDamageType = clsDamageType;

	pFnRecordDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordDeath, &RecordDeath_Parms, NULL );

	pFnRecordDeath->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.RecordWeaponFired
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class ABioPawn*                Instigator                     ( CPF_Parm )

void UUnVince::RecordWeaponFired ( class ABioPawn* Instigator )
{
	static UFunction* pFnRecordWeaponFired = NULL;

	if ( ! pFnRecordWeaponFired )
		pFnRecordWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 68475 ];

	UUnVince_execRecordWeaponFired_Parms RecordWeaponFired_Parms;
	RecordWeaponFired_Parms.Instigator = Instigator;

	pFnRecordWeaponFired->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecordWeaponFired, &RecordWeaponFired_Parms, NULL );

	pFnRecordWeaponFired->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.LogTestResult
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 TestName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 TestDescription                ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  TestResult                     ( CPF_Parm )

void UUnVince::LogTestResult ( struct FString TestName, struct FString TestDescription, unsigned char TestResult )
{
	static UFunction* pFnLogTestResult = NULL;

	if ( ! pFnLogTestResult )
		pFnLogTestResult = (UFunction*) UObject::GObjObjects()->Data[ 68471 ];

	UUnVince_execLogTestResult_Parms LogTestResult_Parms;
	memcpy ( &LogTestResult_Parms.TestName, &TestName, 0x10 );
	memcpy ( &LogTestResult_Parms.TestDescription, &TestDescription, 0x10 );
	LogTestResult_Parms.TestResult = TestResult;

	pFnLogTestResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogTestResult, &LogTestResult_Parms, NULL );

	pFnLogTestResult->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.CreateSurvey
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 Question                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 context                        ( CPF_Parm | CPF_NeedCtorLink )

void UUnVince::CreateSurvey ( struct FString Question, struct FString context )
{
	static UFunction* pFnCreateSurvey = NULL;

	if ( ! pFnCreateSurvey )
		pFnCreateSurvey = (UFunction*) UObject::GObjObjects()->Data[ 68468 ];

	UUnVince_execCreateSurvey_Parms CreateSurvey_Parms;
	memcpy ( &CreateSurvey_Parms.Question, &Question, 0x10 );
	memcpy ( &CreateSurvey_Parms.context, &context, 0x10 );

	pFnCreateSurvey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateSurvey, &CreateSurvey_Parms, NULL );

	pFnCreateSurvey->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.Terminate
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUnVince::Terminate ( )
{
	static UFunction* pFnTerminate = NULL;

	if ( ! pFnTerminate )
		pFnTerminate = (UFunction*) UObject::GObjObjects()->Data[ 68467 ];

	UUnVince_execTerminate_Parms Terminate_Parms;

	pFnTerminate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTerminate, &Terminate_Parms, NULL );

	pFnTerminate->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.CycleLog
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUnVince::CycleLog ( )
{
	static UFunction* pFnCycleLog = NULL;

	if ( ! pFnCycleLog )
		pFnCycleLog = (UFunction*) UObject::GObjObjects()->Data[ 68466 ];

	UUnVince_execCycleLog_Parms CycleLog_Parms;

	pFnCycleLog->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCycleLog, &CycleLog_Parms, NULL );

	pFnCycleLog->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.CloseLog
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUnVince::CloseLog ( )
{
	static UFunction* pFnCloseLog = NULL;

	if ( ! pFnCloseLog )
		pFnCloseLog = (UFunction*) UObject::GObjObjects()->Data[ 68465 ];

	UUnVince_execCloseLog_Parms CloseLog_Parms;

	pFnCloseLog->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCloseLog, &CloseLog_Parms, NULL );

	pFnCloseLog->FunctionFlags |= 0x400;
};

// Function SFXGame.UnVince.OpenLog
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUnVince::OpenLog ( )
{
	static UFunction* pFnOpenLog = NULL;

	if ( ! pFnOpenLog )
		pFnOpenLog = (UFunction*) UObject::GObjObjects()->Data[ 68464 ];

	UUnVince_execOpenLog_Parms OpenLog_Parms;

	pFnOpenLog->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenLog, &OpenLog_Parms, NULL );

	pFnOpenLog->FunctionFlags |= 0x400;
};

// Function SFXGame.BioPathPoint.DoReachedWaypointEvent
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                oPawn                          ( CPF_Parm )

bool ABioPathPoint::DoReachedWaypointEvent ( class ABioPawn* oPawn )
{
	static UFunction* pFnDoReachedWaypointEvent = NULL;

	if ( ! pFnDoReachedWaypointEvent )
		pFnDoReachedWaypointEvent = (UFunction*) UObject::GObjObjects()->Data[ 44017 ];

	ABioPathPoint_execDoReachedWaypointEvent_Parms DoReachedWaypointEvent_Parms;
	DoReachedWaypointEvent_Parms.oPawn = oPawn;

	this->ProcessEvent ( pFnDoReachedWaypointEvent, &DoReachedWaypointEvent_Parms, NULL );

	return DoReachedWaypointEvent_Parms.ReturnValue;
};

// Function SFXGame.BioPathPoint.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioPathPoint::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 44015 ];

	ABioPathPoint_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.BioWp_APGate.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

class AActor* ABioWp_APGate::eventSpecialHandling ( class APawn* Other )
{
	static UFunction* pFnSpecialHandling = NULL;

	if ( ! pFnSpecialHandling )
		pFnSpecialHandling = (UFunction*) UObject::GObjObjects()->Data[ 66323 ];

	ABioWp_APGate_eventSpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;

	this->ProcessEvent ( pFnSpecialHandling, &SpecialHandling_Parms, NULL );

	return SpecialHandling_Parms.ReturnValue;
};

// Function SFXGame.BioWp_ActionStation.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioWp_ActionStation::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 66304 ];

	ABioWp_ActionStation_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.BioWp_DoorMarker.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool ABioWp_DoorMarker::eventSuggestMovePreparation ( class APawn* Other )
{
	static UFunction* pFnSuggestMovePreparation = NULL;

	if ( ! pFnSuggestMovePreparation )
		pFnSuggestMovePreparation = (UFunction*) UObject::GObjObjects()->Data[ 66372 ];

	ABioWp_DoorMarker_eventSuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;

	this->ProcessEvent ( pFnSuggestMovePreparation, &SuggestMovePreparation_Parms, NULL );

	return SuggestMovePreparation_Parms.ReturnValue;
};

// Function SFXGame.BioWp_DoorMarker.ProceedWithMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool ABioWp_DoorMarker::ProceedWithMove ( class APawn* Other )
{
	static UFunction* pFnProceedWithMove = NULL;

	if ( ! pFnProceedWithMove )
		pFnProceedWithMove = (UFunction*) UObject::GObjObjects()->Data[ 49465 ];

	ABioWp_DoorMarker_execProceedWithMove_Parms ProceedWithMove_Parms;
	ProceedWithMove_Parms.Other = Other;

	this->ProcessEvent ( pFnProceedWithMove, &ProceedWithMove_Parms, NULL );

	return ProceedWithMove_Parms.ReturnValue;
};

// Function SFXGame.BioWp_DoorMarker.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

class AActor* ABioWp_DoorMarker::eventSpecialHandling ( class APawn* Other )
{
	static UFunction* pFnSpecialHandling = NULL;

	if ( ! pFnSpecialHandling )
		pFnSpecialHandling = (UFunction*) UObject::GObjObjects()->Data[ 66364 ];

	ABioWp_DoorMarker_eventSpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;

	this->ProcessEvent ( pFnSpecialHandling, &SpecialHandling_Parms, NULL );

	return SpecialHandling_Parms.ReturnValue;
};

// Function SFXGame.BioWp_DoorMarker.IsDoorClosed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWp_DoorMarker::IsDoorClosed ( )
{
	static UFunction* pFnIsDoorClosed = NULL;

	if ( ! pFnIsDoorClosed )
		pFnIsDoorClosed = (UFunction*) UObject::GObjObjects()->Data[ 66362 ];

	ABioWp_DoorMarker_execIsDoorClosed_Parms IsDoorClosed_Parms;

	pFnIsDoorClosed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDoorClosed, &IsDoorClosed_Parms, NULL );

	pFnIsDoorClosed->FunctionFlags |= 0x400;

	return IsDoorClosed_Parms.ReturnValue;
};

// Function SFXGame.BioWp_DoorMarker.IsDoorOpen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioWp_DoorMarker::IsDoorOpen ( )
{
	static UFunction* pFnIsDoorOpen = NULL;

	if ( ! pFnIsDoorOpen )
		pFnIsDoorOpen = (UFunction*) UObject::GObjObjects()->Data[ 66360 ];

	ABioWp_DoorMarker_execIsDoorOpen_Parms IsDoorOpen_Parms;

	pFnIsDoorOpen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDoorOpen, &IsDoorOpen_Parms, NULL );

	pFnIsDoorOpen->FunctionFlags |= 0x400;

	return IsDoorOpen_Parms.ReturnValue;
};

// Function SFXGame.BioWaypointSet.GetWaypoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nIdx                           ( CPF_Parm )

class ANavigationPoint* ABioWaypointSet::GetWaypoint ( int nIdx )
{
	static UFunction* pFnGetWaypoint = NULL;

	if ( ! pFnGetWaypoint )
		pFnGetWaypoint = (UFunction*) UObject::GObjObjects()->Data[ 43997 ];

	ABioWaypointSet_execGetWaypoint_Parms GetWaypoint_Parms;
	GetWaypoint_Parms.nIdx = nIdx;

	pFnGetWaypoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWaypoint, &GetWaypoint_Parms, NULL );

	pFnGetWaypoint->FunctionFlags |= 0x400;

	return GetWaypoint_Parms.ReturnValue;
};

// Function SFXGame.BioWaypointSet.FindNearestPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )

int ABioWaypointSet::FindNearestPoint ( struct FVector vLoc )
{
	static UFunction* pFnFindNearestPoint = NULL;

	if ( ! pFnFindNearestPoint )
		pFnFindNearestPoint = (UFunction*) UObject::GObjObjects()->Data[ 65789 ];

	ABioWaypointSet_execFindNearestPoint_Parms FindNearestPoint_Parms;
	memcpy ( &FindNearestPoint_Parms.vLoc, &vLoc, 0xC );

	pFnFindNearestPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindNearestPoint, &FindNearestPoint_Parms, NULL );

	pFnFindNearestPoint->FunctionFlags |= 0x400;

	return FindNearestPoint_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControlBasic.ShouldDamageVFXPlay
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControlBasic::ShouldDamageVFXPlay ( class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnShouldDamageVFXPlay = NULL;

	if ( ! pFnShouldDamageVFXPlay )
		pFnShouldDamageVFXPlay = (UFunction*) UObject::GObjObjects()->Data[ 40212 ];

	UBioDeathVFXControlBasic_execShouldDamageVFXPlay_Parms ShouldDamageVFXPlay_Parms;
	ShouldDamageVFXPlay_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnShouldDamageVFXPlay, &ShouldDamageVFXPlay_Parms, NULL );

	return ShouldDamageVFXPlay_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControlBasic.ShouldAppearanceVFXPlay
// [0x00080003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

bool UBioDeathVFXControlBasic::ShouldAppearanceVFXPlay ( class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnShouldAppearanceVFXPlay = NULL;

	if ( ! pFnShouldAppearanceVFXPlay )
		pFnShouldAppearanceVFXPlay = (UFunction*) UObject::GObjObjects()->Data[ 40213 ];

	UBioDeathVFXControlBasic_execShouldAppearanceVFXPlay_Parms ShouldAppearanceVFXPlay_Parms;
	ShouldAppearanceVFXPlay_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnShouldAppearanceVFXPlay, &ShouldAppearanceVFXPlay_Parms, NULL );

	return ShouldAppearanceVFXPlay_Parms.ReturnValue;
};

// Function SFXGame.BioDeathVFXControlBasic.Evaluate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper      ( CPF_Parm )
// class UBioDeathVFXGameState*   pGameState                     ( CPF_Parm )

void UBioDeathVFXControlBasic::eventEvaluate ( class UBioDeathVFXSpecArrayWrapper* pDeathVFXSpecArrayWrapper, class UBioDeathVFXGameState* pGameState )
{
	static UFunction* pFnEvaluate = NULL;

	if ( ! pFnEvaluate )
		pFnEvaluate = (UFunction*) UObject::GObjObjects()->Data[ 40208 ];

	UBioDeathVFXControlBasic_eventEvaluate_Parms Evaluate_Parms;
	Evaluate_Parms.pDeathVFXSpecArrayWrapper = pDeathVFXSpecArrayWrapper;
	Evaluate_Parms.pGameState = pGameState;

	this->ProcessEvent ( pFnEvaluate, &Evaluate_Parms, NULL );
};

// Function SFXGame.BioSeqEvt_TakeDamage.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqEvt_TakeDamage::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60979 ];

	UBioSeqEvt_TakeDamage_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqEvt_TakeDamage.HandleDamage
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class AActor*                  InOriginator                   ( CPF_Parm )
// class AActor*                  InInstigator                   ( CPF_Parm )
// class UClass*                  inDamageType                   ( CPF_Parm )
// float                          inAmount                       ( CPF_Parm )
// float                          inMitigatedAmount              ( CPF_Parm )

void UBioSeqEvt_TakeDamage::HandleDamage ( class AActor* InOriginator, class AActor* InInstigator, class UClass* inDamageType, float inAmount, float inMitigatedAmount )
{
	static UFunction* pFnHandleDamage = NULL;

	if ( ! pFnHandleDamage )
		pFnHandleDamage = (UFunction*) UObject::GObjObjects()->Data[ 42804 ];

	UBioSeqEvt_TakeDamage_execHandleDamage_Parms HandleDamage_Parms;
	HandleDamage_Parms.InOriginator = InOriginator;
	HandleDamage_Parms.InInstigator = InInstigator;
	HandleDamage_Parms.inDamageType = inDamageType;
	HandleDamage_Parms.inAmount = inAmount;
	HandleDamage_Parms.inMitigatedAmount = inMitigatedAmount;

	this->ProcessEvent ( pFnHandleDamage, &HandleDamage_Parms, NULL );
};

// Function SFXGame.BioSeqEvt_TakeDamage.IsValidDamageType
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  inDamageType                   ( CPF_Parm )

bool UBioSeqEvt_TakeDamage::IsValidDamageType ( class UClass* inDamageType )
{
	static UFunction* pFnIsValidDamageType = NULL;

	if ( ! pFnIsValidDamageType )
		pFnIsValidDamageType = (UFunction*) UObject::GObjObjects()->Data[ 60966 ];

	UBioSeqEvt_TakeDamage_execIsValidDamageType_Parms IsValidDamageType_Parms;
	IsValidDamageType_Parms.inDamageType = inDamageType;

	this->ProcessEvent ( pFnIsValidDamageType, &IsValidDamageType_Parms, NULL );

	return IsValidDamageType_Parms.ReturnValue;
};

// Function SFXGame.BioWp_Kismet.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioWp_Kismet::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 66388 ];

	ABioWp_Kismet_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.BioPlayerControllerSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPlayerControllerSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 57042 ];

	UBioPlayerControllerSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioPlayerControllerSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioPlayerControllerSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 57034 ];

	UBioPlayerControllerSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.BioStickyGrenadeInterfaceMesh.ComputePosition
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )

struct FVector UBioStickyGrenadeInterfaceMesh::ComputePosition ( class ABioGrenadeProjectileFrisbee* Projectile )
{
	static UFunction* pFnComputePosition = NULL;

	if ( ! pFnComputePosition )
		pFnComputePosition = (UFunction*) UObject::GObjObjects()->Data[ 45187 ];

	UBioStickyGrenadeInterfaceMesh_execComputePosition_Parms ComputePosition_Parms;
	ComputePosition_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnComputePosition, &ComputePosition_Parms, NULL );

	return ComputePosition_Parms.ReturnValue;
};

// Function SFXGame.BioStickyGrenadeInterfaceMesh.Detach
// [0x00020002] 
// Parameters infos:
// class UBioActorBehavior*       oOwnerBehavior                 ( CPF_Parm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )

void UBioStickyGrenadeInterfaceMesh::Detach ( class UBioActorBehavior* oOwnerBehavior, class ABioGrenadeProjectileFrisbee* Projectile )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 45184 ];

	UBioStickyGrenadeInterfaceMesh_execDetach_Parms Detach_Parms;
	Detach_Parms.oOwnerBehavior = oOwnerBehavior;
	Detach_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );
};

// Function SFXGame.BioStickyGrenadeInterfaceMesh.Attach
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioGrenadeProjectileFrisbee* Projectile                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool UBioStickyGrenadeInterfaceMesh::Attach ( class ABioGrenadeProjectileFrisbee* Projectile, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnAttach = NULL;

	if ( ! pFnAttach )
		pFnAttach = (UFunction*) UObject::GObjObjects()->Data[ 45176 ];

	UBioStickyGrenadeInterfaceMesh_execAttach_Parms Attach_Parms;
	Attach_Parms.Projectile = Projectile;
	memcpy ( &Attach_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Attach_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnAttach, &Attach_Parms, NULL );

	return Attach_Parms.ReturnValue;
};

// Function SFXGame.BioChatterSystem.OnChatterLinePlayed
// [0x00020002] 
// Parameters infos:
// unsigned char                  SoundSet                       ( CPF_Parm )

void UBioChatterSystem::OnChatterLinePlayed ( unsigned char SoundSet )
{
	static UFunction* pFnOnChatterLinePlayed = NULL;

	if ( ! pFnOnChatterLinePlayed )
		pFnOnChatterLinePlayed = (UFunction*) UObject::GObjObjects()->Data[ 45818 ];

	UBioChatterSystem_execOnChatterLinePlayed_Parms OnChatterLinePlayed_Parms;
	OnChatterLinePlayed_Parms.SoundSet = SoundSet;

	this->ProcessEvent ( pFnOnChatterLinePlayed, &OnChatterLinePlayed_Parms, NULL );
};

// Function SFXGame.BioChatterSystem.CanPlayLine
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  SoundSet                       ( CPF_Parm )

bool UBioChatterSystem::CanPlayLine ( unsigned char SoundSet )
{
	static UFunction* pFnCanPlayLine = NULL;

	if ( ! pFnCanPlayLine )
		pFnCanPlayLine = (UFunction*) UObject::GObjObjects()->Data[ 45813 ];

	UBioChatterSystem_execCanPlayLine_Parms CanPlayLine_Parms;
	CanPlayLine_Parms.SoundSet = SoundSet;

	this->ProcessEvent ( pFnCanPlayLine, &CanPlayLine_Parms, NULL );

	return CanPlayLine_Parms.ReturnValue;
};

// Function SFXGame.BioAI_ReturnToSpawn.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ABioAI_ReturnToSpawn::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47759 ];

	ABioAI_ReturnToSpawn_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioAI_ReturnToSpawn.OnLeftPlaypen
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        oNavPoint                      ( CPF_Parm )

void ABioAI_ReturnToSpawn::eventOnLeftPlaypen ( class ANavigationPoint* oNavPoint )
{
	static UFunction* pFnOnLeftPlaypen = NULL;

	if ( ! pFnOnLeftPlaypen )
		pFnOnLeftPlaypen = (UFunction*) UObject::GObjObjects()->Data[ 47757 ];

	ABioAI_ReturnToSpawn_eventOnLeftPlaypen_Parms OnLeftPlaypen_Parms;
	OnLeftPlaypen_Parms.oNavPoint = oNavPoint;

	this->ProcessEvent ( pFnOnLeftPlaypen, &OnLeftPlaypen_Parms, NULL );
};

// Function SFXGame.BioAI_ReturnToSpawn.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_ReturnToSpawn::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47755 ];

	ABioAI_ReturnToSpawn_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_HumanoidMinion.OnHacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_HumanoidMinion::eventOnHacked ( )
{
	static UFunction* pFnOnHacked = NULL;

	if ( ! pFnOnHacked )
		pFnOnHacked = (UFunction*) UObject::GObjObjects()->Data[ 47402 ];

	ABioAI_HumanoidMinion_eventOnHacked_Parms OnHacked_Parms;

	this->ProcessEvent ( pFnOnHacked, &OnHacked_Parms, NULL );
};

// Function SFXGame.BioAI_HumanoidMinion.HearNoise
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FVector                 vNoiseLocation                 ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ABioAI_HumanoidMinion::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FVector vNoiseLocation, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 47397 ];

	ABioAI_HumanoidMinion_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.vNoiseLocation, &vNoiseLocation, 0xC );
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SFXGame.BioAI_HumanoidMinion.onDamagedInCover
// [0x00020002] 
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_HumanoidMinion::onDamagedInCover ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnonDamagedInCover = NULL;

	if ( ! pFnonDamagedInCover )
		pFnonDamagedInCover = (UFunction*) UObject::GObjObjects()->Data[ 47394 ];

	ABioAI_HumanoidMinion_execonDamagedInCover_Parms onDamagedInCover_Parms;
	onDamagedInCover_Parms.oInstigator = oInstigator;
	onDamagedInCover_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnonDamagedInCover, &onDamagedInCover_Parms, NULL );
};

// Function SFXGame.BioAI_HumanoidMinion.IsCoverPositionValid
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLocation                      ( CPF_Parm )
// struct FRotator                rRotation                      ( CPF_Parm )
// int                            nRank                          ( CPF_Parm | CPF_OutParm )

bool ABioAI_HumanoidMinion::eventIsCoverPositionValid ( struct FVector vLocation, struct FRotator rRotation, int* nRank )
{
	static UFunction* pFnIsCoverPositionValid = NULL;

	if ( ! pFnIsCoverPositionValid )
		pFnIsCoverPositionValid = (UFunction*) UObject::GObjObjects()->Data[ 47388 ];

	ABioAI_HumanoidMinion_eventIsCoverPositionValid_Parms IsCoverPositionValid_Parms;
	memcpy ( &IsCoverPositionValid_Parms.vLocation, &vLocation, 0xC );
	memcpy ( &IsCoverPositionValid_Parms.rRotation, &rRotation, 0xC );

	this->ProcessEvent ( pFnIsCoverPositionValid, &IsCoverPositionValid_Parms, NULL );

	if ( nRank )
		*nRank = IsCoverPositionValid_Parms.nRank;

	return IsCoverPositionValid_Parms.ReturnValue;
};

// Function SFXGame.BioAI_HumanoidMinion.ShouldUseCover
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_HumanoidMinion::ShouldUseCover ( )
{
	static UFunction* pFnShouldUseCover = NULL;

	if ( ! pFnShouldUseCover )
		pFnShouldUseCover = (UFunction*) UObject::GObjObjects()->Data[ 47386 ];

	ABioAI_HumanoidMinion_execShouldUseCover_Parms ShouldUseCover_Parms;

	this->ProcessEvent ( pFnShouldUseCover, &ShouldUseCover_Parms, NULL );

	return ShouldUseCover_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Charge.EvaluateMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Charge::EvaluateMovement ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateMovement = NULL;

	if ( ! pFnEvaluateMovement )
		pFnEvaluateMovement = (UFunction*) UObject::GObjObjects()->Data[ 47432 ];

	ABioAI_Charge_execEvaluateMovement_Parms EvaluateMovement_Parms;
	EvaluateMovement_Parms.oTarget = oTarget;
	EvaluateMovement_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateMovement, &EvaluateMovement_Parms, NULL );

	return EvaluateMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Assault.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Assault::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47419 ];

	ABioAI_Assault_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Assault.InRangeOfTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_Assault::InRangeOfTarget ( )
{
	static UFunction* pFnInRangeOfTarget = NULL;

	if ( ! pFnInRangeOfTarget )
		pFnInRangeOfTarget = (UFunction*) UObject::GObjObjects()->Data[ 47416 ];

	ABioAI_Assault_execInRangeOfTarget_Parms InRangeOfTarget_Parms;

	this->ProcessEvent ( pFnInRangeOfTarget, &InRangeOfTarget_Parms, NULL );

	return InRangeOfTarget_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Assault.EvaluateMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Assault::EvaluateMovement ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateMovement = NULL;

	if ( ! pFnEvaluateMovement )
		pFnEvaluateMovement = (UFunction*) UObject::GObjObjects()->Data[ 47410 ];

	ABioAI_Assault_execEvaluateMovement_Parms EvaluateMovement_Parms;
	EvaluateMovement_Parms.oTarget = oTarget;
	EvaluateMovement_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateMovement, &EvaluateMovement_Parms, NULL );

	return EvaluateMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Assault.GetFollowTargets
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oFollow                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 vMoveTo                        ( CPF_Parm | CPF_OutParm )

void ABioAI_Assault::eventGetFollowTargets ( class APawn** oFollow, struct FVector* vMoveTo )
{
	static UFunction* pFnGetFollowTargets = NULL;

	if ( ! pFnGetFollowTargets )
		pFnGetFollowTargets = (UFunction*) UObject::GObjObjects()->Data[ 47407 ];

	ABioAI_Assault_eventGetFollowTargets_Parms GetFollowTargets_Parms;

	this->ProcessEvent ( pFnGetFollowTargets, &GetFollowTargets_Parms, NULL );

	if ( oFollow )
		*oFollow = GetFollowTargets_Parms.oFollow;

	if ( vMoveTo )
		memcpy ( vMoveTo, &GetFollowTargets_Parms.vMoveTo, 0xC );
};

// Function SFXGame.BioAI_Inactive.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioAI_Inactive::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 47695 ];

	ABioAI_Inactive_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnSquadSeen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oSquad                         ( CPF_Parm )

void ABioAI_Inactive::eventOnSquadSeen ( class AActor* oSquad )
{
	static UFunction* pFnOnSquadSeen = NULL;

	if ( ! pFnOnSquadSeen )
		pFnOnSquadSeen = (UFunction*) UObject::GObjObjects()->Data[ 47693 ];

	ABioAI_Inactive_eventOnSquadSeen_Parms OnSquadSeen_Parms;
	OnSquadSeen_Parms.oSquad = oSquad;

	this->ProcessEvent ( pFnOnSquadSeen, &OnSquadSeen_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnActionComplete_Movement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oTarget                        ( CPF_Parm )
// struct FVector                 vLocation                      ( CPF_Parm )

void ABioAI_Inactive::eventOnActionComplete_Movement ( struct FName nmAction, int nReason, class AActor* oTarget, struct FVector vLocation )
{
	static UFunction* pFnOnActionComplete_Movement = NULL;

	if ( ! pFnOnActionComplete_Movement )
		pFnOnActionComplete_Movement = (UFunction*) UObject::GObjObjects()->Data[ 47688 ];

	ABioAI_Inactive_eventOnActionComplete_Movement_Parms OnActionComplete_Movement_Parms;
	memcpy ( &OnActionComplete_Movement_Parms.nmAction, &nmAction, 0x8 );
	OnActionComplete_Movement_Parms.nReason = nReason;
	OnActionComplete_Movement_Parms.oTarget = oTarget;
	memcpy ( &OnActionComplete_Movement_Parms.vLocation, &vLocation, 0xC );

	this->ProcessEvent ( pFnOnActionComplete_Movement, &OnActionComplete_Movement_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnActionComplete_Combat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   nmAction                       ( CPF_Parm )
// struct FName                   nmTechnique                    ( CPF_Parm )
// int                            nReason                        ( CPF_Parm )
// class AActor*                  oLastTarget                    ( CPF_Parm )

void ABioAI_Inactive::eventOnActionComplete_Combat ( struct FName nmAction, struct FName nmTechnique, int nReason, class AActor* oLastTarget )
{
	static UFunction* pFnOnActionComplete_Combat = NULL;

	if ( ! pFnOnActionComplete_Combat )
		pFnOnActionComplete_Combat = (UFunction*) UObject::GObjObjects()->Data[ 47683 ];

	ABioAI_Inactive_eventOnActionComplete_Combat_Parms OnActionComplete_Combat_Parms;
	memcpy ( &OnActionComplete_Combat_Parms.nmAction, &nmAction, 0x8 );
	memcpy ( &OnActionComplete_Combat_Parms.nmTechnique, &nmTechnique, 0x8 );
	OnActionComplete_Combat_Parms.nReason = nReason;
	OnActionComplete_Combat_Parms.oLastTarget = oLastTarget;

	this->ProcessEvent ( pFnOnActionComplete_Combat, &OnActionComplete_Combat_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Inactive::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47680 ];

	ABioAI_Inactive_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnCastAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmPower                        ( CPF_Parm )

void ABioAI_Inactive::eventOnCastAt ( class APawn* oAttacker, struct FName nmPower )
{
	static UFunction* pFnOnCastAt = NULL;

	if ( ! pFnOnCastAt )
		pFnOnCastAt = (UFunction*) UObject::GObjObjects()->Data[ 47677 ];

	ABioAI_Inactive_eventOnCastAt_Parms OnCastAt_Parms;
	OnCastAt_Parms.oAttacker = oAttacker;
	memcpy ( &OnCastAt_Parms.nmPower, &nmPower, 0x8 );

	this->ProcessEvent ( pFnOnCastAt, &OnCastAt_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnAttacked
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   oAttacker                      ( CPF_Parm )
// struct FName                   nmWeapon                       ( CPF_Parm )

void ABioAI_Inactive::eventOnAttacked ( class APawn* oAttacker, struct FName nmWeapon )
{
	static UFunction* pFnOnAttacked = NULL;

	if ( ! pFnOnAttacked )
		pFnOnAttacked = (UFunction*) UObject::GObjObjects()->Data[ 47674 ];

	ABioAI_Inactive_eventOnAttacked_Parms OnAttacked_Parms;
	OnAttacked_Parms.oAttacker = oAttacker;
	memcpy ( &OnAttacked_Parms.nmWeapon, &nmWeapon, 0x8 );

	this->ProcessEvent ( pFnOnAttacked, &OnAttacked_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnAbilityDisabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAI_Inactive::eventOnAbilityDisabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityDisabled = NULL;

	if ( ! pFnOnAbilityDisabled )
		pFnOnAbilityDisabled = (UFunction*) UObject::GObjObjects()->Data[ 47671 ];

	ABioAI_Inactive_eventOnAbilityDisabled_Parms OnAbilityDisabled_Parms;
	OnAbilityDisabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityDisabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityDisabled, &OnAbilityDisabled_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnAbilityEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nEnableType                    ( CPF_Parm )
// struct FName                   nmSubType                      ( CPF_Parm )

void ABioAI_Inactive::eventOnAbilityEnabled ( int nEnableType, struct FName nmSubType )
{
	static UFunction* pFnOnAbilityEnabled = NULL;

	if ( ! pFnOnAbilityEnabled )
		pFnOnAbilityEnabled = (UFunction*) UObject::GObjObjects()->Data[ 47668 ];

	ABioAI_Inactive_eventOnAbilityEnabled_Parms OnAbilityEnabled_Parms;
	OnAbilityEnabled_Parms.nEnableType = nEnableType;
	memcpy ( &OnAbilityEnabled_Parms.nmSubType, &nmSubType, 0x8 );

	this->ProcessEvent ( pFnOnAbilityEnabled, &OnAbilityEnabled_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnNoCombatAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_Inactive::eventOnNoCombatAction ( )
{
	static UFunction* pFnOnNoCombatAction = NULL;

	if ( ! pFnOnNoCombatAction )
		pFnOnNoCombatAction = (UFunction*) UObject::GObjObjects()->Data[ 47667 ];

	ABioAI_Inactive_eventOnNoCombatAction_Parms OnNoCombatAction_Parms;

	this->ProcessEvent ( pFnOnNoCombatAction, &OnNoCombatAction_Parms, NULL );
};

// Function SFXGame.BioAI_Inactive.OnDeath
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oKiller                        ( CPF_Parm )

void ABioAI_Inactive::eventOnDeath ( class AController* oKiller )
{
	static UFunction* pFnOnDeath = NULL;

	if ( ! pFnOnDeath )
		pFnOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 47665 ];

	ABioAI_Inactive_eventOnDeath_Parms OnDeath_Parms;
	OnDeath_Parms.oKiller = oKiller;

	this->ProcessEvent ( pFnOnDeath, &OnDeath_Parms, NULL );
};

// Function SFXGame.BioAI_Krogan.OnLastManStanding
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_Krogan::eventOnLastManStanding ( )
{
	static UFunction* pFnOnLastManStanding = NULL;

	if ( ! pFnOnLastManStanding )
		pFnOnLastManStanding = (UFunction*) UObject::GObjObjects()->Data[ 47714 ];

	ABioAI_Krogan_eventOnLastManStanding_Parms OnLastManStanding_Parms;

	this->ProcessEvent ( pFnOnLastManStanding, &OnLastManStanding_Parms, NULL );
};

// Function SFXGame.BioAI_Krogan.OnProximityAlarm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  oTarget                        ( CPF_Parm )
// int                            nRelationship                  ( CPF_Parm )

void ABioAI_Krogan::eventOnProximityAlarm ( class AActor* oTarget, int nRelationship )
{
	static UFunction* pFnOnProximityAlarm = NULL;

	if ( ! pFnOnProximityAlarm )
		pFnOnProximityAlarm = (UFunction*) UObject::GObjObjects()->Data[ 47710 ];

	ABioAI_Krogan_eventOnProximityAlarm_Parms OnProximityAlarm_Parms;
	OnProximityAlarm_Parms.oTarget = oTarget;
	OnProximityAlarm_Parms.nRelationship = nRelationship;

	this->ProcessEvent ( pFnOnProximityAlarm, &OnProximityAlarm_Parms, NULL );
};

// Function SFXGame.BioAI_Krogan.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Krogan::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47707 ];

	ABioAI_Krogan_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Krogan.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_Krogan::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47706 ];

	ABioAI_Krogan_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Krogan.Charge
// [0x00020002] 
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_Parm )

void ABioAI_Krogan::Charge ( class APawn* oTarget )
{
	static UFunction* pFnCharge = NULL;

	if ( ! pFnCharge )
		pFnCharge = (UFunction*) UObject::GObjObjects()->Data[ 47704 ];

	ABioAI_Krogan_execCharge_Parms Charge_Parms;
	Charge_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnCharge, &Charge_Parms, NULL );
};

// Function SFXGame.BioAI_Mercenary.EvaluateMovement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )
// unsigned long                  bLOS                           ( CPF_Parm )

bool ABioAI_Mercenary::EvaluateMovement ( class APawn* oTarget, unsigned long bLOS )
{
	static UFunction* pFnEvaluateMovement = NULL;

	if ( ! pFnEvaluateMovement )
		pFnEvaluateMovement = (UFunction*) UObject::GObjObjects()->Data[ 47723 ];

	ABioAI_Mercenary_execEvaluateMovement_Parms EvaluateMovement_Parms;
	EvaluateMovement_Parms.oTarget = oTarget;
	EvaluateMovement_Parms.bLOS = bLOS;

	this->ProcessEvent ( pFnEvaluateMovement, &EvaluateMovement_Parms, NULL );

	return EvaluateMovement_Parms.ReturnValue;
};

// Function SFXGame.BioAI_Mercenary.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_Mercenary::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47721 ];

	ABioAI_Mercenary_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Rachnii.OnLastManStanding
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioAI_Rachnii::eventOnLastManStanding ( )
{
	static UFunction* pFnOnLastManStanding = NULL;

	if ( ! pFnOnLastManStanding )
		pFnOnLastManStanding = (UFunction*) UObject::GObjObjects()->Data[ 47737 ];

	ABioAI_Rachnii_eventOnLastManStanding_Parms OnLastManStanding_Parms;

	this->ProcessEvent ( pFnOnLastManStanding, &OnLastManStanding_Parms, NULL );
};

// Function SFXGame.BioAI_Rachnii.OnDamaged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             oInstigator                    ( CPF_Parm )
// float                          fDamage                        ( CPF_Parm )

void ABioAI_Rachnii::eventOnDamaged ( class AController* oInstigator, float fDamage )
{
	static UFunction* pFnOnDamaged = NULL;

	if ( ! pFnOnDamaged )
		pFnOnDamaged = (UFunction*) UObject::GObjObjects()->Data[ 47734 ];

	ABioAI_Rachnii_eventOnDamaged_Parms OnDamaged_Parms;
	OnDamaged_Parms.oInstigator = oInstigator;
	OnDamaged_Parms.fDamage = fDamage;

	this->ProcessEvent ( pFnOnDamaged, &OnDamaged_Parms, NULL );
};

// Function SFXGame.BioAI_Rachnii.Initialize
// [0x00020000] 
// Parameters infos:

void ABioAI_Rachnii::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47733 ];

	ABioAI_Rachnii_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Rachnii.Charge
// [0x00020002] 
// Parameters infos:
// class APawn*                   oTarget                        ( CPF_Parm )

void ABioAI_Rachnii::Charge ( class APawn* oTarget )
{
	static UFunction* pFnCharge = NULL;

	if ( ! pFnCharge )
		pFnCharge = (UFunction*) UObject::GObjObjects()->Data[ 47731 ];

	ABioAI_Rachnii_execCharge_Parms Charge_Parms;
	Charge_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnCharge, &Charge_Parms, NULL );
};

// Function SFXGame.BioAI_RepairDrone.EvaluateTargets
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ABioAI_RepairDrone::EvaluateTargets ( )
{
	static UFunction* pFnEvaluateTargets = NULL;

	if ( ! pFnEvaluateTargets )
		pFnEvaluateTargets = (UFunction*) UObject::GObjObjects()->Data[ 47741 ];

	ABioAI_RepairDrone_execEvaluateTargets_Parms EvaluateTargets_Parms;

	this->ProcessEvent ( pFnEvaluateTargets, &EvaluateTargets_Parms, NULL );

	return EvaluateTargets_Parms.ReturnValue;
};

// Function SFXGame.BioAI_SarenFlyerJUG.Initialize
// [0x00020002] 
// Parameters infos:

void ABioAI_SarenFlyerJUG::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47928 ];

	ABioAI_SarenFlyerJUG_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioAI_Sniper.EvaluateAttackCapabilities
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   oTarget                        ( CPF_Parm )

bool ABioAI_Sniper::EvaluateAttackCapabilities ( class APawn* oTarget )
{
	static UFunction* pFnEvaluateAttackCapabilities = NULL;

	if ( ! pFnEvaluateAttackCapabilities )
		pFnEvaluateAttackCapabilities = (UFunction*) UObject::GObjObjects()->Data[ 48070 ];

	ABioAI_Sniper_execEvaluateAttackCapabilities_Parms EvaluateAttackCapabilities_Parms;
	EvaluateAttackCapabilities_Parms.oTarget = oTarget;

	this->ProcessEvent ( pFnEvaluateAttackCapabilities, &EvaluateAttackCapabilities_Parms, NULL );

	return EvaluateAttackCapabilities_Parms.ReturnValue;
};

// Function SFXGame.BioAreaTransition.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioAreaTransition::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 48662 ];

	ABioAreaTransition_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioAudioRoomTrigger.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioAudioRoomTrigger::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50061 ];

	ABioAudioRoomTrigger_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioAudioRoomTrigger.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioAudioRoomTrigger::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50052 ];

	ABioAudioRoomTrigger_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioAudioRoomTrigger.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioAudioRoomTrigger::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50051 ];

	ABioAudioRoomTrigger_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioAudioVolumeTimer.Timer
// [0x00020002] 
// Parameters infos:

void ABioAudioVolumeTimer::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 50092 ];

	ABioAudioVolumeTimer_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function SFXGame.BioAudioVolumeTimer.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioAudioVolumeTimer::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50090 ];

	ABioAudioVolumeTimer_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.SFXPlayerCamera.ProcessViewRotation
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )

void ASFXPlayerCamera::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 67769 ];

	ASFXPlayerCamera_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( OutViewRotation )
		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );

	if ( OutDeltaRot )
		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
};

// Function SFXGame.SFXPlayerCamera.SetBaseRotation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )

void ASFXPlayerCamera::SetBaseRotation ( struct FRotator NewRotation )
{
	static UFunction* pFnSetBaseRotation = NULL;

	if ( ! pFnSetBaseRotation )
		pFnSetBaseRotation = (UFunction*) UObject::GObjObjects()->Data[ 67767 ];

	ASFXPlayerCamera_execSetBaseRotation_Parms SetBaseRotation_Parms;
	memcpy ( &SetBaseRotation_Parms.NewRotation, &NewRotation, 0xC );

	this->ProcessEvent ( pFnSetBaseRotation, &SetBaseRotation_Parms, NULL );
};

// Function SFXGame.SFXPlayerCamera.GetBaseRotation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ASFXPlayerCamera::GetBaseRotation ( )
{
	static UFunction* pFnGetBaseRotation = NULL;

	if ( ! pFnGetBaseRotation )
		pFnGetBaseRotation = (UFunction*) UObject::GObjObjects()->Data[ 67765 ];

	ASFXPlayerCamera_execGetBaseRotation_Parms GetBaseRotation_Parms;

	this->ProcessEvent ( pFnGetBaseRotation, &GetBaseRotation_Parms, NULL );

	return GetBaseRotation_Parms.ReturnValue;
};

// Function SFXGame.SFXPlayerCamera.SwitchTo
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          NewMode                        ( CPF_Parm )

void ASFXPlayerCamera::SwitchTo ( class USFXCameraMode* NewMode )
{
	static UFunction* pFnSwitchTo = NULL;

	if ( ! pFnSwitchTo )
		pFnSwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 67763 ];

	ASFXPlayerCamera_execSwitchTo_Parms SwitchTo_Parms;
	SwitchTo_Parms.NewMode = NewMode;

	this->ProcessEvent ( pFnSwitchTo, &SwitchTo_Parms, NULL );
};

// Function SFXGame.SFXPlayerCamera.SetBehavior
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode_Interpolate* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          Mode                           ( CPF_Parm )
// class USFXCameraMode_Interpolate* NewTransitionTemplate          ( CPF_Parm )
// float                          Time                           ( CPF_Parm )
// unsigned long                  PreserveTarget                 ( CPF_Parm )

class USFXCameraMode_Interpolate* ASFXPlayerCamera::SetBehavior ( class USFXCameraMode* Mode, class USFXCameraMode_Interpolate* NewTransitionTemplate, float Time, unsigned long PreserveTarget )
{
	static UFunction* pFnSetBehavior = NULL;

	if ( ! pFnSetBehavior )
		pFnSetBehavior = (UFunction*) UObject::GObjObjects()->Data[ 67752 ];

	ASFXPlayerCamera_execSetBehavior_Parms SetBehavior_Parms;
	SetBehavior_Parms.Mode = Mode;
	SetBehavior_Parms.NewTransitionTemplate = NewTransitionTemplate;
	SetBehavior_Parms.Time = Time;
	SetBehavior_Parms.PreserveTarget = PreserveTarget;

	this->ProcessEvent ( pFnSetBehavior, &SetBehavior_Parms, NULL );

	return SetBehavior_Parms.ReturnValue;
};

// Function SFXGame.SFXPlayerCamera.UpdateCameraMode
// [0x00420002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ASFXPlayerCamera::UpdateCameraMode ( float fDeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateCameraMode = NULL;

	if ( ! pFnUpdateCameraMode )
		pFnUpdateCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67740 ];

	ASFXPlayerCamera_execUpdateCameraMode_Parms UpdateCameraMode_Parms;
	UpdateCameraMode_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnUpdateCameraMode, &UpdateCameraMode_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateCameraMode_Parms.OutVT, 0x38 );
};

// Function SFXGame.SFXPlayerCamera.SmoothPosition
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 Target                         ( CPF_Parm )
// float                          TimeDelta                      ( CPF_Parm )

struct FVector ASFXPlayerCamera::SmoothPosition ( struct FVector Start, struct FVector Target, float TimeDelta )
{
	static UFunction* pFnSmoothPosition = NULL;

	if ( ! pFnSmoothPosition )
		pFnSmoothPosition = (UFunction*) UObject::GObjObjects()->Data[ 67727 ];

	ASFXPlayerCamera_execSmoothPosition_Parms SmoothPosition_Parms;
	memcpy ( &SmoothPosition_Parms.Start, &Start, 0xC );
	memcpy ( &SmoothPosition_Parms.Target, &Target, 0xC );
	SmoothPosition_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnSmoothPosition, &SmoothPosition_Parms, NULL );

	return SmoothPosition_Parms.ReturnValue;
};

// Function SFXGame.SFXPlayerCamera.PickCameraMode
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ASFXPlayerCamera::PickCameraMode ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnPickCameraMode = NULL;

	if ( ! pFnPickCameraMode )
		pFnPickCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67717 ];

	ASFXPlayerCamera_execPickCameraMode_Parms PickCameraMode_Parms;
	PickCameraMode_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPickCameraMode, &PickCameraMode_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &PickCameraMode_Parms.OutVT, 0x38 );
};

// Function SFXGame.SFXPlayerCamera.RotateToFace
// [0x00020002] 
// Parameters infos:
// struct FVector                 AimPoint                       ( CPF_Parm )
// float                          Time                           ( CPF_Parm )

void ASFXPlayerCamera::RotateToFace ( struct FVector AimPoint, float Time )
{
	static UFunction* pFnRotateToFace = NULL;

	if ( ! pFnRotateToFace )
		pFnRotateToFace = (UFunction*) UObject::GObjObjects()->Data[ 67713 ];

	ASFXPlayerCamera_execRotateToFace_Parms RotateToFace_Parms;
	memcpy ( &RotateToFace_Parms.AimPoint, &AimPoint, 0xC );
	RotateToFace_Parms.Time = Time;

	this->ProcessEvent ( pFnRotateToFace, &RotateToFace_Parms, NULL );
};

// Function SFXGame.SFXPlayerCamera.UpdateViewTarget
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ASFXPlayerCamera::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 67704 ];

	ASFXPlayerCamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x38 );
};

// Function SFXGame.SFXPlayerCamera.CreateCameraModifier
// [0x00080002] 
// Parameters infos:
// class UCameraModifier*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ModifierClass                  ( CPF_Parm )

class UCameraModifier* ASFXPlayerCamera::CreateCameraModifier ( class UClass* ModifierClass )
{
	static UFunction* pFnCreateCameraModifier = NULL;

	if ( ! pFnCreateCameraModifier )
		pFnCreateCameraModifier = (UFunction*) UObject::GObjObjects()->Data[ 67700 ];

	ASFXPlayerCamera_execCreateCameraModifier_Parms CreateCameraModifier_Parms;
	CreateCameraModifier_Parms.ModifierClass = ModifierClass;

	this->ProcessEvent ( pFnCreateCameraModifier, &CreateCameraModifier_Parms, NULL );

	return CreateCameraModifier_Parms.ReturnValue;
};

// Function SFXGame.SFXPlayerCamera.IsPlayingCameraAnim
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASFXPlayerCamera::IsPlayingCameraAnim ( )
{
	static UFunction* pFnIsPlayingCameraAnim = NULL;

	if ( ! pFnIsPlayingCameraAnim )
		pFnIsPlayingCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 67698 ];

	ASFXPlayerCamera_execIsPlayingCameraAnim_Parms IsPlayingCameraAnim_Parms;

	this->ProcessEvent ( pFnIsPlayingCameraAnim, &IsPlayingCameraAnim_Parms, NULL );

	return IsPlayingCameraAnim_Parms.ReturnValue;
};

// Function SFXGame.SFXPlayerCamera.AddScreenShake
// [0x00020002] 
// Parameters infos:
// struct FScreenShakeStruct      Shake                          ( CPF_Parm )

void ASFXPlayerCamera::AddScreenShake ( struct FScreenShakeStruct Shake )
{
	static UFunction* pFnAddScreenShake = NULL;

	if ( ! pFnAddScreenShake )
		pFnAddScreenShake = (UFunction*) UObject::GObjObjects()->Data[ 67696 ];

	ASFXPlayerCamera_execAddScreenShake_Parms AddScreenShake_Parms;
	memcpy ( &AddScreenShake_Parms.Shake, &Shake, 0x78 );

	this->ProcessEvent ( pFnAddScreenShake, &AddScreenShake_Parms, NULL );
};

// Function SFXGame.SFXPlayerCamera.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASFXPlayerCamera::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 67695 ];

	ASFXPlayerCamera_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SFXGame.BioProceduralCameraBasic.FixedCamera
// [0x00422002] 
// Parameters infos:
// struct FActorInfo              stActorInfo                    ( CPF_Parm )
// unsigned long                  bInvert                        ( CPF_Parm )
// struct FCameraInfo             stCameraInfo                   ( CPF_Parm | CPF_OutParm )

void UBioProceduralCameraBasic::FixedCamera ( struct FActorInfo stActorInfo, unsigned long bInvert, struct FCameraInfo* stCameraInfo )
{
	static UFunction* pFnFixedCamera = NULL;

	if ( ! pFnFixedCamera )
		pFnFixedCamera = (UFunction*) UObject::GObjObjects()->Data[ 57575 ];

	UBioProceduralCameraBasic_execFixedCamera_Parms FixedCamera_Parms;
	memcpy ( &FixedCamera_Parms.stActorInfo, &stActorInfo, 0x54 );
	FixedCamera_Parms.bInvert = bInvert;

	this->ProcessEvent ( pFnFixedCamera, &FixedCamera_Parms, NULL );

	if ( stCameraInfo )
		memcpy ( stCameraInfo, &FixedCamera_Parms.stCameraInfo, 0x20 );
};

// Function SFXGame.BioCameraBehaviorFlourish.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void UBioCameraBehaviorFlourish::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50322 ];

	UBioCameraBehaviorFlourish_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorFlourish.GetCameraLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UBioCameraBehaviorFlourish::GetCameraLocation ( )
{
	static UFunction* pFnGetCameraLocation = NULL;

	if ( ! pFnGetCameraLocation )
		pFnGetCameraLocation = (UFunction*) UObject::GObjObjects()->Data[ 50320 ];

	UBioCameraBehaviorFlourish_execGetCameraLocation_Parms GetCameraLocation_Parms;

	this->ProcessEvent ( pFnGetCameraLocation, &GetCameraLocation_Parms, NULL );

	return GetCameraLocation_Parms.ReturnValue;
};

// Function SFXGame.BioCameraBehaviorFlourish.Initialize
// [0x00020002] 
// Parameters infos:

void UBioCameraBehaviorFlourish::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 50316 ];

	UBioCameraBehaviorFlourish_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorFree.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void UBioCameraBehaviorFree::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50345 ];

	UBioCameraBehaviorFree_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioCameraBehaviorFree.Initialize
// [0x00020002] 
// Parameters infos:

void UBioCameraBehaviorFree::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 50341 ];

	UBioCameraBehaviorFree_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioDEBUG_PawnFiringController.ShootTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                SHTR                           ( CPF_Parm )

bool ABioDEBUG_PawnFiringController::ShootTarget ( class ABioPawn* SHTR )
{
	static UFunction* pFnShootTarget = NULL;

	if ( ! pFnShootTarget )
		pFnShootTarget = (UFunction*) UObject::GObjObjects()->Data[ 52718 ];

	ABioDEBUG_PawnFiringController_execShootTarget_Parms ShootTarget_Parms;
	ShootTarget_Parms.SHTR = SHTR;

	this->ProcessEvent ( pFnShootTarget, &ShootTarget_Parms, NULL );

	return ShootTarget_Parms.ReturnValue;
};

// Function SFXGame.BioDEBUG_PawnFiringController.HowManyShooting
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ABioDEBUG_PawnFiringController::HowManyShooting ( )
{
	static UFunction* pFnHowManyShooting = NULL;

	if ( ! pFnHowManyShooting )
		pFnHowManyShooting = (UFunction*) UObject::GObjObjects()->Data[ 52714 ];

	ABioDEBUG_PawnFiringController_execHowManyShooting_Parms HowManyShooting_Parms;

	this->ProcessEvent ( pFnHowManyShooting, &HowManyShooting_Parms, NULL );

	return HowManyShooting_Parms.ReturnValue;
};

// Function SFXGame.BioOp.EvaluateInt
// [0x00422002] 
// Parameters infos:
// unsigned char                  eOp                            ( CPF_Parm )
// int                            nB                             ( CPF_Parm )
// unsigned long                  bInvertOp                      ( CPF_Parm )
// int                            nU                             ( CPF_Parm )
// int                            nA                             ( CPF_Parm | CPF_OutParm )

void UBioOp::EvaluateInt ( unsigned char eOp, int nB, unsigned long bInvertOp, int nU, int* nA )
{
	static UFunction* pFnEvaluateInt = NULL;

	if ( ! pFnEvaluateInt )
		pFnEvaluateInt = (UFunction*) UObject::GObjObjects()->Data[ 55807 ];

	UBioOp_execEvaluateInt_Parms EvaluateInt_Parms;
	EvaluateInt_Parms.eOp = eOp;
	EvaluateInt_Parms.nB = nB;
	EvaluateInt_Parms.bInvertOp = bInvertOp;
	EvaluateInt_Parms.nU = nU;

	this->ProcessEvent ( pFnEvaluateInt, &EvaluateInt_Parms, NULL );

	if ( nA )
		*nA = EvaluateInt_Parms.nA;
};

// Function SFXGame.BioOp.EvaluateFloat
// [0x00426002] 
// Parameters infos:
// unsigned char                  eOp                            ( CPF_Parm )
// unsigned long                  bInvertOp                      ( CPF_Parm )
// float                          fU                             ( CPF_OptionalParm | CPF_Parm )
// float                          fA                             ( CPF_Parm | CPF_OutParm )
// float                          fB                             ( CPF_Parm | CPF_OutParm )

void UBioOp::EvaluateFloat ( unsigned char eOp, unsigned long bInvertOp, float fU, float* fA, float* fB )
{
	static UFunction* pFnEvaluateFloat = NULL;

	if ( ! pFnEvaluateFloat )
		pFnEvaluateFloat = (UFunction*) UObject::GObjObjects()->Data[ 55801 ];

	UBioOp_execEvaluateFloat_Parms EvaluateFloat_Parms;
	EvaluateFloat_Parms.eOp = eOp;
	EvaluateFloat_Parms.bInvertOp = bInvertOp;
	EvaluateFloat_Parms.fU = fU;

	this->ProcessEvent ( pFnEvaluateFloat, &EvaluateFloat_Parms, NULL );

	if ( fA )
		*fA = EvaluateFloat_Parms.fA;

	if ( fB )
		*fB = EvaluateFloat_Parms.fB;
};

// Function SFXGame.SFXModule_AimAssist.DebugDraw_ZoomSnap
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void USFXModule_AimAssist::DebugDraw_ZoomSnap ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw_ZoomSnap = NULL;

	if ( ! pFnDebugDraw_ZoomSnap )
		pFnDebugDraw_ZoomSnap = (UFunction*) UObject::GObjObjects()->Data[ 56130 ];

	USFXModule_AimAssist_execDebugDraw_ZoomSnap_Parms DebugDraw_ZoomSnap_Parms;
	DebugDraw_ZoomSnap_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw_ZoomSnap, &DebugDraw_ZoomSnap_Parms, NULL );
};

// Function SFXGame.SFXModule_AimAssist.ZoomSnap
// [0x00020002] 
// Parameters infos:

void USFXModule_AimAssist::ZoomSnap ( )
{
	static UFunction* pFnZoomSnap = NULL;

	if ( ! pFnZoomSnap )
		pFnZoomSnap = (UFunction*) UObject::GObjObjects()->Data[ 56110 ];

	USFXModule_AimAssist_execZoomSnap_Parms ZoomSnap_Parms;

	this->ProcessEvent ( pFnZoomSnap, &ZoomSnap_Parms, NULL );
};

// Function SFXGame.SFXModule_AimAssist.DebugDraw_Adhesion
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void USFXModule_AimAssist::DebugDraw_Adhesion ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw_Adhesion = NULL;

	if ( ! pFnDebugDraw_Adhesion )
		pFnDebugDraw_Adhesion = (UFunction*) UObject::GObjObjects()->Data[ 56105 ];

	USFXModule_AimAssist_execDebugDraw_Adhesion_Parms DebugDraw_Adhesion_Parms;
	DebugDraw_Adhesion_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw_Adhesion, &DebugDraw_Adhesion_Parms, NULL );
};

// Function SFXGame.SFXModule_AimAssist.PrintQuat
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FQuat                   Q                              ( CPF_Parm )

struct FString USFXModule_AimAssist::PrintQuat ( struct FQuat Q )
{
	static UFunction* pFnPrintQuat = NULL;

	if ( ! pFnPrintQuat )
		pFnPrintQuat = (UFunction*) UObject::GObjObjects()->Data[ 56102 ];

	USFXModule_AimAssist_execPrintQuat_Parms PrintQuat_Parms;
	memcpy ( &PrintQuat_Parms.Q, &Q, 0x10 );

	this->ProcessEvent ( pFnPrintQuat, &PrintQuat_Parms, NULL );

	return PrintQuat_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.ViewAdhesion
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )
// class ABioWeaponRanged*        Weapon                         ( CPF_Parm )

struct FRotator USFXModule_AimAssist::ViewAdhesion ( float DeltaTime, class ABioWeaponRanged* Weapon )
{
	static UFunction* pFnViewAdhesion = NULL;

	if ( ! pFnViewAdhesion )
		pFnViewAdhesion = (UFunction*) UObject::GObjObjects()->Data[ 56073 ];

	USFXModule_AimAssist_execViewAdhesion_Parms ViewAdhesion_Parms;
	ViewAdhesion_Parms.DeltaTime = DeltaTime;
	ViewAdhesion_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnViewAdhesion, &ViewAdhesion_Parms, NULL );

	return ViewAdhesion_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.StripRoll
// [0x00020002] 
// Parameters infos:
// struct FQuat                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FQuat                   Q                              ( CPF_Parm )

struct FQuat USFXModule_AimAssist::StripRoll ( struct FQuat Q )
{
	static UFunction* pFnStripRoll = NULL;

	if ( ! pFnStripRoll )
		pFnStripRoll = (UFunction*) UObject::GObjObjects()->Data[ 56069 ];

	USFXModule_AimAssist_execStripRoll_Parms StripRoll_Parms;
	memcpy ( &StripRoll_Parms.Q, &Q, 0x10 );

	this->ProcessEvent ( pFnStripRoll, &StripRoll_Parms, NULL );

	return StripRoll_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.DebugDraw_Friction
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void USFXModule_AimAssist::DebugDraw_Friction ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw_Friction = NULL;

	if ( ! pFnDebugDraw_Friction )
		pFnDebugDraw_Friction = (UFunction*) UObject::GObjObjects()->Data[ 56059 ];

	USFXModule_AimAssist_execDebugDraw_Friction_Parms DebugDraw_Friction_Parms;
	DebugDraw_Friction_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw_Friction, &DebugDraw_Friction_Parms, NULL );
};

// Function SFXGame.SFXModule_AimAssist.ViewFriction
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )
// class ABioWeaponRanged*        Weapon                         ( CPF_Parm )

float USFXModule_AimAssist::ViewFriction ( float DeltaTime, class ABioWeaponRanged* Weapon )
{
	static UFunction* pFnViewFriction = NULL;

	if ( ! pFnViewFriction )
		pFnViewFriction = (UFunction*) UObject::GObjObjects()->Data[ 56042 ];

	USFXModule_AimAssist_execViewFriction_Parms ViewFriction_Parms;
	ViewFriction_Parms.DeltaTime = DeltaTime;
	ViewFriction_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnViewFriction, &ViewFriction_Parms, NULL );

	return ViewFriction_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.GetAdjustedAimFor
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator USFXModule_AimAssist::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 56031 ];

	USFXModule_AimAssist_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.DebugDraw_Magnetism
// [0x00020002] 
// Parameters infos:
// class ABioHUD*                 H                              ( CPF_Parm )

void USFXModule_AimAssist::DebugDraw_Magnetism ( class ABioHUD* H )
{
	static UFunction* pFnDebugDraw_Magnetism = NULL;

	if ( ! pFnDebugDraw_Magnetism )
		pFnDebugDraw_Magnetism = (UFunction*) UObject::GObjObjects()->Data[ 56019 ];

	USFXModule_AimAssist_execDebugDraw_Magnetism_Parms DebugDraw_Magnetism_Parms;
	DebugDraw_Magnetism_Parms.H = H;

	this->ProcessEvent ( pFnDebugDraw_Magnetism, &DebugDraw_Magnetism_Parms, NULL );
};

// Function SFXGame.SFXModule_AimAssist.GetStickRelativeDot
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ScreenAimOffset                ( CPF_Parm )

float USFXModule_AimAssist::GetStickRelativeDot ( struct FVector ScreenAimOffset )
{
	static UFunction* pFnGetStickRelativeDot = NULL;

	if ( ! pFnGetStickRelativeDot )
		pFnGetStickRelativeDot = (UFunction*) UObject::GObjObjects()->Data[ 56012 ];

	USFXModule_AimAssist_execGetStickRelativeDot_Parms GetStickRelativeDot_Parms;
	memcpy ( &GetStickRelativeDot_Parms.ScreenAimOffset, &ScreenAimOffset, 0xC );

	this->ProcessEvent ( pFnGetStickRelativeDot, &GetStickRelativeDot_Parms, NULL );

	return GetStickRelativeDot_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.GetMagneticAimCorrection
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )
// struct FRotator                BaseAimRot                     ( CPF_Parm )
// float                          MaxAngle                       ( CPF_Parm )
// float                          Threshold                      ( CPF_Parm )
// float                          Range                          ( CPF_Parm )

struct FRotator USFXModule_AimAssist::GetMagneticAimCorrection ( struct FVector StartFireLoc, struct FRotator BaseAimRot, float MaxAngle, float Threshold, float Range )
{
	static UFunction* pFnGetMagneticAimCorrection = NULL;

	if ( ! pFnGetMagneticAimCorrection )
		pFnGetMagneticAimCorrection = (UFunction*) UObject::GObjObjects()->Data[ 55997 ];

	USFXModule_AimAssist_execGetMagneticAimCorrection_Parms GetMagneticAimCorrection_Parms;
	memcpy ( &GetMagneticAimCorrection_Parms.StartFireLoc, &StartFireLoc, 0xC );
	memcpy ( &GetMagneticAimCorrection_Parms.BaseAimRot, &BaseAimRot, 0xC );
	GetMagneticAimCorrection_Parms.MaxAngle = MaxAngle;
	GetMagneticAimCorrection_Parms.Threshold = Threshold;
	GetMagneticAimCorrection_Parms.Range = Range;

	this->ProcessEvent ( pFnGetMagneticAimCorrection, &GetMagneticAimCorrection_Parms, NULL );

	return GetMagneticAimCorrection_Parms.ReturnValue;
};

// Function SFXGame.SFXModule_AimAssist.ProcessRotation
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                DeltaRot                       ( CPF_Parm | CPF_OutParm )

void USFXModule_AimAssist::ProcessRotation ( float DeltaTime, struct FRotator* DeltaRot )
{
	static UFunction* pFnProcessRotation = NULL;

	if ( ! pFnProcessRotation )
		pFnProcessRotation = (UFunction*) UObject::GObjObjects()->Data[ 55990 ];

	USFXModule_AimAssist_execProcessRotation_Parms ProcessRotation_Parms;
	ProcessRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessRotation, &ProcessRotation_Parms, NULL );

	if ( DeltaRot )
		memcpy ( DeltaRot, &ProcessRotation_Parms.DeltaRot, 0xC );
};

// Function SFXGame.SFXModule_AimAssist.CacheCurrentAimAssistTarget
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXModule_AimAssist::CacheCurrentAimAssistTarget ( )
{
	static UFunction* pFnCacheCurrentAimAssistTarget = NULL;

	if ( ! pFnCacheCurrentAimAssistTarget )
		pFnCacheCurrentAimAssistTarget = (UFunction*) UObject::GObjObjects()->Data[ 55976 ];

	USFXModule_AimAssist_execCacheCurrentAimAssistTarget_Parms CacheCurrentAimAssistTarget_Parms;

	this->ProcessEvent ( pFnCacheCurrentAimAssistTarget, &CacheCurrentAimAssistTarget_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantBonusTalents
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            bonusIdentifier                ( CPF_Parm )

void UBioConsequenceFunctions::GrantBonusTalents ( class ABioWorldInfo* WorldInfo, int bonusIdentifier )
{
	static UFunction* pFnGrantBonusTalents = NULL;

	if ( ! pFnGrantBonusTalents )
		pFnGrantBonusTalents = (UFunction*) UObject::GObjObjects()->Data[ 52433 ];

	UBioConsequenceFunctions_execGrantBonusTalents_Parms GrantBonusTalents_Parms;
	GrantBonusTalents_Parms.WorldInfo = WorldInfo;
	GrantBonusTalents_Parms.bonusIdentifier = bonusIdentifier;

	this->ProcessEvent ( pFnGrantBonusTalents, &GrantBonusTalents_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantCredits
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            Count                          ( CPF_Parm )

void UBioConsequenceFunctions::GrantCredits ( class ABioWorldInfo* WorldInfo, int Count )
{
	static UFunction* pFnGrantCredits = NULL;

	if ( ! pFnGrantCredits )
		pFnGrantCredits = (UFunction*) UObject::GObjObjects()->Data[ 52429 ];

	UBioConsequenceFunctions_execGrantCredits_Parms GrantCredits_Parms;
	GrantCredits_Parms.WorldInfo = WorldInfo;
	GrantCredits_Parms.Count = Count;

	this->ProcessEvent ( pFnGrantCredits, &GrantCredits_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantMediGel
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            Count                          ( CPF_Parm )

void UBioConsequenceFunctions::GrantMediGel ( class ABioWorldInfo* WorldInfo, int Count )
{
	static UFunction* pFnGrantMediGel = NULL;

	if ( ! pFnGrantMediGel )
		pFnGrantMediGel = (UFunction*) UObject::GObjObjects()->Data[ 52425 ];

	UBioConsequenceFunctions_execGrantMediGel_Parms GrantMediGel_Parms;
	GrantMediGel_Parms.WorldInfo = WorldInfo;
	GrantMediGel_Parms.Count = Count;

	this->ProcessEvent ( pFnGrantMediGel, &GrantMediGel_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantSalvage
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            Count                          ( CPF_Parm )

void UBioConsequenceFunctions::GrantSalvage ( class ABioWorldInfo* WorldInfo, int Count )
{
	static UFunction* pFnGrantSalvage = NULL;

	if ( ! pFnGrantSalvage )
		pFnGrantSalvage = (UFunction*) UObject::GObjObjects()->Data[ 52421 ];

	UBioConsequenceFunctions_execGrantSalvage_Parms GrantSalvage_Parms;
	GrantSalvage_Parms.WorldInfo = WorldInfo;
	GrantSalvage_Parms.Count = Count;

	this->ProcessEvent ( pFnGrantSalvage, &GrantSalvage_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantGrenades
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            Count                          ( CPF_Parm )

void UBioConsequenceFunctions::GrantGrenades ( class ABioWorldInfo* WorldInfo, int Count )
{
	static UFunction* pFnGrantGrenades = NULL;

	if ( ! pFnGrantGrenades )
		pFnGrantGrenades = (UFunction*) UObject::GObjObjects()->Data[ 52417 ];

	UBioConsequenceFunctions_execGrantGrenades_Parms GrantGrenades_Parms;
	GrantGrenades_Parms.WorldInfo = WorldInfo;
	GrantGrenades_Parms.Count = Count;

	this->ProcessEvent ( pFnGrantGrenades, &GrantGrenades_Parms, NULL );
};

// Function SFXGame.BioConsequenceFunctions.GrantScaledXP
// [0x00022002] 
// Parameters infos:
// class ABioWorldInfo*           WorldInfo                      ( CPF_Parm )
// int                            Curve                          ( CPF_Parm )

void UBioConsequenceFunctions::GrantScaledXP ( class ABioWorldInfo* WorldInfo, int Curve )
{
	static UFunction* pFnGrantScaledXP = NULL;

	if ( ! pFnGrantScaledXP )
		pFnGrantScaledXP = (UFunction*) UObject::GObjObjects()->Data[ 52407 ];

	UBioConsequenceFunctions_execGrantScaledXP_Parms GrantScaledXP_Parms;
	GrantScaledXP_Parms.WorldInfo = WorldInfo;
	GrantScaledXP_Parms.Curve = Curve;

	this->ProcessEvent ( pFnGrantScaledXP, &GrantScaledXP_Parms, NULL );
};

// Function SFXGame.BioGameInfo.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             NewPlayer                      ( CPF_Parm )

void ABioGameInfo::RestartPlayer ( class AController* NewPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53812 ];

	ABioGameInfo_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function SFXGame.BioGameInfo.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void ABioGameInfo::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 53809 ];

	ABioGameInfo_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function SFXGame.BioGameInfo.BioBeginPlay
// [0x00020002] 
// Parameters infos:

void ABioGameInfo::BioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53806 ];

	ABioGameInfo_execBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioMorphFaceSaveObject.LoadObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioMorphFaceSaveObject::LoadObject ( class UObject* O )
{
	static UFunction* pFnLoadObject = NULL;

	if ( ! pFnLoadObject )
		pFnLoadObject = (UFunction*) UObject::GObjObjects()->Data[ 55716 ];

	UBioMorphFaceSaveObject_execLoadObject_Parms LoadObject_Parms;
	LoadObject_Parms.O = O;

	this->ProcessEvent ( pFnLoadObject, &LoadObject_Parms, NULL );
};

// Function SFXGame.BioMorphFaceSaveObject.SaveObject
// [0x00020002] 
// Parameters infos:
// class UObject*                 O                              ( CPF_Parm )

void UBioMorphFaceSaveObject::SaveObject ( class UObject* O )
{
	static UFunction* pFnSaveObject = NULL;

	if ( ! pFnSaveObject )
		pFnSaveObject = (UFunction*) UObject::GObjObjects()->Data[ 55704 ];

	UBioMorphFaceSaveObject_execSaveObject_Parms SaveObject_Parms;
	SaveObject_Parms.O = O;

	this->ProcessEvent ( pFnSaveObject, &SaveObject_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_PhotoOrbit.UpdateOffset
// [0x00020002] 
// Parameters infos:
// struct FVector                 Location                       ( CPF_Parm )

void USFXCameraMode_PhotoOrbit::UpdateOffset ( struct FVector Location )
{
	static UFunction* pFnUpdateOffset = NULL;

	if ( ! pFnUpdateOffset )
		pFnUpdateOffset = (UFunction*) UObject::GObjObjects()->Data[ 66608 ];

	USFXCameraMode_PhotoOrbit_execUpdateOffset_Parms UpdateOffset_Parms;
	memcpy ( &UpdateOffset_Parms.Location, &Location, 0xC );

	this->ProcessEvent ( pFnUpdateOffset, &UpdateOffset_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_Photo::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66592 ];

	USFXCameraMode_Photo_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.UpdateRollAndFOV
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_Photo::UpdateRollAndFOV ( float DeltaTime )
{
	static UFunction* pFnUpdateRollAndFOV = NULL;

	if ( ! pFnUpdateRollAndFOV )
		pFnUpdateRollAndFOV = (UFunction*) UObject::GObjObjects()->Data[ 66587 ];

	USFXCameraMode_Photo_execUpdateRollAndFOV_Parms UpdateRollAndFOV_Parms;
	UpdateRollAndFOV_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRollAndFOV, &UpdateRollAndFOV_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.UpdateOffset
// [0x00020000] 
// Parameters infos:
// struct FVector                 Location                       ( CPF_Parm )

void USFXCameraMode_Photo::UpdateOffset ( struct FVector Location )
{
	static UFunction* pFnUpdateOffset = NULL;

	if ( ! pFnUpdateOffset )
		pFnUpdateOffset = (UFunction*) UObject::GObjObjects()->Data[ 66585 ];

	USFXCameraMode_Photo_execUpdateOffset_Parms UpdateOffset_Parms;
	memcpy ( &UpdateOffset_Parms.Location, &Location, 0xC );

	this->ProcessEvent ( pFnUpdateOffset, &UpdateOffset_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.ModifyPostProcessSettings
// [0x00420002] 
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXCameraMode_Photo::ModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 66582 ];

	USFXCameraMode_Photo_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.SFXCameraMode_Photo.ResetRoll
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Photo::ResetRoll ( )
{
	static UFunction* pFnResetRoll = NULL;

	if ( ! pFnResetRoll )
		pFnResetRoll = (UFunction*) UObject::GObjObjects()->Data[ 66579 ];

	USFXCameraMode_Photo_execResetRoll_Parms ResetRoll_Parms;

	this->ProcessEvent ( pFnResetRoll, &ResetRoll_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.InitFromMode
// [0x00020002] 
// Parameters infos:
// float                          NewFOV                         ( CPF_Parm )

void USFXCameraMode_Photo::InitFromMode ( float NewFOV )
{
	static UFunction* pFnInitFromMode = NULL;

	if ( ! pFnInitFromMode )
		pFnInitFromMode = (UFunction*) UObject::GObjObjects()->Data[ 66575 ];

	USFXCameraMode_Photo_execInitFromMode_Parms InitFromMode_Parms;
	InitFromMode_Parms.NewFOV = NewFOV;

	this->ProcessEvent ( pFnInitFromMode, &InitFromMode_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Photo.ModifyPostProcess
// [0x00520000] 
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXCameraMode_Photo::ModifyPostProcess ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcess = NULL;

	if ( ! pFnModifyPostProcess )
		pFnModifyPostProcess = (UFunction*) UObject::GObjObjects()->Data[ 66573 ];

	USFXCameraMode_Photo_execModifyPostProcess_Parms ModifyPostProcess_Parms;

	this->ProcessEvent ( pFnModifyPostProcess, &ModifyPostProcess_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcess_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.SFXGameModeDefault.TrySkipElevator
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TrySkipElevator ( )
{
	static UFunction* pFnTrySkipElevator = NULL;

	if ( ! pFnTrySkipElevator )
		pFnTrySkipElevator = (UFunction*) UObject::GObjObjects()->Data[ 67193 ];

	USFXGameModeDefault_execTrySkipElevator_Parms TrySkipElevator_Parms;

	this->ProcessEvent ( pFnTrySkipElevator, &TrySkipElevator_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.EnterCommandMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::EnterCommandMenu ( )
{
	static UFunction* pFnEnterCommandMenu = NULL;

	if ( ! pFnEnterCommandMenu )
		pFnEnterCommandMenu = (UFunction*) UObject::GObjObjects()->Data[ 67191 ];

	USFXGameModeDefault_execEnterCommandMenu_Parms EnterCommandMenu_Parms;

	this->ProcessEvent ( pFnEnterCommandMenu, &EnterCommandMenu_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.EnterWeaponWheel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::EnterWeaponWheel ( )
{
	static UFunction* pFnEnterWeaponWheel = NULL;

	if ( ! pFnEnterWeaponWheel )
		pFnEnterWeaponWheel = (UFunction*) UObject::GObjObjects()->Data[ 67189 ];

	USFXGameModeDefault_execEnterWeaponWheel_Parms EnterWeaponWheel_Parms;

	this->ProcessEvent ( pFnEnterWeaponWheel, &EnterWeaponWheel_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.EnterPowerWheel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::EnterPowerWheel ( )
{
	static UFunction* pFnEnterPowerWheel = NULL;

	if ( ! pFnEnterPowerWheel )
		pFnEnterPowerWheel = (UFunction*) UObject::GObjObjects()->Data[ 67187 ];

	USFXGameModeDefault_execEnterPowerWheel_Parms EnterPowerWheel_Parms;

	this->ProcessEvent ( pFnEnterPowerWheel, &EnterPowerWheel_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.UseGrenade
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::UseGrenade ( )
{
	static UFunction* pFnUseGrenade = NULL;

	if ( ! pFnUseGrenade )
		pFnUseGrenade = (UFunction*) UObject::GObjObjects()->Data[ 67185 ];

	USFXGameModeDefault_execUseGrenade_Parms UseGrenade_Parms;

	this->ProcessEvent ( pFnUseGrenade, &UseGrenade_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.UseFirstAid
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::UseFirstAid ( )
{
	static UFunction* pFnUseFirstAid = NULL;

	if ( ! pFnUseFirstAid )
		pFnUseFirstAid = (UFunction*) UObject::GObjObjects()->Data[ 67182 ];

	USFXGameModeDefault_execUseFirstAid_Parms UseFirstAid_Parms;

	this->ProcessEvent ( pFnUseFirstAid, &UseFirstAid_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TryHolster
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TryHolster ( )
{
	static UFunction* pFnTryHolster = NULL;

	if ( ! pFnTryHolster )
		pFnTryHolster = (UFunction*) UObject::GObjObjects()->Data[ 67179 ];

	USFXGameModeDefault_execTryHolster_Parms TryHolster_Parms;

	this->ProcessEvent ( pFnTryHolster, &TryHolster_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.ChangeMagnification
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::ChangeMagnification ( )
{
	static UFunction* pFnChangeMagnification = NULL;

	if ( ! pFnChangeMagnification )
		pFnChangeMagnification = (UFunction*) UObject::GObjObjects()->Data[ 67176 ];

	USFXGameModeDefault_execChangeMagnification_Parms ChangeMagnification_Parms;

	this->ProcessEvent ( pFnChangeMagnification, &ChangeMagnification_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.ToggleCrouch
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::ToggleCrouch ( )
{
	static UFunction* pFnToggleCrouch = NULL;

	if ( ! pFnToggleCrouch )
		pFnToggleCrouch = (UFunction*) UObject::GObjObjects()->Data[ 67174 ];

	USFXGameModeDefault_execToggleCrouch_Parms ToggleCrouch_Parms;

	this->ProcessEvent ( pFnToggleCrouch, &ToggleCrouch_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.ToggleWalk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::ToggleWalk ( )
{
	static UFunction* pFnToggleWalk = NULL;

	if ( ! pFnToggleWalk )
		pFnToggleWalk = (UFunction*) UObject::GObjObjects()->Data[ 67173 ];

	USFXGameModeDefault_execToggleWalk_Parms ToggleWalk_Parms;

	this->ProcessEvent ( pFnToggleWalk, &ToggleWalk_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.DisableWalking
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::DisableWalking ( )
{
	static UFunction* pFnDisableWalking = NULL;

	if ( ! pFnDisableWalking )
		pFnDisableWalking = (UFunction*) UObject::GObjObjects()->Data[ 67172 ];

	USFXGameModeDefault_execDisableWalking_Parms DisableWalking_Parms;

	this->ProcessEvent ( pFnDisableWalking, &DisableWalking_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.EnableWalking
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::EnableWalking ( )
{
	static UFunction* pFnEnableWalking = NULL;

	if ( ! pFnEnableWalking )
		pFnEnableWalking = (UFunction*) UObject::GObjObjects()->Data[ 67171 ];

	USFXGameModeDefault_execEnableWalking_Parms EnableWalking_Parms;

	this->ProcessEvent ( pFnEnableWalking, &EnableWalking_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TryUseMappedPower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TryUseMappedPower ( )
{
	static UFunction* pFnTryUseMappedPower = NULL;

	if ( ! pFnTryUseMappedPower )
		pFnTryUseMappedPower = (UFunction*) UObject::GObjObjects()->Data[ 67167 ];

	USFXGameModeDefault_execTryUseMappedPower_Parms TryUseMappedPower_Parms;

	this->ProcessEvent ( pFnTryUseMappedPower, &TryUseMappedPower_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.SwitchToWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  Slot                           ( CPF_Parm )

void USFXGameModeDefault::SwitchToWeapon ( unsigned char Slot )
{
	static UFunction* pFnSwitchToWeapon = NULL;

	if ( ! pFnSwitchToWeapon )
		pFnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67163 ];

	USFXGameModeDefault_execSwitchToWeapon_Parms SwitchToWeapon_Parms;
	SwitchToWeapon_Parms.Slot = Slot;

	this->ProcessEvent ( pFnSwitchToWeapon, &SwitchToWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TrySwapWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TrySwapWeapon ( )
{
	static UFunction* pFnTrySwapWeapon = NULL;

	if ( ! pFnTrySwapWeapon )
		pFnTrySwapWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67161 ];

	USFXGameModeDefault_execTrySwapWeapon_Parms TrySwapWeapon_Parms;

	this->ProcessEvent ( pFnTrySwapWeapon, &TrySwapWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67157 ];

	USFXGameModeDefault_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67153 ];

	USFXGameModeDefault_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.GetPrimaryWeaponIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USFXGameModeDefault::GetPrimaryWeaponIndex ( )
{
	static UFunction* pFnGetPrimaryWeaponIndex = NULL;

	if ( ! pFnGetPrimaryWeaponIndex )
		pFnGetPrimaryWeaponIndex = (UFunction*) UObject::GObjObjects()->Data[ 67148 ];

	USFXGameModeDefault_execGetPrimaryWeaponIndex_Parms GetPrimaryWeaponIndex_Parms;

	this->ProcessEvent ( pFnGetPrimaryWeaponIndex, &GetPrimaryWeaponIndex_Parms, NULL );

	return GetPrimaryWeaponIndex_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeDefault.UseAbility
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Ability                        ( CPF_Parm )

void USFXGameModeDefault::UseAbility ( int Ability )
{
	static UFunction* pFnUseAbility = NULL;

	if ( ! pFnUseAbility )
		pFnUseAbility = (UFunction*) UObject::GObjObjects()->Data[ 67145 ];

	USFXGameModeDefault_execUseAbility_Parms UseAbility_Parms;
	UseAbility_Parms.Ability = Ability;

	this->ProcessEvent ( pFnUseAbility, &UseAbility_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TryMelee
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TryMelee ( )
{
	static UFunction* pFnTryMelee = NULL;

	if ( ! pFnTryMelee )
		pFnTryMelee = (UFunction*) UObject::GObjObjects()->Data[ 67142 ];

	USFXGameModeDefault_execTryMelee_Parms TryMelee_Parms;

	this->ProcessEvent ( pFnTryMelee, &TryMelee_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TurnOffTightAim
// [0x00020002] 
// Parameters infos:

void USFXGameModeDefault::TurnOffTightAim ( )
{
	static UFunction* pFnTurnOffTightAim = NULL;

	if ( ! pFnTurnOffTightAim )
		pFnTurnOffTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67141 ];

	USFXGameModeDefault_execTurnOffTightAim_Parms TurnOffTightAim_Parms;

	this->ProcessEvent ( pFnTurnOffTightAim, &TurnOffTightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.StopTightAim
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::StopTightAim ( )
{
	static UFunction* pFnStopTightAim = NULL;

	if ( ! pFnStopTightAim )
		pFnStopTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67139 ];

	USFXGameModeDefault_execStopTightAim_Parms StopTightAim_Parms;

	this->ProcessEvent ( pFnStopTightAim, &StopTightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TightAim
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TightAim ( )
{
	static UFunction* pFnTightAim = NULL;

	if ( ! pFnTightAim )
		pFnTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67137 ];

	USFXGameModeDefault_execTightAim_Parms TightAim_Parms;

	this->ProcessEvent ( pFnTightAim, &TightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TurnStormOff
// [0x00020002] 
// Parameters infos:

void USFXGameModeDefault::TurnStormOff ( )
{
	static UFunction* pFnTurnStormOff = NULL;

	if ( ! pFnTurnStormOff )
		pFnTurnStormOff = (UFunction*) UObject::GObjObjects()->Data[ 67136 ];

	USFXGameModeDefault_execTurnStormOff_Parms TurnStormOff_Parms;

	this->ProcessEvent ( pFnTurnStormOff, &TurnStormOff_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.StormOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::StormOff ( )
{
	static UFunction* pFnStormOff = NULL;

	if ( ! pFnStormOff )
		pFnStormOff = (UFunction*) UObject::GObjObjects()->Data[ 67134 ];

	USFXGameModeDefault_execStormOff_Parms StormOff_Parms;

	this->ProcessEvent ( pFnStormOff, &StormOff_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.StormOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::StormOn ( )
{
	static UFunction* pFnStormOn = NULL;

	if ( ! pFnStormOn )
		pFnStormOn = (UFunction*) UObject::GObjObjects()->Data[ 67131 ];

	USFXGameModeDefault_execStormOn_Parms StormOn_Parms;

	this->ProcessEvent ( pFnStormOn, &StormOn_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TryExitCover
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TryExitCover ( )
{
	static UFunction* pFnTryExitCover = NULL;

	if ( ! pFnTryExitCover )
		pFnTryExitCover = (UFunction*) UObject::GObjObjects()->Data[ 67129 ];

	USFXGameModeDefault_execTryExitCover_Parms TryExitCover_Parms;

	this->ProcessEvent ( pFnTryExitCover, &TryExitCover_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.TryFallOrClimb
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeDefault::TryFallOrClimb ( )
{
	static UFunction* pFnTryFallOrClimb = NULL;

	if ( ! pFnTryFallOrClimb )
		pFnTryFallOrClimb = (UFunction*) UObject::GObjObjects()->Data[ 67118 ];

	USFXGameModeDefault_execTryFallOrClimb_Parms TryFallOrClimb_Parms;

	this->ProcessEvent ( pFnTryFallOrClimb, &TryFallOrClimb_Parms, NULL );

	return TryFallOrClimb_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeDefault.TryEnterVehicle
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeDefault::TryEnterVehicle ( )
{
	static UFunction* pFnTryEnterVehicle = NULL;

	if ( ! pFnTryEnterVehicle )
		pFnTryEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 67119 ];

	USFXGameModeDefault_execTryEnterVehicle_Parms TryEnterVehicle_Parms;

	this->ProcessEvent ( pFnTryEnterVehicle, &TryEnterVehicle_Parms, NULL );

	return TryEnterVehicle_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeDefault.Used
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeDefault::Used ( )
{
	static UFunction* pFnUsed = NULL;

	if ( ! pFnUsed )
		pFnUsed = (UFunction*) UObject::GObjObjects()->Data[ 67117 ];

	USFXGameModeDefault_execUsed_Parms Used_Parms;

	this->ProcessEvent ( pFnUsed, &Used_Parms, NULL );

	return Used_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeDefault.TapAction
// [0x00020203] ( FUNC_Final | FUNC_Exec )
// Parameters infos:

void USFXGameModeDefault::TapAction ( )
{
	static UFunction* pFnTapAction = NULL;

	if ( ! pFnTapAction )
		pFnTapAction = (UFunction*) UObject::GObjObjects()->Data[ 67116 ];

	USFXGameModeDefault_execTapAction_Parms TapAction_Parms;

	this->ProcessEvent ( pFnTapAction, &TapAction_Parms, NULL );
};

// Function SFXGame.SFXGameModeDefault.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeDefault::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67107 ];

	USFXGameModeDefault_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeDefault.Initialize
// [0x00020002] 
// Parameters infos:

void USFXGameModeDefault::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 67105 ];

	USFXGameModeDefault_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.SwitchToBackupWeapon
// [0x00020002] 
// Parameters infos:

void ASFXPawn_Player::SwitchToBackupWeapon ( )
{
	static UFunction* pFnSwitchToBackupWeapon = NULL;

	if ( ! pFnSwitchToBackupWeapon )
		pFnSwitchToBackupWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67674 ];

	ASFXPawn_Player_execSwitchToBackupWeapon_Parms SwitchToBackupWeapon_Parms;

	this->ProcessEvent ( pFnSwitchToBackupWeapon, &SwitchToBackupWeapon_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.DrawPrimaryWeapon
// [0x00020002] 
// Parameters infos:

void ASFXPawn_Player::DrawPrimaryWeapon ( )
{
	static UFunction* pFnDrawPrimaryWeapon = NULL;

	if ( ! pFnDrawPrimaryWeapon )
		pFnDrawPrimaryWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67669 ];

	ASFXPawn_Player_execDrawPrimaryWeapon_Parms DrawPrimaryWeapon_Parms;

	this->ProcessEvent ( pFnDrawPrimaryWeapon, &DrawPrimaryWeapon_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.Internal_UpdatePrimaryAndSecondaryWeapons
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FName                   NewWeaponName                  ( CPF_Parm )

void ASFXPawn_Player::Internal_UpdatePrimaryAndSecondaryWeapons ( struct FName NewWeaponName )
{
	static UFunction* pFnInternal_UpdatePrimaryAndSecondaryWeapons = NULL;

	if ( ! pFnInternal_UpdatePrimaryAndSecondaryWeapons )
		pFnInternal_UpdatePrimaryAndSecondaryWeapons = (UFunction*) UObject::GObjObjects()->Data[ 67666 ];

	ASFXPawn_Player_execInternal_UpdatePrimaryAndSecondaryWeapons_Parms Internal_UpdatePrimaryAndSecondaryWeapons_Parms;
	memcpy ( &Internal_UpdatePrimaryAndSecondaryWeapons_Parms.NewWeaponName, &NewWeaponName, 0x8 );

	this->ProcessEvent ( pFnInternal_UpdatePrimaryAndSecondaryWeapons, &Internal_UpdatePrimaryAndSecondaryWeapons_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.UpdatePrimaryAndSecondaryWeapons
// [0x00020002] 
// Parameters infos:

void ASFXPawn_Player::UpdatePrimaryAndSecondaryWeapons ( )
{
	static UFunction* pFnUpdatePrimaryAndSecondaryWeapons = NULL;

	if ( ! pFnUpdatePrimaryAndSecondaryWeapons )
		pFnUpdatePrimaryAndSecondaryWeapons = (UFunction*) UObject::GObjObjects()->Data[ 67664 ];

	ASFXPawn_Player_execUpdatePrimaryAndSecondaryWeapons_Parms UpdatePrimaryAndSecondaryWeapons_Parms;

	this->ProcessEvent ( pFnUpdatePrimaryAndSecondaryWeapons, &UpdatePrimaryAndSecondaryWeapons_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.OnWeaponFired
// [0x00020002] 
// Parameters infos:
// class ABioWeaponRanged*        InWeapon                       ( CPF_Parm )

void ASFXPawn_Player::OnWeaponFired ( class ABioWeaponRanged* InWeapon )
{
	static UFunction* pFnOnWeaponFired = NULL;

	if ( ! pFnOnWeaponFired )
		pFnOnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 67657 ];

	ASFXPawn_Player_execOnWeaponFired_Parms OnWeaponFired_Parms;
	OnWeaponFired_Parms.InWeapon = InWeapon;

	this->ProcessEvent ( pFnOnWeaponFired, &OnWeaponFired_Parms, NULL );
};

// Function SFXGame.SFXPawn_Player.PlayerAcquiredCover
// [0x00020002] 
// Parameters infos:

void ASFXPawn_Player::PlayerAcquiredCover ( )
{
	static UFunction* pFnPlayerAcquiredCover = NULL;

	if ( ! pFnPlayerAcquiredCover )
		pFnPlayerAcquiredCover = (UFunction*) UObject::GObjObjects()->Data[ 67654 ];

	ASFXPawn_Player_execPlayerAcquiredCover_Parms PlayerAcquiredCover_Parms;

	this->ProcessEvent ( pFnPlayerAcquiredCover, &PlayerAcquiredCover_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PartySelection.GetHenchmenStats
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )
// int                            nStat1                         ( CPF_Parm | CPF_OutParm )
// int                            nStat2                         ( CPF_Parm | CPF_OutParm )
// int                            nStat3                         ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_PartySelection::GetHenchmenStats ( int nIndex, int* nStat1, int* nStat2, int* nStat3 )
{
	static UFunction* pFnGetHenchmenStats = NULL;

	if ( ! pFnGetHenchmenStats )
		pFnGetHenchmenStats = (UFunction*) UObject::GObjObjects()->Data[ 62899 ];

	UBioSFHandler_PartySelection_execGetHenchmenStats_Parms GetHenchmenStats_Parms;
	GetHenchmenStats_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnGetHenchmenStats, &GetHenchmenStats_Parms, NULL );

	if ( nStat1 )
		*nStat1 = GetHenchmenStats_Parms.nStat1;

	if ( nStat2 )
		*nStat2 = GetHenchmenStats_Parms.nStat2;

	if ( nStat3 )
		*nStat3 = GetHenchmenStats_Parms.nStat3;
};

// Function SFXGame.BioSFHandler_PartySelection.GetStatsFromClass
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// int                            nClassID                       ( CPF_Parm )
// int                            nStat1                         ( CPF_Parm | CPF_OutParm )
// int                            nStat2                         ( CPF_Parm | CPF_OutParm )
// int                            nStat3                         ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_PartySelection::GetStatsFromClass ( int nClassID, int* nStat1, int* nStat2, int* nStat3 )
{
	static UFunction* pFnGetStatsFromClass = NULL;

	if ( ! pFnGetStatsFromClass )
		pFnGetStatsFromClass = (UFunction*) UObject::GObjObjects()->Data[ 62897 ];

	UBioSFHandler_PartySelection_execGetStatsFromClass_Parms GetStatsFromClass_Parms;
	GetStatsFromClass_Parms.nClassID = nClassID;

	this->ProcessEvent ( pFnGetStatsFromClass, &GetStatsFromClass_Parms, NULL );

	if ( nStat1 )
		*nStat1 = GetStatsFromClass_Parms.nStat1;

	if ( nStat2 )
		*nStat2 = GetStatsFromClass_Parms.nStat2;

	if ( nStat3 )
		*nStat3 = GetStatsFromClass_Parms.nStat3;
};

// Function SFXGame.BioSFHandler_PartySelection.GetHenchmenName
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            nIndex                         ( CPF_Parm )

struct FString UBioSFHandler_PartySelection::GetHenchmenName ( int nIndex )
{
	static UFunction* pFnGetHenchmenName = NULL;

	if ( ! pFnGetHenchmenName )
		pFnGetHenchmenName = (UFunction*) UObject::GObjObjects()->Data[ 62898 ];

	UBioSFHandler_PartySelection_execGetHenchmenName_Parms GetHenchmenName_Parms;
	GetHenchmenName_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnGetHenchmenName, &GetHenchmenName_Parms, NULL );

	return GetHenchmenName_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PartySelection.FinalizeParty
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_PartySelection::FinalizeParty ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnFinalizeParty = NULL;

	if ( ! pFnFinalizeParty )
		pFnFinalizeParty = (UFunction*) UObject::GObjObjects()->Data[ 62905 ];

	UBioSFHandler_PartySelection_execFinalizeParty_Parms FinalizeParty_Parms;
	FinalizeParty_Parms.bAPressed = bAPressed;
	FinalizeParty_Parms.nContext = nContext;
	FinalizeParty_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnFinalizeParty, &FinalizeParty_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PartySelection.ConfirmParty
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PartySelection::ConfirmParty ( )
{
	static UFunction* pFnConfirmParty = NULL;

	if ( ! pFnConfirmParty )
		pFnConfirmParty = (UFunction*) UObject::GObjObjects()->Data[ 62884 ];

	UBioSFHandler_PartySelection_execConfirmParty_Parms ConfirmParty_Parms;

	this->ProcessEvent ( pFnConfirmParty, &ConfirmParty_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PartySelection.DoInitialization
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_PartySelection::DoInitialization ( )
{
	static UFunction* pFnDoInitialization = NULL;

	if ( ! pFnDoInitialization )
		pFnDoInitialization = (UFunction*) UObject::GObjObjects()->Data[ 62881 ];

	UBioSFHandler_PartySelection_execDoInitialization_Parms DoInitialization_Parms;

	this->ProcessEvent ( pFnDoInitialization, &DoInitialization_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PartySelection.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PartySelection::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62877 ];

	UBioSFHandler_PartySelection_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSaveTriggerVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioSaveTriggerVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59053 ];

	ABioSaveTriggerVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioSaveTriggerVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioSaveTriggerVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59040 ];

	ABioSaveTriggerVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AddSquadToPerception.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AddSquadToPerception::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59122 ];

	UBioSeqAct_AddSquadToPerception_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AddToParty.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AddToParty::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59142 ];

	UBioSeqAct_AddToParty_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AddToParty.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AddToParty::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59130 ];

	UBioSeqAct_AddToParty_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AdjustStability.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AdjustStability::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59146 ];

	UBioSeqAct_AdjustStability_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AreaTransition.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_AreaTransition::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59181 ];

	UBioSeqAct_AreaTransition_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AttachCrustEffect.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AttachCrustEffect::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59193 ];

	UBioSeqAct_AttachCrustEffect_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AttachCrustEffect.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AttachCrustEffect::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59188 ];

	UBioSeqAct_AttachCrustEffect_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AttachVFX.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AttachVFX::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59216 ];

	UBioSeqAct_AttachVFX_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AttachVFX.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AttachVFX::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59208 ];

	UBioSeqAct_AttachVFX_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AttachVisualEffect.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AttachVisualEffect::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59228 ];

	UBioSeqAct_AttachVisualEffect_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AttachVisualEffect.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AttachVisualEffect::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59222 ];

	UBioSeqAct_AttachVisualEffect_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AutoSave.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_AutoSave::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 59235 ];

	UBioSeqAct_AutoSave_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AutoSave.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_AutoSave::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59232 ];

	UBioSeqAct_AutoSave_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_AwardAchievement.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_AwardAchievement::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59249 ];

	UBioSeqAct_AwardAchievement_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_AwardAchievement.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_AwardAchievement::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59242 ];

	UBioSeqAct_AwardAchievement_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_BioToggleCinematicMode.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_BioToggleCinematicMode::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59255 ];

	UBioSeqAct_BioToggleCinematicMode_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_BlackScreen.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_BlackScreen::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 59280 ];

	UBioSeqAct_BlackScreen_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_BlackScreen.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_BlackScreen::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59274 ];

	UBioSeqAct_BlackScreen_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_CancelTutorial.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_CancelTutorial::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59300 ];

	UBioSeqAct_CancelTutorial_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_CauseDamage.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_CauseDamage::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59310 ];

	UBioSeqAct_CauseDamage_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ChangeAI.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ChangeAI::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59329 ];

	UBioSeqAct_ChangeAI_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_CheckIfInVolume.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_CheckIfInVolume::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59359 ];

	UBioSeqAct_CheckIfInVolume_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_CheckIfInVolume.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_CheckIfInVolume::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59355 ];

	UBioSeqAct_CheckIfInVolume_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ClearAllActions.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ClearAllActions::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59363 ];

	UBioSeqAct_ClearAllActions_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ClearNewCharacterEffects.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ClearNewCharacterEffects::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59372 ];

	UBioSeqAct_ClearNewCharacterEffects_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ClearSavedMap.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ClearSavedMap::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59379 ];

	UBioSeqAct_ClearSavedMap_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ClearSomeActions_Queue.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ClearSomeActions_Queue::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59385 ];

	UBioSeqAct_ClearSomeActions_Queue_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ClearSomeActions_State.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_ClearSomeActions_State::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59393 ];

	UBioSeqAct_ClearSomeActions_State_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Cover_AddCoverFrom.Activated
// [0x00020000] 
// Parameters infos:

void UBioSeqAct_Cover_AddCoverFrom::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59420 ];

	UBioSeqAct_Cover_AddCoverFrom_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Cover_GetCoveringRank.Activated
// [0x00020000] 
// Parameters infos:

void UBioSeqAct_Cover_GetCoveringRank::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59426 ];

	UBioSeqAct_Cover_GetCoveringRank_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Cover_RemoveCoverFrom.Activated
// [0x00020000] 
// Parameters infos:

void UBioSeqAct_Cover_RemoveCoverFrom::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59432 ];

	UBioSeqAct_Cover_RemoveCoverFrom_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Cover_SetCoveringRank.Activated
// [0x00020000] 
// Parameters infos:

void UBioSeqAct_Cover_SetCoveringRank::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59437 ];

	UBioSeqAct_Cover_SetCoveringRank_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_Crouch.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_Crouch::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59443 ];

	UBioSeqAct_Crouch_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_CustomizeStageCameras.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_CustomizeStageCameras::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59450 ];

	UBioSeqAct_CustomizeStageCameras_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DoActionInRadius.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DoActionInRadius::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59483 ];

	UBioSeqAct_DoActionInRadius_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DoActionInVolume.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DoActionInVolume::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59494 ];

	UBioSeqAct_DoActionInVolume_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUIClear.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUIClear::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59502 ];

	UBioSeqAct_DUIClear_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUIIsActive.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUIIsActive::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59508 ];

	UBioSeqAct_DUIIsActive_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetBarFillDirection.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetBarFillDirection::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59514 ];

	UBioSeqAct_DUISetBarFillDirection_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetBarFillPercent.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetBarFillPercent::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59519 ];

	UBioSeqAct_DUISetBarFillPercent_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetBarMarkers.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetBarMarkers::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59524 ];

	UBioSeqAct_DUISetBarMarkers_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetCounterValue.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetCounterValue::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59530 ];

	UBioSeqAct_DUISetCounterValue_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetElementColor.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetElementColor::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59655 ];

	UBioSeqAct_DUISetElementColor_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetElementPulsing.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetElementPulsing::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59664 ];

	UBioSeqAct_DUISetElementPulsing_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetElementVisible.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetElementVisible::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59673 ];

	UBioSeqAct_DUISetElementVisible_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetLaserCircle.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetLaserCircle::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59679 ];

	UBioSeqAct_DUISetLaserCircle_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetLaserLayout.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetLaserLayout::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59683 ];

	UBioSeqAct_DUISetLaserLayout_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetMiraHanoiLayout.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetMiraHanoiLayout::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59687 ];

	UBioSeqAct_DUISetMiraHanoiLayout_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetQuasarLayout.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetQuasarLayout::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59691 ];

	UBioSeqAct_DUISetQuasarLayout_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetTextStringRef.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetTextStringRef::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59695 ];

	UBioSeqAct_DUISetTextStringRef_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_DUISetToxinCureLayout.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_DUISetToxinCureLayout::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59700 ];

	UBioSeqAct_DUISetToxinCureLayout_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_EndGame.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_EndGame::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59716 ];

	UBioSeqAct_EndGame_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_FactionRelationShip.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_FactionRelationShip::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59766 ];

	UBioSeqAct_FactionRelationShip_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FactionRelationShip.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_FactionRelationShip::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59762 ];

	UBioSeqAct_FactionRelationShip_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_FactionRelationShip.GetSquadFrom
// [0x00020002] 
// Parameters infos:
// class ABioBaseSquad*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 oInObj                         ( CPF_Parm )

class ABioBaseSquad* UBioSeqAct_FactionRelationShip::GetSquadFrom ( class UObject* oInObj )
{
	static UFunction* pFnGetSquadFrom = NULL;

	if ( ! pFnGetSquadFrom )
		pFnGetSquadFrom = (UFunction*) UObject::GObjObjects()->Data[ 59757 ];

	UBioSeqAct_FactionRelationShip_execGetSquadFrom_Parms GetSquadFrom_Parms;
	GetSquadFrom_Parms.oInObj = oInObj;

	this->ProcessEvent ( pFnGetSquadFrom, &GetSquadFrom_Parms, NULL );

	return GetSquadFrom_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_FindCover.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_FindCover::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59772 ];

	UBioSeqAct_FindCover_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ForceResourceLoad.Activated
// [0x00020000] 
// Parameters infos:

void UBioSeqAct_ForceResourceLoad::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59811 ];

	UBioSeqAct_ForceResourceLoad_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetConnectedObjects.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetConnectedObjects::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59816 ];

	UBioSeqAct_GetConnectedObjects_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetEquippedWeapon.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetEquippedWeapon::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59823 ];

	UBioSeqAct_GetEquippedWeapon_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetSquad.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetSquad::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59863 ];

	UBioSeqAct_GetSquad_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetTalentRank.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetTalentRank::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59890 ];

	UBioSeqAct_GetTalentRank_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GetTutorialViewed.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GetTutorialViewed::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59898 ];

	UBioSeqAct_GetTutorialViewed_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GrantBonusTalent.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_GrantBonusTalent::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59915 ];

	UBioSeqAct_GrantBonusTalent_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GrantGenericXP.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_GrantGenericXP::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59921 ];

	UBioSeqAct_GrantGenericXP_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_GrantScaledXP.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_GrantScaledXP::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59926 ];

	UBioSeqAct_GrantScaledXP_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_HUDDisplayState.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_HUDDisplayState::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59938 ];

	UBioSeqAct_HUDDisplayState_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_HUDDisplayState.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_HUDDisplayState::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59935 ];

	UBioSeqAct_HUDDisplayState_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_IncreaseTalentMaxRank.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_IncreaseTalentMaxRank::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 59950 ];

	UBioSeqAct_IncreaseTalentMaxRank_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_IncreaseTalentMaxRank.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_IncreaseTalentMaxRank::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59944 ];

	UBioSeqAct_IncreaseTalentMaxRank_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_InterruptAmbientConversation.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_InterruptAmbientConversation::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59958 ];

	UBioSeqAct_InterruptAmbientConversation_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_IsActiveConversation.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_IsActiveConversation::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59967 ];

	UBioSeqAct_IsActiveConversation_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_IsVehicle.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_IsVehicle::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59972 ];

	UBioSeqAct_IsVehicle_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_LootHenchman.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_LootHenchman::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 59982 ];

	UBioSeqAct_LootHenchman_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_MiniGame.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_MiniGame::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60000 ];

	UBioSeqAct_MiniGame_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_MovieXMV.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_MovieXMV::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60033 ];

	UBioSeqAct_MovieXMV_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_NearClipPlane.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_NearClipPlane::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60044 ];

	UBioSeqAct_NearClipPlane_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_RestoreAI.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_RestoreAI::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60137 ];

	UBioSeqAct_RestoreAI_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ResumeWalking.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ResumeWalking::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60142 ];

	UBioSeqAct_ResumeWalking_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ResurrectHenchman.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ResurrectHenchman::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60146 ];

	UBioSeqAct_ResurrectHenchman_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SarenUsePower.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SarenUsePower::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60156 ];

	UBioSeqAct_SarenUsePower_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SaveCharacter.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SaveCharacter::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60165 ];

	UBioSeqAct_SaveCharacter_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetActionState.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetActionState::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60185 ];

	UBioSeqAct_SetActionState_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetActive.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetActive::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60194 ];

	UBioSeqAct_SetActive_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetBase.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetBase::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60206 ];

	UBioSeqAct_SetBase_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetBusyState.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetBusyState::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60216 ];

	UBioSeqAct_SetBusyState_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetCanWalkOffLedges.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetCanWalkOffLedges::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60225 ];

	UBioSeqAct_SetCanWalkOffLedges_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetClassification.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetClassification::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60230 ];

	UBioSeqAct_SetClassification_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetExploreCameraRotation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SetExploreCameraRotation::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60250 ];

	UBioSeqAct_SetExploreCameraRotation_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SetExploreCameraRotation.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetExploreCameraRotation::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60246 ];

	UBioSeqAct_SetExploreCameraRotation_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetExploreCameraRotation.IsCameraExploreMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          pCameraMode                    ( CPF_Parm )

bool UBioSeqAct_SetExploreCameraRotation::eventIsCameraExploreMode ( class USFXCameraMode* pCameraMode )
{
	static UFunction* pFnIsCameraExploreMode = NULL;

	if ( ! pFnIsCameraExploreMode )
		pFnIsCameraExploreMode = (UFunction*) UObject::GObjObjects()->Data[ 60242 ];

	UBioSeqAct_SetExploreCameraRotation_eventIsCameraExploreMode_Parms IsCameraExploreMode_Parms;
	IsCameraExploreMode_Parms.pCameraMode = pCameraMode;

	this->ProcessEvent ( pFnIsCameraExploreMode, &IsCameraExploreMode_Parms, NULL );

	return IsCameraExploreMode_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode_Explore.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Explore::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66482 ];

	USFXCameraMode_Explore_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetInputTrap.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetInputTrap::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60259 ];

	UBioSeqAct_SetInputTrap_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetMaterialParameter.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetMaterialParameter::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60278 ];

	UBioSeqAct_SetMaterialParameter_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetMaterialParameter.Set
// [0x00020000] 
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// struct FName                   nmMaterialParameter            ( CPF_Const | CPF_Parm )

void UBioSeqAct_SetMaterialParameter::Set ( class ABioPawn* pPawn, struct FName nmMaterialParameter )
{
	static UFunction* pFnSet = NULL;

	if ( ! pFnSet )
		pFnSet = (UFunction*) UObject::GObjObjects()->Data[ 60275 ];

	UBioSeqAct_SetMaterialParameter_execSet_Parms Set_Parms;
	Set_Parms.pPawn = pPawn;
	memcpy ( &Set_Parms.nmMaterialParameter, &nmMaterialParameter, 0x8 );

	this->ProcessEvent ( pFnSet, &Set_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetMaterialParameterColor.Set
// [0x00020002] 
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// struct FName                   nmMaterialParameter            ( CPF_Const | CPF_Parm )

void UBioSeqAct_SetMaterialParameterColor::Set ( class ABioPawn* pPawn, struct FName nmMaterialParameter )
{
	static UFunction* pFnSet = NULL;

	if ( ! pFnSet )
		pFnSet = (UFunction*) UObject::GObjObjects()->Data[ 60284 ];

	UBioSeqAct_SetMaterialParameterColor_execSet_Parms Set_Parms;
	Set_Parms.pPawn = pPawn;
	memcpy ( &Set_Parms.nmMaterialParameter, &nmMaterialParameter, 0x8 );

	this->ProcessEvent ( pFnSet, &Set_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetMaterialParameterScalar.Set
// [0x00020002] 
// Parameters infos:
// class ABioPawn*                pPawn                          ( CPF_Parm )
// struct FName                   nmMaterialParameter            ( CPF_Const | CPF_Parm )

void UBioSeqAct_SetMaterialParameterScalar::Set ( class ABioPawn* pPawn, struct FName nmMaterialParameter )
{
	static UFunction* pFnSet = NULL;

	if ( ! pFnSet )
		pFnSet = (UFunction*) UObject::GObjObjects()->Data[ 60290 ];

	UBioSeqAct_SetMaterialParameterScalar_execSet_Parms Set_Parms;
	Set_Parms.pPawn = pPawn;
	memcpy ( &Set_Parms.nmMaterialParameter, &nmMaterialParameter, 0x8 );

	this->ProcessEvent ( pFnSet, &Set_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetOverrideTipText.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetOverrideTipText::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60300 ];

	UBioSeqAct_SetOverrideTipText_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetPlayerControlling.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetPlayerControlling::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60306 ];

	UBioSeqAct_SetPlayerControlling_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetRadarDisplay.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetRadarDisplay::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60315 ];

	UBioSeqAct_SetRadarDisplay_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetSquadFaction.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetSquadFaction::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60326 ];

	UBioSeqAct_SetSquadFaction_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetStability.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetStability::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60334 ];

	UBioSeqAct_SetStability_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SetTutorialViewed.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SetTutorialViewed::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60375 ];

	UBioSeqAct_SetTutorialViewed_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShieldGetAttributes.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShieldGetAttributes::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60386 ];

	UBioSeqAct_ShieldGetAttributes_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSFHandler_IntroText.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_IntroText::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61829 ];

	UBioSFHandler_IntroText_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSeqAct_ShowInventory.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowInventory::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60415 ];

	UBioSeqAct_ShowInventory_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowInventory.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowInventory::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60411 ];

	UBioSeqAct_ShowInventory_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowLatentTutorial.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowLatentTutorial::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60425 ];

	UBioSeqAct_ShowLatentTutorial_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowLatentTutorial.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowLatentTutorial::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60420 ];

	UBioSeqAct_ShowLatentTutorial_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowMessage.MessageBoxUpdate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )
// class UBioSFHandler_MessageBox* oMsgBox                        ( CPF_Parm )

void UBioSeqAct_ShowMessage::MessageBoxUpdate ( float fDeltaT, class UBioSFHandler_MessageBox* oMsgBox )
{
	static UFunction* pFnMessageBoxUpdate = NULL;

	if ( ! pFnMessageBoxUpdate )
		pFnMessageBoxUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60509 ];

	UBioSeqAct_ShowMessage_execMessageBoxUpdate_Parms MessageBoxUpdate_Parms;
	MessageBoxUpdate_Parms.fDeltaT = fDeltaT;
	MessageBoxUpdate_Parms.oMsgBox = oMsgBox;

	this->ProcessEvent ( pFnMessageBoxUpdate, &MessageBoxUpdate_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowMessage.MessageInputPressed
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSeqAct_ShowMessage::MessageInputPressed ( unsigned long bAPressed, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnMessageInputPressed = NULL;

	if ( ! pFnMessageInputPressed )
		pFnMessageInputPressed = (UFunction*) UObject::GObjObjects()->Data[ 60505 ];

	UBioSeqAct_ShowMessage_execMessageInputPressed_Parms MessageInputPressed_Parms;
	MessageInputPressed_Parms.bAPressed = bAPressed;
	MessageInputPressed_Parms.nContext = nContext;
	MessageInputPressed_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnMessageInputPressed, &MessageInputPressed_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowMessage.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowMessage::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60501 ];

	UBioSeqAct_ShowMessage_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowMessage.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowMessage::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60488 ];

	UBioSeqAct_ShowMessage_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ShowTutorial.UpdateOp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaT                        ( CPF_Parm )

bool UBioSeqAct_ShowTutorial::UpdateOp ( float fDeltaT )
{
	static UFunction* pFnUpdateOp = NULL;

	if ( ! pFnUpdateOp )
		pFnUpdateOp = (UFunction*) UObject::GObjObjects()->Data[ 60552 ];

	UBioSeqAct_ShowTutorial_execUpdateOp_Parms UpdateOp_Parms;
	UpdateOp_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdateOp, &UpdateOp_Parms, NULL );

	return UpdateOp_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_ShowTutorial.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ShowTutorial::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60545 ];

	UBioSeqAct_ShowTutorial_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SquadStopHoldingPosition.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSeqAct_SquadStopHoldingPosition::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 60616 ];

	UBioSeqAct_SquadStopHoldingPosition_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.BioSeqAct_SquadStopHoldingPosition.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_SquadStopHoldingPosition::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60611 ];

	UBioSeqAct_SquadStopHoldingPosition_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_SwitchWeighted.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_SwitchWeighted::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60634 ];

	UBioSeqAct_SwitchWeighted_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_TempLookAt.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_TempLookAt::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60661 ];

	UBioSeqAct_TempLookAt_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ToggleCombat.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ToggleCombat::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60690 ];

	UBioSeqAct_ToggleCombat_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_ToggleSave.Activated
// [0x00020002] 
// Parameters infos:

void UBioSeqAct_ToggleSave::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60700 ];

	UBioSeqAct_ToggleSave_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSeqAct_UpdateTacticianAchievement.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSeqAct_UpdateTacticianAchievement::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 60716 ];

	UBioSeqAct_UpdateTacticianAchievement_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Achievement::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 61042 ];

	UBioSFHandler_Achievement_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Achievement::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61040 ];

	UBioSFHandler_Achievement_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.SetPlatformLayout
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Achievement::SetPlatformLayout ( )
{
	static UFunction* pFnSetPlatformLayout = NULL;

	if ( ! pFnSetPlatformLayout )
		pFnSetPlatformLayout = (UFunction*) UObject::GObjObjects()->Data[ 61027 ];

	UBioSFHandler_Achievement_execSetPlatformLayout_Parms SetPlatformLayout_Parms;

	this->ProcessEvent ( pFnSetPlatformLayout, &SetPlatformLayout_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.PopulateAchievementItemListEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nDisplayIndex                  ( CPF_Parm )

void UBioSFHandler_Achievement::PopulateAchievementItemListEntry ( int nDisplayIndex )
{
	static UFunction* pFnPopulateAchievementItemListEntry = NULL;

	if ( ! pFnPopulateAchievementItemListEntry )
		pFnPopulateAchievementItemListEntry = (UFunction*) UObject::GObjObjects()->Data[ 61023 ];

	UBioSFHandler_Achievement_execPopulateAchievementItemListEntry_Parms PopulateAchievementItemListEntry_Parms;
	PopulateAchievementItemListEntry_Parms.nDisplayIndex = nDisplayIndex;

	this->ProcessEvent ( pFnPopulateAchievementItemListEntry, &PopulateAchievementItemListEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.PopulateAchievementItemList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Achievement::PopulateAchievementItemList ( )
{
	static UFunction* pFnPopulateAchievementItemList = NULL;

	if ( ! pFnPopulateAchievementItemList )
		pFnPopulateAchievementItemList = (UFunction*) UObject::GObjObjects()->Data[ 61026 ];

	UBioSFHandler_Achievement_execPopulateAchievementItemList_Parms PopulateAchievementItemList_Parms;

	this->ProcessEvent ( pFnPopulateAchievementItemList, &PopulateAchievementItemList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.SetGlobalVars
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Achievement::SetGlobalVars ( )
{
	static UFunction* pFnSetGlobalVars = NULL;

	if ( ! pFnSetGlobalVars )
		pFnSetGlobalVars = (UFunction*) UObject::GObjObjects()->Data[ 61025 ];

	UBioSFHandler_Achievement_execSetGlobalVars_Parms SetGlobalVars_Parms;

	this->ProcessEvent ( pFnSetGlobalVars, &SetGlobalVars_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Achievement.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Achievement::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61018 ];

	UBioSFHandler_Achievement_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_BlackScreen.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_BlackScreen::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61089 ];

	UBioSFHandler_BlackScreen_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BlackScreen.Hide
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWithFade                      ( CPF_Parm )

void UBioSFHandler_BlackScreen::Hide ( unsigned long bWithFade )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 61084 ];

	UBioSFHandler_BlackScreen_execHide_Parms Hide_Parms;
	Hide_Parms.bWithFade = bWithFade;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BlackScreen.Show
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWithFade                      ( CPF_Parm )

void UBioSFHandler_BlackScreen::Show ( unsigned long bWithFade )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 61079 ];

	UBioSFHandler_BlackScreen_execShow_Parms Show_Parms;
	Show_Parms.bWithFade = bWithFade;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function SFXGame.BioSFHandler_BlackScreen.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_BlackScreen::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61072 ];

	UBioSFHandler_BlackScreen_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Inventory.GetSquadMemberNames
// [0x00420002] 
// Parameters infos:
// int                            srCurMember                    ( CPF_Parm | CPF_OutParm )
// int                            srPrevMember                   ( CPF_Parm | CPF_OutParm )
// int                            srNextMember                   ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_Inventory::GetSquadMemberNames ( int* srCurMember, int* srPrevMember, int* srNextMember )
{
	static UFunction* pFnGetSquadMemberNames = NULL;

	if ( ! pFnGetSquadMemberNames )
		pFnGetSquadMemberNames = (UFunction*) UObject::GObjObjects()->Data[ 62068 ];

	UBioSFHandler_Inventory_execGetSquadMemberNames_Parms GetSquadMemberNames_Parms;

	this->ProcessEvent ( pFnGetSquadMemberNames, &GetSquadMemberNames_Parms, NULL );

	if ( srCurMember )
		*srCurMember = GetSquadMemberNames_Parms.srCurMember;

	if ( srPrevMember )
		*srPrevMember = GetSquadMemberNames_Parms.srPrevMember;

	if ( srNextMember )
		*srNextMember = GetSquadMemberNames_Parms.srNextMember;
};

// Function SFXGame.BioSFHandler_Inventory.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Inventory::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 62065 ];

	UBioSFHandler_Inventory_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Inventory::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 62064 ];

	UBioSFHandler_Inventory_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.NextSort
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Inventory::NextSort ( )
{
	static UFunction* pFnNextSort = NULL;

	if ( ! pFnNextSort )
		pFnNextSort = (UFunction*) UObject::GObjObjects()->Data[ 62063 ];

	UBioSFHandler_Inventory_execNextSort_Parms NextSort_Parms;

	this->ProcessEvent ( pFnNextSort, &NextSort_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.MarkItemAsJunk
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  val                            ( CPF_Parm )

void UBioSFHandler_Inventory::MarkItemAsJunk ( int Index, unsigned long val )
{
	static UFunction* pFnMarkItemAsJunk = NULL;

	if ( ! pFnMarkItemAsJunk )
		pFnMarkItemAsJunk = (UFunction*) UObject::GObjObjects()->Data[ 62060 ];

	UBioSFHandler_Inventory_execMarkItemAsJunk_Parms MarkItemAsJunk_Parms;
	MarkItemAsJunk_Parms.Index = Index;
	MarkItemAsJunk_Parms.val = val;

	this->ProcessEvent ( pFnMarkItemAsJunk, &MarkItemAsJunk_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.Update3DModel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::Update3DModel ( )
{
	static UFunction* pFnUpdate3DModel = NULL;

	if ( ! pFnUpdate3DModel )
		pFnUpdate3DModel = (UFunction*) UObject::GObjObjects()->Data[ 61919 ];

	UBioSFHandler_Inventory_execUpdate3DModel_Parms Update3DModel_Parms;

	this->ProcessEvent ( pFnUpdate3DModel, &Update3DModel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.Update3DCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::Update3DCharacter ( )
{
	static UFunction* pFnUpdate3DCharacter = NULL;

	if ( ! pFnUpdate3DCharacter )
		pFnUpdate3DCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61900 ];

	UBioSFHandler_Inventory_execUpdate3DCharacter_Parms Update3DCharacter_Parms;

	this->ProcessEvent ( pFnUpdate3DCharacter, &Update3DCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.UpdateCharDetails
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::UpdateCharDetails ( )
{
	static UFunction* pFnUpdateCharDetails = NULL;

	if ( ! pFnUpdateCharDetails )
		pFnUpdateCharDetails = (UFunction*) UObject::GObjObjects()->Data[ 61901 ];

	UBioSFHandler_Inventory_execUpdateCharDetails_Parms UpdateCharDetails_Parms;

	this->ProcessEvent ( pFnUpdateCharDetails, &UpdateCharDetails_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.ChangeTargetCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nTargetMember                  ( CPF_Parm )

bool UBioSFHandler_Inventory::ChangeTargetCharacter ( int nTargetMember )
{
	static UFunction* pFnChangeTargetCharacter = NULL;

	if ( ! pFnChangeTargetCharacter )
		pFnChangeTargetCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61897 ];

	UBioSFHandler_Inventory_execChangeTargetCharacter_Parms ChangeTargetCharacter_Parms;
	ChangeTargetCharacter_Parms.nTargetMember = nTargetMember;

	this->ProcessEvent ( pFnChangeTargetCharacter, &ChangeTargetCharacter_Parms, NULL );

	return ChangeTargetCharacter_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Inventory.SalvageItemProcessDoubleCheck
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConfirmedSalvageAttempt       ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_Inventory::SalvageItemProcessDoubleCheck ( unsigned long bConfirmedSalvageAttempt, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnSalvageItemProcessDoubleCheck = NULL;

	if ( ! pFnSalvageItemProcessDoubleCheck )
		pFnSalvageItemProcessDoubleCheck = (UFunction*) UObject::GObjObjects()->Data[ 62028 ];

	UBioSFHandler_Inventory_execSalvageItemProcessDoubleCheck_Parms SalvageItemProcessDoubleCheck_Parms;
	SalvageItemProcessDoubleCheck_Parms.bConfirmedSalvageAttempt = bConfirmedSalvageAttempt;
	SalvageItemProcessDoubleCheck_Parms.nContext = nContext;
	SalvageItemProcessDoubleCheck_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnSalvageItemProcessDoubleCheck, &SalvageItemProcessDoubleCheck_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.EquipItemProcessDoubleCheck
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAcceptedXferOption            ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_Inventory::EquipItemProcessDoubleCheck ( unsigned long bAcceptedXferOption, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnEquipItemProcessDoubleCheck = NULL;

	if ( ! pFnEquipItemProcessDoubleCheck )
		pFnEquipItemProcessDoubleCheck = (UFunction*) UObject::GObjObjects()->Data[ 62021 ];

	UBioSFHandler_Inventory_execEquipItemProcessDoubleCheck_Parms EquipItemProcessDoubleCheck_Parms;
	EquipItemProcessDoubleCheck_Parms.bAcceptedXferOption = bAcceptedXferOption;
	EquipItemProcessDoubleCheck_Parms.nContext = nContext;
	EquipItemProcessDoubleCheck_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnEquipItemProcessDoubleCheck, &EquipItemProcessDoubleCheck_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.EquipSelectedItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nItemIndex                     ( CPF_Parm )
// int                            nXferXMods                     ( CPF_Parm )

void UBioSFHandler_Inventory::EquipSelectedItem ( int nItemIndex, int nXferXMods )
{
	static UFunction* pFnEquipSelectedItem = NULL;

	if ( ! pFnEquipSelectedItem )
		pFnEquipSelectedItem = (UFunction*) UObject::GObjObjects()->Data[ 61888 ];

	UBioSFHandler_Inventory_execEquipSelectedItem_Parms EquipSelectedItem_Parms;
	EquipSelectedItem_Parms.nItemIndex = nItemIndex;
	EquipSelectedItem_Parms.nXferXMods = nXferXMods;

	this->ProcessEvent ( pFnEquipSelectedItem, &EquipSelectedItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.ProcessModifierList
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// struct FBioInventoryGuiInterfaceItemStats stStatList                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMethod                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            nModifierCount                 ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_Inventory::ProcessModifierList ( struct FBioInventoryGuiInterfaceItemStats stStatList, struct FString sMethod, int* nModifierCount )
{
	static UFunction* pFnProcessModifierList = NULL;

	if ( ! pFnProcessModifierList )
		pFnProcessModifierList = (UFunction*) UObject::GObjObjects()->Data[ 62000 ];

	UBioSFHandler_Inventory_execProcessModifierList_Parms ProcessModifierList_Parms;
	memcpy ( &ProcessModifierList_Parms.stStatList, &stStatList, 0x34 );
	memcpy ( &ProcessModifierList_Parms.sMethod, &sMethod, 0x10 );

	this->ProcessEvent ( pFnProcessModifierList, &ProcessModifierList_Parms, NULL );

	if ( nModifierCount )
		*nModifierCount = ProcessModifierList_Parms.nModifierCount;
};

// Function SFXGame.BioSFHandler_Inventory.PopulateInvItems
// [0x00020002] 
// Parameters infos:
// struct TArray<struct FASParams> lstParams                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_Inventory::PopulateInvItems ( struct TArray<struct FASParams> lstParams )
{
	static UFunction* pFnPopulateInvItems = NULL;

	if ( ! pFnPopulateInvItems )
		pFnPopulateInvItems = (UFunction*) UObject::GObjObjects()->Data[ 61997 ];

	UBioSFHandler_Inventory_execPopulateInvItems_Parms PopulateInvItems_Parms;
	memcpy ( &PopulateInvItems_Parms.lstParams, &lstParams, 0x10 );

	this->ProcessEvent ( pFnPopulateInvItems, &PopulateInvItems_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.PopulateItemListEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nListIndex                     ( CPF_Parm )

void UBioSFHandler_Inventory::PopulateItemListEntry ( int nListIndex )
{
	static UFunction* pFnPopulateItemListEntry = NULL;

	if ( ! pFnPopulateItemListEntry )
		pFnPopulateItemListEntry = (UFunction*) UObject::GObjObjects()->Data[ 61973 ];

	UBioSFHandler_Inventory_execPopulateItemListEntry_Parms PopulateItemListEntry_Parms;
	PopulateItemListEntry_Parms.nListIndex = nListIndex;

	this->ProcessEvent ( pFnPopulateItemListEntry, &PopulateItemListEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.GetProperSortString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            SortType                       ( CPF_Parm )

struct FString UBioSFHandler_Inventory::GetProperSortString ( int SortType )
{
	static UFunction* pFnGetProperSortString = NULL;

	if ( ! pFnGetProperSortString )
		pFnGetProperSortString = (UFunction*) UObject::GObjObjects()->Data[ 61974 ];

	UBioSFHandler_Inventory_execGetProperSortString_Parms GetProperSortString_Parms;
	GetProperSortString_Parms.SortType = SortType;

	this->ProcessEvent ( pFnGetProperSortString, &GetProperSortString_Parms, NULL );

	return GetProperSortString_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Inventory.PopulateItemList
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  needsRefresh                   ( CPF_Parm )

void UBioSFHandler_Inventory::PopulateItemList ( unsigned long needsRefresh )
{
	static UFunction* pFnPopulateItemList = NULL;

	if ( ! pFnPopulateItemList )
		pFnPopulateItemList = (UFunction*) UObject::GObjObjects()->Data[ 61947 ];

	UBioSFHandler_Inventory_execPopulateItemList_Parms PopulateItemList_Parms;
	PopulateItemList_Parms.needsRefresh = needsRefresh;

	this->ProcessEvent ( pFnPopulateItemList, &PopulateItemList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.PopulateEquippedItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::PopulateEquippedItem ( )
{
	static UFunction* pFnPopulateEquippedItem = NULL;

	if ( ! pFnPopulateEquippedItem )
		pFnPopulateEquippedItem = (UFunction*) UObject::GObjObjects()->Data[ 61896 ];

	UBioSFHandler_Inventory_execPopulateEquippedItem_Parms PopulateEquippedItem_Parms;

	this->ProcessEvent ( pFnPopulateEquippedItem, &PopulateEquippedItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.PopulateForCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  NeedRefresh                    ( CPF_Parm )

void UBioSFHandler_Inventory::PopulateForCharacter ( unsigned long NeedRefresh )
{
	static UFunction* pFnPopulateForCharacter = NULL;

	if ( ! pFnPopulateForCharacter )
		pFnPopulateForCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61884 ];

	UBioSFHandler_Inventory_execPopulateForCharacter_Parms PopulateForCharacter_Parms;
	PopulateForCharacter_Parms.NeedRefresh = NeedRefresh;

	this->ProcessEvent ( pFnPopulateForCharacter, &PopulateForCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.UpdateResources
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// int                            nRackupTime                    ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Inventory::UpdateResources ( int nRackupTime )
{
	static UFunction* pFnUpdateResources = NULL;

	if ( ! pFnUpdateResources )
		pFnUpdateResources = (UFunction*) UObject::GObjObjects()->Data[ 61920 ];

	UBioSFHandler_Inventory_execUpdateResources_Parms UpdateResources_Parms;
	UpdateResources_Parms.nRackupTime = nRackupTime;

	this->ProcessEvent ( pFnUpdateResources, &UpdateResources_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.UpdateInvSlotIcons
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDeferUpdateFilterIcons        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Inventory::UpdateInvSlotIcons ( unsigned long bDeferUpdateFilterIcons )
{
	static UFunction* pFnUpdateInvSlotIcons = NULL;

	if ( ! pFnUpdateInvSlotIcons )
		pFnUpdateInvSlotIcons = (UFunction*) UObject::GObjObjects()->Data[ 61935 ];

	UBioSFHandler_Inventory_execUpdateInvSlotIcons_Parms UpdateInvSlotIcons_Parms;
	UpdateInvSlotIcons_Parms.bDeferUpdateFilterIcons = bDeferUpdateFilterIcons;

	this->ProcessEvent ( pFnUpdateInvSlotIcons, &UpdateInvSlotIcons_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.ChangeSlotState
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eDisplaySlot                   ( CPF_Parm )
// unsigned long                  bUpdate3DModel                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDeferUpdateFilterIcons        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Inventory::ChangeSlotState ( unsigned char eDisplaySlot, unsigned long bUpdate3DModel, unsigned long bDeferUpdateFilterIcons )
{
	static UFunction* pFnChangeSlotState = NULL;

	if ( ! pFnChangeSlotState )
		pFnChangeSlotState = (UFunction*) UObject::GObjObjects()->Data[ 61882 ];

	UBioSFHandler_Inventory_execChangeSlotState_Parms ChangeSlotState_Parms;
	ChangeSlotState_Parms.eDisplaySlot = eDisplaySlot;
	ChangeSlotState_Parms.bUpdate3DModel = bUpdate3DModel;
	ChangeSlotState_Parms.bDeferUpdateFilterIcons = bDeferUpdateFilterIcons;

	this->ProcessEvent ( pFnChangeSlotState, &ChangeSlotState_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.CheckSkipSlot
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eSourceSlot                    ( CPF_Parm )
// int                            nSkipDirection                 ( CPF_OptionalParm | CPF_Parm )

unsigned char UBioSFHandler_Inventory::CheckSkipSlot ( unsigned char eSourceSlot, int nSkipDirection )
{
	static UFunction* pFnCheckSkipSlot = NULL;

	if ( ! pFnCheckSkipSlot )
		pFnCheckSkipSlot = (UFunction*) UObject::GObjObjects()->Data[ 61883 ];

	UBioSFHandler_Inventory_execCheckSkipSlot_Parms CheckSkipSlot_Parms;
	CheckSkipSlot_Parms.eSourceSlot = eSourceSlot;
	CheckSkipSlot_Parms.nSkipDirection = nSkipDirection;

	this->ProcessEvent ( pFnCheckSkipSlot, &CheckSkipSlot_Parms, NULL );

	return CheckSkipSlot_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Inventory.SetGlobalVars
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::SetGlobalVars ( )
{
	static UFunction* pFnSetGlobalVars = NULL;

	if ( ! pFnSetGlobalVars )
		pFnSetGlobalVars = (UFunction*) UObject::GObjObjects()->Data[ 61903 ];

	UBioSFHandler_Inventory_execSetGlobalVars_Parms SetGlobalVars_Parms;

	this->ProcessEvent ( pFnSetGlobalVars, &SetGlobalVars_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.FloatingReinit
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Inventory::FloatingReinit ( )
{
	static UFunction* pFnFloatingReinit = NULL;

	if ( ! pFnFloatingReinit )
		pFnFloatingReinit = (UFunction*) UObject::GObjObjects()->Data[ 61908 ];

	UBioSFHandler_Inventory_execFloatingReinit_Parms FloatingReinit_Parms;

	this->ProcessEvent ( pFnFloatingReinit, &FloatingReinit_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Inventory::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61914 ];

	UBioSFHandler_Inventory_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Inventory::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 61909 ];

	UBioSFHandler_Inventory_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Inventory.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Inventory::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61861 ];

	UBioSFHandler_Inventory_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Inventory.CheckForGarbageCollect
// [0x00020002] 
// Parameters infos:
// float                          Weight                         ( CPF_Parm )

void UBioSFHandler_Inventory::CheckForGarbageCollect ( float Weight )
{
	static UFunction* pFnCheckForGarbageCollect = NULL;

	if ( ! pFnCheckForGarbageCollect )
		pFnCheckForGarbageCollect = (UFunction*) UObject::GObjObjects()->Data[ 61858 ];

	UBioSFHandler_Inventory_execCheckForGarbageCollect_Parms CheckForGarbageCollect_Parms;
	CheckForGarbageCollect_Parms.Weight = Weight;

	this->ProcessEvent ( pFnCheckForGarbageCollect, &CheckForGarbageCollect_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.UnistallXModForCurrentSlot
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_XMods::UnistallXModForCurrentSlot ( )
{
	static UFunction* pFnUnistallXModForCurrentSlot = NULL;

	if ( ! pFnUnistallXModForCurrentSlot )
		pFnUnistallXModForCurrentSlot = (UFunction*) UObject::GObjObjects()->Data[ 64383 ];

	UBioSFHandler_XMods_execUnistallXModForCurrentSlot_Parms UnistallXModForCurrentSlot_Parms;

	this->ProcessEvent ( pFnUnistallXModForCurrentSlot, &UnistallXModForCurrentSlot_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.OnPanelRemoved
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UBioSFHandler_XMods::eventOnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 64382 ];

	UBioSFHandler_XMods_eventOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.SortModList
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_XMods::SortModList ( )
{
	static UFunction* pFnSortModList = NULL;

	if ( ! pFnSortModList )
		pFnSortModList = (UFunction*) UObject::GObjObjects()->Data[ 64380 ];

	UBioSFHandler_XMods_execSortModList_Parms SortModList_Parms;

	this->ProcessEvent ( pFnSortModList, &SortModList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.MarkModAsJunk
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  val                            ( CPF_Parm )

void UBioSFHandler_XMods::MarkModAsJunk ( int Index, unsigned long val )
{
	static UFunction* pFnMarkModAsJunk = NULL;

	if ( ! pFnMarkModAsJunk )
		pFnMarkModAsJunk = (UFunction*) UObject::GObjObjects()->Data[ 64377 ];

	UBioSFHandler_XMods_execMarkModAsJunk_Parms MarkModAsJunk_Parms;
	MarkModAsJunk_Parms.Index = Index;
	MarkModAsJunk_Parms.val = val;

	this->ProcessEvent ( pFnMarkModAsJunk, &MarkModAsJunk_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.ChangeTargetCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_XMods::ChangeTargetCharacter ( )
{
	static UFunction* pFnChangeTargetCharacter = NULL;

	if ( ! pFnChangeTargetCharacter )
		pFnChangeTargetCharacter = (UFunction*) UObject::GObjObjects()->Data[ 64283 ];

	UBioSFHandler_XMods_execChangeTargetCharacter_Parms ChangeTargetCharacter_Parms;

	this->ProcessEvent ( pFnChangeTargetCharacter, &ChangeTargetCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.UpdateResources
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_XMods::UpdateResources ( )
{
	static UFunction* pFnUpdateResources = NULL;

	if ( ! pFnUpdateResources )
		pFnUpdateResources = (UFunction*) UObject::GObjObjects()->Data[ 64371 ];

	UBioSFHandler_XMods_execUpdateResources_Parms UpdateResources_Parms;

	this->ProcessEvent ( pFnUpdateResources, &UpdateResources_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.SalvageXModProcessDoubleCheck
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConfirmedSalvageAttempt       ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )
// unsigned long                  bYPressed                      ( CPF_Parm )

void UBioSFHandler_XMods::SalvageXModProcessDoubleCheck ( unsigned long bConfirmedSalvageAttempt, int nContext, unsigned long bYPressed )
{
	static UFunction* pFnSalvageXModProcessDoubleCheck = NULL;

	if ( ! pFnSalvageXModProcessDoubleCheck )
		pFnSalvageXModProcessDoubleCheck = (UFunction*) UObject::GObjObjects()->Data[ 64361 ];

	UBioSFHandler_XMods_execSalvageXModProcessDoubleCheck_Parms SalvageXModProcessDoubleCheck_Parms;
	SalvageXModProcessDoubleCheck_Parms.bConfirmedSalvageAttempt = bConfirmedSalvageAttempt;
	SalvageXModProcessDoubleCheck_Parms.nContext = nContext;
	SalvageXModProcessDoubleCheck_Parms.bYPressed = bYPressed;

	this->ProcessEvent ( pFnSalvageXModProcessDoubleCheck, &SalvageXModProcessDoubleCheck_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.FuseItem
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_XMods::FuseItem ( )
{
	static UFunction* pFnFuseItem = NULL;

	if ( ! pFnFuseItem )
		pFnFuseItem = (UFunction*) UObject::GObjObjects()->Data[ 64360 ];

	UBioSFHandler_XMods_execFuseItem_Parms FuseItem_Parms;

	this->ProcessEvent ( pFnFuseItem, &FuseItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.EquipSelectedItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nItemIndex                     ( CPF_Parm )
// int                            nSlotIndex                     ( CPF_Parm )

void UBioSFHandler_XMods::EquipSelectedItem ( int nItemIndex, int nSlotIndex )
{
	static UFunction* pFnEquipSelectedItem = NULL;

	if ( ! pFnEquipSelectedItem )
		pFnEquipSelectedItem = (UFunction*) UObject::GObjObjects()->Data[ 64278 ];

	UBioSFHandler_XMods_execEquipSelectedItem_Parms EquipSelectedItem_Parms;
	EquipSelectedItem_Parms.nItemIndex = nItemIndex;
	EquipSelectedItem_Parms.nSlotIndex = nSlotIndex;

	this->ProcessEvent ( pFnEquipSelectedItem, &EquipSelectedItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateItemListEntry
// [0x00020002] 
// Parameters infos:
// int                            nListIndex                     ( CPF_Parm )

void UBioSFHandler_XMods::PopulateItemListEntry ( int nListIndex )
{
	static UFunction* pFnPopulateItemListEntry = NULL;

	if ( ! pFnPopulateItemListEntry )
		pFnPopulateItemListEntry = (UFunction*) UObject::GObjObjects()->Data[ 64345 ];

	UBioSFHandler_XMods_execPopulateItemListEntry_Parms PopulateItemListEntry_Parms;
	PopulateItemListEntry_Parms.nListIndex = nListIndex;

	this->ProcessEvent ( pFnPopulateItemListEntry, &PopulateItemListEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateInventoryXModItem
// [0x00020002] 
// Parameters infos:
// struct TArray<struct FASParams> lstParams                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_XMods::PopulateInventoryXModItem ( struct TArray<struct FASParams> lstParams )
{
	static UFunction* pFnPopulateInventoryXModItem = NULL;

	if ( ! pFnPopulateInventoryXModItem )
		pFnPopulateInventoryXModItem = (UFunction*) UObject::GObjObjects()->Data[ 64342 ];

	UBioSFHandler_XMods_execPopulateInventoryXModItem_Parms PopulateInventoryXModItem_Parms;
	memcpy ( &PopulateInventoryXModItem_Parms.lstParams, &lstParams, 0x10 );

	this->ProcessEvent ( pFnPopulateInventoryXModItem, &PopulateInventoryXModItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateEquippedSlotAsItemListEntry
// [0x00020002] 
// Parameters infos:
// int                            nXModIndex                     ( CPF_Parm )
// int                            nListIndex                     ( CPF_Parm )

void UBioSFHandler_XMods::PopulateEquippedSlotAsItemListEntry ( int nXModIndex, int nListIndex )
{
	static UFunction* pFnPopulateEquippedSlotAsItemListEntry = NULL;

	if ( ! pFnPopulateEquippedSlotAsItemListEntry )
		pFnPopulateEquippedSlotAsItemListEntry = (UFunction*) UObject::GObjObjects()->Data[ 64332 ];

	UBioSFHandler_XMods_execPopulateEquippedSlotAsItemListEntry_Parms PopulateEquippedSlotAsItemListEntry_Parms;
	PopulateEquippedSlotAsItemListEntry_Parms.nXModIndex = nXModIndex;
	PopulateEquippedSlotAsItemListEntry_Parms.nListIndex = nListIndex;

	this->ProcessEvent ( pFnPopulateEquippedSlotAsItemListEntry, &PopulateEquippedSlotAsItemListEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateItemList
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  needsRefresh                   ( CPF_Parm )

void UBioSFHandler_XMods::PopulateItemList ( unsigned long needsRefresh )
{
	static UFunction* pFnPopulateItemList = NULL;

	if ( ! pFnPopulateItemList )
		pFnPopulateItemList = (UFunction*) UObject::GObjObjects()->Data[ 64276 ];

	UBioSFHandler_XMods_execPopulateItemList_Parms PopulateItemList_Parms;
	PopulateItemList_Parms.needsRefresh = needsRefresh;

	this->ProcessEvent ( pFnPopulateItemList, &PopulateItemList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateEquippedItemXModSlotEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            nSlotIndex                     ( CPF_Parm )

void UBioSFHandler_XMods::PopulateEquippedItemXModSlotEntry ( int nSlotIndex )
{
	static UFunction* pFnPopulateEquippedItemXModSlotEntry = NULL;

	if ( ! pFnPopulateEquippedItemXModSlotEntry )
		pFnPopulateEquippedItemXModSlotEntry = (UFunction*) UObject::GObjObjects()->Data[ 64303 ];

	UBioSFHandler_XMods_execPopulateEquippedItemXModSlotEntry_Parms PopulateEquippedItemXModSlotEntry_Parms;
	PopulateEquippedItemXModSlotEntry_Parms.nSlotIndex = nSlotIndex;

	this->ProcessEvent ( pFnPopulateEquippedItemXModSlotEntry, &PopulateEquippedItemXModSlotEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateEquippedItemInherentEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_XMods::PopulateEquippedItemInherentEntry ( )
{
	static UFunction* pFnPopulateEquippedItemInherentEntry = NULL;

	if ( ! pFnPopulateEquippedItemInherentEntry )
		pFnPopulateEquippedItemInherentEntry = (UFunction*) UObject::GObjObjects()->Data[ 64302 ];

	UBioSFHandler_XMods_execPopulateEquippedItemInherentEntry_Parms PopulateEquippedItemInherentEntry_Parms;

	this->ProcessEvent ( pFnPopulateEquippedItemInherentEntry, &PopulateEquippedItemInherentEntry_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateEquippedItemXModSlots
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_XMods::PopulateEquippedItemXModSlots ( )
{
	static UFunction* pFnPopulateEquippedItemXModSlots = NULL;

	if ( ! pFnPopulateEquippedItemXModSlots )
		pFnPopulateEquippedItemXModSlots = (UFunction*) UObject::GObjObjects()->Data[ 64297 ];

	UBioSFHandler_XMods_execPopulateEquippedItemXModSlots_Parms PopulateEquippedItemXModSlots_Parms;

	this->ProcessEvent ( pFnPopulateEquippedItemXModSlots, &PopulateEquippedItemXModSlots_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateEquippedItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_XMods::PopulateEquippedItem ( )
{
	static UFunction* pFnPopulateEquippedItem = NULL;

	if ( ! pFnPopulateEquippedItem )
		pFnPopulateEquippedItem = (UFunction*) UObject::GObjObjects()->Data[ 64295 ];

	UBioSFHandler_XMods_execPopulateEquippedItem_Parms PopulateEquippedItem_Parms;

	this->ProcessEvent ( pFnPopulateEquippedItem, &PopulateEquippedItem_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.PopulateForCharacter
// [0x00020002] 
// Parameters infos:
// unsigned long                  needsRefresh                   ( CPF_Parm )

void UBioSFHandler_XMods::PopulateForCharacter ( unsigned long needsRefresh )
{
	static UFunction* pFnPopulateForCharacter = NULL;

	if ( ! pFnPopulateForCharacter )
		pFnPopulateForCharacter = (UFunction*) UObject::GObjObjects()->Data[ 64293 ];

	UBioSFHandler_XMods_execPopulateForCharacter_Parms PopulateForCharacter_Parms;
	PopulateForCharacter_Parms.needsRefresh = needsRefresh;

	this->ProcessEvent ( pFnPopulateForCharacter, &PopulateForCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.ChangeSlotState
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  eDisplaySlot                   ( CPF_Parm )

void UBioSFHandler_XMods::ChangeSlotState ( unsigned char eDisplaySlot )
{
	static UFunction* pFnChangeSlotState = NULL;

	if ( ! pFnChangeSlotState )
		pFnChangeSlotState = (UFunction*) UObject::GObjObjects()->Data[ 64288 ];

	UBioSFHandler_XMods_execChangeSlotState_Parms ChangeSlotState_Parms;
	ChangeSlotState_Parms.eDisplaySlot = eDisplaySlot;

	this->ProcessEvent ( pFnChangeSlotState, &ChangeSlotState_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.SetGlobalVars
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_XMods::SetGlobalVars ( )
{
	static UFunction* pFnSetGlobalVars = NULL;

	if ( ! pFnSetGlobalVars )
		pFnSetGlobalVars = (UFunction*) UObject::GObjObjects()->Data[ 64284 ];

	UBioSFHandler_XMods_execSetGlobalVars_Parms SetGlobalVars_Parms;

	this->ProcessEvent ( pFnSetGlobalVars, &SetGlobalVars_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.UninstallXModForCurrentSlot
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_XMods::UninstallXModForCurrentSlot ( )
{
	static UFunction* pFnUninstallXModForCurrentSlot = NULL;

	if ( ! pFnUninstallXModForCurrentSlot )
		pFnUninstallXModForCurrentSlot = (UFunction*) UObject::GObjObjects()->Data[ 64287 ];

	UBioSFHandler_XMods_execUninstallXModForCurrentSlot_Parms UninstallXModForCurrentSlot_Parms;

	this->ProcessEvent ( pFnUninstallXModForCurrentSlot, &UninstallXModForCurrentSlot_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.SetXModFilterSlot
// [0x00020002] 
// Parameters infos:
// int                            nNewXmodSlot                   ( CPF_Parm )

void UBioSFHandler_XMods::SetXModFilterSlot ( int nNewXmodSlot )
{
	static UFunction* pFnSetXModFilterSlot = NULL;

	if ( ! pFnSetXModFilterSlot )
		pFnSetXModFilterSlot = (UFunction*) UObject::GObjObjects()->Data[ 64285 ];

	UBioSFHandler_XMods_execSetXModFilterSlot_Parms SetXModFilterSlot_Parms;
	SetXModFilterSlot_Parms.nNewXmodSlot = nNewXmodSlot;

	this->ProcessEvent ( pFnSetXModFilterSlot, &SetXModFilterSlot_Parms, NULL );
};

// Function SFXGame.BioSFHandler_XMods.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_XMods::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 64263 ];

	UBioSFHandler_XMods_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_CharacterRecord.GetSquadMemberNames
// [0x00420002] 
// Parameters infos:
// int                            srCurMember                    ( CPF_Parm | CPF_OutParm )
// int                            srPrevMember                   ( CPF_Parm | CPF_OutParm )
// int                            srNextMember                   ( CPF_Parm | CPF_OutParm )

void UBioSFHandler_CharacterRecord::GetSquadMemberNames ( int* srCurMember, int* srPrevMember, int* srNextMember )
{
	static UFunction* pFnGetSquadMemberNames = NULL;

	if ( ! pFnGetSquadMemberNames )
		pFnGetSquadMemberNames = (UFunction*) UObject::GObjObjects()->Data[ 61337 ];

	UBioSFHandler_CharacterRecord_execGetSquadMemberNames_Parms GetSquadMemberNames_Parms;

	this->ProcessEvent ( pFnGetSquadMemberNames, &GetSquadMemberNames_Parms, NULL );

	if ( srCurMember )
		*srCurMember = GetSquadMemberNames_Parms.srCurMember;

	if ( srPrevMember )
		*srPrevMember = GetSquadMemberNames_Parms.srPrevMember;

	if ( srNextMember )
		*srNextMember = GetSquadMemberNames_Parms.srNextMember;
};

// Function SFXGame.BioSFHandler_CharacterRecord.RestoreHeadGear
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::RestoreHeadGear ( )
{
	static UFunction* pFnRestoreHeadGear = NULL;

	if ( ! pFnRestoreHeadGear )
		pFnRestoreHeadGear = (UFunction*) UObject::GObjObjects()->Data[ 61336 ];

	UBioSFHandler_CharacterRecord_execRestoreHeadGear_Parms RestoreHeadGear_Parms;

	this->ProcessEvent ( pFnRestoreHeadGear, &RestoreHeadGear_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.HideHeadGear
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::HideHeadGear ( )
{
	static UFunction* pFnHideHeadGear = NULL;

	if ( ! pFnHideHeadGear )
		pFnHideHeadGear = (UFunction*) UObject::GObjObjects()->Data[ 61335 ];

	UBioSFHandler_CharacterRecord_execHideHeadGear_Parms HideHeadGear_Parms;

	this->ProcessEvent ( pFnHideHeadGear, &HideHeadGear_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.GetExperienceProgress
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            currentXP                      ( CPF_Parm | CPF_OutParm )
// int                            targetXP                       ( CPF_Parm | CPF_OutParm )

bool UBioSFHandler_CharacterRecord::GetExperienceProgress ( int* currentXP, int* targetXP )
{
	static UFunction* pFnGetExperienceProgress = NULL;

	if ( ! pFnGetExperienceProgress )
		pFnGetExperienceProgress = (UFunction*) UObject::GObjObjects()->Data[ 61303 ];

	UBioSFHandler_CharacterRecord_execGetExperienceProgress_Parms GetExperienceProgress_Parms;

	this->ProcessEvent ( pFnGetExperienceProgress, &GetExperienceProgress_Parms, NULL );

	if ( currentXP )
		*currentXP = GetExperienceProgress_Parms.currentXP;

	if ( targetXP )
		*targetXP = GetExperienceProgress_Parms.targetXP;

	return GetExperienceProgress_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_CharacterRecord.UpdateTalentPoints
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::UpdateTalentPoints ( )
{
	static UFunction* pFnUpdateTalentPoints = NULL;

	if ( ! pFnUpdateTalentPoints )
		pFnUpdateTalentPoints = (UFunction*) UObject::GObjObjects()->Data[ 61275 ];

	UBioSFHandler_CharacterRecord_execUpdateTalentPoints_Parms UpdateTalentPoints_Parms;

	this->ProcessEvent ( pFnUpdateTalentPoints, &UpdateTalentPoints_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.UpdateTalentRanks
// [0x00440003] ( FUNC_Final )
// Parameters infos:
// int                            talentIndex                    ( CPF_Parm )
// struct FBioTalentDynamicData   Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_CharacterRecord::UpdateTalentRanks ( int talentIndex, struct FBioTalentDynamicData* Data )
{
	static UFunction* pFnUpdateTalentRanks = NULL;

	if ( ! pFnUpdateTalentRanks )
		pFnUpdateTalentRanks = (UFunction*) UObject::GObjObjects()->Data[ 61316 ];

	UBioSFHandler_CharacterRecord_execUpdateTalentRanks_Parms UpdateTalentRanks_Parms;
	UpdateTalentRanks_Parms.talentIndex = talentIndex;

	this->ProcessEvent ( pFnUpdateTalentRanks, &UpdateTalentRanks_Parms, NULL );

	if ( Data )
		memcpy ( Data, &UpdateTalentRanks_Parms.Data, 0x50 );
};

// Function SFXGame.BioSFHandler_CharacterRecord.UpdateTalentList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::UpdateTalentList ( )
{
	static UFunction* pFnUpdateTalentList = NULL;

	if ( ! pFnUpdateTalentList )
		pFnUpdateTalentList = (UFunction*) UObject::GObjObjects()->Data[ 61274 ];

	UBioSFHandler_CharacterRecord_execUpdateTalentList_Parms UpdateTalentList_Parms;

	this->ProcessEvent ( pFnUpdateTalentList, &UpdateTalentList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.CreateTalentList
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::CreateTalentList ( )
{
	static UFunction* pFnCreateTalentList = NULL;

	if ( ! pFnCreateTalentList )
		pFnCreateTalentList = (UFunction*) UObject::GObjObjects()->Data[ 61281 ];

	UBioSFHandler_CharacterRecord_execCreateTalentList_Parms CreateTalentList_Parms;

	this->ProcessEvent ( pFnCreateTalentList, &CreateTalentList_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.UpdateCharacterStats
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::UpdateCharacterStats ( )
{
	static UFunction* pFnUpdateCharacterStats = NULL;

	if ( ! pFnUpdateCharacterStats )
		pFnUpdateCharacterStats = (UFunction*) UObject::GObjObjects()->Data[ 61273 ];

	UBioSFHandler_CharacterRecord_execUpdateCharacterStats_Parms UpdateCharacterStats_Parms;

	this->ProcessEvent ( pFnUpdateCharacterStats, &UpdateCharacterStats_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.GetCharacterLevel
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UBioSFHandler_CharacterRecord::GetCharacterLevel ( )
{
	static UFunction* pFnGetCharacterLevel = NULL;

	if ( ! pFnGetCharacterLevel )
		pFnGetCharacterLevel = (UFunction*) UObject::GObjObjects()->Data[ 61282 ];

	UBioSFHandler_CharacterRecord_execGetCharacterLevel_Parms GetCharacterLevel_Parms;

	this->ProcessEvent ( pFnGetCharacterLevel, &GetCharacterLevel_Parms, NULL );

	return GetCharacterLevel_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_CharacterRecord.UpdateCharacter
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::UpdateCharacter ( )
{
	static UFunction* pFnUpdateCharacter = NULL;

	if ( ! pFnUpdateCharacter )
		pFnUpdateCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61229 ];

	UBioSFHandler_CharacterRecord_execUpdateCharacter_Parms UpdateCharacter_Parms;

	this->ProcessEvent ( pFnUpdateCharacter, &UpdateCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.CancelTalentChanges
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::CancelTalentChanges ( )
{
	static UFunction* pFnCancelTalentChanges = NULL;

	if ( ! pFnCancelTalentChanges )
		pFnCancelTalentChanges = (UFunction*) UObject::GObjObjects()->Data[ 61227 ];

	UBioSFHandler_CharacterRecord_execCancelTalentChanges_Parms CancelTalentChanges_Parms;

	this->ProcessEvent ( pFnCancelTalentChanges, &CancelTalentChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.ClearTalentChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::ClearTalentChanges ( )
{
	static UFunction* pFnClearTalentChanges = NULL;

	if ( ! pFnClearTalentChanges )
		pFnClearTalentChanges = (UFunction*) UObject::GObjObjects()->Data[ 61277 ];

	UBioSFHandler_CharacterRecord_execClearTalentChanges_Parms ClearTalentChanges_Parms;

	this->ProcessEvent ( pFnClearTalentChanges, &ClearTalentChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.CommitTalentChanges
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::CommitTalentChanges ( )
{
	static UFunction* pFnCommitTalentChanges = NULL;

	if ( ! pFnCommitTalentChanges )
		pFnCommitTalentChanges = (UFunction*) UObject::GObjObjects()->Data[ 61228 ];

	UBioSFHandler_CharacterRecord_execCommitTalentChanges_Parms CommitTalentChanges_Parms;

	this->ProcessEvent ( pFnCommitTalentChanges, &CommitTalentChanges_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.PurchaseTalentRank
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            talentIndex                    ( CPF_Parm )

void UBioSFHandler_CharacterRecord::PurchaseTalentRank ( int talentIndex )
{
	static UFunction* pFnPurchaseTalentRank = NULL;

	if ( ! pFnPurchaseTalentRank )
		pFnPurchaseTalentRank = (UFunction*) UObject::GObjObjects()->Data[ 61226 ];

	UBioSFHandler_CharacterRecord_execPurchaseTalentRank_Parms PurchaseTalentRank_Parms;
	PurchaseTalentRank_Parms.talentIndex = talentIndex;

	this->ProcessEvent ( pFnPurchaseTalentRank, &PurchaseTalentRank_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.AutoLevelUp
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_CharacterRecord::AutoLevelUp ( )
{
	static UFunction* pFnAutoLevelUp = NULL;

	if ( ! pFnAutoLevelUp )
		pFnAutoLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 61225 ];

	UBioSFHandler_CharacterRecord_execAutoLevelUp_Parms AutoLevelUp_Parms;

	this->ProcessEvent ( pFnAutoLevelUp, &AutoLevelUp_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.ChangeToCharacter
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                NextCharacter                  ( CPF_Parm )

bool UBioSFHandler_CharacterRecord::ChangeToCharacter ( class ABioPawn* NextCharacter )
{
	static UFunction* pFnChangeToCharacter = NULL;

	if ( ! pFnChangeToCharacter )
		pFnChangeToCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61260 ];

	UBioSFHandler_CharacterRecord_execChangeToCharacter_Parms ChangeToCharacter_Parms;
	ChangeToCharacter_Parms.NextCharacter = NextCharacter;

	this->ProcessEvent ( pFnChangeToCharacter, &ChangeToCharacter_Parms, NULL );

	return ChangeToCharacter_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_CharacterRecord.NextCharacter
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bNext                          ( CPF_Parm )

bool UBioSFHandler_CharacterRecord::NextCharacter ( unsigned long bNext )
{
	static UFunction* pFnNextCharacter = NULL;

	if ( ! pFnNextCharacter )
		pFnNextCharacter = (UFunction*) UObject::GObjObjects()->Data[ 61224 ];

	UBioSFHandler_CharacterRecord_execNextCharacter_Parms NextCharacter_Parms;
	NextCharacter_Parms.bNext = bNext;

	this->ProcessEvent ( pFnNextCharacter, &NextCharacter_Parms, NULL );

	return NextCharacter_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_CharacterRecord.InitializeCharacterRecord
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_CharacterRecord::InitializeCharacterRecord ( )
{
	static UFunction* pFnInitializeCharacterRecord = NULL;

	if ( ! pFnInitializeCharacterRecord )
		pFnInitializeCharacterRecord = (UFunction*) UObject::GObjObjects()->Data[ 61252 ];

	UBioSFHandler_CharacterRecord_execInitializeCharacterRecord_Parms InitializeCharacterRecord_Parms;

	this->ProcessEvent ( pFnInitializeCharacterRecord, &InitializeCharacterRecord_Parms, NULL );

	return InitializeCharacterRecord_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_CharacterRecord.ToggleHelmet
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_CharacterRecord::ToggleHelmet ( )
{
	static UFunction* pFnToggleHelmet = NULL;

	if ( ! pFnToggleHelmet )
		pFnToggleHelmet = (UFunction*) UObject::GObjObjects()->Data[ 61247 ];

	UBioSFHandler_CharacterRecord_execToggleHelmet_Parms ToggleHelmet_Parms;

	this->ProcessEvent ( pFnToggleHelmet, &ToggleHelmet_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_CharacterRecord::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61246 ];

	UBioSFHandler_CharacterRecord_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_CharacterRecord::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 61243 ];

	UBioSFHandler_CharacterRecord_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_CharacterRecord::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61236 ];

	UBioSFHandler_CharacterRecord_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_CharacterRecord::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 61230 ];

	UBioSFHandler_CharacterRecord_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_CharacterRecord.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  Parameters                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_CharacterRecord::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* Parameters )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61220 ];

	UBioSFHandler_CharacterRecord_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( Parameters )
		memcpy ( Parameters, &HandleEvent_Parms.Parameters, 0x10 );
};

// Function SFXGame.BioSFHandler_Conversation.ChangeConversationMenu
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioConversation*        oConversation                  ( CPF_Parm )
// int                            nReplyIndex                    ( CPF_Parm )

bool UBioSFHandler_Conversation::ChangeConversationMenu ( class UBioConversation* oConversation, int nReplyIndex )
{
	static UFunction* pFnChangeConversationMenu = NULL;

	if ( ! pFnChangeConversationMenu )
		pFnChangeConversationMenu = (UFunction*) UObject::GObjObjects()->Data[ 61453 ];

	UBioSFHandler_Conversation_execChangeConversationMenu_Parms ChangeConversationMenu_Parms;
	ChangeConversationMenu_Parms.oConversation = oConversation;
	ChangeConversationMenu_Parms.nReplyIndex = nReplyIndex;

	this->ProcessEvent ( pFnChangeConversationMenu, &ChangeConversationMenu_Parms, NULL );

	return ChangeConversationMenu_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.GetInvestigateReplyCount
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioConversation*        oConversation                  ( CPF_Parm )

int UBioSFHandler_Conversation::GetInvestigateReplyCount ( class UBioConversation* oConversation )
{
	static UFunction* pFnGetInvestigateReplyCount = NULL;

	if ( ! pFnGetInvestigateReplyCount )
		pFnGetInvestigateReplyCount = (UFunction*) UObject::GObjObjects()->Data[ 61434 ];

	UBioSFHandler_Conversation_execGetInvestigateReplyCount_Parms GetInvestigateReplyCount_Parms;
	GetInvestigateReplyCount_Parms.oConversation = oConversation;

	this->ProcessEvent ( pFnGetInvestigateReplyCount, &GetInvestigateReplyCount_Parms, NULL );

	return GetInvestigateReplyCount_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.GetReplyLocation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nReplyCategory                 ( CPF_Parm )

unsigned char UBioSFHandler_Conversation::GetReplyLocation ( int nReplyCategory )
{
	static UFunction* pFnGetReplyLocation = NULL;

	if ( ! pFnGetReplyLocation )
		pFnGetReplyLocation = (UFunction*) UObject::GObjObjects()->Data[ 61438 ];

	UBioSFHandler_Conversation_execGetReplyLocation_Parms GetReplyLocation_Parms;
	GetReplyLocation_Parms.nReplyCategory = nReplyCategory;

	this->ProcessEvent ( pFnGetReplyLocation, &GetReplyLocation_Parms, NULL );

	return GetReplyLocation_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.GetInvestigateReplyLocation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            nInvestigateSlot               ( CPF_Parm )

unsigned char UBioSFHandler_Conversation::GetInvestigateReplyLocation ( int nInvestigateSlot )
{
	static UFunction* pFnGetInvestigateReplyLocation = NULL;

	if ( ! pFnGetInvestigateReplyLocation )
		pFnGetInvestigateReplyLocation = (UFunction*) UObject::GObjObjects()->Data[ 61437 ];

	UBioSFHandler_Conversation_execGetInvestigateReplyLocation_Parms GetInvestigateReplyLocation_Parms;
	GetInvestigateReplyLocation_Parms.nInvestigateSlot = nInvestigateSlot;

	this->ProcessEvent ( pFnGetInvestigateReplyLocation, &GetInvestigateReplyLocation_Parms, NULL );

	return GetInvestigateReplyLocation_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.GetInvestigateReplyFromWheelLocation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioConversation*        oConversation                  ( CPF_Parm )
// unsigned char                  nWheelLocation                 ( CPF_Parm )

int UBioSFHandler_Conversation::GetInvestigateReplyFromWheelLocation ( class UBioConversation* oConversation, unsigned char nWheelLocation )
{
	static UFunction* pFnGetInvestigateReplyFromWheelLocation = NULL;

	if ( ! pFnGetInvestigateReplyFromWheelLocation )
		pFnGetInvestigateReplyFromWheelLocation = (UFunction*) UObject::GObjObjects()->Data[ 61452 ];

	UBioSFHandler_Conversation_execGetInvestigateReplyFromWheelLocation_Parms GetInvestigateReplyFromWheelLocation_Parms;
	GetInvestigateReplyFromWheelLocation_Parms.oConversation = oConversation;
	GetInvestigateReplyFromWheelLocation_Parms.nWheelLocation = nWheelLocation;

	this->ProcessEvent ( pFnGetInvestigateReplyFromWheelLocation, &GetInvestigateReplyFromWheelLocation_Parms, NULL );

	return GetInvestigateReplyFromWheelLocation_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.SelectConversationEntry
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  nWheelLocation                 ( CPF_Parm )

bool UBioSFHandler_Conversation::SelectConversationEntry ( unsigned char nWheelLocation )
{
	static UFunction* pFnSelectConversationEntry = NULL;

	if ( ! pFnSelectConversationEntry )
		pFnSelectConversationEntry = (UFunction*) UObject::GObjObjects()->Data[ 61381 ];

	UBioSFHandler_Conversation_execSelectConversationEntry_Parms SelectConversationEntry_Parms;
	SelectConversationEntry_Parms.nWheelLocation = nWheelLocation;

	this->ProcessEvent ( pFnSelectConversationEntry, &SelectConversationEntry_Parms, NULL );

	return SelectConversationEntry_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.MapGuiStyleToOptionMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eGUIStyle                      ( CPF_Parm )

int UBioSFHandler_Conversation::MapGuiStyleToOptionMode ( unsigned char eGUIStyle )
{
	static UFunction* pFnMapGuiStyleToOptionMode = NULL;

	if ( ! pFnMapGuiStyleToOptionMode )
		pFnMapGuiStyleToOptionMode = (UFunction*) UObject::GObjObjects()->Data[ 61439 ];

	UBioSFHandler_Conversation_execMapGuiStyleToOptionMode_Parms MapGuiStyleToOptionMode_Parms;
	MapGuiStyleToOptionMode_Parms.eGUIStyle = eGUIStyle;

	this->ProcessEvent ( pFnMapGuiStyleToOptionMode, &MapGuiStyleToOptionMode_Parms, NULL );

	return MapGuiStyleToOptionMode_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_Conversation.UpdateConversationOptions
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UBioConversation*        oConversation                  ( CPF_Parm )

void UBioSFHandler_Conversation::UpdateConversationOptions ( class UBioConversation* oConversation )
{
	static UFunction* pFnUpdateConversationOptions = NULL;

	if ( ! pFnUpdateConversationOptions )
		pFnUpdateConversationOptions = (UFunction*) UObject::GObjObjects()->Data[ 61407 ];

	UBioSFHandler_Conversation_execUpdateConversationOptions_Parms UpdateConversationOptions_Parms;
	UpdateConversationOptions_Parms.oConversation = oConversation;

	this->ProcessEvent ( pFnUpdateConversationOptions, &UpdateConversationOptions_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Conversation::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 61394 ];

	UBioSFHandler_Conversation_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.CalculateArrowPosition
// [0x00420002] 
// Parameters infos:
// struct FASParams               stParam                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct TArray<struct FASParams> lstParams                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Conversation::CalculateArrowPosition ( struct FASParams* stParam, struct TArray<struct FASParams>* lstParams )
{
	static UFunction* pFnCalculateArrowPosition = NULL;

	if ( ! pFnCalculateArrowPosition )
		pFnCalculateArrowPosition = (UFunction*) UObject::GObjObjects()->Data[ 61387 ];

	UBioSFHandler_Conversation_execCalculateArrowPosition_Parms CalculateArrowPosition_Parms;

	this->ProcessEvent ( pFnCalculateArrowPosition, &CalculateArrowPosition_Parms, NULL );

	if ( stParam )
		memcpy ( stParam, &CalculateArrowPosition_Parms.stParam, 0x20 );

	if ( lstParams )
		memcpy ( lstParams, &CalculateArrowPosition_Parms.lstParams, 0x10 );
};

// Function SFXGame.BioSFHandler_Conversation.OnRemovePanel
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Conversation::OnRemovePanel ( )
{
	static UFunction* pFnOnRemovePanel = NULL;

	if ( ! pFnOnRemovePanel )
		pFnOnRemovePanel = (UFunction*) UObject::GObjObjects()->Data[ 61386 ];

	UBioSFHandler_Conversation_execOnRemovePanel_Parms OnRemovePanel_Parms;

	this->ProcessEvent ( pFnOnRemovePanel, &OnRemovePanel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Conversation::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 61382 ];

	UBioSFHandler_Conversation_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Conversation::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 61376 ];

	UBioSFHandler_Conversation_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Conversation.SkipConversation
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Conversation::SkipConversation ( )
{
	static UFunction* pFnSkipConversation = NULL;

	if ( ! pFnSkipConversation )
		pFnSkipConversation = (UFunction*) UObject::GObjObjects()->Data[ 61374 ];

	UBioSFHandler_Conversation_execSkipConversation_Parms SkipConversation_Parms;

	this->ProcessEvent ( pFnSkipConversation, &SkipConversation_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.SelectConversationSegment
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Conversation::SelectConversationSegment ( )
{
	static UFunction* pFnSelectConversationSegment = NULL;

	if ( ! pFnSelectConversationSegment )
		pFnSelectConversationSegment = (UFunction*) UObject::GObjObjects()->Data[ 61373 ];

	UBioSFHandler_Conversation_execSelectConversationSegment_Parms SelectConversationSegment_Parms;

	this->ProcessEvent ( pFnSelectConversationSegment, &SelectConversationSegment_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.OnPanelRemoved
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Conversation::OnPanelRemoved ( )
{
	static UFunction* pFnOnPanelRemoved = NULL;

	if ( ! pFnOnPanelRemoved )
		pFnOnPanelRemoved = (UFunction*) UObject::GObjObjects()->Data[ 61369 ];

	UBioSFHandler_Conversation_execOnPanelRemoved_Parms OnPanelRemoved_Parms;

	this->ProcessEvent ( pFnOnPanelRemoved, &OnPanelRemoved_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Conversation::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 61353 ];

	UBioSFHandler_Conversation_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Conversation.GetNumReplies
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UBioConversation*        oConversation                  ( CPF_Parm )

int UBioSFHandler_Conversation::GetNumReplies ( class UBioConversation* oConversation )
{
	static UFunction* pFnGetNumReplies = NULL;

	if ( ! pFnGetNumReplies )
		pFnGetNumReplies = (UFunction*) UObject::GObjObjects()->Data[ 61350 ];

	UBioSFHandler_Conversation_execGetNumReplies_Parms GetNumReplies_Parms;
	GetNumReplies_Parms.oConversation = oConversation;

	this->ProcessEvent ( pFnGetNumReplies, &GetNumReplies_Parms, NULL );

	return GetNumReplies_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_InventoryIGGOverride.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_InventoryIGGOverride::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62078 ];

	UBioSFHandler_InventoryIGGOverride_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_Specialization.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_Specialization::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 64214 ];

	UBioSFHandler_Specialization_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_Specialization::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 64213 ];

	UBioSFHandler_Specialization_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.UpdateSpecializations
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_Specialization::UpdateSpecializations ( )
{
	static UFunction* pFnUpdateSpecializations = NULL;

	if ( ! pFnUpdateSpecializations )
		pFnUpdateSpecializations = (UFunction*) UObject::GObjObjects()->Data[ 64197 ];

	UBioSFHandler_Specialization_execUpdateSpecializations_Parms UpdateSpecializations_Parms;

	this->ProcessEvent ( pFnUpdateSpecializations, &UpdateSpecializations_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.ChooseSpecialization
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// int                            SpecIndex                      ( CPF_Parm )

void UBioSFHandler_Specialization::ChooseSpecialization ( int SpecIndex )
{
	static UFunction* pFnChooseSpecialization = NULL;

	if ( ! pFnChooseSpecialization )
		pFnChooseSpecialization = (UFunction*) UObject::GObjObjects()->Data[ 64198 ];

	UBioSFHandler_Specialization_execChooseSpecialization_Parms ChooseSpecialization_Parms;
	ChooseSpecialization_Parms.SpecIndex = SpecIndex;

	this->ProcessEvent ( pFnChooseSpecialization, &ChooseSpecialization_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_Specialization::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 64203 ];

	UBioSFHandler_Specialization_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_Specialization::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 64199 ];

	UBioSFHandler_Specialization_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_Specialization.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  Parameters                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_Specialization::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* Parameters )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 64193 ];

	UBioSFHandler_Specialization_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( Parameters )
		memcpy ( Parameters, &HandleEvent_Parms.Parameters, 0x10 );
};

// Function SFXGame.BioSFHandler_Specialization.PreInitialization
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                PlayerPawn                     ( CPF_Parm )

bool UBioSFHandler_Specialization::PreInitialization ( class ABioPawn* PlayerPawn )
{
	static UFunction* pFnPreInitialization = NULL;

	if ( ! pFnPreInitialization )
		pFnPreInitialization = (UFunction*) UObject::GObjObjects()->Data[ 62375 ];

	UBioSFHandler_Specialization_execPreInitialization_Parms PreInitialization_Parms;
	PreInitialization_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnPreInitialization, &PreInitialization_Parms, NULL );

	return PreInitialization_Parms.ReturnValue;
};

// Function SFXGame.BioTimerList.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioTimerList::Tick ( float fDeltaT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 65022 ];

	UBioTimerList_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioTimerList.KillTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 i_sTimerName                   ( CPF_Parm | CPF_NeedCtorLink )

bool UBioTimerList::KillTimer ( struct FString i_sTimerName )
{
	static UFunction* pFnKillTimer = NULL;

	if ( ! pFnKillTimer )
		pFnKillTimer = (UFunction*) UObject::GObjObjects()->Data[ 62428 ];

	UBioTimerList_execKillTimer_Parms KillTimer_Parms;
	memcpy ( &KillTimer_Parms.i_sTimerName, &i_sTimerName, 0x10 );

	this->ProcessEvent ( pFnKillTimer, &KillTimer_Parms, NULL );

	return KillTimer_Parms.ReturnValue;
};

// Function SFXGame.BioTimerList.AddTimer
// [0x00024002] 
// Parameters infos:
// struct FScriptDelegate         TimerDelegate                  ( CPF_Parm | CPF_NeedCtorLink )
// class UObject*                 Params                         ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )
// struct FString                 i_sTimerName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UBioTimerList::AddTimer ( struct FScriptDelegate TimerDelegate, class UObject* Params, float fTime, struct FString i_sTimerName )
{
	static UFunction* pFnAddTimer = NULL;

	if ( ! pFnAddTimer )
		pFnAddTimer = (UFunction*) UObject::GObjObjects()->Data[ 65010 ];

	UBioTimerList_execAddTimer_Parms AddTimer_Parms;
	memcpy ( &AddTimer_Parms.TimerDelegate, &TimerDelegate, 0x10 );
	AddTimer_Parms.Params = Params;
	AddTimer_Parms.fTime = fTime;
	memcpy ( &AddTimer_Parms.i_sTimerName, &i_sTimerName, 0x10 );

	this->ProcessEvent ( pFnAddTimer, &AddTimer_Parms, NULL );
};

// Function SFXGame.BioTimerList.BioTimerDelegate
// [0x00120000] 
// Parameters infos:
// class UObject*                 Params                         ( CPF_Parm )

void UBioTimerList::BioTimerDelegate ( class UObject* Params )
{
	static UFunction* pFnBioTimerDelegate = NULL;

	if ( ! pFnBioTimerDelegate )
		pFnBioTimerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 65008 ];

	UBioTimerList_execBioTimerDelegate_Parms BioTimerDelegate_Parms;
	BioTimerDelegate_Parms.Params = Params;

	this->ProcessEvent ( pFnBioTimerDelegate, &BioTimerDelegate_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 62978 ];

	UBioSFHandler_PCCharacterRecord_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.ClosePanel
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCCharacterRecord::ClosePanel ( )
{
	static UFunction* pFnClosePanel = NULL;

	if ( ! pFnClosePanel )
		pFnClosePanel = (UFunction*) UObject::GObjObjects()->Data[ 62975 ];

	UBioSFHandler_PCCharacterRecord_execClosePanel_Parms ClosePanel_Parms;

	this->ProcessEvent ( pFnClosePanel, &ClosePanel_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.ApplyOrNotThenExit
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAPressed                      ( CPF_Parm )
// int                            nContext                       ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::ApplyOrNotThenExit ( unsigned long bAPressed, int nContext )
{
	static UFunction* pFnApplyOrNotThenExit = NULL;

	if ( ! pFnApplyOrNotThenExit )
		pFnApplyOrNotThenExit = (UFunction*) UObject::GObjObjects()->Data[ 62972 ];

	UBioSFHandler_PCCharacterRecord_execApplyOrNotThenExit_Parms ApplyOrNotThenExit_Parms;
	ApplyOrNotThenExit_Parms.bAPressed = bAPressed;
	ApplyOrNotThenExit_Parms.nContext = nContext;

	this->ProcessEvent ( pFnApplyOrNotThenExit, &ApplyOrNotThenExit_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.ConfirmCommit
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCCharacterRecord::ConfirmCommit ( )
{
	static UFunction* pFnConfirmCommit = NULL;

	if ( ! pFnConfirmCommit )
		pFnConfirmCommit = (UFunction*) UObject::GObjObjects()->Data[ 62969 ];

	UBioSFHandler_PCCharacterRecord_execConfirmCommit_Parms ConfirmCommit_Parms;

	this->ProcessEvent ( pFnConfirmCommit, &ConfirmCommit_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.NeedsToConfirm
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_PCCharacterRecord::NeedsToConfirm ( )
{
	static UFunction* pFnNeedsToConfirm = NULL;

	if ( ! pFnNeedsToConfirm )
		pFnNeedsToConfirm = (UFunction*) UObject::GObjObjects()->Data[ 62497 ];

	UBioSFHandler_PCCharacterRecord_execNeedsToConfirm_Parms NeedsToConfirm_Parms;

	this->ProcessEvent ( pFnNeedsToConfirm, &NeedsToConfirm_Parms, NULL );

	return NeedsToConfirm_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.RemoveTalentPoint
// [0x00020002] 
// Parameters infos:
// int                            RankIndex                      ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::RemoveTalentPoint ( int RankIndex )
{
	static UFunction* pFnRemoveTalentPoint = NULL;

	if ( ! pFnRemoveTalentPoint )
		pFnRemoveTalentPoint = (UFunction*) UObject::GObjObjects()->Data[ 62964 ];

	UBioSFHandler_PCCharacterRecord_execRemoveTalentPoint_Parms RemoveTalentPoint_Parms;
	RemoveTalentPoint_Parms.RankIndex = RankIndex;

	this->ProcessEvent ( pFnRemoveTalentPoint, &RemoveTalentPoint_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.HandleInputEvent
// [0x00024002] 
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )
// float                          fValue                         ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_PCCharacterRecord::HandleInputEvent ( unsigned char Event, float fValue )
{
	static UFunction* pFnHandleInputEvent = NULL;

	if ( ! pFnHandleInputEvent )
		pFnHandleInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 62961 ];

	UBioSFHandler_PCCharacterRecord_execHandleInputEvent_Parms HandleInputEvent_Parms;
	HandleInputEvent_Parms.Event = Event;
	HandleInputEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnHandleInputEvent, &HandleInputEvent_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.InitializeCharacterRecord
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_PCCharacterRecord::InitializeCharacterRecord ( )
{
	static UFunction* pFnInitializeCharacterRecord = NULL;

	if ( ! pFnInitializeCharacterRecord )
		pFnInitializeCharacterRecord = (UFunction*) UObject::GObjObjects()->Data[ 62950 ];

	UBioSFHandler_PCCharacterRecord_execInitializeCharacterRecord_Parms InitializeCharacterRecord_Parms;

	this->ProcessEvent ( pFnInitializeCharacterRecord, &InitializeCharacterRecord_Parms, NULL );

	return InitializeCharacterRecord_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.SetCharacter
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::SetCharacter ( int Index )
{
	static UFunction* pFnSetCharacter = NULL;

	if ( ! pFnSetCharacter )
		pFnSetCharacter = (UFunction*) UObject::GObjObjects()->Data[ 62947 ];

	UBioSFHandler_PCCharacterRecord_execSetCharacter_Parms SetCharacter_Parms;
	SetCharacter_Parms.Index = Index;

	this->ProcessEvent ( pFnSetCharacter, &SetCharacter_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  Parameters                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCCharacterRecord::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* Parameters )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 62943 ];

	UBioSFHandler_PCCharacterRecord_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( Parameters )
		memcpy ( Parameters, &HandleEvent_Parms.Parameters, 0x10 );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::eventUpdate ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62941 ];

	UBioSFHandler_PCCharacterRecord_eventUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCCharacterRecord.SetIGGHandler
// [0x00020002] 
// Parameters infos:
// class UBioSFHandler*           pHandler                       ( CPF_Parm )

void UBioSFHandler_PCCharacterRecord::SetIGGHandler ( class UBioSFHandler* pHandler )
{
	static UFunction* pFnSetIGGHandler = NULL;

	if ( ! pFnSetIGGHandler )
		pFnSetIGGHandler = (UFunction*) UObject::GObjObjects()->Data[ 62938 ];

	UBioSFHandler_PCCharacterRecord_execSetIGGHandler_Parms SetIGGHandler_Parms;
	SetIGGHandler_Parms.pHandler = pHandler;

	this->ProcessEvent ( pFnSetIGGHandler, &SetIGGHandler_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.InitializeModsSection
// [0x00020000] 
// Parameters infos:

void UBioSFHandler_PCInventory::InitializeModsSection ( )
{
	static UFunction* pFnInitializeModsSection = NULL;

	if ( ! pFnInitializeModsSection )
		pFnInitializeModsSection = (UFunction*) UObject::GObjObjects()->Data[ 63048 ];

	UBioSFHandler_PCInventory_execInitializeModsSection_Parms InitializeModsSection_Parms;

	this->ProcessEvent ( pFnInitializeModsSection, &InitializeModsSection_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.UpdateInvSlotIcons
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDeferUpdateFilterIcons        ( CPF_OptionalParm | CPF_Parm )

void UBioSFHandler_PCInventory::UpdateInvSlotIcons ( unsigned long bDeferUpdateFilterIcons )
{
	static UFunction* pFnUpdateInvSlotIcons = NULL;

	if ( ! pFnUpdateInvSlotIcons )
		pFnUpdateInvSlotIcons = (UFunction*) UObject::GObjObjects()->Data[ 63041 ];

	UBioSFHandler_PCInventory_execUpdateInvSlotIcons_Parms UpdateInvSlotIcons_Parms;
	UpdateInvSlotIcons_Parms.bDeferUpdateFilterIcons = bDeferUpdateFilterIcons;

	this->ProcessEvent ( pFnUpdateInvSlotIcons, &UpdateInvSlotIcons_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.UpdateTeamBox
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCInventory::UpdateTeamBox ( )
{
	static UFunction* pFnUpdateTeamBox = NULL;

	if ( ! pFnUpdateTeamBox )
		pFnUpdateTeamBox = (UFunction*) UObject::GObjObjects()->Data[ 63037 ];

	UBioSFHandler_PCInventory_execUpdateTeamBox_Parms UpdateTeamBox_Parms;

	this->ProcessEvent ( pFnUpdateTeamBox, &UpdateTeamBox_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.InitializeInventoryHelper
// [0x00420002] 
// Parameters infos:
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCInventory::InitializeInventoryHelper ( struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnInitializeInventoryHelper = NULL;

	if ( ! pFnInitializeInventoryHelper )
		pFnInitializeInventoryHelper = (UFunction*) UObject::GObjObjects()->Data[ 63026 ];

	UBioSFHandler_PCInventory_execInitializeInventoryHelper_Parms InitializeInventoryHelper_Parms;

	this->ProcessEvent ( pFnInitializeInventoryHelper, &InitializeInventoryHelper_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &InitializeInventoryHelper_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSFHandler_PCInventory.PopulateInvItems
// [0x00020002] 
// Parameters infos:
// struct TArray<struct FASParams> lstParams                      ( CPF_Parm | CPF_NeedCtorLink )

void UBioSFHandler_PCInventory::PopulateInvItems ( struct TArray<struct FASParams> lstParams )
{
	static UFunction* pFnPopulateInvItems = NULL;

	if ( ! pFnPopulateInvItems )
		pFnPopulateInvItems = (UFunction*) UObject::GObjObjects()->Data[ 63023 ];

	UBioSFHandler_PCInventory_execPopulateInvItems_Parms PopulateInvItems_Parms;
	memcpy ( &PopulateInvItems_Parms.lstParams, &lstParams, 0x10 );

	this->ProcessEvent ( pFnPopulateInvItems, &PopulateInvItems_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.SetItemFilterSlot
// [0x00020002] 
// Parameters infos:
// int                            nFilter                        ( CPF_Parm )

void UBioSFHandler_PCInventory::SetItemFilterSlot ( int nFilter )
{
	static UFunction* pFnSetItemFilterSlot = NULL;

	if ( ! pFnSetItemFilterSlot )
		pFnSetItemFilterSlot = (UFunction*) UObject::GObjObjects()->Data[ 63021 ];

	UBioSFHandler_PCInventory_execSetItemFilterSlot_Parms SetItemFilterSlot_Parms;
	SetItemFilterSlot_Parms.nFilter = nFilter;

	this->ProcessEvent ( pFnSetItemFilterSlot, &SetItemFilterSlot_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  Parameters                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_PCInventory::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* Parameters )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63008 ];

	UBioSFHandler_PCInventory_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( Parameters )
		memcpy ( Parameters, &HandleEvent_Parms.Parameters, 0x10 );
};

// Function SFXGame.BioSFHandler_PCInventory.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCInventory::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63003 ];

	UBioSFHandler_PCInventory_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCInventory::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63001 ];

	UBioSFHandler_PCInventory_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCInventory.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCInventory::eventUpdate ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 62999 ];

	UBioSFHandler_PCInventory_eventUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Interpolate.DrawHUD
// [0x00020002] 
// Parameters infos:
// class UBioCheatManager*        M                              ( CPF_Parm )

void USFXCameraMode_Interpolate::DrawHUD ( class UBioCheatManager* M )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 66568 ];

	USFXCameraMode_Interpolate_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.M = M;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Interpolate.GetCurrentShake
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator USFXCameraMode_Interpolate::GetCurrentShake ( )
{
	static UFunction* pFnGetCurrentShake = NULL;

	if ( ! pFnGetCurrentShake )
		pFnGetCurrentShake = (UFunction*) UObject::GObjObjects()->Data[ 66563 ];

	USFXCameraMode_Interpolate_execGetCurrentShake_Parms GetCurrentShake_Parms;

	this->ProcessEvent ( pFnGetCurrentShake, &GetCurrentShake_Parms, NULL );

	return GetCurrentShake_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode_Interpolate.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraMode_Interpolate::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66560 ];

	USFXCameraMode_Interpolate_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Interpolate.GetActorCameraHook
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 OutLocation                    ( CPF_Parm | CPF_OutParm )

bool USFXCameraMode_Interpolate::GetActorCameraHook ( struct FVector* OutLocation )
{
	static UFunction* pFnGetActorCameraHook = NULL;

	if ( ! pFnGetActorCameraHook )
		pFnGetActorCameraHook = (UFunction*) UObject::GObjObjects()->Data[ 66553 ];

	USFXCameraMode_Interpolate_execGetActorCameraHook_Parms GetActorCameraHook_Parms;

	this->ProcessEvent ( pFnGetActorCameraHook, &GetActorCameraHook_Parms, NULL );

	if ( OutLocation )
		memcpy ( OutLocation, &GetActorCameraHook_Parms.OutLocation, 0xC );

	return GetActorCameraHook_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode_Interpolate.Trace
// [0x00420002] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )

void USFXCameraMode_Interpolate::Trace ( class AActor** HitActor, struct FVector* HitLocation )
{
	static UFunction* pFnTrace = NULL;

	if ( ! pFnTrace )
		pFnTrace = (UFunction*) UObject::GObjObjects()->Data[ 66541 ];

	USFXCameraMode_Interpolate_execTrace_Parms Trace_Parms;

	this->ProcessEvent ( pFnTrace, &Trace_Parms, NULL );

	if ( HitActor )
		*HitActor = Trace_Parms.HitActor;

	if ( HitLocation )
		memcpy ( HitLocation, &Trace_Parms.HitLocation, 0xC );
};

// Function SFXGame.SFXCameraMode_Interpolate.InitializeTransition
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          FromMode                       ( CPF_Parm )
// class USFXCameraMode*          ToMode                         ( CPF_Parm )
// float                          Time                           ( CPF_Parm )
// unsigned long                  PreserveTarget                 ( CPF_Parm )

void USFXCameraMode_Interpolate::InitializeTransition ( class USFXCameraMode* FromMode, class USFXCameraMode* ToMode, float Time, unsigned long PreserveTarget )
{
	static UFunction* pFnInitializeTransition = NULL;

	if ( ! pFnInitializeTransition )
		pFnInitializeTransition = (UFunction*) UObject::GObjObjects()->Data[ 66523 ];

	USFXCameraMode_Interpolate_execInitializeTransition_Parms InitializeTransition_Parms;
	InitializeTransition_Parms.FromMode = FromMode;
	InitializeTransition_Parms.ToMode = ToMode;
	InitializeTransition_Parms.Time = Time;
	InitializeTransition_Parms.PreserveTarget = PreserveTarget;

	this->ProcessEvent ( pFnInitializeTransition, &InitializeTransition_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Interpolate.ModifyPostProcessSettings
// [0x00420002] 
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXCameraMode_Interpolate::ModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 66520 ];

	USFXCameraMode_Interpolate_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.SFXCameraMode_Interpolate.CheckLoop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          Mode                           ( CPF_Parm )
// int                            RecurseLevel                   ( CPF_Parm )

bool USFXCameraMode_Interpolate::CheckLoop ( class USFXCameraMode* Mode, int RecurseLevel )
{
	static UFunction* pFnCheckLoop = NULL;

	if ( ! pFnCheckLoop )
		pFnCheckLoop = (UFunction*) UObject::GObjObjects()->Data[ 66513 ];

	USFXCameraMode_Interpolate_execCheckLoop_Parms CheckLoop_Parms;
	CheckLoop_Parms.Mode = Mode;
	CheckLoop_Parms.RecurseLevel = RecurseLevel;

	this->ProcessEvent ( pFnCheckLoop, &CheckLoop_Parms, NULL );

	return CheckLoop_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraMode_Interpolate.Interpolate
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          T                              ( CPF_Parm )

float USFXCameraMode_Interpolate::Interpolate ( float T )
{
	static UFunction* pFnInterpolate = NULL;

	if ( ! pFnInterpolate )
		pFnInterpolate = (UFunction*) UObject::GObjObjects()->Data[ 66508 ];

	USFXCameraMode_Interpolate_execInterpolate_Parms Interpolate_Parms;
	Interpolate_Parms.T = T;

	this->ProcessEvent ( pFnInterpolate, &Interpolate_Parms, NULL );

	return Interpolate_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModePhoto.TakePhoto
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModePhoto::TakePhoto ( )
{
	static UFunction* pFnTakePhoto = NULL;

	if ( ! pFnTakePhoto )
		pFnTakePhoto = (UFunction*) UObject::GObjObjects()->Data[ 67416 ];

	USFXGameModePhoto_execTakePhoto_Parms TakePhoto_Parms;

	this->ProcessEvent ( pFnTakePhoto, &TakePhoto_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.DisableCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModePhoto::DisableCamera ( )
{
	static UFunction* pFnDisableCamera = NULL;

	if ( ! pFnDisableCamera )
		pFnDisableCamera = (UFunction*) UObject::GObjObjects()->Data[ 67415 ];

	USFXGameModePhoto_execDisableCamera_Parms DisableCamera_Parms;

	this->ProcessEvent ( pFnDisableCamera, &DisableCamera_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.EnableCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModePhoto::EnableCamera ( )
{
	static UFunction* pFnEnableCamera = NULL;

	if ( ! pFnEnableCamera )
		pFnEnableCamera = (UFunction*) UObject::GObjObjects()->Data[ 67414 ];

	USFXGameModePhoto_execEnableCamera_Parms EnableCamera_Parms;

	this->ProcessEvent ( pFnEnableCamera, &EnableCamera_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.ToggleOptions
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModePhoto::ToggleOptions ( )
{
	static UFunction* pFnToggleOptions = NULL;

	if ( ! pFnToggleOptions )
		pFnToggleOptions = (UFunction*) UObject::GObjObjects()->Data[ 67410 ];

	USFXGameModePhoto_execToggleOptions_Parms ToggleOptions_Parms;

	this->ProcessEvent ( pFnToggleOptions, &ToggleOptions_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModePhoto::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67407 ];

	USFXGameModePhoto_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModePhoto.GuiKey
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  Event                          ( CPF_Parm )

void USFXGameModePhoto::GuiKey ( unsigned char Event )
{
	static UFunction* pFnGuiKey = NULL;

	if ( ! pFnGuiKey )
		pFnGuiKey = (UFunction*) UObject::GObjObjects()->Data[ 67403 ];

	USFXGameModePhoto_execGuiKey_Parms GuiKey_Parms;
	GuiKey_Parms.Event = Event;

	this->ProcessEvent ( pFnGuiKey, &GuiKey_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.HideAttachedActors
// [0x00420002] 
// Parameters infos:
// struct TArray<struct FCachedActorState> InHiddenActors                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXGameModePhoto::HideAttachedActors ( struct TArray<struct FCachedActorState>* InHiddenActors )
{
	static UFunction* pFnHideAttachedActors = NULL;

	if ( ! pFnHideAttachedActors )
		pFnHideAttachedActors = (UFunction*) UObject::GObjObjects()->Data[ 67397 ];

	USFXGameModePhoto_execHideAttachedActors_Parms HideAttachedActors_Parms;

	this->ProcessEvent ( pFnHideAttachedActors, &HideAttachedActors_Parms, NULL );

	if ( InHiddenActors )
		memcpy ( InHiddenActors, &HideAttachedActors_Parms.InHiddenActors, 0x10 );
};

// Function SFXGame.SFXGameModePhoto.SetVehicleHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetVehicleHidden ( unsigned long bValue )
{
	static UFunction* pFnSetVehicleHidden = NULL;

	if ( ! pFnSetVehicleHidden )
		pFnSetVehicleHidden = (UFunction*) UObject::GObjObjects()->Data[ 67391 ];

	USFXGameModePhoto_execSetVehicleHidden_Parms SetVehicleHidden_Parms;
	SetVehicleHidden_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetVehicleHidden, &SetVehicleHidden_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetNPCsHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetNPCsHidden ( unsigned long bValue )
{
	static UFunction* pFnSetNPCsHidden = NULL;

	if ( ! pFnSetNPCsHidden )
		pFnSetNPCsHidden = (UFunction*) UObject::GObjObjects()->Data[ 67384 ];

	USFXGameModePhoto_execSetNPCsHidden_Parms SetNPCsHidden_Parms;
	SetNPCsHidden_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetNPCsHidden, &SetNPCsHidden_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetEnemiesHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetEnemiesHidden ( unsigned long bValue )
{
	static UFunction* pFnSetEnemiesHidden = NULL;

	if ( ! pFnSetEnemiesHidden )
		pFnSetEnemiesHidden = (UFunction*) UObject::GObjObjects()->Data[ 67378 ];

	USFXGameModePhoto_execSetEnemiesHidden_Parms SetEnemiesHidden_Parms;
	SetEnemiesHidden_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetEnemiesHidden, &SetEnemiesHidden_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetPartyHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetPartyHidden ( unsigned long bValue )
{
	static UFunction* pFnSetPartyHidden = NULL;

	if ( ! pFnSetPartyHidden )
		pFnSetPartyHidden = (UFunction*) UObject::GObjObjects()->Data[ 67370 ];

	USFXGameModePhoto_execSetPartyHidden_Parms SetPartyHidden_Parms;
	SetPartyHidden_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetPartyHidden, &SetPartyHidden_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetPlayerHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetPlayerHidden ( unsigned long bValue )
{
	static UFunction* pFnSetPlayerHidden = NULL;

	if ( ! pFnSetPlayerHidden )
		pFnSetPlayerHidden = (UFunction*) UObject::GObjObjects()->Data[ 67365 ];

	USFXGameModePhoto_execSetPlayerHidden_Parms SetPlayerHidden_Parms;
	SetPlayerHidden_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetPlayerHidden, &SetPlayerHidden_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetVignetteEnabled
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetVignetteEnabled ( unsigned long bValue )
{
	static UFunction* pFnSetVignetteEnabled = NULL;

	if ( ! pFnSetVignetteEnabled )
		pFnSetVignetteEnabled = (UFunction*) UObject::GObjObjects()->Data[ 67363 ];

	USFXGameModePhoto_execSetVignetteEnabled_Parms SetVignetteEnabled_Parms;
	SetVignetteEnabled_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetVignetteEnabled, &SetVignetteEnabled_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetFilmGrainStrength
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetFilmGrainStrength ( float Value )
{
	static UFunction* pFnSetFilmGrainStrength = NULL;

	if ( ! pFnSetFilmGrainStrength )
		pFnSetFilmGrainStrength = (UFunction*) UObject::GObjObjects()->Data[ 67360 ];

	USFXGameModePhoto_execSetFilmGrainStrength_Parms SetFilmGrainStrength_Parms;
	SetFilmGrainStrength_Parms.Value = Value;

	this->ProcessEvent ( pFnSetFilmGrainStrength, &SetFilmGrainStrength_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetFilmGrainEnabled
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetFilmGrainEnabled ( unsigned long bValue )
{
	static UFunction* pFnSetFilmGrainEnabled = NULL;

	if ( ! pFnSetFilmGrainEnabled )
		pFnSetFilmGrainEnabled = (UFunction*) UObject::GObjObjects()->Data[ 67358 ];

	USFXGameModePhoto_execSetFilmGrainEnabled_Parms SetFilmGrainEnabled_Parms;
	SetFilmGrainEnabled_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetFilmGrainEnabled, &SetFilmGrainEnabled_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetBloomThreshold
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetBloomThreshold ( float Value )
{
	static UFunction* pFnSetBloomThreshold = NULL;

	if ( ! pFnSetBloomThreshold )
		pFnSetBloomThreshold = (UFunction*) UObject::GObjObjects()->Data[ 67356 ];

	USFXGameModePhoto_execSetBloomThreshold_Parms SetBloomThreshold_Parms;
	SetBloomThreshold_Parms.Value = Value;

	this->ProcessEvent ( pFnSetBloomThreshold, &SetBloomThreshold_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetBloomIntensity
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetBloomIntensity ( float Value )
{
	static UFunction* pFnSetBloomIntensity = NULL;

	if ( ! pFnSetBloomIntensity )
		pFnSetBloomIntensity = (UFunction*) UObject::GObjObjects()->Data[ 67354 ];

	USFXGameModePhoto_execSetBloomIntensity_Parms SetBloomIntensity_Parms;
	SetBloomIntensity_Parms.Value = Value;

	this->ProcessEvent ( pFnSetBloomIntensity, &SetBloomIntensity_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetEffectFilter
// [0x00020002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void USFXGameModePhoto::SetEffectFilter ( int Value )
{
	static UFunction* pFnSetEffectFilter = NULL;

	if ( ! pFnSetEffectFilter )
		pFnSetEffectFilter = (UFunction*) UObject::GObjObjects()->Data[ 67350 ];

	USFXGameModePhoto_execSetEffectFilter_Parms SetEffectFilter_Parms;
	SetEffectFilter_Parms.Value = Value;

	this->ProcessEvent ( pFnSetEffectFilter, &SetEffectFilter_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetContrast
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetContrast ( float Value )
{
	static UFunction* pFnSetContrast = NULL;

	if ( ! pFnSetContrast )
		pFnSetContrast = (UFunction*) UObject::GObjObjects()->Data[ 67347 ];

	USFXGameModePhoto_execSetContrast_Parms SetContrast_Parms;
	SetContrast_Parms.Value = Value;

	this->ProcessEvent ( pFnSetContrast, &SetContrast_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetBrightness
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetBrightness ( float Value )
{
	static UFunction* pFnSetBrightness = NULL;

	if ( ! pFnSetBrightness )
		pFnSetBrightness = (UFunction*) UObject::GObjObjects()->Data[ 67344 ];

	USFXGameModePhoto_execSetBrightness_Parms SetBrightness_Parms;
	SetBrightness_Parms.Value = Value;

	this->ProcessEvent ( pFnSetBrightness, &SetBrightness_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetSaturation
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetSaturation ( float Value )
{
	static UFunction* pFnSetSaturation = NULL;

	if ( ! pFnSetSaturation )
		pFnSetSaturation = (UFunction*) UObject::GObjObjects()->Data[ 67341 ];

	USFXGameModePhoto_execSetSaturation_Parms SetSaturation_Parms;
	SetSaturation_Parms.Value = Value;

	this->ProcessEvent ( pFnSetSaturation, &SetSaturation_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetDOFIntensity
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetDOFIntensity ( float Value )
{
	static UFunction* pFnSetDOFIntensity = NULL;

	if ( ! pFnSetDOFIntensity )
		pFnSetDOFIntensity = (UFunction*) UObject::GObjObjects()->Data[ 67339 ];

	USFXGameModePhoto_execSetDOFIntensity_Parms SetDOFIntensity_Parms;
	SetDOFIntensity_Parms.Value = Value;

	this->ProcessEvent ( pFnSetDOFIntensity, &SetDOFIntensity_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetDOFFStop
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetDOFFStop ( float Value )
{
	static UFunction* pFnSetDOFFStop = NULL;

	if ( ! pFnSetDOFFStop )
		pFnSetDOFFStop = (UFunction*) UObject::GObjObjects()->Data[ 67337 ];

	USFXGameModePhoto_execSetDOFFStop_Parms SetDOFFStop_Parms;
	SetDOFFStop_Parms.Value = Value;

	this->ProcessEvent ( pFnSetDOFFStop, &SetDOFFStop_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetDOFDistance
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void USFXGameModePhoto::SetDOFDistance ( float Value )
{
	static UFunction* pFnSetDOFDistance = NULL;

	if ( ! pFnSetDOFDistance )
		pFnSetDOFDistance = (UFunction*) UObject::GObjObjects()->Data[ 67335 ];

	USFXGameModePhoto_execSetDOFDistance_Parms SetDOFDistance_Parms;
	SetDOFDistance_Parms.Value = Value;

	this->ProcessEvent ( pFnSetDOFDistance, &SetDOFDistance_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetDOFEnabled
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetDOFEnabled ( unsigned long bValue )
{
	static UFunction* pFnSetDOFEnabled = NULL;

	if ( ! pFnSetDOFEnabled )
		pFnSetDOFEnabled = (UFunction*) UObject::GObjObjects()->Data[ 67333 ];

	USFXGameModePhoto_execSetDOFEnabled_Parms SetDOFEnabled_Parms;
	SetDOFEnabled_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetDOFEnabled, &SetDOFEnabled_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetCameraFOV
// [0x00020002] 
// Parameters infos:
// float                          NewFOV                         ( CPF_Parm )

void USFXGameModePhoto::SetCameraFOV ( float NewFOV )
{
	static UFunction* pFnSetCameraFOV = NULL;

	if ( ! pFnSetCameraFOV )
		pFnSetCameraFOV = (UFunction*) UObject::GObjObjects()->Data[ 67331 ];

	USFXGameModePhoto_execSetCameraFOV_Parms SetCameraFOV_Parms;
	SetCameraFOV_Parms.NewFOV = NewFOV;

	this->ProcessEvent ( pFnSetCameraFOV, &SetCameraFOV_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetCameraRoll
// [0x00020002] 
// Parameters infos:
// float                          NewRoll                        ( CPF_Parm )

void USFXGameModePhoto::SetCameraRoll ( float NewRoll )
{
	static UFunction* pFnSetCameraRoll = NULL;

	if ( ! pFnSetCameraRoll )
		pFnSetCameraRoll = (UFunction*) UObject::GObjObjects()->Data[ 67329 ];

	USFXGameModePhoto_execSetCameraRoll_Parms SetCameraRoll_Parms;
	SetCameraRoll_Parms.NewRoll = NewRoll;

	this->ProcessEvent ( pFnSetCameraRoll, &SetCameraRoll_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.SetOrbitCam
// [0x00020002] 
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void USFXGameModePhoto::SetOrbitCam ( unsigned long bValue )
{
	static UFunction* pFnSetOrbitCam = NULL;

	if ( ! pFnSetOrbitCam )
		pFnSetOrbitCam = (UFunction*) UObject::GObjObjects()->Data[ 67327 ];

	USFXGameModePhoto_execSetOrbitCam_Parms SetOrbitCam_Parms;
	SetOrbitCam_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetOrbitCam, &SetOrbitCam_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.ModifyPostProcessSettings
// [0x00420002] 
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXGameModePhoto::ModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 67325 ];

	USFXGameModePhoto_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.SFXGameModePhoto.ResetFilters
// [0x00020002] 
// Parameters infos:

void USFXGameModePhoto::ResetFilters ( )
{
	static UFunction* pFnResetFilters = NULL;

	if ( ! pFnResetFilters )
		pFnResetFilters = (UFunction*) UObject::GObjObjects()->Data[ 67323 ];

	USFXGameModePhoto_execResetFilters_Parms ResetFilters_Parms;

	this->ProcessEvent ( pFnResetFilters, &ResetFilters_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.InitializeFilters
// [0x00020002] 
// Parameters infos:

void USFXGameModePhoto::InitializeFilters ( )
{
	static UFunction* pFnInitializeFilters = NULL;

	if ( ! pFnInitializeFilters )
		pFnInitializeFilters = (UFunction*) UObject::GObjObjects()->Data[ 67319 ];

	USFXGameModePhoto_execInitializeFilters_Parms InitializeFilters_Parms;

	this->ProcessEvent ( pFnInitializeFilters, &InitializeFilters_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.InitializePostProcessSettings
// [0x00020002] 
// Parameters infos:

void USFXGameModePhoto::InitializePostProcessSettings ( )
{
	static UFunction* pFnInitializePostProcessSettings = NULL;

	if ( ! pFnInitializePostProcessSettings )
		pFnInitializePostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 67314 ];

	USFXGameModePhoto_execInitializePostProcessSettings_Parms InitializePostProcessSettings_Parms;

	this->ProcessEvent ( pFnInitializePostProcessSettings, &InitializePostProcessSettings_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModePhoto::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67311 ];

	USFXGameModePhoto_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModePhoto::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67298 ];

	USFXGameModePhoto_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModePhoto.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModePhoto::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67286 ];

	USFXGameModePhoto_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeVehicle.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeVehicle::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67468 ];

	USFXGameModeVehicle_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeVehicle.LeaveWorld
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::LeaveWorld ( )
{
	static UFunction* pFnLeaveWorld = NULL;

	if ( ! pFnLeaveWorld )
		pFnLeaveWorld = (UFunction*) UObject::GObjObjects()->Data[ 67467 ];

	USFXGameModeVehicle_execLeaveWorld_Parms LeaveWorld_Parms;

	this->ProcessEvent ( pFnLeaveWorld, &LeaveWorld_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.RepairVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::RepairVehicle ( )
{
	static UFunction* pFnRepairVehicle = NULL;

	if ( ! pFnRepairVehicle )
		pFnRepairVehicle = (UFunction*) UObject::GObjObjects()->Data[ 67464 ];

	USFXGameModeVehicle_execRepairVehicle_Parms RepairVehicle_Parms;

	this->ProcessEvent ( pFnRepairVehicle, &RepairVehicle_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.StopFiringCannon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::StopFiringCannon ( )
{
	static UFunction* pFnStopFiringCannon = NULL;

	if ( ! pFnStopFiringCannon )
		pFnStopFiringCannon = (UFunction*) UObject::GObjObjects()->Data[ 67463 ];

	USFXGameModeVehicle_execStopFiringCannon_Parms StopFiringCannon_Parms;

	this->ProcessEvent ( pFnStopFiringCannon, &StopFiringCannon_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.FireCannon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::FireCannon ( )
{
	static UFunction* pFnFireCannon = NULL;

	if ( ! pFnFireCannon )
		pFnFireCannon = (UFunction*) UObject::GObjObjects()->Data[ 67462 ];

	USFXGameModeVehicle_execFireCannon_Parms FireCannon_Parms;

	this->ProcessEvent ( pFnFireCannon, &FireCannon_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.ToggleVehicleAim
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::ToggleVehicleAim ( )
{
	static UFunction* pFnToggleVehicleAim = NULL;

	if ( ! pFnToggleVehicleAim )
		pFnToggleVehicleAim = (UFunction*) UObject::GObjObjects()->Data[ 67459 ];

	USFXGameModeVehicle_execToggleVehicleAim_Parms ToggleVehicleAim_Parms;

	this->ProcessEvent ( pFnToggleVehicleAim, &ToggleVehicleAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.ChangeMagnification
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::ChangeMagnification ( )
{
	static UFunction* pFnChangeMagnification = NULL;

	if ( ! pFnChangeMagnification )
		pFnChangeMagnification = (UFunction*) UObject::GObjObjects()->Data[ 67457 ];

	USFXGameModeVehicle_execChangeMagnification_Parms ChangeMagnification_Parms;

	this->ProcessEvent ( pFnChangeMagnification, &ChangeMagnification_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.TurnOffVehicleTightAim
// [0x00020002] 
// Parameters infos:

void USFXGameModeVehicle::TurnOffVehicleTightAim ( )
{
	static UFunction* pFnTurnOffVehicleTightAim = NULL;

	if ( ! pFnTurnOffVehicleTightAim )
		pFnTurnOffVehicleTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67455 ];

	USFXGameModeVehicle_execTurnOffVehicleTightAim_Parms TurnOffVehicleTightAim_Parms;

	this->ProcessEvent ( pFnTurnOffVehicleTightAim, &TurnOffVehicleTightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.StopVehicleTightAim
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::StopVehicleTightAim ( )
{
	static UFunction* pFnStopVehicleTightAim = NULL;

	if ( ! pFnStopVehicleTightAim )
		pFnStopVehicleTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67453 ];

	USFXGameModeVehicle_execStopVehicleTightAim_Parms StopVehicleTightAim_Parms;

	this->ProcessEvent ( pFnStopVehicleTightAim, &StopVehicleTightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.VehicleTightAim
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::VehicleTightAim ( )
{
	static UFunction* pFnVehicleTightAim = NULL;

	if ( ! pFnVehicleTightAim )
		pFnVehicleTightAim = (UFunction*) UObject::GObjObjects()->Data[ 67452 ];

	USFXGameModeVehicle_execVehicleTightAim_Parms VehicleTightAim_Parms;

	this->ProcessEvent ( pFnVehicleTightAim, &VehicleTightAim_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.TryExitVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeVehicle::TryExitVehicle ( )
{
	static UFunction* pFnTryExitVehicle = NULL;

	if ( ! pFnTryExitVehicle )
		pFnTryExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 67449 ];

	USFXGameModeVehicle_execTryExitVehicle_Parms TryExitVehicle_Parms;

	this->ProcessEvent ( pFnTryExitVehicle, &TryExitVehicle_Parms, NULL );
};

// Function SFXGame.SFXGameModeVehicle.TryUprightVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeVehicle::TryUprightVehicle ( )
{
	static UFunction* pFnTryUprightVehicle = NULL;

	if ( ! pFnTryUprightVehicle )
		pFnTryUprightVehicle = (UFunction*) UObject::GObjObjects()->Data[ 67446 ];

	USFXGameModeVehicle_execTryUprightVehicle_Parms TryUprightVehicle_Parms;

	this->ProcessEvent ( pFnTryUprightVehicle, &TryUprightVehicle_Parms, NULL );

	return TryUprightVehicle_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeVehicle.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeVehicle::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67435 ];

	USFXGameModeVehicle_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModePowerWheel.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModePowerWheel::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67432 ];

	USFXGameModePowerWheel_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModePowerWheel.ExitPowerWheel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModePowerWheel::ExitPowerWheel ( )
{
	static UFunction* pFnExitPowerWheel = NULL;

	if ( ! pFnExitPowerWheel )
		pFnExitPowerWheel = (UFunction*) UObject::GObjObjects()->Data[ 67431 ];

	USFXGameModePowerWheel_execExitPowerWheel_Parms ExitPowerWheel_Parms;

	this->ProcessEvent ( pFnExitPowerWheel, &ExitPowerWheel_Parms, NULL );
};

// Function SFXGame.SFXGameModePowerWheel.EnableMovement
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModePowerWheel::EnableMovement ( )
{
	static UFunction* pFnEnableMovement = NULL;

	if ( ! pFnEnableMovement )
		pFnEnableMovement = (UFunction*) UObject::GObjObjects()->Data[ 67430 ];

	USFXGameModePowerWheel_execEnableMovement_Parms EnableMovement_Parms;

	this->ProcessEvent ( pFnEnableMovement, &EnableMovement_Parms, NULL );
};

// Function SFXGame.SFXGameModePowerWheel.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModePowerWheel::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67427 ];

	USFXGameModePowerWheel_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModePowerWheel.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModePowerWheel::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67423 ];

	USFXGameModePowerWheel_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeWeaponWheel.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeWeaponWheel::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67488 ];

	USFXGameModeWeaponWheel_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeWeaponWheel.ExitWeaponWheel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeWeaponWheel::ExitWeaponWheel ( )
{
	static UFunction* pFnExitWeaponWheel = NULL;

	if ( ! pFnExitWeaponWheel )
		pFnExitWeaponWheel = (UFunction*) UObject::GObjObjects()->Data[ 67487 ];

	USFXGameModeWeaponWheel_execExitWeaponWheel_Parms ExitWeaponWheel_Parms;

	this->ProcessEvent ( pFnExitWeaponWheel, &ExitWeaponWheel_Parms, NULL );
};

// Function SFXGame.SFXGameModeWeaponWheel.EnableMovement
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USFXGameModeWeaponWheel::EnableMovement ( )
{
	static UFunction* pFnEnableMovement = NULL;

	if ( ! pFnEnableMovement )
		pFnEnableMovement = (UFunction*) UObject::GObjObjects()->Data[ 67486 ];

	USFXGameModeWeaponWheel_execEnableMovement_Parms EnableMovement_Parms;

	this->ProcessEvent ( pFnEnableMovement, &EnableMovement_Parms, NULL );
};

// Function SFXGame.SFXGameModeWeaponWheel.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeWeaponWheel::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67480 ];

	USFXGameModeWeaponWheel_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeWeaponWheel.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModeWeaponWheel::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67476 ];

	USFXGameModeWeaponWheel_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeCommand.ShowMenuGui
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USFXGameModeCommand::ShowMenuGui ( )
{
	static UFunction* pFnShowMenuGui = NULL;

	if ( ! pFnShowMenuGui )
		pFnShowMenuGui = (UFunction*) UObject::GObjObjects()->Data[ 67078 ];

	USFXGameModeCommand_execShowMenuGui_Parms ShowMenuGui_Parms;

	this->ProcessEvent ( pFnShowMenuGui, &ShowMenuGui_Parms, NULL );

	return ShowMenuGui_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeCommand.ExitCommandMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeCommand::ExitCommandMenu ( )
{
	static UFunction* pFnExitCommandMenu = NULL;

	if ( ! pFnExitCommandMenu )
		pFnExitCommandMenu = (UFunction*) UObject::GObjObjects()->Data[ 67077 ];

	USFXGameModeCommand_execExitCommandMenu_Parms ExitCommandMenu_Parms;

	this->ProcessEvent ( pFnExitCommandMenu, &ExitCommandMenu_Parms, NULL );
};

// Function SFXGame.SFXGameModeCommand.DisableCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeCommand::DisableCamera ( )
{
	static UFunction* pFnDisableCamera = NULL;

	if ( ! pFnDisableCamera )
		pFnDisableCamera = (UFunction*) UObject::GObjObjects()->Data[ 67076 ];

	USFXGameModeCommand_execDisableCamera_Parms DisableCamera_Parms;

	this->ProcessEvent ( pFnDisableCamera, &DisableCamera_Parms, NULL );
};

// Function SFXGame.SFXGameModeCommand.EnableCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeCommand::EnableCamera ( )
{
	static UFunction* pFnEnableCamera = NULL;

	if ( ! pFnEnableCamera )
		pFnEnableCamera = (UFunction*) UObject::GObjObjects()->Data[ 67075 ];

	USFXGameModeCommand_execEnableCamera_Parms EnableCamera_Parms;

	this->ProcessEvent ( pFnEnableCamera, &EnableCamera_Parms, NULL );
};

// Function SFXGame.SFXGameModeCommand.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeCommand::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67070 ];

	USFXGameModeCommand_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeCommand.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModeCommand::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67068 ];

	USFXGameModeCommand_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeConversation.SkipConversation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeConversation::SkipConversation ( )
{
	static UFunction* pFnSkipConversation = NULL;

	if ( ! pFnSkipConversation )
		pFnSkipConversation = (UFunction*) UObject::GObjObjects()->Data[ 67099 ];

	USFXGameModeConversation_execSkipConversation_Parms SkipConversation_Parms;

	this->ProcessEvent ( pFnSkipConversation, &SkipConversation_Parms, NULL );
};

// Function SFXGame.SFXGameModeConversation.SelectResponse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeConversation::SelectResponse ( )
{
	static UFunction* pFnSelectResponse = NULL;

	if ( ! pFnSelectResponse )
		pFnSelectResponse = (UFunction*) UObject::GObjObjects()->Data[ 67096 ];

	USFXGameModeConversation_execSelectResponse_Parms SelectResponse_Parms;

	this->ProcessEvent ( pFnSelectResponse, &SelectResponse_Parms, NULL );
};

// Function SFXGame.SFXGameModeConversation.HACK_GetCameraMode
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXCameraMode* USFXGameModeConversation::HACK_GetCameraMode ( )
{
	static UFunction* pFnHACK_GetCameraMode = NULL;

	if ( ! pFnHACK_GetCameraMode )
		pFnHACK_GetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67094 ];

	USFXGameModeConversation_execHACK_GetCameraMode_Parms HACK_GetCameraMode_Parms;

	this->ProcessEvent ( pFnHACK_GetCameraMode, &HACK_GetCameraMode_Parms, NULL );

	return HACK_GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeConversation.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeConversation::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67086 ];

	USFXGameModeConversation_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeConversation.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeConversation::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67085 ];

	USFXGameModeConversation_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeConversation.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModeConversation::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67081 ];

	USFXGameModeConversation_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeCinematic.SkipCinematic
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeCinematic::SkipCinematic ( )
{
	static UFunction* pFnSkipCinematic = NULL;

	if ( ! pFnSkipCinematic )
		pFnSkipCinematic = (UFunction*) UObject::GObjObjects()->Data[ 67059 ];

	USFXGameModeCinematic_execSkipCinematic_Parms SkipCinematic_Parms;

	this->ProcessEvent ( pFnSkipCinematic, &SkipCinematic_Parms, NULL );
};

// Function SFXGame.SFXGameModeCinematic.CinematicFF
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void USFXGameModeCinematic::CinematicFF ( unsigned long bOn )
{
	static UFunction* pFnCinematicFF = NULL;

	if ( ! pFnCinematicFF )
		pFnCinematicFF = (UFunction*) UObject::GObjObjects()->Data[ 67056 ];

	USFXGameModeCinematic_execCinematicFF_Parms CinematicFF_Parms;
	CinematicFF_Parms.bOn = bOn;

	this->ProcessEvent ( pFnCinematicFF, &CinematicFF_Parms, NULL );
};

// Function SFXGame.SFXGameModeCinematic.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeCinematic::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67044 ];

	USFXGameModeCinematic_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeGUI.TryEnterPhotoMode
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeGUI::TryEnterPhotoMode ( )
{
	static UFunction* pFnTryEnterPhotoMode = NULL;

	if ( ! pFnTryEnterPhotoMode )
		pFnTryEnterPhotoMode = (UFunction*) UObject::GObjObjects()->Data[ 67238 ];

	USFXGameModeGUI_execTryEnterPhotoMode_Parms TryEnterPhotoMode_Parms;

	this->ProcessEvent ( pFnTryEnterPhotoMode, &TryEnterPhotoMode_Parms, NULL );
};

// Function SFXGame.SFXGameModeGUI.DeactivateSpecifier
// [0x00020002] 
// Parameters infos:
// struct FName                   ModeSpecifier                  ( CPF_Parm )

void USFXGameModeGUI::DeactivateSpecifier ( struct FName ModeSpecifier )
{
	static UFunction* pFnDeactivateSpecifier = NULL;

	if ( ! pFnDeactivateSpecifier )
		pFnDeactivateSpecifier = (UFunction*) UObject::GObjObjects()->Data[ 67236 ];

	USFXGameModeGUI_execDeactivateSpecifier_Parms DeactivateSpecifier_Parms;
	memcpy ( &DeactivateSpecifier_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnDeactivateSpecifier, &DeactivateSpecifier_Parms, NULL );
};

// Function SFXGame.SFXGameModeGUI.ActivateSpecifier
// [0x00020002] 
// Parameters infos:
// struct FName                   ModeSpecifier                  ( CPF_Parm )

void USFXGameModeGUI::ActivateSpecifier ( struct FName ModeSpecifier )
{
	static UFunction* pFnActivateSpecifier = NULL;

	if ( ! pFnActivateSpecifier )
		pFnActivateSpecifier = (UFunction*) UObject::GObjObjects()->Data[ 67234 ];

	USFXGameModeGUI_execActivateSpecifier_Parms ActivateSpecifier_Parms;
	memcpy ( &ActivateSpecifier_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnActivateSpecifier, &ActivateSpecifier_Parms, NULL );
};

// Function SFXGame.SFXGameModeGUI.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeGUI::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67233 ];

	USFXGameModeGUI_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeGUI.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeGUI::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67225 ];

	USFXGameModeGUI_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeMovie.SkipMovie
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeMovie::SkipMovie ( )
{
	static UFunction* pFnSkipMovie = NULL;

	if ( ! pFnSkipMovie )
		pFnSkipMovie = (UFunction*) UObject::GObjObjects()->Data[ 67263 ];

	USFXGameModeMovie_execSkipMovie_Parms SkipMovie_Parms;

	this->ProcessEvent ( pFnSkipMovie, &SkipMovie_Parms, NULL );
};

// Function SFXGame.SFXGameModeMovie.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeMovie::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67262 ];

	USFXGameModeMovie_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeMovie.ActivateSpecifier
// [0x00020002] 
// Parameters infos:
// struct FName                   ModeSpecifier                  ( CPF_Parm )

void USFXGameModeMovie::ActivateSpecifier ( struct FName ModeSpecifier )
{
	static UFunction* pFnActivateSpecifier = NULL;

	if ( ! pFnActivateSpecifier )
		pFnActivateSpecifier = (UFunction*) UObject::GObjObjects()->Data[ 67259 ];

	USFXGameModeMovie_execActivateSpecifier_Parms ActivateSpecifier_Parms;
	memcpy ( &ActivateSpecifier_Parms.ModeSpecifier, &ModeSpecifier, 0x8 );

	this->ProcessEvent ( pFnActivateSpecifier, &ActivateSpecifier_Parms, NULL );
};

// Function SFXGame.SFXGameModeMovie.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeMovie::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67251 ];

	USFXGameModeMovie_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeGalaxy.HACK_GetCameraMode
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USFXCameraMode* USFXGameModeGalaxy::HACK_GetCameraMode ( )
{
	static UFunction* pFnHACK_GetCameraMode = NULL;

	if ( ! pFnHACK_GetCameraMode )
		pFnHACK_GetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67218 ];

	USFXGameModeGalaxy_execHACK_GetCameraMode_Parms HACK_GetCameraMode_Parms;

	this->ProcessEvent ( pFnHACK_GetCameraMode, &HACK_GetCameraMode_Parms, NULL );

	return HACK_GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeGalaxy.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeGalaxy::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67210 ];

	USFXGameModeGalaxy_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXGameModeGalaxy.Deactivated
// [0x00020002] 
// Parameters infos:

void USFXGameModeGalaxy::Deactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 67209 ];

	USFXGameModeGalaxy_execDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function SFXGame.SFXGameModeGalaxy.Activated
// [0x00020002] 
// Parameters infos:

void USFXGameModeGalaxy::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67205 ];

	USFXGameModeGalaxy_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXGameModeMinigame.MinigameButton
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void USFXGameModeMinigame::MinigameButton ( int Index )
{
	static UFunction* pFnMinigameButton = NULL;

	if ( ! pFnMinigameButton )
		pFnMinigameButton = (UFunction*) UObject::GObjObjects()->Data[ 67246 ];

	USFXGameModeMinigame_execMinigameButton_Parms MinigameButton_Parms;
	MinigameButton_Parms.Index = Index;

	this->ProcessEvent ( pFnMinigameButton, &MinigameButton_Parms, NULL );
};

// Function SFXGame.SFXGameModeMinigame.ExitMinigame
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USFXGameModeMinigame::ExitMinigame ( )
{
	static UFunction* pFnExitMinigame = NULL;

	if ( ! pFnExitMinigame )
		pFnExitMinigame = (UFunction*) UObject::GObjObjects()->Data[ 67243 ];

	USFXGameModeMinigame_execExitMinigame_Parms ExitMinigame_Parms;

	this->ProcessEvent ( pFnExitMinigame, &ExitMinigame_Parms, NULL );
};

// Function SFXGame.SFXGameModeFlyCam.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXGameModeFlyCam::GetCameraMode ( class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 67196 ];

	USFXGameModeFlyCam_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_PCPartySelection.HandleButtonRefresh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  usingGamepad                   ( CPF_Parm )

void UBioSFHandler_PCPartySelection::eventHandleButtonRefresh ( unsigned long usingGamepad )
{
	static UFunction* pFnHandleButtonRefresh = NULL;

	if ( ! pFnHandleButtonRefresh )
		pFnHandleButtonRefresh = (UFunction*) UObject::GObjObjects()->Data[ 63684 ];

	UBioSFHandler_PCPartySelection_eventHandleButtonRefresh_Parms HandleButtonRefresh_Parms;
	HandleButtonRefresh_Parms.usingGamepad = usingGamepad;

	this->ProcessEvent ( pFnHandleButtonRefresh, &HandleButtonRefresh_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCPartySelection.Update
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void UBioSFHandler_PCPartySelection::Update ( float fDeltaT )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 63682 ];

	UBioSFHandler_PCPartySelection_execUpdate_Parms Update_Parms;
	Update_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function SFXGame.BioSFHandler_PCPartySelection.OnPanelAdded
// [0x00020002] 
// Parameters infos:

void UBioSFHandler_PCPartySelection::OnPanelAdded ( )
{
	static UFunction* pFnOnPanelAdded = NULL;

	if ( ! pFnOnPanelAdded )
		pFnOnPanelAdded = (UFunction*) UObject::GObjObjects()->Data[ 63680 ];

	UBioSFHandler_PCPartySelection_execOnPanelAdded_Parms OnPanelAdded_Parms;

	this->ProcessEvent ( pFnOnPanelAdded, &OnPanelAdded_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SelectCharacter.UpdateCharacterData
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UBioSFHandler_SelectCharacter::UpdateCharacterData ( )
{
	static UFunction* pFnUpdateCharacterData = NULL;

	if ( ! pFnUpdateCharacterData )
		pFnUpdateCharacterData = (UFunction*) UObject::GObjObjects()->Data[ 63843 ];

	UBioSFHandler_SelectCharacter_execUpdateCharacterData_Parms UpdateCharacterData_Parms;

	this->ProcessEvent ( pFnUpdateCharacterData, &UpdateCharacterData_Parms, NULL );
};

// Function SFXGame.BioSFHandler_SelectCharacter.DoCharactersExist
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UBioSFHandler_SelectCharacter::DoCharactersExist ( )
{
	static UFunction* pFnDoCharactersExist = NULL;

	if ( ! pFnDoCharactersExist )
		pFnDoCharactersExist = (UFunction*) UObject::GObjObjects()->Data[ 63844 ];

	UBioSFHandler_SelectCharacter_execDoCharactersExist_Parms DoCharactersExist_Parms;

	this->ProcessEvent ( pFnDoCharactersExist, &DoCharactersExist_Parms, NULL );

	return DoCharactersExist_Parms.ReturnValue;
};

// Function SFXGame.BioSFHandler_SelectCharacter.HandleEvent
// [0x00420002] 
// Parameters infos:
// unsigned char                  nCommand                       ( CPF_Parm )
// struct TArray<struct FString>  lstArguments                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UBioSFHandler_SelectCharacter::HandleEvent ( unsigned char nCommand, struct TArray<struct FString>* lstArguments )
{
	static UFunction* pFnHandleEvent = NULL;

	if ( ! pFnHandleEvent )
		pFnHandleEvent = (UFunction*) UObject::GObjObjects()->Data[ 63837 ];

	UBioSFHandler_SelectCharacter_execHandleEvent_Parms HandleEvent_Parms;
	HandleEvent_Parms.nCommand = nCommand;

	this->ProcessEvent ( pFnHandleEvent, &HandleEvent_Parms, NULL );

	if ( lstArguments )
		memcpy ( lstArguments, &HandleEvent_Parms.lstArguments, 0x10 );
};

// Function SFXGame.BioSkillMap.IsSkillInMap
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Skill                          ( CPF_Parm )

bool UBioSkillMap::IsSkillInMap ( struct FName Skill )
{
	static UFunction* pFnIsSkillInMap = NULL;

	if ( ! pFnIsSkillInMap )
		pFnIsSkillInMap = (UFunction*) UObject::GObjObjects()->Data[ 64603 ];

	UBioSkillMap_execIsSkillInMap_Parms IsSkillInMap_Parms;
	memcpy ( &IsSkillInMap_Parms.Skill, &Skill, 0x8 );

	this->ProcessEvent ( pFnIsSkillInMap, &IsSkillInMap_Parms, NULL );

	return IsSkillInMap_Parms.ReturnValue;
};

// Function SFXGame.BioSkillMap.GetSkill
// [0x00022002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Num                            ( CPF_Parm )

struct FName UBioSkillMap::GetSkill ( int Num )
{
	static UFunction* pFnGetSkill = NULL;

	if ( ! pFnGetSkill )
		pFnGetSkill = (UFunction*) UObject::GObjObjects()->Data[ 64600 ];

	UBioSkillMap_execGetSkill_Parms GetSkill_Parms;
	GetSkill_Parms.Num = Num;

	this->ProcessEvent ( pFnGetSkill, &GetSkill_Parms, NULL );

	return GetSkill_Parms.ReturnValue;
};

// Function SFXGame.BioTriggerVolume.BioBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ABioTriggerVolume::eventBioBeginPlay ( )
{
	static UFunction* pFnBioBeginPlay = NULL;

	if ( ! pFnBioBeginPlay )
		pFnBioBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 65114 ];

	ABioTriggerVolume_eventBioBeginPlay_Parms BioBeginPlay_Parms;

	this->ProcessEvent ( pFnBioBeginPlay, &BioBeginPlay_Parms, NULL );
};

// Function SFXGame.BioTriggerVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ABioTriggerVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65112 ];

	ABioTriggerVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SFXGame.BioTriggerVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ABioTriggerVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 65105 ];

	ABioTriggerVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SFXGame.BioWorldInfoTick.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaT                        ( CPF_Parm )

void ABioWorldInfoTick::Tick ( float fDeltaT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66262 ];

	ABioWorldInfoTick_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaT = fDeltaT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.BioWp_ChangeRoute.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioWp_ChangeRoute::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 66332 ];

	ABioWp_ChangeRoute_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.BioWp_Delay.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioWp_Delay::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 66350 ];

	ABioWp_Delay_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.BioWp_PlayAnim.OnCreatureReachedWayPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PathFindingCreature            ( CPF_Parm )

bool ABioWp_PlayAnim::OnCreatureReachedWayPoint ( class APawn* PathFindingCreature )
{
	static UFunction* pFnOnCreatureReachedWayPoint = NULL;

	if ( ! pFnOnCreatureReachedWayPoint )
		pFnOnCreatureReachedWayPoint = (UFunction*) UObject::GObjObjects()->Data[ 66398 ];

	ABioWp_PlayAnim_execOnCreatureReachedWayPoint_Parms OnCreatureReachedWayPoint_Parms;
	OnCreatureReachedWayPoint_Parms.PathFindingCreature = PathFindingCreature;

	this->ProcessEvent ( pFnOnCreatureReachedWayPoint, &OnCreatureReachedWayPoint_Parms, NULL );

	return OnCreatureReachedWayPoint_Parms.ReturnValue;
};

// Function SFXGame.SFXAnimNotify_DisableProcEyeBlink.Notify
// [0x00020002] 
// Parameters infos:
// class AActor*                  Owner                          ( CPF_Parm )
// class UAnimNodeSequence*       Sequence                       ( CPF_Parm )

void USFXAnimNotify_DisableProcEyeBlink::Notify ( class AActor* Owner, class UAnimNodeSequence* Sequence )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 66430 ];

	USFXAnimNotify_DisableProcEyeBlink_execNotify_Parms Notify_Parms;
	Notify_Parms.Owner = Owner;
	Notify_Parms.Sequence = Sequence;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function SFXGame.SFXAnimNotify_ScreenShake.Notify
// [0x00020002] 
// Parameters infos:
// class AActor*                  Owner                          ( CPF_Parm )
// class UAnimNodeSequence*       Sequence                       ( CPF_Parm )

void USFXAnimNotify_ScreenShake::Notify ( class AActor* Owner, class UAnimNodeSequence* Sequence )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 66441 ];

	USFXAnimNotify_ScreenShake_execNotify_Parms Notify_Parms;
	Notify_Parms.Owner = Owner;
	Notify_Parms.Sequence = Sequence;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Combat.MakeInactive
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Combat::MakeInactive ( )
{
	static UFunction* pFnMakeInactive = NULL;

	if ( ! pFnMakeInactive )
		pFnMakeInactive = (UFunction*) UObject::GObjObjects()->Data[ 66454 ];

	USFXCameraMode_Combat_execMakeInactive_Parms MakeInactive_Parms;

	this->ProcessEvent ( pFnMakeInactive, &MakeInactive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Combat.MakeActive
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Combat::MakeActive ( )
{
	static UFunction* pFnMakeActive = NULL;

	if ( ! pFnMakeActive )
		pFnMakeActive = (UFunction*) UObject::GObjObjects()->Data[ 66451 ];

	USFXCameraMode_Combat_execMakeActive_Parms MakeActive_Parms;

	this->ProcessEvent ( pFnMakeActive, &MakeActive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_CombatStorm.ProcessViewRotation
// [0x00420000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )

void USFXCameraMode_CombatStorm::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 66470 ];

	USFXCameraMode_CombatStorm_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( OutViewRotation )
		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );

	if ( OutDeltaRot )
		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
};

// Function SFXGame.SFXCameraMode_CombatStorm.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_CombatStorm::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66468 ];

	USFXCameraMode_CombatStorm_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_CombatStorm.SetTarget
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_CombatStorm::SetTarget ( )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 66462 ];

	USFXCameraMode_CombatStorm_execSetTarget_Parms SetTarget_Parms;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_CombatStorm.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_CombatStorm::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66460 ];

	USFXCameraMode_CombatStorm_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_ExploreStorm.ProcessViewRotation
// [0x00420000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )

void USFXCameraMode_ExploreStorm::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 66497 ];

	USFXCameraMode_ExploreStorm_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( OutViewRotation )
		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );

	if ( OutDeltaRot )
		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
};

// Function SFXGame.SFXCameraMode_ExploreStorm.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_ExploreStorm::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66495 ];

	USFXCameraMode_ExploreStorm_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_ExploreStorm.SetTarget
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_ExploreStorm::SetTarget ( )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 66489 ];

	USFXCameraMode_ExploreStorm_execSetTarget_Parms SetTarget_Parms;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_ExploreStorm.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_ExploreStorm::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66487 ];

	USFXCameraMode_ExploreStorm_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_PhotoFree.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_PhotoFree::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66603 ];

	USFXCameraMode_PhotoFree_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_PhotoFree.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_PhotoFree::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66599 ];

	USFXCameraMode_PhotoFree_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_TightAim.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraMode_TightAim::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66620 ];

	USFXCameraMode_TightAim_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_TightAim.ModifyPostProcessSettings
// [0x00420002] 
// Parameters infos:
// struct FPostProcessSettings    PPSettings                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USFXCameraMode_TightAim::ModifyPostProcessSettings ( struct FPostProcessSettings* PPSettings )
{
	static UFunction* pFnModifyPostProcessSettings = NULL;

	if ( ! pFnModifyPostProcessSettings )
		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 66616 ];

	USFXCameraMode_TightAim_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;

	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );

	if ( PPSettings )
		memcpy ( PPSettings, &ModifyPostProcessSettings_Parms.PPSettings, 0xE0 );
};

// Function SFXGame.SFXCameraMode_Vehicle.MakeInactive
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Vehicle::MakeInactive ( )
{
	static UFunction* pFnMakeInactive = NULL;

	if ( ! pFnMakeInactive )
		pFnMakeInactive = (UFunction*) UObject::GObjObjects()->Data[ 66655 ];

	USFXCameraMode_Vehicle_execMakeInactive_Parms MakeInactive_Parms;

	this->ProcessEvent ( pFnMakeInactive, &MakeInactive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Vehicle.MakeActive
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Vehicle::MakeActive ( )
{
	static UFunction* pFnMakeActive = NULL;

	if ( ! pFnMakeActive )
		pFnMakeActive = (UFunction*) UObject::GObjObjects()->Data[ 66652 ];

	USFXCameraMode_Vehicle_execMakeActive_Parms MakeActive_Parms;

	this->ProcessEvent ( pFnMakeActive, &MakeActive_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Vehicle.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USFXCameraMode_Vehicle::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66645 ];

	USFXCameraMode_Vehicle_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraMode_Vehicle.Initialize
// [0x00020002] 
// Parameters infos:

void USFXCameraMode_Vehicle::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66642 ];

	USFXCameraMode_Vehicle_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_ZoomSnap.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraTransition_ZoomSnap::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66742 ];

	USFXCameraTransition_ZoomSnap_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_ZoomSnap.MakeInactive
// [0x00020002] 
// Parameters infos:

void USFXCameraTransition_ZoomSnap::MakeInactive ( )
{
	static UFunction* pFnMakeInactive = NULL;

	if ( ! pFnMakeInactive )
		pFnMakeInactive = (UFunction*) UObject::GObjObjects()->Data[ 66739 ];

	USFXCameraTransition_ZoomSnap_execMakeInactive_Parms MakeInactive_Parms;

	this->ProcessEvent ( pFnMakeInactive, &MakeInactive_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_ZoomSnap.InitializeTransition
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          FromMode                       ( CPF_Parm )
// class USFXCameraMode*          ToMode                         ( CPF_Parm )
// float                          Time                           ( CPF_Parm )
// unsigned long                  PreserveTarget                 ( CPF_Parm )

void USFXCameraTransition_ZoomSnap::InitializeTransition ( class USFXCameraMode* FromMode, class USFXCameraMode* ToMode, float Time, unsigned long PreserveTarget )
{
	static UFunction* pFnInitializeTransition = NULL;

	if ( ! pFnInitializeTransition )
		pFnInitializeTransition = (UFunction*) UObject::GObjObjects()->Data[ 66731 ];

	USFXCameraTransition_ZoomSnap_execInitializeTransition_Parms InitializeTransition_Parms;
	InitializeTransition_Parms.FromMode = FromMode;
	InitializeTransition_Parms.ToMode = ToMode;
	InitializeTransition_Parms.Time = Time;
	InitializeTransition_Parms.PreserveTarget = PreserveTarget;

	this->ProcessEvent ( pFnInitializeTransition, &InitializeTransition_Parms, NULL );
};

// Function SFXGame.SFXCameraSetup.GetCoverCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    PC                             ( CPF_Parm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXCameraSetup::GetCoverCameraMode ( class ABioPlayerController* PC, class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCoverCameraMode = NULL;

	if ( ! pFnGetCoverCameraMode )
		pFnGetCoverCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 66795 ];

	USFXCameraSetup_execGetCoverCameraMode_Parms GetCoverCameraMode_Parms;
	GetCoverCameraMode_Parms.PC = PC;
	GetCoverCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCoverCameraMode, &GetCoverCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCoverCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCoverCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCoverCameraMode_Parms.Transition;

	return GetCoverCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraSetup.PowerTriggeredLean
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPawn*                ChkPawn                        ( CPF_Parm )

bool USFXCameraSetup::PowerTriggeredLean ( class ABioPawn* ChkPawn )
{
	static UFunction* pFnPowerTriggeredLean = NULL;

	if ( ! pFnPowerTriggeredLean )
		pFnPowerTriggeredLean = (UFunction*) UObject::GObjObjects()->Data[ 66791 ];

	USFXCameraSetup_execPowerTriggeredLean_Parms PowerTriggeredLean_Parms;
	PowerTriggeredLean_Parms.ChkPawn = ChkPawn;

	this->ProcessEvent ( pFnPowerTriggeredLean, &PowerTriggeredLean_Parms, NULL );

	return PowerTriggeredLean_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraSetup.GetCombatCamera
// [0x00420002] 
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// class USFXCameraMode*          NewCameraMode                  ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )

void USFXCameraSetup::GetCombatCamera ( class ABioPlayerController* PC, class USFXCameraMode* OldCameraMode, class USFXCameraMode** NewCameraMode, float* TransitionTime )
{
	static UFunction* pFnGetCombatCamera = NULL;

	if ( ! pFnGetCombatCamera )
		pFnGetCombatCamera = (UFunction*) UObject::GObjObjects()->Data[ 66777 ];

	USFXCameraSetup_execGetCombatCamera_Parms GetCombatCamera_Parms;
	GetCombatCamera_Parms.PC = PC;
	GetCombatCamera_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCombatCamera, &GetCombatCamera_Parms, NULL );

	if ( NewCameraMode )
		*NewCameraMode = GetCombatCamera_Parms.NewCameraMode;

	if ( TransitionTime )
		*TransitionTime = GetCombatCamera_Parms.TransitionTime;
};

// Function SFXGame.SFXCameraSetup.GetExploreCameraMode
// [0x00420002] 
// Parameters infos:
// class ABioPlayerController*    PC                             ( CPF_Parm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// class USFXCameraMode*          NewCameraMode                  ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )

void USFXCameraSetup::GetExploreCameraMode ( class ABioPlayerController* PC, class USFXCameraMode* OldCameraMode, class USFXCameraMode** NewCameraMode, float* TransitionTime )
{
	static UFunction* pFnGetExploreCameraMode = NULL;

	if ( ! pFnGetExploreCameraMode )
		pFnGetExploreCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 66765 ];

	USFXCameraSetup_execGetExploreCameraMode_Parms GetExploreCameraMode_Parms;
	GetExploreCameraMode_Parms.PC = PC;
	GetExploreCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetExploreCameraMode, &GetExploreCameraMode_Parms, NULL );

	if ( NewCameraMode )
		*NewCameraMode = GetExploreCameraMode_Parms.NewCameraMode;

	if ( TransitionTime )
		*TransitionTime = GetExploreCameraMode_Parms.TransitionTime;
};

// Function SFXGame.SFXCameraSetup.GetCameraMode
// [0x00420002] 
// Parameters infos:
// class USFXCameraMode*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ABioPlayerController*    PC                             ( CPF_Parm )
// class USFXCameraMode*          OldCameraMode                  ( CPF_Parm )
// int                            PreserveTarget                 ( CPF_Parm | CPF_OutParm )
// float                          TransitionTime                 ( CPF_Parm | CPF_OutParm )
// class USFXCameraMode_Interpolate* Transition                     ( CPF_Parm | CPF_OutParm )

class USFXCameraMode* USFXCameraSetup::GetCameraMode ( class ABioPlayerController* PC, class USFXCameraMode* OldCameraMode, int* PreserveTarget, float* TransitionTime, class USFXCameraMode_Interpolate** Transition )
{
	static UFunction* pFnGetCameraMode = NULL;

	if ( ! pFnGetCameraMode )
		pFnGetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 66750 ];

	USFXCameraSetup_execGetCameraMode_Parms GetCameraMode_Parms;
	GetCameraMode_Parms.PC = PC;
	GetCameraMode_Parms.OldCameraMode = OldCameraMode;

	this->ProcessEvent ( pFnGetCameraMode, &GetCameraMode_Parms, NULL );

	if ( PreserveTarget )
		*PreserveTarget = GetCameraMode_Parms.PreserveTarget;

	if ( TransitionTime )
		*TransitionTime = GetCameraMode_Parms.TransitionTime;

	if ( Transition )
		*Transition = GetCameraMode_Parms.Transition;

	return GetCameraMode_Parms.ReturnValue;
};

// Function SFXGame.SFXCameraTransition_FaceTarget.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraTransition_FaceTarget::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66875 ];

	USFXCameraTransition_FaceTarget_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_FaceTarget.InitializeTransition
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          FromMode                       ( CPF_Parm )
// class USFXCameraMode*          ToMode                         ( CPF_Parm )
// float                          Time                           ( CPF_Parm )
// unsigned long                  PreserveTarget                 ( CPF_Parm )

void USFXCameraTransition_FaceTarget::InitializeTransition ( class USFXCameraMode* FromMode, class USFXCameraMode* ToMode, float Time, unsigned long PreserveTarget )
{
	static UFunction* pFnInitializeTransition = NULL;

	if ( ! pFnInitializeTransition )
		pFnInitializeTransition = (UFunction*) UObject::GObjObjects()->Data[ 66867 ];

	USFXCameraTransition_FaceTarget_execInitializeTransition_Parms InitializeTransition_Parms;
	InitializeTransition_Parms.FromMode = FromMode;
	InitializeTransition_Parms.ToMode = ToMode;
	InitializeTransition_Parms.Time = Time;
	InitializeTransition_Parms.PreserveTarget = PreserveTarget;

	this->ProcessEvent ( pFnInitializeTransition, &InitializeTransition_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_GalaxyMap.Tick
// [0x00020002] 
// Parameters infos:
// float                          TimeDelta                      ( CPF_Parm )

void USFXCameraTransition_GalaxyMap::Tick ( float TimeDelta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66886 ];

	USFXCameraTransition_GalaxyMap_execTick_Parms Tick_Parms;
	Tick_Parms.TimeDelta = TimeDelta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SFXGame.SFXCameraTransition_GalaxyMap.InitializeTransition
// [0x00020002] 
// Parameters infos:
// class USFXCameraMode*          FromMode                       ( CPF_Parm )
// class USFXCameraMode*          ToMode                         ( CPF_Parm )
// float                          Time                           ( CPF_Parm )
// unsigned long                  PreserveTarget                 ( CPF_Parm )

void USFXCameraTransition_GalaxyMap::InitializeTransition ( class USFXCameraMode* FromMode, class USFXCameraMode* ToMode, float Time, unsigned long PreserveTarget )
{
	static UFunction* pFnInitializeTransition = NULL;

	if ( ! pFnInitializeTransition )
		pFnInitializeTransition = (UFunction*) UObject::GObjObjects()->Data[ 66881 ];

	USFXCameraTransition_GalaxyMap_execInitializeTransition_Parms InitializeTransition_Parms;
	InitializeTransition_Parms.FromMode = FromMode;
	InitializeTransition_Parms.ToMode = ToMode;
	InitializeTransition_Parms.Time = Time;
	InitializeTransition_Parms.PreserveTarget = PreserveTarget;

	this->ProcessEvent ( pFnInitializeTransition, &InitializeTransition_Parms, NULL );
};

// Function SFXGame.SFXSeqAct_FindTerrainHeight.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USFXSeqAct_FindTerrainHeight::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 67791 ];

	USFXSeqAct_FindTerrainHeight_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function SFXGame.SFXSeqAct_FindTerrainHeight.Activated
// [0x00020002] 
// Parameters infos:

void USFXSeqAct_FindTerrainHeight::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67778 ];

	USFXSeqAct_FindTerrainHeight_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXSeqAct_IsSquadInactive.Activated
// [0x00020002] 
// Parameters infos:

void USFXSeqAct_IsSquadInactive::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67796 ];

	USFXSeqAct_IsSquadInactive_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function SFXGame.SFXSeqAct_TextureBlockConfig.Activated
// [0x00020002] 
// Parameters infos:

void USFXSeqAct_TextureBlockConfig::Activated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 67800 ];

	USFXSeqAct_TextureBlockConfig_execActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif